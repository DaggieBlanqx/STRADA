var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AboutComponent.html",[0,0.555,1,1.188]],["body/components/AboutComponent.html",[0,1.01,1,2.079,2,0.184,3,0.206,4,1.515,5,1.515,6,1.196,7,0.109,8,4.529,9,1.43,10,2.404,11,1.515,12,2.829,13,2.405,14,2.226,15,5.981,16,2.226,17,5.981,18,0.254,19,0.638,20,6.635,21,1.43,22,2.557,23,1.309,24,0.879,25,5.981,26,4.529,27,0.744,28,0.013,29,1.294,30,1.14,31,0.344,32,0.916,33,0.798,34,2.59,35,5.217,36,0.254,37,0.744,38,0.109,39,0.021,40,4.819,41,4.714,42,2.49,43,4.339,44,1.806,45,2.697,46,1.294,47,4.714,48,2.309,49,3.951,50,3.951,51,4.039,52,4.039,53,4.714,54,5.217,55,5.217,56,3.951,57,5.217,58,3.072,59,5.217,60,2.936,61,5.981,62,4.339,63,5.217,64,3.659,65,5.981,66,5.217,67,5.981,68,5.217,69,1.083,70,2.001,71,1.58,72,1.933,73,2.383,74,1.515,75,3.57,76,3.57,77,3.57,78,4.529,79,0.88,80,1.515,81,1.367,82,1.515,83,1.367,84,1.855,85,1.013,86,1.515,87,1.367,88,1.713,89,1.515,90,1.367,91,1.464,92,1.515,93,1.367,94,1.515,95,1.367,96,1.415,97,2.001,98,1.322,99,1.515,100,1.367,101,1.515,102,1.367,103,1.367,104,1.515,105,1.515,106,1.367,107,1.515,108,1.322,109,1.515,110,1.367,111,1.196,112,2.001,113,1.367,114,1.367,115,1.367,116,1.515,117,1.367,118,1.515,119,1.322,120,1.515,121,1.322,122,1.515,123,1.367,124,1.515,125,1.367,126,1.515,127,0.009,128,0.009]],["title/components/AppComponent.html",[0,0.555,81,1.229]],["body/components/AppComponent.html",[0,1.06,1,1.544,2,0.203,3,0.163,4,1.769,5,1.769,6,1.397,7,0.127,11,1.769,12,2.862,13,2.475,14,2.458,16,2.458,28,0.013,36,0.297,37,0.868,38,0.127,39,0.024,40,4.186,69,1.264,70,2.21,71,1.745,72,2.135,73,2.525,74,1.769,79,0.973,80,1.769,81,2.279,82,1.769,83,1.596,84,1.922,85,1.183,86,1.769,87,1.596,88,1.797,89,1.769,90,1.596,91,1.709,92,1.769,93,1.596,94,1.769,95,1.596,96,1.651,97,2.21,98,1.544,99,1.769,100,1.596,101,1.769,102,1.596,103,1.596,104,1.769,105,1.769,106,1.596,107,1.769,108,1.544,109,1.769,110,1.596,111,1.397,112,2.21,113,1.596,114,1.596,115,1.596,116,1.769,117,1.596,118,1.769,119,1.544,120,1.769,121,1.544,122,1.769,123,1.596,124,1.769,125,1.596,126,1.769,127,0.01,128,0.01,129,5.288,130,6.607,131,6.607,132,6.607]],["title/modules/AppModule.html",[133,1.188,134,2.953]],["body/modules/AppModule.html",[1,2.247,2,0.145,3,0.145,7,0.113,13,1.427,28,0.013,36,0.472,37,0.776,38,0.147,39,0.022,69,1.13,81,2.48,98,2.247,108,2.247,119,2.247,127,0.009,128,0.009,133,1.796,134,6.188,135,2.321,136,3.683,137,3.683,138,2.961,139,4.123,140,4.123,141,4.123,142,4.123,143,5.197,144,5.197,145,5.197,146,5.197,147,4.488,148,5.197,149,2.891,150,1.168,151,2.428,152,4.727,153,3.02,154,6.151,155,6.151,156,4.848,157,3.429,158,6.151,159,4.727,160,3.726,161,1.291,162,4.123,163,4.123,164,4.727,165,4.123,166,4.123,167,4.123,168,4.123,169,4.727,170,4.727,171,4.727,172,4.727,173,5.366,174,1.968,175,4.727,176,4.727,177,4.727,178,4.727,179,2.678,180,1.759]],["title/classes/AppPreloadingStrategy.html",[39,0.019,181,3.208]],["body/classes/AppPreloadingStrategy.html",[2,0.184,3,0.184,7,0.143,9,1.703,18,0.336,21,1.703,24,0.785,27,1.17,28,0.013,31,0.454,36,0.4,38,0.143,39,0.033,79,0.88,127,0.011,128,0.011,181,5.614,182,5.614,183,6.869,184,5.98,185,6.635,186,7.122,187,4.333,188,7.874,189,3.907,190,5.98,191,0.88,192,0.88,193,3.167,194,3.222,195,2.225,196,5.98,197,5.98,198,3.222]],["title/modules/AppRoutingModule.html",[133,1.188,143,2.749]],["body/modules/AppRoutingModule.html",[0,1.05,1,1.997,2,0.172,3,0.172,7,0.134,13,1.688,28,0.013,36,0.461,37,0.918,38,0.164,39,0.026,44,1.688,46,1.21,98,1.997,108,1.997,119,1.997,127,0.01,128,0.01,133,1.632,138,2.421,143,4.618,153,3.358,165,4.878,166,4.878,167,4.878,168,4.878,181,5.824,182,4.408,183,5.966,185,4.878,194,3.012,199,4.878,200,4.961,201,5.592,202,5.592,203,3.14,204,6.839,205,6.445,206,4.878,207,4.408,208,5.592,209,5.592,210,2.081,211,4.057,212,4.408]],["title/classes/BaseComponent.html",[39,0.019,213,1.913]],["body/classes/BaseComponent.html",[0,1.078,2,0.16,3,0.16,7,0.125,9,1.566,10,2.57,18,0.293,19,0.699,21,1.566,22,2.696,24,1.036,27,1.271,28,0.013,29,1.782,31,0.396,32,1.055,33,0.919,36,0.368,37,0.857,38,0.125,39,0.035,85,1.465,88,1.515,127,0.01,128,0.01,195,1.941,213,3.079,214,5.215,215,1.574,216,8.015,217,3.215,218,5.644,219,3.713,220,3.531,221,3.687,222,3.687,223,3.687,224,5.215,225,5.215,226,5.215,227,5.215,228,3.712,229,2.193,230,3.687,231,5.215,232,5.215,233,2.836,234,4.11,235,4.11]],["title/interfaces/CanComponentDeactivate.html",[236,0.743,237,2.953]],["body/interfaces/CanComponentDeactivate.html",[2,0.184,3,0.184,7,0.143,9,1.428,18,0.335,19,0.759,27,0.981,28,0.013,31,0.454,36,0.427,37,0.981,38,0.171,39,0.028,127,0.011,128,0.011,180,2.222,189,3.655,193,3.165,194,3.216,195,2.222,236,1.299,237,5.514,238,5.209,239,4.032,240,5.209,241,5.918,242,2.648,243,6.207,244,2.009,245,4.032,246,5.209,247,6.207]],["title/injectables/CanDeactivateGuard.html",[242,1.515,245,2.749]],["body/injectables/CanDeactivateGuard.html",[0,0.796,2,0.18,3,0.18,7,0.14,9,1.395,18,0.328,21,1.678,24,0.766,27,1.152,28,0.013,31,0.443,36,0.423,37,0.958,38,0.168,39,0.027,79,0.859,127,0.011,128,0.011,180,2.171,191,0.859,192,0.859,193,3.251,194,3.142,195,2.171,236,1.065,237,5.665,238,6.121,239,4.738,240,5.088,241,5.796,242,2.8,243,6.565,244,2.125,245,4.738,246,6.121,247,6.121,248,5.833]],["title/components/ChangeOfConditionsComponent.html",[0,0.555,83,1.229]],["body/components/ChangeOfConditionsComponent.html",[0,0.934,1,0.855,2,0.135,3,0.09,4,0.98,5,0.98,6,0.774,7,0.07,9,1.051,10,1.894,11,0.98,12,2.709,13,2.066,14,1.636,16,1.636,18,0.37,19,0.469,21,1.051,22,2.456,23,0.859,24,1.04,27,1.275,28,0.013,29,1.65,30,1.165,31,0.535,32,0.889,33,1.357,36,0.428,37,0.481,38,0.07,39,0.014,46,0.951,48,1.697,69,0.7,70,1.47,71,1.161,72,1.421,73,1.962,74,0.98,79,0.971,80,0.98,81,0.884,82,0.98,83,1.77,84,1.803,85,1.64,86,0.98,87,0.884,88,1.526,89,0.98,90,0.884,91,0.947,92,0.98,93,0.884,94,0.98,95,0.884,96,0.915,97,1.47,98,0.855,99,0.98,100,0.884,101,0.98,102,0.884,103,0.884,104,0.98,105,0.98,106,0.884,107,0.98,108,0.855,109,0.98,110,0.884,111,0.774,112,1.47,113,0.884,114,1.327,115,0.884,116,0.98,117,0.884,118,0.98,119,0.855,120,0.98,121,0.855,122,0.98,123,0.884,124,0.98,125,0.884,126,0.98,127,0.007,128,0.007,150,0.724,161,0.8,174,1.219,191,0.863,192,0.863,213,3.384,215,2.066,217,3.239,219,2.833,220,2.48,221,3.359,222,3.239,223,3.359,228,2.48,229,1.283,230,2.158,233,1.268,249,7.626,250,6.653,251,2.929,252,2.258,253,2.066,254,4.395,255,4.395,256,4.395,257,4.395,258,4.395,259,3.756,260,4.09,261,2.125,262,4.786,263,3.217,264,2.756,265,2.197,266,3.158,267,2.643,268,3.505,269,4.951,270,3.714,271,2.929,272,2.929,273,2.929,274,2.929,275,3.173,276,5.115,277,2.929,278,5.276,279,6.283,280,2.929,281,2.158,282,0.516,283,2.929,284,2.929,285,2.929,286,2.929,287,2.929,288,2.929,289,1.504,290,1.504,291,1.504,292,1.504,293,1.504,294,4.622,295,2.929,296,1.504,297,2.125,298,2.555,299,2.929,300,4.622,301,2.125,302,1.578,303,1.659,304,1.751,305,2.309,306,2.555,307,1.578,308,1.377,309,3.342,310,2.555,311,2.125,312,2.125,313,1.09,314,1.09,315,1.504,316,3.834,317,1.743,318,1.504,319,2.555,320,2.929,321,1.855,322,1.504,323,1.504,324,2.066,325,2.368,326,2.555,327,1.721,328,4.395,329,2.929,330,2.929,331,2.929,332,2.929,333,2.929,334,2.929,335,2.929,336,1.697,337,3.188,338,2.929,339,2.929,340,2.929,341,1.751,342,2.929,343,2.929,344,2.929,345,1.321,346,1.504,347,1.982,348,1.831,349,1.855,350,4.395,351,2.929,352,1.438,353,2.125,354,2.555,355,2.929,356,2.929,357,2.368,358,2.368,359,3.834,360,3.834,361,7.332,362,3.834,363,5.115,364,2.968,365,2.785]],["title/components/ChartsComponent.html",[0,0.555,87,1.229]],["body/components/ChartsComponent.html",[0,0.923,1,0.826,2,0.132,3,0.087,4,0.946,5,0.946,6,0.747,7,0.068,9,1.024,10,1.854,11,0.946,12,2.697,13,2.042,14,1.593,16,1.593,18,0.159,19,0.457,21,1.024,22,2.427,23,0.837,24,1.065,27,1.277,28,0.013,29,1.766,30,0.729,31,0.581,32,0.572,33,0.911,34,2.237,36,0.408,37,0.465,38,0.068,39,0.013,42,2.151,44,1.56,46,1.409,69,0.676,70,1.432,71,1.131,72,1.384,73,1.927,74,0.946,79,0.76,80,0.946,81,0.854,82,0.946,83,0.854,84,1.617,85,0.958,86,0.946,87,1.739,88,1.611,89,0.946,90,0.854,91,0.914,92,0.946,93,0.854,94,0.946,95,0.854,96,0.883,97,1.432,98,0.826,99,0.946,100,0.854,101,0.946,102,0.854,103,0.854,104,0.946,105,0.946,106,0.854,107,0.946,108,0.826,109,0.946,110,0.854,111,0.747,112,1.432,113,0.854,114,1.293,115,0.854,116,0.946,117,0.854,118,0.946,119,0.826,120,0.946,121,0.826,122,0.946,123,0.854,124,0.946,125,0.854,126,0.946,127,0.007,128,0.007,161,0.772,174,1.178,180,1.922,191,0.416,192,0.848,195,1.052,210,1.052,213,3.352,217,3.196,218,4.072,219,3.14,220,3.179,221,3.32,222,3.32,223,3.32,228,2.428,229,1.25,230,2.102,233,1.225,234,2.229,235,2.229,252,2.199,263,3.179,289,1.453,290,1.453,291,1.453,292,1.453,293,1.453,296,1.453,307,1.524,308,1.33,313,1.052,314,1.593,315,1.453,317,1.364,318,1.453,322,1.453,323,1.453,341,1.691,345,1.275,346,1.453,347,1.275,348,1.799,352,1.388,366,2.828,367,4.072,368,7.572,369,4.281,370,4.281,371,5.761,372,5.761,373,5.761,374,5.761,375,5.761,376,5.761,377,3.649,378,5.761,379,4.541,380,5.761,381,5.761,382,5.761,383,5.761,384,2.229,385,4.723,386,3.649,387,4.281,388,2.828,389,2.828,390,2.828,391,2.828,392,2.828,393,2.828,394,2.828,395,2.828,396,2.828,397,2.828,398,2.828,399,2.828,400,7.129,401,2.828,402,2.828,403,2.828,404,2.828,405,2.828,406,2.467,407,2.229,408,2.052,409,4.506,410,3.734,411,3.734,412,2.828,413,4.281,414,2.828,415,4.281,416,2.828,417,4.281,418,2.828,419,2.052,420,2.467,421,2.467,422,2.828,423,2.828,424,2.828,425,2.828,426,2.828,427,2.828,428,2.828,429,2.828,430,4.281,431,3.688,432,5.165,433,4.281,434,2.828,435,2.828,436,2.828,437,2.828,438,4.506,439,2.229,440,2.828,441,5.165,442,2.828,443,2.828,444,2.828,445,2.828,446,2.828,447,2.467,448,2.828,449,2.828,450,2.828,451,2.467,452,2.828,453,2.828,454,2.828,455,2.828,456,1.015,457,2.828,458,4.281,459,4.281,460,2.828,461,4.281,462,2.467,463,3.734,464,2.828,465,5.761,466,4.281,467,1.854,468,4.281,469,4.281,470,4.281,471,3.734,472,4.281,473,3.374,474,2.467,475,2.828,476,4.281,477,2.467,478,3.374,479,2.828,480,2.229,481,2.828,482,1.691,483,2.828,484,1.792,485,2.828,486,2.828,487,2.828,488,2.828,489,2.828,490,2.828,491,2.828,492,2.828,493,2.828,494,2.828,495,2.828,496,2.828]],["title/injectables/ClockService.html",[242,1.515,497,2.433]],["body/injectables/ClockService.html",[2,0.093,3,0.093,7,0.072,18,0.17,19,0.48,21,1.076,23,0.88,24,1.05,27,1.247,28,0.013,29,1.738,30,1.292,31,0.589,32,1.087,33,0.948,36,0.399,37,0.496,38,0.108,39,0.014,44,2.357,48,2.669,79,0.662,114,0.912,127,0.007,128,0.007,150,1.472,161,0.825,191,0.662,192,0.662,193,2.479,195,1.125,210,2.216,219,3.203,228,1.421,242,2,244,1.681,263,3.138,308,1.421,313,1.125,314,1.125,317,2.234,324,2.993,327,1.076,345,1.363,347,3.01,348,2.219,349,4.229,352,3.277,386,3.773,497,2.69,498,2.636,499,4.694,500,5.6,501,5.955,502,5.6,503,6.197,504,5.554,505,5.955,506,1.794,507,5.955,508,5.261,509,3.925,510,5.823,511,5.823,512,4.247,513,2.742,514,3.99,515,5.955,516,1.915,517,4.5,518,3.022,519,3.022,520,3.022,521,3.925,522,3.022,523,3.022,524,3.022,525,3.022,526,3.022,527,3.022,528,3.925,529,3.925,530,3.022,531,3.022,532,3.022,533,3.022,534,4.5,535,3.022,536,4.5,537,4.237,538,3.264,539,3.022,540,3.022,541,3.925,542,3.022,543,4.5,544,2.192,545,2.636,546,2.192,547,1.915,548,3.022,549,1.552,550,1.125,551,3.022,552,4.689,553,1.628,554,6.197,555,6.623,556,4.5,557,4.5,558,2.115,559,5.955,560,4.689,561,7.104,562,3.022,563,5.376,564,3.022,565,3.022,566,3.022,567,3.022,568,3.022,569,3.022,570,3.022,571,3.022,572,3.022,573,3.022,574,2.636,575,6.675,576,1.552,577,3.022,578,3.022,579,4.5,580,6.367,581,3.022,582,2.636,583,1.798,584,5.554,585,4.021,586,3.126,587,2.041,588,4.5,589,5.376,590,4.5,591,4.5,592,3.022,593,4.5,594,3.022]],["title/interfaces/Counts.html",[236,0.743,595,1.835]],["body/interfaces/Counts.html",[2,0.181,3,0.181,7,0.141,18,0.33,19,0.752,28,0.013,30,1.433,31,0.536,38,0.181,44,2.364,46,1.525,127,0.011,128,0.011,236,1.429,282,1.331,456,2.11,484,3.724,514,3.514,595,3.61,596,4.633,597,3.724,598,6.171,599,6.171,600,4.76,601,4.264,602,3.969,603,4.264,604,4.264,605,3.461]],["title/modules/DemandModule.html",[133,1.188,144,2.749]],["body/modules/DemandModule.html",[2,0.189,3,0.189,7,0.147,28,0.013,36,0.432,37,1.008,38,0.173,39,0.028,69,1.467,127,0.011,128,0.011,133,2.111,135,3.012,136,3.895,137,3.305,138,3.329,144,5.543,149,3.399,150,1.516,151,3.152,153,3.55,270,5.2,606,5.352,607,5.352,608,6.135,609,6.135]],["title/injectables/DemandService.html",[242,1.515,270,2.579]],["body/injectables/DemandService.html",[2,0.091,3,0.091,7,0.071,18,0.354,19,0.472,21,1.057,23,0.577,24,1.012,27,1.321,28,0.013,29,1.432,30,1.439,31,0.558,32,0.894,33,0.779,36,0.372,37,0.485,38,0.071,39,0.014,42,1.841,48,2.046,60,3.248,79,1.038,91,2.139,127,0.007,128,0.007,150,1.455,174,1.229,180,1.098,189,2.271,191,1.038,192,1.038,193,2.207,195,1.098,198,1.59,203,2.272,210,1.098,215,1.998,242,1.972,244,1.248,265,2.451,266,3.171,269,5.355,270,2.801,276,5.772,281,3.709,304,1.764,311,2.141,313,1.098,314,1.098,317,2.082,327,1.507,348,2.386,456,2.375,467,2.295,480,5.955,506,1.988,512,3.168,529,3.857,549,1.516,558,1.388,610,2.952,611,3.682,612,4.154,613,5.886,614,4.421,615,5.886,616,4.421,617,4.421,618,5.886,619,5.886,620,5.886,621,4.421,622,7.055,623,2.952,624,4.421,625,4.421,626,4.188,627,7.555,628,2.952,629,5.3,630,2.723,631,3.248,632,3.957,633,2.952,634,3.171,635,4.421,636,2.952,637,4.421,638,2.952,639,2.952,640,2.952,641,6.86,642,2.952,643,2.952,644,4.421,645,3.748,646,2.952,647,3.207,648,4.421,649,2.504,650,5.886,651,4.421,652,2.952,653,3.485,654,4.421,655,2.952,656,4.421,657,2.952,658,2.504,659,3.238,660,2.952,661,2.17,662,1.516,663,2.141,664,5.886,665,1.993,666,2.952,667,2.952,668,2.952,669,1.87,670,5.3,671,2.952,672,2.952,673,2.952,674,3.252,675,2.504,676,2.952,677,2.952,678,5.886,679,4.421,680,2.952,681,1.59,682,2.952,683,2.952,684,2.952,685,2.952,686,4.421,687,5.886,688,2.952]],["title/classes/Edge.html",[39,0.019,456,1.461]],["body/classes/Edge.html",[2,0.053,3,0.114,6,0.452,7,0.041,18,0.096,19,0.394,21,0.685,23,0.335,24,0.979,27,1.24,28,0.013,29,1.346,30,1.419,31,0.567,32,0.748,33,1.063,34,0.741,36,0.292,38,0.144,39,0.022,42,1.8,45,0.771,46,1.041,58,0.879,60,3.212,64,0.879,71,0.757,79,0.636,111,0.757,127,0.004,128,0.004,174,0.712,179,0.969,180,1.609,187,0.922,191,0.814,192,0.708,193,1.8,195,0.637,198,1.543,203,2.915,210,1.375,215,0.865,236,0.789,244,1.22,253,1.347,265,0.712,267,1.292,275,2.614,281,2.556,282,1.233,313,0.637,314,0.637,317,1.531,327,1.692,336,2.238,348,2.383,357,1.543,358,2.329,431,2.949,456,2.725,467,2.394,506,2.073,549,0.879,550,0.637,576,2.472,595,1.666,605,2.122,611,2.447,612,1.991,626,2.804,630,1.472,631,3.513,632,1.543,634,3.893,645,0.969,649,0.969,658,1.623,659,0.879,661,1.814,662,0.879,665,1.666,674,2.883,675,3.706,681,0.922,689,0.969,690,2.329,691,2.584,692,3.688,693,3.112,694,3.414,695,3.444,696,3.112,697,3.428,698,2.584,699,3.603,700,2.584,701,2.877,702,3.285,703,3.781,704,3.112,705,2.584,706,2.865,707,3.706,708,2.209,709,2.865,710,2.584,711,2.584,712,1.712,713,1.711,714,1.711,715,1.711,716,1.711,717,3.112,718,2.094,719,1.712,720,1.711,721,1.711,722,1.711,723,2.094,724,1.712,725,1.712,726,1.292,727,1.711,728,1.711,729,1.711,730,2.094,731,2.949,732,1.711,733,1.711,734,1.543,735,1.711,736,1.472,737,1.711,738,1.711,739,1.711,740,1.712,741,1.711,742,1.712,743,1.711,744,1.406,745,2.472,746,1.991,747,1.712,748,2.584,749,1.711,750,1.623,751,1.543,752,1.712,753,1.711,754,1.543,755,1.711,756,1.711,757,2.584,758,1.712,759,0.958,760,0.969,761,1.023,762,1.023,763,2.674,764,3.132,765,2.959,766,0.922,767,0.969,768,2.978,769,1.623,770,1.712,771,1.023,772,1.023,773,0.969,774,1.023,775,0.969,776,1.023,777,2.449,778,1.023,779,1.023,780,1.023,781,1.023,782,1.023,783,1.023,784,1.023,785,0.969,786,0.969,787,2.209,788,0.922,789,1.023,790,1.023,791,1.023,792,1.712,793,1.712,794,1.023,795,1.023,796,1.023,797,1.712,798,1.712,799,1.023,800,1.023,801,1.023,802,1.623,803,2.209,804,2.584,805,2.584,806,1.712,807,1.712,808,2.584,809,2.209,810,2.584,811,2.584,812,1.023,813,1.712,814,1.712,815,1.712,816,1.023,817,1.712,818,1.023,819,1.712,820,1.023,821,1.023,822,1.023,823,1.023,824,2.726,825,0.969,826,0.922,827,1.023,828,0.969,829,1.712,830,1.023,831,1.023,832,1.6,833,1.023,834,2.209,835,1.023,836,1.023,837,1.712,838,1.023,839,1.023,840,1.023,841,1.023,842,1.023,843,0.922,844,1.712,845,1.712,846,1.023,847,1.712,848,1.023,849,1.023,850,1.023,851,1.023,852,1.023,853,1.023,854,1.023,855,1.023,856,1.023,857,1.023,858,1.712,859,1.023,860,1.023,861,1.023,862,1.472,863,1.023,864,2.209,865,2.209,866,1.023,867,2.209,868,1.023,869,1.023,870,1.023,871,1.712,872,1.023,873,1.023,874,1.023,875,1.623,876,1.023,877,1.023,878,1.023,879,0.922,880,2.094,881,0.969,882,1.023,883,1.712,884,1.712,885,1.023,886,1.712,887,1.712,888,1.023,889,1.023,890,1.023,891,2.209,892,1.023,893,1.023,894,2.209,895,1.023,896,0.969,897,1.023,898,1.023,899,1.023,900,1.023,901,1.023,902,0.879,903,1.991,904,1.023,905,1.543,906,1.023,907,1.023,908,1.023,909,1.623,910,1.023,911,1.023,912,1.023,913,1.712,914,1.023,915,1.023,916,0.969,917,0.879,918,1.023,919,1.023,920,1.023,921,1.023,922,1.023,923,1.023,924,0.879,925,1.023,926,1.023,927,0.84,928,1.023,929,1.023,930,1.023,931,1.023,932,1.023,933,1.023,934,1.023,935,1.023,936,1.023,937,1.023,938,1.023,939,1.023,940,1.023,941,1.023,942,1.023,943,0.969,944,0.969,945,1.023,946,0.969,947,0.969,948,0.84,949,1.023,950,1.712,951,1.023,952,0.969,953,1.023,954,0.969,955,0.922,956,1.023,957,1.023,958,1.023,959,1.023,960,1.023,961,1.023,962,1.023,963,1.023,964,0.804,965,1.023,966,1.023]],["title/classes/EnumValues.html",[39,0.019,312,2.953]],["body/classes/EnumValues.html",[2,0.158,3,0.158,7,0.123,18,0.288,21,1.55,24,0.851,27,1.339,28,0.013,30,1.311,31,0.567,33,0.904,38,0.185,39,0.03,48,2.502,79,0.954,127,0.01,128,0.01,189,3.651,191,1.046,192,0.954,282,1.408,312,4.702,348,2.025,467,2.807,506,1.602,538,4.702,661,2.519,674,2.923,943,3.672,964,2.412,967,4.044,968,6.199,969,6.482,970,6.482,971,6.482,972,5.13,973,6.482,974,5.13,975,7.466,976,4.475,977,5.13,978,5.13,979,5.13,980,5.13,981,4.475,982,6.513,983,5.655,984,5.655,985,3.464,986,4.475,987,6.482,988,5.655,989,6.482,990,5.655,991,4.044,992,4.475,993,6.482,994,5.13,995,5.13,996,5.13]],["title/components/EstimateOfDemandComponent.html",[0,0.555,90,1.229]],["body/components/EstimateOfDemandComponent.html",[0,0.904,1,0.779,2,0.126,3,0.082,4,0.892,5,0.892,6,0.704,7,0.064,9,0.979,10,1.788,11,0.892,12,2.677,13,2,14,1.523,16,1.523,18,0.314,19,0.437,21,0.979,22,2.378,23,0.8,24,1.031,27,1.242,28,0.013,29,1.717,30,1.128,31,0.533,32,0.539,33,0.722,36,0.409,37,0.438,38,0.064,39,0.012,46,0.577,69,0.638,70,1.37,71,1.081,72,1.323,73,1.87,74,0.892,79,0.975,80,0.892,81,0.805,82,0.892,83,0.805,84,1.766,85,1.115,86,0.892,87,0.805,88,1.472,89,0.892,90,1.687,91,2.141,92,0.892,93,0.805,94,0.892,95,0.805,96,0.833,97,1.37,98,0.779,99,0.892,100,0.805,101,0.892,102,0.805,103,0.805,104,0.892,105,0.892,106,0.805,107,0.892,108,0.779,109,0.892,110,0.805,111,0.704,112,1.37,113,0.805,114,1.504,115,0.805,116,0.892,117,0.805,118,0.892,119,0.779,120,0.892,121,0.779,122,0.892,123,0.805,124,0.892,125,0.805,126,0.892,127,0.006,128,0.006,150,0.659,161,0.728,174,1.11,191,0.887,192,0.887,203,2.157,213,3.296,217,3.124,219,2.718,220,2.342,221,3.253,222,3.253,223,3.253,228,2.342,229,1.195,230,2.01,233,1.155,252,2.103,259,3.604,260,3.804,261,1.935,262,4.616,263,3.115,264,2.627,265,2.327,266,3.01,269,2.764,275,3.082,281,2.744,282,1.236,289,1.37,290,1.37,291,1.37,292,1.37,293,1.37,296,1.37,297,1.935,298,2.326,300,5.822,301,2.97,302,1.437,303,1.511,304,1.594,307,1.437,308,1.254,311,1.935,312,1.935,313,0.992,314,0.992,315,1.37,316,4.875,317,1.476,318,1.37,321,1.69,322,1.37,323,1.37,324,2.627,325,1.437,326,2.326,327,1.442,336,1.58,341,1.594,345,1.202,346,1.37,347,1.202,348,2.135,349,4.197,352,1.309,353,1.935,357,2.205,358,2.205,359,3.571,360,3.571,364,2.764,365,2.593,467,1.155,513,1.58,558,2.627,583,1.504,611,2.342,653,4.752,692,3.422,694,3.971,702,4.324,736,1.37,759,2.287,768,3.855,875,3.166,997,7.56,998,6.595,999,2.667,1000,4.094,1001,4.094,1002,4.094,1003,4.094,1004,4.094,1005,4.094,1006,2.667,1007,2.667,1008,2.667,1009,4.094,1010,2.667,1011,4.094,1012,2.667,1013,4.094,1014,2.667,1015,2.667,1016,2.667,1017,2.667,1018,4.094,1019,2.667,1020,2.667,1021,2.667,1022,2.667,1023,1.788,1024,2.102,1025,2.667,1026,2.667,1027,2.667,1028,4.094,1029,4.094,1030,2.326,1031,2.667,1032,2.667,1033,2.326,1034,4.094,1035,4.094,1036,2.667,1037,1.935,1038,4.094,1039,2.667,1040,2.667,1041,4.982,1042,2.667,1043,4.094,1044,2.326,1045,2.326,1046,4.346,1047,4.094,1048,4.094,1049,4.982,1050,2.667,1051,2.667,1052,2.667,1053,2.667,1054,2.667,1055,2.667,1056,2.667,1057,2.667,1058,2.667,1059,2.667,1060,2.667,1061,2.667,1062,4.094]],["title/components/FooterComponent.html",[0,0.555,93,1.229]],["body/components/FooterComponent.html",[0,1.034,1,1.422,2,0.193,3,0.15,4,1.63,5,1.63,6,1.287,7,0.117,9,1.5,10,2.49,11,1.63,12,2.845,13,2.439,14,2.334,16,2.334,18,0.274,19,0.669,20,6.769,21,1.5,22,2.63,24,0.823,27,0.8,28,0.013,29,1.357,30,1.181,31,0.37,32,0.986,33,0.859,34,2.716,35,5.472,36,0.274,37,0.8,38,0.117,39,0.022,49,4.251,50,4.251,51,4.236,52,4.236,69,1.165,70,2.099,71,1.657,72,2.027,73,2.451,74,1.63,75,3.841,76,3.841,77,3.841,79,0.923,80,1.63,81,1.471,82,1.63,83,1.471,84,1.887,85,1.09,86,1.63,87,1.471,88,1.753,89,1.63,90,1.471,91,1.575,92,1.63,93,2.212,94,1.63,95,1.471,96,1.522,97,2.099,98,1.422,99,1.63,100,1.471,101,1.63,102,1.471,103,1.471,104,1.63,105,1.63,106,1.471,107,1.63,108,1.422,109,1.63,110,1.471,111,1.287,112,2.099,113,1.471,114,1.471,115,1.471,116,1.63,117,1.471,118,1.63,119,1.422,120,1.63,121,1.422,122,1.63,123,1.471,124,1.63,125,1.471,126,1.63,127,0.01,128,0.01,211,4.551,212,4.945,325,3.379,1063,4.873,1064,6.273,1065,6.273,1066,6.273,1067,4.873,1068,4.873]],["title/classes/GoOn.html",[39,0.019,1069,2.306]],["body/classes/GoOn.html",[2,0.149,3,0.149,7,0.116,9,1.853,18,0.389,19,0.667,23,0.948,24,0.908,28,0.013,30,1.178,31,0.637,32,0.981,33,0.855,36,0.351,38,0.189,39,0.036,79,0.714,84,1.853,85,1.085,88,1.121,127,0.01,128,0.01,150,1.807,161,1.324,191,0.714,192,0.714,229,2.332,244,1.369,282,1.423,506,1.995,513,3.083,550,1.804,583,1.464,586,3.962,719,4.371,759,1.622,1069,4.142,1070,3.071,1071,4.247,1072,2.611,1073,6.252,1074,4.848,1075,3.961,1076,2.186,1077,2.898,1078,4.137,1079,4.137,1080,4.137,1081,2.49,1082,3.274,1083,3.071,1084,3.887,1085,3.071,1086,3.071,1087,2.898,1088,3.071,1089,3.071]],["title/components/GoogleMapComponent.html",[0,0.555,95,1.229]],["body/components/GoogleMapComponent.html",[0,0.914,1,0.999,2,0.152,3,0.105,4,1.648,5,1.144,6,0.903,7,0.082,9,1.178,10,2.073,11,1.144,12,2.757,13,2.17,18,0.192,19,0.526,21,1.178,22,2.268,23,0.669,24,1.039,27,0.948,28,0.013,29,1.509,30,1.275,31,0.612,32,1.488,36,0.277,37,0.562,38,0.082,39,0.016,69,0.818,70,1.648,71,1.525,72,1.592,73,2.114,74,1.144,79,0.986,80,1.144,81,1.033,82,1.144,83,1.033,84,1.719,85,1.413,86,1.144,87,1.033,88,1.662,89,1.144,90,1.033,91,1.106,92,1.144,93,1.033,94,1.144,95,1.907,96,1.804,97,1.648,98,0.999,99,1.144,100,1.033,101,1.144,102,1.033,103,1.033,104,1.144,105,1.144,106,1.033,107,1.144,108,0.999,109,1.144,110,1.033,111,0.903,112,1.648,113,1.033,114,1.033,115,1.033,116,1.144,117,1.033,118,1.144,119,0.999,120,1.144,121,0.999,122,1.144,123,1.033,124,1.144,125,1.033,126,1.144,127,0.008,128,0.008,149,3.72,191,0.85,192,0.85,244,1.784,259,4.652,282,1.114,317,1.669,324,2.316,327,0.818,349,3.121,385,5.214,478,3.884,482,4.547,506,1.218,576,2.531,630,2.531,659,2.531,665,1.542,669,4.002,719,2.945,736,2.531,917,3.582,927,2.419,1023,2.98,1084,1.757,1090,7.967,1091,3.421,1092,5.774,1093,4.927,1094,4.927,1095,5.511,1096,5.511,1097,5.511,1098,6.084,1099,5.511,1100,5.511,1101,4.709,1102,3.421,1103,4.709,1104,4.927,1105,4.98,1106,3.574,1107,3.421,1108,6.318,1109,3.421,1110,4.927,1111,4.927,1112,3.421,1113,4.927,1114,4.927,1115,3.421,1116,4.927,1117,4.298,1118,3.421,1119,4.98,1120,3.421,1121,3.421,1122,4.927,1123,3.884,1124,3.421,1125,4.927,1126,4.98,1127,3.421,1128,4.298,1129,4.927,1130,3.421,1131,3.421,1132,4.298,1133,3.421,1134,4.927,1135,2.984,1136,3.421,1137,3.421,1138,3.421,1139,3.421,1140,3.421,1141,3.421,1142,3.421,1143,3.421,1144,2.984,1145,2.984,1146,2.984,1147,2.984,1148,2.984,1149,2.984,1150,2.984,1151,2.984,1152,2.984]],["title/classes/Heap.html",[39,0.019,763,2.091]],["body/classes/Heap.html",[2,0.145,3,0.145,7,0.113,18,0.344,19,0.654,21,1.466,24,0.984,27,1.286,28,0.013,29,1.564,30,1.276,31,0.518,32,0.951,33,0.829,36,0.264,38,0.147,39,0.028,46,1.327,79,0.902,127,0.009,128,0.009,191,0.902,192,0.902,203,3.313,215,2.059,236,0.859,317,1.802,327,1.125,336,1.816,456,2.595,506,2.016,647,3.412,674,2.764,692,3.524,763,4.159,765,3.897,826,3.303,832,2.037,862,3.149,902,3.713,903,3.894,905,4.038,924,3.149,1153,6.705,1154,4.103,1155,5.348,1156,6.821,1157,6.305,1158,6.131,1159,6.131,1160,4.703,1161,5.348,1162,4.703,1163,4.703,1164,5.348,1165,4.703,1166,5.348,1167,4.703,1168,4.103,1169,5.348,1170,4.103,1171,4.103,1172,4.103,1173,4.103,1174,4.103,1175,4.103,1176,3.707,1177,4.103]],["title/components/HomeComponent.html",[0,0.555,98,1.188]],["body/components/HomeComponent.html",[0,0.977,1,1.198,2,0.211,3,0.126,4,1.372,5,1.372,6,1.084,7,0.098,9,1.338,10,2.287,11,1.372,12,2.805,13,2.358,14,2.083,16,2.083,18,0.23,19,0.597,21,1.338,22,2.456,23,0.802,24,0.898,27,1.124,28,0.013,29,1.481,31,0.425,32,0.83,33,0.723,36,0.358,37,0.674,38,0.098,39,0.019,40,3.546,41,4.411,42,2.849,43,4.06,44,2.066,45,2.523,46,1.481,47,4.411,48,2.16,69,0.981,70,1.872,71,1.682,72,1.809,73,2.289,74,1.372,79,0.938,80,1.372,81,1.239,82,1.372,83,1.239,84,1.809,85,0.918,86,1.372,87,1.239,88,1.656,89,1.372,90,1.239,91,1.326,92,1.372,93,1.239,94,1.372,95,1.239,96,1.281,97,1.872,98,1.998,99,1.372,100,1.239,101,1.372,102,1.239,103,1.239,104,1.372,105,1.372,106,1.239,107,1.372,108,1.198,109,1.372,110,1.239,111,1.084,112,1.872,113,1.239,114,1.239,115,1.239,116,1.372,117,1.239,118,1.372,119,1.198,120,1.372,121,1.198,122,1.372,123,1.239,124,1.372,125,1.239,126,1.372,127,0.009,128,0.009,180,1.527,191,0.604,192,0.604,205,4.882,210,2.083,244,1.798,282,0.987,327,1.712,336,2.764,348,1.99,367,5.021,379,5.394,384,3.234,385,5.362,438,3.579,484,3.546,512,3.345,663,2.976,828,3.17,1045,3.579,1046,4.882,1126,3.234,1128,4.882,1178,4.102,1179,5.596,1180,5.596,1181,5.969,1182,5.596,1183,4.102,1184,4.102,1185,5.969,1186,3.579,1187,4.882,1188,4.102,1189,4.102,1190,7.391,1191,4.102,1192,4.102,1193,4.102,1194,6.37,1195,4.102,1196,5.596,1197,4.102,1198,5.596,1199,5.596,1200,3.579,1201,4.102,1202,4.882,1203,4.102,1204,4.882,1205,4.882,1206,4.882,1207,4.102,1208,4.102,1209,3.579,1210,4.102,1211,5.596,1212,4.102]],["title/components/InfoDialogComponent.html",[0,0.555,100,1.229]],["body/components/InfoDialogComponent.html",[0,1.031,1,1.408,2,0.242,3,0.148,4,2.085,5,1.614,6,1.274,7,0.116,11,1.614,12,2.843,13,2.377,18,0.271,19,0.665,23,1.219,24,0.906,28,0.013,31,0.525,36,0.35,37,0.792,38,0.116,39,0.022,46,1.745,69,1.153,70,2.085,71,1.646,72,2.014,73,2.441,74,1.614,79,1.016,80,1.614,81,1.456,82,1.614,83,1.456,84,1.883,85,1.079,86,1.614,87,1.456,88,1.748,89,1.614,90,1.456,91,1.559,92,1.614,93,1.456,94,1.614,95,1.456,96,1.506,97,2.085,98,1.408,99,1.614,100,2.203,101,1.614,102,1.456,103,1.456,104,1.614,105,1.614,106,1.456,107,1.614,108,1.408,109,1.614,110,1.456,111,1.274,112,2.085,113,1.456,114,1.456,115,1.456,116,1.614,117,1.456,118,1.614,119,1.408,120,1.614,121,1.408,122,1.614,123,1.456,124,1.614,125,1.456,126,1.614,127,0.01,128,0.01,191,0.71,192,0.71,242,2.319,506,1.913,1101,3.257,1213,7.297,1214,4.823,1215,5.436,1216,5.008,1217,6.591,1218,4.823,1219,7.739,1220,4.823,1221,3.802,1222,4.823,1223,4.823,1224,4.823,1225,2.883,1226,4.823]],["title/interfaces/LinkFlow.html",[236,0.743,626,2.193]],["body/interfaces/LinkFlow.html",[2,0.061,3,0.127,6,0.526,7,0.048,18,0.112,19,0.439,24,0.262,27,1.226,28,0.013,29,1.28,30,1.395,31,0.361,33,1.088,34,0.863,36,0.315,38,0.153,39,0.022,42,1.353,45,0.899,46,1.027,58,1.024,60,3.028,64,1.024,71,0.859,111,0.859,127,0.005,128,0.005,174,0.83,179,1.129,180,1.767,187,1.074,191,0.606,192,0.293,193,1.977,195,0.742,198,1.751,203,2.989,210,1.532,236,0.955,244,1.34,253,0.937,265,0.83,267,0.899,275,2.781,281,2.754,282,1.208,313,0.742,314,0.742,317,1.629,327,1.753,336,2.381,348,2.441,357,1.751,358,2.558,431,2.332,456,2.751,467,2.562,506,2.025,549,1.024,550,0.742,576,2.686,595,1.856,605,1.596,611,2.637,612,2.217,626,2.817,630,1.67,631,3.221,632,1.751,634,3.908,645,1.129,649,1.129,658,1.841,659,1.024,661,1.596,662,1.024,665,1.466,674,3.028,675,3.882,681,1.074,689,1.129,690,2.217,691,2.46,692,3.702,693,2.838,694,3.178,695,3.187,696,2.46,697,3.169,698,1.192,699,3.126,700,1.192,701,1.943,702,2.963,703,3.494,704,2.46,705,1.192,707,3.494,708,1.192,710,1.192,711,1.192,712,1.192,717,2.46,718,1.841,723,1.841,724,1.192,725,1.192,726,0.899,730,1.841,731,2.69,734,1.074,736,1.024,740,1.192,742,1.192,744,0.979,745,2.114,746,1.751,747,1.192,748,1.943,750,1.129,751,1.074,752,1.192,754,1.074,757,3.536,758,1.192,759,0.667,760,1.129,761,1.192,762,1.192,763,2.881,764,3.351,765,3.133,766,1.074,767,1.129,768,3.187,769,1.841,770,2.46,771,1.943,772,1.192,773,1.129,774,1.192,775,1.129,776,1.192,777,2.69,778,1.192,779,1.192,780,1.192,781,1.192,782,1.192,783,1.192,784,1.192,785,1.129,786,1.129,787,2.46,788,1.074,789,1.192,790,1.192,791,1.192,792,1.943,793,1.943,794,1.192,795,1.192,796,1.192,797,1.943,798,1.943,799,1.192,800,1.192,801,1.192,802,1.841,803,2.46,804,2.838,805,2.838,806,1.943,807,1.943,808,2.838,809,2.46,810,2.838,811,2.838,812,1.192,813,1.943,814,1.943,815,1.943,816,1.192,817,1.943,818,1.192,819,1.943,820,1.192,821,1.192,822,1.192,823,1.192,824,2.963,825,1.129,826,1.074,827,1.192,828,1.129,829,1.943,830,1.192,831,1.192,832,1.782,833,1.192,834,2.46,835,1.192,836,1.192,837,1.943,838,1.192,839,1.192,840,1.192,841,1.192,842,1.192,843,1.074,844,1.943,845,1.943,846,1.192,847,1.943,848,1.192,849,1.192,850,1.192,851,1.192,852,1.192,853,1.192,854,1.192,855,1.192,856,1.192,857,1.192,858,1.943,859,1.192,860,1.192,861,1.192,862,1.67,863,1.192,864,2.46,865,2.46,866,1.192,867,2.46,868,1.192,869,1.192,870,1.192,871,1.943,872,1.192,873,1.192,874,1.192,875,1.841,876,1.192,877,1.192,878,1.192,879,1.074,880,2.332,881,1.129,882,1.192,883,1.943,884,1.943,885,1.192,886,1.943,887,1.943,888,1.192,889,1.192,890,1.192,891,2.46,892,1.192,893,1.192,894,2.46,895,1.192,896,1.129,897,1.192,898,1.192,899,1.192,900,1.192,901,1.192,902,1.024,903,2.217,904,1.192,905,1.751,906,1.192,907,1.192,908,1.192,909,1.841,910,1.192,911,1.192,912,1.192,913,1.943,914,1.192,915,1.192,916,1.129,917,1.024,918,1.192,919,1.192,920,1.192,921,1.192,922,1.192,923,1.192,924,1.024,925,1.192,926,1.192,927,0.979,928,1.192,929,1.192,930,1.192,931,1.192,932,1.192,933,1.192,934,1.192,935,1.192,936,1.192,937,1.192,938,1.192,939,1.192,940,1.192,941,1.192,942,1.192,943,1.129,944,1.129,945,1.192,946,1.129,947,1.129,948,0.979,949,1.192,950,1.943,951,1.192,952,1.129,953,1.192,954,1.129,955,1.074,956,1.192,957,1.192,958,1.192,959,1.192,960,1.192,961,1.192,962,1.192,963,1.192,964,0.937,965,1.192,966,1.192]],["title/modules/LocationModule.html",[133,1.188,145,2.749]],["body/modules/LocationModule.html",[2,0.189,3,0.189,7,0.147,28,0.013,36,0.432,37,1.008,38,0.173,39,0.028,69,1.467,127,0.011,128,0.011,133,2.111,135,3.012,136,3.895,137,3.305,138,3.329,145,5.543,149,3.399,150,1.516,151,3.152,153,3.55,1227,5.352,1228,5.352,1229,4.906,1230,6.135,1231,6.135]],["title/injectables/LocationService.html",[242,1.515,1229,2.433]],["body/injectables/LocationService.html",[2,0.133,3,0.133,7,0.103,18,0.242,19,0.617,21,1.669,23,1.277,24,1.022,27,1.279,28,0.013,29,1.511,31,0.531,34,1.865,36,0.367,37,0.708,38,0.103,39,0.02,44,1.746,79,0.852,96,2.04,127,0.01,128,0.009,150,1.726,191,0.852,192,0.852,193,3.372,195,1.603,215,1.301,242,2.43,282,1.151,317,1.981,325,3.761,473,4.56,482,3.458,506,2.034,558,2.025,759,1.441,766,2.32,767,2.44,785,3.277,786,3.277,879,3.116,944,2.44,1023,2.344,1106,5.557,1229,3.458,1232,4.308,1233,4.56,1234,5.784,1235,5.046,1236,5.046,1237,4.423,1238,5.784,1239,7.065,1240,6.683,1241,7.499,1242,5.784,1243,6.353,1244,6.981,1245,5.784,1246,5.784,1247,5.784,1248,4.308,1249,6.981,1250,5.44,1251,5.148,1252,4.308,1253,5.784,1254,4.308,1255,4.308,1256,5.784,1257,4.308,1258,4.308,1259,6.981,1260,4.308,1261,4.308,1262,6.531,1263,5.784,1264,5.784,1265,4.308,1266,3.758,1267,5.784,1268,3.758,1269,4.308,1270,4.308,1271,5.784,1272,4.308,1273,4.308,1274,4.308,1275,3.758,1276,4.308]],["title/interfaces/Map.html",[236,0.743,1023,1.461]],["body/interfaces/Map.html",[2,0.187,3,0.187,7,0.145,18,0.341,19,0.767,28,0.013,31,0.461,38,0.183,46,1.803,127,0.011,128,0.011,215,1.832,233,2.627,236,1.397,327,1.451,513,3.054,597,3.843,669,3.843,948,3.757,1023,2.939,1277,4.782]],["title/classes/MapChanged.html",[39,0.019,1278,2.953]],["body/classes/MapChanged.html",[2,0.167,3,0.167,7,0.13,9,1.745,18,0.305,19,0.718,23,1.064,24,0.958,28,0.013,31,0.639,32,1.1,33,0.959,36,0.378,38,0.183,39,0.034,79,0.801,85,1.217,88,1.258,127,0.01,128,0.01,150,1.884,161,1.485,191,0.801,192,0.801,229,2.287,282,1.344,506,1.973,550,2.024,583,1.642,586,3.918,719,4.557,1023,2.903,1071,4.107,1072,2.93,1076,2.452,1084,3.454,1278,5.531,1279,4.288,1280,6.724,1281,5.439,1282,5.866,1283,4.288,1284,4.745,1285,4.288]],["title/components/MapComponent.html",[0,0.555,102,1.229]],["body/components/MapComponent.html",[0,0.951,1,0.905,2,0.141,3,0.095,4,1.037,5,1.037,6,0.818,7,0.074,9,1.096,10,1.958,11,1.037,12,2.727,13,2.104,14,1.706,16,1.706,18,0.174,19,0.489,21,1.096,22,2.502,23,0.896,24,1.062,27,1.2,28,0.013,29,1.668,30,1.312,31,0.58,32,0.627,33,0.546,36,0.417,37,0.509,38,0.074,39,0.014,69,0.741,70,1.534,71,1.211,72,1.482,73,2.017,74,1.037,79,0.803,80,1.037,81,0.936,82,1.037,83,0.936,84,1.667,85,1.026,86,1.037,87,0.936,88,1.655,89,1.037,90,0.936,91,1.002,92,1.037,93,0.936,94,1.037,95,0.936,96,0.968,97,1.534,98,0.905,99,1.037,100,0.936,101,1.037,102,1.82,103,0.936,104,1.037,105,1.037,106,0.936,107,1.037,108,0.905,109,1.037,110,0.936,111,0.818,112,1.534,113,0.936,114,1.384,115,0.936,116,1.037,117,0.936,118,1.037,119,0.905,120,1.037,121,0.905,122,1.037,123,0.936,124,1.037,125,0.936,126,1.037,127,0.007,128,0.007,149,3.025,161,0.846,180,1.153,191,0.456,192,0.675,203,1.769,210,1.153,213,3.436,217,3.307,219,2.901,220,2.565,221,3.422,222,3.422,223,3.422,228,2.565,229,1.593,230,2.251,233,1.342,244,1.902,252,2.355,263,3.167,265,2.271,266,3.248,275,2.718,282,0.962,289,1.592,290,1.592,291,1.592,292,1.592,293,1.592,296,1.592,304,1.852,307,1.669,308,1.457,311,2.248,313,1.153,314,1.153,315,1.592,317,1.441,318,1.592,322,1.592,323,1.592,324,1.457,327,1.304,336,1.196,341,1.852,345,2.067,346,3.46,347,3.227,348,1.432,352,3.513,467,1.985,482,4.027,513,1.769,516,1.963,576,2.355,583,0.936,611,2.155,669,2.904,692,2.155,832,1.342,917,1.592,964,2.155,1023,2.669,1024,2.443,1095,5.259,1096,5.259,1097,5.259,1098,5.259,1099,5.259,1100,5.259,1101,4.071,1103,4.071,1105,3.613,1106,3.958,1117,4.759,1123,4.3,1135,2.703,1144,4.759,1145,2.703,1146,2.703,1147,2.703,1148,2.703,1149,2.703,1150,2.703,1151,2.703,1152,4.759,1181,3.999,1286,3.099,1287,3.613,1288,3.613,1289,4.584,1290,4.584,1291,4.584,1292,3.099,1293,3.099,1294,3.099,1295,3.099,1296,3.099,1297,3.099,1298,3.099,1299,3.099,1300,3.099,1301,3.099,1302,3.099,1303,3.099,1304,3.099,1305,2.443,1306,3.999,1307,3.099,1308,3.099,1309,3.099,1310,3.096,1311,3.099,1312,4.584,1313,4.584,1314,4.584,1315,3.099,1316,4.584,1317,2.248,1318,2.703,1319,3.099,1320,3.099,1321,4.584,1322,3.099,1323,3.099,1324,3.099,1325,3.099,1326,3.099,1327,3.099,1328,2.443,1329,3.099,1330,3.099,1331,3.099,1332,3.099,1333,3.099,1334,3.099,1335,3.099,1336,4.584,1337,3.099,1338,3.099,1339,3.099,1340,4.584,1341,3.099]],["title/interfaces/MapState.html",[236,0.743,1342,2.953]],["body/interfaces/MapState.html",[2,0.172,3,0.172,7,0.134,18,0.313,19,0.729,27,1.212,28,0.013,31,0.424,32,1.128,36,0.414,38,0.184,88,1.29,127,0.01,128,0.01,189,2.864,215,1.683,229,1.628,236,1.246,327,1.632,345,2.514,347,3.078,558,2.621,583,2.455,1023,3.034,1076,2.514,1282,4.864,1283,4.395,1284,4.864,1285,5.381,1342,5.898,1343,4.395,1344,4.952,1345,4.864,1346,4.864,1347,5.575,1348,4.864,1349,3.158,1350,4.864,1351,6.827,1352,4.864,1353,5.381,1354,5.575,1355,5.575,1356,4.864]],["title/modules/MaterialModule.html",[133,1.188,1357,2.579]],["body/modules/MaterialModule.html",[2,0.18,3,0.18,7,0.14,28,0.013,36,0.438,37,0.958,38,0.168,39,0.027,62,4.231,127,0.011,128,0.011,133,1.703,153,3.445,156,4.598,157,4.231,327,1.395,1225,3.487,1357,5.061,1358,5.088,1359,6.121,1360,6.121,1361,6.121,1362,7.017,1363,6.121,1364,6.121,1365,6.121,1366,6.121,1367,6.121,1368,6.121,1369,6.121,1370,6.121,1371,6.121,1372,6.121,1373,6.121,1374,6.121,1375,6.121,1376,7.526,1377,5.833,1378,7.017,1379,5.833,1380,5.833,1381,5.833]],["title/interfaces/Member.html",[236,0.743,777,2.306]],["body/interfaces/Member.html",[2,0.061,3,0.126,6,0.525,7,0.048,18,0.112,19,0.438,24,0.261,27,1.225,28,0.013,29,1.279,30,1.39,31,0.468,33,0.921,34,0.861,36,0.315,38,0.153,39,0.022,42,1.35,45,0.896,46,1.026,58,1.021,60,3.025,64,1.021,71,0.857,111,0.857,127,0.005,128,0.005,174,0.828,179,1.126,180,1.764,187,1.071,191,0.605,192,0.293,193,1.974,195,0.74,198,1.747,203,2.988,210,1.529,215,0.6,236,0.953,244,1.338,253,0.935,265,0.828,267,0.896,275,2.778,281,2.75,282,1.278,313,0.74,314,0.74,317,1.628,327,1.752,336,2.379,348,2.44,357,1.747,358,2.554,431,2.327,456,2.75,467,2.559,506,2.025,549,1.021,550,0.74,576,2.683,595,1.852,605,1.592,611,2.634,612,2.213,626,2.213,630,1.666,631,3.218,632,1.747,634,3.905,645,1.126,649,1.126,658,1.837,659,1.021,661,1.592,662,1.021,665,1.462,674,3.026,675,3.879,681,1.071,689,1.126,690,2.213,691,2.456,692,3.701,693,2.456,694,3.174,695,3.183,696,2.456,697,3.165,698,1.188,699,3.122,700,1.188,701,1.939,702,2.959,703,3.491,704,2.456,705,1.188,707,3.491,708,1.188,710,1.188,711,1.188,712,1.188,717,2.456,718,1.837,723,1.837,724,1.188,725,1.188,726,0.896,730,1.837,731,2.685,734,1.071,736,1.021,740,1.188,742,1.188,744,0.976,745,2.11,746,1.747,747,1.188,748,1.939,750,1.126,751,1.071,752,1.188,754,1.071,757,2.456,758,1.188,759,0.665,760,1.126,761,1.188,762,1.188,763,2.878,764,3.347,765,3.13,766,1.071,767,1.126,768,3.183,769,1.837,770,1.939,771,1.188,772,1.188,773,1.126,774,1.188,775,1.126,776,1.939,777,3.174,778,2.834,779,2.834,780,1.188,781,1.188,782,1.188,783,1.188,784,1.188,785,1.126,786,1.126,787,2.456,788,1.071,789,1.188,790,1.188,791,1.188,792,1.939,793,1.939,794,1.188,795,1.188,796,1.188,797,1.939,798,1.939,799,1.188,800,1.188,801,1.188,802,1.837,803,2.456,804,2.834,805,2.834,806,1.939,807,1.939,808,2.834,809,2.456,810,2.834,811,2.834,812,1.188,813,1.939,814,1.939,815,1.939,816,1.188,817,1.939,818,1.188,819,1.939,820,1.188,821,1.188,822,1.188,823,1.188,824,2.959,825,1.126,826,1.071,827,1.188,828,1.126,829,1.939,830,1.188,831,1.188,832,1.779,833,1.188,834,2.456,835,1.188,836,1.188,837,1.939,838,1.188,839,1.188,840,1.188,841,1.188,842,1.188,843,1.071,844,1.939,845,1.939,846,1.188,847,1.939,848,1.188,849,1.188,850,1.188,851,1.188,852,1.188,853,1.188,854,1.188,855,1.188,856,1.188,857,1.188,858,1.939,859,1.188,860,1.188,861,1.188,862,1.666,863,1.188,864,2.456,865,2.456,866,1.188,867,2.456,868,1.188,869,1.188,870,1.188,871,1.939,872,1.188,873,1.188,874,1.188,875,1.837,876,1.188,877,1.188,878,1.188,879,1.071,880,2.327,881,1.126,882,1.188,883,1.939,884,1.939,885,1.188,886,1.939,887,1.939,888,1.188,889,1.188,890,1.188,891,2.456,892,1.188,893,1.188,894,2.456,895,1.188,896,1.126,897,1.188,898,1.188,899,1.188,900,1.188,901,1.188,902,1.021,903,2.213,904,1.188,905,1.747,906,1.188,907,1.188,908,1.188,909,1.837,910,1.188,911,1.188,912,1.188,913,1.939,914,1.188,915,1.188,916,1.126,917,1.021,918,1.188,919,1.188,920,1.188,921,1.188,922,1.188,923,1.188,924,1.021,925,1.188,926,1.188,927,0.976,928,1.188,929,1.188,930,1.188,931,1.188,932,1.188,933,1.188,934,1.188,935,1.188,936,1.188,937,1.188,938,1.188,939,1.188,940,1.188,941,1.188,942,1.188,943,1.126,944,1.126,945,1.188,946,1.126,947,1.126,948,0.976,949,1.188,950,1.939,951,1.188,952,1.126,953,1.188,954,1.126,955,1.071,956,1.188,957,1.188,958,1.188,959,1.188,960,1.188,961,1.188,962,1.188,963,1.188,964,0.935,965,1.188,966,1.188]],["title/components/MessageArchivedComponent.html",[0,0.555,103,1.229]],["body/components/MessageArchivedComponent.html",[0,1.043,1,1.46,2,0.196,3,0.154,4,2.134,5,1.673,6,1.321,7,0.12,11,1.673,12,2.851,13,2.397,18,0.281,19,0.681,23,0.978,24,0.837,28,0.013,31,0.485,36,0.358,37,0.821,38,0.12,39,0.023,46,1.739,69,1.196,70,2.134,71,1.685,72,2.062,73,2.475,74,1.673,79,1.034,80,1.673,81,1.51,82,1.673,83,1.51,84,1.899,85,1.119,86,1.673,87,1.51,88,1.767,89,1.673,90,1.51,91,1.616,92,1.673,93,1.51,94,1.673,95,1.51,96,1.562,97,2.134,98,1.46,99,1.673,100,1.51,101,1.673,102,1.51,103,2.233,104,2.35,105,1.673,106,1.51,107,1.673,108,1.46,109,1.673,110,1.51,111,1.321,112,2.134,113,1.51,114,1.51,115,1.51,116,1.673,117,1.51,118,1.673,119,1.46,120,1.673,121,1.46,122,1.673,123,1.51,124,1.673,125,1.51,126,1.673,127,0.01,128,0.01,191,0.736,192,0.736,242,2.374,506,1.736,1101,3.377,1221,3.942,1225,2.99,1382,7.023,1383,5.001,1384,6.379,1385,5.001,1386,5.001,1387,5.001,1388,5.001,1389,5.001]],["title/modules/NetworkModule.html",[133,1.188,146,2.749]],["body/modules/NetworkModule.html",[2,0.185,3,0.185,7,0.144,28,0.013,36,0.452,37,0.985,38,0.171,39,0.028,69,1.434,127,0.011,128,0.011,133,2.083,135,2.945,136,3.844,137,3.232,138,3.298,146,5.616,149,3.354,150,1.483,151,3.082,153,3.503,266,4.399,1390,5.233,1391,5.233,1392,5.233,1393,5.515,1394,5.999,1395,5.999,1396,5.999]],["title/classes/Node.html",[39,0.019,692,1.913]],["body/classes/Node.html",[2,0.057,3,0.121,6,0.493,7,0.045,18,0.105,19,0.42,23,0.365,24,0.882,27,1.209,28,0.013,29,1.244,30,1.398,31,0.529,32,1.022,33,1.131,34,0.808,36,0.305,38,0.149,39,0.023,42,1.282,45,1.389,46,0.987,58,0.959,60,2.951,64,0.959,71,0.814,79,0.275,111,0.814,127,0.005,128,0.005,174,0.777,179,1.057,180,1.698,187,1.659,191,0.672,192,0.453,193,1.9,195,0.695,198,1.659,203,2.973,210,1.463,215,0.564,236,0.833,244,1.288,253,0.878,265,0.777,267,0.842,275,2.71,281,2.669,282,1.226,313,0.695,314,0.695,317,1.588,327,1.727,336,2.32,348,2.427,357,1.659,358,2.458,431,3.08,456,2.778,467,2.49,506,2.056,549,0.959,550,0.695,576,2.594,595,2.451,605,1.512,611,2.556,612,2.118,626,2.118,630,1.582,631,3.151,632,1.659,634,3.848,645,1.057,649,1.057,658,1.745,659,0.959,661,1.512,662,0.959,665,1.389,674,2.967,675,3.808,681,1.006,689,1.057,690,2.118,691,2.351,692,3.695,693,2.351,694,3.08,695,3.098,696,3.25,697,3.088,698,1.116,699,3.019,700,1.116,701,1.841,702,2.861,703,3.878,704,2.351,705,1.116,707,3.405,708,1.116,710,1.116,711,1.116,712,1.116,717,2.351,718,1.745,719,1.841,723,1.745,724,1.116,725,1.116,726,0.842,730,1.745,731,2.585,734,1.006,736,0.959,740,1.116,742,1.116,744,0.916,745,2.02,746,1.659,747,1.116,748,1.841,750,1.057,751,1.006,752,1.116,754,1.006,757,2.351,758,1.116,759,0.625,760,1.057,761,1.116,762,1.116,763,2.792,764,3.405,765,3.151,766,1.006,767,1.057,768,3.098,769,1.745,770,1.841,771,1.116,772,1.116,773,1.057,774,1.116,775,1.057,776,1.116,777,2.585,778,1.116,779,1.116,780,1.841,781,1.841,782,1.841,783,1.841,784,1.841,785,1.745,786,1.745,787,3.437,788,2.458,789,2.728,790,2.728,791,2.728,792,1.841,793,1.841,794,1.841,795,1.116,796,1.116,797,1.841,798,1.841,799,1.116,800,1.116,801,1.116,802,1.745,803,2.351,804,2.728,805,2.728,806,1.841,807,1.841,808,2.728,809,2.351,810,2.728,811,2.728,812,1.116,813,1.841,814,1.841,815,1.841,816,1.116,817,1.841,818,1.116,819,1.841,820,1.116,821,1.116,822,1.116,823,1.116,824,2.861,825,1.057,826,1.006,827,1.116,828,1.057,829,1.841,830,1.116,831,1.116,832,1.703,833,1.116,834,2.351,835,1.116,836,1.116,837,1.841,838,1.116,839,1.116,840,1.116,841,1.116,842,1.116,843,1.006,844,1.841,845,1.841,846,1.116,847,1.841,848,1.116,849,1.116,850,1.116,851,1.116,852,1.116,853,1.116,854,1.116,855,1.116,856,1.116,857,1.116,858,1.841,859,1.116,860,1.116,861,1.116,862,1.582,863,1.116,864,2.351,865,2.351,866,1.116,867,2.351,868,1.116,869,1.116,870,1.116,871,1.841,872,1.116,873,1.116,874,1.116,875,1.745,876,1.116,877,1.116,878,1.116,879,1.006,880,2.228,881,1.057,882,1.116,883,1.841,884,1.841,885,1.116,886,1.841,887,1.841,888,1.116,889,1.116,890,1.116,891,2.351,892,1.116,893,1.116,894,2.351,895,1.116,896,1.057,897,1.116,898,1.116,899,1.116,900,1.116,901,1.116,902,0.959,903,2.118,904,1.116,905,1.659,906,1.116,907,1.116,908,1.116,909,1.745,910,1.116,911,1.116,912,1.116,913,1.841,914,1.116,915,1.116,916,1.057,917,0.959,918,1.116,919,1.116,920,1.116,921,1.116,922,1.116,923,1.116,924,0.959,925,1.116,926,1.116,927,0.916,928,1.116,929,1.116,930,1.116,931,1.116,932,1.116,933,1.116,934,1.116,935,1.116,936,1.116,937,1.116,938,1.116,939,1.116,940,1.116,941,1.116,942,1.116,943,1.057,944,1.057,945,1.116,946,1.057,947,1.057,948,0.916,949,1.116,950,1.841,951,1.116,952,1.057,953,1.116,954,1.057,955,1.006,956,1.116,957,1.116,958,1.116,959,1.116,960,1.116,961,1.116,962,1.116,963,1.116,964,0.878,965,1.116,966,1.116,1397,3.08,1398,1.867,1399,1.867,1400,1.867,1401,1.867,1402,1.867,1403,1.867,1404,1.867,1405,1.867]],["title/components/NumericComponent.html",[0,0.555,106,1.229]],["body/components/NumericComponent.html",[0,1.006,1,1.091,2,0.161,3,0.115,4,1.251,5,1.251,6,0.987,7,0.09,9,1.255,10,2.177,11,1.251,12,2.781,13,2.227,14,1.953,16,1.953,18,0.21,19,0.56,21,1.255,22,2.647,23,1.026,24,1.046,27,1.257,28,0.013,29,1.725,31,0.5,32,1.227,33,1.069,36,0.389,37,0.614,38,0.09,39,0.017,42,2.738,44,1.831,46,1.423,69,0.894,70,1.756,71,1.386,72,1.696,73,2.2,74,1.251,79,1.02,80,1.251,81,1.129,82,1.251,83,1.129,84,1.763,85,1.174,86,1.251,87,1.129,88,1.706,89,1.251,90,1.129,91,1.208,92,1.251,93,1.129,94,1.251,95,1.129,96,1.167,97,1.756,98,1.091,99,1.251,100,1.129,101,1.251,102,1.129,103,1.129,104,1.251,105,1.251,106,1.985,107,1.251,108,1.091,109,1.251,110,1.129,111,0.987,112,1.756,113,1.129,114,1.584,115,1.129,116,1.251,117,1.129,118,1.251,119,1.091,120,1.251,121,1.091,122,1.251,123,1.129,124,1.251,125,1.129,126,1.251,127,0.008,128,0.008,161,1.021,191,0.55,192,0.55,213,3.597,217,3.525,219,3.123,220,2.851,221,3.621,222,3.621,223,3.621,228,2.851,229,1.532,230,2.576,233,1.619,252,2.696,263,3.376,282,1.069,289,1.92,290,1.92,291,1.92,292,1.92,293,1.92,296,1.92,315,1.92,317,0.987,318,1.92,322,1.92,323,1.92,439,4.136,456,2.36,484,4.166,514,3.931,516,2.368,546,2.712,583,1.129,595,2.366,600,4.44,601,3.807,602,3.544,603,3.807,955,2.827,985,4.44,1406,3.738,1407,5.248,1408,5.248,1409,6.575,1410,5.248,1411,3.738,1412,3.738,1413,3.738,1414,3.738,1415,3.738,1416,3.261,1417,3.261,1418,3.261,1419,5.248,1420,3.738,1421,5.248,1422,4.578,1423,5.248,1424,5.248,1425,5.248,1426,5.248,1427,5.248]],["title/interfaces/NumericalSimulation.html",[236,0.743,600,2.749]],["body/interfaces/NumericalSimulation.html",[2,0.172,3,0.172,7,0.134,18,0.314,19,0.731,28,0.013,30,1.443,31,0.611,38,0.177,44,2.325,46,1.481,127,0.01,128,0.01,236,1.406,282,1.459,456,2.765,484,4.879,514,4.604,595,3.472,596,4.414,597,3.548,598,4.414,599,4.414,600,4.993,601,5.587,602,5.201,603,5.587,604,4.063,605,3.361]],["title/interfaces/OdPair.html",[236,0.743,275,1.835]],["body/interfaces/OdPair.html",[2,0.061,3,0.126,6,0.523,7,0.048,18,0.111,19,0.438,24,0.26,27,1.224,28,0.013,29,1.277,30,1.385,31,0.425,33,0.919,34,0.858,36,0.314,38,0.153,39,0.022,42,1.347,45,0.894,46,1.024,58,1.018,60,3.022,64,1.018,71,0.855,111,0.855,127,0.005,128,0.005,174,0.825,179,1.123,180,1.761,187,1.068,191,0.603,192,0.292,193,1.97,195,0.738,198,1.743,203,3.001,210,1.526,215,0.598,236,0.952,244,1.336,253,0.932,265,0.825,267,0.894,275,2.871,281,2.897,282,1.277,313,0.738,314,0.738,317,1.626,327,1.75,336,2.376,348,2.439,357,1.743,358,2.549,431,2.322,456,2.749,467,2.555,506,2.024,549,1.018,550,0.738,576,2.678,595,1.848,605,1.588,611,2.774,612,2.208,626,2.208,630,1.662,631,3.215,632,1.743,634,3.903,645,1.123,649,1.123,658,1.833,659,1.018,661,1.588,662,1.018,665,1.459,674,3.023,675,3.875,681,1.068,689,1.123,690,2.208,691,2.451,692,3.712,693,2.451,694,3.71,695,3.179,696,2.451,697,3.162,698,1.185,699,3.117,700,1.185,701,1.934,702,3.607,703,3.487,704,2.451,705,1.185,707,3.487,708,1.185,710,1.185,711,1.185,712,1.185,717,2.451,718,1.833,723,1.833,724,1.185,725,1.185,726,0.894,730,1.833,731,2.68,734,1.068,736,1.018,740,1.185,742,1.185,744,0.973,745,2.106,746,1.743,747,1.185,748,1.934,750,1.123,751,1.068,752,1.185,754,1.068,757,2.451,758,1.185,759,0.663,760,1.123,761,1.185,762,1.185,763,2.874,764,3.343,765,3.126,766,1.068,767,1.123,768,3.685,769,2.322,770,1.934,771,1.185,772,1.185,773,1.123,774,1.185,775,1.123,776,1.185,777,2.68,778,1.185,779,1.185,780,1.185,781,1.185,782,1.185,783,1.185,784,1.185,785,1.123,786,1.123,787,2.451,788,1.068,789,1.185,790,1.185,791,1.185,792,1.934,793,1.934,794,1.185,795,1.185,796,1.185,797,1.934,798,1.934,799,1.185,800,1.185,801,1.185,802,1.833,803,2.451,804,2.828,805,2.828,806,1.934,807,1.934,808,2.828,809,2.451,810,2.828,811,2.828,812,1.185,813,1.934,814,1.934,815,1.934,816,1.185,817,1.934,818,1.185,819,1.934,820,1.185,821,1.185,822,1.185,823,1.185,824,2.954,825,1.123,826,1.068,827,1.185,828,1.123,829,1.934,830,1.185,831,1.185,832,1.775,833,1.185,834,2.451,835,1.185,836,1.185,837,1.934,838,1.185,839,1.185,840,1.185,841,1.185,842,1.185,843,1.068,844,1.934,845,1.934,846,1.185,847,1.934,848,1.185,849,1.185,850,1.185,851,1.185,852,1.185,853,1.185,854,1.185,855,1.185,856,1.185,857,1.185,858,1.934,859,1.185,860,1.185,861,1.185,862,1.662,863,1.185,864,2.451,865,2.451,866,1.185,867,2.451,868,1.185,869,1.185,870,1.185,871,1.934,872,1.185,873,1.185,874,1.185,875,1.833,876,1.185,877,1.185,878,1.185,879,1.068,880,2.322,881,1.123,882,1.185,883,1.934,884,1.934,885,1.185,886,1.934,887,1.934,888,1.185,889,1.185,890,1.185,891,2.451,892,1.185,893,1.185,894,2.451,895,1.185,896,1.123,897,1.185,898,1.185,899,1.185,900,1.185,901,1.185,902,1.018,903,2.208,904,1.185,905,1.743,906,1.185,907,1.185,908,1.185,909,1.833,910,1.185,911,1.185,912,1.185,913,1.934,914,1.185,915,1.185,916,1.123,917,1.018,918,1.185,919,1.185,920,1.185,921,1.185,922,1.185,923,1.185,924,1.018,925,1.185,926,1.185,927,0.973,928,1.185,929,1.185,930,1.185,931,1.185,932,1.185,933,1.185,934,1.185,935,1.185,936,1.185,937,1.185,938,1.185,939,1.185,940,1.185,941,1.185,942,1.185,943,1.123,944,1.123,945,1.185,946,1.123,947,1.123,948,0.973,949,1.185,950,1.934,951,1.185,952,1.123,953,1.185,954,1.123,955,1.068,956,1.185,957,1.185,958,1.185,959,1.185,960,1.185,961,1.185,962,1.185,963,1.185,964,0.932,965,1.185,966,1.185]],["title/interfaces/Path.html",[203,1.571,236,0.743]],["body/interfaces/Path.html",[2,0.16,3,0.16,7,0.124,18,0.367,19,0.697,27,1.073,28,0.013,29,1.413,30,1.363,31,0.57,36,0.292,38,0.157,39,0.024,46,1.124,127,0.01,128,0.01,203,3.278,215,1.568,236,1.193,317,1.372,327,1.242,336,2.005,456,2.933,506,1.767,647,4.739,674,2.945,692,3.892,763,3.97,765,3.207,826,2.798,832,2.249,862,2.668,902,3.356,903,4.25,905,4.314,924,2.668,1153,4.53,1154,4.53,1155,4.53,1157,4.53,1161,4.53,1164,4.53,1166,4.53,1168,4.53,1169,5.699,1170,4.53,1171,4.53,1172,4.53,1173,4.53,1174,4.53,1175,4.53,1176,4.094,1177,4.53]],["title/classes/PeriodsChanged.html",[39,0.019,1428,2.433]],["body/classes/PeriodsChanged.html",[2,0.158,3,0.158,7,0.123,9,1.842,18,0.288,19,0.692,23,1.004,24,0.933,28,0.013,31,0.628,32,1.039,33,0.906,36,0.364,38,0.189,39,0.036,44,2.496,79,0.756,85,1.451,127,0.01,128,0.01,150,1.846,161,1.403,191,0.756,192,0.756,229,2.332,244,1.45,282,1.387,506,1.998,547,3.254,550,1.912,553,2.767,583,1.551,585,4.381,586,3.968,587,3.469,1071,4.238,1072,2.767,1076,2.316,1084,3.837,1428,4.465,1429,3.254,1430,6.488,1431,5.137,1432,4.251,1433,4.251,1434,2.91,1435,3.727,1436,3.727,1437,3.469]],["title/components/PrivacyComponent.html",[0,0.555,108,1.188]],["body/components/PrivacyComponent.html",[0,0.993,1,1.253,2,0.178,3,0.132,4,1.436,5,1.436,6,1.134,7,0.103,9,1.38,10,2.34,11,1.436,12,2.816,13,2.503,14,2.148,16,2.148,18,0.241,21,1.38,22,2.503,23,1.275,24,0.757,27,0.705,28,0.013,29,1.249,36,0.241,37,0.705,38,0.103,39,0.02,40,4.417,45,3.377,46,1.772,48,2.228,69,1.026,70,1.931,71,1.524,72,1.865,73,2.332,74,1.436,79,0.85,80,1.436,81,1.296,82,1.436,83,1.296,84,1.83,85,0.96,86,1.436,87,1.296,88,1.683,89,1.436,90,1.296,91,1.387,92,1.436,93,1.296,94,1.436,95,1.296,96,2.272,97,1.931,98,1.253,99,1.436,100,1.296,101,1.436,102,1.296,103,1.296,104,1.436,105,1.436,106,1.296,107,1.436,108,2.035,109,1.436,110,1.296,111,1.134,112,1.931,113,1.296,114,1.296,115,1.296,116,1.436,117,1.296,118,1.436,119,1.253,120,1.436,121,1.253,122,1.436,123,1.296,124,1.436,125,1.296,126,1.436,127,0.011,128,0.009,138,3.019,211,5.779,325,3.109,537,4.549,647,4.187,707,3.949,769,3.269,1023,2.072,1119,4.549,1250,4.187,1422,5.034,1438,4.293,1439,5.771,1440,5.771,1441,4.293,1442,4.293,1443,6.788,1444,6.082,1445,4.549,1446,5.771,1447,5.771,1448,5.771,1449,5.771,1450,5.771,1451,5.771,1452,5.771,1453,5.771,1454,6.972,1455,5.771,1456,5.771,1457,5.034,1458,5.771,1459,5.771,1460,5.771,1461,4.549,1462,5.771,1463,5.771,1464,6.972,1465,5.771,1466,5.771,1467,5.771,1468,5.034,1469,4.549,1470,5.771]],["title/classes/Relation.html",[39,0.019,824,2.306]],["body/classes/Relation.html",[2,0.06,3,0.125,6,0.515,7,0.047,18,0.109,19,0.433,23,0.381,24,0.678,27,1.22,28,0.013,29,1.268,30,1.392,31,0.422,32,0.394,33,0.979,34,0.844,36,0.312,38,0.152,39,0.024,42,1.329,45,0.879,46,1.201,58,1.001,60,3.002,64,1.64,71,1.07,79,0.287,111,0.843,127,0.005,128,0.005,174,0.812,179,1.808,180,1.743,187,1.05,191,0.69,192,0.47,193,1.95,195,0.725,198,1.719,203,2.979,210,1.508,215,0.589,236,0.855,244,1.323,253,0.916,265,0.812,267,0.879,275,2.757,281,2.725,282,1.2,313,0.725,314,0.725,317,1.615,327,1.744,336,2.361,348,2.433,357,1.719,358,2.524,431,2.296,456,2.741,467,2.537,506,2.038,549,1.001,550,0.725,576,2.655,595,1.827,605,1.567,611,2.609,612,2.183,626,2.183,630,1.64,631,3.197,632,1.719,634,3.888,645,1.104,649,1.104,658,1.808,659,1.001,661,1.567,662,1.001,665,1.439,674,3.008,675,3.857,681,1.05,689,1.104,690,2.524,691,2.8,692,3.691,693,2.423,694,3.144,695,3.157,696,2.423,697,3.141,698,1.165,699,3.089,700,1.165,701,1.908,702,2.928,703,3.925,704,2.423,705,1.165,707,3.464,708,1.165,710,1.165,711,1.165,712,1.165,717,2.423,718,1.808,723,1.808,724,1.165,725,1.165,726,0.879,730,1.808,731,2.654,734,1.05,736,1.001,740,1.165,742,1.165,744,0.957,745,2.082,746,1.719,747,1.165,748,1.908,750,1.104,751,1.05,752,1.165,754,1.05,757,2.423,758,1.165,759,0.652,760,1.104,761,1.165,762,1.165,763,2.851,764,3.319,765,3.108,766,1.05,767,1.104,768,3.157,769,1.808,770,1.908,771,1.165,772,1.165,773,1.104,774,1.165,775,1.104,776,1.165,777,3.586,778,1.165,779,1.165,780,1.165,781,1.165,782,1.165,783,1.165,784,1.165,785,1.104,786,1.104,787,2.423,788,1.05,789,1.165,790,1.165,791,1.165,792,1.908,793,1.908,794,1.165,795,1.165,796,1.165,797,1.908,798,1.908,799,1.165,800,1.165,801,1.165,802,1.808,803,2.423,804,2.8,805,2.8,806,1.908,807,1.908,808,2.8,809,2.423,810,2.8,811,2.8,812,1.165,813,1.908,814,1.908,815,1.908,816,1.165,817,1.908,818,1.165,819,1.908,820,1.165,821,1.165,822,1.165,823,1.165,824,3.319,825,1.808,826,1.719,827,1.908,828,1.808,829,3.318,830,1.908,831,1.165,832,1.755,833,1.165,834,2.423,835,1.165,836,1.165,837,1.908,838,1.165,839,1.165,840,1.165,841,1.165,842,1.165,843,1.05,844,1.908,845,1.908,846,1.165,847,1.908,848,1.165,849,1.165,850,1.165,851,1.165,852,1.165,853,1.165,854,1.165,855,1.165,856,1.165,857,1.165,858,1.908,859,1.165,860,1.165,861,1.165,862,1.64,863,1.165,864,2.423,865,2.423,866,1.165,867,2.423,868,1.165,869,1.165,870,1.165,871,1.908,872,1.165,873,1.165,874,1.165,875,1.808,876,1.165,877,1.165,878,1.165,879,1.05,880,2.296,881,1.104,882,1.165,883,1.908,884,1.908,885,1.165,886,1.908,887,1.908,888,1.165,889,1.165,890,1.165,891,2.423,892,1.165,893,1.165,894,2.423,895,1.165,896,1.104,897,1.165,898,1.165,899,1.165,900,1.165,901,1.165,902,1.001,903,2.183,904,1.165,905,1.719,906,1.165,907,1.165,908,1.165,909,1.808,910,1.165,911,1.165,912,1.165,913,1.908,914,1.165,915,1.165,916,1.104,917,1.001,918,1.165,919,1.165,920,1.165,921,1.165,922,1.165,923,1.165,924,1.001,925,1.165,926,1.165,927,0.957,928,1.165,929,1.165,930,1.165,931,1.165,932,1.165,933,1.165,934,1.165,935,1.165,936,1.165,937,1.165,938,1.165,939,1.165,940,1.165,941,1.165,942,1.165,943,1.104,944,1.104,945,1.165,946,1.104,947,1.104,948,0.957,949,1.165,950,1.908,951,1.165,952,1.104,953,1.165,954,1.104,955,1.05,956,1.165,957,1.165,958,1.165,959,1.165,960,1.165,961,1.165,962,1.165,963,1.165,964,0.916,965,1.165,966,1.165,1471,3.192,1472,1.949,1473,1.949]],["title/classes/Reset.html",[39,0.019,150,1.006]],["body/classes/Reset.html",[2,0.158,3,0.158,7,0.123,9,1.842,18,0.288,19,0.692,23,1.004,24,0.933,28,0.013,31,0.628,32,1.039,33,0.906,36,0.364,38,0.189,39,0.036,44,2.496,79,0.756,85,1.451,127,0.01,128,0.01,150,1.904,161,1.403,191,0.756,192,0.756,229,2.332,244,1.45,282,1.387,506,1.998,547,3.254,550,1.912,553,2.767,583,1.551,585,3.469,586,3.968,587,3.469,1071,4.238,1072,2.767,1076,2.316,1084,3.837,1428,4.251,1429,3.254,1432,4.251,1433,4.251,1434,2.91,1435,3.727,1436,4.707,1437,3.469,1474,6.488,1475,5.137]],["title/injectables/SchedulerService.html",[242,1.515,1476,2.579]],["body/injectables/SchedulerService.html",[2,0.09,3,0.162,7,0.07,18,0.428,21,1.052,23,0.86,24,0.825,27,1.285,28,0.013,29,1.523,30,1.348,31,0.446,32,1.068,36,0.412,37,0.481,38,0.07,39,0.014,42,2.748,44,1.992,46,1.752,48,1.131,53,3.467,60,2.159,79,0.863,84,1.262,127,0.007,128,0.007,150,1.631,187,1.579,191,0.863,192,0.863,203,2.037,242,1.964,264,2.757,265,3.1,266,3.16,267,3.086,268,3.506,269,3.961,270,3.716,275,1.322,282,0.931,303,1.66,304,1.752,305,2.31,306,2.557,317,1.859,324,2.067,325,1.579,327,1.636,345,2.38,347,3.086,352,3.36,354,2.557,386,3.716,407,2.31,456,1.579,497,3.506,506,1.305,528,5.757,544,2.126,582,4.604,611,2.067,612,3.555,631,3.085,632,2.369,653,2.31,659,2.259,665,3.174,744,2.591,745,1.506,759,2.409,765,2.591,832,3.266,879,3.386,881,2.491,896,2.491,924,2.711,927,2.591,1023,1.895,1037,3.19,1087,4.509,1103,3.961,1132,3.836,1229,3.506,1237,3.344,1445,3.467,1461,2.31,1469,4.623,1476,2.786,1477,2.931,1478,4.398,1479,4.398,1480,4.398,1481,2.557,1482,4.161,1483,4.161,1484,2.931,1485,2.931,1486,4.398,1487,4.398,1488,2.931,1489,6.599,1490,5.757,1491,6.599,1492,7.543,1493,4.398,1494,2.931,1495,3.836,1496,4.398,1497,4.398,1498,2.931,1499,7.2,1500,2.557,1501,2.31,1502,2.31,1503,2.931,1504,2.931,1505,2.931,1506,2.931,1507,2.931,1508,2.931,1509,2.931,1510,2.931,1511,2.931,1512,5.117,1513,5.278,1514,2.931,1515,5.865,1516,2.931,1517,2.931,1518,2.931,1519,2.931,1520,2.931,1521,2.931,1522,2.931,1523,2.931,1524,2.931,1525,2.931,1526,5.278,1527,5.151,1528,2.931,1529,5.865,1530,2.931,1531,2.931,1532,2.931,1533,2.931,1534,5.865,1535,2.931,1536,4.398,1537,4.398,1538,4.398,1539,4.398,1540,4.398,1541,3.836,1542,2.931,1543,2.557,1544,2.557,1545,5.278,1546,4.604,1547,5.278,1548,5.278,1549,5.278,1550,4.398,1551,5.278,1552,2.931,1553,2.931,1554,2.931,1555,2.931,1556,2.931,1557,2.931,1558,2.931,1559,2.931,1560,2.931,1561,2.931,1562,2.931,1563,2.931]],["title/components/SearchForTheAreaComponent.html",[0,0.555,110,1.229]],["body/components/SearchForTheAreaComponent.html",[0,0.97,1,0.962,2,0.148,3,0.101,4,1.103,5,1.103,6,0.87,7,0.079,9,1.147,10,2.029,11,1.103,12,2.746,13,2.146,14,1.785,16,1.785,18,0.349,19,0.512,21,1.147,22,2.551,23,0.938,24,1.04,27,1.255,28,0.013,29,1.734,30,0.816,31,0.501,32,0.667,33,0.846,36,0.37,37,0.541,38,0.079,39,0.015,46,0.713,69,0.788,70,1.605,71,1.267,72,1.55,73,2.077,74,1.103,79,0.914,80,1.103,81,0.995,82,1.103,83,0.995,84,1.827,85,1.265,86,1.103,87,0.995,88,1.526,89,1.103,90,0.995,91,1.065,92,1.103,93,0.995,94,1.103,95,0.995,96,1.029,97,1.605,98,0.962,99,1.103,100,0.995,101,1.103,102,0.995,103,0.995,104,1.103,105,1.103,106,0.995,107,1.103,108,0.962,109,1.103,110,1.875,111,2.018,112,1.605,113,0.995,114,0.995,115,0.995,116,1.103,117,0.995,118,1.103,119,0.962,120,1.103,121,0.962,122,1.103,123,0.995,124,1.103,125,0.995,126,1.103,127,0.009,128,0.007,191,0.706,192,0.706,213,3.49,217,3.38,219,2.975,220,2.658,221,3.489,222,3.489,223,3.489,228,2.658,229,1.4,230,2.354,233,1.427,252,2.464,259,3.944,260,4.116,264,2.919,282,1.095,289,1.693,290,1.693,291,1.693,292,1.693,293,1.693,296,1.693,302,1.775,303,1.867,315,1.693,317,1.267,318,1.693,321,2.088,322,1.693,323,1.693,324,3.49,325,1.775,345,1.486,347,2.549,348,1.029,352,2.776,353,3.479,364,3.239,365,3.038,473,5.602,482,1.97,513,1.851,583,2.199,726,2.162,759,2.304,788,2.583,1033,4.184,1081,2.464,1106,2.391,1229,3.712,1235,2.875,1236,2.875,1237,3.038,1240,2.875,1243,5.416,1251,4.894,1266,2.875,1268,2.875,1275,2.875,1481,2.875,1482,4.894,1501,2.598,1512,2.875,1527,4.193,1546,2.875,1564,7.542,1565,6.58,1566,2.875,1567,4.184,1568,4.184,1569,4.796,1570,3.296,1571,3.296,1572,3.296,1573,3.296,1574,4.796,1575,3.296,1576,3.296,1577,3.296,1578,3.296,1579,3.296,1580,3.296,1581,2.875,1582,3.296,1583,4.796,1584,3.296,1585,4.184,1586,3.296,1587,3.296,1588,3.296,1589,3.296,1590,3.296,1591,3.296,1592,3.296,1593,3.296,1594,3.296,1595,3.296,1596,3.296,1597,3.296,1598,3.296,1599,3.296,1600,4.796,1601,3.296,1602,2.875,1603,3.296,1604,3.296,1605,3.296,1606,3.296,1607,3.296,1608,3.296,1609,3.296,1610,2.875]],["title/components/SelectionOfTheAreaComponent.html",[0,0.555,113,1.229]],["body/components/SelectionOfTheAreaComponent.html",[0,0.978,1,0.991,2,0.151,3,0.104,4,1.135,5,1.135,6,0.896,7,0.081,9,1.171,10,2.063,11,1.135,12,2.754,13,2.165,14,1.823,16,1.823,18,0.353,19,0.523,21,1.171,22,2.574,23,0.958,24,1.044,27,1.288,28,0.013,29,1.697,30,0.834,31,0.478,32,0.686,33,0.864,34,2.121,36,0.42,37,0.557,38,0.081,39,0.016,46,0.734,48,2.968,69,0.811,70,1.639,71,1.294,72,1.583,73,2.106,74,1.135,79,0.846,80,1.135,81,1.024,82,1.135,83,1.024,84,1.858,85,1.286,86,1.135,87,1.024,88,1.609,89,1.135,90,1.024,91,1.097,92,1.135,93,1.024,94,1.135,95,1.024,96,1.06,97,1.639,98,0.991,99,1.135,100,1.024,101,1.135,102,1.024,103,1.024,104,1.135,105,1.135,106,1.024,107,1.135,108,0.991,109,1.135,110,1.024,111,0.896,112,1.639,113,1.9,114,2.292,115,1.024,116,1.135,117,1.024,118,1.135,119,0.991,120,1.135,121,0.991,122,1.135,123,1.024,124,1.135,125,1.024,126,1.135,127,0.007,128,0.007,161,0.926,191,0.499,192,0.846,213,3.515,217,3.414,219,3.009,220,2.702,221,3.52,222,3.52,223,3.52,228,2.702,229,1.43,230,2.405,233,1.469,252,2.516,259,3.99,260,4.157,263,3.269,264,2.959,265,2.62,266,3.391,289,1.743,290,1.743,291,1.743,292,1.743,293,1.743,296,1.743,297,2.462,301,3.553,302,1.828,303,1.922,304,2.028,307,1.828,308,1.595,313,1.263,314,1.263,315,1.743,317,1.518,318,1.743,321,2.15,322,1.743,323,1.743,324,1.595,325,1.828,364,3.308,365,3.103,516,2.15,583,1.024,690,2.639,726,3.309,744,3.09,802,3.566,902,2.516,916,2.775,1023,2.063,1024,2.675,1030,2.96,1237,3.103,1317,2.462,1318,2.96,1469,4.961,1566,2.96,1567,4.273,1568,4.273,1611,7.592,1612,6.623,1613,3.393,1614,3.393,1615,3.393,1616,3.393,1617,3.393,1618,3.393,1619,3.393,1620,3.393,1621,3.393,1622,6.294,1623,6.254,1624,3.393,1625,3.393,1626,4.898,1627,3.393,1628,3.393,1629,3.393,1630,3.393,1631,3.393,1632,3.393,1633,3.393,1634,3.393,1635,3.393,1636,3.393,1637,3.393,1638,3.393,1639,4.898,1640,4.898,1641,4.898,1642,4.898,1643,4.273,1644,4.273]],["title/modules/SharedModule.html",[133,1.188,147,2.433]],["body/modules/SharedModule.html",[2,0.195,3,0.152,7,0.119,27,0.813,28,0.013,36,0.466,37,0.813,38,0.177,39,0.023,69,1.183,93,2.496,100,2.518,103,2.518,127,0.01,128,0.01,133,1.85,135,2.43,136,3.765,137,2.666,138,2.744,147,5.065,149,2.979,150,1.223,151,2.542,153,3.431,194,2.666,200,4.596,239,3.342,245,4.279,302,2.666,327,1.183,506,1.223,968,3.901,1357,5.208,1527,3.342,1645,4.317,1646,4.317,1647,4.317,1648,4.317,1649,4.317,1650,6.336,1651,6.336,1652,5.527,1653,4.317,1654,5.527,1655,4.317,1656,5.527,1657,5.527,1658,5.527,1659,4.317,1660,4.317,1661,4.949,1662,4.949,1663,4.317,1664,4.317,1665,3.901,1666,4.949]],["title/interfaces/Simulation.html",[44,1.229,236,0.743]],["body/interfaces/Simulation.html",[2,0.177,3,0.177,7,0.138,18,0.323,19,0.743,28,0.013,30,1.415,31,0.569,38,0.179,44,2.493,46,1.75,127,0.011,128,0.011,236,1.419,282,1.319,456,2.065,484,3.645,514,3.439,595,3.769,596,4.535,597,3.645,598,4.535,599,4.535,600,5.249,601,4.174,602,3.885,603,4.174,604,5.048,605,3.971]],["title/classes/SimulationChanged.html",[39,0.019,1432,2.433]],["body/classes/SimulationChanged.html",[2,0.156,3,0.156,7,0.122,9,1.836,18,0.285,19,0.688,23,0.994,24,0.929,28,0.013,31,0.638,32,1.028,33,0.896,36,0.362,38,0.188,39,0.035,44,2.492,79,0.748,85,1.442,127,0.01,128,0.01,150,1.839,161,1.388,191,0.748,192,0.748,229,2.326,244,1.435,282,1.383,506,1.993,547,3.22,550,1.891,553,2.738,583,1.534,585,3.432,586,3.959,587,3.432,719,4.448,1071,4.226,1072,2.738,1076,2.291,1084,3.822,1428,4.23,1429,3.22,1432,4.448,1433,4.23,1434,2.879,1435,4.674,1436,3.687,1437,3.432,1667,6.444,1668,5.082]],["title/components/SimulationComponent.html",[0,0.555,115,1.229]],["body/components/SimulationComponent.html",[0,0.937,1,0.864,2,0.136,3,0.091,4,0.991,5,0.991,6,0.782,7,0.071,9,1.06,10,1.906,11,0.991,12,2.712,13,2.073,14,1.649,16,1.649,18,0.331,19,0.473,21,1.06,22,2.465,23,0.866,24,1.06,27,1.208,28,0.013,29,1.683,30,1.27,31,0.575,32,0.896,33,0.781,36,0.413,37,0.486,38,0.071,39,0.014,44,2.22,48,2.726,69,0.708,70,1.483,71,1.17,72,1.432,73,1.972,74,0.991,79,0.868,80,0.991,81,0.894,82,0.991,83,0.894,84,1.808,85,0.991,86,0.991,87,0.894,88,1.532,89,0.991,90,0.894,91,0.957,92,0.991,93,0.894,94,0.991,95,0.894,96,0.925,97,1.483,98,0.864,99,0.991,100,0.894,101,0.991,102,0.894,103,0.894,104,0.991,105,0.991,106,0.894,107,0.991,108,0.864,109,0.991,110,0.894,111,0.782,112,1.483,113,0.894,114,1.338,115,1.78,116,0.991,117,0.894,118,0.991,119,0.864,120,0.991,121,0.864,122,0.991,123,0.894,124,0.991,125,0.894,126,0.991,127,0.007,128,0.007,161,0.808,174,1.233,191,0.652,192,0.652,213,3.394,217,3.252,219,2.846,220,2.496,221,3.371,222,3.371,223,3.371,228,2.496,229,1.294,230,2.175,233,1.282,244,1.664,252,2.276,259,3.773,260,3.96,261,2.148,262,4.806,263,3.228,264,2.771,282,1.168,289,1.521,290,1.521,291,1.521,292,1.521,293,1.521,296,1.521,302,1.595,303,1.677,313,1.102,314,1.102,315,1.521,317,1.557,318,1.521,321,1.876,322,1.521,323,1.521,336,1.143,348,2.145,349,4.789,364,2.992,365,2.807,408,2.148,497,3.524,499,4.647,500,4.647,502,5.222,503,5.779,508,3.493,509,3.866,512,2.649,514,2.649,521,3.866,546,2.148,552,2.583,553,1.595,554,3.866,555,3.866,583,0.894,595,3.184,604,3.215,605,2.175,731,2.51,734,3.176,754,3.568,843,3.176,985,3.981,1416,2.583,1417,2.583,1418,2.583,1434,3.576,1483,4.186,1502,2.334,1669,2.961,1670,4.431,1671,4.431,1672,6.624,1673,5.779,1674,4.431,1675,2.961,1676,2.961,1677,2.961,1678,2.961,1679,2.961,1680,2.961,1681,2.961,1682,2.961,1683,2.961,1684,2.961,1685,2.961,1686,2.961,1687,2.961,1688,2.961,1689,2.583,1690,2.334,1691,6.312,1692,2.961,1693,4.431,1694,2.961,1695,2.961,1696,2.961,1697,2.961,1698,2.961,1699,2.961,1700,2.961,1701,2.961,1702,2.961,1703,2.961,1704,4.431,1705,2.961,1706,4.431,1707,4.431,1708,2.961,1709,2.961,1710,2.961,1711,4.431,1712,4.431,1713,4.431,1714,4.431,1715,4.431,1716,4.431,1717,4.431]],["title/classes/SimulationEnded.html",[39,0.019,1433,2.433]],["body/classes/SimulationEnded.html",[2,0.157,3,0.157,7,0.122,9,1.839,18,0.287,19,0.69,23,0.999,24,0.931,28,0.013,31,0.628,32,1.034,33,0.901,36,0.363,38,0.188,39,0.035,44,2.494,79,0.752,85,1.447,127,0.01,128,0.01,150,1.843,161,1.395,191,0.752,192,0.752,229,2.329,244,2.171,282,1.385,506,1.995,547,3.237,550,1.901,553,2.752,583,1.543,585,3.45,586,3.963,587,4.366,1071,4.232,1072,2.752,1076,2.304,1084,3.83,1428,4.24,1429,3.237,1432,4.24,1433,4.457,1434,2.894,1435,3.706,1436,3.706,1437,3.45,1718,6.466,1719,5.109]],["title/modules/SimulationModule.html",[133,1.188,148,2.749]],["body/modules/SimulationModule.html",[2,0.181,3,0.181,7,0.141,28,0.013,36,0.457,37,0.967,38,0.169,39,0.027,69,1.408,127,0.011,128,0.011,133,2.06,135,2.89,136,3.801,137,3.171,138,3.272,148,5.598,149,3.317,150,1.455,151,3.024,153,3.464,160,4.641,161,1.608,308,2.768,386,5.152,497,4.861,545,5.136,1349,3.997,1720,5.136,1721,5.136,1722,5.887,1723,5.887,1724,5.887]],["title/interfaces/SimulationState.html",[236,0.743,1725,3.208]],["body/interfaces/SimulationState.html",[2,0.169,3,0.169,7,0.132,18,0.309,19,0.723,28,0.013,31,0.418,36,0.412,38,0.199,44,2.52,127,0.01,128,0.01,161,1.502,215,1.661,236,1.236,327,1.914,546,3.992,553,3.648,583,2.448,1344,4.913,1349,3.117,1434,3.836,1725,6.391,1726,4.8,1727,7.336,1728,5.338,1729,4.8,1730,6.196,1731,6.308,1732,5.503,1733,4.8,1734,5.907,1735,4.8,1736,4.8,1737,4.8,1738,4.8,1739,4.8]],["title/classes/Statistics.html",[39,0.019,377,2.579]],["body/classes/Statistics.html",[2,0.114,3,0.114,7,0.089,18,0.208,21,1.246,24,1.036,27,1.361,28,0.013,30,1.42,31,0.6,33,0.653,36,0.208,38,0.089,39,0.024,79,1.162,127,0.008,128,0.008,191,1.162,192,1.162,215,1.118,282,1.262,317,1.983,327,0.885,336,2.527,348,2.155,377,4.148,456,2.834,506,1.887,558,1.74,602,2.5,754,4.045,832,2.612,880,3.417,909,3.417,968,6.676,1044,4.546,1176,4.108,1673,5.262,1740,3.701,1741,5.212,1742,5.212,1743,5.212,1744,5.212,1745,5.212,1746,5.212,1747,5.212,1748,5.212,1749,5.212,1750,5.212,1751,5.212,1752,5.212,1753,5.212,1754,5.212,1755,8.557,1756,3.701,1757,5.212,1758,3.701,1759,5.212,1760,3.701,1761,5.212,1762,3.701,1763,5.212,1764,3.701,1765,5.212,1766,3.701,1767,3.701,1768,3.701,1769,5.212,1770,3.701,1771,5.212,1772,3.701,1773,5.212,1774,3.701,1775,5.212,1776,3.701,1777,5.212,1778,3.701,1779,3.229,1780,5.212,1781,5.212,1782,5.212,1783,5.212,1784,3.701,1785,3.701,1786,3.701,1787,3.701,1788,3.701,1789,3.701,1790,5.212,1791,5.212,1792,5.212,1793,5.212,1794,3.701,1795,3.701,1796,3.701,1797,3.701,1798,3.701]],["title/components/StatisticsComponent.html",[0,0.555,117,1.229]],["body/components/StatisticsComponent.html",[0,0.993,1,1.043,2,0.156,3,0.11,4,1.195,5,1.195,6,0.944,7,0.086,9,1.215,10,2.123,11,1.195,12,2.769,13,2.198,14,1.891,16,1.891,18,0.362,19,0.542,21,1.215,22,2.613,23,0.994,24,1.058,27,1.244,28,0.013,29,1.712,30,1.007,31,0.553,32,0.723,33,0.63,36,0.425,37,0.587,38,0.086,39,0.016,44,2.056,48,2.731,69,0.854,70,1.7,71,1.342,72,1.643,73,2.156,74,1.195,79,0.871,80,1.195,81,1.079,82,1.195,83,1.079,84,1.876,85,1.137,86,1.195,87,1.079,88,1.575,89,1.195,90,1.079,91,1.155,92,1.195,93,1.079,94,1.195,95,1.079,96,1.116,97,1.7,98,1.043,99,1.195,100,1.079,101,1.195,102,1.079,103,1.079,104,1.195,105,1.195,106,1.079,107,1.195,108,1.043,109,1.195,110,1.079,111,0.944,112,1.7,113,1.079,114,1.534,115,1.079,116,1.195,117,1.946,118,1.195,119,1.043,120,1.195,121,1.043,122,1.195,123,1.079,124,1.195,125,1.079,126,1.195,127,0.008,128,0.008,161,0.975,174,1.487,191,0.526,192,0.526,213,3.559,217,3.474,219,3.07,220,2.781,221,3.574,222,3.574,223,3.574,228,2.781,229,1.484,230,2.495,233,1.547,252,2.611,259,4.07,260,4.23,263,3.326,264,3.029,282,1.335,289,1.835,290,1.835,291,1.835,292,1.835,293,1.835,296,1.835,302,1.924,303,2.024,307,1.924,308,1.679,315,1.835,317,1.702,318,1.835,321,2.263,322,1.835,323,1.835,327,1.215,341,2.135,345,1.611,346,1.835,347,1.611,352,1.754,353,2.591,365,3.22,377,3.22,386,4.082,407,2.816,408,2.591,421,3.116,497,3.852,504,6.173,516,2.263,537,4.006,560,3.116,574,6.173,723,4.008,1483,4.663,1502,2.816,1690,2.816,1799,3.572,1800,5.082,1801,5.082,1802,7.076,1803,5.082,1804,3.572,1805,3.572,1806,3.572,1807,3.572,1808,3.572,1809,3.572,1810,3.572,1811,3.572,1812,3.572,1813,3.572,1814,3.572,1815,3.572,1816,3.572,1817,3.572,1818,3.572,1819,3.572,1820,4.006]],["title/interfaces/Step.html",[236,0.743,513,1.571]],["body/interfaces/Step.html",[2,0.186,3,0.186,7,0.145,18,0.34,19,0.766,28,0.013,31,0.46,38,0.183,46,1.803,127,0.011,128,0.011,215,1.829,233,3.107,236,1.396,327,1.448,513,3.159,597,3.837,669,3.837,948,3.882,1023,2.745,1277,4.774]],["title/classes/StepChanged.html",[39,0.019,1078,2.433]],["body/classes/StepChanged.html",[2,0.149,3,0.149,7,0.116,9,1.853,18,0.389,19,0.667,23,0.948,24,0.908,28,0.013,30,1.178,31,0.637,32,0.981,33,0.855,36,0.351,38,0.189,39,0.036,79,0.714,84,1.853,85,1.085,88,1.121,127,0.01,128,0.01,150,1.807,161,1.324,191,0.714,192,0.714,229,2.332,244,1.369,282,1.423,506,1.995,513,3.083,550,1.804,583,1.464,586,3.962,719,4.371,759,1.622,1069,3.92,1070,3.071,1071,4.247,1072,2.611,1075,3.071,1076,2.186,1077,2.898,1078,4.371,1079,4.137,1080,4.137,1081,2.49,1082,3.274,1083,3.961,1084,3.887,1085,3.071,1086,3.071,1087,2.898,1088,3.071,1089,3.071,1821,6.252,1822,4.848]],["title/classes/StepError.html",[39,0.019,1079,2.433]],["body/classes/StepError.html",[2,0.15,3,0.15,7,0.117,9,1.855,18,0.39,19,0.669,23,0.953,24,0.911,28,0.013,30,1.181,31,0.627,32,0.986,33,0.859,36,0.352,38,0.189,39,0.036,79,0.717,84,1.855,85,1.09,88,1.127,127,0.01,128,0.01,150,1.811,161,1.33,191,0.717,192,0.717,229,2.334,244,1.376,282,1.461,506,1.997,513,3.087,550,1.813,583,1.471,586,3.966,759,1.63,1069,3.93,1070,3.087,1071,4.252,1072,2.625,1075,3.087,1076,2.197,1077,2.913,1078,4.147,1079,4.379,1080,4.147,1081,2.503,1082,3.29,1083,3.087,1084,3.894,1085,3.974,1086,3.087,1087,2.913,1088,3.087,1089,3.087,1823,6.273,1824,4.873]],["title/classes/StepPending.html",[39,0.019,1080,2.433]],["body/classes/StepPending.html",[2,0.148,3,0.148,7,0.116,9,1.85,18,0.388,19,0.665,23,0.943,24,0.906,28,0.013,30,1.175,31,0.626,32,0.976,33,0.85,36,0.35,38,0.189,39,0.036,79,0.71,84,1.85,85,1.079,88,1.116,127,0.01,128,0.01,150,1.804,161,1.317,191,0.71,192,0.71,229,2.329,244,2.133,282,1.459,506,1.993,513,3.08,550,1.795,583,1.456,586,3.959,759,1.614,1069,3.911,1070,3.056,1071,4.242,1072,2.598,1075,3.056,1076,2.175,1077,2.883,1078,4.127,1079,4.127,1080,4.362,1081,2.477,1082,3.257,1083,3.056,1084,3.881,1085,3.056,1086,3.948,1087,2.883,1088,3.056,1089,3.056,1825,6.232,1826,4.823]],["title/interfaces/Tag.html",[236,0.743,703,2.306]],["body/interfaces/Tag.html",[2,0.061,3,0.127,6,0.526,7,0.048,18,0.112,19,0.439,24,0.261,27,1.225,28,0.013,29,1.279,30,1.385,31,0.361,33,1.087,34,0.862,36,0.315,38,0.153,39,0.022,42,1.352,45,0.898,46,1.027,58,1.023,60,3.027,64,1.023,71,1.086,111,0.858,127,0.005,128,0.005,174,0.829,179,1.128,180,1.766,187,1.073,191,0.605,192,0.293,193,1.976,195,0.741,198,1.75,203,2.989,210,1.531,215,0.601,236,0.954,244,1.34,253,0.936,265,0.829,267,0.898,275,2.78,281,2.752,282,1.279,313,0.741,314,0.741,317,1.629,327,1.752,336,2.38,348,2.44,357,1.75,358,2.556,431,2.33,456,2.751,467,2.56,506,2.025,549,1.023,550,0.741,576,2.685,595,1.854,605,1.594,611,2.636,612,2.216,626,2.216,630,1.668,631,3.22,632,1.75,634,3.907,645,1.128,649,1.128,658,1.84,659,1.023,661,1.594,662,1.023,665,1.464,674,3.027,675,3.88,681,1.073,689,1.128,690,2.216,691,2.459,692,3.702,693,2.459,694,3.176,695,3.185,696,2.459,697,3.167,698,1.19,699,3.124,700,1.19,701,1.941,702,2.961,703,3.716,704,2.459,705,1.19,707,3.493,708,1.19,710,1.19,711,1.19,712,1.19,717,2.459,718,1.84,723,1.84,724,1.19,725,1.19,726,0.898,730,1.84,731,2.688,734,1.073,736,1.023,740,1.19,742,1.19,744,0.978,745,2.113,746,1.75,747,1.19,748,1.941,750,1.128,751,1.073,752,1.19,754,1.073,757,2.459,758,1.19,759,0.666,760,1.128,761,1.19,762,1.19,763,2.88,764,3.35,765,3.131,766,1.073,767,1.128,768,3.185,769,2.33,770,1.941,771,1.19,772,1.941,773,1.84,774,1.941,775,2.688,776,1.19,777,2.688,778,1.19,779,1.19,780,1.19,781,1.19,782,1.19,783,1.19,784,1.19,785,1.128,786,1.128,787,2.459,788,1.073,789,1.19,790,1.19,791,1.19,792,1.941,793,1.941,794,1.19,795,1.19,796,1.19,797,1.941,798,1.941,799,1.19,800,1.19,801,1.19,802,1.84,803,2.459,804,2.836,805,2.836,806,1.941,807,1.941,808,2.836,809,2.459,810,2.836,811,2.836,812,1.19,813,1.941,814,1.941,815,1.941,816,1.19,817,1.941,818,1.19,819,1.941,820,1.19,821,1.19,822,1.19,823,1.19,824,2.961,825,1.128,826,1.073,827,1.19,828,1.128,829,1.941,830,1.19,831,1.19,832,1.781,833,1.19,834,2.459,835,1.19,836,1.19,837,1.941,838,1.19,839,1.19,840,1.19,841,1.19,842,1.19,843,1.073,844,1.941,845,1.941,846,1.19,847,1.941,848,1.19,849,1.19,850,1.19,851,1.19,852,1.19,853,1.19,854,1.19,855,1.19,856,1.19,857,1.19,858,1.941,859,1.19,860,1.19,861,1.19,862,1.668,863,1.19,864,2.459,865,2.459,866,1.19,867,2.459,868,1.19,869,1.19,870,1.19,871,1.941,872,1.19,873,1.19,874,1.19,875,1.84,876,1.19,877,1.19,878,1.19,879,1.073,880,2.33,881,1.128,882,1.19,883,1.941,884,1.941,885,1.19,886,1.941,887,1.941,888,1.19,889,1.19,890,1.19,891,2.459,892,1.19,893,1.19,894,2.459,895,1.19,896,1.128,897,1.19,898,1.19,899,1.19,900,1.19,901,1.19,902,1.023,903,2.216,904,1.19,905,1.75,906,1.19,907,1.19,908,1.19,909,1.84,910,1.19,911,1.19,912,1.19,913,1.941,914,1.19,915,1.19,916,1.128,917,1.023,918,1.19,919,1.19,920,1.19,921,1.19,922,1.19,923,1.19,924,1.023,925,1.19,926,1.19,927,0.978,928,1.19,929,1.19,930,1.19,931,1.19,932,1.19,933,1.19,934,1.19,935,1.19,936,1.19,937,1.19,938,1.19,939,1.19,940,1.19,941,1.19,942,1.19,943,1.128,944,1.128,945,1.19,946,1.128,947,1.128,948,0.978,949,1.19,950,1.941,951,1.19,952,1.128,953,1.19,954,1.128,955,1.073,956,1.19,957,1.19,958,1.19,959,1.19,960,1.19,961,1.19,962,1.19,963,1.19,964,0.936,965,1.19,966,1.19]],["title/components/TermsComponent.html",[0,0.555,119,1.188]],["body/components/TermsComponent.html",[0,1.01,1,1.319,2,0.184,3,0.139,4,1.512,5,1.512,6,1.193,7,0.108,9,1.428,10,2.401,11,1.512,12,2.828,13,2.543,14,2.222,16,2.222,18,0.254,21,1.428,22,2.554,23,1.308,24,0.784,27,0.742,28,0.013,29,1.292,36,0.254,37,0.742,38,0.108,39,0.021,40,4.508,45,3.678,51,4.032,52,4.805,69,1.08,70,1.998,71,1.577,72,1.93,73,2.381,74,1.512,79,0.879,80,1.512,81,1.364,82,1.512,83,1.364,84,1.854,85,1.011,86,1.512,87,1.364,88,1.711,89,1.512,90,1.364,91,1.46,92,1.512,93,1.364,94,1.512,95,1.364,96,2.311,97,1.998,98,1.319,99,1.512,100,1.364,101,1.512,102,1.364,103,1.364,104,1.512,105,1.512,106,1.364,107,1.512,108,1.319,109,1.512,110,1.364,111,1.193,112,1.998,113,1.364,114,1.364,115,1.364,116,1.512,117,1.364,118,1.512,119,2.077,120,1.512,121,1.319,122,1.512,123,1.364,124,1.512,125,1.364,126,1.512,127,0.009,128,0.009,207,4.707,211,5.162,212,6.55,325,4.331,1023,2.144,1250,4.332,1317,4.332,1443,6.207,1445,4.707,1468,5.209,1827,4.518,1828,5.971,1829,5.971,1830,4.518,1831,4.518,1832,5.971,1833,5.971,1834,5.971,1835,5.971,1836,5.971,1837,5.971,1838,4.518,1839,4.518]],["title/components/UiComponent.html",[0,0.555,121,1.188]],["body/components/UiComponent.html",[0,0.889,1,0.932,2,0.171,3,0.098,4,1.068,5,1.068,6,0.843,7,0.077,9,1.12,10,1.993,11,1.068,12,2.736,13,2.224,14,1.744,16,1.744,18,0.179,19,0.5,21,1.12,22,2.196,23,0.916,24,1.018,27,1.21,28,0.013,29,1.62,30,0.543,31,0.549,32,1.318,33,1.148,36,0.426,37,0.524,38,0.077,39,0.015,46,1.323,69,0.763,70,1.568,71,1.238,72,1.515,73,2.046,74,1.068,79,0.959,80,1.068,81,0.964,82,1.068,83,0.964,84,1.683,85,0.714,86,1.068,87,0.964,88,1.628,89,1.068,90,0.964,91,1.032,92,1.068,93,0.964,94,1.068,95,0.964,96,0.997,97,1.568,98,0.932,99,1.068,100,1.415,101,1.068,102,0.964,103,1.415,104,1.068,105,1.068,106,0.964,107,1.068,108,0.932,109,1.068,110,0.964,111,0.843,112,1.568,113,0.964,114,1.415,115,0.964,116,1.068,117,0.964,118,1.068,119,0.932,120,1.068,121,1.785,122,1.068,123,0.964,124,1.068,125,0.964,126,1.068,127,0.007,128,0.007,150,1.739,161,0.872,180,2.618,191,0.817,192,0.817,193,2.712,194,1.72,195,1.188,210,2.741,218,4.376,219,3.376,220,2.875,234,2.517,235,2.517,237,4.027,239,2.156,241,4.437,244,2.252,263,3.308,265,2.835,282,1.241,307,1.72,308,1.501,317,1.798,327,0.763,341,1.909,345,1.44,346,1.64,347,2.503,348,0.997,352,2.725,377,4.314,419,2.316,420,4.843,544,2.316,583,1.415,697,1.64,759,1.857,955,3.668,1081,3.708,1215,5.335,1217,2.785,1225,1.909,1287,3.694,1288,3.694,1305,2.517,1310,2.156,1476,3.875,1527,3.164,1663,2.785,1664,2.785,1665,2.517,1820,5.547,1840,3.193,1841,4.686,1842,4.686,1843,4.686,1844,4.686,1845,3.193,1846,5.94,1847,6.116,1848,6.116,1849,6.116,1850,5.552,1851,6.116,1852,4.843,1853,4.686,1854,3.193,1855,3.193,1856,3.193,1857,3.193,1858,4.686,1859,3.193,1860,4.686,1861,3.193,1862,3.193,1863,3.193,1864,3.193,1865,3.193,1866,3.193,1867,3.193,1868,2.785,1869,2.785,1870,3.193,1871,3.193,1872,3.193,1873,3.193,1874,3.193,1875,3.193,1876,3.193,1877,3.193,1878,5.552,1879,5.552,1880,4.686,1881,4.686,1882,4.686,1883,3.193,1884,3.193,1885,5.552,1886,4.686,1887,3.193,1888,2.785,1889,3.193,1890,3.193,1891,4.686,1892,3.193,1893,3.193,1894,3.193,1895,3.193,1896,3.193]],["title/modules/UiModule.html",[133,1.188,1897,2.953]],["body/modules/UiModule.html",[2,0.133,3,0.133,7,0.103,28,0.013,36,0.474,37,0.708,38,0.139,39,0.02,69,1.031,83,2.265,87,2.265,88,0.997,90,2.265,95,2.265,102,2.265,106,2.265,110,2.265,113,2.265,115,2.265,117,2.265,121,2.19,123,2.265,125,2.265,127,0.009,128,0.009,133,1.69,135,2.117,136,3.52,137,2.323,138,2.83,147,4.484,149,2.721,150,1.066,151,2.215,153,2.842,160,3.399,161,1.178,162,3.762,163,3.762,250,3.762,264,3.526,308,2.027,998,3.762,1103,5.065,1349,3.279,1476,4.752,1500,3.762,1565,3.762,1612,3.762,1869,3.762,1897,6.224,1898,3.762,1899,3.762,1900,3.762,1901,3.762,1902,5.065,1903,4.312,1904,5.789,1905,5.789,1906,3.762,1907,3.762,1908,3.762,1909,3.762,1910,4.312,1911,4.312,1912,5.789,1913,4.312,1914,4.312,1915,4.312,1916,4.312,1917,4.312,1918,4.312,1919,4.312,1920,4.312,1921,4.312,1922,4.312,1923,4.312,1924,4.312,1925,4.312,1926,4.312,1927,4.312]],["title/modules/UiRoutingModule.html",[133,1.188,1902,2.749]],["body/modules/UiRoutingModule.html",[0,0.836,2,0.188,3,0.188,7,0.147,28,0.013,36,0.455,37,1.006,38,0.173,39,0.028,121,2.109,127,0.011,128,0.011,133,1.788,153,3.547,194,3.3,199,5.343,200,5.241,203,2.364,206,5.343,207,4.828,239,4.136,241,4.444,245,4.878,1665,4.828,1868,5.343,1902,4.878,1909,5.343,1928,5.343,1929,6.125]],["title/interfaces/UiState.html",[236,0.743,1930,3.208]],["body/interfaces/UiState.html",[2,0.154,3,0.154,7,0.12,18,0.282,19,0.682,28,0.013,31,0.486,36,0.416,38,0.202,84,1.869,88,1.16,127,0.01,128,0.01,161,1.369,215,1.514,236,1.352,327,1.942,346,2.576,513,2.858,583,2.487,726,2.261,759,2.138,1023,2.887,1081,3.282,1342,4.635,1344,4.635,1349,2.841,1353,3.953,1728,5.036,1729,4.374,1730,6.34,1731,6.401,1930,5.836,1931,4.374,1932,5.574,1933,7.032,1934,7.032,1935,5.015,1936,5.015,1937,5.015,1938,5.015,1939,4.374,1940,4.374,1941,6.134,1942,4.374,1943,5.164,1944,4.374,1945,4.374,1946,4.374,1947,4.374,1948,4.374,1949,4.374]],["title/components/WeatherComponent.html",[0,0.555,123,1.229]],["body/components/WeatherComponent.html",[0,0.967,1,0.952,2,0.146,3,0.1,4,1.091,5,1.091,6,0.861,7,0.078,9,1.138,10,2.017,11,1.091,12,2.742,13,2.192,14,1.771,16,1.771,18,0.183,19,0.508,21,1.138,22,2.543,23,0.931,24,1.061,27,1.289,28,0.013,29,1.748,30,0.555,31,0.552,32,1.137,33,0.991,34,1.412,36,0.408,37,0.536,38,0.078,39,0.015,48,2.648,62,4.077,69,0.78,70,1.592,71,1.257,72,1.538,73,2.067,74,1.091,79,0.967,80,1.091,81,0.985,82,1.091,83,0.985,84,1.694,85,1.065,86,1.091,87,0.985,88,1.638,89,1.091,90,0.985,91,1.054,92,1.091,93,0.985,94,1.091,95,0.985,96,1.019,97,1.592,98,0.952,99,1.091,100,0.985,101,1.091,102,0.985,103,0.985,104,1.091,105,1.091,106,0.985,107,1.091,108,0.952,109,1.091,110,0.985,111,0.861,112,1.592,113,0.985,114,1.437,115,0.985,116,1.091,117,0.985,118,1.091,119,0.952,120,1.091,121,0.952,122,1.091,123,1.865,124,1.091,125,0.985,126,1.091,127,0.007,128,0.007,161,0.891,191,0.827,192,0.827,213,3.481,215,2.071,217,3.368,219,2.962,220,2.642,221,3.478,222,3.478,223,3.478,228,2.642,229,1.389,230,2.337,233,1.412,252,2.445,263,3.33,265,2.34,266,3.328,267,3.274,268,3.693,282,1.305,289,1.675,290,1.675,291,1.675,292,1.675,293,1.675,296,1.675,304,1.95,305,2.571,307,1.757,308,1.533,309,4.163,310,2.845,314,1.214,315,1.675,317,1.735,318,1.675,319,4.152,322,1.675,323,1.675,327,1.138,337,4.977,341,1.95,345,1.471,346,1.675,347,2.534,348,1.019,352,2.759,367,4.43,379,4.87,384,2.571,385,4.977,558,1.533,964,1.533,1126,4.43,1310,2.203,1950,3.262,1951,4.76,1952,4.76,1953,6.179,1954,4.76,1955,6.179,1956,4.76,1957,5.62,1958,3.262,1959,4.76,1960,5.62,1961,4.76,1962,3.262,1963,4.76,1964,3.262,1965,3.262,1966,3.262,1967,3.262,1968,3.262,1969,4.76,1970,3.262,1971,3.262,1972,3.262,1973,3.262,1974,3.262,1975,2.845,1976,3.262,1977,3.262,1978,3.262,1979,4.76,1980,4.76,1981,3.262,1982,6.57,1983,3.262,1984,3.262,1985,4.76,1986,3.262,1987,3.262,1988,3.262,1989,3.262,1990,3.262,1991,3.262,1992,4.76]],["title/interfaces/WeatherConditions.html",[236,0.743,309,2.579]],["body/interfaces/WeatherConditions.html",[2,0.168,3,0.168,7,0.131,18,0.306,19,0.718,28,0.013,30,1.402,31,0.596,38,0.161,46,1.179,62,4.882,127,0.01,128,0.01,192,1.203,215,2.366,236,1.229,253,2.561,267,2.456,282,1.407,294,4.294,309,4.264,337,5.791,550,2.027,718,3.812,1328,4.294,1993,4.752,1994,6.013,1995,6.013,1996,6.013,1997,7.628,1998,4.752,1999,4.752,2000,4.752,2001,4.752,2002,6.371,2003,4.752,2004,4.752,2005,4.752,2006,4.752,2007,4.752,2008,4.752,2009,5.757,2010,5.871,2011,5.305,2012,5.871]],["title/modules/WeatherModule.html",[133,1.188,1393,2.749]],["body/modules/WeatherModule.html",[2,0.189,3,0.189,7,0.147,28,0.013,36,0.432,37,1.008,38,0.173,39,0.028,69,1.467,127,0.011,128,0.011,133,2.111,135,3.012,136,3.895,137,3.305,138,3.329,149,3.399,150,1.516,151,3.152,153,3.55,268,4.906,1393,5.543,2013,5.352,2014,5.352,2015,6.135,2016,6.135]],["title/injectables/WeatherService.html",[242,1.515,268,2.433]],["body/injectables/WeatherService.html",[2,0.114,3,0.114,7,0.089,13,1.12,18,0.208,19,0.557,21,1.248,23,0.725,24,1.016,27,1.271,28,0.013,29,1.418,30,1.175,31,0.559,33,1.065,34,1.606,36,0.429,37,0.609,38,0.089,39,0.017,46,1.745,48,2.988,79,1.054,85,0.83,127,0.008,128,0.008,138,2.26,150,1.62,174,1.544,191,1.172,192,1.172,193,2.875,195,1.38,215,1.978,242,2.247,253,3.367,267,3.701,268,3.12,282,0.654,309,5.004,313,1.38,314,1.942,317,1.984,324,2.453,327,1.567,336,1.432,348,1.158,506,2.004,544,2.69,549,1.905,558,2.453,631,1.821,634,1.998,662,1.905,663,2.69,665,2.954,674,2.954,681,2.811,726,1.672,744,1.821,745,3.366,746,1.998,760,2.101,832,2.26,982,4.552,988,3.235,991,4.114,1023,1.331,1209,3.235,1216,3.786,1229,3.917,1233,2.923,1482,4.76,1501,2.923,1544,4.552,1581,3.235,1623,6.249,1655,3.235,1975,3.235,2017,3.709,2018,7.74,2019,7.163,2020,5.219,2021,5.219,2022,5.219,2023,6.038,2024,6.553,2025,5.219,2026,5.219,2027,3.709,2028,6.553,2029,5.219,2030,5.219,2031,3.709,2032,3.709,2033,3.709,2034,3.709,2035,3.709,2036,3.709,2037,5.219,2038,3.709,2039,5.219,2040,5.219,2041,3.709,2042,3.709,2043,3.709,2044,5.219,2045,3.709,2046,4.552,2047,4.552,2048,5.219,2049,3.709,2050,5.219,2051,3.235,2052,3.709,2053,3.709,2054,3.709,2055,3.709,2056,3.709,2057,3.709,2058,3.709,2059,3.709,2060,3.709,2061,3.709,2062,3.709,2063,3.709,2064,3.709,2065,3.709,2066,5.219,2067,3.709,2068,3.709,2069,6.038,2070,3.709,2071,3.709,2072,3.709,2073,3.709,2074,3.709,2075,3.709,2076,3.709]],["title/components/WizardComponent.html",[0,0.555,125,1.229]],["body/components/WizardComponent.html",[0,0.923,1,1.026,2,0.155,3,0.108,4,1.176,5,1.176,6,0.929,7,0.084,9,1.201,10,2.105,11,1.176,12,2.764,13,2.188,14,1.87,16,1.87,18,0.407,19,0.536,21,1.201,22,2.297,23,0.983,24,0.951,27,1.051,28,0.013,29,1.523,30,0.855,31,0.486,32,0.711,36,0.424,37,0.578,38,0.084,39,0.016,44,1.517,46,1.384,48,1.357,69,0.841,70,1.681,71,1.327,72,1.624,73,2.14,74,1.176,79,0.942,80,1.176,81,1.062,82,1.176,83,1.062,84,1.87,85,1.312,86,1.176,87,1.062,88,1.714,89,1.176,90,1.062,91,1.895,92,1.176,93,1.062,94,1.176,95,1.062,96,1.098,97,1.681,98,1.026,99,1.176,100,1.062,101,1.176,102,1.062,103,1.062,104,1.176,105,1.176,106,1.062,107,1.176,108,1.026,109,1.176,110,1.062,111,1.549,112,1.681,113,1.062,114,1.77,115,1.062,116,1.176,117,1.062,118,1.176,119,1.026,120,1.176,121,1.026,122,1.176,123,1.062,124,1.176,125,1.932,126,1.176,127,0.008,128,0.008,180,1.308,191,0.74,192,0.74,194,1.894,210,1.308,215,1.517,233,1.522,253,2.362,260,3.824,261,2.551,262,5.106,264,3.008,269,3.393,275,2.266,297,2.551,300,4.622,301,2.551,302,1.894,303,1.992,309,2.227,313,1.308,314,1.308,317,1.69,324,2.362,327,1.402,337,2.551,345,1.585,347,2.644,352,2.879,377,3.183,419,2.551,467,1.522,482,2.102,499,2.771,513,2.47,558,3.483,674,1.585,726,2.266,927,1.726,948,1.726,964,1.653,1087,4.332,1221,2.771,1225,2.102,1237,4.053,1251,2.771,1287,3.961,1288,3.961,1305,2.771,1310,2.374,1317,2.551,1476,4.053,1820,5.043,1846,6.321,1852,5.115,1888,3.067,1994,2.771,1995,2.771,1996,2.771,2077,3.516,2078,5.025,2079,5.025,2080,6.14,2081,6.398,2082,5.025,2083,3.516,2084,3.516,2085,3.516,2086,5.025,2087,6.398,2088,3.516,2089,5.581,2090,5.025,2091,5.581,2092,5.025,2093,3.516,2094,3.516,2095,5.864,2096,3.516,2097,3.516,2098,3.516,2099,3.516,2100,4.383,2101,3.516,2102,3.516,2103,3.516,2104,3.516,2105,7.41,2106,5.864,2107,6.768,2108,5.864,2109,3.516,2110,5.864,2111,5.864,2112,3.516,2113,3.516,2114,3.516,2115,3.516,2116,3.516,2117,3.516,2118,3.516,2119,3.516,2120,3.516,2121,3.516,2122,3.516,2123,3.516,2124,3.516,2125,3.516,2126,3.516,2127,3.516]],["title/injectables/WizardService.html",[242,1.515,264,1.913]],["body/injectables/WizardService.html",[2,0.132,3,0.132,7,0.103,18,0.451,19,0.615,21,1.377,23,0.837,24,1.045,27,1.256,28,0.013,29,1.771,30,1.341,31,0.622,36,0.42,37,0.703,38,0.103,39,0.02,46,1.619,79,1.07,88,0.99,114,1.292,127,0.009,128,0.009,150,1.721,161,1.168,180,1.592,191,1.07,192,1.07,210,1.592,242,2.422,263,3.518,264,2.707,282,1.319,307,2.305,308,2.011,506,2.094,513,2.223,516,2.71,558,2.011,583,2.259,584,6.671,586,3.674,663,3.104,759,1.926,1069,3.262,1075,2.71,1077,2.557,1083,2.71,1085,3.648,1086,3.648,1087,4.343,1088,2.71,1216,3.104,1225,2.557,1527,3.888,1943,4.907,2080,6.338,2091,6.073,2128,4.278,2129,5.758,2130,5.758,2131,6.962,2132,6.962,2133,5.758,2134,5.758,2135,5.758,2136,4.278,2137,5.758,2138,4.278,2139,5.758,2140,4.278,2141,4.278,2142,4.278,2143,4.278,2144,5.758,2145,4.278,2146,4.278,2147,4.278,2148,4.278,2149,4.278,2150,4.278,2151,4.278]],["title/interfaces/WizardState.html",[236,0.743,1943,2.749]],["body/interfaces/WizardState.html",[2,0.143,3,0.143,7,0.111,18,0.38,19,0.649,27,1.258,28,0.013,30,1.224,31,0.546,32,0.939,36,0.38,38,0.187,84,1.62,88,1.073,127,0.009,128,0.009,138,2.631,189,2.383,210,2.522,215,1.401,229,1.354,236,1.109,244,2.03,282,1.395,324,2.857,327,1.785,345,2.092,346,3.934,347,3.365,348,1.449,513,3.218,558,3.6,583,2.517,759,2.648,1075,2.94,1076,2.092,1077,2.774,1081,4.066,1083,2.94,1085,2.94,1086,2.94,1088,2.94,1089,3.85,1344,4.408,1345,4.048,1346,4.048,1349,2.628,1352,4.048,1943,5.561,2152,3.657,2153,4.64,2154,4.048,2155,4.048,2156,6.077,2157,6.077,2158,6.077,2159,6.077,2160,6.077,2161,4.64,2162,4.048,2163,4.048,2164,4.048,2165,4.048,2166,4.048,2167,4.048,2168,4.048,2169,4.048]],["title/dependencies.html",[135,2.405,2170,3.393]],["body/dependencies.html",[28,0.013,37,0.917,43,4.051,127,0.01,128,0.01,135,2.741,156,5.386,157,4.957,161,1.525,194,3.008,195,2.078,302,3.008,406,4.871,1185,4.871,1186,4.871,1225,3.338,1653,4.871,1659,4.871,1660,4.871,1906,4.871,1907,4.871,1908,4.871,2171,5.584,2172,8.273,2173,5.584,2174,5.584,2175,5.584,2176,6.833,2177,5.584,2178,5.584,2179,5.584,2180,5.584,2181,5.584,2182,7.694,2183,5.584,2184,5.584,2185,5.584,2186,5.584,2187,5.584,2188,5.584,2189,5.584,2190,5.584,2191,5.584,2192,5.584,2193,5.584,2194,5.584,2195,5.584,2196,5.584,2197,5.584,2198,5.584,2199,5.584,2200,5.584,2201,5.584,2202,5.584,2203,4.871,2204,5.584,2205,6.833,2206,5.584,2207,5.584,2208,5.584,2209,5.584,2210,5.584,2211,5.584,2212,5.584,2213,5.584,2214,5.584,2215,5.584,2216,5.584]],["title/miscellaneous/enumerations.html",[2217,1.922,2218,4.273]],["body/miscellaneous/enumerations.html",[18,0.3,28,0.01,33,1.517,44,2.433,84,1.9,85,1.695,127,0.01,128,0.01,150,1.964,229,2.114,294,5.244,349,4.215,498,4.665,508,5.244,510,5.804,511,5.804,512,3.977,513,3.009,514,3.977,547,4.215,553,2.88,689,3.029,695,3.584,697,3.418,759,1.789,768,3.584,1023,2.72,1069,3.029,1070,3.388,1076,3.265,1077,3.977,1078,3.196,1079,3.196,1080,3.196,1081,2.747,1082,3.611,1278,3.879,1279,4.215,1283,5.244,1328,4.215,1428,3.196,1429,3.388,1432,3.196,1433,3.196,1434,3.029,1993,4.665,1998,4.665,1999,4.665,2000,4.665,2001,4.665,2002,6.318,2003,4.665,2004,4.665,2005,4.665,2006,4.665,2007,4.665,2008,4.665,2009,5.709,2010,5.804,2011,5.244,2012,5.804,2217,3.029,2218,4.665,2219,5.347,2220,4.665,2221,5.347,2222,4.665,2223,5.347,2224,4.665]],["title/miscellaneous/functions.html",[189,2.516,2217,1.922]],["body/miscellaneous/functions.html",[18,0.306,28,0.013,33,1.188,44,1.647,48,2.6,79,1.203,84,1.304,127,0.01,128,0.01,173,6.375,189,2.802,191,1.203,192,1.203,215,2.034,229,2.331,408,4.886,538,3.957,583,2.206,661,2.678,662,3.46,843,4.511,967,4.3,981,4.759,983,5.876,984,4.759,985,3.684,986,4.759,990,4.759,991,4.3,992,4.759,1023,1.958,1076,3.295,1216,3.957,1343,4.3,1349,4.14,1350,4.759,1689,5.876,1690,5.31,2100,6.375,2152,4.3,2155,4.759,2217,3.09,2225,6.966,2226,6.736,2227,6.736,2228,4.759,2229,5.455,2230,6.736,2231,4.759,2232,6.736,2233,4.759,2234,5.455,2235,5.455,2236,5.455,2237,5.455,2238,6.736,2239,5.455,2240,4.759,2241,5.455]],["title/index.html",[18,0.191,512,2.028,665,1.53]],["body/index.html",[7,0.178,28,0.011,40,4.708,41,4.467,42,2.871,43,4.111,44,2.082,45,2.555,46,1.492,47,4.467,48,2.188,51,3.827,53,5.435,54,6.015,55,4.944,56,4.944,57,4.944,58,2.911,59,4.944,63,4.944,64,3.542,66,4.944,68,7.116,72,1.832,96,1.77,127,0.011,128,0.011,182,4.467,189,3.542,324,3.635,478,4.467,541,4.944,775,3.906,927,2.782,1023,2.475,1105,4.467,1239,4.944,1250,5.75,1541,6.914,2047,4.944,2242,5.667,2243,5.667,2244,8.341,2245,5.667,2246,7.432,2247,6.895,2248,5.667,2249,5.667,2250,5.667,2251,6.895,2252,5.667,2253,5.667,2254,5.667,2255,5.667,2256,5.667,2257,5.667,2258,6.895,2259,5.667,2260,5.667,2261,5.667,2262,5.667,2263,5.667]],["title/license.html",[52,2.291,512,2.028,665,1.53]],["body/license.html",[7,0.138,28,0.011,45,3.137,51,3.885,52,3.885,64,2.955,75,5.897,76,4.535,77,4.535,127,0.011,128,0.011,138,2.491,151,2.955,229,1.679,253,2.705,474,5.019,730,3.259,773,3.259,825,3.259,1037,5.048,1444,6.07,1461,4.535,1490,5.019,1495,5.019,1602,6.07,2046,5.019,2089,5.019,2264,5.753,2265,5.753,2266,5.753,2267,5.753,2268,5.753,2269,7.773,2270,8.313,2271,6.959,2272,7.481,2273,5.753,2274,7.481,2275,5.753,2276,5.753,2277,5.753,2278,5.753,2279,5.753,2280,5.753,2281,5.753,2282,5.753,2283,5.753,2284,5.753,2285,5.753,2286,6.959,2287,6.959,2288,5.753,2289,5.753,2290,6.959,2291,5.753,2292,5.753,2293,5.753,2294,5.753,2295,5.753,2296,5.753,2297,5.753,2298,5.753,2299,5.753,2300,5.753,2301,5.753,2302,5.753,2303,5.753,2304,5.753,2305,5.753,2306,5.753,2307,5.753]],["title/modules.html",[133,1.625]],["body/modules.html",[28,0.011,127,0.011,128,0.011,133,1.788,134,4.444,143,4.136,144,4.136,145,4.136,146,4.136,147,3.662,148,4.136,157,6.055,832,3.327,1357,3.881,1393,4.136,1543,6.702,1610,7.281,1897,4.444,1902,4.136,2308,8.347,2309,8.466]],["title/overview.html",[2310,4.856]],["body/overview.html",[0,0.586,1,1.903,28,0.013,38,0.103,39,0.02,69,1.026,81,2.311,83,1.968,87,1.968,90,1.968,93,2.311,95,1.968,98,1.903,100,2.311,102,1.968,103,2.311,106,1.968,108,1.903,110,1.968,113,1.968,115,1.968,117,1.968,119,1.903,121,1.903,123,1.968,125,1.968,127,0.009,128,0.009,133,1.685,134,6.128,135,2.108,136,2.313,137,2.313,138,1.859,139,3.745,140,3.745,141,3.745,142,3.745,143,4.403,144,4.912,145,4.912,146,5.169,147,4.938,148,5.169,149,2.713,150,1.061,151,2.205,236,0.784,242,1.597,264,3.065,266,3.512,268,3.897,270,4.13,386,4.13,497,3.897,606,3.745,607,3.745,751,2.313,1103,4.403,1227,3.745,1228,3.745,1229,3.897,1357,4.849,1390,3.745,1391,3.745,1392,3.745,1393,4.912,1476,4.13,1645,3.745,1646,3.745,1647,3.745,1648,3.745,1720,3.745,1721,3.745,1897,6.214,1898,3.745,1899,3.745,1900,3.745,1901,3.745,1902,4.403,2013,3.745,2014,3.745,2310,3.745,2311,4.293,2312,4.293,2313,4.293,2314,4.293]],["title/miscellaneous/typealiases.html",[2217,1.922,2315,4.898]],["body/miscellaneous/typealiases.html",[18,0.348,28,0.013,30,1.054,31,0.471,127,0.011,128,0.011,150,1.908,282,1.092,967,4.884,976,6.734,1069,3.51,1070,3.925,1078,3.703,1079,3.703,1080,3.703,1089,4.891,1278,4.494,1279,4.884,1285,6.085,1428,3.703,1429,3.925,1432,3.703,1433,3.703,1437,5.213,2217,3.51,2220,5.405,2222,5.405,2224,5.405,2225,5.405,2316,6.196]],["title/miscellaneous/variables.html",[2217,1.922,2317,4.273]],["body/miscellaneous/variables.html",[18,0.126,28,0.013,30,0.864,31,0.623,32,1.656,33,1.443,38,0.159,42,2.462,44,2.098,46,0.772,48,2.142,58,1.15,60,1.099,69,0.853,84,0.853,114,0.676,127,0.005,128,0.005,147,2.661,149,1.052,180,2.632,189,2.287,191,0.329,200,1.624,203,1.718,210,2.471,236,0.409,244,1.434,267,1.609,281,1.752,282,1.042,313,1.656,336,0.864,346,2.609,348,1.847,362,1.953,363,3.113,409,3.883,410,3.883,411,3.883,419,2.589,439,1.764,447,1.953,451,1.953,456,1.281,462,1.953,463,3.113,467,1.545,471,1.953,477,3.113,480,1.764,482,1.338,500,2.813,502,1.764,513,2.842,538,1.624,553,2.989,558,2.388,583,2.318,597,2.261,611,1.678,630,2.85,631,1.099,661,1.099,669,2.261,690,1.206,695,1.206,697,1.15,726,1.009,734,1.923,736,2.287,744,2.493,745,1.15,746,1.206,750,1.268,751,1.923,759,1.856,764,1.268,765,1.752,766,3.577,788,1.206,862,1.833,917,1.833,946,1.268,947,1.268,948,1.099,952,1.268,954,2.022,964,1.678,985,1.512,1023,2.495,1037,2.589,1081,2.85,1101,3.006,1119,4.89,1123,2.813,1187,3.883,1200,3.113,1202,3.113,1204,1.953,1205,1.953,1206,1.953,1233,2.813,1237,1.418,1277,1.764,1306,3.883,1310,1.512,1342,4.5,1343,1.764,1348,3.883,1349,3.349,1353,2.813,1356,3.883,1357,3.218,1358,1.953,1359,1.953,1360,1.953,1361,1.953,1363,1.953,1364,1.953,1365,1.953,1366,1.953,1367,1.953,1368,1.953,1369,1.953,1370,1.953,1371,1.953,1372,1.953,1373,1.953,1374,1.953,1375,1.953,1434,3.143,1457,1.953,1585,1.953,1643,1.953,1644,1.953,1649,1.953,1652,1.953,1654,1.953,1656,1.953,1657,1.953,1658,1.953,1725,5.576,1726,1.953,1728,4.003,1730,5.478,1731,6.235,1733,1.953,1734,4.431,1735,1.953,1736,3.113,1737,1.953,1738,1.953,1739,1.953,1779,1.953,1928,1.953,1930,2.813,1931,1.953,1932,3.113,1939,1.953,1940,1.953,1941,4.84,1942,1.953,1943,4.85,1944,1.953,1945,1.953,1946,1.953,1947,1.953,1948,1.953,1949,1.953,1994,1.764,1995,1.764,1996,4.661,2009,1.764,2011,1.764,2051,5.158,2152,1.764,2154,3.883,2162,3.883,2163,1.953,2164,3.883,2165,1.953,2166,3.883,2167,1.953,2168,3.883,2169,1.953,2203,3.113,2217,1.268,2228,3.113,2231,4.431,2233,4.84,2240,1.953,2317,1.953,2318,4.451,2319,5.913,2320,7.363,2321,2.238,2322,2.238,2323,2.238,2324,4.451,2325,4.451,2326,4.451,2327,2.238,2328,4.451,2329,2.238,2330,2.238,2331,2.238,2332,3.569,2333,2.238,2334,7.074,2335,3.569,2336,3.569,2337,3.569,2338,3.569,2339,3.569,2340,4.451,2341,3.569,2342,3.569,2343,2.238,2344,2.238,2345,2.238,2346,3.569,2347,2.238,2348,2.238,2349,2.238,2350,4.451,2351,4.451,2352,4.451,2353,4.451,2354,2.238,2355,3.569,2356,3.569,2357,5.079,2358,2.238,2359,2.238,2360,2.238,2361,3.569,2362,2.238,2363,2.238,2364,2.238,2365,2.238,2366,2.238,2367,3.569,2368,2.238,2369,2.238,2370,2.238,2371,2.238,2372,2.238,2373,5.079,2374,2.238,2375,3.569,2376,2.238,2377,5.079,2378,2.238,2379,2.238,2380,2.238,2381,2.238,2382,2.238,2383,2.238,2384,2.238,2385,2.238,2386,2.238,2387,2.238,2388,2.238,2389,2.238,2390,2.238,2391,2.238,2392,2.238,2393,2.238,2394,2.238,2395,2.238,2396,2.238,2397,2.238,2398,2.238,2399,3.569,2400,2.238,2401,2.238,2402,2.238,2403,2.238,2404,2.238,2405,2.238,2406,2.238,2407,2.238,2408,2.238,2409,2.238,2410,2.238,2411,4.451,2412,2.238,2413,3.569,2414,2.238,2415,2.238,2416,2.238,2417,2.238,2418,2.238,2419,2.238,2420,2.238,2421,3.569,2422,2.238,2423,2.238,2424,2.238,2425,2.238,2426,2.238,2427,2.238,2428,2.238,2429,2.238,2430,2.238,2431,2.238,2432,3.569,2433,2.238,2434,2.238,2435,2.238,2436,2.238,2437,2.238,2438,2.238,2439,2.238,2440,2.238,2441,2.238]]],"invertedIndex":[["",{"_index":28,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"interfaces/SimulationState.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":348,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"components/SimulationComponent.html":{},"classes/Statistics.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["0.0.3",{"_index":2199,"title":{},"body":{"dependencies.html":{}}}],["0.009",{"_index":2418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.25",{"_index":2434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.3",{"_index":1201,"title":{},"body":{"components/HomeComponent.html":{}}}],["0.404",{"_index":2419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.5",{"_index":1208,"title":{},"body":{"components/HomeComponent.html":{}}}],["0.5.7",{"_index":2204,"title":{},"body":{"dependencies.html":{}}}],["0.75",{"_index":2436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.8.26",{"_index":2216,"title":{},"body":{"dependencies.html":{}}}],["0.91",{"_index":2417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["00",{"_index":995,"title":{},"body":{"classes/EnumValues.html":{}}}],["004ba0",{"_index":2408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["01d",{"_index":2423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["02d",{"_index":2424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["03d",{"_index":2425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["04d",{"_index":2426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["09d",{"_index":2427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0m",{"_index":2371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":336,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"components/SimulationComponent.html":{},"classes/Statistics.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["1.1.0",{"_index":2197,"title":{},"body":{"dependencies.html":{}}}],["1.455",{"_index":2420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10",{"_index":751,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":954,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["1000",{"_index":982,"title":{},"body":{"classes/EnumValues.html":{},"injectables/WeatherService.html":{}}}],["1000)).slice",{"_index":996,"title":{},"body":{"classes/EnumValues.html":{}}}],["10000",{"_index":2411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10d",{"_index":2428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11",{"_index":2311,"title":{},"body":{"overview.html":{}}}],["11d",{"_index":2429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.476358",{"_index":2384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13",{"_index":1449,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["13d",{"_index":2430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16",{"_index":1334,"title":{},"body":{"components/MapComponent.html":{}}}],["17",{"_index":2314,"title":{},"body":{"overview.html":{}}}],["18",{"_index":1309,"title":{},"body":{"components/MapComponent.html":{}}}],["196/2003",{"_index":1452,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["1976d2",{"_index":2409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1]).patchvalu",{"_index":1060,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["1].destin",{"_index":1040,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["1].edg",{"_index":934,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["2",{"_index":467,"title":{},"body":{"components/ChartsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["2.0.8",{"_index":2208,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":2209,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":2206,"title":{},"body":{"dependencies.html":{}}}],["2.5.7",{"_index":2213,"title":{},"body":{"dependencies.html":{}}}],["2.7.2",{"_index":2200,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":2399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2016/679",{"_index":1455,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["2018",{"_index":2265,"title":{},"body":{"license.html":{}}}],["21",{"_index":2312,"title":{},"body":{"overview.html":{}}}],["23",{"_index":2313,"title":{},"body":{"overview.html":{}}}],["24",{"_index":1643,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{},"miscellaneous/variables.html":{}}}],["250px",{"_index":1894,"title":{},"body":{"components/UiComponent.html":{}}}],["3",{"_index":964,"title":{},"body":{"classes/Edge.html":{},"classes/EnumValues.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["3.6",{"_index":807,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["30",{"_index":2388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":1310,"title":{},"body":{"components/MapComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["40",{"_index":2348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["41.910943",{"_index":2383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":419,"title":{},"body":{"components/ChartsComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["5.1.5",{"_index":2191,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":806,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["500",{"_index":2437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5000",{"_index":1890,"title":{},"body":{"components/UiComponent.html":{}}}],["50d",{"_index":2431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.0.0",{"_index":2178,"title":{},"body":{"dependencies.html":{}}}],["6.0.1",{"_index":2182,"title":{},"body":{"dependencies.html":{}}}],["6.0.15",{"_index":2195,"title":{},"body":{"dependencies.html":{}}}],["6.0.2",{"_index":2193,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":2180,"title":{},"body":{"dependencies.html":{}}}],["6.1.1",{"_index":2172,"title":{},"body":{"dependencies.html":{}}}],["6.1.2",{"_index":2186,"title":{},"body":{"dependencies.html":{}}}],["6.1.4",{"_index":2184,"title":{},"body":{"dependencies.html":{}}}],["6.2.2",{"_index":2214,"title":{},"body":{"dependencies.html":{}}}],["6.4.3",{"_index":2176,"title":{},"body":{"dependencies.html":{}}}],["6.5.2",{"_index":2211,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":988,"title":{},"body":{"classes/EnumValues.html":{},"injectables/WeatherService.html":{}}}],["60)).slice",{"_index":989,"title":{},"body":{"classes/EnumValues.html":{}}}],["63a4ff",{"_index":2346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["666",{"_index":465,"title":{},"body":{"components/ChartsComponent.html":{}}}],["70",{"_index":1206,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["76d219",{"_index":2393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["840",{"_index":1210,"title":{},"body":{"components/HomeComponent.html":{}}}],["9",{"_index":2111,"title":{},"body":{"components/WizardComponent.html":{}}}],["about'},{'nam",{"_index":80,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["about.component.html",{"_index":17,"title":{},"body":{"components/AboutComponent.html":{}}}],["about.component.scss",{"_index":15,"title":{},"body":{"components/AboutComponent.html":{}}}],["about/about.compon",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["aboutcompon",{"_index":1,"title":{"components/AboutComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["abov",{"_index":2285,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":216,"title":{},"body":{"classes/BaseComponent.html":{}}}],["abstractcontrol",{"_index":279,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["accept",{"_index":1833,"title":{},"body":{"components/TermsComponent.html":{}}}],["accessor",{"_index":297,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WizardComponent.html":{}}}],["account",{"_index":725,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["acquir",{"_index":1462,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["action",{"_index":229,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"components/NumericComponent.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/WeatherComponent.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["action.payload",{"_index":2160,"title":{},"body":{"interfaces/WizardState.html":{}}}],["action.payload.map",{"_index":1354,"title":{},"body":{"interfaces/MapState.html":{}}}],["action.payload.nextindex",{"_index":2161,"title":{},"body":{"interfaces/WizardState.html":{}}}],["action.payload.step",{"_index":2158,"title":{},"body":{"interfaces/WizardState.html":{}}}],["action.typ",{"_index":1352,"title":{},"body":{"interfaces/MapState.html":{},"interfaces/WizardState.html":{}}}],["actionreducermap",{"_index":1728,"title":{},"body":{"interfaces/SimulationState.html":{},"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["actions/map.act",{"_index":1347,"title":{},"body":{"interfaces/MapState.html":{}}}],["actions/wizard.act",{"_index":2153,"title":{},"body":{"interfaces/WizardState.html":{}}}],["actual_compon",{"_index":126,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["add",{"_index":1046,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/HomeComponent.html":{}}}],["adddestin",{"_index":1002,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["adddestination(control",{"_index":1009,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["addedge(edg",{"_index":859,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["addorigin",{"_index":1003,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["addorigin(control",{"_index":1011,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["addorupdatenode(nod",{"_index":846,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["address",{"_index":1251,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{},"components/WizardComponent.html":{}}}],["addweathercondit",{"_index":2021,"title":{},"body":{"injectables/WeatherService.html":{}}}],["addweatherconditions(data",{"_index":2031,"title":{},"body":{"injectables/WeatherService.html":{}}}],["adjust",{"_index":746,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["adjustmentfactorcoeffici",{"_index":2416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["administr",{"_index":2374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["afterdatasetsdraw",{"_index":2345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["afterviewinit",{"_index":367,"title":{},"body":{"components/ChartsComponent.html":{},"components/HomeComponent.html":{},"components/WeatherComponent.html":{}}}],["again",{"_index":1531,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["algorithm",{"_index":894,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["alias",{"_index":2316,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alreadi",{"_index":1054,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["altern",{"_index":925,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["analysi",{"_index":2413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["and/or",{"_index":2280,"title":{},"body":{"license.html":{}}}],["angular",{"_index":66,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["angular/anim",{"_index":2171,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2177,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/stepp",{"_index":2098,"title":{},"body":{"components/WizardComponent.html":{}}}],["angular/cli",{"_index":2248,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":1653,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":1655,"title":{},"body":{"modules/SharedModule.html":{},"injectables/WeatherService.html":{}}}],["angular/compil",{"_index":2173,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":37,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"modules/MaterialModule.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":1659,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/form",{"_index":302,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WizardComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":2174,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":1225,"title":{},"body":{"components/InfoDialogComponent.html":{},"modules/MaterialModule.html":{},"components/MessageArchivedComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":194,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"modules/SharedModule.html":{},"components/UiComponent.html":{},"modules/UiRoutingModule.html":{},"components/WizardComponent.html":{},"dependencies.html":{}}}],["anim",{"_index":1185,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{}}}],["animate('500m",{"_index":2370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animationtriggermetadata",{"_index":2367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["anime.timelin",{"_index":1197,"title":{},"body":{"components/HomeComponent.html":{}}}],["animej",{"_index":1186,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{}}}],["annot",{"_index":2203,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["anoth",{"_index":1534,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["api",{"_index":1250,"title":{},"body":{"injectables/LocationService.html":{},"components/PrivacyComponent.html":{},"components/TermsComponent.html":{},"index.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{}}}],["app.compon",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":131,"title":{},"body":{"components/AppComponent.html":{}}}],["app_initi",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":81,"title":{"components/AppComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["appconfig",{"_index":1975,"title":{},"body":{"components/WeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["appconfig.apis.openweathermap.apikey",{"_index":2059,"title":{},"body":{"injectables/WeatherService.html":{}}}],["appconfig.apis.openweathermap.forecasturl",{"_index":2052,"title":{},"body":{"injectables/WeatherService.html":{}}}],["appconfig.apis.openweathermap.iconurl",{"_index":1990,"title":{},"body":{"components/WeatherComponent.html":{}}}],["appconfig.apis.openweathermap.weatherurl",{"_index":2053,"title":{},"body":{"injectables/WeatherService.html":{}}}],["appconfig.firebase.projectid",{"_index":2357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appli",{"_index":1122,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["applic",{"_index":1445,"title":{},"body":{"components/PrivacyComponent.html":{},"injectables/SchedulerService.html":{},"components/TermsComponent.html":{}}}],["appmodul",{"_index":134,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppreloadingstrategi",{"_index":181,"title":{"classes/AppPreloadingStrategy.html":{}},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{}}}],["approutingmodul",{"_index":143,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["archived.compon",{"_index":1663,"title":{},"body":{"modules/SharedModule.html":{},"components/UiComponent.html":{}}}],["archived.component.t",{"_index":1383,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["archived.component.ts:11",{"_index":1386,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["archived.component.ts:13",{"_index":1387,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["area",{"_index":1237,"title":{},"body":{"injectables/LocationService.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["area'},{'nam",{"_index":112,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["area.compon",{"_index":1912,"title":{},"body":{"modules/UiModule.html":{}}}],["area.component.html",{"_index":1568,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.scss",{"_index":1567,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.t",{"_index":1566,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:16",{"_index":1570,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:18",{"_index":1569,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:21",{"_index":1614,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:23",{"_index":1615,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:27",{"_index":1572,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:28",{"_index":1621,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:33",{"_index":1577,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:35",{"_index":1625,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:42",{"_index":1573,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:43",{"_index":1613,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:46",{"_index":1576,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:50",{"_index":1575,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:53",{"_index":1616,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:59",{"_index":1619,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:73",{"_index":1617,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:78",{"_index":1571,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:81",{"_index":1618,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area/search",{"_index":1565,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"modules/UiModule.html":{}}}],["area/select",{"_index":1612,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{},"modules/UiModule.html":{}}}],["areamaxlimit",{"_index":2387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["areaminlimit",{"_index":2389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["argmin",{"_index":614,"title":{},"body":{"injectables/DemandService.html":{}}}],["argmin(linkflow",{"_index":625,"title":{},"body":{"injectables/DemandService.html":{}}}],["argument",{"_index":629,"title":{},"body":{"injectables/DemandService.html":{}}}],["aris",{"_index":2307,"title":{},"body":{"license.html":{}}}],["array",{"_index":650,"title":{},"body":{"injectables/DemandService.html":{}}}],["array(this.odmatrix.length).fill(0",{"_index":671,"title":{},"body":{"injectables/DemandService.html":{}}}],["arriv",{"_index":1716,"title":{},"body":{"components/SimulationComponent.html":{}}}],["arrivedvehicl",{"_index":598,"title":{},"body":{"interfaces/Counts.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{}}}],["art",{"_index":1448,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["assign",{"_index":632,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{}}}],["assignmentmatrix",{"_index":645,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["assignmentmatrix[z",{"_index":677,"title":{},"body":{"injectables/DemandService.html":{}}}],["associ",{"_index":1495,"title":{},"body":{"injectables/SchedulerService.html":{},"license.html":{}}}],["attach",{"_index":774,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["attribut",{"_index":770,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["author",{"_index":2297,"title":{},"body":{"license.html":{}}}],["avail",{"_index":1543,"title":{},"body":{"injectables/SchedulerService.html":{},"modules.html":{}}}],["avg",{"_index":604,"title":{},"body":{"interfaces/Counts.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{},"components/SimulationComponent.html":{}}}],["avgspe",{"_index":1672,"title":{},"body":{"components/SimulationComponent.html":{}}}],["axi",{"_index":463,"title":{},"body":{"components/ChartsComponent.html":{},"miscellaneous/variables.html":{}}}],["b",{"_index":960,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["babdb",{"_index":2391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bachelor'",{"_index":56,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["bachelor\\'",{"_index":78,"title":{},"body":{"components/AboutComponent.html":{}}}],["backgroundcolor",{"_index":468,"title":{},"body":{"components/ChartsComponent.html":{}}}],["bar",{"_index":1384,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["bar'},{'nam",{"_index":105,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["base",{"_index":681,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{}}}],["basecolor",{"_index":2390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basecompon",{"_index":213,"title":{"classes/BaseComponent.html":{}},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["basecomponent:11",{"_index":290,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["basecomponent:13",{"_index":289,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["basecomponent:22",{"_index":293,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["basecomponent:27",{"_index":291,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["basecomponent:32",{"_index":292,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["basecomponent:9",{"_index":296,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["basictimelin",{"_index":1196,"title":{},"body":{"components/HomeComponent.html":{}}}],["becom",{"_index":1538,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["befor",{"_index":914,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["beginatzero",{"_index":2341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["belong",{"_index":654,"title":{},"body":{"injectables/DemandService.html":{}}}],["beta.17",{"_index":2179,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":690,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["bf",{"_index":910,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["blur",{"_index":2116,"title":{},"body":{"components/WizardComponent.html":{}}}],["boolean",{"_index":244,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["bordercolor",{"_index":441,"title":{},"body":{"components/ChartsComponent.html":{}}}],["borderwidth",{"_index":466,"title":{},"body":{"components/ChartsComponent.html":{}}}],["bound",{"_index":1317,"title":{},"body":{"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/TermsComponent.html":{},"components/WizardComponent.html":{}}}],["breadth",{"_index":908,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["break",{"_index":352,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["broken",{"_index":2006,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["brokencloud",{"_index":2005,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["brows",{"_index":2309,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1315,"title":{},"body":{"components/MapComponent.html":{}}}],["buildodpair",{"_index":256,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["buildodpair(odpair",{"_index":274,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["built",{"_index":65,"title":{},"body":{"components/AboutComponent.html":{}}}],["busiest",{"_index":455,"title":{},"body":{"components/ChartsComponent.html":{}}}],["busiestchart",{"_index":371,"title":{},"body":{"components/ChartsComponent.html":{}}}],["busiestchartopt",{"_index":410,"title":{},"body":{"components/ChartsComponent.html":{},"miscellaneous/variables.html":{}}}],["busiestcolor",{"_index":411,"title":{},"body":{"components/ChartsComponent.html":{},"miscellaneous/variables.html":{}}}],["busiestctx",{"_index":372,"title":{},"body":{"components/ChartsComponent.html":{}}}],["c",{"_index":2264,"title":{},"body":{"license.html":{}}}],["calc",{"_index":1492,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["calcassignmentmatrix(odpair",{"_index":890,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["calcincidencematrix",{"_index":882,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["calclinkflow",{"_index":705,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["calcmaxflow",{"_index":706,"title":{},"body":{"classes/Edge.html":{}}}],["calcmaxflow(factor",{"_index":742,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["calcodmatrix",{"_index":615,"title":{},"body":{"injectables/DemandService.html":{}}}],["calcpathcosts(odpair",{"_index":966,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["calcshortestpath",{"_index":1558,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["calcshortestpaths(odpair",{"_index":878,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["calcshortestpathsprobabilities(odpair",{"_index":949,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["calcul",{"_index":634,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{}}}],["calendar_today",{"_index":1639,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["call",{"_index":2039,"title":{},"body":{"injectables/WeatherService.html":{}}}],["cancomponentdeactiv",{"_index":237,"title":{"interfaces/CanComponentDeactivate.html":{}},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/UiComponent.html":{}}}],["candeactiv",{"_index":241,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/UiComponent.html":{},"modules/UiRoutingModule.html":{}}}],["candeactivate(compon",{"_index":246,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{}}}],["candeactivateguard",{"_index":245,"title":{"injectables/CanDeactivateGuard.html":{}},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"modules/SharedModule.html":{},"modules/UiRoutingModule.html":{}}}],["cannnot",{"_index":1533,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["capac",{"_index":477,"title":{},"body":{"components/ChartsComponent.html":{},"miscellaneous/variables.html":{}}}],["case",{"_index":347,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{}}}],["catch((error",{"_index":1587,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["catcherror",{"_index":2049,"title":{},"body":{"injectables/WeatherService.html":{}}}],["catcherror((error",{"_index":2063,"title":{},"body":{"injectables/WeatherService.html":{}}}],["categori",{"_index":1457,"title":{},"body":{"components/PrivacyComponent.html":{},"miscellaneous/variables.html":{}}}],["cd",{"_index":2260,"title":{},"body":{"index.html":{}}}],["cdr",{"_index":1850,"title":{},"body":{"components/UiComponent.html":{}}}],["center",{"_index":482,"title":{},"body":{"components/ChartsComponent.html":{},"components/GoogleMapComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["central1",{"_index":2356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["central1/networkdata",{"_index":2362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["central1/trafficdata",{"_index":2363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["centroid",{"_index":1324,"title":{},"body":{"components/MapComponent.html":{}}}],["chang",{"_index":85,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"miscellaneous/enumerations.html":{}}}],["changedemand",{"_index":616,"title":{},"body":{"injectables/DemandService.html":{}}}],["changedemand(demand",{"_index":635,"title":{},"body":{"injectables/DemandService.html":{}}}],["changedetectorref",{"_index":1851,"title":{},"body":{"components/UiComponent.html":{}}}],["changeofconditionscompon",{"_index":83,"title":{"components/ChangeOfConditionsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["changes['cent",{"_index":1139,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["changes['zoom",{"_index":1141,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["changestartingtim",{"_index":617,"title":{},"body":{"injectables/DemandService.html":{}}}],["changestartingtimes(startingtim",{"_index":637,"title":{},"body":{"injectables/DemandService.html":{}}}],["changeweath",{"_index":2022,"title":{},"body":{"injectables/WeatherService.html":{}}}],["changeweather(weath",{"_index":2033,"title":{},"body":{"injectables/WeatherService.html":{}}}],["charg",{"_index":2268,"title":{},"body":{"license.html":{}}}],["chart",{"_index":368,"title":{},"body":{"components/ChartsComponent.html":{}}}],["chart(this.busiestctx",{"_index":437,"title":{},"body":{"components/ChartsComponent.html":{}}}],["chart(this.heavytrafficctx",{"_index":429,"title":{},"body":{"components/ChartsComponent.html":{}}}],["chart(this.moderatetrafficctx",{"_index":435,"title":{},"body":{"components/ChartsComponent.html":{}}}],["chart.j",{"_index":406,"title":{},"body":{"components/ChartsComponent.html":{},"dependencies.html":{}}}],["chartj",{"_index":2201,"title":{},"body":{"dependencies.html":{}}}],["charts'},{'nam",{"_index":89,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["charts.component.html",{"_index":370,"title":{},"body":{"components/ChartsComponent.html":{}}}],["charts.component.scss",{"_index":369,"title":{},"body":{"components/ChartsComponent.html":{}}}],["charts/charts.compon",{"_index":1925,"title":{},"body":{"modules/UiModule.html":{}}}],["chartscompon",{"_index":87,"title":{"components/ChartsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["check",{"_index":653,"title":{},"body":{"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"injectables/SchedulerService.html":{}}}],["circular",{"_index":873,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["claim",{"_index":2300,"title":{},"body":{"license.html":{}}}],["class",{"_index":39,"title":{"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"classes/GoOn.html":{},"classes/Heap.html":{},"classes/MapChanged.html":{},"classes/Node.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"classes/Statistics.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"overview.html":{}}}],["clear",{"_index":1328,"title":{},"body":{"components/MapComponent.html":{},"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["clearski",{"_index":1998,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["cli",{"_index":2247,"title":{},"body":{"index.html":{}}}],["click",{"_index":1111,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["clock",{"_index":1483,"title":{},"body":{"injectables/SchedulerService.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{}}}],["clock.servic",{"_index":1723,"title":{},"body":{"modules/SimulationModule.html":{}}}],["clockservic",{"_index":497,"title":{"injectables/ClockService.html":{}},"body":{"injectables/ClockService.html":{},"injectables/SchedulerService.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"components/StatisticsComponent.html":{},"overview.html":{}}}],["clockstatist",{"_index":1813,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["cloud",{"_index":2002,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["cloudfunctions.net/networkdata",{"_index":2358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cloudfunctions.net/trafficdata",{"_index":2359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_appmodul",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_demandmodul",{"_index":606,"title":{},"body":{"modules/DemandModule.html":{},"overview.html":{}}}],["cluster_demandmodule_provid",{"_index":607,"title":{},"body":{"modules/DemandModule.html":{},"overview.html":{}}}],["cluster_locationmodul",{"_index":1227,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_provid",{"_index":1228,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_networkmodul",{"_index":1390,"title":{},"body":{"modules/NetworkModule.html":{},"overview.html":{}}}],["cluster_networkmodule_import",{"_index":1391,"title":{},"body":{"modules/NetworkModule.html":{},"overview.html":{}}}],["cluster_networkmodule_provid",{"_index":1392,"title":{},"body":{"modules/NetworkModule.html":{},"overview.html":{}}}],["cluster_sharedmodul",{"_index":1645,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declar",{"_index":1646,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_export",{"_index":1648,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_import",{"_index":1647,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_simulationmodul",{"_index":1720,"title":{},"body":{"modules/SimulationModule.html":{},"overview.html":{}}}],["cluster_simulationmodule_provid",{"_index":1721,"title":{},"body":{"modules/SimulationModule.html":{},"overview.html":{}}}],["cluster_uimodul",{"_index":1898,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_uimodule_declar",{"_index":1899,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_uimodule_import",{"_index":1900,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_uimodule_provid",{"_index":1901,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_weathermodul",{"_index":2013,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["cluster_weathermodule_provid",{"_index":2014,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["code",{"_index":62,"title":{},"body":{"components/AboutComponent.html":{},"modules/MaterialModule.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{}}}],["codeaddress",{"_index":1242,"title":{},"body":{"injectables/LocationService.html":{}}}],["codeaddress(address",{"_index":1247,"title":{},"body":{"injectables/LocationService.html":{}}}],["coeffici",{"_index":2412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collect",{"_index":1458,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["color",{"_index":750,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["combin",{"_index":761,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["combine(existingnode.incomingedg",{"_index":850,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["combine(existingnode.outgoingedg",{"_index":853,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["commonmodul",{"_index":1652,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["complet",{"_index":1045,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/HomeComponent.html":{}}}],["compon",{"_index":0,"title":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiRoutingModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["component.candeactiv",{"_index":247,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{}}}],["component_templ",{"_index":74,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["comput",{"_index":58,"title":{},"body":{"components/AboutComponent.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["condit",{"_index":253,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"license.html":{}}}],["conditions'},{'nam",{"_index":86,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["conditions.compon",{"_index":1917,"title":{},"body":{"modules/UiModule.html":{}}}],["conditions.component.html",{"_index":255,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.scss",{"_index":254,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.t",{"_index":251,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:108",{"_index":285,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:112",{"_index":287,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:119",{"_index":280,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:123",{"_index":277,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:25",{"_index":272,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:27",{"_index":273,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:29",{"_index":295,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:31",{"_index":299,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:33",{"_index":271,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:48",{"_index":283,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:54",{"_index":288,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:81",{"_index":284,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions/chang",{"_index":250,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"modules/UiModule.html":{}}}],["config",{"_index":314,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"interfaces/Tag.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{}}}],["config.json",{"_index":2258,"title":{},"body":{"index.html":{}}}],["config.t",{"_index":2319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configur",{"_index":2441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connect",{"_index":1461,"title":{},"body":{"components/PrivacyComponent.html":{},"injectables/SchedulerService.html":{},"license.html":{}}}],["consol",{"_index":2249,"title":{},"body":{"index.html":{}}}],["const",{"_index":327,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Map.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"modules/SharedModule.html":{},"interfaces/SimulationState.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"components/AboutComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["constructor(@inject(mat_snack_bar_data",{"_index":1389,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["constructor(data",{"_index":1385,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["constructor(dialogref",{"_index":1218,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["constructor(edgeid",{"_index":712,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["constructor(elementref",{"_index":384,"title":{},"body":{"components/ChartsComponent.html":{},"components/HomeComponent.html":{},"components/WeatherComponent.html":{}}}],["constructor(formbuild",{"_index":261,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SimulationComponent.html":{},"components/WizardComponent.html":{}}}],["constructor(http",{"_index":2027,"title":{},"body":{"injectables/WeatherService.html":{}}}],["constructor(map",{"_index":1102,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["constructor(maticonregistri",{"_index":1377,"title":{},"body":{"modules/MaterialModule.html":{}}}],["constructor(network",{"_index":623,"title":{},"body":{"injectables/DemandService.html":{}}}],["constructor(nodeid",{"_index":794,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["constructor(payload",{"_index":1072,"title":{},"body":{"classes/GoOn.html":{},"classes/MapChanged.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{}}}],["constructor(priv",{"_index":663,"title":{},"body":{"injectables/DemandService.html":{},"components/HomeComponent.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{}}}],["constructor(publ",{"_index":1084,"title":{},"body":{"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/MapChanged.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{}}}],["constructor(relationid",{"_index":830,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["constructor(rout",{"_index":1845,"title":{},"body":{"components/UiComponent.html":{}}}],["constructor(stor",{"_index":516,"title":{},"body":{"injectables/ClockService.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/StatisticsComponent.html":{},"injectables/WizardService.html":{}}}],["constructor(wizard",{"_index":1481,"title":{},"body":{"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["contain",{"_index":1155,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["content",{"_index":476,"title":{},"body":{"components/ChartsComponent.html":{}}}],["continu",{"_index":364,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{}}}],["contract",{"_index":2304,"title":{},"body":{"license.html":{}}}],["control",{"_index":349,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"components/SimulationComponent.html":{},"miscellaneous/enumerations.html":{}}}],["control.get([control.length",{"_index":1059,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["control.length",{"_index":1028,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["control.paus",{"_index":564,"title":{},"body":{"injectables/ClockService.html":{}}}],["control.push(this.formbuilder.group",{"_index":1058,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["control.quick",{"_index":572,"title":{},"body":{"injectables/ClockService.html":{}}}],["control.removeat(i",{"_index":1029,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["control.slow",{"_index":570,"title":{},"body":{"injectables/ClockService.html":{}}}],["control.start",{"_index":562,"title":{},"body":{"injectables/ClockService.html":{}}}],["control.step",{"_index":568,"title":{},"body":{"injectables/ClockService.html":{}}}],["control.stop",{"_index":566,"title":{},"body":{"injectables/ClockService.html":{}}}],["control.valu",{"_index":1034,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["convert",{"_index":1581,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"injectables/WeatherService.html":{}}}],["cooki",{"_index":1464,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["cooper",{"_index":1311,"title":{},"body":{"components/MapComponent.html":{}}}],["coordin",{"_index":1236,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["copi",{"_index":2269,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":75,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"license.html":{}}}],["copyright&nbsp;©&nbsp",{"_index":49,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{}}}],["core",{"_index":2212,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":1496,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["correctgraph",{"_index":1542,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["cost",{"_index":903,"title":{},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["count",{"_index":595,"title":{"interfaces/Counts.html":{}},"body":{"interfaces/Counts.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Simulation.html":{},"components/SimulationComponent.html":{},"interfaces/Tag.html":{}}}],["counts?.arrivedvehicl",{"_index":1717,"title":{},"body":{"components/SimulationComponent.html":{}}}],["counts?.startedvehicl",{"_index":1715,"title":{},"body":{"components/SimulationComponent.html":{}}}],["creat",{"_index":927,"title":{},"body":{"classes/Edge.html":{},"components/GoogleMapComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"components/WizardComponent.html":{},"index.html":{}}}],["createchart",{"_index":378,"title":{},"body":{"components/ChartsComponent.html":{}}}],["createfeatureselector",{"_index":1729,"title":{},"body":{"interfaces/SimulationState.html":{},"interfaces/UiState.html":{}}}],["createfeatureselector('simul",{"_index":1735,"title":{},"body":{"interfaces/SimulationState.html":{},"miscellaneous/variables.html":{}}}],["createfeatureselector('ui",{"_index":1942,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["creategraph",{"_index":1532,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["createmap",{"_index":1093,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["createmap(el",{"_index":1125,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["createselector",{"_index":1730,"title":{},"body":{"interfaces/SimulationState.html":{},"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["cross",{"_index":886,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["curr",{"_index":1176,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{},"classes/Statistics.html":{}}}],["curr.heavytrafficcount",{"_index":1787,"title":{},"body":{"classes/Statistics.html":{}}}],["curr.moderatetrafficcount",{"_index":1788,"title":{},"body":{"classes/Statistics.html":{}}}],["current",{"_index":726,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{},"interfaces/UiState.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["currentstep",{"_index":346,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["currentyear",{"_index":20,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{}}}],["d",{"_index":358,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["d.count",{"_index":920,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["d2191a",{"_index":2397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d27519",{"_index":2395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damag",{"_index":2301,"title":{},"body":{"license.html":{}}}],["data",{"_index":46,"title":{},"body":{"components/AboutComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"interfaces/Counts.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Map.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Simulation.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["data.list.length",{"_index":2065,"title":{},"body":{"injectables/WeatherService.html":{}}}],["data.list[0",{"_index":2075,"title":{},"body":{"injectables/WeatherService.html":{}}}],["data.list[0].dt",{"_index":2072,"title":{},"body":{"injectables/WeatherService.html":{}}}],["dataset",{"_index":432,"title":{},"body":{"components/ChartsComponent.html":{}}}],["date",{"_index":1623,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{},"injectables/WeatherService.html":{}}}],["date().getfullyear",{"_index":35,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{}}}],["date.now",{"_index":591,"title":{},"body":{"injectables/ClockService.html":{}}}],["datetim",{"_index":1908,"title":{},"body":{"modules/UiModule.html":{},"dependencies.html":{}}}],["day",{"_index":1626,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["deactiv",{"_index":239,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"modules/SharedModule.html":{},"components/UiComponent.html":{},"modules/UiRoutingModule.html":{}}}],["deal",{"_index":2271,"title":{},"body":{"license.html":{}}}],["decim",{"_index":2238,"title":{},"body":{"miscellaneous/functions.html":{}}}],["declar",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["decor",{"_index":1221,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/MessageArchivedComponent.html":{},"components/WizardComponent.html":{}}}],["decre",{"_index":1451,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["deepclon",{"_index":1345,"title":{},"body":{"interfaces/MapState.html":{},"interfaces/WizardState.html":{}}}],["deepclone(initialmapst",{"_index":1351,"title":{},"body":{"interfaces/MapState.html":{}}}],["deepclone(initialwizardst",{"_index":2156,"title":{},"body":{"interfaces/WizardState.html":{}}}],["deepclone(state.map",{"_index":1355,"title":{},"body":{"interfaces/MapState.html":{}}}],["deepclone(state.step",{"_index":2159,"title":{},"body":{"interfaces/WizardState.html":{}}}],["default",{"_index":32,"title":{},"body":{"components/AboutComponent.html":{},"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":24,"title":{},"body":{"components/AboutComponent.html":{},"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["degre",{"_index":57,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["delay",{"_index":484,"title":{},"body":{"components/ChartsComponent.html":{},"interfaces/Counts.html":{},"components/HomeComponent.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{}}}],["delet",{"_index":1062,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["deleteodpair",{"_index":1004,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["deleteodpair(i",{"_index":1013,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand",{"_index":269,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"injectables/SchedulerService.html":{},"components/WizardComponent.html":{}}}],["demand'},{'nam",{"_index":92,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["demand.compon",{"_index":1915,"title":{},"body":{"modules/UiModule.html":{}}}],["demand.component.html",{"_index":1001,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.scss",{"_index":1000,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.t",{"_index":999,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:142",{"_index":1012,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:150",{"_index":1010,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:23",{"_index":1007,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:25",{"_index":1008,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:27",{"_index":1021,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:29",{"_index":1022,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:31",{"_index":1006,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:44",{"_index":1015,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:50",{"_index":1020,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:59",{"_index":1016,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:81",{"_index":1017,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:85",{"_index":1014,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:93",{"_index":1019,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.length",{"_index":672,"title":{},"body":{"injectables/DemandService.html":{}}}],["demand.servic",{"_index":609,"title":{},"body":{"modules/DemandModule.html":{}}}],["demand/demand.modul",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["demand/demand.servic",{"_index":306,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/SchedulerService.html":{}}}],["demand/estim",{"_index":998,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"modules/UiModule.html":{}}}],["demandmodul",{"_index":144,"title":{"modules/DemandModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"modules.html":{},"overview.html":{}}}],["demandservic",{"_index":270,"title":{"injectables/DemandService.html":{}},"body":{"components/ChangeOfConditionsComponent.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"injectables/SchedulerService.html":{},"overview.html":{}}}],["deni",{"_index":1603,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["denomin",{"_index":958,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["densiti",{"_index":693,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["dep",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["depend",{"_index":135,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{},"overview.html":{}}}],["describ",{"_index":769,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["descript",{"_index":215,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/Heap.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"interfaces/MapState.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/SimulationState.html":{},"classes/Statistics.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{},"miscellaneous/functions.html":{}}}],["destin",{"_index":694,"title":{},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["develop",{"_index":54,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["dialog",{"_index":1215,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/UiComponent.html":{}}}],["dialog'},{'nam",{"_index":101,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["dialog.compon",{"_index":1664,"title":{},"body":{"modules/SharedModule.html":{},"components/UiComponent.html":{}}}],["dialog.component.t",{"_index":1214,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:18",{"_index":1220,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:21",{"_index":1223,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:22",{"_index":1222,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialogref",{"_index":1217,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/UiComponent.html":{}}}],["dialogref.afterclos",{"_index":1896,"title":{},"body":{"components/UiComponent.html":{}}}],["dialogresult",{"_index":1885,"title":{},"body":{"components/UiComponent.html":{}}}],["differ",{"_index":926,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["direct",{"_index":72,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"index.html":{}}}],["directives/pairs.direct",{"_index":2101,"title":{},"body":{"components/WizardComponent.html":{}}}],["disabledefaultui",{"_index":1095,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["disabledoubleclickzoom",{"_index":1096,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["disagre",{"_index":1834,"title":{},"body":{"components/TermsComponent.html":{}}}],["display",{"_index":1119,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/PrivacyComponent.html":{},"miscellaneous/variables.html":{}}}],["displayedcolumn",{"_index":1409,"title":{},"body":{"components/NumericComponent.html":{}}}],["dissert",{"_index":55,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["distanc",{"_index":695,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["distribut",{"_index":2278,"title":{},"body":{"license.html":{}}}],["doc",{"_index":2242,"title":{},"body":{"index.html":{}}}],["document",{"_index":64,"title":{},"body":{"components/AboutComponent.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"index.html":{},"license.html":{}}}],["doesn't",{"_index":1609,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["domsanit",{"_index":1376,"title":{},"body":{"modules/MaterialModule.html":{}}}],["domsanitizer.bypasssecuritytrustresourceurl('./assets/images/ic_code_24px.svg",{"_index":1381,"title":{},"body":{"modules/MaterialModule.html":{}}}],["domsanitizer.bypasssecuritytrustresourceurl('./assets/images/ic_more_vert_24px.svg",{"_index":1380,"title":{},"body":{"modules/MaterialModule.html":{}}}],["doubl",{"_index":1110,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["draw",{"_index":708,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["draw(color",{"_index":747,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["drawingopt",{"_index":696,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["drawtim",{"_index":2344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["durat",{"_index":697,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["durationintraff",{"_index":698,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["dynam",{"_index":2175,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":943,"title":{},"body":{"classes/Edge.html":{},"classes/EnumValues.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["e[nam",{"_index":980,"title":{},"body":{"classes/EnumValues.html":{}}}],["each",{"_index":659,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"components/GoogleMapComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{}}}],["earth'",{"_index":783,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["eas",{"_index":1204,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["edg",{"_index":456,"title":{"classes/Edge.html":{}},"body":{"components/ChartsComponent.html":{},"interfaces/Counts.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Simulation.html":{},"classes/Statistics.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["edge.calcmaxflow(factor",{"_index":893,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["edge.downstream[i",{"_index":1798,"title":{},"body":{"classes/Statistics.html":{}}}],["edge.drawingoptions.infowindow.setcontent('edg",{"_index":945,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["edge.dur",{"_index":1792,"title":{},"body":{"classes/Statistics.html":{}}}],["edge.edgeid",{"_index":858,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["edge.heavytrafficcount",{"_index":1782,"title":{},"body":{"classes/Statistics.html":{}}}],["edge.label",{"_index":880,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"classes/Statistics.html":{},"interfaces/Tag.html":{}}}],["edge.moderatetrafficcount",{"_index":1783,"title":{},"body":{"classes/Statistics.html":{}}}],["edge.origin.nodeid",{"_index":921,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["edge.upstream.map((valu",{"_index":1797,"title":{},"body":{"classes/Statistics.html":{}}}],["edgeid",{"_index":699,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["edgeofa.edgeid",{"_index":939,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["edgeofb.edgeid",{"_index":938,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["edges.filter((edg",{"_index":1796,"title":{},"body":{"classes/Statistics.html":{}}}],["edges.push(edg",{"_index":942,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["edges.reduce((prev",{"_index":1784,"title":{},"body":{"classes/Statistics.html":{}}}],["edges[m].edgeid",{"_index":885,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["el",{"_index":1128,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{}}}],["element",{"_index":71,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["element.delay",{"_index":1426,"title":{},"body":{"components/NumericComponent.html":{}}}],["element.edg",{"_index":1421,"title":{},"body":{"components/NumericComponent.html":{}}}],["element.innerhtml",{"_index":1195,"title":{},"body":{"components/HomeComponent.html":{}}}],["element.innertext",{"_index":1192,"title":{},"body":{"components/HomeComponent.html":{}}}],["element.stop",{"_index":1427,"title":{},"body":{"components/NumericComponent.html":{}}}],["element.trafficcount",{"_index":1425,"title":{},"body":{"components/NumericComponent.html":{}}}],["element.trafficvolum",{"_index":1424,"title":{},"body":{"components/NumericComponent.html":{}}}],["element.waynam",{"_index":1423,"title":{},"body":{"components/NumericComponent.html":{}}}],["elementref",{"_index":385,"title":{},"body":{"components/ChartsComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/WeatherComponent.html":{}}}],["elementtyp",{"_index":2375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["empti",{"_index":1641,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["enabl",{"_index":478,"title":{},"body":{"components/ChartsComponent.html":{},"components/GoogleMapComponent.html":{},"index.html":{}}}],["enables/dis",{"_index":1108,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["encapsul",{"_index":1287,"title":{},"body":{"components/MapComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["end",{"_index":553,"title":{},"body":{"injectables/ClockService.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"interfaces/SimulationState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["endsimul",{"_index":499,"title":{},"body":{"injectables/ClockService.html":{},"components/SimulationComponent.html":{},"components/WizardComponent.html":{}}}],["endtim",{"_index":593,"title":{},"body":{"injectables/ClockService.html":{}}}],["engin",{"_index":59,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["enter",{"_index":1642,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["entrycompon",{"_index":1650,"title":{},"body":{"modules/SharedModule.html":{}}}],["enum",{"_index":550,"title":{},"body":{"injectables/ClockService.html":{},"classes/Edge.html":{},"classes/GoOn.html":{},"interfaces/LinkFlow.html":{},"classes/MapChanged.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"interfaces/WeatherConditions.html":{}}}],["enumer",{"_index":2218,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumvalu",{"_index":312,"title":{"classes/EnumValues.html":{}},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{}}}],["enumvalues.getvalues(pathtyp",{"_index":1026,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["enumvalues.getvalues(weatherdescript",{"_index":320,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["enumvaluetyp",{"_index":976,"title":{},"body":{"classes/EnumValues.html":{},"miscellaneous/typealiases.html":{}}}],["environ",{"_index":766,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["environment.test",{"_index":944,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["environments/environ",{"_index":767,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["eppstein",{"_index":895,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["error",{"_index":759,"title":{},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["error.cod",{"_index":1600,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["error.permission_deni",{"_index":1601,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["error.position_unavail",{"_index":1604,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["error.timeout",{"_index":1606,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["estim",{"_index":91,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["estimate(linkflow",{"_index":639,"title":{},"body":{"injectables/DemandService.html":{}}}],["estimateofdemandcompon",{"_index":90,"title":{"components/EstimateOfDemandComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["estimations[x",{"_index":678,"title":{},"body":{"injectables/DemandService.html":{}}}],["eu",{"_index":1453,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["evalu",{"_index":2040,"title":{},"body":{"injectables/WeatherService.html":{}}}],["event",{"_index":2089,"title":{},"body":{"components/WizardComponent.html":{},"license.html":{}}}],["event.previouslyselectedindex",{"_index":2119,"title":{},"body":{"components/WizardComponent.html":{}}}],["event.selectedindex",{"_index":2120,"title":{},"body":{"components/WizardComponent.html":{}}}],["everpol",{"_index":2198,"title":{},"body":{"dependencies.html":{}}}],["execut",{"_index":505,"title":{},"body":{"injectables/ClockService.html":{}}}],["existingnod",{"_index":847,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["existingnode.incomingedg",{"_index":849,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["existingnode.outgoingedg",{"_index":852,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["exit",{"_index":1820,"title":{},"body":{"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["exp",{"_index":956,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["explor",{"_index":912,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["export",{"_index":38,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"interfaces/SimulationState.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["express",{"_index":2292,"title":{},"body":{"license.html":{}}}],["extend",{"_index":252,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["extern",{"_index":1468,"title":{},"body":{"components/PrivacyComponent.html":{},"components/TermsComponent.html":{}}}],["extract",{"_index":1741,"title":{},"body":{"classes/Statistics.html":{}}}],["factor",{"_index":745,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["fals",{"_index":210,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["fast_forward",{"_index":1714,"title":{},"body":{"components/SimulationComponent.html":{}}}],["fast_rewind",{"_index":1712,"title":{},"body":{"components/SimulationComponent.html":{}}}],["featuresimulationst",{"_index":1734,"title":{},"body":{"interfaces/SimulationState.html":{},"miscellaneous/variables.html":{}}}],["featuretyp",{"_index":2373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["featureuist",{"_index":1941,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["few",{"_index":2001,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["fewcloud",{"_index":2000,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"interfaces/SimulationState.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"index.html":{},"license.html":{}}}],["fill",{"_index":442,"title":{},"body":{"components/ChartsComponent.html":{}}}],["filterpaths(shortestpath",{"_index":928,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["firebas",{"_index":68,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["firebaserc",{"_index":2257,"title":{},"body":{"index.html":{}}}],["first",{"_index":909,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"classes/Statistics.html":{},"interfaces/Tag.html":{}}}],["fit",{"_index":2295,"title":{},"body":{"license.html":{}}}],["flexlayoutmodul",{"_index":1658,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["flow",{"_index":631,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["follow",{"_index":1490,"title":{},"body":{"injectables/SchedulerService.html":{},"license.html":{}}}],["fontcolor",{"_index":472,"title":{},"body":{"components/ChartsComponent.html":{}}}],["fontstyl",{"_index":470,"title":{},"body":{"components/ChartsComponent.html":{}}}],["footer",{"_index":1064,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'nam",{"_index":94,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["footer.component.html",{"_index":1066,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":1065,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.compon",{"_index":1662,"title":{},"body":{"modules/SharedModule.html":{}}}],["footercompon",{"_index":93,"title":{"components/FooterComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["forecast",{"_index":2018,"title":{},"body":{"injectables/WeatherService.html":{}}}],["form",{"_index":233,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/Map.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["formarray",{"_index":300,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/WizardComponent.html":{}}}],["format",{"_index":983,"title":{},"body":{"classes/EnumValues.html":{},"miscellaneous/functions.html":{}}}],["formattimefrommillisecond",{"_index":1690,"title":{},"body":{"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"miscellaneous/functions.html":{}}}],["formattimefrommilliseconds(0",{"_index":1703,"title":{},"body":{"components/SimulationComponent.html":{}}}],["formattimefrommilliseconds(clockstatistics.totalprocessingtim",{"_index":1819,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["formattimefrommilliseconds(clockstatistics.totalsimulatedtim",{"_index":1818,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["formattimefrommilliseconds(m",{"_index":992,"title":{},"body":{"classes/EnumValues.html":{},"miscellaneous/functions.html":{}}}],["formattimefrommilliseconds(periods.simulatedtimeperiod",{"_index":1702,"title":{},"body":{"components/SimulationComponent.html":{}}}],["formattimefromsecond",{"_index":408,"title":{},"body":{"components/ChartsComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"miscellaneous/functions.html":{}}}],["formattimefromseconds(",{"_index":986,"title":{},"body":{"classes/EnumValues.html":{},"miscellaneous/functions.html":{}}}],["formattimefromseconds(periods.timeperiods[periods.timeperiods.length",{"_index":1697,"title":{},"body":{"components/SimulationComponent.html":{}}}],["formattimefromseconds(simulationstatistics.totaltim",{"_index":1816,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["formattimefromseconds(this.statistics.busiestedgedelay",{"_index":481,"title":{},"body":{"components/ChartsComponent.html":{}}}],["formattimefromseconds(valu",{"_index":487,"title":{},"body":{"components/ChartsComponent.html":{}}}],["formbuild",{"_index":262,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SimulationComponent.html":{},"components/WizardComponent.html":{}}}],["formgroup",{"_index":260,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WizardComponent.html":{}}}],["formsmodul",{"_index":1656,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["formstep",{"_index":2095,"title":{},"body":{"components/WizardComponent.html":{}}}],["forroot",{"_index":1666,"title":{},"body":{"modules/SharedModule.html":{}}}],["fraction",{"_index":2432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["free",{"_index":730,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"license.html":{}}}],["freeflowveloc",{"_index":700,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["frommap",{"_index":1937,"title":{},"body":{"interfaces/UiState.html":{}}}],["frommap.getmap",{"_index":1949,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["frommap.mapreduc",{"_index":1940,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["frommap.mapst",{"_index":1933,"title":{},"body":{"interfaces/UiState.html":{}}}],["fromsimul",{"_index":546,"title":{},"body":{"injectables/ClockService.html":{},"components/NumericComponent.html":{},"components/SimulationComponent.html":{},"interfaces/SimulationState.html":{}}}],["fromsimulation.getend",{"_index":1738,"title":{},"body":{"interfaces/SimulationState.html":{},"miscellaneous/variables.html":{}}}],["fromsimulation.getperiod",{"_index":1739,"title":{},"body":{"interfaces/SimulationState.html":{},"miscellaneous/variables.html":{}}}],["fromsimulation.getsimul",{"_index":1737,"title":{},"body":{"interfaces/SimulationState.html":{},"miscellaneous/variables.html":{}}}],["fromsimulation.simulationreduc",{"_index":1733,"title":{},"body":{"interfaces/SimulationState.html":{},"miscellaneous/variables.html":{}}}],["fromsimulation.simulationst",{"_index":1727,"title":{},"body":{"interfaces/SimulationState.html":{}}}],["fromui",{"_index":307,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WizardService.html":{}}}],["fromwizard",{"_index":1935,"title":{},"body":{"interfaces/UiState.html":{}}}],["fromwizard.getcurrentstep",{"_index":1946,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["fromwizard.geterror",{"_index":1947,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["fromwizard.getpend",{"_index":1948,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["fromwizard.getstep",{"_index":1945,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["fromwizard.wizardreduc",{"_index":1939,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["fromwizard.wizardst",{"_index":1934,"title":{},"body":{"interfaces/UiState.html":{}}}],["full",{"_index":207,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TermsComponent.html":{},"modules/UiRoutingModule.html":{}}}],["function",{"_index":189,"title":{"miscellaneous/functions.html":{}},"body":{"classes/AppPreloadingStrategy.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/DemandService.html":{},"classes/EnumValues.html":{},"interfaces/MapState.html":{},"interfaces/WizardState.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["functions/src/funct",{"_index":2259,"title":{},"body":{"index.html":{}}}],["furnish",{"_index":2283,"title":{},"body":{"license.html":{}}}],["g",{"_index":2246,"title":{},"body":{"index.html":{}}}],["gdpr",{"_index":1456,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["gener",{"_index":647,"title":{},"body":{"injectables/DemandService.html":{},"classes/Heap.html":{},"interfaces/Path.html":{},"components/PrivacyComponent.html":{}}}],["geocod",{"_index":1239,"title":{},"body":{"injectables/LocationService.html":{},"index.html":{}}}],["geograph",{"_index":1235,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["geoloc",{"_index":1240,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["geometri",{"_index":2376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gestur",{"_index":1113,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["gesturehandl",{"_index":1097,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["get",{"_index":665,"title":{"index.html":{},"license.html":{}},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"components/GoogleMapComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{}}}],["getbusiestedg",{"_index":1742,"title":{},"body":{"classes/Statistics.html":{}}}],["getbusiestedge(edg",{"_index":1754,"title":{},"body":{"classes/Statistics.html":{}}}],["getbusiestedgecapac",{"_index":1743,"title":{},"body":{"classes/Statistics.html":{}}}],["getbusiestedgecapacity(edg",{"_index":1757,"title":{},"body":{"classes/Statistics.html":{}}}],["getbusiestedgedata",{"_index":1744,"title":{},"body":{"classes/Statistics.html":{}}}],["getbusiestedgedata(edg",{"_index":1759,"title":{},"body":{"classes/Statistics.html":{}}}],["getbusiestedgedelay",{"_index":1745,"title":{},"body":{"classes/Statistics.html":{}}}],["getbusiestedgedelay(edg",{"_index":1761,"title":{},"body":{"classes/Statistics.html":{}}}],["getbusiestedgelabel",{"_index":1746,"title":{},"body":{"classes/Statistics.html":{}}}],["getbusiestedgelabel(edg",{"_index":1763,"title":{},"body":{"classes/Statistics.html":{}}}],["getcapac",{"_index":709,"title":{},"body":{"classes/Edge.html":{}}}],["getcapacity(timeinterv",{"_index":752,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getcurrentposit",{"_index":1243,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["getcurrentstep",{"_index":2164,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["getedg",{"_index":838,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getedge(edgeid",{"_index":856,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getend",{"_index":2324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["geterror",{"_index":2166,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["getfactor",{"_index":2023,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getformstep",{"_index":2096,"title":{},"body":{"components/WizardComponent.html":{}}}],["getheavytrafficdata",{"_index":1747,"title":{},"body":{"classes/Statistics.html":{}}}],["getheavytrafficdata(edg",{"_index":1765,"title":{},"body":{"classes/Statistics.html":{}}}],["getheavytrafficedg",{"_index":1748,"title":{},"body":{"classes/Statistics.html":{}}}],["getheavytrafficedges(edg",{"_index":1767,"title":{},"body":{"classes/Statistics.html":{}}}],["getheavytrafficlabel",{"_index":1749,"title":{},"body":{"classes/Statistics.html":{}}}],["getheavytrafficlabels(edg",{"_index":1769,"title":{},"body":{"classes/Statistics.html":{}}}],["geticon",{"_index":1954,"title":{},"body":{"components/WeatherComponent.html":{}}}],["geticon(cod",{"_index":1961,"title":{},"body":{"components/WeatherComponent.html":{}}}],["getincidencematrix",{"_index":888,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getkjam",{"_index":710,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getlatlng",{"_index":1244,"title":{},"body":{"injectables/LocationService.html":{}}}],["getmap",{"_index":1356,"title":{},"body":{"interfaces/MapState.html":{},"miscellaneous/variables.html":{}}}],["getmax",{"_index":1624,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["getmin",{"_index":1620,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["getmoderatetrafficedg",{"_index":1750,"title":{},"body":{"classes/Statistics.html":{}}}],["getmoderatetrafficedges(edg",{"_index":1771,"title":{},"body":{"classes/Statistics.html":{}}}],["getmoderatetrafficlabel",{"_index":1751,"title":{},"body":{"classes/Statistics.html":{}}}],["getmoderatetrafficlabels(edg",{"_index":1773,"title":{},"body":{"classes/Statistics.html":{}}}],["getmoderateytrafficdata",{"_index":1752,"title":{},"body":{"classes/Statistics.html":{}}}],["getmoderateytrafficdata(edg",{"_index":1775,"title":{},"body":{"classes/Statistics.html":{}}}],["getnam",{"_index":969,"title":{},"body":{"classes/EnumValues.html":{}}}],["getnames(",{"_index":971,"title":{},"body":{"classes/EnumValues.html":{}}}],["getnetwork",{"_index":1528,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["getnetworkdata",{"_index":1535,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["getnod",{"_index":836,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getnode(nodeid",{"_index":842,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getodmatrix",{"_index":618,"title":{},"body":{"injectables/DemandService.html":{}}}],["getodnod",{"_index":876,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getodnode(label",{"_index":874,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getodpair",{"_index":298,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{}}}],["getpath",{"_index":1156,"title":{},"body":{"classes/Heap.html":{}}}],["getpend",{"_index":2168,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["getperiod",{"_index":2325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getrel",{"_index":840,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getscript",{"_index":2226,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getscript(src",{"_index":2235,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getshortestpath",{"_index":1157,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["getsimul",{"_index":2326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getstartingtim",{"_index":619,"title":{},"body":{"injectables/DemandService.html":{}}}],["getstatist",{"_index":507,"title":{},"body":{"injectables/ClockService.html":{}}}],["getstep",{"_index":2162,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["gettrafficdata",{"_index":1559,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["gettrafficvolum",{"_index":1753,"title":{},"body":{"classes/Statistics.html":{}}}],["gettrafficvolumes(edg",{"_index":1777,"title":{},"body":{"classes/Statistics.html":{}}}],["getvalu",{"_index":970,"title":{},"body":{"classes/EnumValues.html":{}}}],["getvalues(",{"_index":973,"title":{},"body":{"classes/EnumValues.html":{}}}],["getvari",{"_index":711,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getvis",{"_index":257,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["getvisibility(pair",{"_index":278,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["getweathercondit",{"_index":2024,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getweatherdata",{"_index":1544,"title":{},"body":{"injectables/SchedulerService.html":{},"injectables/WeatherService.html":{}}}],["getweatherdata(tim",{"_index":2037,"title":{},"body":{"injectables/WeatherService.html":{}}}],["gl",{"_index":620,"title":{},"body":{"injectables/DemandService.html":{}}}],["gls(linkflow",{"_index":644,"title":{},"body":{"injectables/DemandService.html":{}}}],["go",{"_index":1082,"title":{},"body":{"classes/GoOn.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"miscellaneous/enumerations.html":{}}}],["googl",{"_index":96,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"index.html":{}}}],["google'",{"_index":1838,"title":{},"body":{"components/TermsComponent.html":{}}}],["google.maps.geocod",{"_index":1259,"title":{},"body":{"injectables/LocationService.html":{}}}],["google.maps.geocoderresult",{"_index":1266,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["google.maps.geocoderstatu",{"_index":1268,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["google.maps.geocoderstatus.ok",{"_index":1269,"title":{},"body":{"injectables/LocationService.html":{}}}],["google.maps.geocoderstatus.zero_result",{"_index":1588,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["google.maps.infowindow",{"_index":800,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["google.maps.latlng",{"_index":796,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["google.maps.latlngboundsliter",{"_index":1318,"title":{},"body":{"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["google.maps.latlngliter",{"_index":1106,"title":{},"body":{"components/GoogleMapComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{}}}],["google.maps.maptypeid",{"_index":1117,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["google.maps.maptypeid.roadmap",{"_index":1308,"title":{},"body":{"components/MapComponent.html":{}}}],["google.maps.maptypestyl",{"_index":1123,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["google.maps.mark",{"_index":793,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["google.maps.polylin",{"_index":798,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["google\\'",{"_index":1839,"title":{},"body":{"components/TermsComponent.html":{}}}],["googlemapcompon",{"_index":95,"title":{"components/GoogleMapComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["goon",{"_index":1069,"title":{"classes/GoOn.html":{}},"body":{"classes/GoOn.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["goon(data",{"_index":2135,"title":{},"body":{"injectables/WizardService.html":{}}}],["govern",{"_index":1832,"title":{},"body":{"components/TermsComponent.html":{}}}],["grant",{"_index":2267,"title":{},"body":{"license.html":{}}}],["graph",{"_index":832,"title":{},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"classes/Statistics.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"modules.html":{}}}],["graph.calcassignmentmatrix(odpair",{"_index":1554,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["graph.calcincidencematrix",{"_index":1553,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["graph.calcmaxflows(factors[0]).pip",{"_index":1561,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["graph.calcshortestpaths(odpairs).pip",{"_index":1552,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["guard.servic",{"_index":1665,"title":{},"body":{"modules/SharedModule.html":{},"components/UiComponent.html":{},"modules/UiRoutingModule.html":{}}}],["guard.service.t",{"_index":240,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{}}}],["guard.service.ts:10",{"_index":248,"title":{},"body":{"injectables/CanDeactivateGuard.html":{}}}],["hammerj",{"_index":2207,"title":{},"body":{"dependencies.html":{}}}],["handl",{"_index":1114,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["hasbackdrop",{"_index":1895,"title":{},"body":{"components/UiComponent.html":{}}}],["headlin",{"_index":1199,"title":{},"body":{"components/HomeComponent.html":{}}}],["heap",{"_index":763,"title":{"classes/Heap.html":{}},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["heavi",{"_index":447,"title":{},"body":{"components/ChartsComponent.html":{},"miscellaneous/variables.html":{}}}],["heavytraff",{"_index":2435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["heavytrafficchart",{"_index":373,"title":{},"body":{"components/ChartsComponent.html":{}}}],["heavytrafficcolor",{"_index":2396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["heavytrafficctx",{"_index":374,"title":{},"body":{"components/ChartsComponent.html":{}}}],["hectar",{"_index":2386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["herebi",{"_index":2266,"title":{},"body":{"license.html":{}}}],["hide",{"_index":1321,"title":{},"body":{"components/MapComponent.html":{}}}],["highli",{"_index":2405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["holder",{"_index":2298,"title":{},"body":{"license.html":{}}}],["home",{"_index":205,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{}}}],["home'},{'nam",{"_index":99,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["home.component.html",{"_index":1180,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":1179,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.transit",{"_index":1188,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.compon",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["home_transit",{"_index":1187,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["homecompon",{"_index":98,"title":{"components/HomeComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["horizont",{"_index":460,"title":{},"body":{"components/ChartsComponent.html":{}}}],["horizontalbar",{"_index":430,"title":{},"body":{"components/ChartsComponent.html":{}}}],["hour",{"_index":1644,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{},"miscellaneous/variables.html":{}}}],["hoverbackgroundcolor",{"_index":433,"title":{},"body":{"components/ChartsComponent.html":{}}}],["html",{"_index":70,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["html5",{"_index":1253,"title":{},"body":{"injectables/LocationService.html":{}}}],["htmlcanvasel",{"_index":400,"title":{},"body":{"components/ChartsComponent.html":{}}}],["htmlelement",{"_index":1126,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/WeatherComponent.html":{}}}],["htmlimageel",{"_index":1963,"title":{},"body":{"components/WeatherComponent.html":{}}}],["http",{"_index":2030,"title":{},"body":{"injectables/WeatherService.html":{}}}],["http://localhost:4201",{"_index":2361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":2028,"title":{},"body":{"injectables/WeatherService.html":{}}}],["httpclientmodul",{"_index":1654,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["httpparam",{"_index":2048,"title":{},"body":{"injectables/WeatherService.html":{}}}],["https://cloud.google.com/map",{"_index":2252,"title":{},"body":{"index.html":{}}}],["https://developers.google.com/maps/documentation/javascript/styl",{"_index":2382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://openweathermap.org",{"_index":2255,"title":{},"body":{"index.html":{}}}],["https://u",{"_index":2355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://wiki.openstreetmap.org/wiki/key:oneway",{"_index":861,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["https://wiki.openstreetmap.org/wiki/tag:junction%3droundabout",{"_index":869,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["icon",{"_index":337,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"components/WizardComponent.html":{}}}],["icon.src",{"_index":1989,"title":{},"body":{"components/WeatherComponent.html":{}}}],["iconcontain",{"_index":1953,"title":{},"body":{"components/WeatherComponent.html":{}}}],["id",{"_index":862,"title":{},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["identifi",{"_index":1234,"title":{},"body":{"injectables/LocationService.html":{}}}],["imag",{"_index":1988,"title":{},"body":{"components/WeatherComponent.html":{}}}],["implement",{"_index":9,"title":{},"body":{"components/AboutComponent.html":{},"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["impli",{"_index":2293,"title":{},"body":{"license.html":{}}}],["import",{"_index":36,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"interfaces/SimulationState.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["incid",{"_index":881,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{}}}],["incidencematrix",{"_index":835,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["includ",{"_index":2274,"title":{},"body":{"license.html":{}}}],["incomingedg",{"_index":790,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["index",{"_index":18,"title":{"index.html":{}},"body":{"components/AboutComponent.html":{},"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"interfaces/SimulationState.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indic",{"_index":717,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"interfaces/SimulationState.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["infodialogcompon",{"_index":100,"title":{"components/InfoDialogComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["inform",{"_index":1446,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["infowindow",{"_index":799,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["inherit",{"_index":217,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["init",{"_index":1132,"title":{},"body":{"components/GoogleMapComponent.html":{},"injectables/SchedulerService.html":{}}}],["initi",{"_index":669,"title":{},"body":{"injectables/DemandService.html":{},"components/GoogleMapComponent.html":{},"interfaces/Map.html":{},"components/MapComponent.html":{},"interfaces/Step.html":{},"miscellaneous/variables.html":{}}}],["initialmapst",{"_index":1348,"title":{},"body":{"interfaces/MapState.html":{},"miscellaneous/variables.html":{}}}],["initialsimulationst",{"_index":2328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["initialwizardst",{"_index":2154,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":242,"title":{"injectables/CanDeactivateGuard.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"injectables/LocationService.html":{},"injectables/SchedulerService.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{}},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"components/MessageArchivedComponent.html":{},"injectables/SchedulerService.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{},"overview.html":{}}}],["inject(mat_dialog_data",{"_index":1226,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["input",{"_index":259,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{}}}],["insert",{"_index":902,"title":{},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{}}}],["instal",{"_index":1541,"title":{},"body":{"injectables/SchedulerService.html":{},"index.html":{}}}],["instant",{"_index":740,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["instanti",{"_index":900,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["interfac",{"_index":236,"title":{"interfaces/CanComponentDeactivate.html":{},"interfaces/Counts.html":{},"interfaces/LinkFlow.html":{},"interfaces/Map.html":{},"interfaces/MapState.html":{},"interfaces/Member.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"interfaces/Simulation.html":{},"interfaces/SimulationState.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"interfaces/UiState.html":{},"interfaces/WeatherConditions.html":{},"interfaces/WizardState.html":{}},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"interfaces/Counts.html":{},"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Map.html":{},"interfaces/MapState.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/Simulation.html":{},"interfaces/SimulationState.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"interfaces/UiState.html":{},"interfaces/WeatherConditions.html":{},"interfaces/WizardState.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["internet",{"_index":1530,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["interv",{"_index":500,"title":{},"body":{"injectables/ClockService.html":{},"components/SimulationComponent.html":{},"miscellaneous/variables.html":{}}}],["interval(this.simulatedtimeinterv",{"_index":577,"title":{},"body":{"injectables/ClockService.html":{}}}],["invalid",{"_index":361,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["invalid_request",{"_index":1590,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["invers",{"_index":771,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["invok",{"_index":1264,"title":{},"body":{"injectables/LocationService.html":{}}}],["isnan(+key",{"_index":978,"title":{},"body":{"classes/EnumValues.html":{}}}],["isoneway(edgeid",{"_index":863,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["isonpath",{"_index":621,"title":{},"body":{"injectables/DemandService.html":{}}}],["isonpath(odmatrixassign",{"_index":651,"title":{},"body":{"injectables/DemandService.html":{}}}],["isroundabout(edgeid",{"_index":870,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["javascript",{"_index":2254,"title":{},"body":{"index.html":{}}}],["js",{"_index":2205,"title":{},"body":{"dependencies.html":{}}}],["junction",{"_index":871,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["k",{"_index":764,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["key",{"_index":775,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"index.html":{}}}],["kind",{"_index":2291,"title":{},"body":{"license.html":{}}}],["ksp(o",{"_index":897,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["l",{"_index":1211,"title":{},"body":{"components/HomeComponent.html":{}}}],["label",{"_index":431,"title":{},"body":{"components/ChartsComponent.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["labels.icon",{"_index":2380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["labelstr",{"_index":2339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["last",{"_index":1044,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"classes/Statistics.html":{}}}],["lat",{"_index":788,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["latitud",{"_index":785,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["latlng",{"_index":1241,"title":{},"body":{"injectables/LocationService.html":{}}}],["layout",{"_index":1660,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["leav",{"_index":1640,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["legend",{"_index":69,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"modules/DemandModule.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"modules/LocationModule.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"components/WizardComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["legisl",{"_index":1450,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["letter",{"_index":1190,"title":{},"body":{"components/HomeComponent.html":{}}}],["level",{"_index":917,"title":{},"body":{"classes/Edge.html":{},"components/GoogleMapComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["liabil",{"_index":2302,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":2299,"title":{},"body":{"license.html":{}}}],["licens",{"_index":52,"title":{"license.html":{}},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"components/TermsComponent.html":{},"license.html":{}}}],["limit",{"_index":1037,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"injectables/SchedulerService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["line",{"_index":438,"title":{},"body":{"components/ChartsComponent.html":{},"components/HomeComponent.html":{}}}],["linear",{"_index":1205,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["link",{"_index":60,"title":{},"body":{"components/AboutComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["linkflow",{"_index":626,"title":{"interfaces/LinkFlow.html":{}},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["linkflows[i].valu",{"_index":682,"title":{},"body":{"injectables/DemandService.html":{}}}],["linkflows[i].vari",{"_index":685,"title":{},"body":{"injectables/DemandService.html":{}}}],["liter",{"_index":719,"title":{},"body":{"classes/Edge.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/MapChanged.html":{},"classes/Node.html":{},"classes/SimulationChanged.html":{},"classes/StepChanged.html":{}}}],["lng",{"_index":1585,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":188,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["loadchildren",{"_index":208,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loadscript",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["locat",{"_index":1482,"title":{},"body":{"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"injectables/WeatherService.html":{}}}],["location.servic",{"_index":1231,"title":{},"body":{"modules/LocationModule.html":{}}}],["location/location.modul",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["location/location.servic",{"_index":1501,"title":{},"body":{"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"injectables/WeatherService.html":{}}}],["locationmodul",{"_index":145,"title":{"modules/LocationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LocationModule.html":{},"modules.html":{},"overview.html":{}}}],["locationservic",{"_index":1229,"title":{"injectables/LocationService.html":{}},"body":{"modules/LocationModule.html":{},"injectables/LocationService.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"injectables/WeatherService.html":{},"overview.html":{}}}],["login",{"_index":2251,"title":{},"body":{"index.html":{}}}],["logit",{"_index":947,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["lon",{"_index":789,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["longitud",{"_index":786,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["ltm",{"_index":1779,"title":{},"body":{"classes/Statistics.html":{},"miscellaneous/variables.html":{}}}],["ltmedg",{"_index":1755,"title":{},"body":{"classes/Statistics.html":{}}}],["m",{"_index":362,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"miscellaneous/variables.html":{}}}],["m/",{"_index":731,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SimulationComponent.html":{},"interfaces/Tag.html":{}}}],["m:ss",{"_index":984,"title":{},"body":{"classes/EnumValues.html":{},"miscellaneous/functions.html":{}}}],["m:ss.mmm",{"_index":990,"title":{},"body":{"classes/EnumValues.html":{},"miscellaneous/functions.html":{}}}],["maintainaspectratio",{"_index":2336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["make",{"_index":1465,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["manag",{"_index":1344,"title":{},"body":{"interfaces/MapState.html":{},"interfaces/SimulationState.html":{},"interfaces/UiState.html":{},"interfaces/WizardState.html":{}}}],["map",{"_index":1023,"title":{"interfaces/Map.html":{}},"body":{"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"components/PrivacyComponent.html":{},"injectables/SchedulerService.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Step.html":{},"components/TermsComponent.html":{},"interfaces/UiState.html":{},"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["map'},{'nam",{"_index":97,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["map((respons",{"_index":2062,"title":{},"body":{"injectables/WeatherService.html":{}}}],["map.compon",{"_index":1922,"title":{},"body":{"modules/UiModule.html":{}}}],["map.component.html",{"_index":1290,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.scss",{"_index":1289,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.t",{"_index":1091,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:17",{"_index":1107,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:21",{"_index":1124,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:25",{"_index":1109,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:29",{"_index":1112,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:33",{"_index":1118,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:37",{"_index":1120,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:41",{"_index":1121,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:45",{"_index":1115,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:49",{"_index":1104,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:51",{"_index":1133,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:56",{"_index":1131,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:66",{"_index":1130,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:71",{"_index":1127,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.data.bound",{"_index":1637,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["map.data.selectednod",{"_index":1031,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["map.servic",{"_index":1135,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["map.styl",{"_index":1307,"title":{},"body":{"components/MapComponent.html":{}}}],["map/googl",{"_index":1921,"title":{},"body":{"modules/UiModule.html":{}}}],["map/map.compon",{"_index":1920,"title":{},"body":{"modules/UiModule.html":{}}}],["map/map.servic",{"_index":1500,"title":{},"body":{"injectables/SchedulerService.html":{},"modules/UiModule.html":{}}}],["mapact",{"_index":1285,"title":{},"body":{"classes/MapChanged.html":{},"interfaces/MapState.html":{},"miscellaneous/typealiases.html":{}}}],["mapactiontyp",{"_index":1283,"title":{},"body":{"classes/MapChanged.html":{},"interfaces/MapState.html":{},"miscellaneous/enumerations.html":{}}}],["mapactiontypes.mapchang",{"_index":1282,"title":{},"body":{"classes/MapChanged.html":{},"interfaces/MapState.html":{}}}],["mapactiontypes.reset",{"_index":1284,"title":{},"body":{"classes/MapChanged.html":{},"interfaces/MapState.html":{}}}],["mapchang",{"_index":1278,"title":{"classes/MapChanged.html":{}},"body":{"classes/MapChanged.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["mapcompon",{"_index":102,"title":{"components/MapComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["mapreduc",{"_index":2227,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mapreducer(st",{"_index":1350,"title":{},"body":{"interfaces/MapState.html":{},"miscellaneous/functions.html":{}}}],["mapservic",{"_index":1103,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{},"injectables/SchedulerService.html":{},"modules/UiModule.html":{},"overview.html":{}}}],["mapstat",{"_index":1342,"title":{"interfaces/MapState.html":{}},"body":{"interfaces/MapState.html":{},"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["mapstyl",{"_index":1306,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["maptypeid",{"_index":1098,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["marker",{"_index":792,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["mat_dialog_data",{"_index":1224,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["mat_snack_bar_data",{"_index":1388,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["matbuttonmodul",{"_index":1363,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matcardmodul",{"_index":1361,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["match",{"_index":128,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"interfaces/SimulationState.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":1849,"title":{},"body":{"components/UiComponent.html":{}}}],["matdialogmodul",{"_index":1371,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matdialogref",{"_index":1219,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["material.modul",{"_index":1661,"title":{},"body":{"modules/SharedModule.html":{}}}],["materialmodul",{"_index":1357,"title":{"modules/MaterialModule.html":{}},"body":{"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["matexpansionmodul",{"_index":1374,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matgridlistmodul",{"_index":1372,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["math.abs(curr",{"_index":1794,"title":{},"body":{"classes/Statistics.html":{}}}],["math.exp",{"_index":957,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["math.floor(",{"_index":987,"title":{},"body":{"classes/EnumValues.html":{}}}],["math.floor((m",{"_index":994,"title":{},"body":{"classes/EnumValues.html":{}}}],["math.floor(m",{"_index":993,"title":{},"body":{"classes/EnumValues.html":{}}}],["math.pow(bas",{"_index":684,"title":{},"body":{"injectables/DemandService.html":{}}}],["math.trunc(edge.maxflow",{"_index":1791,"title":{},"body":{"classes/Statistics.html":{}}}],["maticonmodul",{"_index":1364,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["maticonregistri",{"_index":1362,"title":{},"body":{"modules/MaterialModule.html":{}}}],["maticonregistry.addsvgicon",{"_index":1378,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodul",{"_index":1367,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matmenumodul",{"_index":1365,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matprogressspinnermodul",{"_index":1369,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matrix",{"_index":612,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{}}}],["matselectmodul",{"_index":1373,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matsidenavmodul",{"_index":1359,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matsnackbar",{"_index":1848,"title":{},"body":{"components/UiComponent.html":{}}}],["matsnackbarmodul",{"_index":1368,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matstepp",{"_index":2091,"title":{},"body":{"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["matsteppermodul",{"_index":1366,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattablemodul",{"_index":1375,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattoolbarmodul",{"_index":1360,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattooltipmodul",{"_index":1370,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":744,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["maxbarthick",{"_index":2347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxdemand",{"_index":2410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxflow",{"_index":701,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["maximum",{"_index":736,"title":{},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["maxodpair",{"_index":2401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxtimeinterv",{"_index":2440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxzoom",{"_index":1099,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["mean",{"_index":772,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["measur",{"_index":758,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["medium",{"_index":2406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["member",{"_index":777,"title":{"interfaces/Member.html":{}},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["memoizedselector",{"_index":1731,"title":{},"body":{"interfaces/SimulationState.html":{},"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["merchant",{"_index":2294,"title":{},"body":{"license.html":{}}}],["merg",{"_index":2276,"title":{},"body":{"license.html":{}}}],["messag",{"_index":1527,"title":{},"body":{"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/UiComponent.html":{},"injectables/WizardService.html":{}}}],["messagearchivedcompon",{"_index":103,"title":{"components/MessageArchivedComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["meter",{"_index":718,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"interfaces/WeatherConditions.html":{}}}],["method",{"_index":21,"title":{},"body":{"components/AboutComponent.html":{},"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["millimet",{"_index":1997,"title":{},"body":{"interfaces/WeatherConditions.html":{}}}],["millisecond",{"_index":991,"title":{},"body":{"classes/EnumValues.html":{},"injectables/WeatherService.html":{},"miscellaneous/functions.html":{}}}],["min",{"_index":802,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{}}}],["mindist",{"_index":2398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mindur",{"_index":2400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minimum",{"_index":630,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"components/GoogleMapComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["minzoom",{"_index":1100,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["miscellan",{"_index":2217,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mist",{"_index":2012,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["mit",{"_index":51,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"components/TermsComponent.html":{},"index.html":{},"license.html":{}}}],["mm",{"_index":363,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":459,"title":{},"body":{"components/ChartsComponent.html":{}}}],["model",{"_index":948,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Map.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["models/actions/simulation.act",{"_index":548,"title":{},"body":{"injectables/ClockService.html":{}}}],["models/actions/wizard.act",{"_index":2147,"title":{},"body":{"injectables/WizardService.html":{}}}],["models/base.compon",{"_index":315,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["models/reduc",{"_index":308,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SimulationModule.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"injectables/WizardService.html":{}}}],["models/reducers/wizard.reduc",{"_index":2148,"title":{},"body":{"injectables/WizardService.html":{}}}],["models/ui",{"_index":1024,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["moder",{"_index":451,"title":{},"body":{"components/ChartsComponent.html":{},"miscellaneous/variables.html":{}}}],["moderatetraff",{"_index":2433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["moderatetrafficchart",{"_index":375,"title":{},"body":{"components/ChartsComponent.html":{}}}],["moderatetrafficcolor",{"_index":2394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["moderatetrafficctx",{"_index":376,"title":{},"body":{"components/ChartsComponent.html":{}}}],["modifi",{"_index":2275,"title":{},"body":{"license.html":{}}}],["modul",{"_index":133,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/MaterialModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"modules/WeatherModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/MaterialModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithprovid",{"_index":1651,"title":{},"body":{"modules/SharedModule.html":{}}}],["moment",{"_index":1622,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["more",{"_index":828,"title":{},"body":{"classes/Edge.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["more_vert",{"_index":1379,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mout",{"_index":2196,"title":{},"body":{"dependencies.html":{}}}],["mout/array/combin",{"_index":762,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["mout/lang/deepclon",{"_index":1346,"title":{},"body":{"interfaces/MapState.html":{},"interfaces/WizardState.html":{}}}],["move",{"_index":915,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["ms",{"_index":538,"title":{},"body":{"injectables/ClockService.html":{},"classes/EnumValues.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["multi",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["multinomi",{"_index":946,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["n",{"_index":687,"title":{},"body":{"injectables/DemandService.html":{}}}],["name",{"_index":79,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"classes/AppPreloadingStrategy.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"miscellaneous/functions.html":{}}}],["navigate_next",{"_index":365,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{}}}],["navigator.geoloc",{"_index":1596,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["navigator.geolocation.getcurrentposit",{"_index":1273,"title":{},"body":{"injectables/LocationService.html":{}}}],["neighbor",{"_index":913,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["network",{"_index":265,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{}}}],["network.servic",{"_index":1396,"title":{},"body":{"modules/NetworkModule.html":{}}}],["network/graph",{"_index":311,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{}}}],["network/network.modul",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["network/network.servic",{"_index":304,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"injectables/SchedulerService.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WeatherComponent.html":{}}}],["network/weather/weath",{"_index":310,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/WeatherComponent.html":{}}}],["network/weather/weather.servic",{"_index":305,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/SchedulerService.html":{},"components/WeatherComponent.html":{}}}],["networkdata",{"_index":2352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["networkmodul",{"_index":146,"title":{"modules/NetworkModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NetworkModule.html":{},"modules.html":{},"overview.html":{}}}],["networkservic",{"_index":266,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"modules/NetworkModule.html":{},"injectables/SchedulerService.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WeatherComponent.html":{},"overview.html":{}}}],["new",{"_index":34,"title":{},"body":{"components/AboutComponent.html":{},"components/ChartsComponent.html":{},"classes/Edge.html":{},"components/FooterComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["next",{"_index":916,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{}}}],["nextdt",{"_index":2076,"title":{},"body":{"injectables/WeatherService.html":{}}}],["nextindex",{"_index":1087,"title":{},"body":{"classes/GoOn.html":{},"injectables/SchedulerService.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["ng",{"_index":1906,"title":{},"body":{"modules/UiModule.html":{},"dependencies.html":{}}}],["ngafterviewinit",{"_index":379,"title":{},"body":{"components/ChartsComponent.html":{},"components/HomeComponent.html":{},"components/WeatherComponent.html":{}}}],["ngmodul",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/MaterialModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"modules/WeatherModule.html":{}}}],["ngonchang",{"_index":1094,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["ngonchanges(chang",{"_index":1129,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["ngondestroy",{"_index":220,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{}}}],["ngoninit",{"_index":22,"title":{},"body":{"components/AboutComponent.html":{},"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["ngrx",{"_index":1076,"title":{},"body":{"classes/GoOn.html":{},"classes/MapChanged.html":{},"interfaces/MapState.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["ngrx/store",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"interfaces/SimulationState.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"injectables/WizardService.html":{},"dependencies.html":{}}}],["node",{"_index":692,"title":{"classes/Node.html":{}},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.count",{"_index":923,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.incomingedg",{"_index":851,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.incomingedges.length",{"_index":1042,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["node.j",{"_index":2243,"title":{},"body":{"index.html":{}}}],["node.label",{"_index":875,"title":{},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.label).length",{"_index":1053,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["node.nodeid",{"_index":845,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.outgoingedg",{"_index":854,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.outgoingedges.length",{"_index":1043,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["nodeid",{"_index":787,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["noninfring",{"_index":2296,"title":{},"body":{"license.html":{}}}],["normal",{"_index":471,"title":{},"body":{"components/ChartsComponent.html":{},"miscellaneous/variables.html":{}}}],["notic",{"_index":2286,"title":{},"body":{"license.html":{}}}],["notrafficcolor",{"_index":2392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["npm",{"_index":2244,"title":{},"body":{"index.html":{}}}],["npm@latest",{"_index":2245,"title":{},"body":{"index.html":{}}}],["null",{"_index":558,"title":{},"body":{"injectables/ClockService.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"injectables/LocationService.html":{},"interfaces/MapState.html":{},"classes/Statistics.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":30,"title":{},"body":{"components/AboutComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Simulation.html":{},"components/SimulationComponent.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["numer",{"_index":955,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{}}}],["numeric'},{'nam",{"_index":107,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["numeric.component.html",{"_index":1408,"title":{},"body":{"components/NumericComponent.html":{}}}],["numeric.component.scss",{"_index":1407,"title":{},"body":{"components/NumericComponent.html":{}}}],["numeric/numeric.compon",{"_index":1924,"title":{},"body":{"modules/UiModule.html":{}}}],["numericalsimul",{"_index":600,"title":{"interfaces/NumericalSimulation.html":{}},"body":{"interfaces/Counts.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{}}}],["numericcompon",{"_index":106,"title":{"components/NumericComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["o",{"_index":357,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["o/d",{"_index":611,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":2334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(e).filter((key",{"_index":977,"title":{},"body":{"classes/EnumValues.html":{}}}],["observ",{"_index":193,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"injectables/WeatherService.html":{}}}],["observable.create((observ",{"_index":1263,"title":{},"body":{"injectables/LocationService.html":{}}}],["observer.complet",{"_index":1271,"title":{},"body":{"injectables/LocationService.html":{}}}],["observer.error(error",{"_index":1276,"title":{},"body":{"injectables/LocationService.html":{}}}],["observer.error(statu",{"_index":1272,"title":{},"body":{"injectables/LocationService.html":{}}}],["observer.next(posit",{"_index":1274,"title":{},"body":{"injectables/LocationService.html":{}}}],["observer.next(result",{"_index":1270,"title":{},"body":{"injectables/LocationService.html":{}}}],["obtain",{"_index":2046,"title":{},"body":{"injectables/WeatherService.html":{},"license.html":{}}}],["odmatrix",{"_index":613,"title":{},"body":{"injectables/DemandService.html":{}}}],["odmatrixassign",{"_index":627,"title":{},"body":{"injectables/DemandService.html":{}}}],["odmatrixassignment[n][i",{"_index":688,"title":{},"body":{"injectables/DemandService.html":{}}}],["odpair",{"_index":275,"title":{"interfaces/OdPair.html":{}},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"components/WizardComponent.html":{}}}],["odpair.destin",{"_index":1041,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["odpair.origin",{"_index":1049,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["odpairs.filter(pair",{"_index":1050,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["odpairs.length",{"_index":1035,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["odpairs.map((pair",{"_index":328,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["odpairs[odpairs.length",{"_index":1036,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["odpairs[uiconfig.maxodpair",{"_index":1039,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["odpairscontrol",{"_index":342,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["odpairscontrol.length",{"_index":350,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["odpairscontrol.removeat(i",{"_index":351,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["of(nul",{"_index":198,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["offici",{"_index":63,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["offset",{"_index":1209,"title":{},"body":{"components/HomeComponent.html":{},"injectables/WeatherService.html":{}}}],["on",{"_index":529,"title":{},"body":{"injectables/ClockService.html":{},"injectables/DemandService.html":{}}}],["onchang",{"_index":1092,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["ondestroy",{"_index":218,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChartsComponent.html":{},"components/UiComponent.html":{}}}],["oneway",{"_index":866,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["oninit",{"_index":10,"title":{},"body":{"components/AboutComponent.html":{},"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["opac",{"_index":1202,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["open",{"_index":1540,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["opendialog",{"_index":1843,"title":{},"body":{"components/UiComponent.html":{}}}],["opendialog(data",{"_index":1858,"title":{},"body":{"components/UiComponent.html":{}}}],["opensnackbar",{"_index":1844,"title":{},"body":{"components/UiComponent.html":{}}}],["opensnackbar(messag",{"_index":1860,"title":{},"body":{"components/UiComponent.html":{}}}],["openweathermap",{"_index":2047,"title":{},"body":{"injectables/WeatherService.html":{},"index.html":{}}}],["oper",{"_index":1491,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["option",{"_index":192,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"miscellaneous/functions.html":{}}}],["options).pip",{"_index":2061,"title":{},"body":{"injectables/WeatherService.html":{}}}],["origin",{"_index":702,"title":{},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["otherwis",{"_index":2306,"title":{},"body":{"license.html":{}}}],["out",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"license.html":{},"overview.html":{}}}],["outgoingedg",{"_index":791,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["over_query_limit",{"_index":1591,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["overview",{"_index":2310,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owldatetimemodul",{"_index":1904,"title":{},"body":{"modules/UiModule.html":{}}}],["owlnativedatetimemodul",{"_index":1905,"title":{},"body":{"modules/UiModule.html":{}}}],["packag",{"_index":2170,"title":{"dependencies.html":{}},"body":{}}],["paid",{"_index":1539,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["pair",{"_index":281,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["pair.demand",{"_index":329,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["pair.destin",{"_index":1052,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["pair.origin",{"_index":1051,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["pair.startingtim",{"_index":330,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["pair.value.destin",{"_index":360,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{}}}],["pair.value.origin",{"_index":359,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{}}}],["pairs,paths,edg",{"_index":649,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["pairsvalid",{"_index":2100,"title":{},"body":{"components/WizardComponent.html":{},"miscellaneous/functions.html":{}}}],["panel",{"_index":1876,"title":{},"body":{"components/UiComponent.html":{}}}],["panelclass",{"_index":1891,"title":{},"body":{"components/UiComponent.html":{}}}],["param",{"_index":674,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{}}}],["paramet",{"_index":191,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["part",{"_index":1835,"title":{},"body":{"components/TermsComponent.html":{}}}],["particular",{"_index":773,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"license.html":{}}}],["past",{"_index":1536,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["path",{"_index":203,"title":{"interfaces/Path.html":{}},"body":{"modules/AppRoutingModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"modules/UiRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["path.cost",{"_index":1172,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["path.edg",{"_index":1171,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["path.nod",{"_index":1170,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["path.pathid",{"_index":1169,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["path.t",{"_index":1154,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["path.ts:23",{"_index":1160,"title":{},"body":{"classes/Heap.html":{}}}],["path.ts:29",{"_index":1167,"title":{},"body":{"classes/Heap.html":{}}}],["path.ts:37",{"_index":1165,"title":{},"body":{"classes/Heap.html":{}}}],["path.ts:45",{"_index":1163,"title":{},"body":{"classes/Heap.html":{}}}],["path.ts:49",{"_index":1162,"title":{},"body":{"classes/Heap.html":{}}}],["patha",{"_index":930,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["patha.filter((edgeofa",{"_index":936,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["patha.length",{"_index":940,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["pathb",{"_index":932,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["pathb.find((edgeofb",{"_index":937,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["pathcost",{"_index":950,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["pathid",{"_index":905,"title":{},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["pathmatch",{"_index":206,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/UiRoutingModule.html":{}}}],["pathtyp",{"_index":768,"title":{},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/enumerations.html":{}}}],["pathtype.dist",{"_index":1061,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["paus",{"_index":508,"title":{},"body":{"injectables/ClockService.html":{},"components/SimulationComponent.html":{},"miscellaneous/enumerations.html":{}}}],["payload",{"_index":586,"title":{},"body":{"injectables/ClockService.html":{},"classes/GoOn.html":{},"classes/MapChanged.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{}}}],["pend",{"_index":1081,"title":{},"body":{"classes/GoOn.html":{},"components/SearchForTheAreaComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["perform",{"_index":528,"title":{},"body":{"injectables/ClockService.html":{},"injectables/SchedulerService.html":{}}}],["period",{"_index":1434,"title":{},"body":{"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"interfaces/SimulationState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["periods.simulatedtimeinterv",{"_index":1698,"title":{},"body":{"components/SimulationComponent.html":{}}}],["periods.simulatedtimeperiod",{"_index":1701,"title":{},"body":{"components/SimulationComponent.html":{}}}],["periods.timeinterv",{"_index":1693,"title":{},"body":{"components/SimulationComponent.html":{}}}],["periods.timeperiod",{"_index":1695,"title":{},"body":{"components/SimulationComponent.html":{}}}],["periodschang",{"_index":1428,"title":{"classes/PeriodsChanged.html":{}},"body":{"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["permiss",{"_index":1602,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"license.html":{}}}],["permit",{"_index":2282,"title":{},"body":{"license.html":{}}}],["person",{"_index":1444,"title":{},"body":{"components/PrivacyComponent.html":{},"license.html":{}}}],["pick",{"_index":1907,"title":{},"body":{"modules/UiModule.html":{},"dependencies.html":{}}}],["platform",{"_index":2253,"title":{},"body":{"index.html":{}}}],["play_arrow",{"_index":1711,"title":{},"body":{"components/SimulationComponent.html":{}}}],["pleas",{"_index":1469,"title":{},"body":{"components/PrivacyComponent.html":{},"injectables/SchedulerService.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["plugin",{"_index":2202,"title":{},"body":{"dependencies.html":{}}}],["png",{"_index":1991,"title":{},"body":{"components/WeatherComponent.html":{}}}],["poi",{"_index":2378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["point",{"_index":782,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["polici",{"_index":1443,"title":{},"body":{"components/PrivacyComponent.html":{},"components/TermsComponent.html":{}}}],["polylin",{"_index":797,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["poorli",{"_index":2407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pop",{"_index":1158,"title":{},"body":{"classes/Heap.html":{}}}],["pop(pathid",{"_index":1164,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["populatechart",{"_index":380,"title":{},"body":{"components/ChartsComponent.html":{}}}],["portion",{"_index":2289,"title":{},"body":{"license.html":{}}}],["posit",{"_index":473,"title":{},"body":{"components/ChartsComponent.html":{},"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["position.coords.latitud",{"_index":1598,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["position.coords.longitud",{"_index":1599,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["positionerror",{"_index":1275,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["predt",{"_index":2071,"title":{},"body":{"injectables/WeatherService.html":{}}}],["preload",{"_index":183,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{}}}],["preload(rout",{"_index":186,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["preloadingstrategi",{"_index":185,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{}}}],["prerequisit",{"_index":2256,"title":{},"body":{"index.html":{}}}],["presscontrol",{"_index":509,"title":{},"body":{"injectables/ClockService.html":{},"components/SimulationComponent.html":{}}}],["presscontrol(control",{"_index":521,"title":{},"body":{"injectables/ClockService.html":{},"components/SimulationComponent.html":{}}}],["prev",{"_index":1789,"title":{},"body":{"classes/Statistics.html":{}}}],["prev.cost",{"_index":1177,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["prev.heavytrafficcount",{"_index":1785,"title":{},"body":{"classes/Statistics.html":{}}}],["prev.moderatetrafficcount",{"_index":1786,"title":{},"body":{"classes/Statistics.html":{}}}],["privaci",{"_index":211,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/PrivacyComponent.html":{},"components/TermsComponent.html":{}}}],["privacy'},{'nam",{"_index":109,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["privacy.component.html",{"_index":1440,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["privacy.component.scss",{"_index":1439,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["privacy/privacy.compon",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["privacycompon",{"_index":108,"title":{"components/PrivacyComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["privat",{"_index":317,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{}}}],["probabl",{"_index":658,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["process",{"_index":537,"title":{},"body":{"injectables/ClockService.html":{},"components/PrivacyComponent.html":{},"components/StatisticsComponent.html":{}}}],["processingtim",{"_index":501,"title":{},"body":{"injectables/ClockService.html":{}}}],["product",{"_index":2350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profil",{"_index":1466,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["project",{"_index":53,"title":{},"body":{"components/AboutComponent.html":{},"injectables/SchedulerService.html":{},"index.html":{}}}],["promis",{"_index":243,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{}}}],["propagateflow",{"_index":536,"title":{},"body":{"injectables/ClockService.html":{}}}],["properti",{"_index":19,"title":{},"body":{"components/AboutComponent.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"interfaces/SimulationState.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["propertynam",{"_index":1138,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["protect",{"_index":707,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["provid",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/NetworkModule.html":{},"components/PrivacyComponent.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"interfaces/WizardState.html":{},"license.html":{},"overview.html":{}}}],["public",{"_index":506,"title":{},"body":{"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"modules/SharedModule.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"classes/Statistics.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{}}}],["publish",{"_index":2277,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":825,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"license.html":{}}}],["pursuant",{"_index":1447,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["push",{"_index":1159,"title":{},"body":{"classes/Heap.html":{}}}],["push(path",{"_index":1166,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["putinerror",{"_index":2129,"title":{},"body":{"injectables/WizardService.html":{}}}],["putinerror(error",{"_index":2137,"title":{},"body":{"injectables/WizardService.html":{}}}],["putonhold",{"_index":2130,"title":{},"body":{"injectables/WizardService.html":{}}}],["putonhold(messag",{"_index":2139,"title":{},"body":{"injectables/WizardService.html":{}}}],["qs",{"_index":2210,"title":{},"body":{"dependencies.html":{}}}],["queue",{"_index":1161,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["quick",{"_index":510,"title":{},"body":{"injectables/ClockService.html":{},"miscellaneous/enumerations.html":{}}}],["quota",{"_index":1537,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["rain",{"_index":2009,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["rainintens",{"_index":1994,"title":{},"body":{"interfaces/WeatherConditions.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["rate",{"_index":2421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reactiveformsmodul",{"_index":1657,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["readonli",{"_index":1071,"title":{},"body":{"classes/GoOn.html":{},"classes/MapChanged.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{}}}],["real",{"_index":47,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["receiveact",{"_index":221,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["rectangl",{"_index":1316,"title":{},"body":{"components/MapComponent.html":{}}}],["redirectto",{"_index":204,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reduc",{"_index":1349,"title":{},"body":{"interfaces/MapState.html":{},"modules/SimulationModule.html":{},"interfaces/SimulationState.html":{},"modules/UiModule.html":{},"interfaces/UiState.html":{},"interfaces/WizardState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["reducers/map.reduc",{"_index":1938,"title":{},"body":{"interfaces/UiState.html":{}}}],["reducers/simulation.reduc",{"_index":1732,"title":{},"body":{"interfaces/SimulationState.html":{}}}],["reducers/wizard.reduc",{"_index":1936,"title":{},"body":{"interfaces/UiState.html":{}}}],["reduct",{"_index":2020,"title":{},"body":{"injectables/WeatherService.html":{}}}],["ref",{"_index":778,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["refer",{"_index":1470,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["regul",{"_index":1454,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["relat",{"_index":824,"title":{"classes/Relation.html":{}},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["relation'",{"_index":776,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["relationid",{"_index":829,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["relationship",{"_index":827,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["releas",{"_index":1836,"title":{},"body":{"components/TermsComponent.html":{}}}],["remain",{"_index":1460,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["remov",{"_index":924,"title":{},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{}}}],["removefromerror",{"_index":2131,"title":{},"body":{"injectables/WizardService.html":{}}}],["removefromwait",{"_index":2132,"title":{},"body":{"injectables/WizardService.html":{}}}],["render",{"_index":1957,"title":{},"body":{"components/WeatherComponent.html":{}}}],["renderer2",{"_index":1960,"title":{},"body":{"components/WeatherComponent.html":{}}}],["repositori",{"_index":61,"title":{},"body":{"components/AboutComponent.html":{}}}],["repres",{"_index":780,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["request",{"_index":1595,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["request_deni",{"_index":1592,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["requir",{"_index":1105,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{},"index.html":{}}}],["reset",{"_index":150,"title":{"classes/Reset.html":{}},"body":{"modules/AppModule.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/ClockService.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"modules/NetworkModule.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"modules/SharedModule.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["resetcondit",{"_index":1955,"title":{},"body":{"components/WeatherComponent.html":{}}}],["resetcount",{"_index":922,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["resourc",{"_index":2019,"title":{},"body":{"injectables/WeatherService.html":{}}}],["respons",{"_index":1233,"title":{},"body":{"injectables/LocationService.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["restrict",{"_index":2273,"title":{},"body":{"license.html":{}}}],["result",{"_index":127,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"interfaces/SimulationState.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results[0].geometry.location.lat",{"_index":1584,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["results[0].geometry.location.lng",{"_index":1586,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["retriev",{"_index":1529,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["return",{"_index":27,"title":{},"body":{"components/AboutComponent.html":{},"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["rgba(255,255,255,1.0",{"_index":469,"title":{},"body":{"components/ChartsComponent.html":{}}}],["right",{"_index":474,"title":{},"body":{"components/ChartsComponent.html":{},"license.html":{}}}],["road",{"_index":2379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roadmap",{"_index":1116,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["roberto",{"_index":76,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"license.html":{}}}],["roberto&nbsp;simonetti",{"_index":50,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{}}}],["role",{"_index":779,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["root",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'nam",{"_index":82,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["round",{"_index":662,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"miscellaneous/functions.html":{}}}],["round(1",{"_index":819,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["round(exps[z][n",{"_index":962,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["round(maxflow",{"_index":818,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["round(sum",{"_index":686,"title":{},"body":{"injectables/DemandService.html":{}}}],["round(this.dens",{"_index":814,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["round(this.dist",{"_index":805,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["round(this.getkjam",{"_index":812,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["round(valu",{"_index":2237,"title":{},"body":{"miscellaneous/functions.html":{}}}],["roundabout",{"_index":872,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["rout",{"_index":187,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{}}}],["route.data",{"_index":196,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["route.data.preload",{"_index":197,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["router",{"_index":1846,"title":{},"body":{"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["routermodul",{"_index":200,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UiRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["routermodule.forchild",{"_index":1929,"title":{},"body":{"modules/UiRoutingModule.html":{}}}],["routermodule.forroot",{"_index":202,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.modul",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"modules/UiModule.html":{}}}],["routing.module.t",{"_index":199,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/UiRoutingModule.html":{}}}],["run",{"_index":541,"title":{},"body":{"injectables/ClockService.html":{},"index.html":{}}}],["rxj",{"_index":195,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"injectables/WeatherService.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":544,"title":{},"body":{"injectables/ClockService.html":{},"injectables/SchedulerService.html":{},"components/UiComponent.html":{},"injectables/WeatherService.html":{}}}],["s",{"_index":985,"title":{},"body":{"classes/EnumValues.html":{},"components/NumericComponent.html":{},"components/SimulationComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["s/end.html\">renderer2",{"_index":1958,"title":{},"body":{"components/WeatherComponent.html":{}}}],["s/map.html\">google.maps.latlngliter",{"_index":1257,"title":{},"body":{"injectables/LocationService.html":{}}}],["same",{"_index":1048,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["save",{"_index":1463,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["scale",{"_index":1200,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["scaleid",{"_index":461,"title":{},"body":{"components/ChartsComponent.html":{}}}],["scalelabel",{"_index":2338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scalex",{"_index":1207,"title":{},"body":{"components/HomeComponent.html":{}}}],["scatter",{"_index":2004,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["scatteredcloud",{"_index":2003,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["schedul",{"_index":1852,"title":{},"body":{"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["scheduledemand",{"_index":1478,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["scheduledemand(data",{"_index":1487,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["schedulenetwork",{"_index":1479,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["schedulenetwork(data",{"_index":1493,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["scheduler.servic",{"_index":2099,"title":{},"body":{"components/WizardComponent.html":{}}}],["schedulerservic",{"_index":1476,"title":{"injectables/SchedulerService.html":{}},"body":{"injectables/SchedulerService.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["schedulesimul",{"_index":1480,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["schedulesimulation(data",{"_index":1497,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["search",{"_index":111,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["search(address",{"_index":1574,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["searchfortheareacompon",{"_index":110,"title":{"components/SearchForTheAreaComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["second",{"_index":661,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["select",{"_index":114,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"miscellaneous/variables.html":{}}}],["selectionchang",{"_index":2090,"title":{},"body":{"components/WizardComponent.html":{}}}],["selectionoftheareacompon",{"_index":113,"title":{"components/SelectionOfTheAreaComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["sell",{"_index":2281,"title":{},"body":{"license.html":{}}}],["sendact",{"_index":222,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["sent",{"_index":230,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["sequenc",{"_index":1489,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["serve:devapp",{"_index":2261,"title":{},"body":{"index.html":{}}}],["servic",{"_index":325,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"injectables/LocationService.html":{},"components/PrivacyComponent.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/TermsComponent.html":{}}}],["set",{"_index":576,"title":{},"body":{"injectables/ClockService.html":{},"classes/Edge.html":{},"components/GoogleMapComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["set('appid",{"_index":2058,"title":{},"body":{"injectables/WeatherService.html":{}}}],["set('lat",{"_index":2054,"title":{},"body":{"injectables/WeatherService.html":{}}}],["set('lon",{"_index":2056,"title":{},"body":{"injectables/WeatherService.html":{}}}],["setcondit",{"_index":1956,"title":{},"body":{"components/WeatherComponent.html":{}}}],["setconditions(weath",{"_index":1969,"title":{},"body":{"components/WeatherComponent.html":{}}}],["setlatlng",{"_index":1245,"title":{},"body":{"injectables/LocationService.html":{}}}],["setlatlng(latlng",{"_index":1256,"title":{},"body":{"injectables/LocationService.html":{}}}],["settimeout",{"_index":1503,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["shall",{"_index":2287,"title":{},"body":{"license.html":{}}}],["shared/can",{"_index":1868,"title":{},"body":{"components/UiComponent.html":{},"modules/UiRoutingModule.html":{}}}],["shared/info",{"_index":1871,"title":{},"body":{"components/UiComponent.html":{}}}],["shared/messag",{"_index":1870,"title":{},"body":{"components/UiComponent.html":{}}}],["shared/shared.modul",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"modules/UiModule.html":{}}}],["sharededg",{"_index":935,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["sharededges.length",{"_index":941,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["sharedmodul",{"_index":147,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["sharedmodule.forroot",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["shortest",{"_index":765,"title":{},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["shortestpath",{"_index":834,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["shortestpaths.length",{"_index":929,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["shortestpaths[i",{"_index":933,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["shortestpaths[i].edg",{"_index":931,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["shortestpathsprob",{"_index":891,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["shortestpathsprobabilities[z].push(p",{"_index":965,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["show",{"_index":1181,"title":{},"body":{"components/HomeComponent.html":{},"components/MapComponent.html":{}}}],["shower",{"_index":2008,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["showerrain",{"_index":2007,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["shows/hid",{"_index":1336,"title":{},"body":{"components/MapComponent.html":{}}}],["simonetti",{"_index":77,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"license.html":{}}}],["simplechang",{"_index":1134,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["simul",{"_index":44,"title":{"interfaces/Simulation.html":{}},"body":{"components/AboutComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"components/HomeComponent.html":{},"injectables/LocationService.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"interfaces/SimulationState.html":{},"components/StatisticsComponent.html":{},"components/WizardComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["simulatedtimeinterv",{"_index":502,"title":{},"body":{"injectables/ClockService.html":{},"components/SimulationComponent.html":{},"miscellaneous/variables.html":{}}}],["simulatedtimeperiod",{"_index":503,"title":{},"body":{"injectables/ClockService.html":{},"components/SimulationComponent.html":{}}}],["simulation'},{'nam",{"_index":116,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["simulation.component.html",{"_index":1671,"title":{},"body":{"components/SimulationComponent.html":{}}}],["simulation.component.scss",{"_index":1670,"title":{},"body":{"components/SimulationComponent.html":{}}}],["simulation.count",{"_index":1704,"title":{},"body":{"components/SimulationComponent.html":{}}}],["simulation.data",{"_index":1419,"title":{},"body":{"components/NumericComponent.html":{}}}],["simulation.servic",{"_index":545,"title":{},"body":{"injectables/ClockService.html":{},"modules/SimulationModule.html":{}}}],["simulation.spe",{"_index":1706,"title":{},"body":{"components/SimulationComponent.html":{}}}],["simulation/clock.servic",{"_index":1502,"title":{},"body":{"injectables/SchedulerService.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{}}}],["simulation/models/reduc",{"_index":1416,"title":{},"body":{"components/NumericComponent.html":{},"components/SimulationComponent.html":{}}}],["simulation/models/simul",{"_index":1417,"title":{},"body":{"components/NumericComponent.html":{},"components/SimulationComponent.html":{}}}],["simulation/simulation.modul",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["simulation/simulation.servic",{"_index":407,"title":{},"body":{"components/ChartsComponent.html":{},"injectables/SchedulerService.html":{},"components/StatisticsComponent.html":{}}}],["simulation?').pip",{"_index":1883,"title":{},"body":{"components/UiComponent.html":{}}}],["simulation?').subscrib",{"_index":1887,"title":{},"body":{"components/UiComponent.html":{}}}],["simulationact",{"_index":1437,"title":{},"body":{"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"miscellaneous/typealiases.html":{}}}],["simulationactiontyp",{"_index":547,"title":{},"body":{"injectables/ClockService.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"miscellaneous/enumerations.html":{}}}],["simulationactiontypes.periodschang",{"_index":585,"title":{},"body":{"injectables/ClockService.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{}}}],["simulationactiontypes.reset",{"_index":1436,"title":{},"body":{"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{}}}],["simulationactiontypes.simulationchang",{"_index":1435,"title":{},"body":{"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{}}}],["simulationactiontypes.simulationend",{"_index":587,"title":{},"body":{"injectables/ClockService.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{}}}],["simulationchang",{"_index":1432,"title":{"classes/SimulationChanged.html":{}},"body":{"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["simulationcompon",{"_index":115,"title":{"components/SimulationComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["simulationend",{"_index":1433,"title":{"classes/SimulationEnded.html":{}},"body":{"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["simulationmodul",{"_index":148,"title":{"modules/SimulationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SimulationModule.html":{},"modules.html":{},"overview.html":{}}}],["simulationreduc",{"_index":2230,"title":{},"body":{"miscellaneous/functions.html":{}}}],["simulationreducer(st",{"_index":2241,"title":{},"body":{"miscellaneous/functions.html":{}}}],["simulationservic",{"_index":386,"title":{},"body":{"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/SchedulerService.html":{},"modules/SimulationModule.html":{},"components/StatisticsComponent.html":{},"overview.html":{}}}],["simulationst",{"_index":1725,"title":{"interfaces/SimulationState.html":{}},"body":{"interfaces/SimulationState.html":{},"miscellaneous/variables.html":{}}}],["simulationstatist",{"_index":1812,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["ski",{"_index":1999,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["skip_next",{"_index":1713,"title":{},"body":{"components/SimulationComponent.html":{}}}],["slow",{"_index":511,"title":{},"body":{"injectables/ClockService.html":{},"miscellaneous/enumerations.html":{}}}],["snack",{"_index":104,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["snackbar",{"_index":1847,"title":{},"body":{"components/UiComponent.html":{}}}],["snow",{"_index":2011,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["snowintens",{"_index":1995,"title":{},"body":{"interfaces/WeatherConditions.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["softwar",{"_index":2270,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"interfaces/SimulationState.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["sp",{"_index":2404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["space",{"_index":2402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specif",{"_index":781,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["speed",{"_index":605,"title":{},"body":{"interfaces/Counts.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Simulation.html":{},"components/SimulationComponent.html":{},"interfaces/Tag.html":{}}}],["squar",{"_index":648,"title":{},"body":{"injectables/DemandService.html":{}}}],["src",{"_index":2236,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../chart",{"_index":2318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../clock.service.t",{"_index":2219,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.prod.t",{"_index":2322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":2323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.test.t",{"_index":2321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../graph.t",{"_index":2221,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../home.transition.t",{"_index":2327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../map.actions.t",{"_index":2220,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../map.reducer.t",{"_index":2228,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../map.style.t",{"_index":2329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../material.module.t",{"_index":2330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../pairs.directive.t",{"_index":2229,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../reducers.t",{"_index":2320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../shared.module.t",{"_index":2331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../simulation.actions.t",{"_index":2222,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../simulation.reducer.t",{"_index":2231,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../ui",{"_index":2332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../utils.t",{"_index":2225,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../weather.t",{"_index":2223,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../wizard.actions.t",{"_index":2224,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../wizard.reducer.t",{"_index":2233,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/about/about.component.t",{"_index":8,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/about/about.component.ts:10",{"_index":25,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/about/about.component.ts:14",{"_index":26,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/app",{"_index":182,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"index.html":{}}}],["src/app/app.component.t",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/demand/demand.module.t",{"_index":608,"title":{},"body":{"modules/DemandModule.html":{}}}],["src/app/demand/demand.service.t",{"_index":610,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:104",{"_index":640,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:121",{"_index":657,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:136",{"_index":652,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:17",{"_index":660,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:22",{"_index":624,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:26",{"_index":655,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:33",{"_index":633,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:45",{"_index":642,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:49",{"_index":636,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:55",{"_index":643,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:59",{"_index":638,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:71",{"_index":646,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:85",{"_index":628,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/home/home.component.t",{"_index":1178,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:15",{"_index":1182,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:19",{"_index":1184,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:23",{"_index":1183,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.transition.t",{"_index":2366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/location/location.module.t",{"_index":1230,"title":{},"body":{"modules/LocationModule.html":{}}}],["src/app/location/location.service.t",{"_index":1232,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:15",{"_index":1260,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:17",{"_index":1246,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:25",{"_index":1255,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:33",{"_index":1248,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:53",{"_index":1252,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:68",{"_index":1254,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:72",{"_index":1258,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/network/graph.t",{"_index":689,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/network/graph.ts:101",{"_index":737,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:103",{"_index":715,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:105",{"_index":738,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:110",{"_index":716,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:115",{"_index":721,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:120",{"_index":722,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:125",{"_index":729,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:130",{"_index":739,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:132",{"_index":714,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:134",{"_index":728,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:139",{"_index":733,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:144",{"_index":735,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:146",{"_index":720,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:151",{"_index":713,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:160",{"_index":741,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:191",{"_index":743,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:199",{"_index":756,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:203",{"_index":755,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:207",{"_index":753,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:211",{"_index":749,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:224",{"_index":1473,"title":{},"body":{"classes/Relation.html":{}}}],["src/app/network/graph.ts:226",{"_index":1472,"title":{},"body":{"classes/Relation.html":{}}}],["src/app/network/graph.ts:228",{"_index":1471,"title":{},"body":{"classes/Relation.html":{}}}],["src/app/network/graph.ts:65",{"_index":1403,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:67",{"_index":1400,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:69",{"_index":1401,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:71",{"_index":1402,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:73",{"_index":1405,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:75",{"_index":1399,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:77",{"_index":1404,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:79",{"_index":1398,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:84",{"_index":1397,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:97",{"_index":727,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:99",{"_index":732,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/k",{"_index":1153,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["src/app/network/network.module.t",{"_index":1394,"title":{},"body":{"modules/NetworkModule.html":{}}}],["src/app/network/weather/weather.module.t",{"_index":2015,"title":{},"body":{"modules/WeatherModule.html":{}}}],["src/app/network/weather/weather.service.t",{"_index":2017,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:110",{"_index":2032,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:120",{"_index":2043,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:18",{"_index":2029,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:22",{"_index":2041,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:26",{"_index":2036,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:34",{"_index":2038,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:54",{"_index":2045,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:81",{"_index":2034,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:95",{"_index":2035,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.t",{"_index":1993,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/privacy/privacy.component.t",{"_index":1438,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["src/app/privacy/privacy.component.ts:12",{"_index":1442,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["src/app/privacy/privacy.component.ts:8",{"_index":1441,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["src/app/shared/can",{"_index":238,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{}}}],["src/app/shared/footer/footer.component.t",{"_index":1063,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/footer/footer.component.ts:10",{"_index":1068,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/footer/footer.component.ts:12",{"_index":1067,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/info",{"_index":1213,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["src/app/shared/material.module.t",{"_index":1358,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/messag",{"_index":1382,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["src/app/shared/shared.module.t",{"_index":1649,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["src/app/simulation/clock.service.t",{"_index":498,"title":{},"body":{"injectables/ClockService.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/simulation/clock.service.ts:103",{"_index":526,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:115",{"_index":520,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:121",{"_index":530,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:141",{"_index":527,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:148",{"_index":525,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:163",{"_index":523,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:180",{"_index":518,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:195",{"_index":531,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:26",{"_index":540,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:31",{"_index":539,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:36",{"_index":533,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:41",{"_index":535,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:43",{"_index":542,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:45",{"_index":532,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:47",{"_index":517,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:60",{"_index":524,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:70",{"_index":522,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:93",{"_index":519,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/models/actions/simulation.actions.t",{"_index":1429,"title":{},"body":{"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/simulation/models/actions/simulation.actions.ts:19",{"_index":1667,"title":{},"body":{"classes/SimulationChanged.html":{}}}],["src/app/simulation/models/actions/simulation.actions.ts:21",{"_index":1668,"title":{},"body":{"classes/SimulationChanged.html":{}}}],["src/app/simulation/models/actions/simulation.actions.ts:27",{"_index":1718,"title":{},"body":{"classes/SimulationEnded.html":{}}}],["src/app/simulation/models/actions/simulation.actions.ts:29",{"_index":1719,"title":{},"body":{"classes/SimulationEnded.html":{}}}],["src/app/simulation/models/actions/simulation.actions.ts:35",{"_index":1430,"title":{},"body":{"classes/PeriodsChanged.html":{}}}],["src/app/simulation/models/actions/simulation.actions.ts:37",{"_index":1431,"title":{},"body":{"classes/PeriodsChanged.html":{}}}],["src/app/simulation/models/actions/simulation.actions.ts:43",{"_index":1474,"title":{},"body":{"classes/Reset.html":{}}}],["src/app/simulation/models/actions/simulation.actions.ts:45",{"_index":1475,"title":{},"body":{"classes/Reset.html":{}}}],["src/app/simulation/models/reducers.t",{"_index":1726,"title":{},"body":{"interfaces/SimulationState.html":{},"miscellaneous/variables.html":{}}}],["src/app/simulation/models/reducers/simulation.reducer.t",{"_index":2240,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/simulation/models/simul",{"_index":596,"title":{},"body":{"interfaces/Counts.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{}}}],["src/app/simulation/simulation.module.t",{"_index":1722,"title":{},"body":{"modules/SimulationModule.html":{}}}],["src/app/simulation/statistics.t",{"_index":1740,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:12",{"_index":1774,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:16",{"_index":1766,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:20",{"_index":1776,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:24",{"_index":1756,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:30",{"_index":1764,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:34",{"_index":1760,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:38",{"_index":1758,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:44",{"_index":1762,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:68",{"_index":1768,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:72",{"_index":1772,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:76",{"_index":1778,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:8",{"_index":1770,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/terms/terms.component.t",{"_index":1827,"title":{},"body":{"components/TermsComponent.html":{}}}],["src/app/terms/terms.component.ts:12",{"_index":1831,"title":{},"body":{"components/TermsComponent.html":{}}}],["src/app/terms/terms.component.ts:8",{"_index":1830,"title":{},"body":{"components/TermsComponent.html":{}}}],["src/app/ui/charts/chart",{"_index":2333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/ui/charts/charts.component.t",{"_index":366,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:131",{"_index":392,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:137",{"_index":397,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:180",{"_index":396,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:186",{"_index":395,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:22",{"_index":403,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:24",{"_index":405,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:26",{"_index":401,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:28",{"_index":402,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:30",{"_index":404,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:32",{"_index":399,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:34",{"_index":387,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:44",{"_index":391,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:48",{"_index":389,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:54",{"_index":390,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:63",{"_index":398,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:67",{"_index":393,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:78",{"_index":394,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:82",{"_index":388,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/directives/pairs.directive.t",{"_index":2239,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/ui/map/googl",{"_index":1090,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["src/app/ui/map/map.component.t",{"_index":1286,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:128",{"_index":1294,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:24",{"_index":1296,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:27",{"_index":1304,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:29",{"_index":1297,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:30",{"_index":1298,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:31",{"_index":1300,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:32",{"_index":1301,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:33",{"_index":1302,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:34",{"_index":1299,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:35",{"_index":1303,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:37",{"_index":1291,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:55",{"_index":1292,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:60",{"_index":1295,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:64",{"_index":1293,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.style.t",{"_index":2372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/ui/models/actions/map.actions.t",{"_index":1279,"title":{},"body":{"classes/MapChanged.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/ui/models/actions/map.actions.ts:17",{"_index":1280,"title":{},"body":{"classes/MapChanged.html":{}}}],["src/app/ui/models/actions/map.actions.ts:19",{"_index":1281,"title":{},"body":{"classes/MapChanged.html":{}}}],["src/app/ui/models/actions/wizard.actions.t",{"_index":1070,"title":{},"body":{"classes/GoOn.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:20",{"_index":1821,"title":{},"body":{"classes/StepChanged.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:22",{"_index":1822,"title":{},"body":{"classes/StepChanged.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:28",{"_index":1823,"title":{},"body":{"classes/StepError.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:30",{"_index":1824,"title":{},"body":{"classes/StepError.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:36",{"_index":1825,"title":{},"body":{"classes/StepPending.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:38",{"_index":1826,"title":{},"body":{"classes/StepPending.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:44",{"_index":1073,"title":{},"body":{"classes/GoOn.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:46",{"_index":1074,"title":{},"body":{"classes/GoOn.html":{}}}],["src/app/ui/models/base.component.t",{"_index":214,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/base.component.ts:11",{"_index":226,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/base.component.ts:13",{"_index":225,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/base.component.ts:22",{"_index":232,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/base.component.ts:27",{"_index":227,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/base.component.ts:32",{"_index":231,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/base.component.ts:9",{"_index":224,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/reducers.t",{"_index":1931,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["src/app/ui/models/reducers/map.reducer.t",{"_index":1343,"title":{},"body":{"interfaces/MapState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/ui/models/reducers/wizard.reducer.t",{"_index":2152,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/ui/models/ui",{"_index":1277,"title":{},"body":{"interfaces/Map.html":{},"interfaces/Step.html":{},"miscellaneous/variables.html":{}}}],["src/app/ui/numeric/numeric.component.t",{"_index":1406,"title":{},"body":{"components/NumericComponent.html":{}}}],["src/app/ui/numeric/numeric.component.ts:17",{"_index":1415,"title":{},"body":{"components/NumericComponent.html":{}}}],["src/app/ui/numeric/numeric.component.ts:19",{"_index":1410,"title":{},"body":{"components/NumericComponent.html":{}}}],["src/app/ui/numeric/numeric.component.ts:27",{"_index":1411,"title":{},"body":{"components/NumericComponent.html":{}}}],["src/app/ui/numeric/numeric.component.ts:32",{"_index":1414,"title":{},"body":{"components/NumericComponent.html":{}}}],["src/app/ui/numeric/numeric.component.ts:36",{"_index":1412,"title":{},"body":{"components/NumericComponent.html":{}}}],["src/app/ui/numeric/numeric.component.ts:44",{"_index":1413,"title":{},"body":{"components/NumericComponent.html":{}}}],["src/app/ui/ui",{"_index":1928,"title":{},"body":{"modules/UiRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["src/app/ui/ui.component.t",{"_index":1840,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:102",{"_index":1855,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:106",{"_index":1861,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:114",{"_index":1859,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:24",{"_index":1865,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:26",{"_index":1863,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:28",{"_index":1864,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:30",{"_index":1866,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:32",{"_index":1853,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:43",{"_index":1857,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:77",{"_index":1856,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:83",{"_index":1854,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:93",{"_index":1862,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.module.t",{"_index":1903,"title":{},"body":{"modules/UiModule.html":{}}}],["src/app/ui/utils.t",{"_index":967,"title":{},"body":{"classes/EnumValues.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/ui/utils.ts:5",{"_index":972,"title":{},"body":{"classes/EnumValues.html":{}}}],["src/app/ui/utils.ts:9",{"_index":974,"title":{},"body":{"classes/EnumValues.html":{}}}],["src/app/ui/weather/weather.component.t",{"_index":1950,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:20",{"_index":1972,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:22",{"_index":1974,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:24",{"_index":1973,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:26",{"_index":1959,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:38",{"_index":1965,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:43",{"_index":1964,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:47",{"_index":1971,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:51",{"_index":1966,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:69",{"_index":1968,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:73",{"_index":1970,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:80",{"_index":1967,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:89",{"_index":1962,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/wizard/chang",{"_index":249,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["src/app/ui/wizard/estim",{"_index":997,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["src/app/ui/wizard/scheduler.service.t",{"_index":1477,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["src/app/ui/wizard/scheduler.service.ts:125",{"_index":1488,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["src/app/ui/wizard/scheduler.service.ts:13",{"_index":1484,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["src/app/ui/wizard/scheduler.service.ts:181",{"_index":1498,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["src/app/ui/wizard/scheduler.service.ts:29",{"_index":1485,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["src/app/ui/wizard/scheduler.service.ts:53",{"_index":1494,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["src/app/ui/wizard/search",{"_index":1564,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["src/app/ui/wizard/select",{"_index":1611,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.t",{"_index":1669,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:101",{"_index":1678,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:22",{"_index":1675,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:24",{"_index":1676,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:26",{"_index":1687,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:28",{"_index":1688,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:30",{"_index":1685,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:32",{"_index":1686,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:34",{"_index":1683,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:36",{"_index":1682,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:38",{"_index":1684,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:40",{"_index":1674,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:51",{"_index":1677,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:57",{"_index":1681,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:61",{"_index":1679,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:97",{"_index":1680,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.t",{"_index":1799,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:21",{"_index":1804,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:23",{"_index":1805,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:25",{"_index":1811,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:27",{"_index":1810,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:29",{"_index":1803,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:40",{"_index":1806,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:46",{"_index":1809,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:50",{"_index":1807,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:64",{"_index":1808,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/wizard.component.t",{"_index":2077,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:119",{"_index":2084,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:20",{"_index":2093,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:22",{"_index":2094,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:24",{"_index":2097,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:26",{"_index":2083,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:35",{"_index":2085,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:92",{"_index":2088,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.service.t",{"_index":2128,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:12",{"_index":2146,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:14",{"_index":2134,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:22",{"_index":2143,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:31",{"_index":2145,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:38",{"_index":2138,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:45",{"_index":2140,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:52",{"_index":2141,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:59",{"_index":2142,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:66",{"_index":2136,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/utils.t",{"_index":2234,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/environments/environment.prod.t",{"_index":2354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":2360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/environments/environment.test.t",{"_index":2349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start",{"_index":512,"title":{"index.html":{},"license.html":{}},"body":{"injectables/ClockService.html":{},"injectables/DemandService.html":{},"components/HomeComponent.html":{},"components/SimulationComponent.html":{},"miscellaneous/enumerations.html":{}}}],["startedvehicl",{"_index":599,"title":{},"body":{"interfaces/Counts.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{}}}],["startingtim",{"_index":276,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{}}}],["startingtimes.length",{"_index":673,"title":{},"body":{"injectables/DemandService.html":{}}}],["starttest",{"_index":2262,"title":{},"body":{"index.html":{}}}],["starttim",{"_index":590,"title":{},"body":{"injectables/ClockService.html":{}}}],["state",{"_index":583,"title":{},"body":{"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"components/NumericComponent.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"interfaces/SimulationState.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["state.currentstep",{"_index":2165,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["state.end",{"_index":2364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.error",{"_index":2167,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["state.map",{"_index":1353,"title":{},"body":{"interfaces/MapState.html":{},"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["state.pend",{"_index":2169,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["state.period",{"_index":2365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.simul",{"_index":1736,"title":{},"body":{"interfaces/SimulationState.html":{},"miscellaneous/variables.html":{}}}],["state.step",{"_index":2163,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["state.steps[action.payload.index",{"_index":2157,"title":{},"body":{"interfaces/WizardState.html":{}}}],["state.t",{"_index":597,"title":{},"body":{"interfaces/Counts.html":{},"interfaces/Map.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{},"interfaces/Step.html":{},"miscellaneous/variables.html":{}}}],["state.wizard",{"_index":1944,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["static",{"_index":968,"title":{},"body":{"classes/EnumValues.html":{},"modules/SharedModule.html":{},"classes/Statistics.html":{}}}],["statist",{"_index":377,"title":{"classes/Statistics.html":{}},"body":{"components/ChartsComponent.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["statistics'},{'nam",{"_index":118,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["statistics.component.html",{"_index":1801,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["statistics.component.scss",{"_index":1800,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["statisticscompon",{"_index":117,"title":{"components/StatisticsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["statu",{"_index":1267,"title":{},"body":{"injectables/LocationService.html":{}}}],["step",{"_index":513,"title":{"interfaces/Step.html":{}},"body":{"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"interfaces/Map.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/UiState.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["stepchang",{"_index":1078,"title":{"classes/StepChanged.html":{}},"body":{"classes/GoOn.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["stepclick",{"_index":2082,"title":{},"body":{"components/WizardComponent.html":{}}}],["stepclick(ev",{"_index":2086,"title":{},"body":{"components/WizardComponent.html":{}}}],["steperror",{"_index":1079,"title":{"classes/StepError.html":{}},"body":{"classes/GoOn.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["steppedlin",{"_index":440,"title":{},"body":{"components/ChartsComponent.html":{}}}],["steppend",{"_index":1080,"title":{"classes/StepPending.html":{}},"body":{"classes/GoOn.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["stepper",{"_index":2080,"title":{},"body":{"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["stepperselectionev",{"_index":2087,"title":{},"body":{"components/WizardComponent.html":{}}}],["steps[0",{"_index":1332,"title":{},"body":{"components/MapComponent.html":{}}}],["steps[0].data.cent",{"_index":1333,"title":{},"body":{"components/MapComponent.html":{}}}],["steps[2",{"_index":1335,"title":{},"body":{"components/MapComponent.html":{}}}],["steps[2].data.odpair",{"_index":1337,"title":{},"body":{"components/MapComponent.html":{}}}],["steps[3",{"_index":1339,"title":{},"body":{"components/MapComponent.html":{}}}],["steps[3].data.odpair",{"_index":1340,"title":{},"body":{"components/MapComponent.html":{}}}],["stepsiz",{"_index":2343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stop",{"_index":514,"title":{},"body":{"injectables/ClockService.html":{},"interfaces/Counts.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{},"components/SimulationComponent.html":{},"miscellaneous/enumerations.html":{}}}],["store",{"_index":263,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WizardService.html":{}}}],["storemodul",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{}}}],["storemodule.forfeature('simul",{"_index":1724,"title":{},"body":{"modules/SimulationModule.html":{}}}],["storemodule.forfeature('ui",{"_index":1927,"title":{},"body":{"modules/UiModule.html":{}}}],["storemodule.forroot",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["strada",{"_index":40,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/PrivacyComponent.html":{},"components/TermsComponent.html":{},"index.html":{}}}],["strategi",{"_index":201,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["strategy.t",{"_index":184,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["strategy.ts:6",{"_index":190,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["stream",{"_index":1513,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["stream.subscrib",{"_index":1526,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["string",{"_index":282,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"interfaces/Counts.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["structur",{"_index":826,"title":{},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["style",{"_index":1101,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"miscellaneous/variables.html":{}}}],["styler",{"_index":2377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["styleurl",{"_index":14,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["subject",{"_index":2284,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":2279,"title":{},"body":{"license.html":{}}}],["subscrib",{"_index":228,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["subscript",{"_index":219,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{}}}],["subscription.unsubscrib",{"_index":235,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChartsComponent.html":{},"components/UiComponent.html":{}}}],["subsequ",{"_index":2403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["substanti",{"_index":2288,"title":{},"body":{"license.html":{}}}],["sum",{"_index":622,"title":{},"body":{"injectables/DemandService.html":{}}}],["sum(odmatrixassign",{"_index":656,"title":{},"body":{"injectables/DemandService.html":{}}}],["sumexp",{"_index":959,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["sumexps.push(sum",{"_index":961,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["sumexps[z",{"_index":963,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["super",{"_index":318,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["support",{"_index":1610,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"modules.html":{}}}],["sure",{"_index":1881,"title":{},"body":{"components/UiComponent.html":{}}}],["surfac",{"_index":784,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["svg",{"_index":2308,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":345,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{}}}],["switchmap",{"_index":1499,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["switchmap((respons",{"_index":1515,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["t",{"_index":975,"title":{},"body":{"classes/EnumValues.html":{}}}],["tag",{"_index":703,"title":{"interfaces/Tag.html":{}},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["tag.key",{"_index":865,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["tag.valu",{"_index":867,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["take",{"_index":724,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["takewhil",{"_index":543,"title":{},"body":{"injectables/ClockService.html":{}}}],["tap",{"_index":1867,"title":{},"body":{"components/UiComponent.html":{}}}],["tap((dialogresult",{"_index":1884,"title":{},"body":{"components/UiComponent.html":{}}}],["target",{"_index":1198,"title":{},"body":{"components/HomeComponent.html":{}}}],["targettim",{"_index":1795,"title":{},"body":{"classes/Statistics.html":{}}}],["technic",{"_index":1467,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["templateurl",{"_index":16,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["term",{"_index":212,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/TermsComponent.html":{}}}],["terms'},{'nam",{"_index":120,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["terms.component.html",{"_index":1829,"title":{},"body":{"components/TermsComponent.html":{}}}],["terms.component.scss",{"_index":1828,"title":{},"body":{"components/TermsComponent.html":{}}}],["terms/terms.compon",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["termscompon",{"_index":119,"title":{"components/TermsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["test",{"_index":2351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testlicens",{"_index":2263,"title":{},"body":{"index.html":{}}}],["text",{"_index":1191,"title":{},"body":{"components/HomeComponent.html":{}}}],["text.split",{"_index":1193,"title":{},"body":{"components/HomeComponent.html":{}}}],["theta",{"_index":952,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["this.adddestination(control",{"_index":1055,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.addorigin(control",{"_index":1047,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.argmin(linkflow",{"_index":676,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.avgspe",{"_index":1707,"title":{},"body":{"components/SimulationComponent.html":{}}}],["this.busiestchart",{"_index":417,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.busiestchart.data.datasets[0].data",{"_index":492,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.busiestchart.data.label",{"_index":485,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.busiestchart.destroy",{"_index":418,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.busiestchart.options.annotation.annotations.push",{"_index":458,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.busiestchart.options.title.text",{"_index":454,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.busiestchart.upd",{"_index":496,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.busiestctx",{"_index":427,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.calcpathcosts(odpair",{"_index":951,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.calcshortestpathsprobabilities(odpair",{"_index":892,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.cdr.detectchang",{"_index":1879,"title":{},"body":{"components/UiComponent.html":{}}}],["this.cent",{"_index":1144,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.clock.getstatist",{"_index":1814,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.clock.presscontrol(control",{"_index":1710,"title":{},"body":{"components/SimulationComponent.html":{}}}],["this.clock.reset",{"_index":1511,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.count",{"_index":1705,"title":{},"body":{"components/SimulationComponent.html":{}}}],["this.createchart",{"_index":412,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.createmap(el",{"_index":1137,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["this.currentstep",{"_index":1312,"title":{},"body":{"components/MapComponent.html":{}}}],["this.data",{"_index":1420,"title":{},"body":{"components/NumericComponent.html":{}}}],["this.demand.calcodmatrix",{"_index":1557,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.demand.changedemand(demand",{"_index":331,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["this.demand.changestartingtimes(startingtim",{"_index":332,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["this.demand.getodmatrix",{"_index":355,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["this.demand.getstartingtim",{"_index":356,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["this.demand.reset",{"_index":1509,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.dens",{"_index":811,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.descript",{"_index":319,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/WeatherComponent.html":{}}}],["this.descriptions.findindex(descript",{"_index":334,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["this.dialog.open(infodialogcompon",{"_index":1892,"title":{},"body":{"components/UiComponent.html":{}}}],["this.disabledefaultui",{"_index":1145,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.disabledoubleclickzoom",{"_index":1146,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.dist",{"_index":803,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.drawingoptions.marker.set('vis",{"_index":823,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.drawingoptions.polyline.set('strokecolor",{"_index":821,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.drawingoptions.polyline.set('zindex",{"_index":822,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.dur",{"_index":804,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.durationintraff",{"_index":809,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.edg",{"_index":839,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.edgeid",{"_index":801,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.edges.find((edg",{"_index":857,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.edges.push(edg",{"_index":860,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.elementref.nativeelement.queryselector('#busiestchart",{"_index":428,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.elementref.nativeelement.queryselector('#heavytrafficchart",{"_index":424,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.elementref.nativeelement.queryselector('#iconcontain",{"_index":1977,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.elementref.nativeelement.queryselector('#map",{"_index":1136,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["this.elementref.nativeelement.queryselector('#moderatetrafficchart",{"_index":426,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.elementref.nativeelement.queryselector('.headlin",{"_index":1189,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.endsimul",{"_index":552,"title":{},"body":{"injectables/ClockService.html":{},"components/SimulationComponent.html":{}}}],["this.estimate(linkflow",{"_index":679,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.execut",{"_index":579,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.flow",{"_index":813,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.formbuilder.array",{"_index":2106,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.formbuilder.group",{"_index":2105,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.formgroup.get('bounds').setvalue(map.data.bound",{"_index":1638,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.formgroup.get('center').setvalu",{"_index":1583,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.formgroup.get('endsimulation').setvalue(end",{"_index":1709,"title":{},"body":{"components/SimulationComponent.html":{}}}],["this.formgroup.get('odpair",{"_index":316,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{}}}],["this.formgroup.get('weathercondit",{"_index":344,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["this.freeflowveloc",{"_index":808,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.geocod",{"_index":1261,"title":{},"body":{"injectables/LocationService.html":{}}}],["this.geocoder.geocod",{"_index":1265,"title":{},"body":{"injectables/LocationService.html":{}}}],["this.gesturehandl",{"_index":1150,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.getedge(edgeid).tags.find(tag",{"_index":864,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.getheavytrafficedges(edges).map((edg",{"_index":1780,"title":{},"body":{"classes/Statistics.html":{}}}],["this.geticon(weather.icon",{"_index":1983,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.getkjam",{"_index":816,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.getmoderatetrafficedges(edges).map((edg",{"_index":1781,"title":{},"body":{"classes/Statistics.html":{}}}],["this.getnames(e).map((nam",{"_index":979,"title":{},"body":{"classes/EnumValues.html":{}}}],["this.getnode(node.nodeid",{"_index":848,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.getpathsedg",{"_index":883,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.gettrafficvolumes(edg",{"_index":1790,"title":{},"body":{"classes/Statistics.html":{}}}],["this.gls(linkflow",{"_index":668,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.heap",{"_index":901,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.heap.getpaths().length",{"_index":919,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.heap.push",{"_index":904,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.heavytrafficchart",{"_index":413,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.heavytrafficchart.data.datasets[0].data",{"_index":488,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.heavytrafficchart.data.label",{"_index":448,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.heavytrafficchart.destroy",{"_index":414,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.heavytrafficchart.options.title.text",{"_index":446,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.heavytrafficchart.upd",{"_index":494,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.heavytrafficctx",{"_index":423,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.http.get(url",{"_index":2060,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.icon",{"_index":1982,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.iconcontain",{"_index":1976,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.incidencematrix",{"_index":889,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.incidencematrix[z][n][m",{"_index":887,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.index",{"_index":353,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/StatisticsComponent.html":{}}}],["this.interv",{"_index":557,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.interval.pip",{"_index":578,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.isonpath(odmatrixassign",{"_index":680,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.isroundabout(edgeid",{"_index":868,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.latlng",{"_index":1262,"title":{},"body":{"injectables/LocationService.html":{}}}],["this.linkflow",{"_index":815,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.location.codeaddress(address).foreach",{"_index":1582,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.location.getcurrentposition().subscrib",{"_index":1597,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.location.getlatlng().lat.tostr",{"_index":2055,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.location.getlatlng().lng.tostr",{"_index":2057,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.location.reset",{"_index":1506,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.location.setlatlng(cent",{"_index":1579,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.map.buildbounds(this.cent",{"_index":1319,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.clearnodesact",{"_index":1329,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.hidepath",{"_index":1330,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.hiderect",{"_index":1322,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.initmap(el",{"_index":1143,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["this.map.reset",{"_index":1505,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.map.setcenter(this.cent",{"_index":1140,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["this.map.setcenter(this.map.getcentroid",{"_index":1326,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.setcentroid",{"_index":1325,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.setzoom(17",{"_index":1327,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.setzoom(this.zoom",{"_index":1142,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["this.map.showgraph",{"_index":1323,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.shownodes(odpair",{"_index":1338,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.showpaths(odpair",{"_index":1341,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.showrect(bound",{"_index":1320,"title":{},"body":{"components/MapComponent.html":{}}}],["this.maptypeid",{"_index":1147,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.maxflow",{"_index":817,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.maxzoom",{"_index":1148,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.min.getd",{"_index":1629,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.min.getfullyear",{"_index":1627,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.min.gethour",{"_index":1630,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.min.getminut",{"_index":1632,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.min.getmonth",{"_index":1628,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.minzoom",{"_index":1149,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.moderatetrafficchart",{"_index":415,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.moderatetrafficchart.data.datasets[0].data",{"_index":490,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.moderatetrafficchart.data.label",{"_index":452,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.moderatetrafficchart.destroy",{"_index":416,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.moderatetrafficchart.options.title.text",{"_index":450,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.moderatetrafficchart.upd",{"_index":495,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.moderatetrafficctx",{"_index":425,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.network",{"_index":1877,"title":{},"body":{"components/UiComponent.html":{}}}],["this.network.calclinkflows(respons",{"_index":1556,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.correctgraph",{"_index":1522,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.creategraph(respons",{"_index":1517,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.getassignmentmatrix",{"_index":667,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.network.getgraph",{"_index":1550,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.getlinkflow",{"_index":666,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.network.getnetwork().pip",{"_index":1514,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.getnetworkdata",{"_index":1518,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.getodpair",{"_index":354,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/SchedulerService.html":{}}}],["this.network.gettim",{"_index":1525,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.gettimestr",{"_index":1986,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.network.gettrafficdata",{"_index":1555,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.reset",{"_index":1507,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.setbounds(bound",{"_index":1634,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.network.setodpairs(odpair",{"_index":1027,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.network.settime(tim",{"_index":1636,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.network.updategraph(respons",{"_index":1520,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.nod",{"_index":837,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.nodeid",{"_index":795,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.nodes.filter((nod",{"_index":877,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.nodes.find((nod",{"_index":844,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.nodes.push(nod",{"_index":855,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.numer",{"_index":1878,"title":{},"body":{"components/UiComponent.html":{}}}],["this.odmatrix",{"_index":664,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.opendialog('ar",{"_index":1880,"title":{},"body":{"components/UiComponent.html":{}}}],["this.opensnackbar(error",{"_index":1875,"title":{},"body":{"components/UiComponent.html":{}}}],["this.paths.findindex((path",{"_index":1173,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["this.paths.push",{"_index":1168,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["this.paths.reduce((prev",{"_index":1175,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["this.paths.splice(index",{"_index":1174,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["this.pathtyp",{"_index":1025,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.paus",{"_index":565,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.pend",{"_index":1873,"title":{},"body":{"components/UiComponent.html":{}}}],["this.populatechart",{"_index":422,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.processingtim",{"_index":559,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.quick",{"_index":573,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.receiveact",{"_index":322,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["this.rel",{"_index":841,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.relationid",{"_index":831,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.renderer.appendchild(this.iconcontain",{"_index":1984,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.renderer.removechild(this.iconcontain",{"_index":1987,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.reset",{"_index":582,"title":{},"body":{"injectables/ClockService.html":{},"injectables/SchedulerService.html":{}}}],["this.resetcondit",{"_index":1979,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.resetcount",{"_index":899,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.router.navigate(['/hom",{"_index":1888,"title":{},"body":{"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["this.scheduler.reset",{"_index":1886,"title":{},"body":{"components/UiComponent.html":{}}}],["this.scheduler.scheduledemand(data",{"_index":2124,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.scheduler.schedulenetwork(data",{"_index":2123,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.scheduler.schedulesimulation(data",{"_index":2125,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.sendact",{"_index":323,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["this.setconditions(weathercondit",{"_index":1980,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.show",{"_index":1212,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.simulatedtimeinterv",{"_index":555,"title":{},"body":{"injectables/ClockService.html":{},"components/SimulationComponent.html":{}}}],["this.simulatedtimeperiod",{"_index":554,"title":{},"body":{"injectables/ClockService.html":{},"components/SimulationComponent.html":{}}}],["this.simulation.getstatist",{"_index":421,"title":{},"body":{"components/ChartsComponent.html":{},"components/StatisticsComponent.html":{}}}],["this.simulation.init",{"_index":1563,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.simulation.propagateflow",{"_index":592,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.simulation.reset",{"_index":1510,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.simulation.resetflow",{"_index":581,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.slow",{"_index":571,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.snackbar.openfromcomponent(messagearchivedcompon",{"_index":1889,"title":{},"body":{"components/UiComponent.html":{}}}],["this.start",{"_index":563,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.startingtim",{"_index":670,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.stat",{"_index":2150,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.statist",{"_index":420,"title":{},"body":{"components/ChartsComponent.html":{},"components/UiComponent.html":{}}}],["this.statistics.busiestedgecapac",{"_index":464,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.statistics.busiestedgedata",{"_index":493,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.statistics.busiestedgelabel",{"_index":457,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.statistics.heavytrafficdata",{"_index":489,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.statistics.heavytrafficlabel",{"_index":449,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.statistics.moderatetrafficdata",{"_index":491,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.statistics.moderatetrafficlabel",{"_index":453,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.statistics.periods.map((valu",{"_index":486,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.step",{"_index":569,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.stepp",{"_index":2118,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.stepper.reset",{"_index":2151,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.stepper.selected.complet",{"_index":2122,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.stepper.selectedindex",{"_index":2127,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.stop",{"_index":567,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.store.dispatch",{"_index":584,"title":{},"body":{"injectables/ClockService.html":{},"injectables/WizardService.html":{}}}],["this.store.pipe(select(fromsimulation.end)).subscribe((end",{"_index":551,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.store.pipe(select(fromui.wizardstate)).subscribe((st",{"_index":2149,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.styl",{"_index":1151,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.subscript",{"_index":561,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.subscription.clos",{"_index":575,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.subscription.unsubscrib",{"_index":580,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.subscriptions.foreach((subscript",{"_index":234,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChartsComponent.html":{},"components/UiComponent.html":{}}}],["this.subscriptions.push(this.formgroup.get('bounds').valuechanges.subscrib",{"_index":1633,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.subscriptions.push(this.formgroup.get('center').valuechanges.subscrib",{"_index":1578,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.subscriptions.push(this.formgroup.get('odpairs').valuechanges.subscrib",{"_index":326,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{}}}],["this.subscriptions.push(this.formgroup.get('time').valuechanges.subscrib",{"_index":1635,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.subscriptions.push(this.formgroup.get('weatherconditions').valuechanges.subscrib",{"_index":333,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromsimulation.end)).subscribe((end",{"_index":1708,"title":{},"body":{"components/SimulationComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromsimulation.periods)).subscribe((period",{"_index":1692,"title":{},"body":{"components/SimulationComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromsimulation.simulation)).subscribe((simul",{"_index":1418,"title":{},"body":{"components/NumericComponent.html":{},"components/SimulationComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromui.currentstep)).subscribe((currentstep",{"_index":341,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromui.error)).subscribe((error",{"_index":1874,"title":{},"body":{"components/UiComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromui.map)).subscribe((map",{"_index":1030,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromui.pending)).subscribe((pend",{"_index":1872,"title":{},"body":{"components/UiComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromui.steps)).subscribe((step",{"_index":1331,"title":{},"body":{"components/MapComponent.html":{}}}],["this.sum(odmatrixassign",{"_index":683,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.tim",{"_index":1985,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.timeinterv",{"_index":1694,"title":{},"body":{"components/SimulationComponent.html":{}}}],["this.timeperiod",{"_index":1696,"title":{},"body":{"components/SimulationComponent.html":{}}}],["this.totalprocessingtim",{"_index":560,"title":{},"body":{"injectables/ClockService.html":{},"components/StatisticsComponent.html":{}}}],["this.totalsimulatedtim",{"_index":1817,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.totaltim",{"_index":1815,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.updatechart",{"_index":445,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.updatedata",{"_index":444,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.updateodpairs(map.data.selectednod",{"_index":1032,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.updateopt",{"_index":443,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.updatesimulatedtimeperiod",{"_index":594,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.valuechang",{"_index":321,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{}}}],["this.veloc",{"_index":810,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.walk(o",{"_index":907,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.weather.changeweather(weathercondit",{"_index":340,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["this.weather.getfactor",{"_index":1560,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.weather.getweathercondit",{"_index":1978,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.weather.getweatherdata(this.network.gettim",{"_index":1523,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.weather.reset",{"_index":1508,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.weather.updateweatherdata(respons",{"_index":1524,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.weathercondit",{"_index":2050,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.wizard.goon",{"_index":2126,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.wizard.goon(data",{"_index":1549,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.wizard.putinerror(\"brows",{"_index":1608,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.putinerror('invalid",{"_index":1594,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.putinerror('zero",{"_index":1589,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.putinerror(error",{"_index":1056,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.wizard.putinerror(messag",{"_index":1546,"title":{},"body":{"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.putonhold('check",{"_index":1521,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.wizard.putonhold('comput",{"_index":1551,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.wizard.putonhold('cr",{"_index":1516,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.wizard.putonhold('get",{"_index":1512,"title":{},"body":{"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.putonhold('initi",{"_index":1562,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.wizard.putonhold('search",{"_index":1580,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.putonhold('upd",{"_index":1519,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.wizard.removefromwait",{"_index":1548,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.wizard.reset",{"_index":1504,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.wizard.stepp",{"_index":2117,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.wizard.updatestep",{"_index":1057,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.wizard.updatestep(this.formgroup.valu",{"_index":1033,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{}}}],["this.wizardform",{"_index":2104,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.wizardform.get('formstep",{"_index":2103,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.wizardform.get('formsteps').get([index]).valu",{"_index":2121,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.zoom",{"_index":1152,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["through",{"_index":1238,"title":{},"body":{"injectables/LocationService.html":{}}}],["throwerror",{"_index":760,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{}}}],["throwerror('getweatherdata",{"_index":2064,"title":{},"body":{"injectables/WeatherService.html":{}}}],["thunderstorm",{"_index":2010,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["tick",{"_index":2340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["time",{"_index":48,"title":{},"body":{"components/AboutComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/EnumValues.html":{},"components/HomeComponent.html":{},"components/PrivacyComponent.html":{},"injectables/SchedulerService.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["time.gettim",{"_index":2070,"title":{},"body":{"injectables/WeatherService.html":{}}}],["time.gettimezoneoffset",{"_index":2067,"title":{},"body":{"injectables/WeatherService.html":{}}}],["timeinterv",{"_index":754,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SimulationComponent.html":{},"classes/Statistics.html":{},"interfaces/Tag.html":{}}}],["timeintervaldecr",{"_index":2439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["timeintervalincr",{"_index":2438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["timelimit",{"_index":2385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["timeout",{"_index":1607,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["timeperiod",{"_index":1673,"title":{},"body":{"components/SimulationComponent.html":{},"classes/Statistics.html":{}}}],["timer",{"_index":534,"title":{},"body":{"injectables/ClockService.html":{}}}],["timezon",{"_index":2068,"title":{},"body":{"injectables/WeatherService.html":{}}}],["timezoneoffset",{"_index":2066,"title":{},"body":{"injectables/WeatherService.html":{}}}],["titl",{"_index":2335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["togglevalu",{"_index":258,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["togglevalue(pair",{"_index":286,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["toinch",{"_index":2025,"title":{},"body":{"injectables/WeatherService.html":{}}}],["toinches(valu",{"_index":2042,"title":{},"body":{"injectables/WeatherService.html":{}}}],["tool",{"_index":2250,"title":{},"body":{"index.html":{}}}],["toolbox",{"_index":2414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tort",{"_index":2305,"title":{},"body":{"license.html":{}}}],["tosecond",{"_index":1689,"title":{},"body":{"components/SimulationComponent.html":{},"miscellaneous/functions.html":{}}}],["toseconds(periods.simulatedtimeinterv",{"_index":1699,"title":{},"body":{"components/SimulationComponent.html":{}}}],["toseconds(uiconfig.simulatedtimeinterv",{"_index":1700,"title":{},"body":{"components/SimulationComponent.html":{}}}],["toseconds(valu",{"_index":981,"title":{},"body":{"classes/EnumValues.html":{},"miscellaneous/functions.html":{}}}],["total",{"_index":723,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{}}}],["totalprocessingtim",{"_index":504,"title":{},"body":{"injectables/ClockService.html":{},"components/StatisticsComponent.html":{}}}],["totalsimulatedtim",{"_index":574,"title":{},"body":{"injectables/ClockService.html":{},"components/StatisticsComponent.html":{}}}],["totaltim",{"_index":1802,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["traffic",{"_index":42,"title":{},"body":{"components/AboutComponent.html":{},"components/ChartsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["trafficchartopt",{"_index":409,"title":{},"body":{"components/ChartsComponent.html":{},"miscellaneous/variables.html":{}}}],["trafficcount",{"_index":603,"title":{},"body":{"interfaces/Counts.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{}}}],["trafficdata",{"_index":2353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trafficvolum",{"_index":602,"title":{},"body":{"interfaces/Counts.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{},"classes/Statistics.html":{}}}],["trafficvolumes[i",{"_index":1793,"title":{},"body":{"classes/Statistics.html":{}}}],["transit",{"_index":2381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('void",{"_index":2369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translat",{"_index":2190,"title":{},"body":{"dependencies.html":{}}}],["translatez",{"_index":1203,"title":{},"body":{"components/HomeComponent.html":{}}}],["transport",{"_index":833,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["travers",{"_index":911,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["tri",{"_index":879,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{}}}],["trigger('hometransit",{"_index":2368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChartsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"miscellaneous/variables.html":{}}}],["turf/area",{"_index":2181,"title":{},"body":{"dependencies.html":{}}}],["turf/bear",{"_index":2187,"title":{},"body":{"dependencies.html":{}}}],["turf/cent",{"_index":2194,"title":{},"body":{"dependencies.html":{}}}],["turf/centroid",{"_index":2192,"title":{},"body":{"dependencies.html":{}}}],["turf/dist",{"_index":2188,"title":{},"body":{"dependencies.html":{}}}],["turf/help",{"_index":2183,"title":{},"body":{"dependencies.html":{}}}],["turf/invari",{"_index":2185,"title":{},"body":{"dependencies.html":{}}}],["turf/transform",{"_index":2189,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":691,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["type",{"_index":31,"title":{},"body":{"components/AboutComponent.html":{},"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"interfaces/SimulationState.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealias",{"_index":2315,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1691,"title":{},"body":{"components/SimulationComponent.html":{}}}],["typescript",{"_index":67,"title":{},"body":{"components/AboutComponent.html":{}}}],["ui",{"_index":88,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["ui'},{'nam",{"_index":122,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["ui.compon",{"_index":1909,"title":{},"body":{"modules/UiModule.html":{},"modules/UiRoutingModule.html":{}}}],["ui.component.html",{"_index":1842,"title":{},"body":{"components/UiComponent.html":{}}}],["ui.component.scss",{"_index":1841,"title":{},"body":{"components/UiComponent.html":{}}}],["ui/ui",{"_index":549,"title":{},"body":{"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{}}}],["ui/ui.module#uimodul",{"_index":209,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["uicompon",{"_index":121,"title":{"components/UiComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["uiconfig",{"_index":313,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["uiconfig.links.heavytrafficcolor",{"_index":434,"title":{},"body":{"components/ChartsComponent.html":{}}}],["uiconfig.links.moderatetrafficcolor",{"_index":436,"title":{},"body":{"components/ChartsComponent.html":{}}}],["uiconfig.map.cent",{"_index":1313,"title":{},"body":{"components/MapComponent.html":{}}}],["uiconfig.map.zoom",{"_index":1314,"title":{},"body":{"components/MapComponent.html":{}}}],["uiconfig.maxodpair",{"_index":1038,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["uiconfig.simulatedtimeinterv",{"_index":556,"title":{},"body":{"injectables/ClockService.html":{}}}],["uiconfig.sp",{"_index":820,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["uiconfig.theta",{"_index":953,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["uiconfig.timeintervaldecr",{"_index":589,"title":{},"body":{"injectables/ClockService.html":{}}}],["uiconfig.timeintervalincr",{"_index":588,"title":{},"body":{"injectables/ClockService.html":{}}}],["uiconfig.timelimit",{"_index":1631,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["uiconfig.weathericons[index",{"_index":338,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["uimodul",{"_index":1897,"title":{"modules/UiModule.html":{}},"body":{"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["uiroutingmodul",{"_index":1902,"title":{"modules/UiRoutingModule.html":{}},"body":{"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["uistat",{"_index":1930,"title":{"interfaces/UiState.html":{}},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["unavail",{"_index":1605,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["undefin",{"_index":843,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SimulationComponent.html":{},"interfaces/Tag.html":{},"miscellaneous/functions.html":{}}}],["under",{"_index":1837,"title":{},"body":{"components/TermsComponent.html":{}}}],["unexpect",{"_index":1545,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["unix",{"_index":2073,"title":{},"body":{"injectables/WeatherService.html":{}}}],["unknown",{"_index":641,"title":{},"body":{"injectables/DemandService.html":{}}}],["unknown_error",{"_index":1593,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["updat",{"_index":324,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"components/MapComponent.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{},"index.html":{}}}],["updatechart",{"_index":381,"title":{},"body":{"components/ChartsComponent.html":{}}}],["updatedata",{"_index":382,"title":{},"body":{"components/ChartsComponent.html":{}}}],["updateodpair",{"_index":1005,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["updateodpairs(nod",{"_index":1018,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["updateon",{"_index":2115,"title":{},"body":{"components/WizardComponent.html":{}}}],["updateopt",{"_index":383,"title":{},"body":{"components/ChartsComponent.html":{}}}],["updatesimulatedtimeperiod",{"_index":515,"title":{},"body":{"injectables/ClockService.html":{}}}],["updatestep",{"_index":2133,"title":{},"body":{"injectables/WizardService.html":{}}}],["updatestep(data",{"_index":2144,"title":{},"body":{"injectables/WizardService.html":{}}}],["updateweatherdata",{"_index":2026,"title":{},"body":{"injectables/WeatherService.html":{}}}],["updateweatherdata(data",{"_index":2044,"title":{},"body":{"injectables/WeatherService.html":{}}}],["uppercas",{"_index":1992,"title":{},"body":{"components/WeatherComponent.html":{}}}],["urban",{"_index":41,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["url",{"_index":2051,"title":{},"body":{"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["us",{"_index":45,"title":{},"body":{"components/AboutComponent.html":{},"classes/Edge.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"index.html":{},"license.html":{}}}],["usefactori",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":1932,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["utc",{"_index":2074,"title":{},"body":{"injectables/WeatherService.html":{}}}],["utctim",{"_index":2069,"title":{},"body":{"injectables/WeatherService.html":{}}}],["util",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{}}}],["valid",{"_index":301,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WizardComponent.html":{}}}],["validators.max(uiconfig.rainintensity.max",{"_index":2112,"title":{},"body":{"components/WizardComponent.html":{}}}],["validators.max(uiconfig.snowintensity.max",{"_index":2113,"title":{},"body":{"components/WizardComponent.html":{}}}],["validators.max(uiconfig.visibility.max",{"_index":2109,"title":{},"body":{"components/WizardComponent.html":{}}}],["validators.min(0",{"_index":2108,"title":{},"body":{"components/WizardComponent.html":{}}}],["validators.pattern('^[0",{"_index":2110,"title":{},"body":{"components/WizardComponent.html":{}}}],["validators.requir",{"_index":2107,"title":{},"body":{"components/WizardComponent.html":{}}}],["validators.requiredtru",{"_index":2114,"title":{},"body":{"components/WizardComponent.html":{}}}],["valu",{"_index":33,"title":{},"body":{"components/AboutComponent.html":{},"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.edgeid",{"_index":884,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["valuechang",{"_index":223,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["var",{"_index":73,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["variabl",{"_index":2317,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["varianc",{"_index":757,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["vehicl",{"_index":734,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SimulationComponent.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["veloc",{"_index":704,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["version",{"_index":896,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{}}}],["vertic",{"_index":479,"title":{},"body":{"components/ChartsComponent.html":{}}}],["viewchild",{"_index":2092,"title":{},"body":{"components/WizardComponent.html":{}}}],["viewchild('stepp",{"_index":2102,"title":{},"body":{"components/WizardComponent.html":{}}}],["viewencapsul",{"_index":1305,"title":{},"body":{"components/MapComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["viewencapsulation.non",{"_index":1288,"title":{},"body":{"components/MapComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["visibl",{"_index":1996,"title":{},"body":{"interfaces/WeatherConditions.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":29,"title":{},"body":{"components/AboutComponent.html":{},"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["volum",{"_index":439,"title":{},"body":{"components/ChartsComponent.html":{},"components/NumericComponent.html":{},"miscellaneous/variables.html":{}}}],["voluntarili",{"_index":1459,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["wait",{"_index":1547,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["walk",{"_index":906,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["walk(o",{"_index":918,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["want",{"_index":1882,"title":{},"body":{"components/UiComponent.html":{}}}],["warranti",{"_index":2290,"title":{},"body":{"license.html":{}}}],["way",{"_index":1422,"title":{},"body":{"components/NumericComponent.html":{},"components/PrivacyComponent.html":{}}}],["waynam",{"_index":601,"title":{},"body":{"interfaces/Counts.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{}}}],["weather",{"_index":267,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["weather'},{'nam",{"_index":124,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["weather.component.html",{"_index":1952,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.component.scss",{"_index":1951,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.descript",{"_index":1981,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.servic",{"_index":2016,"title":{},"body":{"modules/WeatherModule.html":{}}}],["weather/weather.compon",{"_index":1923,"title":{},"body":{"modules/UiModule.html":{}}}],["weather/weather.modul",{"_index":1395,"title":{},"body":{"modules/NetworkModule.html":{}}}],["weathercompon",{"_index":123,"title":{"components/WeatherComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["weathercondit",{"_index":309,"title":{"interfaces/WeatherConditions.html":{}},"body":{"components/ChangeOfConditionsComponent.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{}}}],["weatherconditions.descript",{"_index":335,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["weatherconditions.icon",{"_index":339,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["weatherconditionscontrol",{"_index":343,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["weatherdescript",{"_index":294,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["weathericon",{"_index":2422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weathermodul",{"_index":1393,"title":{"modules/WeatherModule.html":{}},"body":{"modules/NetworkModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["weatherservic",{"_index":268,"title":{"injectables/WeatherService.html":{}},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/SchedulerService.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"overview.html":{}}}],["web",{"_index":43,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{},"dependencies.html":{},"index.html":{}}}],["whether",{"_index":2303,"title":{},"body":{"license.html":{}}}],["whole",{"_index":1486,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["width",{"_index":1893,"title":{},"body":{"components/UiComponent.html":{}}}],["without",{"_index":2272,"title":{},"body":{"license.html":{}}}],["wizard",{"_index":84,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["wizard.component.html",{"_index":2079,"title":{},"body":{"components/WizardComponent.html":{}}}],["wizard.component.scss",{"_index":2078,"title":{},"body":{"components/WizardComponent.html":{}}}],["wizard.servic",{"_index":303,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WizardComponent.html":{}}}],["wizard/chang",{"_index":1916,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/estim",{"_index":1914,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/scheduler.servic",{"_index":1869,"title":{},"body":{"components/UiComponent.html":{},"modules/UiModule.html":{}}}],["wizard/search",{"_index":1911,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/select",{"_index":1913,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/simulation/simulation.compon",{"_index":1918,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/statistics/statistics.compon",{"_index":1919,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/wizard.compon",{"_index":1910,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/wizard.servic",{"_index":1926,"title":{},"body":{"modules/UiModule.html":{}}}],["wizardact",{"_index":1089,"title":{},"body":{"classes/GoOn.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/WizardState.html":{},"miscellaneous/typealiases.html":{}}}],["wizardactiontyp",{"_index":1077,"title":{},"body":{"classes/GoOn.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{}}}],["wizardactiontypes.goon",{"_index":1075,"title":{},"body":{"classes/GoOn.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["wizardactiontypes.reset",{"_index":1088,"title":{},"body":{"classes/GoOn.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["wizardactiontypes.stepchang",{"_index":1083,"title":{},"body":{"classes/GoOn.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["wizardactiontypes.steperror",{"_index":1085,"title":{},"body":{"classes/GoOn.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["wizardactiontypes.steppend",{"_index":1086,"title":{},"body":{"classes/GoOn.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["wizardcompon",{"_index":125,"title":{"components/WizardComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["wizardform",{"_index":2081,"title":{},"body":{"components/WizardComponent.html":{}}}],["wizardreduc",{"_index":2232,"title":{},"body":{"miscellaneous/functions.html":{}}}],["wizardreducer(st",{"_index":2155,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/functions.html":{}}}],["wizardservic",{"_index":264,"title":{"injectables/WizardService.html":{}},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"modules/UiModule.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"overview.html":{}}}],["wizardst",{"_index":1943,"title":{"interfaces/WizardState.html":{}},"body":{"interfaces/UiState.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["wrap",{"_index":1249,"title":{},"body":{"injectables/LocationService.html":{}}}],["wrappedtext",{"_index":1194,"title":{},"body":{"components/HomeComponent.html":{}}}],["x",{"_index":480,"title":{},"body":{"components/ChartsComponent.html":{},"injectables/DemandService.html":{},"miscellaneous/variables.html":{}}}],["xadjust",{"_index":483,"title":{},"body":{"components/ChartsComponent.html":{}}}],["xax",{"_index":2337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xi",{"_index":2415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["y",{"_index":462,"title":{},"body":{"components/ChartsComponent.html":{},"miscellaneous/variables.html":{}}}],["yadjust",{"_index":475,"title":{},"body":{"components/ChartsComponent.html":{}}}],["yax",{"_index":2342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ye",{"_index":1216,"title":{},"body":{"components/InfoDialogComponent.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{},"miscellaneous/functions.html":{}}}],["z",{"_index":675,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["zero",{"_index":898,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["zindex",{"_index":748,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["zone.j",{"_index":2215,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"components/GoogleMapComponent.html":{},"modules/LocationModule.html":{},"components/MapComponent.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutComponent.html":{"url":"components/AboutComponent.html","title":"component - AboutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AboutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/about/about.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n            \n                styleUrls\n                about.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./about.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentYear\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/about/about.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/about/about.component.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentYear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentYear:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : new Date().getFullYear()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/about/about.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-about',\n    templateUrl: './about.component.html',\n    styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n\n    currentYear: number = new Date().getFullYear();\n\n    constructor() { }\n\n    ngOnInit(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    STRADA\n    An urban traffic web simulator that uses data in real time\n    Copyright&nbsp;©&nbsp;{{ currentYear }} Roberto&nbsp;Simonetti - MIT license\n    Project developed for the dissertation of my bachelor's degree in computer engineering\n    Links\n    \n        \n            \n                Repository:\n                STRADA source code\n            \n        \n        \n            \n                Official documentation:\n                STRADA documentation\n            \n        \n    \n    Built with\n    \n        \n            \n                Angular, TypeScript & Firebase\n            \n        \n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    STRADA    An urban traffic web simulator that uses data in real time    Copyright © {{ currentYear }} Roberto Simonetti - MIT license    Project developed for the dissertation of my bachelor\\'s degree in computer engineering    Links                                        Repository:                STRADA source code                                                        Official documentation:                STRADA documentation                            Built with                                        Angular, TypeScript & Firebase                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent { }\n\n    \n\n    \n        \n\n    \n        \n            \n            \n                STRADA\n            \n\n            \n\n            \n                \n            \n            \n                \n                    About\n                \n            \n        \n    \n\n    \n\n        \n            \n        \n\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    STRADA                                                                                                                About                                                                            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nPrivacyComponent\n\nPrivacyComponent\n\nAppModule -->\n\nPrivacyComponent->AppModule\n\n\n\n\n\nTermsComponent\n\nTermsComponent\n\nAppModule -->\n\nTermsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nDemandModule\n\nDemandModule\n\nAppModule -->\n\nDemandModule->AppModule\n\n\n\n\n\nLocationModule\n\nLocationModule\n\nAppModule -->\n\nLocationModule->AppModule\n\n\n\n\n\nNetworkModule\n\nNetworkModule\n\nAppModule -->\n\nNetworkModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nSimulationModule\n\nSimulationModule\n\nAppModule -->\n\nSimulationModule->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AboutComponent\n                            \n                            \n                                AppComponent\n                            \n                            \n                                HomeComponent\n                            \n                            \n                                PrivacyComponent\n                            \n                            \n                                TermsComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                            \n                                    DemandModule\n                            \n                            \n                                    LocationModule\n                            \n                            \n                                    NetworkModule\n                            \n                            \n                                    SharedModule\n                            \n                            \n                                    SimulationModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule, APP_INITIALIZER } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { StoreModule } from '@ngrx/store';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { SharedModule } from './shared/shared.module';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { AboutComponent } from './about/about.component';\nimport { PrivacyComponent } from './privacy/privacy.component';\nimport { TermsComponent } from './terms/terms.component';\nimport { LocationModule } from './location/location.module';\nimport { NetworkModule } from './network/network.module';\nimport { DemandModule } from './demand/demand.module';\nimport { SimulationModule } from './simulation/simulation.module';\n\nimport { loadScripts } from './utils';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        HomeComponent,\n        AboutComponent,\n        PrivacyComponent,\n        TermsComponent\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        SharedModule.forRoot(),\n        StoreModule.forRoot({}),\n        LocationModule,\n        NetworkModule,\n        DemandModule,\n        SimulationModule\n    ],\n    providers: [\n        {\n            provide: APP_INITIALIZER,\n            useFactory: loadScripts,\n            deps: [],\n            multi: true\n        }\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPreloadingStrategy.html":{"url":"classes/AppPreloadingStrategy.html","title":"class - AppPreloadingStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPreloadingStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app-preloading-strategy.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        PreloadingStrategy\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                preload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            preload\n                            \n                            \n                        \n                    \n                \n                \n                    \npreload(route: Route, load: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app-preloading-strategy.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    Route\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        load\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { PreloadingStrategy, Route } from \"@angular/router\";\nimport { Observable, of } from \"rxjs\";\n\nexport class AppPreloadingStrategy implements PreloadingStrategy {\n\n    preload(route: Route, load: Function): Observable {\n        return route.data && route.data.preload ? load() : of(null);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { AppPreloadingStrategy } from './app-preloading-strategy';\n\nimport { HomeComponent } from './home/home.component';\nimport { AboutComponent } from './about/about.component';\nimport { PrivacyComponent } from './privacy/privacy.component';\nimport { TermsComponent } from './terms/terms.component';\n\n@NgModule({\n    providers: [AppPreloadingStrategy],\n    imports: [\n        RouterModule.forRoot([\n            { path: '', redirectTo: 'home', pathMatch: 'full' },\n            { path: 'home', component: HomeComponent },\n            { path: 'about', component: AboutComponent },\n            {\n                path: 'simulation',\n                loadChildren: './ui/ui.module#UiModule',\n                data: { preload: false }\n            },\n            { path: 'privacy', component: PrivacyComponent },\n            { path: 'terms', component: TermsComponent },\n            { path: '**', redirectTo: 'home' }\n        ], { preloadingStrategy: AppPreloadingStrategy })\n    ],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseComponent.html":{"url":"classes/BaseComponent.html","title":"class - BaseComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/base.component.ts\n        \n\n            \n                Description\n            \n            \n                Abstract class inherited from UI components.\n\n            \n\n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { OnInit, OnDestroy } from \"@angular/core\";\nimport { Subscription } from \"rxjs\";\n\n/**\n * Abstract class inherited from UI components.\n */\nexport abstract class BaseComponent implements OnInit, OnDestroy {\n\n    subscriptions: Subscription[] = [];\n\n    abstract ngOnInit(): void;\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach((subscription: Subscription) => {\n            if (subscription) { subscription.unsubscribe(); }\n        });\n    }\n\n    /**\n     * Subscribes to the form changes.\n     */\n    abstract valueChanges(): void;\n\n    /**\n     * Subscribes to the actions sent by other components.\n     */\n    abstract receiveActions(): void;\n\n    /**\n     * Subscribes to the actions sent to other components.\n     */\n    abstract sendActions(): void;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CanComponentDeactivate.html":{"url":"interfaces/CanComponentDeactivate.html","title":"interface - CanComponentDeactivate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CanComponentDeactivate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/can-deactivate-guard.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        canDeactivate\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canDeactivate\n                                    \n                                \n                                \n                                    \n                                        canDeactivate:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nexport interface CanComponentDeactivate {\n    canDeactivate: () => Observable | Promise | boolean;\n}\n\n@Injectable() export class CanDeactivateGuard implements CanDeactivate {\n    canDeactivate(component: CanComponentDeactivate): boolean | Observable | Promise {\n        return component.canDeactivate ? component.canDeactivate() : true;\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CanDeactivateGuard.html":{"url":"injectables/CanDeactivateGuard.html","title":"injectable - CanDeactivateGuard","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  CanDeactivateGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/can-deactivate-guard.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canDeactivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canDeactivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanDeactivate(component: CanComponentDeactivate)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/can-deactivate-guard.service.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        component\n                                                        \n                                                                    CanComponentDeactivate\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean | Observable | Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nexport interface CanComponentDeactivate {\n    canDeactivate: () => Observable | Promise | boolean;\n}\n\n@Injectable() export class CanDeactivateGuard implements CanDeactivate {\n    canDeactivate(component: CanComponentDeactivate): boolean | Observable | Promise {\n        return component.canDeactivate ? component.canDeactivate() : true;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangeOfConditionsComponent.html":{"url":"components/ChangeOfConditionsComponent.html","title":"component - ChangeOfConditionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChangeOfConditionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-change-of-conditions\n            \n\n            \n                styleUrls\n                change-of-conditions.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./change-of-conditions.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                descriptions\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildOdPair\n                            \n                            \n                                getVisibility\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                toggleValue\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, wizard: WizardService, network: NetworkService, weather: WeatherService, demand: DemandService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        weather\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        demand\n                                                  \n                                                        \n                                                                    DemandService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:27\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buildOdPair\n                            \n                            \n                        \n                    \n                \n                \n                    \nbuildOdPair(odPair: OdPair, demand: number, startingTime: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:123\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        odPair\n                                                        \n                                                                    OdPair\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        demand\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        startingTime\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FormGroup\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getVisibility\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetVisibility(pair: AbstractControl)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:119\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pair\n                                                        \n                                                                    AbstractControl\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:108\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleValue\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleValue(pair: AbstractControl)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:112\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pair\n                                                        \n                                                                    AbstractControl\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            descriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        descriptions:     WeatherDescription[]\n\n                    \n                \n                    \n                        \n                            Type :     WeatherDescription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        odPairs\n                    \n                \n\n                \n                    \n                        getodPairs()\n                    \n                \n                            \n                                \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:31\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, FormArray, AbstractControl, Validators } from '@angular/forms';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { WizardService } from '../wizard.service';\nimport { NetworkService } from '../../../network/network.service';\nimport { WeatherService } from '../../../network/weather/weather.service';\nimport { DemandService } from '../../../demand/demand.service';\nimport * as fromUi from '../../models/reducers';\nimport { WeatherDescription, WeatherConditions } from '../../../network/weather/weather';\nimport { OdPair } from '../../../network/graph';\nimport { EnumValues } from '../../utils';\nimport { uiConfig } from '../../ui-config';\n\nimport { BaseComponent } from '../../models/base.component';\n\n@Component({\n    selector: 'wizard-change-of-conditions',\n    templateUrl: './change-of-conditions.component.html',\n    styleUrls: ['./change-of-conditions.component.scss']\n})\nexport class ChangeOfConditionsComponent extends BaseComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    descriptions: WeatherDescription[] = [];\n\n    get odPairs(): FormArray {\n        return this.formGroup.get('odPairs') as FormArray;\n    }\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private store: Store,\n        private wizard: WizardService,\n        private network: NetworkService,\n        private weather: WeatherService,\n        private demand: DemandService\n    ) {\n        super();\n\n        this.descriptions = EnumValues.getValues(WeatherDescription);\n    }\n\n    ngOnInit(): void {\n        this.valueChanges();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        // Updates demand service data on value changes.\n        this.subscriptions.push(this.formGroup.get('odPairs').valueChanges.subscribe(\n            (odPairs: any[]) => {\n                const demand = odPairs.map((pair: any) => {\n                    return pair.demand;\n                });\n                const startingTimes = odPairs.map((pair: any) => {\n                    return pair.startingTime;\n                });\n                this.demand.changeDemand(demand);\n                this.demand.changeStartingTimes(startingTimes);\n            }\n        ));\n        // Updates weather service data on value changes.\n        this.subscriptions.push(this.formGroup.get('weatherConditions').valueChanges.subscribe(\n            (weatherConditions: WeatherConditions) => {\n                const index = this.descriptions.findIndex(description => description == weatherConditions.description);\n                if (index != -1) {\n                    const icon = uiConfig.weatherIcons[index];\n                    weatherConditions.icon = icon;\n                }\n                this.weather.changeWeather(weatherConditions);\n            }\n        ));\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.currentStep)).subscribe((currentStep: number) => {\n            const odPairsControl = this.formGroup.get('odPairs') as FormArray;\n            const weatherConditionsControl = this.formGroup.get('weatherConditions');\n            switch (currentStep) {\n                case 0:\n                    // Resets control.\n                    if (odPairsControl.length > 0) {\n                        for (let i = odPairsControl.length - 1; i >= 0; i--) {\n                            odPairsControl.removeAt(i);\n                        }\n                    }\n                    break;\n                case this.index:\n                    const odPairs = this.network.getOdPairs();\n                    const demand = this.demand.getOdMatrix();\n                    const startingTimes = this.demand.getStartingTimes();\n                    for (let i = 0; i \n    \n\n    \n        \n    \n        \n            \n                \n                    O\n                    D\n                    Demand\n                    Time\n                    \n                \n                \n                    \n                        {{ pair.value.origin }}\n                    \n                    \n                        {{ pair.value.destination }}\n                    \n                    \n                        \n                            \n                            \n                                Invalid value\n                            \n                        \n                    \n                    \n                        \n                            \n                            \n                                Invalid value\n                            \n                        \n                    \n                    \n                        \n                            {{ getVisibility(pair) }}\n                        \n                    \n                \n            \n        \n        \n        \n            \n                \n                    \n                        {{ description }}\n                    \n                \n            \n            \n                \n                m\n                \n                    Invalid value\n                \n            \n            \n                \n                mm\n                \n                    Invalid value\n                \n            \n            \n                \n                mm\n                \n                    Invalid value\n                \n            \n        \n    \n\n    \n        Continue\n            navigate_next\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            O                    D                    Demand                    Time                                                                                                {{ pair.value.origin }}                                                                {{ pair.value.destination }}                                                                                                                                                        Invalid value                                                                                                                                                                                                            Invalid value                                                                                                                                                {{ getVisibility(pair) }}                                                                                                                                                                        {{ description }}                                                                                            m                                    Invalid value                                                                        mm                                    Invalid value                                                                        mm                                    Invalid value                                                    Continue            navigate_next            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChangeOfConditionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChartsComponent.html":{"url":"components/ChartsComponent.html","title":"component - ChartsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChartsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/charts/charts.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ui-charts\n            \n\n            \n                styleUrls\n                charts.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./charts.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                busiestChart\n                            \n                            \n                                busiestCtx\n                            \n                            \n                                heavyTrafficChart\n                            \n                            \n                                heavyTrafficCtx\n                            \n                            \n                                moderateTrafficChart\n                            \n                            \n                                moderateTrafficCtx\n                            \n                            \n                                statistics\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createCharts\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                populateCharts\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                updateCharts\n                            \n                            \n                                updateData\n                            \n                            \n                                updateOptions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, store: Store, simulation: SimulationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/charts/charts.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        simulation\n                                                  \n                                                        \n                                                                    SimulationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createCharts\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateCharts()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:82\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            populateCharts\n                            \n                            \n                        \n                    \n                \n                \n                    \npopulateCharts()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:131\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateCharts\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateCharts()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:186\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateData\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:180\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateOptions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:137\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            busiestChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        busiestChart:     Chart\n\n                    \n                \n                    \n                        \n                            Type :     Chart\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            busiestCtx\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        busiestCtx:     HTMLCanvasElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLCanvasElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heavyTrafficChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heavyTrafficChart:     Chart\n\n                    \n                \n                    \n                        \n                            Type :     Chart\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heavyTrafficCtx\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heavyTrafficCtx:     HTMLCanvasElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLCanvasElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moderateTrafficChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        moderateTrafficChart:     Chart\n\n                    \n                \n                    \n                        \n                            Type :     Chart\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moderateTrafficCtx\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        moderateTrafficCtx:     HTMLCanvasElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLCanvasElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            statistics\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        statistics:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, OnDestroy, ElementRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { Store, select } from '@ngrx/store';\nimport { Chart } from 'chart.js';\n\nimport { SimulationService } from '../../simulation/simulation.service';\nimport * as fromUi from '../models/reducers';\nimport { formatTimeFromSeconds } from '../utils';\nimport { trafficChartOptions, busiestChartOptions, busiestColor } from './charts-config';\nimport { uiConfig } from '../ui-config';\n\nimport { BaseComponent } from '../models/base.component';\n\n@Component({\n    selector: 'ui-charts',\n    templateUrl: './charts.component.html',\n    styleUrls: ['./charts.component.scss']\n})\nexport class ChartsComponent extends BaseComponent implements OnInit, AfterViewInit, OnDestroy {\n\n    heavyTrafficCtx: HTMLCanvasElement;\n\n    moderateTrafficCtx: HTMLCanvasElement;\n\n    busiestCtx: HTMLCanvasElement;\n\n    heavyTrafficChart: Chart;\n\n    moderateTrafficChart: Chart;\n\n    busiestChart: Chart;\n\n    statistics: any;\n\n    constructor(\n        private elementRef: ElementRef,\n        private store: Store,\n        private simulation: SimulationService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        //\n    }\n\n    ngAfterViewInit(): void {\n        this.createCharts();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach((subscription: Subscription) => {\n            if (subscription) { subscription.unsubscribe(); }\n        });\n        if (this.heavyTrafficChart) { this.heavyTrafficChart.destroy(); }\n        if (this.moderateTrafficChart) { this.moderateTrafficChart.destroy(); }\n        if (this.busiestChart) { this.busiestChart.destroy(); }\n    }\n\n    valueChanges(): void {\n        //\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.currentStep)).subscribe((currentStep: number) => {\n            switch (currentStep) {\n                case 5:\n                    this.statistics = this.simulation.getStatistics();\n                    this.populateCharts();\n                    break;\n            }\n        }));\n    }\n\n    sendActions(): void {\n        //\n    }\n\n    createCharts(): void {\n        this.heavyTrafficCtx = this.elementRef.nativeElement.querySelector('#heavyTrafficChart');\n        this.moderateTrafficCtx = this.elementRef.nativeElement.querySelector('#moderateTrafficChart');\n        this.busiestCtx = this.elementRef.nativeElement.querySelector('#busiestChart');\n\n        this.heavyTrafficChart = new Chart(this.heavyTrafficCtx, {\n            type: 'horizontalBar',\n            data: {\n                labels: [],\n                datasets: [\n                    {\n                        data: [],\n                        hoverBackgroundColor: uiConfig.links.heavyTrafficColor\n                    }\n                ]\n            },\n            options: trafficChartOptions\n        });\n        this.moderateTrafficChart = new Chart(this.moderateTrafficCtx, {\n            type: 'horizontalBar',\n            data: {\n                labels: [],\n                datasets: [\n                    {\n                        data: [],\n                        hoverBackgroundColor: uiConfig.links.moderateTrafficColor\n                    }\n                ]\n            },\n            options: trafficChartOptions\n        });\n        this.busiestChart = new Chart(this.busiestCtx, {\n            type: 'line',\n            data: {\n                labels: [],\n                datasets: [\n                    {\n                        label: 'Traffic volume',\n                        steppedLine: true,\n                        data: [],\n                        borderColor: busiestColor,\n                        fill: false\n                    }\n                ]\n            },\n            options: busiestChartOptions\n        });\n    }\n\n    populateCharts(): void {\n        this.updateOptions();\n        this.updateData();\n        this.updateCharts();\n    }\n\n    updateOptions(): void {\n        this.heavyTrafficChart.options.title.text = 'Heavy traffic';\n        this.heavyTrafficChart.data.labels = this.statistics.heavyTrafficLabels;\n        this.moderateTrafficChart.options.title.text = 'Moderate traffic';\n        this.moderateTrafficChart.data.labels = this.statistics.moderateTrafficLabels;\n        this.busiestChart.options.title.text = 'Busiest edge ' + this.statistics.busiestEdgeLabel;\n        this.busiestChart.options.annotation.annotations.push({\n            type: 'line',\n            mode: 'horizontal',\n            scaleID: \"y-axis-0\",\n            value: this.statistics.busiestEdgeCapacity,\n            borderColor: '#666',\n            borderWidth: 2,\n            label: {\n                backgroundColor: 'rgba(255,255,255,1.0)',\n                fontStyle: \"normal\",\n                fontColor: \"#666\",\n                position: \"right\",\n                yAdjust: 0,\n                content: \"Capacity\",\n                enabled: true\n            }\n        });\n        this.busiestChart.options.annotation.annotations.push({\n            type: 'line',\n            mode: 'vertical',\n            scaleID: \"x-axis-0\",\n            value: formatTimeFromSeconds(this.statistics.busiestEdgeDelay),\n            borderColor: '#666',\n            borderWidth: 2,\n            label: {\n                backgroundColor: 'rgba(255,255,255,1.0)',\n                fontStyle: \"normal\",\n                fontColor: \"#666\",\n                position: \"center\",\n                xAdjust: 0,\n                content: \"Delay\",\n                enabled: true\n            }\n        });\n        this.busiestChart.data.labels = this.statistics.periods.map((value: number) => formatTimeFromSeconds(value));\n    }\n\n    updateData(): void {\n        this.heavyTrafficChart.data.datasets[0].data = this.statistics.heavyTrafficData;\n        this.moderateTrafficChart.data.datasets[0].data = this.statistics.moderateTrafficData;\n        this.busiestChart.data.datasets[0].data = this.statistics.busiestEdgeData;\n    }\n\n    updateCharts(): void {\n        this.heavyTrafficChart.update();\n        this.moderateTrafficChart.update();\n        this.busiestChart.update();\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        \n    \n\n\n    \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChartsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClockService.html":{"url":"injectables/ClockService.html","title":"injectable - ClockService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ClockService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/clock.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                endSimulation\n                            \n                            \n                                    Private\n                                interval\n                            \n                            \n                                    Private\n                                processingTime\n                            \n                            \n                                    Private\n                                simulatedTimeInterval\n                            \n                            \n                                    Private\n                                simulatedTimePeriod\n                            \n                            \n                                    Private\n                                subscription\n                            \n                            \n                                    Private\n                                totalProcessingTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                execute\n                            \n                            \n                                    Public\n                                getStatistics\n                            \n                            \n                                    Private\n                                pause\n                            \n                            \n                                    Public\n                                pressControl\n                            \n                            \n                                    Private\n                                quick\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Private\n                                slow\n                            \n                            \n                                    Private\n                                start\n                            \n                            \n                                    Private\n                                step\n                            \n                            \n                                    Private\n                                stop\n                            \n                            \n                                    Private\n                                updateSimulatedTimePeriod\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, simulation: SimulationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/simulation/clock.service.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        simulation\n                                                  \n                                                        \n                                                                    SimulationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            execute\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        execute()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:180\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getStatistics\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getStatistics()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:93\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pause\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        pause()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:115\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pressControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        pressControl(control: Control)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        control\n                                                        \n                                                                    Control\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            quick\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        quick()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:163\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            slow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        slow()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:148\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            start\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        start()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:103\n                            \n                        \n\n\n                \n                    \n                            Starts simulation.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            step\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        step()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:141\n                            \n                        \n\n\n                \n                    \n                            Performs one step.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stop\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        stop()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:121\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateSimulatedTimePeriod\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateSimulatedTimePeriod()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:195\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            endSimulation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        endSimulation:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            interval\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        interval:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:36\n                            \n                        \n\n                \n                    \n                        Simulation timer.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            processingTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        processingTime:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:41\n                            \n                        \n\n                \n                    \n                        PropagateFlow processing time (ms).\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            simulatedTimeInterval\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        simulatedTimeInterval:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:31\n                            \n                        \n\n                \n                    \n                        Simulated time interval.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            simulatedTimePeriod\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        simulatedTimePeriod:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:26\n                            \n                        \n\n                \n                    \n                        Simulated running time.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            totalProcessingTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        totalProcessingTime:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:43\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Observable, interval, Subscription } from \"rxjs\";\nimport { takeWhile } from \"rxjs/operators\";\n\nimport { Store, select } from '@ngrx/store';\n\nimport { SimulationService } from \"./simulation.service\";\nimport * as fromSimulation from './models/reducers';\nimport { SimulationActionTypes } from './models/actions/simulation.actions';\nimport { uiConfig } from \"../ui/ui-config\";\n\nexport enum Control {\n    start = 'start',\n    pause = 'pause',\n    stop = 'stop',\n    step = 'step',\n    slow = 'slow',\n    quick = 'quick'\n}\n\n@Injectable() export class ClockService {\n\n    /**\n     * Simulated running time.\n     */\n    private simulatedTimePeriod: number;\n\n    /**\n     * Simulated time interval.\n     */\n    private simulatedTimeInterval: number;\n\n    /**\n     * Simulation timer.\n     */\n    private interval: Observable;\n\n    /**\n     * PropagateFlow processing time (ms).\n     */\n    private processingTime: number = 0;\n\n    private totalProcessingTime: number = 0;\n\n    private endSimulation: boolean = false;\n\n    private subscription: Subscription;\n\n    constructor(\n        private store: Store,\n        private simulation: SimulationService\n    ) {\n        this.store.pipe(select(fromSimulation.end)).subscribe((end: boolean) => {\n            this.endSimulation = end;\n        });\n        this.simulatedTimePeriod = 0;\n        this.simulatedTimeInterval = uiConfig.simulatedTimeInterval;\n    }\n\n    public reset(): void {\n        this.simulatedTimePeriod = 0;\n        this.simulatedTimeInterval = uiConfig.simulatedTimeInterval;\n        this.interval = null;\n        this.processingTime = 0;\n        this.totalProcessingTime = 0;\n        this.endSimulation = false;\n        this.subscription = null;\n    }\n\n    public pressControl(control: Control): void {\n        switch (control) {\n            case Control.start:\n                this.start();\n                break;\n            case Control.pause:\n                this.pause();\n                break;\n            case Control.stop:\n                this.stop();\n                break;\n            case Control.step:\n                this.step();\n                break;\n            case Control.slow:\n                this.slow();\n                break;\n            case Control.quick:\n                this.quick();\n                break;\n        }\n    }\n\n    public getStatistics(): any {\n        return {\n            totalSimulatedTime: this.simulatedTimePeriod,\n            totalProcessingTime: this.totalProcessingTime\n        };\n    }\n\n    /**\n     * Starts simulation.\n     */\n    private start(): void {\n        if (!this.subscription || this.subscription.closed) {\n            // Sets interval.\n            this.interval = interval(this.simulatedTimeInterval);\n            this.subscription = this.interval.pipe(\n                takeWhile(() => !this.endSimulation)\n            ).subscribe(() => {\n                this.execute();\n            });\n        }\n    }\n\n    private pause(): void {\n        if (this.subscription && !this.subscription.closed) {\n            this.subscription.unsubscribe();\n        }\n    }\n\n    private stop(): void {\n        if (this.subscription && !this.subscription.closed) {\n            this.subscription.unsubscribe();\n        }\n        this.simulation.resetFlows();\n        this.reset();\n        // Updates simulation state.\n        this.store.dispatch({\n            type: SimulationActionTypes.PeriodsChanged,\n            payload: { simulatedTimeInterval: this.simulatedTimeInterval, simulatedTimePeriod: this.simulatedTimePeriod }\n        });\n        this.store.dispatch({\n            type: SimulationActionTypes.SimulationEnded,\n            payload: false\n        });\n    }\n\n    /**\n     * Performs one step.\n     */\n    private step(): void {\n        if (this.subscription && !this.subscription.closed) {\n            this.subscription.unsubscribe();\n        }\n        this.execute();\n    }\n\n    private slow(): void {\n        if (this.subscription && !this.subscription.closed) {\n            this.subscription.unsubscribe();\n            this.simulatedTimeInterval += uiConfig.timeIntervalIncrement;\n            this.start();\n        } else {\n            this.simulatedTimeInterval += uiConfig.timeIntervalIncrement;\n        }\n        // Updates simulation state.\n        this.store.dispatch({\n            type: SimulationActionTypes.PeriodsChanged,\n            payload: { simulatedTimeInterval: this.simulatedTimeInterval, simulatedTimePeriod: this.simulatedTimePeriod }\n        });\n    }\n\n    private quick(): void {\n        if (this.simulatedTimeInterval - uiConfig.timeIntervalDecrement > this.processingTime) {\n            if (this.subscription && !this.subscription.closed) {\n                this.subscription.unsubscribe();\n                this.simulatedTimeInterval -= uiConfig.timeIntervalDecrement;\n                this.start();\n            } else {\n                this.simulatedTimeInterval -= uiConfig.timeIntervalDecrement;\n            }\n            // Updates simulation state.\n            this.store.dispatch({\n                type: SimulationActionTypes.PeriodsChanged,\n                payload: { simulatedTimeInterval: this.simulatedTimeInterval, simulatedTimePeriod: this.simulatedTimePeriod }\n            });\n        }\n    }\n\n    private execute(): void {\n        const startTime = Date.now();\n        this.simulation.propagateFlows();\n        const endTime = Date.now();\n        // Updates processing time.\n        this.processingTime = endTime - startTime;\n        this.totalProcessingTime += this.processingTime;\n        this.updateSimulatedTimePeriod();\n        // Updates simulation state.\n        this.store.dispatch({\n            type: SimulationActionTypes.PeriodsChanged,\n            payload: { simulatedTimeInterval: this.simulatedTimeInterval, simulatedTimePeriod: this.simulatedTimePeriod }\n        });\n    }\n\n    private updateSimulatedTimePeriod(): void {\n        this.simulatedTimePeriod += this.simulatedTimeInterval;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Counts.html":{"url":"interfaces/Counts.html","title":"interface - Counts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Counts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/models/simulation-state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        arrivedVehicles\n                                \n                                \n                                        startedVehicles\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        arrivedVehicles\n                                    \n                                \n                                \n                                    \n                                        arrivedVehicles:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startedVehicles\n                                    \n                                \n                                \n                                    \n                                        startedVehicles:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface NumericalSimulation {\n\n    edge: string;\n    wayName: string;\n    trafficVolume: number;\n    trafficCount: number;\n    delay: number | string;\n    stops: number;\n\n}\n\nexport interface Counts {\n\n    startedVehicles: number;\n    arrivedVehicles: number;\n\n}\n\nexport interface Simulation {\n\n    /**\n     * Simulation data.\n     */\n    data: NumericalSimulation[];\n    /**\n     * Simulation counts.\n     */\n    counts: Counts;\n    /**\n     * Simulation avg. speed.\n     */\n    speed: number;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DemandModule.html":{"url":"modules/DemandModule.html","title":"module - DemandModule","body":"\n                   \n\n\n\n\n  Modules\n  DemandModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DemandModule\n\n\n\ncluster_DemandModule_providers\n\n\n\n\nDemandService\n\nDemandService\n\n\n\nDemandModule\n\nDemandModule\n\nDemandModule -->\n\nDemandService->DemandModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/demand/demand.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     DemandService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { DemandService } from './demand.service';\n\n@NgModule({\n    imports: [],\n    declarations: [],\n    providers: [DemandService]\n})\nexport class DemandModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DemandService.html":{"url":"injectables/DemandService.html","title":"injectable - DemandService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  DemandService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/demand/demand.service.ts\n        \n\n            \n                Description\n            \n            \n                Estimates the O/D matrix of the traffic demand.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                odMatrix\n                            \n                            \n                                    Private\n                                startingTimes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                argmin\n                            \n                            \n                                    Public\n                                calcOdMatrix\n                            \n                            \n                                    Public\n                                changeDemand\n                            \n                            \n                                    Public\n                                changeStartingTimes\n                            \n                            \n                                    Private\n                                estimate\n                            \n                            \n                                    Public\n                                getOdMatrix\n                            \n                            \n                                    Public\n                                getStartingTimes\n                            \n                            \n                                    Public\n                                gls\n                            \n                            \n                                    Private\n                                isOnPath\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Private\n                                sum\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(network: NetworkService)\n                    \n                \n                        \n                            \n                                Defined in src/app/demand/demand.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            argmin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        argmin(linkFlows: LinkFlow[], odMatrixAssignment: number[][])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:85\n                            \n                        \n\n\n                \n                    \n                            Argument of the minimum function.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        linkFlows\n                                                        \n                                                                    LinkFlow[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The link flows\n\n                                                        \n                                                \n                                                \n                                                        odMatrixAssignment\n                                                        \n                                                                    number[][]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Assignment matrix of the O/D pair\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            calcOdMatrix\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        calcOdMatrix()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:33\n                            \n                        \n\n\n                \n                    \n                            Calculates O/D matrix.\n\n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            changeDemand\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        changeDemand(demand: number[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        demand\n                                                        \n                                                                    number[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            changeStartingTimes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        changeStartingTimes(startingTimes: number[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        startingTimes\n                                                        \n                                                                    number[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            estimate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        estimate(linkFlows: LinkFlow[], odMatrixAssignment: number[][], x: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:104\n                            \n                        \n\n\n                \n                    \n                            Estimates the sum for the unknown demand.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        linkFlows\n                                                        \n                                                                    LinkFlow[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The link flows\n\n                                                        \n                                                \n                                                \n                                                        odMatrixAssignment\n                                                        \n                                                                    number[][]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Assignment matrix of the O/D pair\n\n                                                        \n                                                \n                                                \n                                                        x\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The unknown demand\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getOdMatrix\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getOdMatrix()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     number[]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getStartingTimes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getStartingTimes()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     number[]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gls\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        gls(linkFlows: LinkFlow[], assignmentMatrix: [][][])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:71\n                            \n                        \n\n\n                \n                    \n                            Generalized Least Squares (GLS).\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        linkFlows\n                                                        \n                                                                    LinkFlow[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The link flows\n\n                                                        \n                                                \n                                                \n                                                        assignmentMatrix\n                                                        \n                                                                    [][][]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Assignment matrix [pairs,paths,edges]\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number[]\n\n                            \n                                \n                                    The array of the demand\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isOnPath\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isOnPath(odMatrixAssignment: number[][], i: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:136\n                            \n                        \n\n\n                \n                    \n                            Checks that the edge belongs to one of the paths of the O/D pair.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        odMatrixAssignment\n                                                        \n                                                                    number[][]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Assignment matrix of the O/D pair\n\n                                                        \n                                                \n                                                \n                                                        i\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The index of the edge\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sum\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sum(odMatrixAssignment: number[][], i: number, x: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:121\n                            \n                        \n\n\n                \n                    \n                            Sums the unknown demand probability for each path.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        odMatrixAssignment\n                                                        \n                                                                    number[][]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Assignment matrix of the O/D pair\n\n                                                        \n                                                \n                                                \n                                                        i\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The index of the edge\n\n                                                        \n                                                \n                                                \n                                                        x\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The unknown demand\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            odMatrix\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        odMatrix:     number[]\n\n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:17\n                            \n                        \n\n                \n                    \n                        The array of the demand.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            startingTimes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        startingTimes:     number[]\n\n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:22\n                            \n                        \n\n                \n                    \n                        Starting time in seconds for each O/D pair.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\nimport { NetworkService } from '../network/network.service';\nimport { LinkFlow } from '../network/graph';\nimport { round } from '../utils';\nimport { uiConfig } from '../ui/ui-config';\n\n/**\n * Estimates the O/D matrix of the traffic demand.\n */\n@Injectable() export class DemandService {\n\n    /**\n     * The array of the demand.\n     */\n    private odMatrix: number[] = [];\n\n    /**\n     * Starting time in seconds for each O/D pair.\n     */\n    private startingTimes: number[] = [];\n\n    constructor(private network: NetworkService) { }\n\n    public reset(): void {\n        this.odMatrix = [];\n    }\n\n    /**\n     * Calculates O/D matrix.\n     */\n    public calcOdMatrix(): Observable {\n        // Gets link flows from network.\n        const linkFlows = this.network.getLinkFlows();\n        // Gets assignment matrix from network.\n        const assignmentMatrix = this.network.getAssignmentMatrix();\n        // Calculates demand.\n        this.odMatrix = this.gls(linkFlows, assignmentMatrix);\n        // Initializes starting times.\n        this.startingTimes = Array(this.odMatrix.length).fill(0);\n        return of(null);\n    }\n\n    public getOdMatrix(): number[] {\n        return this.odMatrix;\n    }\n\n    public changeDemand(demand: number[]): void {\n        if (demand.length > 0) {\n            this.odMatrix = demand;\n        }\n    }\n\n    public getStartingTimes(): number[] {\n        return this.startingTimes;\n    }\n\n    public changeStartingTimes(startingTimes: number[]): void {\n        if (startingTimes.length > 0) {\n            this.startingTimes = startingTimes;\n        }\n    }\n\n    /**\n     * Generalized Least Squares (GLS).\n     * @param linkFlows The link flows\n     * @param assignmentMatrix Assignment matrix [pairs,paths,edges]\n     * @returns The array of the demand\n     */\n    public gls(linkFlows: LinkFlow[], assignmentMatrix: number[][][]): number[] {\n        const demand: number[] = [];\n        // Calculates argument of the minimum for each O/D pair.\n        for (let z = 0; z  0 ? this.argmin(linkFlows, assignmentMatrix[z]) : null;\n        }\n        return demand;\n    }\n\n    /**\n     * Argument of the minimum function.\n     * @param linkFlows The link flows\n     * @param odMatrixAssignment Assignment matrix of the O/D pair\n     */\n    private argmin(linkFlows: LinkFlow[], odMatrixAssignment: number[][]): number {\n        const estimations: number[] = [];\n        // The unknown demand.\n        let x = 0;\n        estimations[x] = this.estimate(linkFlows, odMatrixAssignment, x);\n        if (estimations[x] == 0) { return 0; }\n        do {\n            x++;\n            estimations[x] = this.estimate(linkFlows, odMatrixAssignment, x);\n        } while (estimations[x]  0 && this.isOnPath(odMatrixAssignment, i)) {\n                const base = linkFlows[i].value - this.sum(odMatrixAssignment, i, x);\n                sum += Math.pow(base, 2) / linkFlows[i].variance;\n            }\n        }\n        return round(sum, 2);\n    }\n\n    /**\n     * Sums the unknown demand probability for each path.\n     * @param odMatrixAssignment Assignment matrix of the O/D pair\n     * @param i The index of the edge\n     * @param x The unknown demand\n     */\n    private sum(odMatrixAssignment: number[][], i: number, x: number): number {\n        let sum = 0;\n        for (let n = 0; n  0) {\n                sum += odMatrixAssignment[n][i] * x;\n            }\n        }\n        return round(sum, 2);\n    }\n\n    /**\n     * Checks that the edge belongs to one of the paths of the O/D pair.\n     * @param odMatrixAssignment Assignment matrix of the O/D pair\n     * @param i The index of the edge\n     */\n    private isOnPath(odMatrixAssignment: number[][], i: number): boolean {\n        for (let n = 0; n  0) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Edge.html":{"url":"classes/Edge.html","title":"class - Edge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Edge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                Link between two nodes.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                density\n                            \n                            \n                                    Public\n                                destination\n                            \n                            \n                                    Public\n                                distance\n                            \n                            \n                                    Public\n                                drawingOptions\n                            \n                            \n                                    Public\n                                duration\n                            \n                            \n                                    Public\n                                durationInTraffic\n                            \n                            \n                                    Public\n                                edgeId\n                            \n                            \n                                    Public\n                                flow\n                            \n                            \n                                    Public\n                                freeFlowVelocity\n                            \n                            \n                                    Public\n                                label\n                            \n                            \n                                    Public\n                                linkFlow\n                            \n                            \n                                    Public\n                                maxFlow\n                            \n                            \n                                    Public\n                                origin\n                            \n                            \n                                    Public\n                                tags\n                            \n                            \n                                    Public\n                                velocity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                calcLinkFlow\n                            \n                            \n                                    Public\n                                calcMaxFlow\n                            \n                            \n                                    Protected\n                                draw\n                            \n                            \n                                    Protected\n                                getCapacity\n                            \n                            \n                                    Public\n                                getKjam\n                            \n                            \n                                    Public\n                                getVariance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(edgeId: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/graph.ts:151\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edgeId\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            density\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        density:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:132\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            destination\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        destination:     Node\n\n                    \n                \n                    \n                        \n                            Type :     Node\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:103\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            distance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        distance:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:110\n                            \n                        \n\n                \n                    \n                        Indicates the distance in meters.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            drawingOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        drawingOptions:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:146\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            duration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        duration:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:115\n                            \n                        \n\n                \n                    \n                        Indicates the duration in seconds.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            durationInTraffic\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        durationInTraffic:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:120\n                            \n                        \n\n                \n                    \n                        Indicates the total duration of the edge, taking into account current traffic conditions.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            edgeId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        edgeId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:97\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            flow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        flow:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:134\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            freeFlowVelocity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        freeFlowVelocity:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:125\n                            \n                        \n\n                \n                    \n                        Free flow speed (m/s).\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            label\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        label:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:99\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            linkFlow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        linkFlow:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:139\n                            \n                        \n\n                \n                    \n                        Number of vehicles calculated from traffic data.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            maxFlow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maxFlow:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:144\n                            \n                        \n\n                \n                    \n                        Maximum flow of the link.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            origin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        origin:     Node\n\n                    \n                \n                    \n                        \n                            Type :     Node\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:101\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tags:     Tag[]\n\n                    \n                \n                    \n                        \n                            Type :     Tag[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:105\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            velocity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        velocity:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:130\n                            \n                        \n\n                \n                    \n                        Instant speed (m/s).\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            calcLinkFlow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        calcLinkFlow()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:160\n                            \n                        \n\n\n                \n                    \n                            Calculates the value of the link flow.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            calcMaxFlow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        calcMaxFlow(factor: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:191\n                            \n                        \n\n\n                \n                    \n                            Calculates the max flow of the edge.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        factor\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Weather Adjustment Factor\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            draw\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        draw(color: string, zIndex: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:211\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        color\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        zIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                10\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            getCapacity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getCapacity(timeInterval: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:207\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timeInterval\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getKjam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getKjam()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:203\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getVariance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getVariance()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:199\n                            \n                        \n\n\n                \n                    \n                            Gets the variance of measurement error of link flow.\n\n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\n\nimport * as combine from 'mout/array/combine';\n\nimport { Heap, Path } from './k-shortest-path';\nimport { round } from '../utils';\nimport { environment } from '../../environments/environment';\nimport { uiConfig } from '../ui/ui-config';\n\nexport enum PathType {\n    distance = 'distance',\n    duration = 'duration'\n}\n\n/**\n * An O/D pair is described by the origin and destination nodes, and the type of path.\n */\nexport interface OdPair {\n\n    origin: string;\n    destination: string;\n    pathType: PathType;\n\n}\n\nexport interface LinkFlow {\n\n    /**\n     * linkFlow attribute.\n     */\n    value: number;\n    /**\n     * Variance is the inverse of density.\n     */\n    variance: number;\n\n}\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public label: string;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    public drawingOptions: { marker?: google.maps.Marker } = {};\n\n    /**\n     * Used by the k shortest path routing.\n     */\n    public count: number = 0;\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public label: string;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    /**\n     * Free flow speed (m/s).\n     */\n    public freeFlowVelocity: number;\n\n    /**\n     * Instant speed (m/s).\n     */\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    /**\n     * Number of vehicles calculated from traffic data.\n     */\n    public linkFlow: number;\n\n    /**\n     * Maximum flow of the link.\n     */\n    public maxFlow: number;\n\n    public drawingOptions: {\n        path?: google.maps.LatLng[],\n        polyline?: google.maps.Polyline,\n        marker?: google.maps.Marker,\n        infowindow?: google.maps.InfoWindow\n    } = {};\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the link flow.\n     */\n    public calcLinkFlow(): void {\n        // Min distance is 1 meter.\n        if (this.distance == 0) { this.distance = 1; }\n        // Min duration is 1 second.\n        if (this.duration == 0) {\n            this.duration = round(this.distance / (50 / 3.6)) > 1 ? round(this.distance / (50 / 3.6)) : 1;\n        }\n        // Calculates free flow velocity (m/s).\n        this.freeFlowVelocity = round(this.distance / this.duration, 2);\n        // Calculates link flow.\n        if (this.durationInTraffic > 0 && this.durationInTraffic >= this.duration) {\n            // Calculates velocity (m/s).\n            this.velocity = round(this.distance / this.durationInTraffic, 2);\n            // Calculates density.\n            this.density = round(this.getKjam() * (this.freeFlowVelocity - this.velocity) / this.freeFlowVelocity, 2);\n            // Calculates flow.\n            this.flow = round(this.density * this.velocity, 2);\n            // Calculates link flow.\n            this.linkFlow = round(this.density * this.distance);\n        } else {\n            this.velocity = 0;\n            this.density = 0;\n            this.flow = 0;\n            this.linkFlow = 0;\n        }\n    }\n\n    /**\n     * Calculates the max flow of the edge.\n     * @param factor Weather Adjustment Factor\n     */\n    public calcMaxFlow(factor: number): void {\n        const maxFlow = this.getKjam() * this.freeFlowVelocity;\n        this.maxFlow = round(maxFlow * factor, 2);\n    }\n\n    /**\n     * Gets the variance of measurement error of link flow.\n     */\n    public getVariance(): number {\n        return this.density > 0 ? round(1 / this.density, 2) : 1;\n    }\n\n    public getKjam(): number {\n        return round(1 / uiConfig.sp, 2);\n    }\n\n    protected getCapacity(timeInterval: number): number {\n        return this.maxFlow * timeInterval;\n    }\n\n    protected draw(color: string, zIndex: number = 10): void {\n        this.drawingOptions.polyline.set('strokeColor', color);\n        this.drawingOptions.polyline.set('zIndex', zIndex);\n        this.drawingOptions.marker.set('visible', true);\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    protected nodes: Node[] = [];\n\n    protected edges: Edge[] = [];\n\n    protected relations: Relation[] = [];\n\n    /**\n     * Paths for each O/D pair [pairs,paths,edges].\n     */\n    protected shortestPaths: Edge[][][] = [];\n\n    protected incidenceMatrix: boolean[][][] = [];\n\n    protected assignmentMatrix: number[][][] = [];\n\n    private heap: Heap;\n\n    /**\n     * Shortest paths drawing options.\n     */\n    private drawingOptions: {\n        polylines?: google.maps.Polyline[][];\n    } = {};\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public getEdge(edgeId: number): Edge {\n        return this.edges.find((edge: Edge) => edge.edgeId == edgeId);\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Key:oneway\n     * @param edgeId Id of the edge\n     */\n    public isOneway(edgeId: number): boolean {\n        return !!this.getEdge(edgeId).tags.find(tag => tag.key == 'oneway' && tag.value != 'no') ||\n            this.isRoundabout(edgeId);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Tag:junction%3Droundabout\n     * @param edgeId Id of the edge\n     */\n    public isRoundabout(edgeId: number): boolean {\n        return this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'roundabout') ||\n            this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'circular') ?\n            true : false;\n    }\n\n    public getOdNode(label: string): Node {\n        return this.nodes.find((node: Node) => node.label == label);\n    }\n\n    public getOdNodes(): Node[] {\n        return this.nodes.filter((node: Node) => node.label);\n    }\n\n    /**\n     * Calculates the set of minimum paths.\n     * @param odPairs The O/D pairs\n     */\n    public calcShortestPaths(odPairs: OdPair[]): Observable {\n        try {\n            for (let i = 0; i  edge.label);\n    }\n\n    /**\n     * Calculates the incidence matrix of paths for O/D pairs.\n     */\n    public calcIncidenceMatrix(): Observable {\n        const edges = this.getPathsEdges();\n        for (let z = 0; z  value.edgeId == edges[m].edgeId)) {\n                        // The path crosses the edge.\n                        this.incidenceMatrix[z][n][m] = true;\n                    } else {\n                        // The path does not cross the edge.\n                        this.incidenceMatrix[z][n][m] = false;\n                    }\n                }\n            }\n        }\n        return of(null);\n    }\n\n    public getIncidenceMatrix(): boolean[][][] {\n        return this.incidenceMatrix;\n    }\n\n    /**\n     * Calculates the assignment matrix.\n     * @param odPairs The O/D pairs\n     */\n    public calcAssignmentMatrix(odPairs: OdPair[]): Observable {\n        // Calculates the probabilities of shortest paths.\n        const shortestPathsProbabilities = this.calcShortestPathsProbabilities(odPairs);\n\n        // Assignment matrix.\n        for (let z = 0; z  {\n        const edges = this.getPathsEdges();\n        for (const edge of edges) {\n            edge.calcMaxFlow(factor);\n        }\n        return of(null);\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link distance or duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param o Source node\n     * @param d Destination node\n     * @param pathType Distance or duration\n     * @param k The number of shortest paths to compute\n     * @returns The set of shortest paths\n     */\n    private ksp(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Sets to zero the count property of the nodes.\n        this.resetCount();\n        // Instantiates the heap.\n        this.heap = new Heap();\n        // Inserts the path of origin into heap with cost 0.\n        this.heap.push({ pathId: 0, node: o, edges: [], cost: 0 });\n        // Walks the graph.\n        return this.walk(o, d, pathType, k);\n    }\n\n    /**\n     * Breadth First Search (BFS) algorithm for traversing and searching tree data\n     * explores the neighbor nodes first, before moving to the next level neighbors.\n     */\n    private walk(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Set of shortest paths from origin to destination.\n        const shortestPaths: Path[] = [];\n\n        let pathId = 1;\n        let node: Node;\n        while (this.heap.getPaths().length > 0 && d.count  edge.origin.nodeId == node.nodeId) ? false : true;\n    }\n\n    private resetCount(): void {\n        for (const node of this.nodes) {\n            node.count = 0;\n        }\n    }\n\n    /**\n     * Removes the alternative paths that differ only for two links.\n     * @param shortestPaths The shortest paths as created by the algorithm\n     */\n    private filterPaths(shortestPaths: Path[]): void {\n        if (shortestPaths.length > 1) {\n            let i = 0;\n            do {\n                const pathA = shortestPaths[i].edges;\n                const pathB = shortestPaths[i + 1].edges;\n                const sharedEdges = pathA.filter((edgeOfA: Edge) =>\n                    pathB.find((edgeOfB: Edge) =>\n                        edgeOfB.edgeId == edgeOfA.edgeId));\n                if (pathA.length - sharedEdges.length  value.edgeId == edge.edgeId)) {\n                        edges.push(edge);\n                        edge.label = 'E' + count++;\n                        if (!environment.testing) {\n                            edge.drawingOptions.infowindow.setContent('Edge: ' + edge.label);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Multinomial logit model.\n     * @param odPairs The O/D pairs\n     */\n    private calcShortestPathsProbabilities(odPairs: OdPair[]): number[][] {\n        // Gets the total cost of paths.\n        const pathCosts = this.calcPathCosts(odPairs);\n        const shortestPathsProbabilities: number[][] = [];\n        // Theta parameter adjustment.\n        const parameter = uiConfig.theta * 100;\n        // Calculates numerator.\n        const exps: number[][] = [];\n        for (let z = 0; z  {\n                return value > 0 ? Math.exp(-value / parameter) : 0;\n            });\n        }\n        // Calculates denominator.\n        const sumExps: number[] = [];\n        for (let z = 0; z  a + b, 0);\n            sumExps.push(sum);\n        }\n        // Probabilities.\n        for (let z = 0; z  0 ? round(exps[z][n] / sumExps[z], 3) : 0;\n                shortestPathsProbabilities[z].push(p);\n            }\n        }\n        return shortestPathsProbabilities;\n    }\n\n    private calcPathCosts(odPairs: OdPair[]): number[][] {\n        const pathCosts: number[][] = [];\n        for (let z = 0; z \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnumValues.html":{"url":"classes/EnumValues.html","title":"class - EnumValues","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnumValues\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/utils.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getNames\n                            \n                            \n                                    Static\n                                getValues\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getNames\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getNames(e: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/utils.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getValues\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getValues(e: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/utils.ts:9\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     T[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export type EnumValueType = string | number;\n\nexport class EnumValues {\n\n    public static getNames(e: any): string[] {\n        return Object.keys(e).filter((key: string) => isNaN(+key));\n    }\n\n    public static getValues(e: any): T[] {\n        return this.getNames(e).map((name: string) => e[name]) as T[];\n    }\n\n}\n\nexport function toSeconds(value: number): number {\n    return value / 1000;\n}\n\n/**\n * Format time to M:SS\n * @param s Seconds\n * @returns M:SS\n */\nexport function formatTimeFromSeconds(s: number): string {\n    return Math.floor(s / 60) + ':' + ('0' + Math.floor(s % 60)).slice(-2);\n}\n\n/**\n * Format time to M:SS.mmm\n * @param ms Milliseconds\n * @returns M:SS.mmm\n */\nexport function formatTimeFromMilliseconds(ms: number): string {\n    return Math.floor(ms / 1000 / 60) + ':' +\n        ('0' + Math.floor((ms / 1000) % 60)).slice(-2) + '.' +\n        ('00' + (ms - Math.floor(ms / 1000) * 1000)).slice(-3);\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EstimateOfDemandComponent.html":{"url":"components/EstimateOfDemandComponent.html","title":"component - EstimateOfDemandComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EstimateOfDemandComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-estimate-of-demand\n            \n\n            \n                styleUrls\n                estimate-of-demand.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./estimate-of-demand.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pathTypes\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addDestination\n                            \n                            \n                                addOrigin\n                            \n                            \n                                deleteOdPair\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                updateOdPairs\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, wizard: WizardService, network: NetworkService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addDestination\n                            \n                            \n                        \n                    \n                \n                \n                    \naddDestination(control: FormArray, origin: string, destination: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:150\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        control\n                                                        \n                                                                    FormArray\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        origin\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        destination\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addOrigin\n                            \n                            \n                        \n                    \n                \n                \n                    \naddOrigin(control: FormArray, origin: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:142\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        control\n                                                        \n                                                                    FormArray\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        origin\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteOdPair\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteOdPair(i: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:85\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        i\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateOdPairs\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateOdPairs(node: Node)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:93\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                                    Node\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pathTypes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pathTypes:     PathType[]\n\n                    \n                \n                    \n                        \n                            Type :     PathType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        odPairs\n                    \n                \n\n                \n                    \n                        getodPairs()\n                    \n                \n                            \n                                \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:29\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, FormArray } from '@angular/forms';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { WizardService } from '../wizard.service';\nimport { NetworkService } from '../../../network/network.service';\nimport * as fromUi from '../../models/reducers';\nimport { Map } from '../../models/ui-state';\nimport { PathType, OdPair, Node } from '../../../network/graph';\nimport { EnumValues } from '../../utils';\nimport { uiConfig } from '../../ui-config';\n\nimport { BaseComponent } from '../../models/base.component';\n\n@Component({\n    selector: 'wizard-estimate-of-demand',\n    templateUrl: './estimate-of-demand.component.html',\n    styleUrls: ['./estimate-of-demand.component.scss']\n})\nexport class EstimateOfDemandComponent extends BaseComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    pathTypes: PathType[];\n\n    get odPairs(): FormArray {\n        return this.formGroup.get('odPairs') as FormArray;\n    }\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private store: Store,\n        private wizard: WizardService,\n        private network: NetworkService\n    ) {\n        super();\n\n        this.pathTypes = EnumValues.getValues(PathType);\n    }\n\n    ngOnInit(): void {\n        this.valueChanges();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        // Updates network service data on value changes.\n        this.subscriptions.push(this.formGroup.get('odPairs').valueChanges.subscribe(\n            (odPairs: OdPair[]) => {\n                this.network.setOdPairs(odPairs);\n            }\n        ));\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.currentStep)).subscribe((currentStep: number) => {\n            switch (currentStep) {\n                case 0:\n                    // Resets control.\n                    const control = this.formGroup.get('odPairs') as FormArray;\n                    if (control.length > 0) {\n                        for (let i = control.length - 1; i >= 0; i--) {\n                            control.removeAt(i);\n                        }\n                    }\n                    break;\n            }\n        }));\n        this.subscriptions.push(this.store.pipe(select(fromUi.map)).subscribe((map: Map) => {\n            if (map && map.data.selectedNode) {\n                this.updateOdPairs(map.data.selectedNode);\n\n            }\n        }));\n    }\n\n    sendActions(): void {\n        //\n    }\n\n    deleteOdPair(i: number): void {\n        // Updates control.\n        const control = this.formGroup.get('odPairs') as FormArray;\n        control.removeAt(i);\n        // Updates step state.\n        this.wizard.updateStep(this.formGroup.value, this.index);\n    }\n\n    updateOdPairs(node: Node): void {\n        const control = this.formGroup.get('odPairs') as FormArray;\n        const odPairs = control.value;\n\n        let error = null;\n\n        if (odPairs.length > 0) {\n            const odPair = odPairs[odPairs.length - 1];\n            // Checks limit.\n            if (odPairs.length == uiConfig.maxOdPairs && odPairs[uiConfig.maxOdPairs - 1].destination) {\n                error = `The maximum number of O/D pairs is ${uiConfig.maxOdPairs}`;\n                // Checks if valid node.\n            } else if (odPair.destination == null && node.incomingEdges.length == 0) {\n                error = `The node cannot be a destination`;\n            } else if (odPair.destination && node.outgoingEdges.length == 0) {\n                error = `The node cannot be an origin`;\n                // Checks if last O/D pair is completed.\n            } else if (odPair.destination) {\n                // Adds origin.\n                this.addOrigin(control, node.label);\n                // Checks if same node.\n            } else if (odPair.origin == node.label) {\n                error = `The origin and destination nodes cannot be the same`;\n            } else {\n                // Checks if the pair is valid.\n                if (odPairs.filter(pair => pair.origin == odPair.origin && pair.destination == node.label).length > 0) {\n                    error = `O/D pair already selected`;\n                } else {\n                    // Adds destination.\n                    this.addDestination(control, odPair.origin, node.label);\n                }\n            }\n        } else {\n            if (node.outgoingEdges.length == 0) {\n                error = `The node cannot be an origin`;\n            } else {\n                // Adds origin.\n                this.addOrigin(control, node.label);\n            }\n        }\n\n        if (error) {\n            this.wizard.putInError(error);\n        } else {\n            // Updates step state.\n            this.wizard.updateStep({ odPairs: control.value }, 2);\n        }\n    }\n\n    addOrigin(control: FormArray, origin: string): void {\n        control.push(this.formBuilder.group({\n            origin: origin,\n            destination: null,\n            pathType: null\n        }));\n    }\n\n    addDestination(control: FormArray, origin: string, destination: string): void {\n        control.get([control.length - 1]).patchValue({\n            origin: origin,\n            destination: destination,\n            pathType: PathType.distance\n        });\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                O\n                D\n                Path\n                \n            \n            \n                \n                    {{ pair.value.origin }}\n                \n                \n                    {{ pair.value.destination }}\n                \n                \n                    \n                        \n                            {{ path }}\n                        \n                    \n                \n                \n                    \n                        delete\n                    \n                \n            \n        \n    \n\n    \n        Continue\n            navigate_next\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        O                D                Path                                                                            {{ pair.value.origin }}                                                    {{ pair.value.destination }}                                                                                                        {{ path }}                                                                                                                        delete                                                                        Continue            navigate_next            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EstimateOfDemandComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/footer/footer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentYear\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/footer/footer.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentYear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentYear:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : new Date().getFullYear()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/footer/footer.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-footer',\n    templateUrl: './footer.component.html',\n    styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n    currentYear: number = new Date().getFullYear();\n\n    ngOnInit(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n        \n            \n                \n                    \n                        Privacy\n                    \n                \n                \n                    \n                        Terms of service\n                    \n                \n            \n        \n    \n\n    \n\n    \n        \n            Copyright&nbsp;©&nbsp;{{ currentYear }} Roberto&nbsp;Simonetti - MIT license\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                Privacy                                                                                                Terms of service                                                                                        Copyright © {{ currentYear }} Roberto Simonetti - MIT license            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GoOn.html":{"url":"classes/GoOn.html","title":"class - GoOn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  GoOn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/actions/wizard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/models/actions/wizard.actions.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : WizardActionTypes.GoOn\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Step } from '../ui-state';\n\n/**\n * ngrx: wizard Actions.\n */\nexport enum WizardActionTypes {\n\n    StepChanged = '[Wizard] Step Changed',\n    StepError = '[Wizard] Step Error',\n    StepPending = '[Wizard] Step Pending',\n    GoOn = '[Wizard] Go On',\n    Reset = '[Wizard] Reset'\n\n}\n\nexport class StepChanged implements Action {\n\n    public readonly type: string = WizardActionTypes.StepChanged;\n\n    constructor(public payload: { step: Step, index: number }) { }\n\n}\n\nexport class StepError implements Action {\n\n    public readonly type: string = WizardActionTypes.StepError;\n\n    constructor(public payload: string) { }\n\n}\n\nexport class StepPending implements Action {\n\n    public readonly type: string = WizardActionTypes.StepPending;\n\n    constructor(public payload: string | boolean) { }\n\n}\n\nexport class GoOn implements Action {\n\n    public readonly type: string = WizardActionTypes.GoOn;\n\n    constructor(public payload: { step: Step, index: number, nextIndex: number }) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = WizardActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type WizardActions = StepChanged | StepError | StepPending | GoOn | Reset;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GoogleMapComponent.html":{"url":"components/GoogleMapComponent.html","title":"component - GoogleMapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GoogleMapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/map/google-map.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                google-map\n            \n\n\n\n            \n                template\n                \n\n\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                map\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createMap\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                center\n                            \n                            \n                                disableDefaultUI\n                            \n                            \n                                disableDoubleClickZoom\n                            \n                            \n                                gestureHandling\n                            \n                            \n                                mapTypeId\n                            \n                            \n                                maxZoom\n                            \n                            \n                                minZoom\n                            \n                            \n                                styles\n                            \n                            \n                                zoom\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(map: MapService, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/map/google-map.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                    MapService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        center\n                    \n                    \n                        Center map. Required.\n\n                            \n                            Type:    google.maps.LatLngLiteral\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableDefaultUI\n                    \n                    \n                        Enables/disables all default UI.\n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableDoubleClickZoom\n                    \n                    \n                        Enables/disables zoom and center on double click. Enabled by default.\n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        gestureHandling\n                    \n                    \n                        This setting controls how gestures on the map are handled.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapTypeId\n                    \n                    \n                        The initial map mapTypeId. Defaults to ROADMAP.\n\n                            \n                            Type:    google.maps.MapTypeId\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxZoom\n                    \n                    \n                        The maximum zoom level which will be displayed on the map.\n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minZoom\n                    \n                    \n                        The minimum zoom level which will be displayed on the map.\n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        styles\n                    \n                    \n                        Styles to apply to each of the default map types.\n\n                            \n                            Type:    google.maps.MapTypeStyle[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zoom\n                    \n                    \n                        The initial map zoom level. Required.\n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createMap(el: HTMLElement)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                        \n                                                                    HTMLElement\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:66\n                            \n                        \n\n\n                \n                    \n                            On changes, updates center map & zoom.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            On init, creates map.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            map\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        map:     MapService\n\n                    \n                \n                    \n                        \n                            Type :     MapService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:51\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit, OnChanges, SimpleChange, ElementRef } from '@angular/core';\n\nimport { MapService } from './/map.service';\n\n@Component({\n    selector: 'google-map',\n    template: `\n        \n        \n        `\n})\nexport class GoogleMapComponent implements OnInit, OnChanges {\n\n    /**\n     * Center map. Required.\n     */\n    @Input() center: google.maps.LatLngLiteral;\n    /**\n     * The initial map zoom level. Required.\n     */\n    @Input() zoom: number;\n    /**\n     * Enables/disables all default UI.\n     */\n    @Input() disableDefaultUI: boolean;\n    /**\n     * Enables/disables zoom and center on double click. Enabled by default.\n     */\n    @Input() disableDoubleClickZoom: boolean;\n    /**\n     * The initial map mapTypeId. Defaults to ROADMAP.\n     */\n    @Input() mapTypeId: google.maps.MapTypeId;\n    /**\n     * The maximum zoom level which will be displayed on the map.\n     */\n    @Input() maxZoom: number;\n    /**\n     * The minimum zoom level which will be displayed on the map.\n     */\n    @Input() minZoom: number;\n    /**\n     * This setting controls how gestures on the map are handled.\n     */\n    @Input() gestureHandling: string;\n    /**\n     * Styles to apply to each of the default map types.\n     */\n    @Input() styles: google.maps.MapTypeStyle[];\n\n    constructor(public map: MapService, private elementRef: ElementRef) { }\n\n    /**\n     * On init, creates map.\n     */\n    ngOnInit(): void {\n        // Gets the map element.\n        const el: HTMLElement = this.elementRef.nativeElement.querySelector('#map');\n\n        this.createMap(el);\n    }\n\n    /**\n     * On changes, updates center map & zoom.\n     */\n    ngOnChanges(changes: { [propertyName: string]: SimpleChange }): void {\n        if (changes['center']) { this.map.setCenter(this.center); }\n        if (changes['zoom']) { this.map.setZoom(this.zoom); }\n    }\n\n    private createMap(el: HTMLElement): void {\n        this.map.initMap(el, {\n            center: this.center,\n            disableDefaultUI: this.disableDefaultUI,\n            disableDoubleClickZoom: this.disableDoubleClickZoom,\n            mapTypeId: this.mapTypeId,\n            maxZoom: this.maxZoom as number,\n            minZoom: this.minZoom as number,\n            gestureHandling: this.gestureHandling as string,\n            styles: this.styles,\n            zoom: this.zoom as number\n        });\n    }\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GoogleMapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Heap.html":{"url":"classes/Heap.html","title":"class - Heap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Heap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/k-shortest-path.ts\n        \n\n            \n                Description\n            \n            \n                Heap data structure containing paths.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                paths\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getPaths\n                            \n                            \n                                    Public\n                                getShortestPath\n                            \n                            \n                                    Public\n                                pop\n                            \n                            \n                                    Public\n                                push\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            paths\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paths:     Path[]\n\n                    \n                \n                    \n                        \n                            Type :     Path[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/k-shortest-path.ts:23\n                            \n                        \n\n                \n                    \n                        The queue of paths.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getPaths\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getPaths()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/k-shortest-path.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Path[]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getShortestPath\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getShortestPath()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/k-shortest-path.ts:45\n                            \n                        \n\n\n                \n                    \n                            Returns the shortest path in the heap by cost.\n\n\n                            \n                                Returns :     Path\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pop\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        pop(pathId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/k-shortest-path.ts:37\n                            \n                        \n\n\n                \n                    \n                            Removes a path from the heap.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pathId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The id of the path\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            push\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        push(path: Path)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/k-shortest-path.ts:29\n                            \n                        \n\n\n                \n                    \n                            Inserts a path into the heap.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                        \n                                                                    Path\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The path to insert\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Edge, Node } from \"./graph\";\n\n/**\n * Path to generic node.\n */\nexport interface Path {\n\n    pathId: number;\n    node: Node;\n    edges: Edge[];\n    cost: number;\n\n}\n\n/**\n * Heap data structure containing paths.\n */\nexport class Heap {\n\n    /**\n     * The queue of paths.\n     */\n    private paths: Path[] = [];\n\n    /**\n     * Inserts a path into the heap.\n     * @param path The path to insert\n     */\n    public push(path: Path): void {\n        this.paths.push({ pathId: path.pathId, node: path.node, edges: path.edges, cost: path.cost });\n    }\n\n    /**\n     * Removes a path from the heap.\n     * @param pathId The id of the path\n     */\n    public pop(pathId: number): void {\n        const index = this.paths.findIndex((path: Path) => path.pathId == pathId);\n        this.paths.splice(index, 1);\n    }\n\n    /**\n     * Returns the shortest path in the heap by cost.\n     */\n    public getShortestPath(): Path {\n        return this.paths.reduce((prev: Path, curr: Path) => prev.cost \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home/home.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home/home.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        show:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, ElementRef } from '@angular/core';\n\nimport * as anime from 'animejs';\n\nimport { HOME_TRANSITION } from './home.transition';\n\n@Component({\n    selector: 'app-home',\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.scss'],\n    animations: [HOME_TRANSITION]\n})\nexport class HomeComponent implements OnInit, AfterViewInit {\n\n    show: boolean = false;\n\n    constructor(private elementRef: ElementRef) { }\n\n    ngOnInit(): void {\n        //\n    }\n\n    ngAfterViewInit(): void {\n        const element: HTMLElement = this.elementRef.nativeElement.querySelector('.headline .letters');\n        const text: string = element.innerText;\n        const letters: string[] = text.split('');\n\n        let wrappedText = '';\n        for (const letter of letters) {\n            wrappedText += `${letter}`;\n        }\n\n        element.innerHTML = wrappedText;\n\n        // Anime.\n        const basicTimeline = anime.timeline();\n        basicTimeline\n            .add({\n                targets: '.headline .letter',\n                scale: [0.3, 1],\n                opacity: [0, 1],\n                translateZ: 0,\n                easing: 'linear',\n                delay: (el, i) => {\n                    return 70 * (i + 1);\n                }\n            }).add({\n                targets: '.headline .line',\n                scaleX: [0, 1],\n                opacity: [0.5, 1],\n                easing: 'linear',\n                offset: '-=840',\n                delay: (el, i, l) => {\n                    return 70 * (l - i);\n                },\n                complete: (anim) => {\n                    this.show = true;\n                }\n            });\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                STRADA\n                \n            \n        \n        \n            \n                Simulation of TRAffic DAta\n                An urban traffic web simulator that uses data in real time\n                GET STARTED\n                \n                \n                More info\n            \n        \n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        STRADA                                                                        Simulation of TRAffic DAta                An urban traffic web simulator that uses data in real time                GET STARTED                                                More info                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoDialogComponent.html":{"url":"components/InfoDialogComponent.html","title":"component - InfoDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InfoDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/info-dialog.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                info-dialog\n            \n\n\n\n            \n                template\n                Info\n\n    {{ data }}\n\n\n    No\n    Yes\n\n\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/info-dialog.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/info-dialog.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/info-dialog.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n    selector: 'info-dialog',\n    template: `\n        Info\n        \n            {{ data }}\n        \n        \n            No\n            Yes\n        \n    `,\n    styles: []\n})\nexport class InfoDialogComponent {\n\n    constructor(\n        public dialogRef: MatDialogRef,\n        @Inject(MAT_DIALOG_DATA) public data: any\n    ) { }\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Info    {{ data }}    No    Yes'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InfoDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LinkFlow.html":{"url":"interfaces/LinkFlow.html","title":"interface - LinkFlow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LinkFlow\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        value\n                                \n                                \n                                        variance\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    linkFlow attribute.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        variance\n                                    \n                                \n                                \n                                    \n                                        variance:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Variance is the inverse of density.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\n\nimport * as combine from 'mout/array/combine';\n\nimport { Heap, Path } from './k-shortest-path';\nimport { round } from '../utils';\nimport { environment } from '../../environments/environment';\nimport { uiConfig } from '../ui/ui-config';\n\nexport enum PathType {\n    distance = 'distance',\n    duration = 'duration'\n}\n\n/**\n * An O/D pair is described by the origin and destination nodes, and the type of path.\n */\nexport interface OdPair {\n\n    origin: string;\n    destination: string;\n    pathType: PathType;\n\n}\n\nexport interface LinkFlow {\n\n    /**\n     * linkFlow attribute.\n     */\n    value: number;\n    /**\n     * Variance is the inverse of density.\n     */\n    variance: number;\n\n}\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public label: string;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    public drawingOptions: { marker?: google.maps.Marker } = {};\n\n    /**\n     * Used by the k shortest path routing.\n     */\n    public count: number = 0;\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public label: string;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    /**\n     * Free flow speed (m/s).\n     */\n    public freeFlowVelocity: number;\n\n    /**\n     * Instant speed (m/s).\n     */\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    /**\n     * Number of vehicles calculated from traffic data.\n     */\n    public linkFlow: number;\n\n    /**\n     * Maximum flow of the link.\n     */\n    public maxFlow: number;\n\n    public drawingOptions: {\n        path?: google.maps.LatLng[],\n        polyline?: google.maps.Polyline,\n        marker?: google.maps.Marker,\n        infowindow?: google.maps.InfoWindow\n    } = {};\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the link flow.\n     */\n    public calcLinkFlow(): void {\n        // Min distance is 1 meter.\n        if (this.distance == 0) { this.distance = 1; }\n        // Min duration is 1 second.\n        if (this.duration == 0) {\n            this.duration = round(this.distance / (50 / 3.6)) > 1 ? round(this.distance / (50 / 3.6)) : 1;\n        }\n        // Calculates free flow velocity (m/s).\n        this.freeFlowVelocity = round(this.distance / this.duration, 2);\n        // Calculates link flow.\n        if (this.durationInTraffic > 0 && this.durationInTraffic >= this.duration) {\n            // Calculates velocity (m/s).\n            this.velocity = round(this.distance / this.durationInTraffic, 2);\n            // Calculates density.\n            this.density = round(this.getKjam() * (this.freeFlowVelocity - this.velocity) / this.freeFlowVelocity, 2);\n            // Calculates flow.\n            this.flow = round(this.density * this.velocity, 2);\n            // Calculates link flow.\n            this.linkFlow = round(this.density * this.distance);\n        } else {\n            this.velocity = 0;\n            this.density = 0;\n            this.flow = 0;\n            this.linkFlow = 0;\n        }\n    }\n\n    /**\n     * Calculates the max flow of the edge.\n     * @param factor Weather Adjustment Factor\n     */\n    public calcMaxFlow(factor: number): void {\n        const maxFlow = this.getKjam() * this.freeFlowVelocity;\n        this.maxFlow = round(maxFlow * factor, 2);\n    }\n\n    /**\n     * Gets the variance of measurement error of link flow.\n     */\n    public getVariance(): number {\n        return this.density > 0 ? round(1 / this.density, 2) : 1;\n    }\n\n    public getKjam(): number {\n        return round(1 / uiConfig.sp, 2);\n    }\n\n    protected getCapacity(timeInterval: number): number {\n        return this.maxFlow * timeInterval;\n    }\n\n    protected draw(color: string, zIndex: number = 10): void {\n        this.drawingOptions.polyline.set('strokeColor', color);\n        this.drawingOptions.polyline.set('zIndex', zIndex);\n        this.drawingOptions.marker.set('visible', true);\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    protected nodes: Node[] = [];\n\n    protected edges: Edge[] = [];\n\n    protected relations: Relation[] = [];\n\n    /**\n     * Paths for each O/D pair [pairs,paths,edges].\n     */\n    protected shortestPaths: Edge[][][] = [];\n\n    protected incidenceMatrix: boolean[][][] = [];\n\n    protected assignmentMatrix: number[][][] = [];\n\n    private heap: Heap;\n\n    /**\n     * Shortest paths drawing options.\n     */\n    private drawingOptions: {\n        polylines?: google.maps.Polyline[][];\n    } = {};\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public getEdge(edgeId: number): Edge {\n        return this.edges.find((edge: Edge) => edge.edgeId == edgeId);\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Key:oneway\n     * @param edgeId Id of the edge\n     */\n    public isOneway(edgeId: number): boolean {\n        return !!this.getEdge(edgeId).tags.find(tag => tag.key == 'oneway' && tag.value != 'no') ||\n            this.isRoundabout(edgeId);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Tag:junction%3Droundabout\n     * @param edgeId Id of the edge\n     */\n    public isRoundabout(edgeId: number): boolean {\n        return this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'roundabout') ||\n            this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'circular') ?\n            true : false;\n    }\n\n    public getOdNode(label: string): Node {\n        return this.nodes.find((node: Node) => node.label == label);\n    }\n\n    public getOdNodes(): Node[] {\n        return this.nodes.filter((node: Node) => node.label);\n    }\n\n    /**\n     * Calculates the set of minimum paths.\n     * @param odPairs The O/D pairs\n     */\n    public calcShortestPaths(odPairs: OdPair[]): Observable {\n        try {\n            for (let i = 0; i  edge.label);\n    }\n\n    /**\n     * Calculates the incidence matrix of paths for O/D pairs.\n     */\n    public calcIncidenceMatrix(): Observable {\n        const edges = this.getPathsEdges();\n        for (let z = 0; z  value.edgeId == edges[m].edgeId)) {\n                        // The path crosses the edge.\n                        this.incidenceMatrix[z][n][m] = true;\n                    } else {\n                        // The path does not cross the edge.\n                        this.incidenceMatrix[z][n][m] = false;\n                    }\n                }\n            }\n        }\n        return of(null);\n    }\n\n    public getIncidenceMatrix(): boolean[][][] {\n        return this.incidenceMatrix;\n    }\n\n    /**\n     * Calculates the assignment matrix.\n     * @param odPairs The O/D pairs\n     */\n    public calcAssignmentMatrix(odPairs: OdPair[]): Observable {\n        // Calculates the probabilities of shortest paths.\n        const shortestPathsProbabilities = this.calcShortestPathsProbabilities(odPairs);\n\n        // Assignment matrix.\n        for (let z = 0; z  {\n        const edges = this.getPathsEdges();\n        for (const edge of edges) {\n            edge.calcMaxFlow(factor);\n        }\n        return of(null);\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link distance or duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param o Source node\n     * @param d Destination node\n     * @param pathType Distance or duration\n     * @param k The number of shortest paths to compute\n     * @returns The set of shortest paths\n     */\n    private ksp(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Sets to zero the count property of the nodes.\n        this.resetCount();\n        // Instantiates the heap.\n        this.heap = new Heap();\n        // Inserts the path of origin into heap with cost 0.\n        this.heap.push({ pathId: 0, node: o, edges: [], cost: 0 });\n        // Walks the graph.\n        return this.walk(o, d, pathType, k);\n    }\n\n    /**\n     * Breadth First Search (BFS) algorithm for traversing and searching tree data\n     * explores the neighbor nodes first, before moving to the next level neighbors.\n     */\n    private walk(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Set of shortest paths from origin to destination.\n        const shortestPaths: Path[] = [];\n\n        let pathId = 1;\n        let node: Node;\n        while (this.heap.getPaths().length > 0 && d.count  edge.origin.nodeId == node.nodeId) ? false : true;\n    }\n\n    private resetCount(): void {\n        for (const node of this.nodes) {\n            node.count = 0;\n        }\n    }\n\n    /**\n     * Removes the alternative paths that differ only for two links.\n     * @param shortestPaths The shortest paths as created by the algorithm\n     */\n    private filterPaths(shortestPaths: Path[]): void {\n        if (shortestPaths.length > 1) {\n            let i = 0;\n            do {\n                const pathA = shortestPaths[i].edges;\n                const pathB = shortestPaths[i + 1].edges;\n                const sharedEdges = pathA.filter((edgeOfA: Edge) =>\n                    pathB.find((edgeOfB: Edge) =>\n                        edgeOfB.edgeId == edgeOfA.edgeId));\n                if (pathA.length - sharedEdges.length  value.edgeId == edge.edgeId)) {\n                        edges.push(edge);\n                        edge.label = 'E' + count++;\n                        if (!environment.testing) {\n                            edge.drawingOptions.infowindow.setContent('Edge: ' + edge.label);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Multinomial logit model.\n     * @param odPairs The O/D pairs\n     */\n    private calcShortestPathsProbabilities(odPairs: OdPair[]): number[][] {\n        // Gets the total cost of paths.\n        const pathCosts = this.calcPathCosts(odPairs);\n        const shortestPathsProbabilities: number[][] = [];\n        // Theta parameter adjustment.\n        const parameter = uiConfig.theta * 100;\n        // Calculates numerator.\n        const exps: number[][] = [];\n        for (let z = 0; z  {\n                return value > 0 ? Math.exp(-value / parameter) : 0;\n            });\n        }\n        // Calculates denominator.\n        const sumExps: number[] = [];\n        for (let z = 0; z  a + b, 0);\n            sumExps.push(sum);\n        }\n        // Probabilities.\n        for (let z = 0; z  0 ? round(exps[z][n] / sumExps[z], 3) : 0;\n                shortestPathsProbabilities[z].push(p);\n            }\n        }\n        return shortestPathsProbabilities;\n    }\n\n    private calcPathCosts(odPairs: OdPair[]): number[][] {\n        const pathCosts: number[][] = [];\n        for (let z = 0; z \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LocationModule.html":{"url":"modules/LocationModule.html","title":"module - LocationModule","body":"\n                   \n\n\n\n\n  Modules\n  LocationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_providers\n\n\n\n\nLocationService\n\nLocationService\n\n\n\nLocationModule\n\nLocationModule\n\nLocationModule -->\n\nLocationService->LocationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/location/location.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     LocationService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { LocationService } from './location.service';\n\n@NgModule({\n    imports: [],\n    declarations: [],\n    providers: [LocationService]\n})\nexport class LocationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocationService.html":{"url":"injectables/LocationService.html","title":"injectable - LocationService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  LocationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/location/location.service.ts\n        \n\n            \n                Description\n            \n            \n                Responsible for identifying the geographic coordinates of the simulation area,\nthrough geocoding or geolocation.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                geocoder\n                            \n                            \n                                    Private\n                                latLng\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                codeAddress\n                            \n                            \n                                    Public\n                                getCurrentPosition\n                            \n                            \n                                    Public\n                                getLatLng\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Public\n                                setLatLng\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/location/location.service.ts:17\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            codeAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        codeAddress(address: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/location/location.service.ts:33\n                            \n                        \n\n\n                \n                    \n                            Geocoding service.\nWraps the Google Maps API geocoding service into an observable.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        address\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getCurrentPosition\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getCurrentPosition()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/location/location.service.ts:53\n                            \n                        \n\n\n                \n                    \n                            Tries HTML5 geolocation.\nWraps the Geolocation API into an observable.\n\n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getLatLng\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getLatLng()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/location/location.service.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     google.maps.LatLngLiteral\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/location/location.service.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setLatLng\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setLatLng(latLng: s/map.html\">google.maps.LatLngLiteral)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/location/location.service.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        latLng\n                                                        \n                                                                    google.maps.LatLngLiteral\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            geocoder\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        geocoder:     google.maps.Geocoder\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.Geocoder\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/location/location.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            latLng\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        latLng:     google.maps.LatLngLiteral\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.LatLngLiteral\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/location/location.service.ts:15\n                            \n                        \n\n                \n                    \n                        Center of the area (latitude, longitude).\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\nimport { environment } from '../../environments/environment';\n\n/**\n * Responsible for identifying the geographic coordinates of the simulation area,\n * through geocoding or geolocation.\n */\n@Injectable() export class LocationService {\n\n    /**\n     * Center of the area (latitude, longitude).\n     */\n    private latLng: google.maps.LatLngLiteral;\n\n    private geocoder: google.maps.Geocoder;\n\n    constructor() {\n        if (!environment.testing) {\n            this.geocoder = new google.maps.Geocoder();\n        }\n    }\n\n    public reset(): void {\n        this.latLng = null;\n    }\n\n    /**\n     * Geocoding service.\n     * Wraps the Google Maps API geocoding service into an observable.\n     */\n    public codeAddress(address: string): Observable {\n        return Observable.create((observer: Observer) => {\n            // Invokes geocode method of Google Maps API geocoding.\n            this.geocoder.geocode({ address: address }, (\n                (results: google.maps.GeocoderResult[], status: google.maps.GeocoderStatus) => {\n                    if (status === google.maps.GeocoderStatus.OK) {\n                        observer.next(results);\n                        observer.complete();\n                    } else {\n                        observer.error(status);\n                    }\n                })\n            );\n        });\n    }\n\n    /**\n     * Tries HTML5 geolocation.\n     * Wraps the Geolocation API into an observable.\n     */\n    public getCurrentPosition(): Observable {\n        return Observable.create((observer: Observer) => {\n            // Invokes getCurrentPosition method of Geolocation API.\n            navigator.geolocation.getCurrentPosition(\n                (position: Position) => {\n                    observer.next(position);\n                    observer.complete();\n                },\n                (error: PositionError) => {\n                    observer.error(error);\n                }\n            );\n        });\n    }\n\n    public getLatLng(): google.maps.LatLngLiteral {\n        return this.latLng;\n    }\n\n    public setLatLng(latLng: google.maps.LatLngLiteral): void {\n        this.latLng = latLng;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Map.html":{"url":"interfaces/Map.html","title":"interface - Map","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Map\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/ui-state.ts\n        \n\n            \n                Description\n            \n            \n                Map model.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Map data.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Step {\n\n    /**\n     * Form model data.\n     */\n    data: any;\n\n}\n\n/**\n * Map model.\n */\nexport interface Map {\n\n    /**\n     * Map data.\n     */\n    data: any;\n\n}\n\n/**\n * Initial steps.\n */\nexport const STEPS: Step[] = [];\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MapChanged.html":{"url":"classes/MapChanged.html","title":"class - MapChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  MapChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/actions/map.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/models/actions/map.actions.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/map.actions.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : MapActionTypes.MapChanged\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/map.actions.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Map } from '../ui-state';\n\n/**\n * ngrx: map Actions.\n */\nexport enum MapActionTypes {\n\n    MapChanged = '[Map] Map Changed',\n    Reset = '[Map] Reset'\n\n}\n\nexport class MapChanged implements Action {\n\n    public readonly type: string = MapActionTypes.MapChanged;\n\n    constructor(public payload: { map: Map }) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = MapActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type MapActions = MapChanged | Reset;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapComponent.html":{"url":"components/MapComponent.html","title":"component - MapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/map/map.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                ui-map\n            \n\n            \n                styleUrls\n                map.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./map.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                center\n                            \n                            \n                                currentStep\n                            \n                            \n                                disableDefaultUI\n                            \n                            \n                                disableDoubleClickZoom\n                            \n                            \n                                gestureHandling\n                            \n                            \n                                mapTypeId\n                            \n                            \n                                maxZoom\n                            \n                            \n                                minZoom\n                            \n                            \n                                styles\n                            \n                            \n                                zoom\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, map: MapService, network: NetworkService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/map/map.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                    MapService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:128\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            center\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        center:     google.maps.LatLngLiteral\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.LatLngLiteral\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentStep\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentStep:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableDefaultUI\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        disableDefaultUI:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableDoubleClickZoom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        disableDoubleClickZoom:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gestureHandling\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gestureHandling:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapTypeId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mapTypeId:     google.maps.MapTypeId\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.MapTypeId\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxZoom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maxZoom:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minZoom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        minZoom:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            styles\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        styles:     google.maps.MapTypeStyle[]\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.MapTypeStyle[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            zoom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zoom:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { MapService } from './map.service';\nimport { NetworkService } from '../../network/network.service';\nimport * as fromUi from '../models/reducers';\nimport { Step } from '../models/ui-state';\nimport { mapStyle } from './map.style';\nimport { OdPair } from '../../network/graph';\nimport { uiConfig } from '../ui-config';\n\nimport { BaseComponent } from '../models/base.component';\n\n@Component({\n    selector: 'ui-map',\n    templateUrl: './map.component.html',\n    styleUrls: ['./map.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class MapComponent extends BaseComponent implements OnInit {\n\n    // Center map. Required.\n    center: google.maps.LatLngLiteral;\n\n    // The initial map zoom level. Required.\n    zoom: number;\n\n    disableDefaultUI: boolean;\n    disableDoubleClickZoom: boolean;\n    mapTypeId: google.maps.MapTypeId;\n    maxZoom: number;\n    minZoom: number;\n    gestureHandling: string;\n    styles: google.maps.MapTypeStyle[];\n\n    currentStep: number;\n\n    constructor(\n        private store: Store,\n        private map: MapService,\n        private network: NetworkService\n    ) {\n        super();\n        // Map options.\n        this.disableDefaultUI = true;\n        this.disableDoubleClickZoom = false;\n        this.mapTypeId = google.maps.MapTypeId.ROADMAP;\n        this.maxZoom = 18;\n        this.minZoom = 4;\n        this.gestureHandling = 'cooperative';\n        this.styles = mapStyle;\n    }\n\n    ngOnInit(): void {\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        //\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.currentStep)).subscribe((currentStep: number) => {\n            this.currentStep = currentStep;\n            switch (currentStep) {\n                case 0:\n                    this.center = uiConfig.map.center;\n                    this.zoom = uiConfig.map.zoom;\n                    break;\n                case 1:\n                    // Builds & shows initial rectangle.\n                    const bounds: google.maps.LatLngBoundsLiteral = this.map.buildBounds(this.center);\n                    this.map.showRect(bounds);\n                    break;\n                case 2:\n                    // Hides the rectangle.\n                    this.map.hideRect();\n                    // Shows graph.\n                    this.map.showGraph();\n                    // Sets centroid.\n                    this.map.setCentroid();\n                    // Sets map.\n                    this.map.setCenter(this.map.getCentroid());\n                    this.map.setZoom(17);\n                    break;\n                case 3:\n                    // Clears nodes actions.\n                    this.map.clearNodesActions();\n                    break;\n                case 4:\n                    // Hides paths.\n                    this.map.hidePaths();\n                    break;\n            }\n        }));\n        this.subscriptions.push(this.store.pipe(select(fromUi.steps)).subscribe((steps: Step[]) => {\n            switch (this.currentStep) {\n                case 0:\n                    if (steps[0]) {\n                        // Updates center map.\n                        this.center = steps[0].data.center;\n                        this.zoom = 16;\n                    } else {\n                        this.center = uiConfig.map.center;\n                        this.zoom = uiConfig.map.zoom;\n                    }\n                    break;\n                case 2:\n                    if (steps[2]) {\n                        // Shows/hides O/D nodes.\n                        const odPairs: OdPair[] = steps[2].data.odPairs;\n                        this.map.showNodes(odPairs);\n                    }\n                    break;\n                case 3:\n                    if (steps[3] && steps[3].data.odPairs) {\n                        // Shows/hides O/D paths.\n                        const odPairs = steps[3].data.odPairs;\n                        this.map.showPaths(odPairs);\n                    }\n                    break;\n            }\n        }));\n    }\n\n    sendActions(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MapState.html":{"url":"interfaces/MapState.html","title":"interface - MapState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MapState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/reducers/map.reducer.ts\n        \n\n            \n                Description\n            \n            \n                Map state management.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        map\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        map\n                                    \n                                \n                                \n                                    \n                                        map:     Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import deepClone from 'mout/lang/deepClone';\n\nimport { Map } from \"../ui-state\";\nimport { MapActions, MapActionTypes } from '../actions/map.actions';\n\n/**\n * Map state management.\n */\nexport interface MapState {\n\n    map: Map;\n\n}\n\nexport const initialMapState: MapState = {\n    map: null\n};\n\n/**\n * ngrx: map Reducer.\n */\nexport function mapReducer(state: MapState = deepClone(initialMapState), action: MapActions): MapState {\n    switch (action.type) {\n        case MapActionTypes.MapChanged: {\n            state.map = action.payload.map;\n            return {\n                ...state,\n                map: deepClone(state.map)\n            };\n        }\n        case MapActionTypes.Reset: {\n            return deepClone(initialMapState);\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\nexport const getMap: (state: MapState) => Map = (state: MapState) => state.map;\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n  Modules\n  MaterialModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/material.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport {\n    MatSidenavModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatIconRegistry,\n    MatButtonModule,\n    MatIconModule,\n    MatMenuModule,\n    MatStepperModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule,\n    MatDialogModule,\n    MatGridListModule,\n    MatSelectModule,\n    MatExpansionModule,\n    MatTableModule\n} from '@angular/material';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nconst materialModules: any[] = [\n    MatSidenavModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    MatMenuModule,\n    MatStepperModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule,\n    MatDialogModule,\n    MatGridListModule,\n    MatSelectModule,\n    MatExpansionModule,\n    MatTableModule\n];\n\n@NgModule({\n    imports: materialModules,\n    exports: materialModules\n})\nexport class MaterialModule {\n\n    constructor(matIconRegistry: MatIconRegistry, domSanitizer: DomSanitizer) {\n        matIconRegistry.addSvgIcon(\n            'more_vert', domSanitizer.bypassSecurityTrustResourceUrl('./assets/images/ic_more_vert_24px.svg')\n        );\n        matIconRegistry.addSvgIcon(\n            'code', domSanitizer.bypassSecurityTrustResourceUrl('./assets/images/ic_code_24px.svg')\n        );\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Member.html":{"url":"interfaces/Member.html","title":"interface - Member","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Member\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                Relation's member.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ref\n                                \n                                \n                                        role\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ref\n                                    \n                                \n                                \n                                    \n                                        ref:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\n\nimport * as combine from 'mout/array/combine';\n\nimport { Heap, Path } from './k-shortest-path';\nimport { round } from '../utils';\nimport { environment } from '../../environments/environment';\nimport { uiConfig } from '../ui/ui-config';\n\nexport enum PathType {\n    distance = 'distance',\n    duration = 'duration'\n}\n\n/**\n * An O/D pair is described by the origin and destination nodes, and the type of path.\n */\nexport interface OdPair {\n\n    origin: string;\n    destination: string;\n    pathType: PathType;\n\n}\n\nexport interface LinkFlow {\n\n    /**\n     * linkFlow attribute.\n     */\n    value: number;\n    /**\n     * Variance is the inverse of density.\n     */\n    variance: number;\n\n}\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public label: string;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    public drawingOptions: { marker?: google.maps.Marker } = {};\n\n    /**\n     * Used by the k shortest path routing.\n     */\n    public count: number = 0;\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public label: string;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    /**\n     * Free flow speed (m/s).\n     */\n    public freeFlowVelocity: number;\n\n    /**\n     * Instant speed (m/s).\n     */\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    /**\n     * Number of vehicles calculated from traffic data.\n     */\n    public linkFlow: number;\n\n    /**\n     * Maximum flow of the link.\n     */\n    public maxFlow: number;\n\n    public drawingOptions: {\n        path?: google.maps.LatLng[],\n        polyline?: google.maps.Polyline,\n        marker?: google.maps.Marker,\n        infowindow?: google.maps.InfoWindow\n    } = {};\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the link flow.\n     */\n    public calcLinkFlow(): void {\n        // Min distance is 1 meter.\n        if (this.distance == 0) { this.distance = 1; }\n        // Min duration is 1 second.\n        if (this.duration == 0) {\n            this.duration = round(this.distance / (50 / 3.6)) > 1 ? round(this.distance / (50 / 3.6)) : 1;\n        }\n        // Calculates free flow velocity (m/s).\n        this.freeFlowVelocity = round(this.distance / this.duration, 2);\n        // Calculates link flow.\n        if (this.durationInTraffic > 0 && this.durationInTraffic >= this.duration) {\n            // Calculates velocity (m/s).\n            this.velocity = round(this.distance / this.durationInTraffic, 2);\n            // Calculates density.\n            this.density = round(this.getKjam() * (this.freeFlowVelocity - this.velocity) / this.freeFlowVelocity, 2);\n            // Calculates flow.\n            this.flow = round(this.density * this.velocity, 2);\n            // Calculates link flow.\n            this.linkFlow = round(this.density * this.distance);\n        } else {\n            this.velocity = 0;\n            this.density = 0;\n            this.flow = 0;\n            this.linkFlow = 0;\n        }\n    }\n\n    /**\n     * Calculates the max flow of the edge.\n     * @param factor Weather Adjustment Factor\n     */\n    public calcMaxFlow(factor: number): void {\n        const maxFlow = this.getKjam() * this.freeFlowVelocity;\n        this.maxFlow = round(maxFlow * factor, 2);\n    }\n\n    /**\n     * Gets the variance of measurement error of link flow.\n     */\n    public getVariance(): number {\n        return this.density > 0 ? round(1 / this.density, 2) : 1;\n    }\n\n    public getKjam(): number {\n        return round(1 / uiConfig.sp, 2);\n    }\n\n    protected getCapacity(timeInterval: number): number {\n        return this.maxFlow * timeInterval;\n    }\n\n    protected draw(color: string, zIndex: number = 10): void {\n        this.drawingOptions.polyline.set('strokeColor', color);\n        this.drawingOptions.polyline.set('zIndex', zIndex);\n        this.drawingOptions.marker.set('visible', true);\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    protected nodes: Node[] = [];\n\n    protected edges: Edge[] = [];\n\n    protected relations: Relation[] = [];\n\n    /**\n     * Paths for each O/D pair [pairs,paths,edges].\n     */\n    protected shortestPaths: Edge[][][] = [];\n\n    protected incidenceMatrix: boolean[][][] = [];\n\n    protected assignmentMatrix: number[][][] = [];\n\n    private heap: Heap;\n\n    /**\n     * Shortest paths drawing options.\n     */\n    private drawingOptions: {\n        polylines?: google.maps.Polyline[][];\n    } = {};\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public getEdge(edgeId: number): Edge {\n        return this.edges.find((edge: Edge) => edge.edgeId == edgeId);\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Key:oneway\n     * @param edgeId Id of the edge\n     */\n    public isOneway(edgeId: number): boolean {\n        return !!this.getEdge(edgeId).tags.find(tag => tag.key == 'oneway' && tag.value != 'no') ||\n            this.isRoundabout(edgeId);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Tag:junction%3Droundabout\n     * @param edgeId Id of the edge\n     */\n    public isRoundabout(edgeId: number): boolean {\n        return this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'roundabout') ||\n            this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'circular') ?\n            true : false;\n    }\n\n    public getOdNode(label: string): Node {\n        return this.nodes.find((node: Node) => node.label == label);\n    }\n\n    public getOdNodes(): Node[] {\n        return this.nodes.filter((node: Node) => node.label);\n    }\n\n    /**\n     * Calculates the set of minimum paths.\n     * @param odPairs The O/D pairs\n     */\n    public calcShortestPaths(odPairs: OdPair[]): Observable {\n        try {\n            for (let i = 0; i  edge.label);\n    }\n\n    /**\n     * Calculates the incidence matrix of paths for O/D pairs.\n     */\n    public calcIncidenceMatrix(): Observable {\n        const edges = this.getPathsEdges();\n        for (let z = 0; z  value.edgeId == edges[m].edgeId)) {\n                        // The path crosses the edge.\n                        this.incidenceMatrix[z][n][m] = true;\n                    } else {\n                        // The path does not cross the edge.\n                        this.incidenceMatrix[z][n][m] = false;\n                    }\n                }\n            }\n        }\n        return of(null);\n    }\n\n    public getIncidenceMatrix(): boolean[][][] {\n        return this.incidenceMatrix;\n    }\n\n    /**\n     * Calculates the assignment matrix.\n     * @param odPairs The O/D pairs\n     */\n    public calcAssignmentMatrix(odPairs: OdPair[]): Observable {\n        // Calculates the probabilities of shortest paths.\n        const shortestPathsProbabilities = this.calcShortestPathsProbabilities(odPairs);\n\n        // Assignment matrix.\n        for (let z = 0; z  {\n        const edges = this.getPathsEdges();\n        for (const edge of edges) {\n            edge.calcMaxFlow(factor);\n        }\n        return of(null);\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link distance or duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param o Source node\n     * @param d Destination node\n     * @param pathType Distance or duration\n     * @param k The number of shortest paths to compute\n     * @returns The set of shortest paths\n     */\n    private ksp(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Sets to zero the count property of the nodes.\n        this.resetCount();\n        // Instantiates the heap.\n        this.heap = new Heap();\n        // Inserts the path of origin into heap with cost 0.\n        this.heap.push({ pathId: 0, node: o, edges: [], cost: 0 });\n        // Walks the graph.\n        return this.walk(o, d, pathType, k);\n    }\n\n    /**\n     * Breadth First Search (BFS) algorithm for traversing and searching tree data\n     * explores the neighbor nodes first, before moving to the next level neighbors.\n     */\n    private walk(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Set of shortest paths from origin to destination.\n        const shortestPaths: Path[] = [];\n\n        let pathId = 1;\n        let node: Node;\n        while (this.heap.getPaths().length > 0 && d.count  edge.origin.nodeId == node.nodeId) ? false : true;\n    }\n\n    private resetCount(): void {\n        for (const node of this.nodes) {\n            node.count = 0;\n        }\n    }\n\n    /**\n     * Removes the alternative paths that differ only for two links.\n     * @param shortestPaths The shortest paths as created by the algorithm\n     */\n    private filterPaths(shortestPaths: Path[]): void {\n        if (shortestPaths.length > 1) {\n            let i = 0;\n            do {\n                const pathA = shortestPaths[i].edges;\n                const pathB = shortestPaths[i + 1].edges;\n                const sharedEdges = pathA.filter((edgeOfA: Edge) =>\n                    pathB.find((edgeOfB: Edge) =>\n                        edgeOfB.edgeId == edgeOfA.edgeId));\n                if (pathA.length - sharedEdges.length  value.edgeId == edge.edgeId)) {\n                        edges.push(edge);\n                        edge.label = 'E' + count++;\n                        if (!environment.testing) {\n                            edge.drawingOptions.infowindow.setContent('Edge: ' + edge.label);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Multinomial logit model.\n     * @param odPairs The O/D pairs\n     */\n    private calcShortestPathsProbabilities(odPairs: OdPair[]): number[][] {\n        // Gets the total cost of paths.\n        const pathCosts = this.calcPathCosts(odPairs);\n        const shortestPathsProbabilities: number[][] = [];\n        // Theta parameter adjustment.\n        const parameter = uiConfig.theta * 100;\n        // Calculates numerator.\n        const exps: number[][] = [];\n        for (let z = 0; z  {\n                return value > 0 ? Math.exp(-value / parameter) : 0;\n            });\n        }\n        // Calculates denominator.\n        const sumExps: number[] = [];\n        for (let z = 0; z  a + b, 0);\n            sumExps.push(sum);\n        }\n        // Probabilities.\n        for (let z = 0; z  0 ? round(exps[z][n] / sumExps[z], 3) : 0;\n                shortestPathsProbabilities[z].push(p);\n            }\n        }\n        return shortestPathsProbabilities;\n    }\n\n    private calcPathCosts(odPairs: OdPair[]): number[][] {\n        const pathCosts: number[][] = [];\n        for (let z = 0; z \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MessageArchivedComponent.html":{"url":"components/MessageArchivedComponent.html","title":"component - MessageArchivedComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MessageArchivedComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/message-archived.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snack-bar\n            \n\n\n\n            \n                template\n                {{ data }}\n\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/message-archived.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/message-archived.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material';\n\n@Component({\n    selector: 'snack-bar',\n    template: `\n        {{ data }}\n    `,\n    styles: []\n})\nexport class MessageArchivedComponent {\n\n    constructor(@Inject(MAT_SNACK_BAR_DATA) public data: any) { }\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ data }}'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MessageArchivedComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NetworkModule.html":{"url":"modules/NetworkModule.html","title":"module - NetworkModule","body":"\n                   \n\n\n\n\n  Modules\n  NetworkModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NetworkModule\n\n\n\ncluster_NetworkModule_imports\n\n\n\ncluster_NetworkModule_providers\n\n\n\n\nWeatherModule\n\nWeatherModule\n\n\n\nNetworkModule\n\nNetworkModule\n\nNetworkModule -->\n\nWeatherModule->NetworkModule\n\n\n\n\n\nNetworkService\n\nNetworkService\n\nNetworkModule -->\n\nNetworkService->NetworkModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/network/network.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     NetworkService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    WeatherModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { WeatherModule } from './weather/weather.module';\n\nimport { NetworkService } from './network.service';\n\n@NgModule({\n    imports: [WeatherModule],\n    declarations: [],\n    providers: [NetworkService]\n})\nexport class NetworkModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Node.html":{"url":"classes/Node.html","title":"class - Node","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Node\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                Node represents a specific point on the earth's surface defined by its latitude and longitude.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                count\n                            \n                            \n                                    Public\n                                drawingOptions\n                            \n                            \n                                    Public\n                                incomingEdges\n                            \n                            \n                                    Public\n                                label\n                            \n                            \n                                    Public\n                                lat\n                            \n                            \n                                    Public\n                                lon\n                            \n                            \n                                    Public\n                                nodeId\n                            \n                            \n                                    Public\n                                outgoingEdges\n                            \n                            \n                                    Public\n                                tags\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(nodeId: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/graph.ts:84\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        nodeId\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            count\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        count:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:84\n                            \n                        \n\n                \n                    \n                        Used by the k shortest path routing.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            drawingOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        drawingOptions:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            incomingEdges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        incomingEdges:     Edge[]\n\n                    \n                \n                    \n                        \n                            Type :     Edge[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            label\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        label:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lat\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lat:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:69\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lon:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nodeId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nodeId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            outgoingEdges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        outgoingEdges:     Edge[]\n\n                    \n                \n                    \n                        \n                            Type :     Edge[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tags:     Tag[]\n\n                    \n                \n                    \n                        \n                            Type :     Tag[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:73\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\n\nimport * as combine from 'mout/array/combine';\n\nimport { Heap, Path } from './k-shortest-path';\nimport { round } from '../utils';\nimport { environment } from '../../environments/environment';\nimport { uiConfig } from '../ui/ui-config';\n\nexport enum PathType {\n    distance = 'distance',\n    duration = 'duration'\n}\n\n/**\n * An O/D pair is described by the origin and destination nodes, and the type of path.\n */\nexport interface OdPair {\n\n    origin: string;\n    destination: string;\n    pathType: PathType;\n\n}\n\nexport interface LinkFlow {\n\n    /**\n     * linkFlow attribute.\n     */\n    value: number;\n    /**\n     * Variance is the inverse of density.\n     */\n    variance: number;\n\n}\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public label: string;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    public drawingOptions: { marker?: google.maps.Marker } = {};\n\n    /**\n     * Used by the k shortest path routing.\n     */\n    public count: number = 0;\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public label: string;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    /**\n     * Free flow speed (m/s).\n     */\n    public freeFlowVelocity: number;\n\n    /**\n     * Instant speed (m/s).\n     */\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    /**\n     * Number of vehicles calculated from traffic data.\n     */\n    public linkFlow: number;\n\n    /**\n     * Maximum flow of the link.\n     */\n    public maxFlow: number;\n\n    public drawingOptions: {\n        path?: google.maps.LatLng[],\n        polyline?: google.maps.Polyline,\n        marker?: google.maps.Marker,\n        infowindow?: google.maps.InfoWindow\n    } = {};\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the link flow.\n     */\n    public calcLinkFlow(): void {\n        // Min distance is 1 meter.\n        if (this.distance == 0) { this.distance = 1; }\n        // Min duration is 1 second.\n        if (this.duration == 0) {\n            this.duration = round(this.distance / (50 / 3.6)) > 1 ? round(this.distance / (50 / 3.6)) : 1;\n        }\n        // Calculates free flow velocity (m/s).\n        this.freeFlowVelocity = round(this.distance / this.duration, 2);\n        // Calculates link flow.\n        if (this.durationInTraffic > 0 && this.durationInTraffic >= this.duration) {\n            // Calculates velocity (m/s).\n            this.velocity = round(this.distance / this.durationInTraffic, 2);\n            // Calculates density.\n            this.density = round(this.getKjam() * (this.freeFlowVelocity - this.velocity) / this.freeFlowVelocity, 2);\n            // Calculates flow.\n            this.flow = round(this.density * this.velocity, 2);\n            // Calculates link flow.\n            this.linkFlow = round(this.density * this.distance);\n        } else {\n            this.velocity = 0;\n            this.density = 0;\n            this.flow = 0;\n            this.linkFlow = 0;\n        }\n    }\n\n    /**\n     * Calculates the max flow of the edge.\n     * @param factor Weather Adjustment Factor\n     */\n    public calcMaxFlow(factor: number): void {\n        const maxFlow = this.getKjam() * this.freeFlowVelocity;\n        this.maxFlow = round(maxFlow * factor, 2);\n    }\n\n    /**\n     * Gets the variance of measurement error of link flow.\n     */\n    public getVariance(): number {\n        return this.density > 0 ? round(1 / this.density, 2) : 1;\n    }\n\n    public getKjam(): number {\n        return round(1 / uiConfig.sp, 2);\n    }\n\n    protected getCapacity(timeInterval: number): number {\n        return this.maxFlow * timeInterval;\n    }\n\n    protected draw(color: string, zIndex: number = 10): void {\n        this.drawingOptions.polyline.set('strokeColor', color);\n        this.drawingOptions.polyline.set('zIndex', zIndex);\n        this.drawingOptions.marker.set('visible', true);\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    protected nodes: Node[] = [];\n\n    protected edges: Edge[] = [];\n\n    protected relations: Relation[] = [];\n\n    /**\n     * Paths for each O/D pair [pairs,paths,edges].\n     */\n    protected shortestPaths: Edge[][][] = [];\n\n    protected incidenceMatrix: boolean[][][] = [];\n\n    protected assignmentMatrix: number[][][] = [];\n\n    private heap: Heap;\n\n    /**\n     * Shortest paths drawing options.\n     */\n    private drawingOptions: {\n        polylines?: google.maps.Polyline[][];\n    } = {};\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public getEdge(edgeId: number): Edge {\n        return this.edges.find((edge: Edge) => edge.edgeId == edgeId);\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Key:oneway\n     * @param edgeId Id of the edge\n     */\n    public isOneway(edgeId: number): boolean {\n        return !!this.getEdge(edgeId).tags.find(tag => tag.key == 'oneway' && tag.value != 'no') ||\n            this.isRoundabout(edgeId);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Tag:junction%3Droundabout\n     * @param edgeId Id of the edge\n     */\n    public isRoundabout(edgeId: number): boolean {\n        return this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'roundabout') ||\n            this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'circular') ?\n            true : false;\n    }\n\n    public getOdNode(label: string): Node {\n        return this.nodes.find((node: Node) => node.label == label);\n    }\n\n    public getOdNodes(): Node[] {\n        return this.nodes.filter((node: Node) => node.label);\n    }\n\n    /**\n     * Calculates the set of minimum paths.\n     * @param odPairs The O/D pairs\n     */\n    public calcShortestPaths(odPairs: OdPair[]): Observable {\n        try {\n            for (let i = 0; i  edge.label);\n    }\n\n    /**\n     * Calculates the incidence matrix of paths for O/D pairs.\n     */\n    public calcIncidenceMatrix(): Observable {\n        const edges = this.getPathsEdges();\n        for (let z = 0; z  value.edgeId == edges[m].edgeId)) {\n                        // The path crosses the edge.\n                        this.incidenceMatrix[z][n][m] = true;\n                    } else {\n                        // The path does not cross the edge.\n                        this.incidenceMatrix[z][n][m] = false;\n                    }\n                }\n            }\n        }\n        return of(null);\n    }\n\n    public getIncidenceMatrix(): boolean[][][] {\n        return this.incidenceMatrix;\n    }\n\n    /**\n     * Calculates the assignment matrix.\n     * @param odPairs The O/D pairs\n     */\n    public calcAssignmentMatrix(odPairs: OdPair[]): Observable {\n        // Calculates the probabilities of shortest paths.\n        const shortestPathsProbabilities = this.calcShortestPathsProbabilities(odPairs);\n\n        // Assignment matrix.\n        for (let z = 0; z  {\n        const edges = this.getPathsEdges();\n        for (const edge of edges) {\n            edge.calcMaxFlow(factor);\n        }\n        return of(null);\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link distance or duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param o Source node\n     * @param d Destination node\n     * @param pathType Distance or duration\n     * @param k The number of shortest paths to compute\n     * @returns The set of shortest paths\n     */\n    private ksp(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Sets to zero the count property of the nodes.\n        this.resetCount();\n        // Instantiates the heap.\n        this.heap = new Heap();\n        // Inserts the path of origin into heap with cost 0.\n        this.heap.push({ pathId: 0, node: o, edges: [], cost: 0 });\n        // Walks the graph.\n        return this.walk(o, d, pathType, k);\n    }\n\n    /**\n     * Breadth First Search (BFS) algorithm for traversing and searching tree data\n     * explores the neighbor nodes first, before moving to the next level neighbors.\n     */\n    private walk(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Set of shortest paths from origin to destination.\n        const shortestPaths: Path[] = [];\n\n        let pathId = 1;\n        let node: Node;\n        while (this.heap.getPaths().length > 0 && d.count  edge.origin.nodeId == node.nodeId) ? false : true;\n    }\n\n    private resetCount(): void {\n        for (const node of this.nodes) {\n            node.count = 0;\n        }\n    }\n\n    /**\n     * Removes the alternative paths that differ only for two links.\n     * @param shortestPaths The shortest paths as created by the algorithm\n     */\n    private filterPaths(shortestPaths: Path[]): void {\n        if (shortestPaths.length > 1) {\n            let i = 0;\n            do {\n                const pathA = shortestPaths[i].edges;\n                const pathB = shortestPaths[i + 1].edges;\n                const sharedEdges = pathA.filter((edgeOfA: Edge) =>\n                    pathB.find((edgeOfB: Edge) =>\n                        edgeOfB.edgeId == edgeOfA.edgeId));\n                if (pathA.length - sharedEdges.length  value.edgeId == edge.edgeId)) {\n                        edges.push(edge);\n                        edge.label = 'E' + count++;\n                        if (!environment.testing) {\n                            edge.drawingOptions.infowindow.setContent('Edge: ' + edge.label);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Multinomial logit model.\n     * @param odPairs The O/D pairs\n     */\n    private calcShortestPathsProbabilities(odPairs: OdPair[]): number[][] {\n        // Gets the total cost of paths.\n        const pathCosts = this.calcPathCosts(odPairs);\n        const shortestPathsProbabilities: number[][] = [];\n        // Theta parameter adjustment.\n        const parameter = uiConfig.theta * 100;\n        // Calculates numerator.\n        const exps: number[][] = [];\n        for (let z = 0; z  {\n                return value > 0 ? Math.exp(-value / parameter) : 0;\n            });\n        }\n        // Calculates denominator.\n        const sumExps: number[] = [];\n        for (let z = 0; z  a + b, 0);\n            sumExps.push(sum);\n        }\n        // Probabilities.\n        for (let z = 0; z  0 ? round(exps[z][n] / sumExps[z], 3) : 0;\n                shortestPathsProbabilities[z].push(p);\n            }\n        }\n        return shortestPathsProbabilities;\n    }\n\n    private calcPathCosts(odPairs: OdPair[]): number[][] {\n        const pathCosts: number[][] = [];\n        for (let z = 0; z \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NumericComponent.html":{"url":"components/NumericComponent.html","title":"component - NumericComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NumericComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/numeric/numeric.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ui-numeric\n            \n\n            \n                styleUrls\n                numeric.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./numeric.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/numeric/numeric.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/numeric/numeric.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/numeric/numeric.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/numeric/numeric.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/numeric/numeric.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     NumericalSimulation[]\n\n                    \n                \n                    \n                        \n                            Type :     NumericalSimulation[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/numeric/numeric.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        displayedColumns:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['edge', 'wayName', 'trafficVolume', 'trafficCount', 'delay', 'stops']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/numeric/numeric.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { Store, select } from '@ngrx/store';\n\nimport * as fromSimulation from '../../simulation/models/reducers';\nimport { Simulation, NumericalSimulation } from '../../simulation/models/simulation-state';\n\nimport { BaseComponent } from '../models/base.component';\n\n@Component({\n    selector: 'ui-numeric',\n    templateUrl: './numeric.component.html',\n    styleUrls: ['./numeric.component.scss']\n})\nexport class NumericComponent extends BaseComponent implements OnInit {\n\n    data: NumericalSimulation[] = [];\n\n    displayedColumns: string[] = ['edge', 'wayName', 'trafficVolume', 'trafficCount', 'delay', 'stops'];\n\n    constructor(\n        private store: Store\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        //\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromSimulation.simulation)).subscribe((simulation: Simulation) => {\n            if (simulation && simulation.data) {\n                this.data = simulation.data;\n            }\n        }));\n    }\n\n    sendActions(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    \n         Edge \n         {{ element.edge }} \n    \n    \n         Way name \n         {{ element.wayName }} \n    \n    \n         Traffic volume \n         {{ element.trafficVolume }} \n    \n    \n         Traffic count \n         {{ element.trafficCount }} \n    \n    \n         Delay (s) \n         {{ element.delay }} \n    \n    \n         Stops (s) \n         {{ element.stops }} \n    \n    \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             Edge          {{ element.edge }}                  Way name          {{ element.wayName }}                  Traffic volume          {{ element.trafficVolume }}                  Traffic count          {{ element.trafficCount }}                  Delay (s)          {{ element.delay }}                  Stops (s)          {{ element.stops }}             '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NumericComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NumericalSimulation.html":{"url":"interfaces/NumericalSimulation.html","title":"interface - NumericalSimulation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NumericalSimulation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/models/simulation-state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        delay\n                                \n                                \n                                        edge\n                                \n                                \n                                        stops\n                                \n                                \n                                        trafficCount\n                                \n                                \n                                        trafficVolume\n                                \n                                \n                                        wayName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        delay\n                                    \n                                \n                                \n                                    \n                                        delay:     number | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        edge\n                                    \n                                \n                                \n                                    \n                                        edge:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stops\n                                    \n                                \n                                \n                                    \n                                        stops:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trafficCount\n                                    \n                                \n                                \n                                    \n                                        trafficCount:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trafficVolume\n                                    \n                                \n                                \n                                    \n                                        trafficVolume:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wayName\n                                    \n                                \n                                \n                                    \n                                        wayName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface NumericalSimulation {\n\n    edge: string;\n    wayName: string;\n    trafficVolume: number;\n    trafficCount: number;\n    delay: number | string;\n    stops: number;\n\n}\n\nexport interface Counts {\n\n    startedVehicles: number;\n    arrivedVehicles: number;\n\n}\n\nexport interface Simulation {\n\n    /**\n     * Simulation data.\n     */\n    data: NumericalSimulation[];\n    /**\n     * Simulation counts.\n     */\n    counts: Counts;\n    /**\n     * Simulation avg. speed.\n     */\n    speed: number;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OdPair.html":{"url":"interfaces/OdPair.html","title":"interface - OdPair","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OdPair\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                An O/D pair is described by the origin and destination nodes, and the type of path.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        destination\n                                \n                                \n                                        origin\n                                \n                                \n                                        pathType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                    \n                                \n                                \n                                    \n                                        destination:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        origin\n                                    \n                                \n                                \n                                    \n                                        origin:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pathType\n                                    \n                                \n                                \n                                    \n                                        pathType:     PathType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PathType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\n\nimport * as combine from 'mout/array/combine';\n\nimport { Heap, Path } from './k-shortest-path';\nimport { round } from '../utils';\nimport { environment } from '../../environments/environment';\nimport { uiConfig } from '../ui/ui-config';\n\nexport enum PathType {\n    distance = 'distance',\n    duration = 'duration'\n}\n\n/**\n * An O/D pair is described by the origin and destination nodes, and the type of path.\n */\nexport interface OdPair {\n\n    origin: string;\n    destination: string;\n    pathType: PathType;\n\n}\n\nexport interface LinkFlow {\n\n    /**\n     * linkFlow attribute.\n     */\n    value: number;\n    /**\n     * Variance is the inverse of density.\n     */\n    variance: number;\n\n}\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public label: string;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    public drawingOptions: { marker?: google.maps.Marker } = {};\n\n    /**\n     * Used by the k shortest path routing.\n     */\n    public count: number = 0;\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public label: string;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    /**\n     * Free flow speed (m/s).\n     */\n    public freeFlowVelocity: number;\n\n    /**\n     * Instant speed (m/s).\n     */\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    /**\n     * Number of vehicles calculated from traffic data.\n     */\n    public linkFlow: number;\n\n    /**\n     * Maximum flow of the link.\n     */\n    public maxFlow: number;\n\n    public drawingOptions: {\n        path?: google.maps.LatLng[],\n        polyline?: google.maps.Polyline,\n        marker?: google.maps.Marker,\n        infowindow?: google.maps.InfoWindow\n    } = {};\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the link flow.\n     */\n    public calcLinkFlow(): void {\n        // Min distance is 1 meter.\n        if (this.distance == 0) { this.distance = 1; }\n        // Min duration is 1 second.\n        if (this.duration == 0) {\n            this.duration = round(this.distance / (50 / 3.6)) > 1 ? round(this.distance / (50 / 3.6)) : 1;\n        }\n        // Calculates free flow velocity (m/s).\n        this.freeFlowVelocity = round(this.distance / this.duration, 2);\n        // Calculates link flow.\n        if (this.durationInTraffic > 0 && this.durationInTraffic >= this.duration) {\n            // Calculates velocity (m/s).\n            this.velocity = round(this.distance / this.durationInTraffic, 2);\n            // Calculates density.\n            this.density = round(this.getKjam() * (this.freeFlowVelocity - this.velocity) / this.freeFlowVelocity, 2);\n            // Calculates flow.\n            this.flow = round(this.density * this.velocity, 2);\n            // Calculates link flow.\n            this.linkFlow = round(this.density * this.distance);\n        } else {\n            this.velocity = 0;\n            this.density = 0;\n            this.flow = 0;\n            this.linkFlow = 0;\n        }\n    }\n\n    /**\n     * Calculates the max flow of the edge.\n     * @param factor Weather Adjustment Factor\n     */\n    public calcMaxFlow(factor: number): void {\n        const maxFlow = this.getKjam() * this.freeFlowVelocity;\n        this.maxFlow = round(maxFlow * factor, 2);\n    }\n\n    /**\n     * Gets the variance of measurement error of link flow.\n     */\n    public getVariance(): number {\n        return this.density > 0 ? round(1 / this.density, 2) : 1;\n    }\n\n    public getKjam(): number {\n        return round(1 / uiConfig.sp, 2);\n    }\n\n    protected getCapacity(timeInterval: number): number {\n        return this.maxFlow * timeInterval;\n    }\n\n    protected draw(color: string, zIndex: number = 10): void {\n        this.drawingOptions.polyline.set('strokeColor', color);\n        this.drawingOptions.polyline.set('zIndex', zIndex);\n        this.drawingOptions.marker.set('visible', true);\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    protected nodes: Node[] = [];\n\n    protected edges: Edge[] = [];\n\n    protected relations: Relation[] = [];\n\n    /**\n     * Paths for each O/D pair [pairs,paths,edges].\n     */\n    protected shortestPaths: Edge[][][] = [];\n\n    protected incidenceMatrix: boolean[][][] = [];\n\n    protected assignmentMatrix: number[][][] = [];\n\n    private heap: Heap;\n\n    /**\n     * Shortest paths drawing options.\n     */\n    private drawingOptions: {\n        polylines?: google.maps.Polyline[][];\n    } = {};\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public getEdge(edgeId: number): Edge {\n        return this.edges.find((edge: Edge) => edge.edgeId == edgeId);\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Key:oneway\n     * @param edgeId Id of the edge\n     */\n    public isOneway(edgeId: number): boolean {\n        return !!this.getEdge(edgeId).tags.find(tag => tag.key == 'oneway' && tag.value != 'no') ||\n            this.isRoundabout(edgeId);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Tag:junction%3Droundabout\n     * @param edgeId Id of the edge\n     */\n    public isRoundabout(edgeId: number): boolean {\n        return this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'roundabout') ||\n            this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'circular') ?\n            true : false;\n    }\n\n    public getOdNode(label: string): Node {\n        return this.nodes.find((node: Node) => node.label == label);\n    }\n\n    public getOdNodes(): Node[] {\n        return this.nodes.filter((node: Node) => node.label);\n    }\n\n    /**\n     * Calculates the set of minimum paths.\n     * @param odPairs The O/D pairs\n     */\n    public calcShortestPaths(odPairs: OdPair[]): Observable {\n        try {\n            for (let i = 0; i  edge.label);\n    }\n\n    /**\n     * Calculates the incidence matrix of paths for O/D pairs.\n     */\n    public calcIncidenceMatrix(): Observable {\n        const edges = this.getPathsEdges();\n        for (let z = 0; z  value.edgeId == edges[m].edgeId)) {\n                        // The path crosses the edge.\n                        this.incidenceMatrix[z][n][m] = true;\n                    } else {\n                        // The path does not cross the edge.\n                        this.incidenceMatrix[z][n][m] = false;\n                    }\n                }\n            }\n        }\n        return of(null);\n    }\n\n    public getIncidenceMatrix(): boolean[][][] {\n        return this.incidenceMatrix;\n    }\n\n    /**\n     * Calculates the assignment matrix.\n     * @param odPairs The O/D pairs\n     */\n    public calcAssignmentMatrix(odPairs: OdPair[]): Observable {\n        // Calculates the probabilities of shortest paths.\n        const shortestPathsProbabilities = this.calcShortestPathsProbabilities(odPairs);\n\n        // Assignment matrix.\n        for (let z = 0; z  {\n        const edges = this.getPathsEdges();\n        for (const edge of edges) {\n            edge.calcMaxFlow(factor);\n        }\n        return of(null);\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link distance or duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param o Source node\n     * @param d Destination node\n     * @param pathType Distance or duration\n     * @param k The number of shortest paths to compute\n     * @returns The set of shortest paths\n     */\n    private ksp(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Sets to zero the count property of the nodes.\n        this.resetCount();\n        // Instantiates the heap.\n        this.heap = new Heap();\n        // Inserts the path of origin into heap with cost 0.\n        this.heap.push({ pathId: 0, node: o, edges: [], cost: 0 });\n        // Walks the graph.\n        return this.walk(o, d, pathType, k);\n    }\n\n    /**\n     * Breadth First Search (BFS) algorithm for traversing and searching tree data\n     * explores the neighbor nodes first, before moving to the next level neighbors.\n     */\n    private walk(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Set of shortest paths from origin to destination.\n        const shortestPaths: Path[] = [];\n\n        let pathId = 1;\n        let node: Node;\n        while (this.heap.getPaths().length > 0 && d.count  edge.origin.nodeId == node.nodeId) ? false : true;\n    }\n\n    private resetCount(): void {\n        for (const node of this.nodes) {\n            node.count = 0;\n        }\n    }\n\n    /**\n     * Removes the alternative paths that differ only for two links.\n     * @param shortestPaths The shortest paths as created by the algorithm\n     */\n    private filterPaths(shortestPaths: Path[]): void {\n        if (shortestPaths.length > 1) {\n            let i = 0;\n            do {\n                const pathA = shortestPaths[i].edges;\n                const pathB = shortestPaths[i + 1].edges;\n                const sharedEdges = pathA.filter((edgeOfA: Edge) =>\n                    pathB.find((edgeOfB: Edge) =>\n                        edgeOfB.edgeId == edgeOfA.edgeId));\n                if (pathA.length - sharedEdges.length  value.edgeId == edge.edgeId)) {\n                        edges.push(edge);\n                        edge.label = 'E' + count++;\n                        if (!environment.testing) {\n                            edge.drawingOptions.infowindow.setContent('Edge: ' + edge.label);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Multinomial logit model.\n     * @param odPairs The O/D pairs\n     */\n    private calcShortestPathsProbabilities(odPairs: OdPair[]): number[][] {\n        // Gets the total cost of paths.\n        const pathCosts = this.calcPathCosts(odPairs);\n        const shortestPathsProbabilities: number[][] = [];\n        // Theta parameter adjustment.\n        const parameter = uiConfig.theta * 100;\n        // Calculates numerator.\n        const exps: number[][] = [];\n        for (let z = 0; z  {\n                return value > 0 ? Math.exp(-value / parameter) : 0;\n            });\n        }\n        // Calculates denominator.\n        const sumExps: number[] = [];\n        for (let z = 0; z  a + b, 0);\n            sumExps.push(sum);\n        }\n        // Probabilities.\n        for (let z = 0; z  0 ? round(exps[z][n] / sumExps[z], 3) : 0;\n                shortestPathsProbabilities[z].push(p);\n            }\n        }\n        return shortestPathsProbabilities;\n    }\n\n    private calcPathCosts(odPairs: OdPair[]): number[][] {\n        const pathCosts: number[][] = [];\n        for (let z = 0; z \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Path.html":{"url":"interfaces/Path.html","title":"interface - Path","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Path\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/k-shortest-path.ts\n        \n\n            \n                Description\n            \n            \n                Path to generic node.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        cost\n                                \n                                \n                                        edges\n                                \n                                \n                                        node\n                                \n                                \n                                        pathId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cost\n                                    \n                                \n                                \n                                    \n                                        cost:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        edges\n                                    \n                                \n                                \n                                    \n                                        edges:     Edge[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Edge[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        node\n                                    \n                                \n                                \n                                    \n                                        node:     Node\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Node\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pathId\n                                    \n                                \n                                \n                                    \n                                        pathId:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Edge, Node } from \"./graph\";\n\n/**\n * Path to generic node.\n */\nexport interface Path {\n\n    pathId: number;\n    node: Node;\n    edges: Edge[];\n    cost: number;\n\n}\n\n/**\n * Heap data structure containing paths.\n */\nexport class Heap {\n\n    /**\n     * The queue of paths.\n     */\n    private paths: Path[] = [];\n\n    /**\n     * Inserts a path into the heap.\n     * @param path The path to insert\n     */\n    public push(path: Path): void {\n        this.paths.push({ pathId: path.pathId, node: path.node, edges: path.edges, cost: path.cost });\n    }\n\n    /**\n     * Removes a path from the heap.\n     * @param pathId The id of the path\n     */\n    public pop(pathId: number): void {\n        const index = this.paths.findIndex((path: Path) => path.pathId == pathId);\n        this.paths.splice(index, 1);\n    }\n\n    /**\n     * Returns the shortest path in the heap by cost.\n     */\n    public getShortestPath(): Path {\n        return this.paths.reduce((prev: Path, curr: Path) => prev.cost \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PeriodsChanged.html":{"url":"classes/PeriodsChanged.html","title":"class - PeriodsChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  PeriodsChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/models/actions/simulation.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/simulation/models/actions/simulation.actions.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/models/actions/simulation.actions.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : SimulationActionTypes.PeriodsChanged\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/models/actions/simulation.actions.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Simulation } from '../simulation-state';\n\n/**\n * ngrx: simulation Actions.\n */\nexport enum SimulationActionTypes {\n\n    SimulationChanged = '[Simulation] Simulation Changed',\n    SimulationEnded = '[Simulation] Simulation Ended',\n    PeriodsChanged = '[Simulation] Periods Changed',\n    Reset = '[Simulation] Reset'\n\n}\n\nexport class SimulationChanged implements Action {\n\n    public readonly type: string = SimulationActionTypes.SimulationChanged;\n\n    constructor(public payload: { simulation: Simulation }) { }\n\n}\n\nexport class SimulationEnded implements Action {\n\n    public readonly type: string = SimulationActionTypes.SimulationEnded;\n\n    constructor(public payload: boolean) { }\n\n}\n\nexport class PeriodsChanged implements Action {\n\n    public readonly type: string = SimulationActionTypes.PeriodsChanged;\n\n    constructor(public payload: any) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = SimulationActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type SimulationActions = SimulationChanged | SimulationEnded | PeriodsChanged | Reset;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PrivacyComponent.html":{"url":"components/PrivacyComponent.html","title":"component - PrivacyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PrivacyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/privacy/privacy.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-privacy\n            \n\n            \n                styleUrls\n                privacy.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./privacy.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/privacy/privacy.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/privacy/privacy.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-privacy',\n    templateUrl: './privacy.component.html',\n    styleUrls: ['./privacy.component.scss']\n})\nexport class PrivacyComponent implements OnInit {\n\n    constructor() { }\n\n    ngOnInit(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            Privacy Policy of STRADA\n        \n        \n            This privacy policy describes how your personal data are used and protected by the application\n                STRADA\n            \n            The information is provided pursuant to art. 13 of Legislative Decree no. 196/2003 and EU Regulation 2016/679\n                General Data Protection Regulation (GDPR).\n            \n            Categories of processed data\n            The app does not collect any personal data.\n            Data you provide voluntarily\n            The data and the results are displayed by the app for the time in which you remain connected, and no data is\n                in any way acquired or saved.\n            Cookies\n            The app makes no use of cookies, neither profiling nor technical.\n            External services\n            The app uses Google Maps APIs, for which please refer to its privacy policy:\n                Google Privacy Policy\n            \n        \n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Privacy Policy of STRADA                            This privacy policy describes how your personal data are used and protected by the application                STRADA                        The information is provided pursuant to art. 13 of Legislative Decree no. 196/2003 and EU Regulation 2016/679                General Data Protection Regulation (GDPR).                        Categories of processed data            The app does not collect any personal data.            Data you provide voluntarily            The data and the results are displayed by the app for the time in which you remain connected, and no data is                in any way acquired or saved.            Cookies            The app makes no use of cookies, neither profiling nor technical.            External services            The app uses Google Maps APIs, for which please refer to its privacy policy:                Google Privacy Policy                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PrivacyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Relation.html":{"url":"classes/Relation.html","title":"class - Relation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Relation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                members\n                            \n                            \n                                    Public\n                                relationId\n                            \n                            \n                                    Public\n                                tags\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(relationId: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/graph.ts:228\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        relationId\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            members\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        members:     Member[]\n\n                    \n                \n                    \n                        \n                            Type :     Member[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:226\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            relationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        relationId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:224\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tags:     Tag[]\n\n                    \n                \n                    \n                        \n                            Type :     Tag[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:228\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\n\nimport * as combine from 'mout/array/combine';\n\nimport { Heap, Path } from './k-shortest-path';\nimport { round } from '../utils';\nimport { environment } from '../../environments/environment';\nimport { uiConfig } from '../ui/ui-config';\n\nexport enum PathType {\n    distance = 'distance',\n    duration = 'duration'\n}\n\n/**\n * An O/D pair is described by the origin and destination nodes, and the type of path.\n */\nexport interface OdPair {\n\n    origin: string;\n    destination: string;\n    pathType: PathType;\n\n}\n\nexport interface LinkFlow {\n\n    /**\n     * linkFlow attribute.\n     */\n    value: number;\n    /**\n     * Variance is the inverse of density.\n     */\n    variance: number;\n\n}\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public label: string;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    public drawingOptions: { marker?: google.maps.Marker } = {};\n\n    /**\n     * Used by the k shortest path routing.\n     */\n    public count: number = 0;\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public label: string;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    /**\n     * Free flow speed (m/s).\n     */\n    public freeFlowVelocity: number;\n\n    /**\n     * Instant speed (m/s).\n     */\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    /**\n     * Number of vehicles calculated from traffic data.\n     */\n    public linkFlow: number;\n\n    /**\n     * Maximum flow of the link.\n     */\n    public maxFlow: number;\n\n    public drawingOptions: {\n        path?: google.maps.LatLng[],\n        polyline?: google.maps.Polyline,\n        marker?: google.maps.Marker,\n        infowindow?: google.maps.InfoWindow\n    } = {};\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the link flow.\n     */\n    public calcLinkFlow(): void {\n        // Min distance is 1 meter.\n        if (this.distance == 0) { this.distance = 1; }\n        // Min duration is 1 second.\n        if (this.duration == 0) {\n            this.duration = round(this.distance / (50 / 3.6)) > 1 ? round(this.distance / (50 / 3.6)) : 1;\n        }\n        // Calculates free flow velocity (m/s).\n        this.freeFlowVelocity = round(this.distance / this.duration, 2);\n        // Calculates link flow.\n        if (this.durationInTraffic > 0 && this.durationInTraffic >= this.duration) {\n            // Calculates velocity (m/s).\n            this.velocity = round(this.distance / this.durationInTraffic, 2);\n            // Calculates density.\n            this.density = round(this.getKjam() * (this.freeFlowVelocity - this.velocity) / this.freeFlowVelocity, 2);\n            // Calculates flow.\n            this.flow = round(this.density * this.velocity, 2);\n            // Calculates link flow.\n            this.linkFlow = round(this.density * this.distance);\n        } else {\n            this.velocity = 0;\n            this.density = 0;\n            this.flow = 0;\n            this.linkFlow = 0;\n        }\n    }\n\n    /**\n     * Calculates the max flow of the edge.\n     * @param factor Weather Adjustment Factor\n     */\n    public calcMaxFlow(factor: number): void {\n        const maxFlow = this.getKjam() * this.freeFlowVelocity;\n        this.maxFlow = round(maxFlow * factor, 2);\n    }\n\n    /**\n     * Gets the variance of measurement error of link flow.\n     */\n    public getVariance(): number {\n        return this.density > 0 ? round(1 / this.density, 2) : 1;\n    }\n\n    public getKjam(): number {\n        return round(1 / uiConfig.sp, 2);\n    }\n\n    protected getCapacity(timeInterval: number): number {\n        return this.maxFlow * timeInterval;\n    }\n\n    protected draw(color: string, zIndex: number = 10): void {\n        this.drawingOptions.polyline.set('strokeColor', color);\n        this.drawingOptions.polyline.set('zIndex', zIndex);\n        this.drawingOptions.marker.set('visible', true);\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    protected nodes: Node[] = [];\n\n    protected edges: Edge[] = [];\n\n    protected relations: Relation[] = [];\n\n    /**\n     * Paths for each O/D pair [pairs,paths,edges].\n     */\n    protected shortestPaths: Edge[][][] = [];\n\n    protected incidenceMatrix: boolean[][][] = [];\n\n    protected assignmentMatrix: number[][][] = [];\n\n    private heap: Heap;\n\n    /**\n     * Shortest paths drawing options.\n     */\n    private drawingOptions: {\n        polylines?: google.maps.Polyline[][];\n    } = {};\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public getEdge(edgeId: number): Edge {\n        return this.edges.find((edge: Edge) => edge.edgeId == edgeId);\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Key:oneway\n     * @param edgeId Id of the edge\n     */\n    public isOneway(edgeId: number): boolean {\n        return !!this.getEdge(edgeId).tags.find(tag => tag.key == 'oneway' && tag.value != 'no') ||\n            this.isRoundabout(edgeId);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Tag:junction%3Droundabout\n     * @param edgeId Id of the edge\n     */\n    public isRoundabout(edgeId: number): boolean {\n        return this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'roundabout') ||\n            this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'circular') ?\n            true : false;\n    }\n\n    public getOdNode(label: string): Node {\n        return this.nodes.find((node: Node) => node.label == label);\n    }\n\n    public getOdNodes(): Node[] {\n        return this.nodes.filter((node: Node) => node.label);\n    }\n\n    /**\n     * Calculates the set of minimum paths.\n     * @param odPairs The O/D pairs\n     */\n    public calcShortestPaths(odPairs: OdPair[]): Observable {\n        try {\n            for (let i = 0; i  edge.label);\n    }\n\n    /**\n     * Calculates the incidence matrix of paths for O/D pairs.\n     */\n    public calcIncidenceMatrix(): Observable {\n        const edges = this.getPathsEdges();\n        for (let z = 0; z  value.edgeId == edges[m].edgeId)) {\n                        // The path crosses the edge.\n                        this.incidenceMatrix[z][n][m] = true;\n                    } else {\n                        // The path does not cross the edge.\n                        this.incidenceMatrix[z][n][m] = false;\n                    }\n                }\n            }\n        }\n        return of(null);\n    }\n\n    public getIncidenceMatrix(): boolean[][][] {\n        return this.incidenceMatrix;\n    }\n\n    /**\n     * Calculates the assignment matrix.\n     * @param odPairs The O/D pairs\n     */\n    public calcAssignmentMatrix(odPairs: OdPair[]): Observable {\n        // Calculates the probabilities of shortest paths.\n        const shortestPathsProbabilities = this.calcShortestPathsProbabilities(odPairs);\n\n        // Assignment matrix.\n        for (let z = 0; z  {\n        const edges = this.getPathsEdges();\n        for (const edge of edges) {\n            edge.calcMaxFlow(factor);\n        }\n        return of(null);\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link distance or duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param o Source node\n     * @param d Destination node\n     * @param pathType Distance or duration\n     * @param k The number of shortest paths to compute\n     * @returns The set of shortest paths\n     */\n    private ksp(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Sets to zero the count property of the nodes.\n        this.resetCount();\n        // Instantiates the heap.\n        this.heap = new Heap();\n        // Inserts the path of origin into heap with cost 0.\n        this.heap.push({ pathId: 0, node: o, edges: [], cost: 0 });\n        // Walks the graph.\n        return this.walk(o, d, pathType, k);\n    }\n\n    /**\n     * Breadth First Search (BFS) algorithm for traversing and searching tree data\n     * explores the neighbor nodes first, before moving to the next level neighbors.\n     */\n    private walk(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Set of shortest paths from origin to destination.\n        const shortestPaths: Path[] = [];\n\n        let pathId = 1;\n        let node: Node;\n        while (this.heap.getPaths().length > 0 && d.count  edge.origin.nodeId == node.nodeId) ? false : true;\n    }\n\n    private resetCount(): void {\n        for (const node of this.nodes) {\n            node.count = 0;\n        }\n    }\n\n    /**\n     * Removes the alternative paths that differ only for two links.\n     * @param shortestPaths The shortest paths as created by the algorithm\n     */\n    private filterPaths(shortestPaths: Path[]): void {\n        if (shortestPaths.length > 1) {\n            let i = 0;\n            do {\n                const pathA = shortestPaths[i].edges;\n                const pathB = shortestPaths[i + 1].edges;\n                const sharedEdges = pathA.filter((edgeOfA: Edge) =>\n                    pathB.find((edgeOfB: Edge) =>\n                        edgeOfB.edgeId == edgeOfA.edgeId));\n                if (pathA.length - sharedEdges.length  value.edgeId == edge.edgeId)) {\n                        edges.push(edge);\n                        edge.label = 'E' + count++;\n                        if (!environment.testing) {\n                            edge.drawingOptions.infowindow.setContent('Edge: ' + edge.label);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Multinomial logit model.\n     * @param odPairs The O/D pairs\n     */\n    private calcShortestPathsProbabilities(odPairs: OdPair[]): number[][] {\n        // Gets the total cost of paths.\n        const pathCosts = this.calcPathCosts(odPairs);\n        const shortestPathsProbabilities: number[][] = [];\n        // Theta parameter adjustment.\n        const parameter = uiConfig.theta * 100;\n        // Calculates numerator.\n        const exps: number[][] = [];\n        for (let z = 0; z  {\n                return value > 0 ? Math.exp(-value / parameter) : 0;\n            });\n        }\n        // Calculates denominator.\n        const sumExps: number[] = [];\n        for (let z = 0; z  a + b, 0);\n            sumExps.push(sum);\n        }\n        // Probabilities.\n        for (let z = 0; z  0 ? round(exps[z][n] / sumExps[z], 3) : 0;\n                shortestPathsProbabilities[z].push(p);\n            }\n        }\n        return shortestPathsProbabilities;\n    }\n\n    private calcPathCosts(odPairs: OdPair[]): number[][] {\n        const pathCosts: number[][] = [];\n        for (let z = 0; z \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reset.html":{"url":"classes/Reset.html","title":"class - Reset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/models/actions/simulation.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/simulation/models/actions/simulation.actions.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/models/actions/simulation.actions.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : SimulationActionTypes.Reset\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/models/actions/simulation.actions.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Simulation } from '../simulation-state';\n\n/**\n * ngrx: simulation Actions.\n */\nexport enum SimulationActionTypes {\n\n    SimulationChanged = '[Simulation] Simulation Changed',\n    SimulationEnded = '[Simulation] Simulation Ended',\n    PeriodsChanged = '[Simulation] Periods Changed',\n    Reset = '[Simulation] Reset'\n\n}\n\nexport class SimulationChanged implements Action {\n\n    public readonly type: string = SimulationActionTypes.SimulationChanged;\n\n    constructor(public payload: { simulation: Simulation }) { }\n\n}\n\nexport class SimulationEnded implements Action {\n\n    public readonly type: string = SimulationActionTypes.SimulationEnded;\n\n    constructor(public payload: boolean) { }\n\n}\n\nexport class PeriodsChanged implements Action {\n\n    public readonly type: string = SimulationActionTypes.PeriodsChanged;\n\n    constructor(public payload: any) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = SimulationActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type SimulationActions = SimulationChanged | SimulationEnded | PeriodsChanged | Reset;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SchedulerService.html":{"url":"injectables/SchedulerService.html","title":"injectable - SchedulerService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SchedulerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/wizard/scheduler.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                reset\n                            \n                            \n                                scheduleDemand\n                            \n                            \n                                scheduleNetwork\n                            \n                            \n                                scheduleSimulation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(wizard: WizardService, map: MapService, location: LocationService, network: NetworkService, weather: WeatherService, demand: DemandService, simulation: SimulationService, clock: ClockService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/scheduler.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                    MapService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    LocationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        weather\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        demand\n                                                  \n                                                        \n                                                                    DemandService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        simulation\n                                                  \n                                                        \n                                                                    SimulationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        clock\n                                                  \n                                                        \n                                                                    ClockService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/scheduler.service.ts:29\n                            \n                        \n\n\n                \n                    \n                            Resets the whole application.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scheduleDemand\n                            \n                            \n                        \n                    \n                \n                \n                    \nscheduleDemand(data: any, index: number, nextIndex: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/scheduler.service.ts:125\n                            \n                        \n\n\n                \n                    \n                            Performs in sequence the following operations:\n\nCalcs shortest paths\nCalcs incidence matrix\nCalcs assignment matrix\nGets traffic data\nCalcs link flows\nCalcs O/D matrix\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        nextIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scheduleNetwork\n                            \n                            \n                        \n                    \n                \n                \n                    \nscheduleNetwork(data: any, index: number, nextIndex: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/scheduler.service.ts:53\n                            \n                        \n\n\n                \n                    \n                            Performs in sequence the following operations:\n\nGets network\nCreates the graph\nGets network data\nAssociates data to the graph\nCorrects graph data\nGets and updates weather data\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        nextIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scheduleSimulation\n                            \n                            \n                        \n                    \n                \n                \n                    \nscheduleSimulation(data: any, index: number, nextIndex: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/scheduler.service.ts:181\n                            \n                        \n\n\n                \n                    \n                            Performs in sequence the following operations:\n\nCalcs max flow for each edge.\nInits the simulation.\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        nextIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { switchMap } from \"rxjs/operators\";\n\nimport { WizardService } from \"./wizard.service\";\nimport { MapService } from \"../map/map.service\";\nimport { LocationService } from \"../../location/location.service\";\nimport { NetworkService } from \"../../network/network.service\";\nimport { WeatherService } from \"../../network/weather/weather.service\";\nimport { DemandService } from \"../../demand/demand.service\";\nimport { SimulationService } from \"../../simulation/simulation.service\";\nimport { ClockService } from \"../../simulation/clock.service\";\n\n@Injectable() export class SchedulerService {\n\n    constructor(\n        private wizard: WizardService,\n        private map: MapService,\n        private location: LocationService,\n        private network: NetworkService,\n        private weather: WeatherService,\n        private demand: DemandService,\n        private simulation: SimulationService,\n        private clock: ClockService\n    ) { }\n\n    /**\n     * Resets the whole application.\n     */\n    public reset(): void {\n        setTimeout(() => {\n            // Wizard.\n            this.wizard.reset();\n            // Services.\n            this.map.reset();\n            this.location.reset();\n            this.network.reset();\n            this.weather.reset();\n            this.demand.reset();\n            this.simulation.reset();\n            this.clock.reset();\n        });\n    }\n\n    /**\n     * Performs in sequence the following operations:\n     * - Gets network\n     * - Creates the graph\n     * - Gets network data\n     * - Associates data to the graph\n     * - Corrects graph data\n     * - Gets and updates weather data\n     */\n    scheduleNetwork(data: any, index: number, nextIndex: number): void {\n        this.wizard.putOnHold('Getting the network');\n        const stream = this.network.getNetwork().pipe(\n            switchMap((response: any) => {\n                this.wizard.putOnHold('Creating the graph');\n                return this.network.createGraph(response);\n            }),\n            switchMap(() => {\n                this.wizard.putOnHold('Getting network data');\n                return this.network.getNetworkData();\n            }),\n            switchMap((response: any) => {\n                this.wizard.putOnHold('Updating the graph');\n                return this.network.updateGraph(response);\n            }),\n            switchMap(() => {\n                this.wizard.putOnHold('Checking the data');\n                return this.network.correctGraph();\n            }),\n            switchMap(() => {\n                this.wizard.putOnHold('Getting weather data');\n                return this.weather.getWeatherData(this.network.getTime());\n            }),\n            switchMap((response: any) => {\n                return this.weather.updateWeatherData(response, this.network.getTime());\n            })\n        );\n\n        stream.subscribe(\n            () => { },\n            (error: any) => {\n                let message: string;\n                switch (error) {\n                    case 'getNetwork':\n                        message = 'Network cannot be retrieved. Check your Internet connection and try again';\n                        break;\n                    case 'createGraph':\n                        message = 'Graph cannnot be created. Please, try with another area';\n                        break;\n                    case 'getNetworkData':\n                        message = 'Network data cannot be retrieved. Past the quota limits traffic data become paid.' +\n                            'This is an open source project: install your own version of it';\n                        break;\n                    case 'correctGraph':\n                        message = 'Graph data are not available. Please, try with another area';\n                        break;\n                    case 'getWeatherData':\n                        message = 'Weather data cannot be retrieved. Please, try at another time';\n                        break;\n                    default:\n                        message = 'Unexpected error';\n                }\n                this.wizard.putInError(message);\n                this.reset();\n            },\n            () => {\n                // Removes from waiting.\n                this.wizard.removeFromWaiting();\n                this.wizard.goOn(data, index, nextIndex);\n            }\n        );\n    }\n\n    /**\n     * Performs in sequence the following operations:\n     * - Calcs shortest paths\n     * - Calcs incidence matrix\n     * - Calcs assignment matrix\n     * - Gets traffic data\n     * - Calcs link flows\n     * - Calcs O/D matrix\n     */\n    scheduleDemand(data: any, index: number, nextIndex: number): void {\n        const graph = this.network.getGraph();\n        const odPairs = this.network.getOdPairs();\n\n        this.wizard.putOnHold('Computing shortest paths');\n        const stream = graph.calcShortestPaths(odPairs).pipe(\n            switchMap(() => {\n                return graph.calcIncidenceMatrix();\n            }),\n            switchMap(() => {\n                return graph.calcAssignmentMatrix(odPairs);\n            }),\n            switchMap(() => {\n                this.wizard.putOnHold('Getting traffic data');\n                return this.network.getTrafficData();\n            }),\n            switchMap((response: any) => {\n                return this.network.calcLinkFlows(response);\n            }),\n            switchMap(() => {\n                this.wizard.putOnHold('Computing demand');\n                return this.demand.calcOdMatrix();\n            })\n        );\n\n        stream.subscribe(\n            () => { },\n            (error: any) => {\n                let message: string;\n                switch (error) {\n                    case 'calcShortestPaths':\n                        message = 'There are no routes. Please, try with another area';\n                        break;\n                    case 'getTrafficData':\n                        message = 'Traffic data cannot be retrieved. Past the quota limits traffic data become paid.' +\n                            'This is an open source project: install your own version of it';\n                        break;\n                    default:\n                        message = 'Unexpected error';\n                }\n                this.wizard.putInError(message);\n                this.reset();\n            },\n            () => {\n                // Removes from waiting.\n                this.wizard.removeFromWaiting();\n                this.wizard.goOn(data, index, nextIndex);\n            }\n        );\n    }\n\n    /**\n     * Performs in sequence the following operations:\n     * - Calcs max flow for each edge.\n     * - Inits the simulation.\n     */\n    scheduleSimulation(data: any, index: number, nextIndex: number): void {\n        const graph = this.network.getGraph();\n        const factors = this.weather.getFactors();\n\n        this.wizard.putOnHold('Computing max flows');\n        const stream = graph.calcMaxflows(factors[0]).pipe(\n            switchMap(() => {\n                this.wizard.putOnHold('Initializing simulation');\n                return this.simulation.init();\n            })\n        );\n\n        stream.subscribe(\n            () => { },\n            (error: any) => {\n                let message: string;\n                switch (error) {\n                    default:\n                        message = 'Unexpected error';\n                }\n                this.wizard.putInError(message);\n                this.reset();\n            },\n            () => {\n                // Removes from waiting.\n                this.wizard.removeFromWaiting();\n                this.wizard.goOn(data, index, nextIndex);\n            }\n        );\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchForTheAreaComponent.html":{"url":"components/SearchForTheAreaComponent.html","title":"component - SearchForTheAreaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SearchForTheAreaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-search-for-the-area\n            \n\n            \n                styleUrls\n                search-for-the-area.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./search-for-the-area.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentPosition\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                search\n                            \n                            \n                                sendActions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(wizard: WizardService, location: LocationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    LocationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCurrentPosition\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCurrentPosition()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            search\n                            \n                            \n                        \n                    \n                \n                \n                    \nsearch(address: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        address\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { WizardService } from '../wizard.service';\nimport { LocationService } from '../../../location/location.service';\n\nimport { BaseComponent } from '../../models/base.component';\n\n@Component({\n    selector: 'wizard-search-for-the-area',\n    templateUrl: './search-for-the-area.component.html',\n    styleUrls: ['./search-for-the-area.component.scss']\n})\nexport class SearchForTheAreaComponent extends BaseComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    constructor(\n        private wizard: WizardService,\n        private location: LocationService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.valueChanges();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        // Updates location service data on value changes.\n        this.subscriptions.push(this.formGroup.get('center').valueChanges.subscribe(\n            (center: google.maps.LatLngLiteral) => {\n                this.location.setLatLng(center);\n            }\n        ));\n    }\n\n    receiveActions(): void {\n        //\n    }\n\n    sendActions(): void {\n        //\n    }\n\n    search(address: string): void {\n        if (!!address) {\n            // Updates pending state.\n            this.wizard.putOnHold('Searching address');\n            // Converts the address into geographic coordinates.\n            this.location.codeAddress(address).forEach(\n                (results: google.maps.GeocoderResult[]) => {\n                    this.formGroup.get('center').setValue({\n                        lat: results[0].geometry.location.lat(),\n                        lng: results[0].geometry.location.lng()\n                    });\n                    // Updates step state.\n                    this.wizard.updateStep(this.formGroup.value, this.index);\n                })\n                .then()\n                .catch((error: google.maps.GeocoderStatus) => {\n                    if (error === google.maps.GeocoderStatus.ZERO_RESULTS) {\n                        // Updates error state.\n                        this.wizard.putInError('Zero results');\n                    } else {\n                        // INVALID_REQUEST, OVER_QUERY_LIMIT, REQUEST_DENIED, UNKNOWN_ERROR\n                        // Updates error state.\n                        this.wizard.putInError('Invalid request');\n                    }\n                });\n        }\n    }\n\n    getCurrentPosition(): void {\n        if (navigator.geolocation) {\n            // Updates pending state.\n            this.wizard.putOnHold('Getting position');\n            this.location.getCurrentPosition().subscribe(\n                (position: Position) => {\n                    this.formGroup.get('center').setValue({ lat: position.coords.latitude, lng: position.coords.longitude });\n                    // Updates step state.\n                    this.wizard.updateStep(this.formGroup.value, this.index);\n                },\n                (error: PositionError) => {\n                    if (error.code > 0) {\n                        let message: string;\n                        switch (error.code) {\n                            case error.PERMISSION_DENIED:\n                                message = 'Permission denied';\n                                break;\n                            case error.POSITION_UNAVAILABLE:\n                                message = 'Position unavailable';\n                                break;\n                            case error.TIMEOUT:\n                                message = 'Position timeout';\n                                break;\n                        }\n                        // Updates error state.\n                        this.wizard.putInError(message);\n                    }\n                });\n\n        } else {\n            // Updates error state.\n            this.wizard.putInError(\"Browser doesn't support geolocation\");\n        }\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n            \n                search\n            \n        \n        Get current position\n    \n\n    \n        Continue\n            navigate_next\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    search                            Get current position                Continue            navigate_next            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchForTheAreaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectionOfTheAreaComponent.html":{"url":"components/SelectionOfTheAreaComponent.html","title":"component - SelectionOfTheAreaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SelectionOfTheAreaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-selection-of-the-area\n            \n\n            \n                styleUrls\n                selection-of-the-area.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./selection-of-the-area.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, wizard: WizardService, network: NetworkService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n\n                \n                    \n                        getmin()\n                    \n                \n                            \n                                \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:28\n                                \n                            \n                    \n                        \n                                Min moment: current time.\n\n\n                                \n                                    Returns :     Date\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n\n                \n                    \n                        getmax()\n                    \n                \n                            \n                                \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:35\n                                \n                            \n                    \n                        \n                                Max moment: current day.\n\n\n                                \n                                    Returns :     Date\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { WizardService } from '../wizard.service';\nimport { NetworkService } from '../../../network/network.service';\nimport * as fromUi from '../../models/reducers';\nimport { Map } from '../../models/ui-state';\nimport { uiConfig } from '../../ui-config';\n\nimport { BaseComponent } from '../../models/base.component';\n\n@Component({\n    selector: 'wizard-selection-of-the-area',\n    templateUrl: './selection-of-the-area.component.html',\n    styleUrls: ['./selection-of-the-area.component.scss']\n})\nexport class SelectionOfTheAreaComponent extends BaseComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    /**\n     * Min moment: current time.\n     */\n    get min(): Date {\n        return new Date();\n    }\n\n    /**\n     * Max moment: current day.\n     */\n    get max(): Date {\n        return new Date(\n            this.min.getFullYear(),\n            this.min.getMonth(),\n            this.min.getDate(),\n            this.min.getHours() + uiConfig.timeLimit,\n            this.min.getMinutes()\n        );\n    }\n\n    constructor(\n        private store: Store,\n        private wizard: WizardService,\n        private network: NetworkService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.valueChanges();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        // Updates network service data on value changes.\n        this.subscriptions.push(this.formGroup.get('bounds').valueChanges.subscribe(\n            (bounds: google.maps.LatLngBoundsLiteral) => {\n                this.network.setBounds(bounds);\n            }\n        ));\n        this.subscriptions.push(this.formGroup.get('time').valueChanges.subscribe(\n            (time: Date) => {\n                this.network.setTime(time);\n            }\n        ));\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.map)).subscribe((map: Map) => {\n            if (map && map.data.bounds) {\n                this.formGroup.get('bounds').setValue(map.data.bounds);\n            }\n        }));\n    }\n\n    sendActions(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n            \n                calendar_today\n            \n            Optional. Leave it empty for the current time\n            \n                \n                \n                    Please, enter a time between the current time and the next 24 hours\n                \n                \n                    Please, insert a valid time or select it\n                \n            \n        \n        \n    \n\n    \n        Continue\n            navigate_next\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    calendar_today                        Optional. Leave it empty for the current time                                                                Please, enter a time between the current time and the next 24 hours                                                    Please, insert a valid time or select it                                                            Continue            navigate_next            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SelectionOfTheAreaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n  Modules\n  SharedModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nFooterComponent\n\nFooterComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nFooterComponent->SharedModule\n\n\n\n\n\nInfoDialogComponent\n\nInfoDialogComponent\n\nSharedModule -->\n\nInfoDialogComponent->SharedModule\n\n\n\n\n\nMessageArchivedComponent\n\nMessageArchivedComponent\n\nSharedModule -->\n\nMessageArchivedComponent->SharedModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nSharedModule->FooterComponent \n\n\n\n\n\nInfoDialogComponent \n\nInfoDialogComponent \n\nInfoDialogComponent  -->\n\nSharedModule->InfoDialogComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nMessageArchivedComponent \n\nMessageArchivedComponent \n\nMessageArchivedComponent  -->\n\nSharedModule->MessageArchivedComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                FooterComponent\n                            \n                            \n                                InfoDialogComponent\n                            \n                            \n                                MessageArchivedComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                InfoDialogComponent\n                            \n                            \n                                MessageArchivedComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    MaterialModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    FooterComponent\n                            \n                            \n                                    InfoDialogComponent\n                            \n                            \n                                    MaterialModule\n                            \n                            \n                                    MessageArchivedComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { MaterialModule } from './material.module';\n\nimport { FooterComponent } from './footer/footer.component';\nimport { MessageArchivedComponent } from './message-archived.component';\nimport { InfoDialogComponent } from './info-dialog.component';\n\nimport { CanDeactivateGuard } from './can-deactivate-guard.service';\n\nconst sharedModules: any[] = [\n    CommonModule,\n    RouterModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    FlexLayoutModule\n];\n\n@NgModule({\n    entryComponents: [\n        MessageArchivedComponent,\n        InfoDialogComponent\n    ],\n    declarations: [\n        FooterComponent,\n        MessageArchivedComponent,\n        InfoDialogComponent\n    ],\n    imports: sharedModules,\n    exports: [\n        sharedModules,\n        FooterComponent,\n        MessageArchivedComponent,\n        InfoDialogComponent\n    ]\n})\nexport class SharedModule {\n    public static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: SharedModule,\n            providers: [\n                CanDeactivateGuard\n            ]\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Simulation.html":{"url":"interfaces/Simulation.html","title":"interface - Simulation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Simulation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/models/simulation-state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        counts\n                                \n                                \n                                        data\n                                \n                                \n                                        speed\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        counts\n                                    \n                                \n                                \n                                    \n                                        counts:     Counts\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Counts\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Simulation counts.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     NumericalSimulation[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     NumericalSimulation[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Simulation data.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        speed\n                                    \n                                \n                                \n                                    \n                                        speed:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Simulation avg. speed.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface NumericalSimulation {\n\n    edge: string;\n    wayName: string;\n    trafficVolume: number;\n    trafficCount: number;\n    delay: number | string;\n    stops: number;\n\n}\n\nexport interface Counts {\n\n    startedVehicles: number;\n    arrivedVehicles: number;\n\n}\n\nexport interface Simulation {\n\n    /**\n     * Simulation data.\n     */\n    data: NumericalSimulation[];\n    /**\n     * Simulation counts.\n     */\n    counts: Counts;\n    /**\n     * Simulation avg. speed.\n     */\n    speed: number;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SimulationChanged.html":{"url":"classes/SimulationChanged.html","title":"class - SimulationChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SimulationChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/models/actions/simulation.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/simulation/models/actions/simulation.actions.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/models/actions/simulation.actions.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : SimulationActionTypes.SimulationChanged\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/models/actions/simulation.actions.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Simulation } from '../simulation-state';\n\n/**\n * ngrx: simulation Actions.\n */\nexport enum SimulationActionTypes {\n\n    SimulationChanged = '[Simulation] Simulation Changed',\n    SimulationEnded = '[Simulation] Simulation Ended',\n    PeriodsChanged = '[Simulation] Periods Changed',\n    Reset = '[Simulation] Reset'\n\n}\n\nexport class SimulationChanged implements Action {\n\n    public readonly type: string = SimulationActionTypes.SimulationChanged;\n\n    constructor(public payload: { simulation: Simulation }) { }\n\n}\n\nexport class SimulationEnded implements Action {\n\n    public readonly type: string = SimulationActionTypes.SimulationEnded;\n\n    constructor(public payload: boolean) { }\n\n}\n\nexport class PeriodsChanged implements Action {\n\n    public readonly type: string = SimulationActionTypes.PeriodsChanged;\n\n    constructor(public payload: any) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = SimulationActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type SimulationActions = SimulationChanged | SimulationEnded | PeriodsChanged | Reset;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SimulationComponent.html":{"url":"components/SimulationComponent.html","title":"component - SimulationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SimulationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/simulation/simulation.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-simulation\n            \n\n            \n                styleUrls\n                simulation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./simulation.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                avgSpeed\n                            \n                            \n                                control\n                            \n                            \n                                counts\n                            \n                            \n                                endSimulation\n                            \n                            \n                                simulatedTimeInterval\n                            \n                            \n                                simulatedTimePeriod\n                            \n                            \n                                timeInterval\n                            \n                            \n                                timePeriod\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                pressControl\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, wizard: WizardService, clock: ClockService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/simulation/simulation.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        clock\n                                                  \n                                                        \n                                                                    ClockService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:24\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pressControl\n                            \n                            \n                        \n                    \n                \n                \n                    \npressControl(control: Control)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:101\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        control\n                                                        \n                                                                    Control\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:97\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            avgSpeed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        avgSpeed:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            control\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        control:     \n\n                    \n                \n                    \n                        \n                            Default value : Control\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            counts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        counts:     Counts\n\n                    \n                \n                    \n                        \n                            Type :     Counts\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            endSimulation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        endSimulation:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            simulatedTimeInterval\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        simulatedTimeInterval:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            simulatedTimePeriod\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        simulatedTimePeriod:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeInterval\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timeInterval:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timePeriod\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timePeriod:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { WizardService } from '../wizard.service';\nimport { ClockService, Control } from '../../../simulation/clock.service';\nimport * as fromSimulation from '../../../simulation/models/reducers';\nimport { Simulation, Counts } from '../../../simulation/models/simulation-state';\nimport { toSeconds, formatTimeFromSeconds, formatTimeFromMilliseconds } from '../../utils';\nimport { uiConfig } from '../../ui-config';\n\nimport { BaseComponent } from '../../models/base.component';\n\n@Component({\n    selector: 'wizard-simulation',\n    templateUrl: './simulation.component.html',\n    styleUrls: ['./simulation.component.scss']\n})\nexport class SimulationComponent extends BaseComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    timeInterval: number;\n\n    timePeriod: string;\n\n    simulatedTimeInterval: number;\n\n    simulatedTimePeriod: string;\n\n    counts: Counts;\n\n    avgSpeed: number;\n\n    endSimulation: boolean;\n\n    control: typeof Control = Control;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private store: Store,\n        private wizard: WizardService,\n        private clock: ClockService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.valueChanges();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        //\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromSimulation.periods)).subscribe((periods: any) => {\n            if (periods) {\n                if (typeof periods.timeInterval !== \"undefined\") {\n                    this.timeInterval = periods.timeInterval;\n                }\n                if (typeof periods.timePeriods !== \"undefined\") {\n                    this.timePeriod = formatTimeFromSeconds(periods.timePeriods[periods.timePeriods.length - 1]);\n                }\n                if (typeof periods.simulatedTimeInterval !== \"undefined\") {\n                    this.simulatedTimeInterval = toSeconds(periods.simulatedTimeInterval);\n                } else {\n                    this.simulatedTimeInterval = toSeconds(uiConfig.simulatedTimeInterval);\n                }\n                if (typeof periods.simulatedTimePeriod !== \"undefined\") {\n                    this.simulatedTimePeriod = formatTimeFromMilliseconds(periods.simulatedTimePeriod);\n                } else {\n                    this.simulatedTimePeriod = formatTimeFromMilliseconds(0);\n                }\n            }\n        }));\n        this.subscriptions.push(this.store.pipe(select(fromSimulation.simulation)).subscribe((simulation: Simulation) => {\n            if (simulation && simulation.counts) {\n                this.counts = simulation.counts;\n            }\n            if (simulation && simulation.speed) {\n                this.avgSpeed = simulation.speed;\n            }\n        }));\n        this.subscriptions.push(this.store.pipe(select(fromSimulation.end)).subscribe((end: boolean) => {\n            this.endSimulation = end;\n            this.avgSpeed = 0;\n            this.formGroup.get('endSimulation').setValue(end);\n        }));\n    }\n\n    sendActions(): void {\n        //\n    }\n\n    pressControl(control: Control): void {\n        this.clock.pressControl(control);\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    \n                        stop\n                    \n                \n                \n                    \n                        play_arrow\n                    \n                \n                \n                    \n                        pause\n                    \n                \n            \n            \n                \n                    \n                        fast_rewind\n                    \n                \n                \n                    \n                        skip_next\n                    \n                \n                \n                    \n                        fast_forward\n                    \n                \n            \n        \n        \n        \n            Time interval: {{ timeInterval }} s\n            Time period: {{ timePeriod }}\n            Simulated time interval: {{ simulatedTimeInterval }} s\n            Simulated time period: {{ simulatedTimePeriod }}\n        \n        \n        \n            Started vehicles: {{ counts?.startedVehicles || 0 }}\n            Arrived vehicles: {{ counts?.arrivedVehicles || 0 }}\n        \n        \n        \n            Avg. speed: {{ avgSpeed || 0 }} m/s\n        \n    \n\n    \n        Continue\n            navigate_next\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    stop                                                                                                play_arrow                                                                                                pause                                                                                                                        fast_rewind                                                                                                skip_next                                                                                                fast_forward                                                                                    Time interval: {{ timeInterval }} s            Time period: {{ timePeriod }}            Simulated time interval: {{ simulatedTimeInterval }} s            Simulated time period: {{ simulatedTimePeriod }}                                    Started vehicles: {{ counts?.startedVehicles || 0 }}            Arrived vehicles: {{ counts?.arrivedVehicles || 0 }}                                    Avg. speed: {{ avgSpeed || 0 }} m/s                        Continue            navigate_next            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SimulationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SimulationEnded.html":{"url":"classes/SimulationEnded.html","title":"class - SimulationEnded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SimulationEnded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/models/actions/simulation.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/simulation/models/actions/simulation.actions.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/models/actions/simulation.actions.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : SimulationActionTypes.SimulationEnded\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/models/actions/simulation.actions.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Simulation } from '../simulation-state';\n\n/**\n * ngrx: simulation Actions.\n */\nexport enum SimulationActionTypes {\n\n    SimulationChanged = '[Simulation] Simulation Changed',\n    SimulationEnded = '[Simulation] Simulation Ended',\n    PeriodsChanged = '[Simulation] Periods Changed',\n    Reset = '[Simulation] Reset'\n\n}\n\nexport class SimulationChanged implements Action {\n\n    public readonly type: string = SimulationActionTypes.SimulationChanged;\n\n    constructor(public payload: { simulation: Simulation }) { }\n\n}\n\nexport class SimulationEnded implements Action {\n\n    public readonly type: string = SimulationActionTypes.SimulationEnded;\n\n    constructor(public payload: boolean) { }\n\n}\n\nexport class PeriodsChanged implements Action {\n\n    public readonly type: string = SimulationActionTypes.PeriodsChanged;\n\n    constructor(public payload: any) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = SimulationActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type SimulationActions = SimulationChanged | SimulationEnded | PeriodsChanged | Reset;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SimulationModule.html":{"url":"modules/SimulationModule.html","title":"module - SimulationModule","body":"\n                   \n\n\n\n\n  Modules\n  SimulationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SimulationModule\n\n\n\ncluster_SimulationModule_providers\n\n\n\n\nClockService\n\nClockService\n\n\n\nSimulationModule\n\nSimulationModule\n\nSimulationModule -->\n\nClockService->SimulationModule\n\n\n\n\n\nSimulationService\n\nSimulationService\n\nSimulationModule -->\n\nSimulationService->SimulationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/simulation/simulation.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     ClockService\n                            \n                            \n                                     SimulationService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { StoreModule } from \"@ngrx/store\";\n\nimport { SimulationService } from './simulation.service';\nimport { ClockService } from './clock.service';\nimport { reducers } from './models/reducers';\n\n@NgModule({\n    imports: [\n        StoreModule.forFeature('simulation', reducers)\n    ],\n    declarations: [],\n    providers: [SimulationService, ClockService]\n})\nexport class SimulationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SimulationState.html":{"url":"interfaces/SimulationState.html","title":"interface - SimulationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SimulationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/models/reducers.ts\n        \n\n            \n                Description\n            \n            \n                Simulation state management.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        simulation\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        simulation\n                                    \n                                \n                                \n                                    \n                                        simulation:     fromSimulation.SimulationState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromSimulation.SimulationState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, createFeatureSelector, createSelector, MemoizedSelector } from \"@ngrx/store\";\n\nimport * as fromSimulation from './reducers/simulation.reducer';\nimport { Simulation } from \"./simulation-state\";\n\n/**\n * Simulation state management.\n */\nexport interface SimulationState {\n\n    simulation: fromSimulation.SimulationState;\n\n}\n\nexport const reducers: ActionReducerMap = {\n    simulation: fromSimulation.simulationReducer\n};\n\nexport const featureSimulationState: MemoizedSelector = createFeatureSelector('simulation');\n\n/**\n * Exports the simulation state.\n */\nexport const simulationState: MemoizedSelector = createSelector(\n    featureSimulationState,\n    (state: SimulationState) => state.simulation\n);\n\nexport const simulation: MemoizedSelector = createSelector(\n    simulationState,\n    fromSimulation.getSimulation\n);\n\n/**\n * Exports the end state.\n */\nexport const end: MemoizedSelector = createSelector(\n    simulationState,\n    fromSimulation.getEnd\n);\n\n/**\n * Exports the periods state.\n */\nexport const periods: MemoizedSelector = createSelector(\n    simulationState,\n    fromSimulation.getPeriods\n);\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Statistics.html":{"url":"classes/Statistics.html","title":"class - Statistics","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Statistics\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/statistics.ts\n        \n\n            \n                Description\n            \n            \n                Extracts statistics from the graph.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getBusiestEdge\n                            \n                            \n                                    Static\n                                getBusiestEdgeCapacity\n                            \n                            \n                                    Static\n                                getBusiestEdgeData\n                            \n                            \n                                    Static\n                                getBusiestEdgeDelay\n                            \n                            \n                                    Static\n                                getBusiestEdgeLabel\n                            \n                            \n                                    Static\n                                getHeavyTrafficData\n                            \n                            \n                                    Private\n                                    Static\n                                getHeavyTrafficEdges\n                            \n                            \n                                    Static\n                                getHeavyTrafficLabels\n                            \n                            \n                                    Private\n                                    Static\n                                getModerateTrafficEdges\n                            \n                            \n                                    Static\n                                getModerateTrafficLabels\n                            \n                            \n                                    Static\n                                getModerateyTrafficData\n                            \n                            \n                                    Private\n                                    Static\n                                getTrafficVolumes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getBusiestEdge\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBusiestEdge(edges: LtmEdge[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edges\n                                                        \n                                                                    LtmEdge[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     LtmEdge\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getBusiestEdgeCapacity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBusiestEdgeCapacity(edge: LtmEdge)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edge\n                                                        \n                                                                    LtmEdge\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getBusiestEdgeData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBusiestEdgeData(edge: LtmEdge)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edge\n                                                        \n                                                                    LtmEdge\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getBusiestEdgeDelay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBusiestEdgeDelay(edge: LtmEdge, timePeriods: number[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edge\n                                                        \n                                                                    LtmEdge\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        timePeriods\n                                                        \n                                                                    number[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getBusiestEdgeLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBusiestEdgeLabel(edge: LtmEdge)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edge\n                                                        \n                                                                    LtmEdge\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getHeavyTrafficData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getHeavyTrafficData(edges: LtmEdge[], timeInterval: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edges\n                                                        \n                                                                    LtmEdge[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        timeInterval\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            getHeavyTrafficEdges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getHeavyTrafficEdges(edges: LtmEdge[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edges\n                                                        \n                                                                    LtmEdge[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     LtmEdge[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getHeavyTrafficLabels\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getHeavyTrafficLabels(edges: LtmEdge[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edges\n                                                        \n                                                                    LtmEdge[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            getModerateTrafficEdges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getModerateTrafficEdges(edges: LtmEdge[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edges\n                                                        \n                                                                    LtmEdge[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     LtmEdge[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getModerateTrafficLabels\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getModerateTrafficLabels(edges: LtmEdge[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edges\n                                                        \n                                                                    LtmEdge[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getModerateyTrafficData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getModerateyTrafficData(edges: LtmEdge[], timeInterval: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edges\n                                                        \n                                                                    LtmEdge[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        timeInterval\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            getTrafficVolumes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getTrafficVolumes(edge: LtmEdge)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edge\n                                                        \n                                                                    LtmEdge\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { LtmEdge } from \"./ltm-graph\";\n\n/**\n * Extracts statistics from the graph.\n */\nexport class Statistics {\n\n    public static getHeavyTrafficLabels(edges: LtmEdge[]): string[] {\n        return this.getHeavyTrafficEdges(edges).map((edge: LtmEdge) => edge.label);\n    }\n\n    public static getModerateTrafficLabels(edges: LtmEdge[]): string[] {\n        return this.getModerateTrafficEdges(edges).map((edge: LtmEdge) => edge.label);\n    }\n\n    public static getHeavyTrafficData(edges: LtmEdge[], timeInterval: number): number[] {\n        return this.getHeavyTrafficEdges(edges).map((edge: LtmEdge) => edge.heavyTrafficCount * timeInterval);\n    }\n\n    public static getModerateyTrafficData(edges: LtmEdge[], timeInterval: number): number[] {\n        return this.getModerateTrafficEdges(edges).map((edge: LtmEdge) => edge.moderateTrafficCount * timeInterval);\n    }\n\n    public static getBusiestEdge(edges: LtmEdge[]): LtmEdge {\n        return edges.reduce((prev: LtmEdge, curr: LtmEdge) =>\n            prev.heavyTrafficCount + prev.moderateTrafficCount > curr.heavyTrafficCount + curr.moderateTrafficCount ? prev : curr\n        );\n    }\n\n    public static getBusiestEdgeLabel(edge: LtmEdge): string {\n        return edge.label;\n    }\n\n    public static getBusiestEdgeData(edge: LtmEdge): number[] {\n        return this.getTrafficVolumes(edge);\n    }\n\n    public static getBusiestEdgeCapacity(edge: LtmEdge): number {\n        return Math.trunc(edge.maxFlow * edge.duration) > 1 ?\n            Math.trunc(edge.maxFlow * edge.duration) + 1 :\n            1;\n    }\n\n    public static getBusiestEdgeDelay(edge: LtmEdge, timePeriods: number[]): number {\n        const trafficVolumes = this.getTrafficVolumes(edge);\n\n        let i = 0;\n        let first: number;\n        let last: number;\n        do {\n            if (trafficVolumes[i] > 0 && first == null) {\n                first = i;\n            }\n            if (trafficVolumes[i] > 0) {\n                last = i + 1;\n            }\n            i++;\n        } while (i  Math.abs(curr - targetTime)  edge.heavyTrafficCount > 0);\n    }\n\n    private static getModerateTrafficEdges(edges: LtmEdge[]): LtmEdge[] {\n        return edges.filter((edge: LtmEdge) => edge.moderateTrafficCount > 0);\n    }\n\n    private static getTrafficVolumes(edge: LtmEdge): number[] {\n        return edge.upstream.map((value: number, i: number) => value - edge.downstream[i]);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatisticsComponent.html":{"url":"components/StatisticsComponent.html","title":"component - StatisticsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StatisticsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/statistics/statistics.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-statistics\n            \n\n            \n                styleUrls\n                statistics.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./statistics.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                totalProcessingTime\n                            \n                            \n                                totalSimulatedTime\n                            \n                            \n                                totalTime\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, wizard: WizardService, simulation: SimulationService, clock: ClockService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/statistics/statistics.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        simulation\n                                                  \n                                                        \n                                                                    SimulationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        clock\n                                                  \n                                                        \n                                                                    ClockService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalProcessingTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        totalProcessingTime:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalSimulatedTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        totalSimulatedTime:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        totalTime:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { WizardService } from '../wizard.service';\nimport { SimulationService } from '../../../simulation/simulation.service';\nimport { ClockService } from '../../../simulation/clock.service';\nimport * as fromUi from '../../models/reducers';\nimport { formatTimeFromSeconds, formatTimeFromMilliseconds } from '../../utils';\n\nimport { BaseComponent } from '../../models/base.component';\n\n@Component({\n    selector: 'wizard-statistics',\n    templateUrl: './statistics.component.html',\n    styleUrls: ['./statistics.component.scss']\n})\nexport class StatisticsComponent extends BaseComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    totalTime: string;\n\n    totalSimulatedTime: string;\n\n    totalProcessingTime: string;\n\n    constructor(\n        private store: Store,\n        private wizard: WizardService,\n        private simulation: SimulationService,\n        private clock: ClockService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.valueChanges();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        //\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.currentStep)).subscribe((currentStep: number) => {\n            switch (currentStep) {\n                case this.index:\n                    const simulationStatistics = this.simulation.getStatistics();\n                    const clockStatistics = this.clock.getStatistics();\n                    this.totalTime = formatTimeFromSeconds(simulationStatistics.totalTime);\n                    this.totalSimulatedTime = formatTimeFromMilliseconds(clockStatistics.totalSimulatedTime);\n                    this.totalProcessingTime = formatTimeFromMilliseconds(clockStatistics.totalProcessingTime);\n                    break;\n            }\n        }));\n    }\n\n    sendActions(): void {\n        //\n    }\n}\n\n    \n\n    \n        \n    \n        Total time: {{ totalTime }}\n        Total simulated time: {{ totalSimulatedTime }}\n        Total processing time: {{ totalProcessingTime }}\n    \n\n    \n        Exit\n            navigate_next\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Total time: {{ totalTime }}        Total simulated time: {{ totalSimulatedTime }}        Total processing time: {{ totalProcessingTime }}                Exit            navigate_next            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatisticsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Step.html":{"url":"interfaces/Step.html","title":"interface - Step","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Step\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/ui-state.ts\n        \n\n            \n                Description\n            \n            \n                Step model.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Form model data.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Step {\n\n    /**\n     * Form model data.\n     */\n    data: any;\n\n}\n\n/**\n * Map model.\n */\nexport interface Map {\n\n    /**\n     * Map data.\n     */\n    data: any;\n\n}\n\n/**\n * Initial steps.\n */\nexport const STEPS: Step[] = [];\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StepChanged.html":{"url":"classes/StepChanged.html","title":"class - StepChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  StepChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/actions/wizard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/models/actions/wizard.actions.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : WizardActionTypes.StepChanged\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Step } from '../ui-state';\n\n/**\n * ngrx: wizard Actions.\n */\nexport enum WizardActionTypes {\n\n    StepChanged = '[Wizard] Step Changed',\n    StepError = '[Wizard] Step Error',\n    StepPending = '[Wizard] Step Pending',\n    GoOn = '[Wizard] Go On',\n    Reset = '[Wizard] Reset'\n\n}\n\nexport class StepChanged implements Action {\n\n    public readonly type: string = WizardActionTypes.StepChanged;\n\n    constructor(public payload: { step: Step, index: number }) { }\n\n}\n\nexport class StepError implements Action {\n\n    public readonly type: string = WizardActionTypes.StepError;\n\n    constructor(public payload: string) { }\n\n}\n\nexport class StepPending implements Action {\n\n    public readonly type: string = WizardActionTypes.StepPending;\n\n    constructor(public payload: string | boolean) { }\n\n}\n\nexport class GoOn implements Action {\n\n    public readonly type: string = WizardActionTypes.GoOn;\n\n    constructor(public payload: { step: Step, index: number, nextIndex: number }) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = WizardActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type WizardActions = StepChanged | StepError | StepPending | GoOn | Reset;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StepError.html":{"url":"classes/StepError.html","title":"class - StepError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  StepError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/actions/wizard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/models/actions/wizard.actions.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : WizardActionTypes.StepError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Step } from '../ui-state';\n\n/**\n * ngrx: wizard Actions.\n */\nexport enum WizardActionTypes {\n\n    StepChanged = '[Wizard] Step Changed',\n    StepError = '[Wizard] Step Error',\n    StepPending = '[Wizard] Step Pending',\n    GoOn = '[Wizard] Go On',\n    Reset = '[Wizard] Reset'\n\n}\n\nexport class StepChanged implements Action {\n\n    public readonly type: string = WizardActionTypes.StepChanged;\n\n    constructor(public payload: { step: Step, index: number }) { }\n\n}\n\nexport class StepError implements Action {\n\n    public readonly type: string = WizardActionTypes.StepError;\n\n    constructor(public payload: string) { }\n\n}\n\nexport class StepPending implements Action {\n\n    public readonly type: string = WizardActionTypes.StepPending;\n\n    constructor(public payload: string | boolean) { }\n\n}\n\nexport class GoOn implements Action {\n\n    public readonly type: string = WizardActionTypes.GoOn;\n\n    constructor(public payload: { step: Step, index: number, nextIndex: number }) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = WizardActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type WizardActions = StepChanged | StepError | StepPending | GoOn | Reset;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StepPending.html":{"url":"classes/StepPending.html","title":"class - StepPending","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  StepPending\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/actions/wizard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string | boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/models/actions/wizard.actions.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string | boolean\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     string | boolean\n\n                    \n                \n                    \n                        \n                            Type :     string | boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : WizardActionTypes.StepPending\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Step } from '../ui-state';\n\n/**\n * ngrx: wizard Actions.\n */\nexport enum WizardActionTypes {\n\n    StepChanged = '[Wizard] Step Changed',\n    StepError = '[Wizard] Step Error',\n    StepPending = '[Wizard] Step Pending',\n    GoOn = '[Wizard] Go On',\n    Reset = '[Wizard] Reset'\n\n}\n\nexport class StepChanged implements Action {\n\n    public readonly type: string = WizardActionTypes.StepChanged;\n\n    constructor(public payload: { step: Step, index: number }) { }\n\n}\n\nexport class StepError implements Action {\n\n    public readonly type: string = WizardActionTypes.StepError;\n\n    constructor(public payload: string) { }\n\n}\n\nexport class StepPending implements Action {\n\n    public readonly type: string = WizardActionTypes.StepPending;\n\n    constructor(public payload: string | boolean) { }\n\n}\n\nexport class GoOn implements Action {\n\n    public readonly type: string = WizardActionTypes.GoOn;\n\n    constructor(public payload: { step: Step, index: number, nextIndex: number }) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = WizardActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type WizardActions = StepChanged | StepError | StepPending | GoOn | Reset;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tag.html":{"url":"interfaces/Tag.html","title":"interface - Tag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Tag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                Tag describes the meaning of the particular element to which it is attached.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        key\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\n\nimport * as combine from 'mout/array/combine';\n\nimport { Heap, Path } from './k-shortest-path';\nimport { round } from '../utils';\nimport { environment } from '../../environments/environment';\nimport { uiConfig } from '../ui/ui-config';\n\nexport enum PathType {\n    distance = 'distance',\n    duration = 'duration'\n}\n\n/**\n * An O/D pair is described by the origin and destination nodes, and the type of path.\n */\nexport interface OdPair {\n\n    origin: string;\n    destination: string;\n    pathType: PathType;\n\n}\n\nexport interface LinkFlow {\n\n    /**\n     * linkFlow attribute.\n     */\n    value: number;\n    /**\n     * Variance is the inverse of density.\n     */\n    variance: number;\n\n}\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public label: string;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    public drawingOptions: { marker?: google.maps.Marker } = {};\n\n    /**\n     * Used by the k shortest path routing.\n     */\n    public count: number = 0;\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public label: string;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    /**\n     * Free flow speed (m/s).\n     */\n    public freeFlowVelocity: number;\n\n    /**\n     * Instant speed (m/s).\n     */\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    /**\n     * Number of vehicles calculated from traffic data.\n     */\n    public linkFlow: number;\n\n    /**\n     * Maximum flow of the link.\n     */\n    public maxFlow: number;\n\n    public drawingOptions: {\n        path?: google.maps.LatLng[],\n        polyline?: google.maps.Polyline,\n        marker?: google.maps.Marker,\n        infowindow?: google.maps.InfoWindow\n    } = {};\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the link flow.\n     */\n    public calcLinkFlow(): void {\n        // Min distance is 1 meter.\n        if (this.distance == 0) { this.distance = 1; }\n        // Min duration is 1 second.\n        if (this.duration == 0) {\n            this.duration = round(this.distance / (50 / 3.6)) > 1 ? round(this.distance / (50 / 3.6)) : 1;\n        }\n        // Calculates free flow velocity (m/s).\n        this.freeFlowVelocity = round(this.distance / this.duration, 2);\n        // Calculates link flow.\n        if (this.durationInTraffic > 0 && this.durationInTraffic >= this.duration) {\n            // Calculates velocity (m/s).\n            this.velocity = round(this.distance / this.durationInTraffic, 2);\n            // Calculates density.\n            this.density = round(this.getKjam() * (this.freeFlowVelocity - this.velocity) / this.freeFlowVelocity, 2);\n            // Calculates flow.\n            this.flow = round(this.density * this.velocity, 2);\n            // Calculates link flow.\n            this.linkFlow = round(this.density * this.distance);\n        } else {\n            this.velocity = 0;\n            this.density = 0;\n            this.flow = 0;\n            this.linkFlow = 0;\n        }\n    }\n\n    /**\n     * Calculates the max flow of the edge.\n     * @param factor Weather Adjustment Factor\n     */\n    public calcMaxFlow(factor: number): void {\n        const maxFlow = this.getKjam() * this.freeFlowVelocity;\n        this.maxFlow = round(maxFlow * factor, 2);\n    }\n\n    /**\n     * Gets the variance of measurement error of link flow.\n     */\n    public getVariance(): number {\n        return this.density > 0 ? round(1 / this.density, 2) : 1;\n    }\n\n    public getKjam(): number {\n        return round(1 / uiConfig.sp, 2);\n    }\n\n    protected getCapacity(timeInterval: number): number {\n        return this.maxFlow * timeInterval;\n    }\n\n    protected draw(color: string, zIndex: number = 10): void {\n        this.drawingOptions.polyline.set('strokeColor', color);\n        this.drawingOptions.polyline.set('zIndex', zIndex);\n        this.drawingOptions.marker.set('visible', true);\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    protected nodes: Node[] = [];\n\n    protected edges: Edge[] = [];\n\n    protected relations: Relation[] = [];\n\n    /**\n     * Paths for each O/D pair [pairs,paths,edges].\n     */\n    protected shortestPaths: Edge[][][] = [];\n\n    protected incidenceMatrix: boolean[][][] = [];\n\n    protected assignmentMatrix: number[][][] = [];\n\n    private heap: Heap;\n\n    /**\n     * Shortest paths drawing options.\n     */\n    private drawingOptions: {\n        polylines?: google.maps.Polyline[][];\n    } = {};\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public getEdge(edgeId: number): Edge {\n        return this.edges.find((edge: Edge) => edge.edgeId == edgeId);\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Key:oneway\n     * @param edgeId Id of the edge\n     */\n    public isOneway(edgeId: number): boolean {\n        return !!this.getEdge(edgeId).tags.find(tag => tag.key == 'oneway' && tag.value != 'no') ||\n            this.isRoundabout(edgeId);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Tag:junction%3Droundabout\n     * @param edgeId Id of the edge\n     */\n    public isRoundabout(edgeId: number): boolean {\n        return this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'roundabout') ||\n            this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'circular') ?\n            true : false;\n    }\n\n    public getOdNode(label: string): Node {\n        return this.nodes.find((node: Node) => node.label == label);\n    }\n\n    public getOdNodes(): Node[] {\n        return this.nodes.filter((node: Node) => node.label);\n    }\n\n    /**\n     * Calculates the set of minimum paths.\n     * @param odPairs The O/D pairs\n     */\n    public calcShortestPaths(odPairs: OdPair[]): Observable {\n        try {\n            for (let i = 0; i  edge.label);\n    }\n\n    /**\n     * Calculates the incidence matrix of paths for O/D pairs.\n     */\n    public calcIncidenceMatrix(): Observable {\n        const edges = this.getPathsEdges();\n        for (let z = 0; z  value.edgeId == edges[m].edgeId)) {\n                        // The path crosses the edge.\n                        this.incidenceMatrix[z][n][m] = true;\n                    } else {\n                        // The path does not cross the edge.\n                        this.incidenceMatrix[z][n][m] = false;\n                    }\n                }\n            }\n        }\n        return of(null);\n    }\n\n    public getIncidenceMatrix(): boolean[][][] {\n        return this.incidenceMatrix;\n    }\n\n    /**\n     * Calculates the assignment matrix.\n     * @param odPairs The O/D pairs\n     */\n    public calcAssignmentMatrix(odPairs: OdPair[]): Observable {\n        // Calculates the probabilities of shortest paths.\n        const shortestPathsProbabilities = this.calcShortestPathsProbabilities(odPairs);\n\n        // Assignment matrix.\n        for (let z = 0; z  {\n        const edges = this.getPathsEdges();\n        for (const edge of edges) {\n            edge.calcMaxFlow(factor);\n        }\n        return of(null);\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link distance or duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param o Source node\n     * @param d Destination node\n     * @param pathType Distance or duration\n     * @param k The number of shortest paths to compute\n     * @returns The set of shortest paths\n     */\n    private ksp(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Sets to zero the count property of the nodes.\n        this.resetCount();\n        // Instantiates the heap.\n        this.heap = new Heap();\n        // Inserts the path of origin into heap with cost 0.\n        this.heap.push({ pathId: 0, node: o, edges: [], cost: 0 });\n        // Walks the graph.\n        return this.walk(o, d, pathType, k);\n    }\n\n    /**\n     * Breadth First Search (BFS) algorithm for traversing and searching tree data\n     * explores the neighbor nodes first, before moving to the next level neighbors.\n     */\n    private walk(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Set of shortest paths from origin to destination.\n        const shortestPaths: Path[] = [];\n\n        let pathId = 1;\n        let node: Node;\n        while (this.heap.getPaths().length > 0 && d.count  edge.origin.nodeId == node.nodeId) ? false : true;\n    }\n\n    private resetCount(): void {\n        for (const node of this.nodes) {\n            node.count = 0;\n        }\n    }\n\n    /**\n     * Removes the alternative paths that differ only for two links.\n     * @param shortestPaths The shortest paths as created by the algorithm\n     */\n    private filterPaths(shortestPaths: Path[]): void {\n        if (shortestPaths.length > 1) {\n            let i = 0;\n            do {\n                const pathA = shortestPaths[i].edges;\n                const pathB = shortestPaths[i + 1].edges;\n                const sharedEdges = pathA.filter((edgeOfA: Edge) =>\n                    pathB.find((edgeOfB: Edge) =>\n                        edgeOfB.edgeId == edgeOfA.edgeId));\n                if (pathA.length - sharedEdges.length  value.edgeId == edge.edgeId)) {\n                        edges.push(edge);\n                        edge.label = 'E' + count++;\n                        if (!environment.testing) {\n                            edge.drawingOptions.infowindow.setContent('Edge: ' + edge.label);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Multinomial logit model.\n     * @param odPairs The O/D pairs\n     */\n    private calcShortestPathsProbabilities(odPairs: OdPair[]): number[][] {\n        // Gets the total cost of paths.\n        const pathCosts = this.calcPathCosts(odPairs);\n        const shortestPathsProbabilities: number[][] = [];\n        // Theta parameter adjustment.\n        const parameter = uiConfig.theta * 100;\n        // Calculates numerator.\n        const exps: number[][] = [];\n        for (let z = 0; z  {\n                return value > 0 ? Math.exp(-value / parameter) : 0;\n            });\n        }\n        // Calculates denominator.\n        const sumExps: number[] = [];\n        for (let z = 0; z  a + b, 0);\n            sumExps.push(sum);\n        }\n        // Probabilities.\n        for (let z = 0; z  0 ? round(exps[z][n] / sumExps[z], 3) : 0;\n                shortestPathsProbabilities[z].push(p);\n            }\n        }\n        return shortestPathsProbabilities;\n    }\n\n    private calcPathCosts(odPairs: OdPair[]): number[][] {\n        const pathCosts: number[][] = [];\n        for (let z = 0; z \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TermsComponent.html":{"url":"components/TermsComponent.html","title":"component - TermsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TermsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/terms/terms.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-terms\n            \n\n            \n                styleUrls\n                terms.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./terms.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/terms/terms.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/terms/terms.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-terms',\n    templateUrl: './terms.component.html',\n    styleUrls: ['./terms.component.scss']\n})\nexport class TermsComponent implements OnInit {\n\n    constructor() { }\n\n    ngOnInit(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            Terms of service of STRADA\n        \n        \n            These Terms of service govern your use of the application\n                STRADA\n            \n            By using the app, you accept these Terms in full. If you disagree with these Terms or any part of these Terms,\n                you must not use the app.\n            \n            Privacy Policy of the app\n            \n                Privacy Policy\n            \n            License to use\n            The app is released under the MIT license.\n            External services\n            The app uses Google Maps APIs. By using the app, you are bound by Google's Terms of Service:\n                Google Terms of Service\n            \n        \n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Terms of service of STRADA                            These Terms of service govern your use of the application                STRADA                        By using the app, you accept these Terms in full. If you disagree with these Terms or any part of these Terms,                you must not use the app.                        Privacy Policy of the app                            Privacy Policy                        License to use            The app is released under the MIT license.            External services            The app uses Google Maps APIs. By using the app, you are bound by Google\\'s Terms of Service:                Google Terms of Service                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TermsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UiComponent.html":{"url":"components/UiComponent.html","title":"component - UiComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UiComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/ui.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                CanComponentDeactivate\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ui\n            \n\n            \n                styleUrls\n                ui.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ui.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                network\n                            \n                            \n                                numerical\n                            \n                            \n                                pending\n                            \n                            \n                                statistics\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canDeactivate\n                            \n                            \n                                exit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDialog\n                            \n                            \n                                openSnackBar\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, snackBar: MatSnackBar, dialog: MatDialog, cdr: ChangeDetectorRef, store: Store, scheduler: SchedulerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/ui.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        scheduler\n                                                  \n                                                        \n                                                                    SchedulerService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canDeactivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanDeactivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:83\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable | boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            exit\n                            \n                            \n                        \n                    \n                \n                \n                    \nexit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:102\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenDialog(data: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:114\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openSnackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenSnackBar(message: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:106\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:93\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            network\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        network:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numerical\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        numerical:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pending\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pending:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            statistics\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        statistics:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy, ViewEncapsulation, ChangeDetectorRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatSnackBar, MatDialog } from '@angular/material';\nimport { Subscription, Observable, of } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { CanComponentDeactivate } from '../shared/can-deactivate-guard.service';\nimport { SchedulerService } from './wizard/scheduler.service';\nimport * as fromUi from './models/reducers';\n\nimport { MessageArchivedComponent } from '../shared/message-archived.component';\nimport { InfoDialogComponent } from '../shared/info-dialog.component';\n\n@Component({\n    selector: 'app-ui',\n    templateUrl: './ui.component.html',\n    styleUrls: ['./ui.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class UiComponent implements OnInit, OnDestroy, CanComponentDeactivate {\n\n    pending: boolean = false;\n\n    network: boolean = true;\n\n    numerical: boolean = false;\n\n    statistics: boolean = false;\n\n    subscriptions: Subscription[] = [];\n\n    constructor(\n        private router: Router,\n        private snackBar: MatSnackBar,\n        private dialog: MatDialog,\n        private cdr: ChangeDetectorRef,\n        private store: Store,\n        private scheduler: SchedulerService\n    ) { }\n\n    ngOnInit(): void {\n        // Pending state.\n        this.subscriptions.push(this.store.pipe(select(fromUi.pending)).subscribe((pending: boolean) => {\n            this.pending = pending;\n        }));\n        // Error state.\n        this.subscriptions.push(this.store.pipe(select(fromUi.error)).subscribe((error: string) => {\n            if (error) {\n                this.openSnackBar(error);\n            }\n        }));\n        // Panels.\n        this.subscriptions.push(this.store.pipe(select(fromUi.currentStep)).subscribe((currentStep: number) => {\n            switch (currentStep) {\n                case 0:\n                    this.network = true;\n                    this.numerical = false;\n                    this.statistics = false;\n                    this.cdr.detectChanges();\n                    break;\n                case 4:\n                    this.numerical = true;\n                    this.statistics = false;\n                    this.cdr.detectChanges();\n                    break;\n                case 5:\n                    this.numerical = true;\n                    this.statistics = true;\n                    this.cdr.detectChanges();\n                    break;\n            }\n        }));\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach((subscription: Subscription) => {\n            if (subscription) { subscription.unsubscribe(); }\n        });\n    }\n\n    canDeactivate(): Observable | boolean {\n        return this.openDialog('Are you sure you want to exit the simulation?').pipe(\n            tap((dialogResult: boolean) => {\n                if (dialogResult) {\n                    this.scheduler.reset();\n                }\n            })\n        );\n    }\n\n    reset(): void {\n        this.openDialog('Are you sure you want to reset the simulation?').subscribe(\n            (dialogResult: boolean) => {\n                if (dialogResult) {\n                    this.scheduler.reset();\n                }\n            });\n    }\n\n    exit(): void {\n        this.router.navigate(['/home']);\n    }\n\n    openSnackBar(message: string): void {\n        this.snackBar.openFromComponent(MessageArchivedComponent, {\n            data: message,\n            duration: 5000,\n            panelClass: ['error-snackbar']\n        });\n    }\n\n    openDialog(data: string): Observable {\n        const dialogRef = this.dialog.open(InfoDialogComponent, {\n            width: '250px',\n            data: data,\n            hasBackdrop: true,\n            panelClass: 'info-dialog'\n        });\n\n        return dialogRef.afterClosed();\n    }\n\n}\n\n    \n\n    \n        \n    \n    \n    \n        {{ pending }}\n    \n\n\n\n    \n        \n            \n        \n        \n            \n                \n                    \n                        \n                            Network\n                        \n                    \n                    \n                \n                \n                    \n                        \n                            Numerical\n                        \n                    \n                    \n                \n                \n                    \n                        \n                            Statistics\n                        \n                    \n                    \n                \n            \n        \n    \n    \n        \n        \n            Reset\n            Exit\n        \n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ pending }}                                                                                                                                                Network                                                                                                                                                                        Numerical                                                                                                                                                                        Statistics                                                                                                                                        Reset            Exit            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UiComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiModule.html":{"url":"modules/UiModule.html","title":"module - UiModule","body":"\n                   \n\n\n\n\n  Modules\n  UiModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UiModule\n\n\n\ncluster_UiModule_declarations\n\n\n\ncluster_UiModule_imports\n\n\n\ncluster_UiModule_providers\n\n\n\n\nChangeOfConditionsComponent\n\nChangeOfConditionsComponent\n\n\n\nUiModule\n\nUiModule\n\nUiModule -->\n\nChangeOfConditionsComponent->UiModule\n\n\n\n\n\nChartsComponent\n\nChartsComponent\n\nUiModule -->\n\nChartsComponent->UiModule\n\n\n\n\n\nEstimateOfDemandComponent\n\nEstimateOfDemandComponent\n\nUiModule -->\n\nEstimateOfDemandComponent->UiModule\n\n\n\n\n\nGoogleMapComponent\n\nGoogleMapComponent\n\nUiModule -->\n\nGoogleMapComponent->UiModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nUiModule -->\n\nMapComponent->UiModule\n\n\n\n\n\nNumericComponent\n\nNumericComponent\n\nUiModule -->\n\nNumericComponent->UiModule\n\n\n\n\n\nSearchForTheAreaComponent\n\nSearchForTheAreaComponent\n\nUiModule -->\n\nSearchForTheAreaComponent->UiModule\n\n\n\n\n\nSelectionOfTheAreaComponent\n\nSelectionOfTheAreaComponent\n\nUiModule -->\n\nSelectionOfTheAreaComponent->UiModule\n\n\n\n\n\nSimulationComponent\n\nSimulationComponent\n\nUiModule -->\n\nSimulationComponent->UiModule\n\n\n\n\n\nStatisticsComponent\n\nStatisticsComponent\n\nUiModule -->\n\nStatisticsComponent->UiModule\n\n\n\n\n\nUiComponent\n\nUiComponent\n\nUiModule -->\n\nUiComponent->UiModule\n\n\n\n\n\nWeatherComponent\n\nWeatherComponent\n\nUiModule -->\n\nWeatherComponent->UiModule\n\n\n\n\n\nWizardComponent\n\nWizardComponent\n\nUiModule -->\n\nWizardComponent->UiModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nUiModule -->\n\nSharedModule->UiModule\n\n\n\n\n\nUiRoutingModule\n\nUiRoutingModule\n\nUiModule -->\n\nUiRoutingModule->UiModule\n\n\n\n\n\nMapService\n\nMapService\n\nUiModule -->\n\nMapService->UiModule\n\n\n\n\n\nSchedulerService\n\nSchedulerService\n\nUiModule -->\n\nSchedulerService->UiModule\n\n\n\n\n\nWizardService\n\nWizardService\n\nUiModule -->\n\nWizardService->UiModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/ui/ui.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ChangeOfConditionsComponent\n                            \n                            \n                                ChartsComponent\n                            \n                            \n                                EstimateOfDemandComponent\n                            \n                            \n                                GoogleMapComponent\n                            \n                            \n                                MapComponent\n                            \n                            \n                                NumericComponent\n                            \n                            \n                                SearchForTheAreaComponent\n                            \n                            \n                                SelectionOfTheAreaComponent\n                            \n                            \n                                SimulationComponent\n                            \n                            \n                                StatisticsComponent\n                            \n                            \n                                UiComponent\n                            \n                            \n                                WeatherComponent\n                            \n                            \n                                WizardComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     MapService\n                            \n                            \n                                     SchedulerService\n                            \n                            \n                                     WizardService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                            \n                                    UiRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { UiRoutingModule } from './ui-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { StoreModule } from \"@ngrx/store\";\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\n\nimport { UiComponent } from './ui.component';\nimport { WizardComponent } from './wizard/wizard.component';\nimport { SearchForTheAreaComponent } from './wizard/search-for-the-area/search-for-the-area.component';\nimport { SelectionOfTheAreaComponent } from './wizard/selection-of-the-area/selection-of-the-area.component';\nimport { EstimateOfDemandComponent } from './wizard/estimate-of-demand/estimate-of-demand.component';\nimport { ChangeOfConditionsComponent } from './wizard/change-of-conditions/change-of-conditions.component';\nimport { SimulationComponent } from './wizard/simulation/simulation.component';\nimport { StatisticsComponent } from './wizard/statistics/statistics.component';\nimport { MapComponent } from './map/map.component';\nimport { GoogleMapComponent } from './map/google-map.component';\nimport { WeatherComponent } from './weather/weather.component';\nimport { NumericComponent } from './numeric/numeric.component';\nimport { ChartsComponent } from './charts/charts.component';\n\nimport { WizardService } from './wizard/wizard.service';\nimport { SchedulerService } from './wizard/scheduler.service';\nimport { MapService } from './map/map.service';\nimport { reducers } from './models/reducers';\n\n@NgModule({\n    imports: [\n        UiRoutingModule,\n        SharedModule,\n        StoreModule.forFeature('ui', reducers),\n        OwlDateTimeModule,\n        OwlNativeDateTimeModule\n    ],\n    declarations: [\n        UiComponent,\n        WizardComponent,\n        SearchForTheAreaComponent,\n        SelectionOfTheAreaComponent,\n        EstimateOfDemandComponent,\n        ChangeOfConditionsComponent,\n        SimulationComponent,\n        StatisticsComponent,\n        MapComponent,\n        GoogleMapComponent,\n        WeatherComponent,\n        NumericComponent,\n        ChartsComponent\n    ],\n    providers: [\n        WizardService,\n        SchedulerService,\n        MapService\n    ]\n})\nexport class UiModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiRoutingModule.html":{"url":"modules/UiRoutingModule.html","title":"module - UiRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  UiRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/ui/ui-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { CanDeactivateGuard } from '../shared/can-deactivate-guard.service';\n\nimport { UiComponent } from './ui.component';\n\n@NgModule({\n    imports: [\n        RouterModule.forChild([\n            { path: '', component: UiComponent, pathMatch: 'full', canDeactivate: [CanDeactivateGuard] }\n        ])\n    ],\n    exports: [RouterModule]\n})\nexport class UiRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UiState.html":{"url":"interfaces/UiState.html","title":"interface - UiState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UiState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/reducers.ts\n        \n\n            \n                Description\n            \n            \n                User interface state management.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        map\n                                \n                                \n                                        wizard\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        map\n                                    \n                                \n                                \n                                    \n                                        map:     fromMap.MapState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromMap.MapState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wizard\n                                    \n                                \n                                \n                                    \n                                        wizard:     fromWizard.WizardState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromWizard.WizardState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, createFeatureSelector, createSelector, MemoizedSelector } from \"@ngrx/store\";\n\nimport * as fromWizard from './reducers/wizard.reducer';\nimport * as fromMap from './reducers/map.reducer';\nimport { Step, Map } from \"./ui-state\";\n\n/**\n * User interface state management.\n */\nexport interface UiState {\n\n    wizard: fromWizard.WizardState;\n    map: fromMap.MapState;\n\n}\n\nexport const reducers: ActionReducerMap = {\n    wizard: fromWizard.wizardReducer,\n    map: fromMap.mapReducer\n};\n\nexport const featureUiState: MemoizedSelector = createFeatureSelector('ui');\n\n/**\n * Exports the wizard state.\n */\nexport const wizardState: MemoizedSelector = createSelector(\n    featureUiState,\n    (state: UiState) => state.wizard\n);\n\n/**\n * Exports the steps state.\n */\nexport const steps: MemoizedSelector = createSelector(\n    wizardState,\n    fromWizard.getSteps\n);\n\n/**\n * Exports the current step state.\n */\nexport const currentStep: MemoizedSelector = createSelector(\n    wizardState,\n    fromWizard.getCurrentStep\n);\n\n/**\n * Exports the error state.\n */\nexport const error: MemoizedSelector = createSelector(\n    wizardState,\n    fromWizard.getError\n);\n\n/**\n * Exports the pending state.\n */\nexport const pending: MemoizedSelector = createSelector(\n    wizardState,\n    fromWizard.getPending\n);\n\n/**\n * Exports the map state.\n */\nexport const mapState: MemoizedSelector = createSelector(\n    featureUiState,\n    (state: UiState) => state.map\n);\n\nexport const map: MemoizedSelector = createSelector(\n    mapState,\n    fromMap.getMap\n);\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherComponent.html":{"url":"components/WeatherComponent.html","title":"component - WeatherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/weather/weather.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ui-weather\n            \n\n            \n                styleUrls\n                weather.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                icon\n                            \n                            \n                                iconContainer\n                            \n                            \n                                time\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getIcon\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                resetConditions\n                            \n                            \n                                sendActions\n                            \n                            \n                                setConditions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, renderer: s/end.html\">Renderer2, store: Store, weather: WeatherService, network: NetworkService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/weather/weather.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        weather\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIcon(code: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:89\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        code\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     HTMLImageElement\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetConditions\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetConditions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setConditions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetConditions(weather: WeatherConditions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        weather\n                                                        \n                                                                    WeatherConditions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        description:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '-'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icon:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iconContainer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iconContainer:     HTMLElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            time\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        time:     any | string\n\n                    \n                \n                    \n                        \n                            Type :     any | string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, ElementRef, Renderer2 } from '@angular/core';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { WeatherService } from '../../network/weather/weather.service';\nimport { NetworkService } from '../../network/network.service';\nimport * as fromUi from '../models/reducers';\nimport { WeatherConditions } from '../../network/weather/weather';\nimport { appConfig } from '../../app-config';\n\nimport { BaseComponent } from '../models/base.component';\n\n@Component({\n    selector: 'ui-weather',\n    templateUrl: './weather.component.html',\n    styleUrls: ['./weather.component.scss']\n})\nexport class WeatherComponent extends BaseComponent implements OnInit, AfterViewInit {\n\n    description: string = '-';\n\n    iconContainer: HTMLElement;\n\n    icon: any;\n\n    time: any | string = '';\n\n    constructor(\n        private elementRef: ElementRef,\n        private renderer: Renderer2,\n        private store: Store,\n        private weather: WeatherService,\n        private network: NetworkService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    ngAfterViewInit(): void {\n        this.iconContainer = this.elementRef.nativeElement.querySelector('#iconContainer');\n    }\n\n    valueChanges(): void {\n        //\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.currentStep)).subscribe((currentStep: number) => {\n            const weatherConditions = this.weather.getWeatherConditions();\n            switch (currentStep) {\n                case 0:\n                    this.resetConditions();\n                    break;\n                case 3:\n                    this.setConditions(weatherConditions);\n                    break;\n                case 4:\n                    this.resetConditions();\n                    this.setConditions(weatherConditions);\n                    break;\n            }\n        }));\n    }\n\n    sendActions(): void {\n        //\n    }\n\n    setConditions(weather: WeatherConditions): void {\n        this.description = weather.description;\n        this.icon = this.getIcon(weather.icon);\n        this.renderer.appendChild(this.iconContainer, this.icon);\n        this.time = this.network.getTimeString();\n    }\n\n    resetConditions(): void {\n        this.description = '-';\n        if (this.icon) {\n            this.renderer.removeChild(this.iconContainer, this.icon);\n            this.icon = null;\n            this.time = '';\n        }\n    }\n\n    getIcon(code: string): HTMLImageElement {\n        const icon = new Image();\n        if (!!code) {\n            icon.src = appConfig.apis.openWeatherMap.iconUrl + '/' + code + '.png';\n        }\n        return icon;\n    }\n\n}\n\n    \n\n    \n        \n    \n        Weather {{ description | uppercase }}\n        \n        {{ time }}\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Weather {{ description | uppercase }}                {{ time }}    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WeatherConditions.html":{"url":"interfaces/WeatherConditions.html","title":"interface - WeatherConditions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WeatherConditions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/weather/weather.ts\n        \n\n            \n                Description\n            \n            \n                Weather conditions data.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                            Optional\n                                        rainIntensity\n                                \n                                \n                                            Optional\n                                        snowIntensity\n                                \n                                \n                                            Optional\n                                        visibility\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The code of the icon.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rainIntensity\n                                    \n                                \n                                \n                                    \n                                        rainIntensity:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Millimeters.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        snowIntensity\n                                    \n                                \n                                \n                                    \n                                        snowIntensity:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Millimeters.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visibility\n                                    \n                                \n                                \n                                    \n                                        visibility:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Meters.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface WeatherConditions {\n\n    description: string;\n    /**\n     * The code of the icon.\n     */\n    icon?: string;\n    /**\n     * Meters.\n     */\n    visibility?: number;\n    /**\n     * Millimeters.\n     */\n    rainIntensity?: number;\n    /**\n     * Millimeters.\n     */\n    snowIntensity?: number;\n\n}\n\nexport enum WeatherDescription {\n    clearSky = 'clear sky',\n    fewClouds = 'few clouds',\n    scatteredClouds = 'scattered clouds',\n    brokenClouds = 'broken clouds',\n    showerRain = 'shower rain',\n    rain = 'rain',\n    thunderstorm = 'thunderstorm',\n    snow = 'snow',\n    mist = 'mist',\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WeatherModule.html":{"url":"modules/WeatherModule.html","title":"module - WeatherModule","body":"\n                   \n\n\n\n\n  Modules\n  WeatherModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_providers\n\n\n\n\nWeatherService\n\nWeatherService\n\n\n\nWeatherModule\n\nWeatherModule\n\nWeatherModule -->\n\nWeatherService->WeatherModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/network/weather/weather.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     WeatherService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { WeatherService } from './weather.service';\n\n@NgModule({\n    imports: [],\n    declarations: [],\n    providers: [WeatherService]\n})\nexport class WeatherModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherService.html":{"url":"injectables/WeatherService.html","title":"injectable - WeatherService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  WeatherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/weather/weather.service.ts\n        \n\n            \n                Description\n            \n            \n                Gets the weather data from the Weather or Forecast resources\nand provides reduction factors for graph values based on weather conditions.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                weatherConditions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addWeatherConditions\n                            \n                            \n                                    Public\n                                changeWeather\n                            \n                            \n                                    Public\n                                getFactors\n                            \n                            \n                                    Public\n                                getWeatherConditions\n                            \n                            \n                                    Public\n                                getWeatherData\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Private\n                                toInches\n                            \n                            \n                                    Public\n                                updateWeatherData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, location: LocationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/weather/weather.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    LocationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            addWeatherConditions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addWeatherConditions(data: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:110\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            changeWeather\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        changeWeather(weather: WeatherConditions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:81\n                            \n                        \n\n\n                \n                    \n                            Changes the current weather conditions.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weather\n                                                        \n                                                                    WeatherConditions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The weather conditions\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFactors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFactors()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:95\n                            \n                        \n\n\n                \n                    \n                            Calculates Weather Adjustment Factors.\n\n\n                            \n                            \n                            \n                                Returns :     number[]\n\n                            \n                                \n                                    The factor for max flow parameter\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getWeatherConditions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getWeatherConditions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     WeatherConditions\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getWeatherData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getWeatherData(time?: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:34\n                            \n                        \n\n\n                \n                    \n                            Gets weather data from the Weather resource. The Forecast resource is called only if the optional parameter 'time' is evaluated.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        time\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                Optional parameter for forecasting data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            toInches\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toInches(value: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:120\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updateWeatherData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateWeatherData(data: any, time?: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:54\n                            \n                        \n\n\n                \n                    \n                            Updates weather conditions with the data obtained from OpenWeatherMap.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Weather data\n\n                                                        \n                                                \n                                                \n                                                        time\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                Optional parameter for forecasting data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            weatherConditions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherConditions:     WeatherConditions\n\n                    \n                \n                    \n                        \n                            Type :     WeatherConditions\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable, throwError, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { LocationService } from '../../location/location.service';\nimport { WeatherConditions } from './weather';\nimport { round } from '../../utils';\nimport { appConfig } from '../../app-config';\nimport { uiConfig } from '../../ui/ui-config';\n\n/**\n * Gets the weather data from the Weather or Forecast resources\n * and provides reduction factors for graph values based on weather conditions.\n */\n@Injectable() export class WeatherService {\n\n    private weatherConditions: WeatherConditions;\n\n    constructor(private http: HttpClient, private location: LocationService) { }\n\n    public reset(): void {\n        this.weatherConditions = null;\n    }\n\n    public getWeatherConditions(): WeatherConditions {\n        return this.weatherConditions;\n    }\n\n    /**\n     * Gets weather data from the Weather resource. The Forecast resource is called only if the optional parameter 'time' is evaluated.\n     * @param time Optional parameter for forecasting data\n     */\n    public getWeatherData(time?: Date): Observable {\n        const url: string = time ? appConfig.apis.openWeatherMap.forecastUrl : appConfig.apis.openWeatherMap.weatherUrl;\n        const options = {\n            params: new HttpParams()\n                .set('lat', this.location.getLatLng().lat.toString())\n                .set('lon', this.location.getLatLng().lng.toString())\n                .set('appid', appConfig.apis.openWeatherMap.apiKey)\n        };\n\n        return this.http.get(url, options).pipe(\n            map((response: any) => response),\n            catchError((error: any) => throwError('getWeatherData'))\n        );\n    }\n\n    /**\n     * Updates weather conditions with the data obtained from OpenWeatherMap.\n     * @param data Weather data\n     * @param time Optional parameter for forecasting data\n     */\n    public updateWeatherData(data: any, time?: Date): Observable {\n        if (time != null && data.list.length > 0) {\n            const timezoneOffset = time.getTimezoneOffset() * 60 * 1000; // Timezone offset in milliseconds\n            const utcTime = time.getTime() + timezoneOffset;\n\n            let preDt: number = data.list[0].dt * 1000; // Converts Unix UTC in milliseconds\n            let forecast: any = data.list[0];\n            for (let i = 1; i = utcTime) {\n                    forecast = nextDt - utcTime \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WizardComponent.html":{"url":"components/WizardComponent.html","title":"component - WizardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WizardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/wizard.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                ui-wizard\n            \n\n            \n                styleUrls\n                wizard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./wizard.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                stepper\n                            \n                            \n                                wizardForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                exit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                stepClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, router: Router, wizard: WizardService, scheduler: SchedulerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/wizard.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        scheduler\n                                                  \n                                                        \n                                                                    SchedulerService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            exit\n                            \n                            \n                        \n                    \n                \n                \n                    \nexit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.component.ts:119\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.component.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stepClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nstepClick(event: StepperSelectionEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.component.ts:92\n                            \n                        \n\n\n                \n                    \n                            Updates current step and step data.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    StepperSelectionEvent\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                SelectionChange stepper event.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stepper\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stepper:     MatStepper\n\n                    \n                \n                    \n                        \n                            Type :     MatStepper\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wizardForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        wizardForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        formSteps\n                    \n                \n\n                \n                    \n                        getformSteps()\n                    \n                \n                            \n                                \n                                    Defined in src/app/ui/wizard/wizard.component.ts:24\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, FormArray, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MatStepper } from '@angular/material';\nimport { StepperSelectionEvent } from '@angular/cdk/stepper';\n\nimport { WizardService } from './wizard.service';\nimport { SchedulerService } from './scheduler.service';\nimport { pairsValidator } from '../directives/pairs.directive';\nimport { uiConfig } from '../ui-config';\n\n@Component({\n    selector: 'ui-wizard',\n    templateUrl: './wizard.component.html',\n    styleUrls: ['./wizard.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class WizardComponent implements OnInit {\n\n    @ViewChild('stepper') stepper: MatStepper;\n\n    wizardForm: FormGroup;\n\n    get formSteps(): FormArray {\n        return this.wizardForm.get('formSteps') as FormArray;\n    }\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private router: Router,\n        private wizard: WizardService,\n        private scheduler: SchedulerService\n    ) { }\n\n    ngOnInit(): void {\n        // Creates form model.\n        this.wizardForm = this.formBuilder.group({\n            formSteps: this.formBuilder.array([\n                this.formBuilder.group({\n                    address: [''],\n                    center: [null, [Validators.required]]\n                }),\n                this.formBuilder.group({\n                    bounds: [null, [Validators.required]],\n                    time: [null]\n                }),\n                this.formBuilder.group({\n                    odPairs: this.formBuilder.array([], pairsValidator())\n                }),\n                this.formBuilder.group({\n                    odPairs: this.formBuilder.array([]),\n                    weatherConditions: this.formBuilder.group({\n                        description: [null],\n                        icon: [null],\n                        visibility: [\n                            null,\n                            [Validators.required,\n                            Validators.min(0),\n                            Validators.max(uiConfig.visibility.max),\n                            Validators.pattern('^[0-9]*$')]\n                        ],\n                        rainIntensity: [\n                            null,\n                            [Validators.required,\n                            Validators.min(0),\n                            Validators.max(uiConfig.rainIntensity.max),\n                            Validators.pattern('^[0-9]*$')]\n                        ],\n                        snowIntensity: [\n                            null,\n                            [Validators.required,\n                            Validators.min(0),\n                            Validators.max(uiConfig.snowIntensity.max),\n                            Validators.pattern('^[0-9]*$')]\n                        ]\n                    })\n                }),\n                this.formBuilder.group({\n                    endSimulation: [false, [Validators.requiredTrue]]\n                }),\n                this.formBuilder.group({})\n            ])\n        }, { updateOn: 'blur' });\n\n        this.wizard.stepper = this.stepper;\n    }\n\n    /**\n     * Updates current step and step data.\n     * @param event SelectionChange stepper event.\n     */\n    stepClick(event: StepperSelectionEvent): void {\n        const index: number = event.previouslySelectedIndex;\n        const nextIndex: number = event.selectedIndex;\n        const data = this.wizardForm.get('formSteps').get([index]).value;\n\n        if (nextIndex > index) {\n            this.stepper.selected.completed = true;\n            switch (nextIndex) {\n                case 2:\n                    this.scheduler.scheduleNetwork(data, index, nextIndex);\n                    break;\n                case 3:\n                    this.scheduler.scheduleDemand(data, index, nextIndex);\n                    break;\n                case 4:\n                    this.scheduler.scheduleSimulation(data, index, nextIndex);\n                    break;\n                default:\n                    this.wizard.goOn(\n                        data,\n                        index,\n                        nextIndex\n                    );\n            }\n        }\n    }\n\n    exit(): void {\n        if (this.stepper.selectedIndex == 5) {\n            this.router.navigate(['/home']);\n        }\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    \n                        Search for the area\n                    \n                    \n                \n                \n                    \n                        Selection of the area\n                    \n                    \n                \n                \n                    \n                        Estimate of demand\n                    \n                    \n                \n                \n                    \n                        Change of conditions\n                    \n                    \n                \n                \n                    \n                        Simulation\n                    \n                    \n                \n                \n                    \n                        Statistics\n                    \n                    \n                \n            \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    Search for the area                                                                                                                    Selection of the area                                                                                                                    Estimate of demand                                                                                                                    Change of conditions                                                                                                                    Simulation                                                                                                                    Statistics                                                                                '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WizardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WizardService.html":{"url":"injectables/WizardService.html","title":"injectable - WizardService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  WizardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/wizard/wizard.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                state\n                            \n                            \n                                    Public\n                                stepper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                goOn\n                            \n                            \n                                    Public\n                                putInError\n                            \n                            \n                                    Public\n                                putOnHold\n                            \n                            \n                                    Public\n                                removeFromError\n                            \n                            \n                                    Public\n                                removeFromWaiting\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Public\n                                updateStep\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/wizard.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            goOn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        goOn(data: any, index: number, nextIndex: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        nextIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            putInError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        putInError(error: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            putOnHold\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        putOnHold(message?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            removeFromError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeFromError()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            removeFromWaiting\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeFromWaiting()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updateStep\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateStep(data: any, index: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            state\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        state:     WizardState\n\n                    \n                \n                    \n                        \n                            Type :     WizardState\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stepper\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stepper:     MatStepper\n\n                    \n                \n                    \n                        \n                            Type :     MatStepper\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { MatStepper } from \"@angular/material\";\n\nimport { Store, select } from '@ngrx/store';\n\nimport * as fromUi from '../models/reducers';\nimport { WizardActionTypes } from '../models/actions/wizard.actions';\nimport { WizardState } from \"../models/reducers/wizard.reducer\";\n\n@Injectable() export class WizardService {\n\n    public state: WizardState;\n\n    public stepper: MatStepper;\n\n    constructor(private store: Store) {\n        this.store.pipe(select(fromUi.wizardState)).subscribe((state: WizardState) => {\n            this.state = state;\n        });\n    }\n\n    public reset(): void {\n        // Stepper.\n        this.stepper.reset();\n        // UI state.\n        this.store.dispatch({\n            type: WizardActionTypes.Reset\n        });\n    }\n\n    public updateStep(data: any, index: number): void {\n        this.store.dispatch({\n            type: WizardActionTypes.StepChanged,\n            payload: { step: { data: data }, index: index }\n        });\n    }\n\n    public putInError(error: string): void {\n        this.store.dispatch({\n            type: WizardActionTypes.StepError,\n            payload: error\n        });\n    }\n\n    public putOnHold(message?: string): void {\n        this.store.dispatch({\n            type: WizardActionTypes.StepPending,\n            payload: message || true\n        });\n    }\n\n    public removeFromError(): void {\n        this.store.dispatch({\n            type: WizardActionTypes.StepError,\n            payload: null\n        });\n    }\n\n    public removeFromWaiting(): void {\n        this.store.dispatch({\n            type: WizardActionTypes.StepPending,\n            payload: false\n        });\n    }\n\n    public goOn(data: any, index: number, nextIndex: number): void {\n        this.store.dispatch({\n            type: WizardActionTypes.GoOn,\n            payload: { step: { data: data }, index: index, nextIndex: nextIndex }\n        });\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WizardState.html":{"url":"interfaces/WizardState.html","title":"interface - WizardState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WizardState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/reducers/wizard.reducer.ts\n        \n\n            \n                Description\n            \n            \n                Wizard state management.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        currentStep\n                                \n                                \n                                        error\n                                \n                                \n                                        pending\n                                \n                                \n                                        steps\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentStep\n                                    \n                                \n                                \n                                    \n                                        currentStep:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pending\n                                    \n                                \n                                \n                                    \n                                        pending:     string | boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        steps\n                                    \n                                \n                                \n                                    \n                                        steps:     Step[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Step[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import deepClone from 'mout/lang/deepClone';\n\nimport { Step, STEPS } from \"../ui-state\";\nimport { WizardActions, WizardActionTypes } from '../actions/wizard.actions';\n\n/**\n * Wizard state management.\n */\nexport interface WizardState {\n\n    steps: Step[];\n    currentStep: number;\n    error: string | null;\n    pending: string | boolean;\n\n}\n\nexport const initialWizardState: WizardState = {\n    steps: STEPS,\n    currentStep: 0,\n    error: null,\n    pending: false\n};\n\n/**\n * ngrx: wizard Reducer.\n */\nexport function wizardReducer(state: WizardState = deepClone(initialWizardState), action: WizardActions): WizardState {\n    switch (action.type) {\n        case WizardActionTypes.StepChanged: {\n            // Updates the step at the provided index.\n            state.steps[action.payload.index] = action.payload.step;\n            return {\n                ...state,\n                steps: deepClone(state.steps),\n                error: null,\n                pending: false\n            };\n        }\n        case WizardActionTypes.StepError: {\n            return {\n                ...state,\n                error: action.payload,\n                pending: false\n            };\n        }\n        case WizardActionTypes.StepPending: {\n            return {\n                ...state,\n                error: null,\n                pending: action.payload\n            };\n        }\n        case WizardActionTypes.GoOn: {\n            // Updates the step at the provided index.\n            state.steps[action.payload.index] = action.payload.step;\n            return {\n                ...state,\n                steps: deepClone(state.steps),\n                currentStep: action.payload.nextIndex\n            };\n        }\n        case WizardActionTypes.Reset: {\n            return deepClone(initialWizardState);\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\nexport const getSteps: (state: WizardState) => Step[] = (state: WizardState) => state.steps;\n\nexport const getCurrentStep: (state: WizardState) => number = (state: WizardState) => state.currentStep;\n\nexport const getError: (state: WizardState) => string = (state: WizardState) => state.error;\n\nexport const getPending: (state: WizardState) => string | boolean = (state: WizardState) => state.pending;\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 6.1.1\n        \n            @angular/common : 6.1.1\n        \n            @angular/compiler : 6.1.1\n        \n            @angular/core : 6.1.1\n        \n            @angular/forms : 6.1.1\n        \n            @angular/http : 6.1.1\n        \n            @angular/platform-browser : 6.1.1\n        \n            @angular/platform-browser-dynamic : 6.1.1\n        \n            @angular/router : 6.1.1\n        \n            @angular/material : 6.4.3\n        \n            @angular/cdk : 6.4.3\n        \n            @angular/flex-layout : 6.0.0-beta.17\n        \n            @ngrx/store : 6.1.0\n        \n            @turf/area : 6.0.1\n        \n            @turf/helpers : 6.1.4\n        \n            @turf/invariant : 6.1.2\n        \n            @turf/bearing : 6.0.1\n        \n            @turf/distance : 6.0.1\n        \n            @turf/transform-translate : 5.1.5\n        \n            @turf/centroid : 6.0.2\n        \n            @turf/center : 6.0.1\n        \n            ng-pick-datetime : 6.0.15\n        \n            mout : 1.1.0\n        \n            everpolate : 0.0.3\n        \n            chart.js : 2.7.2\n        \n            chartjs-plugin-annotation : 0.5.7\n        \n            web-animations-js : 2.3.1\n        \n            hammerjs : 2.0.8\n        \n            animejs : 2.2.0\n        \n            qs : 6.5.2\n        \n            core-js : 2.5.7\n        \n            rxjs : 6.2.2\n        \n            zone.js : 0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Control   (src/.../clock.service.ts)\n                        \n                        \n                            MapActionTypes   (src/.../map.actions.ts)\n                        \n                        \n                            PathType   (src/.../graph.ts)\n                        \n                        \n                            SimulationActionTypes   (src/.../simulation.actions.ts)\n                        \n                        \n                            WeatherDescription   (src/.../weather.ts)\n                        \n                        \n                            WizardActionTypes   (src/.../wizard.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/simulation/clock.service.ts\n    \n        \n            \n                \n                    \n                        \n                        Control\n                    \n                \n                        \n                            \n                                 start\n                            \n                        \n                        \n                            \n                                Value: start\n                            \n                        \n                        \n                            \n                                 pause\n                            \n                        \n                        \n                            \n                                Value: pause\n                            \n                        \n                        \n                            \n                                 stop\n                            \n                        \n                        \n                            \n                                Value: stop\n                            \n                        \n                        \n                            \n                                 step\n                            \n                        \n                        \n                            \n                                Value: step\n                            \n                        \n                        \n                            \n                                 slow\n                            \n                        \n                        \n                            \n                                Value: slow\n                            \n                        \n                        \n                            \n                                 quick\n                            \n                        \n                        \n                            \n                                Value: quick\n                            \n                        \n            \n        \n\n    src/app/ui/models/actions/map.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        MapActionTypes\n                    \n                \n                    \n                        \n                            ngrx: map Actions.\n\n                        \n                    \n                        \n                            \n                                 MapChanged\n                            \n                        \n                        \n                            \n                                Value: [Map] Map Changed\n                            \n                        \n                        \n                            \n                                 Reset\n                            \n                        \n                        \n                            \n                                Value: [Map] Reset\n                            \n                        \n            \n        \n\n    src/app/network/graph.ts\n    \n        \n            \n                \n                    \n                        \n                        PathType\n                    \n                \n                        \n                            \n                                 distance\n                            \n                        \n                        \n                            \n                                Value: distance\n                            \n                        \n                        \n                            \n                                 duration\n                            \n                        \n                        \n                            \n                                Value: duration\n                            \n                        \n            \n        \n\n    src/app/simulation/models/actions/simulation.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        SimulationActionTypes\n                    \n                \n                    \n                        \n                            ngrx: simulation Actions.\n\n                        \n                    \n                        \n                            \n                                 SimulationChanged\n                            \n                        \n                        \n                            \n                                Value: [Simulation] Simulation Changed\n                            \n                        \n                        \n                            \n                                 SimulationEnded\n                            \n                        \n                        \n                            \n                                Value: [Simulation] Simulation Ended\n                            \n                        \n                        \n                            \n                                 PeriodsChanged\n                            \n                        \n                        \n                            \n                                Value: [Simulation] Periods Changed\n                            \n                        \n                        \n                            \n                                 Reset\n                            \n                        \n                        \n                            \n                                Value: [Simulation] Reset\n                            \n                        \n            \n        \n\n    src/app/network/weather/weather.ts\n    \n        \n            \n                \n                    \n                        \n                        WeatherDescription\n                    \n                \n                        \n                            \n                                 clearSky\n                            \n                        \n                        \n                            \n                                Value: clear sky\n                            \n                        \n                        \n                            \n                                 fewClouds\n                            \n                        \n                        \n                            \n                                Value: few clouds\n                            \n                        \n                        \n                            \n                                 scatteredClouds\n                            \n                        \n                        \n                            \n                                Value: scattered clouds\n                            \n                        \n                        \n                            \n                                 brokenClouds\n                            \n                        \n                        \n                            \n                                Value: broken clouds\n                            \n                        \n                        \n                            \n                                 showerRain\n                            \n                        \n                        \n                            \n                                Value: shower rain\n                            \n                        \n                        \n                            \n                                 rain\n                            \n                        \n                        \n                            \n                                Value: rain\n                            \n                        \n                        \n                            \n                                 thunderstorm\n                            \n                        \n                        \n                            \n                                Value: thunderstorm\n                            \n                        \n                        \n                            \n                                 snow\n                            \n                        \n                        \n                            \n                                Value: snow\n                            \n                        \n                        \n                            \n                                 mist\n                            \n                        \n                        \n                            \n                                Value: mist\n                            \n                        \n            \n        \n\n    src/app/ui/models/actions/wizard.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        WizardActionTypes\n                    \n                \n                    \n                        \n                            ngrx: wizard Actions.\n\n                        \n                    \n                        \n                            \n                                 StepChanged\n                            \n                        \n                        \n                            \n                                Value: [Wizard] Step Changed\n                            \n                        \n                        \n                            \n                                 StepError\n                            \n                        \n                        \n                            \n                                Value: [Wizard] Step Error\n                            \n                        \n                        \n                            \n                                 StepPending\n                            \n                        \n                        \n                            \n                                Value: [Wizard] Step Pending\n                            \n                        \n                        \n                            \n                                 GoOn\n                            \n                        \n                        \n                            \n                                Value: [Wizard] Go On\n                            \n                        \n                        \n                            \n                                 Reset\n                            \n                        \n                        \n                            \n                                Value: [Wizard] Reset\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            formatTimeFromMilliseconds   (src/.../utils.ts)\n                        \n                        \n                            formatTimeFromSeconds   (src/.../utils.ts)\n                        \n                        \n                            getScript   (src/.../utils.ts)\n                        \n                        \n                            loadScripts   (src/.../utils.ts)\n                        \n                        \n                            mapReducer   (src/.../map.reducer.ts)\n                        \n                        \n                            pairsValidator   (src/.../pairs.directive.ts)\n                        \n                        \n                            round   (src/.../utils.ts)\n                        \n                        \n                            simulationReducer   (src/.../simulation.reducer.ts)\n                        \n                        \n                            toSeconds   (src/.../utils.ts)\n                        \n                        \n                            wizardReducer   (src/.../wizard.reducer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/ui/utils.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            formatTimeFromMilliseconds\n                            \n                            \n                        \n                    \n                \n                \n                    \nformatTimeFromMilliseconds(ms: undefined)\n                    \n                \n\n\n\n\n                \n                    \n                            Format time to M:SS.mmm\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ms\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Milliseconds\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formatTimeFromSeconds\n                            \n                            \n                        \n                    \n                \n                \n                    \nformatTimeFromSeconds(s: undefined)\n                    \n                \n\n\n\n\n                \n                    \n                            Format time to M:SS\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        s\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Seconds\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toSeconds\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoSeconds(value: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/utils.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getScript\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetScript(src: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        src\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadScripts\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadScripts()\n                    \n                \n\n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            round\n                            \n                            \n                        \n                    \n                \n                \n                    \nround(value: undefined, decimals?: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        decimals\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/ui/models/reducers/map.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mapReducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nmapReducer(state: undefined, action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n                            ngrx: map Reducer.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/ui/directives/pairs.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            pairsValidator\n                            \n                            \n                        \n                    \n                \n                \n                    \npairsValidator()\n                    \n                \n\n\n\n\n            \n        \n\n    src/app/simulation/models/reducers/simulation.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            simulationReducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nsimulationReducer(state: undefined, action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n                            ngrx: simulation Reducer.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/ui/models/reducers/wizard.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            wizardReducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nwizardReducer(state: undefined, action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n                            ngrx: wizard Reducer.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSTRADA\n\n\nSTRADA (Simulation of TRAffic DAta) is an urban traffic web simulator that uses data in real time.\n\n\nProject developed for the dissertation of my bachelor's degree in computer engineering.\n\nDocumentation\nOfficial docs: STRADA documentation\nDevelopment\nRequirements\n\nNode.js and npm\nUpdate npm: npm install npm@latest -g\nAngular CLI: npm install -g @angular/cli\nFirebase\nCreate a Firebase project in the Firebase console\nFirebase CLI: npm install -g firebase-tools\nLogin: firebase login\n\n\nGoogle Maps \nGet your API keys: https://cloud.google.com/maps-platform/\nEnable Maps JavaScript API, Geocoding API and Directions API\n\n\nOpenWeatherMap\nGet your API key: https://openweathermap.org/\n\n\n\nPrerequisites\n\nUpdate .firebaserc file\nUpdate src/app/app-config.json file\nUpdate functions/src/functions-config.json file\n\nFirebase Functions\ncd functions\nnpm install\nnpm run serve:devApp\nnpm install\nnpm startTest\nnpm testLicense\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Roberto Simonetti\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DemandModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LocationModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NetworkModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SimulationModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WeatherModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_DemandModule\n\n\n\ncluster_DemandModule_providers\n\n\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_providers\n\n\n\ncluster_NetworkModule\n\n\n\ncluster_NetworkModule_imports\n\n\n\ncluster_NetworkModule_providers\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SimulationModule\n\n\n\ncluster_SimulationModule_providers\n\n\n\ncluster_UiModule\n\n\n\ncluster_UiModule_declarations\n\n\n\ncluster_UiModule_imports\n\n\n\ncluster_UiModule_providers\n\n\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_providers\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nPrivacyComponent\n\nPrivacyComponent\n\nAppModule -->\n\nPrivacyComponent->AppModule\n\n\n\n\n\nTermsComponent\n\nTermsComponent\n\nAppModule -->\n\nTermsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nDemandModule\n\nDemandModule\n\nAppModule -->\n\nDemandModule->AppModule\n\n\n\n\n\nLocationModule\n\nLocationModule\n\nAppModule -->\n\nLocationModule->AppModule\n\n\n\n\n\nNetworkModule\n\nNetworkModule\n\nAppModule -->\n\nNetworkModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nSharedModule->FooterComponent \n\n\n\n\n\nInfoDialogComponent \n\nInfoDialogComponent \n\nInfoDialogComponent  -->\n\nSharedModule->InfoDialogComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nMessageArchivedComponent \n\nMessageArchivedComponent \n\nMessageArchivedComponent  -->\n\nSharedModule->MessageArchivedComponent \n\n\n\n\n\nUiModule\n\nUiModule\n\nUiModule -->\n\nSharedModule->UiModule\n\n\n\n\n\nSimulationModule\n\nSimulationModule\n\nAppModule -->\n\nSimulationModule->AppModule\n\n\n\n\n\nDemandService\n\nDemandService\n\nDemandModule -->\n\nDemandService->DemandModule\n\n\n\n\n\nLocationService\n\nLocationService\n\nLocationModule -->\n\nLocationService->LocationModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nNetworkModule -->\n\nWeatherModule->NetworkModule\n\n\n\n\n\nNetworkService\n\nNetworkService\n\nNetworkModule -->\n\nNetworkService->NetworkModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nSharedModule -->\n\nFooterComponent->SharedModule\n\n\n\n\n\nInfoDialogComponent\n\nInfoDialogComponent\n\nSharedModule -->\n\nInfoDialogComponent->SharedModule\n\n\n\n\n\nMessageArchivedComponent\n\nMessageArchivedComponent\n\nSharedModule -->\n\nMessageArchivedComponent->SharedModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\nClockService\n\nClockService\n\nSimulationModule -->\n\nClockService->SimulationModule\n\n\n\n\n\nSimulationService\n\nSimulationService\n\nSimulationModule -->\n\nSimulationService->SimulationModule\n\n\n\n\n\nChangeOfConditionsComponent\n\nChangeOfConditionsComponent\n\nUiModule -->\n\nChangeOfConditionsComponent->UiModule\n\n\n\n\n\nChartsComponent\n\nChartsComponent\n\nUiModule -->\n\nChartsComponent->UiModule\n\n\n\n\n\nEstimateOfDemandComponent\n\nEstimateOfDemandComponent\n\nUiModule -->\n\nEstimateOfDemandComponent->UiModule\n\n\n\n\n\nGoogleMapComponent\n\nGoogleMapComponent\n\nUiModule -->\n\nGoogleMapComponent->UiModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nUiModule -->\n\nMapComponent->UiModule\n\n\n\n\n\nNumericComponent\n\nNumericComponent\n\nUiModule -->\n\nNumericComponent->UiModule\n\n\n\n\n\nSearchForTheAreaComponent\n\nSearchForTheAreaComponent\n\nUiModule -->\n\nSearchForTheAreaComponent->UiModule\n\n\n\n\n\nSelectionOfTheAreaComponent\n\nSelectionOfTheAreaComponent\n\nUiModule -->\n\nSelectionOfTheAreaComponent->UiModule\n\n\n\n\n\nSimulationComponent\n\nSimulationComponent\n\nUiModule -->\n\nSimulationComponent->UiModule\n\n\n\n\n\nStatisticsComponent\n\nStatisticsComponent\n\nUiModule -->\n\nStatisticsComponent->UiModule\n\n\n\n\n\nUiComponent\n\nUiComponent\n\nUiModule -->\n\nUiComponent->UiModule\n\n\n\n\n\nWeatherComponent\n\nWeatherComponent\n\nUiModule -->\n\nWeatherComponent->UiModule\n\n\n\n\n\nWizardComponent\n\nWizardComponent\n\nUiModule -->\n\nWizardComponent->UiModule\n\n\n\n\n\nUiRoutingModule\n\nUiRoutingModule\n\nUiModule -->\n\nUiRoutingModule->UiModule\n\n\n\n\n\nMapService\n\nMapService\n\nUiModule -->\n\nMapService->UiModule\n\n\n\n\n\nSchedulerService\n\nSchedulerService\n\nUiModule -->\n\nSchedulerService->UiModule\n\n\n\n\n\nWizardService\n\nWizardService\n\nUiModule -->\n\nWizardService->UiModule\n\n\n\n\n\nWeatherService\n\nWeatherService\n\nWeatherModule -->\n\nWeatherService->WeatherModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            11 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        21 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        10 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        23 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        17 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EnumValueType   (src/.../utils.ts)\n                        \n                        \n                            MapActions   (src/.../map.actions.ts)\n                        \n                        \n                            SimulationActions   (src/.../simulation.actions.ts)\n                        \n                        \n                            WizardActions   (src/.../wizard.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/ui/utils.ts\n    \n        \n            \n                \n                    \n                        \n                        EnumValueType\n                    \n                \n                \n                    \n                        EnumValueType:     string | number\n\n                    \n                \n            \n        \n\n    src/app/ui/models/actions/map.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        MapActions\n                    \n                \n                \n                    \n                        MapActions:     MapChanged | Reset\n\n                    \n                \n            \n        \n\n    src/app/simulation/models/actions/simulation.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        SimulationActions\n                    \n                \n                \n                    \n                        SimulationActions:     SimulationChanged | SimulationEnded | PeriodsChanged | Reset\n\n                    \n                \n            \n        \n\n    src/app/ui/models/actions/wizard.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        WizardActions\n                    \n                \n                \n                    \n                        WizardActions:     StepChanged | StepError | StepPending | GoOn | Reset\n\n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            busiestChartOptions   (src/.../charts-config.ts)\n                        \n                        \n                            busiestColor   (src/.../charts-config.ts)\n                        \n                        \n                            currentStep   (src/.../reducers.ts)\n                        \n                        \n                            end   (src/.../reducers.ts)\n                        \n                        \n                            environment   (src/.../environment.test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            error   (src/.../reducers.ts)\n                        \n                        \n                            featureSimulationState   (src/.../reducers.ts)\n                        \n                        \n                            featureUiState   (src/.../reducers.ts)\n                        \n                        \n                            getCurrentStep   (src/.../wizard.reducer.ts)\n                        \n                        \n                            getEnd   (src/.../simulation.reducer.ts)\n                        \n                        \n                            getError   (src/.../wizard.reducer.ts)\n                        \n                        \n                            getMap   (src/.../map.reducer.ts)\n                        \n                        \n                            getPending   (src/.../wizard.reducer.ts)\n                        \n                        \n                            getPeriods   (src/.../simulation.reducer.ts)\n                        \n                        \n                            getSimulation   (src/.../simulation.reducer.ts)\n                        \n                        \n                            getSteps   (src/.../wizard.reducer.ts)\n                        \n                        \n                            HOME_TRANSITION   (src/.../home.transition.ts)\n                        \n                        \n                            initialMapState   (src/.../map.reducer.ts)\n                        \n                        \n                            initialSimulationState   (src/.../simulation.reducer.ts)\n                        \n                        \n                            initialWizardState   (src/.../wizard.reducer.ts)\n                        \n                        \n                            map   (src/.../reducers.ts)\n                        \n                        \n                            mapState   (src/.../reducers.ts)\n                        \n                        \n                            mapStyle   (src/.../map.style.ts)\n                        \n                        \n                            materialModules   (src/.../material.module.ts)\n                        \n                        \n                            pending   (src/.../reducers.ts)\n                        \n                        \n                            periods   (src/.../reducers.ts)\n                        \n                        \n                            reducers   (src/.../reducers.ts)\n                        \n                        \n                            reducers   (src/.../reducers.ts)\n                        \n                        \n                            sharedModules   (src/.../shared.module.ts)\n                        \n                        \n                            simulation   (src/.../reducers.ts)\n                        \n                        \n                            simulationState   (src/.../reducers.ts)\n                        \n                        \n                            steps   (src/.../reducers.ts)\n                        \n                        \n                            STEPS   (src/.../ui-state.ts)\n                        \n                        \n                            trafficChartOptions   (src/.../charts-config.ts)\n                        \n                        \n                            uiConfig   (src/.../ui-config.ts)\n                        \n                        \n                            wizardState   (src/.../reducers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/ui/charts/charts-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            busiestChartOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        busiestChartOptions:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    legend: {\n        display: true\n    },\n    title: {\n        display: true\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n        xAxes: [{\n            id: 'x-axis-0',\n            type: 'category',\n            scaleLabel: {\n                display: true,\n                labelString: 'Time'\n            },\n            ticks: {\n                beginAtZero: true\n            }\n        }],\n        yAxes: [{\n            id: 'y-axis-0',\n            type: 'linear',\n            ticks: {\n                stepSize: 10\n            }\n        }]\n    },\n    annotation: {\n        drawTime: 'afterDatasetsDraw',\n        annotations: []\n    }\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            busiestColor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        busiestColor:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '#63a4ff'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trafficChartOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trafficChartOptions:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    legend: {\n        display: false\n    },\n    title: {\n        display: true\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n        xAxes: [{\n            scaleLabel: {\n                display: true,\n                labelString: 'Time (s)'\n            },\n            ticks: {\n                beginAtZero: true\n            }\n        }],\n        yAxes: [{\n            display: true,\n            maxBarThickness: 40\n        }]\n    }\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/ui/models/reducers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            currentStep\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentStep:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    wizardState,\n    fromWizard.getCurrentStep\n)\n                        \n                    \n\n                \n                    \n                        Exports the current step state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    wizardState,\n    fromWizard.getError\n)\n                        \n                    \n\n                \n                    \n                        Exports the error state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            featureUiState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        featureUiState:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createFeatureSelector('ui')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            map\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        map:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    mapState,\n    fromMap.getMap\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mapState:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    featureUiState,\n    (state: UiState) => state.map\n)\n                        \n                    \n\n                \n                    \n                        Exports the map state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pending\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pending:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    wizardState,\n    fromWizard.getPending\n)\n                        \n                    \n\n                \n                    \n                        Exports the pending state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reducers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reducers:     ActionReducerMap\n\n                    \n                \n                    \n                        \n                            Type :     ActionReducerMap\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    wizard: fromWizard.wizardReducer,\n    map: fromMap.mapReducer\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            steps\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        steps:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    wizardState,\n    fromWizard.getSteps\n)\n                        \n                    \n\n                \n                    \n                        Exports the steps state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wizardState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        wizardState:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    featureUiState,\n    (state: UiState) => state.wizard\n)\n                        \n                    \n\n                \n                    \n                        Exports the wizard state.\n\n                    \n                \n\n            \n        \n\n    src/app/simulation/models/reducers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            end\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        end:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    simulationState,\n    fromSimulation.getEnd\n)\n                        \n                    \n\n                \n                    \n                        Exports the end state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            featureSimulationState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        featureSimulationState:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createFeatureSelector('simulation')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            periods\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        periods:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    simulationState,\n    fromSimulation.getPeriods\n)\n                        \n                    \n\n                \n                    \n                        Exports the periods state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reducers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reducers:     ActionReducerMap\n\n                    \n                \n                    \n                        \n                            Type :     ActionReducerMap\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    simulation: fromSimulation.simulationReducer\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            simulation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        simulation:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    simulationState,\n    fromSimulation.getSimulation\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            simulationState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        simulationState:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    featureSimulationState,\n    (state: SimulationState) => state.simulation\n)\n                        \n                    \n\n                \n                    \n                        Exports the simulation state.\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    production: false,\n    testing: true,\n    functions: {\n        networkData: {\n            url: ''\n        },\n        trafficData: {\n            url: ''\n        }\n    }\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    production: true,\n    testing: false,\n    functions: {\n        networkData: {\n            url: 'https://us-central1-' + appConfig.firebase.projectId + '.cloudfunctions.net/networkData'\n        },\n        trafficData: {\n            url: 'https://us-central1-' + appConfig.firebase.projectId + '.cloudfunctions.net/trafficData'\n        }\n    }\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    production: false,\n    testing: false,\n    functions: {\n        networkData: {\n            url: 'http://localhost:4201/' + appConfig.firebase.projectId + '/us-central1/networkData'\n        },\n        trafficData: {\n            url: 'http://localhost:4201/' + appConfig.firebase.projectId + '/us-central1/trafficData'\n        }\n    }\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/ui/models/reducers/wizard.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getCurrentStep\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getCurrentStep:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : (state: WizardState) => state.currentStep\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getError:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : (state: WizardState) => state.error\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPending\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getPending:     string | boolean\n\n                    \n                \n                    \n                        \n                            Type :     string | boolean\n\n                        \n                    \n                    \n                        \n                            Default value : (state: WizardState) => state.pending\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSteps\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getSteps:     Step[]\n\n                    \n                \n                    \n                        \n                            Type :     Step[]\n\n                        \n                    \n                    \n                        \n                            Default value : (state: WizardState) => state.steps\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialWizardState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        initialWizardState:     WizardState\n\n                    \n                \n                    \n                        \n                            Type :     WizardState\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    steps: STEPS,\n    currentStep: 0,\n    error: null,\n    pending: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/simulation/models/reducers/simulation.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getEnd\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getEnd:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : (state: SimulationState) => state.end\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPeriods\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getPeriods:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : (state: SimulationState) => state.periods\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSimulation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getSimulation:     Simulation\n\n                    \n                \n                    \n                        \n                            Type :     Simulation\n\n                        \n                    \n                    \n                        \n                            Default value : (state: SimulationState) => state.simulation\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialSimulationState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        initialSimulationState:     SimulationState\n\n                    \n                \n                    \n                        \n                            Type :     SimulationState\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    simulation: null,\n    end: false,\n    periods: null\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/ui/models/reducers/map.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getMap:     Map\n\n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : (state: MapState) => state.map\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialMapState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        initialMapState:     MapState\n\n                    \n                \n                    \n                        \n                            Type :     MapState\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    map: null\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/home/home.transition.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            HOME_TRANSITION\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        HOME_TRANSITION:     AnimationTriggerMetadata\n\n                    \n                \n                    \n                        \n                            Type :     AnimationTriggerMetadata\n\n                        \n                    \n                    \n                        \n                            Default value : trigger('homeTransition', [\n    transition('void => *', [\n        style({\n            opacity: 0\n        }),\n        animate('500ms 0ms ease-in',\n            style({\n                opacity: 1\n            })\n        )\n    ])\n])\n                        \n                    \n\n\n            \n        \n\n    src/app/ui/map/map.style.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mapStyle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mapStyle:     google.maps.MapTypeStyle[]\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.MapTypeStyle[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        \"featureType\": \"administrative\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road\",\n        \"elementType\": \"labels.icon\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"transit\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    }\n]\n                        \n                    \n\n                \n                    \n                        Styled Maps: https://developers.google.com/maps/documentation/javascript/styling\n\n                    \n                \n\n            \n        \n\n    src/app/shared/material.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            materialModules\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        materialModules:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    MatSidenavModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    MatMenuModule,\n    MatStepperModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule,\n    MatDialogModule,\n    MatGridListModule,\n    MatSelectModule,\n    MatExpansionModule,\n    MatTableModule\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/shared/shared.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            sharedModules\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sharedModules:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    CommonModule,\n    RouterModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    FlexLayoutModule\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/ui/models/ui-state.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            STEPS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        STEPS:     Step[]\n\n                    \n                \n                    \n                        \n                            Type :     Step[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n                \n                    \n                        Initial steps.\n\n                    \n                \n\n            \n        \n\n    src/app/ui/ui-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            uiConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uiConfig:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    /**\n     * Initial map.\n     */\n    map: {\n        center: { lat: 41.910943, lng: 12.476358 },\n        zoom: 4\n    },\n    /**\n     * Time of simulation limit in hours.\n     */\n    timeLimit: 24,\n    /**\n     * Area limit in hectares.\n     */\n    areaMaxLimit: 30,\n    areaMinLimit: 3,\n    links: {\n        baseColor: '#babdbe',\n        noTrafficColor: '#76d219',\n        moderateTrafficColor: '#d27519',\n        heavyTrafficColor: '#d2191a'\n    },\n    /**\n     * Minimum edge distance for traffic data.\n     */\n    minDistance: 20,\n    /**\n     * Minimum edge duration for traffic data.\n     */\n    minDuration: 2,\n    /**\n     * Maximum number of O/D pairs that the user can select.\n     */\n    maxOdPairs: 5,\n    /**\n     * The number of shortest paths to compute.\n     */\n    k: 3,\n    /**\n     * Multinomial logit parameter.\n     */\n    theta: 2,\n    /**\n     * Minimum spacing between subsequent vehicles.\n     */\n    sp: 5,\n    /**\n     * Shortest paths.\n     */\n    paths: {\n        /**\n         * Highly, Medium, Poorly\n         */\n        colors: [\n            '#004ba0',\n            '#1976d2',\n            '#63a4ff'\n        ]\n    },\n    /**\n     * Maximum No. vehicles for O/D pair.\n     */\n    maxDemand: 10000,\n    /**\n     * Weather Adjustment Factor Coefficients for max flow.\n     * \"Traffic Analysis Toolbox. Volume XI: Weather and Traffic Analysis, Modeling and Simulation\"\n     */\n    adjustmentFactorCoefficients: [0.91, 0.009, -0.404, -1.455, 0, 0],\n    /**\n     * Visibility (m).\n     */\n    visibility: {\n        max: 10000,\n        default: 10000 // Normal value\n    },\n    /**\n     * Rain rating (mm).\n     */\n    rainIntensity: {\n        max: 70\n    },\n    /**\n     * Snow rating (mm).\n     */\n    snowIntensity: {\n        max: 20\n    },\n    weatherIcons: ['01d', '02d', '03d', '04d', '09d', '10d', '11d', '13d', '50d'],\n    /**\n     * Minimum fraction of the capacity of the moderate traffic level.\n     */\n    moderateTraffic: 0.25,\n    /**\n     * Minimum fraction of the capacity of the heavy traffic level.\n     */\n    heavyTraffic: 0.75,\n    /**\n     * Simulated time interval (ms).\n     */\n    simulatedTimeInterval: 500,\n    timeIntervalIncrement: 100,\n    timeIntervalDecrement: 100,\n    /**\n     * Maximum time interval in seconds for LTM.\n     */\n    maxTimeInterval: 10\n}\n                        \n                    \n\n                \n                    \n                        User interface configuration.\n\n                    \n                \n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
