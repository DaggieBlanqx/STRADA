var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AboutComponent.html",[0,0.555,1,1.188]],["body/components/AboutComponent.html",[0,1.011,1,2.08,2,0.184,3,0.206,4,1.516,5,1.516,6,1.197,7,0.109,8,4.531,9,1.43,10,2.404,11,1.516,12,2.829,13,2.406,14,2.226,15,5.982,16,2.226,17,5.982,18,0.254,19,0.638,20,6.636,21,1.43,22,2.557,23,1.31,24,0.879,25,5.982,26,4.531,27,0.744,28,0.013,29,1.294,30,1.14,31,0.344,32,0.917,33,0.799,34,2.59,35,5.219,36,0.254,37,0.744,38,0.109,39,0.021,40,4.819,41,4.716,42,2.491,43,4.34,44,1.806,45,2.697,46,1.294,47,4.716,48,2.309,49,3.952,50,3.952,51,4.04,52,4.04,53,4.716,54,5.219,55,5.219,56,3.952,57,5.219,58,3.073,59,5.219,60,2.937,61,5.982,62,4.34,63,5.219,64,3.659,65,5.982,66,5.219,67,5.982,68,5.219,69,1.083,70,2.001,71,1.58,72,1.934,73,2.383,74,1.516,75,3.571,76,3.571,77,3.571,78,4.531,79,0.881,80,1.516,81,1.368,82,1.516,83,1.368,84,1.855,85,1.014,86,1.516,87,1.368,88,1.713,89,1.516,90,1.368,91,1.464,92,1.516,93,1.368,94,1.516,95,1.368,96,1.415,97,2.001,98,1.323,99,1.516,100,1.368,101,1.516,102,1.368,103,1.368,104,1.516,105,1.516,106,1.368,107,1.516,108,1.323,109,1.516,110,1.368,111,1.197,112,2.001,113,1.368,114,1.368,115,1.368,116,1.516,117,1.368,118,1.516,119,1.323,120,1.516,121,1.323,122,1.516,123,1.368,124,1.516,125,1.368,126,1.516,127,0.009,128,0.009]],["title/components/AppComponent.html",[0,0.555,81,1.229]],["body/components/AppComponent.html",[0,1.06,1,1.544,2,0.203,3,0.163,4,1.769,5,1.769,6,1.397,7,0.127,11,1.769,12,2.862,13,2.475,14,2.459,16,2.459,28,0.013,36,0.297,37,0.869,38,0.127,39,0.024,40,4.186,69,1.265,70,2.211,71,1.745,72,2.136,73,2.526,74,1.769,79,0.973,80,1.769,81,2.279,82,1.769,83,1.597,84,1.922,85,1.183,86,1.769,87,1.597,88,1.797,89,1.769,90,1.597,91,1.709,92,1.769,93,1.597,94,1.769,95,1.597,96,1.652,97,2.211,98,1.544,99,1.769,100,1.597,101,1.769,102,1.597,103,1.597,104,1.769,105,1.769,106,1.597,107,1.769,108,1.544,109,1.769,110,1.597,111,1.397,112,2.211,113,1.597,114,1.597,115,1.597,116,1.769,117,1.597,118,1.769,119,1.544,120,1.769,121,1.544,122,1.769,123,1.597,124,1.769,125,1.597,126,1.769,127,0.01,128,0.01,129,5.289,130,6.608,131,6.608,132,6.608]],["title/modules/AppModule.html",[133,1.188,134,2.953]],["body/modules/AppModule.html",[1,2.247,2,0.146,3,0.146,7,0.113,13,1.428,28,0.013,36,0.472,37,0.777,38,0.147,39,0.022,69,1.131,81,2.48,98,2.247,108,2.247,119,2.247,127,0.009,128,0.009,133,1.796,134,6.188,135,2.321,136,3.684,137,3.684,138,2.961,139,4.125,140,4.125,141,4.125,142,4.125,143,5.198,144,5.198,145,5.198,146,5.198,147,4.488,148,5.198,149,2.892,150,1.169,151,2.429,152,4.728,153,3.02,154,6.152,155,6.152,156,4.849,157,3.43,158,6.152,159,4.728,160,3.727,161,1.291,162,4.125,163,4.125,164,4.728,165,4.125,166,4.125,167,4.125,168,4.125,169,4.728,170,4.728,171,4.728,172,4.728,173,5.367,174,1.969,175,4.728,176,4.728,177,4.728,178,4.728,179,2.679,180,1.76]],["title/classes/AppPreloadingStrategy.html",[39,0.019,181,3.208]],["body/classes/AppPreloadingStrategy.html",[2,0.184,3,0.184,7,0.143,9,1.703,18,0.336,21,1.703,24,0.785,27,1.17,28,0.013,31,0.455,36,0.4,38,0.143,39,0.033,79,0.88,127,0.011,128,0.011,181,5.614,182,5.614,183,6.869,184,5.981,185,6.636,186,7.123,187,4.333,188,7.874,189,3.907,190,5.981,191,0.88,192,0.88,193,3.167,194,3.222,195,2.226,196,5.981,197,5.981,198,3.222]],["title/modules/AppRoutingModule.html",[133,1.188,143,2.749]],["body/modules/AppRoutingModule.html",[0,1.05,1,1.997,2,0.172,3,0.172,7,0.134,13,1.689,28,0.013,36,0.461,37,0.919,38,0.164,39,0.026,44,1.689,46,1.21,98,1.997,108,1.997,119,1.997,127,0.01,128,0.01,133,1.633,138,2.422,143,4.619,153,3.358,165,4.879,166,4.879,167,4.879,168,4.879,181,5.825,182,4.409,183,5.967,185,4.879,194,3.013,199,4.879,200,4.962,201,5.593,202,5.593,203,3.14,204,6.84,205,6.446,206,4.879,207,4.409,208,5.593,209,5.593,210,2.081,211,4.057,212,4.409]],["title/classes/BaseComponent.html",[39,0.019,213,1.913]],["body/classes/BaseComponent.html",[0,1.078,2,0.161,3,0.161,7,0.125,9,1.566,10,2.571,18,0.293,19,0.699,21,1.566,22,2.696,24,1.037,27,1.271,28,0.013,29,1.782,31,0.396,32,1.055,33,0.92,36,0.368,37,0.857,38,0.125,39,0.035,85,1.466,88,1.515,127,0.01,128,0.01,195,1.941,213,3.079,214,5.216,215,1.575,216,8.015,217,3.216,218,5.645,219,3.714,220,3.531,221,3.688,222,3.688,223,3.688,224,5.216,225,5.216,226,5.216,227,5.216,228,3.713,229,2.193,230,3.688,231,5.216,232,5.216,233,2.836,234,4.112,235,4.112]],["title/interfaces/CanComponentDeactivate.html",[236,0.743,237,2.953]],["body/interfaces/CanComponentDeactivate.html",[2,0.184,3,0.184,7,0.143,9,1.428,18,0.335,19,0.759,27,0.981,28,0.013,31,0.454,36,0.427,37,0.981,38,0.171,39,0.028,127,0.011,128,0.011,180,2.222,189,3.655,193,3.165,194,3.217,195,2.222,236,1.299,237,5.514,238,5.209,239,4.033,240,5.209,241,5.918,242,2.648,243,6.208,244,2.009,245,4.033,246,5.209,247,6.208]],["title/injectables/CanDeactivateGuard.html",[242,1.515,245,2.749]],["body/injectables/CanDeactivateGuard.html",[0,0.796,2,0.18,3,0.18,7,0.14,9,1.395,18,0.328,21,1.678,24,0.766,27,1.153,28,0.013,31,0.443,36,0.423,37,0.958,38,0.168,39,0.027,79,0.859,127,0.011,128,0.011,180,2.171,191,0.859,192,0.859,193,3.251,194,3.143,195,2.171,236,1.065,237,5.665,238,6.121,239,4.739,240,5.089,241,5.796,242,2.801,243,6.565,244,2.125,245,4.739,246,6.121,247,6.121,248,5.834]],["title/components/ChangeOfConditionsComponent.html",[0,0.555,83,1.229]],["body/components/ChangeOfConditionsComponent.html",[0,0.934,1,0.856,2,0.135,3,0.09,4,0.981,5,0.981,6,0.774,7,0.07,9,1.051,10,1.895,11,0.981,12,2.709,13,2.066,14,1.636,16,1.636,18,0.371,19,0.469,21,1.051,22,2.457,23,0.86,24,1.04,27,1.276,28,0.013,29,1.65,30,1.165,31,0.535,32,0.89,33,1.358,36,0.428,37,0.481,38,0.07,39,0.014,46,0.952,48,1.697,69,0.701,70,1.471,71,1.161,72,1.421,73,1.962,74,0.981,79,0.971,80,0.981,81,0.885,82,0.981,83,1.771,84,1.804,85,1.641,86,0.981,87,0.885,88,1.526,89,0.981,90,0.885,91,0.947,92,0.981,93,0.885,94,0.981,95,0.885,96,0.915,97,1.471,98,0.856,99,0.981,100,0.885,101,0.981,102,0.885,103,0.885,104,0.981,105,0.981,106,0.885,107,0.981,108,0.856,109,0.981,110,0.885,111,0.774,112,1.471,113,0.885,114,1.328,115,0.885,116,0.981,117,0.885,118,0.981,119,0.856,120,0.981,121,0.856,122,0.981,123,0.885,124,0.981,125,0.885,126,0.981,127,0.007,128,0.007,150,0.724,161,0.8,174,1.22,191,0.863,192,0.863,213,3.385,215,2.066,217,3.24,219,2.833,220,2.481,221,3.36,222,3.24,223,3.36,228,2.481,229,1.284,230,2.159,233,1.269,249,7.627,250,6.654,251,2.931,252,2.259,253,2.067,254,4.398,255,4.398,256,4.398,257,4.398,258,4.398,259,3.757,260,4.091,261,2.31,262,5.202,263,3.217,264,2.757,265,2.197,266,3.159,267,2.644,268,3.506,269,4.952,270,3.716,271,2.931,272,2.931,273,2.931,274,2.931,275,3.174,276,5.116,277,2.931,278,5.278,279,6.285,280,2.931,281,2.159,282,0.517,283,2.931,284,2.931,285,2.931,286,2.931,287,2.931,288,2.931,289,1.505,290,1.505,291,1.505,292,1.505,293,1.505,294,4.623,295,2.931,296,1.505,297,2.126,298,2.557,299,2.931,300,4.623,301,2.126,302,1.579,303,1.66,304,1.752,305,2.31,306,2.557,307,1.579,308,1.378,309,3.344,310,2.557,311,2.126,312,2.126,313,1.091,314,1.091,315,1.505,316,3.836,317,1.743,318,1.505,319,2.557,320,2.931,321,1.857,322,1.505,323,1.505,324,2.067,325,2.369,326,2.557,327,1.722,328,4.398,329,2.931,330,2.931,331,2.931,332,2.931,333,2.931,334,2.931,335,2.931,336,1.697,337,3.19,338,2.931,339,2.931,340,2.931,341,1.752,342,2.931,343,2.931,344,2.931,345,1.321,346,1.505,347,1.983,348,1.771,349,1.857,350,4.398,351,2.931,352,1.439,353,2.126,354,2.557,355,2.931,356,2.931,357,2.369,358,2.369,359,3.836,360,3.836,361,7.333,362,3.836,363,5.116,364,2.97,365,2.786]],["title/components/ChartsComponent.html",[0,0.555,87,1.229]],["body/components/ChartsComponent.html",[0,0.923,1,0.826,2,0.132,3,0.087,4,0.947,5,0.947,6,0.748,7,0.068,9,1.024,10,1.855,11,0.947,12,2.698,13,2.042,14,1.594,16,1.594,18,0.159,19,0.457,21,1.024,22,2.428,23,0.838,24,1.065,27,1.277,28,0.013,29,1.767,30,0.729,31,0.581,32,0.573,33,0.911,34,2.238,36,0.408,37,0.465,38,0.068,39,0.013,42,2.152,44,1.56,46,1.409,69,0.677,70,1.433,71,1.131,72,1.384,73,1.928,74,0.947,79,0.761,80,0.947,81,0.854,82,0.947,83,0.854,84,1.617,85,0.958,86,0.947,87,1.74,88,1.611,89,0.947,90,0.854,91,0.915,92,0.947,93,0.854,94,0.947,95,0.854,96,0.884,97,1.433,98,0.826,99,0.947,100,0.854,101,0.947,102,0.854,103,0.854,104,0.947,105,0.947,106,0.854,107,0.947,108,0.826,109,0.947,110,0.854,111,0.748,112,1.433,113,0.854,114,1.293,115,0.854,116,0.947,117,0.854,118,0.947,119,0.826,120,0.947,121,0.826,122,0.947,123,0.854,124,0.947,125,0.854,126,0.947,127,0.007,128,0.007,161,0.773,174,1.178,180,1.923,191,0.417,192,0.848,195,1.053,210,1.053,213,3.352,217,3.197,218,4.073,219,3.14,220,3.18,221,3.321,222,3.321,223,3.321,228,2.429,229,1.25,230,2.103,233,1.226,234,2.231,235,2.231,252,2.2,263,3.18,289,1.454,290,1.454,291,1.454,292,1.454,293,1.454,296,1.454,307,1.525,308,1.33,313,1.053,314,1.594,315,1.454,317,1.365,318,1.454,322,1.454,323,1.454,341,1.692,345,1.276,346,1.454,347,1.276,348,1.74,352,1.389,366,2.83,367,4.073,368,7.573,369,4.283,370,4.283,371,5.763,372,5.763,373,5.763,374,5.763,375,5.763,376,5.763,377,3.651,378,5.763,379,4.542,380,5.763,381,5.763,382,5.763,383,5.763,384,2.231,385,4.724,386,3.651,387,4.283,388,2.83,389,2.83,390,2.83,391,2.83,392,2.83,393,2.83,394,2.83,395,2.83,396,2.83,397,2.83,398,2.83,399,2.83,400,7.131,401,2.83,402,2.83,403,2.83,404,2.83,405,2.83,406,2.469,407,2.231,408,2.053,409,4.508,410,3.736,411,3.736,412,2.83,413,4.283,414,2.83,415,4.283,416,2.83,417,4.283,418,2.83,419,2.053,420,2.469,421,2.469,422,2.83,423,2.83,424,2.83,425,2.83,426,2.83,427,2.83,428,2.83,429,2.83,430,4.283,431,3.689,432,5.168,433,4.283,434,2.83,435,2.83,436,2.83,437,2.83,438,4.508,439,2.231,440,2.83,441,5.168,442,2.83,443,2.83,444,2.83,445,2.83,446,2.83,447,2.469,448,2.83,449,2.83,450,2.83,451,2.469,452,2.83,453,2.83,454,2.83,455,2.83,456,1.016,457,2.83,458,4.283,459,4.283,460,2.83,461,4.283,462,2.469,463,3.736,464,2.83,465,5.763,466,4.283,467,1.855,468,4.283,469,4.283,470,4.283,471,3.736,472,4.283,473,3.376,474,2.469,475,2.83,476,4.283,477,2.469,478,3.376,479,2.83,480,2.231,481,2.83,482,1.692,483,2.83,484,1.793,485,2.83,486,2.83,487,2.83,488,2.83,489,2.83,490,2.83,491,2.83,492,2.83,493,2.83,494,2.83,495,2.83,496,2.83]],["title/injectables/ClockService.html",[242,1.515,497,2.433]],["body/injectables/ClockService.html",[2,0.093,3,0.093,7,0.073,18,0.17,19,0.48,21,1.076,23,0.88,24,1.05,27,1.247,28,0.013,29,1.739,30,1.292,31,0.589,32,1.088,33,0.948,36,0.399,37,0.497,38,0.108,39,0.014,44,2.357,48,2.669,79,0.663,114,0.913,127,0.007,128,0.007,150,1.472,161,0.826,191,0.663,192,0.663,193,2.48,195,1.125,210,2.217,219,3.204,228,1.422,242,2.001,244,1.682,263,3.139,308,1.422,313,1.125,314,1.125,317,2.234,324,2.994,327,1.076,345,1.364,347,3.01,348,2.145,349,4.23,352,3.278,386,3.774,497,2.691,498,2.638,499,4.696,500,5.601,501,5.957,502,5.601,503,6.199,504,5.556,505,5.957,506,1.795,507,5.957,508,5.263,509,3.927,510,5.824,511,5.824,512,4.248,513,2.743,514,3.991,515,5.957,516,1.808,517,4.502,518,3.024,519,3.024,520,3.024,521,3.927,522,3.024,523,3.024,524,3.024,525,3.024,526,3.024,527,3.024,528,3.927,529,3.927,530,3.024,531,3.024,532,3.024,533,3.024,534,4.502,535,3.024,536,4.502,537,4.239,538,3.266,539,3.024,540,3.024,541,3.927,542,3.024,543,4.502,544,2.194,545,2.638,546,2.194,547,1.916,548,3.024,549,1.554,550,1.125,551,3.024,552,4.691,553,1.629,554,6.199,555,6.624,556,4.502,557,4.502,558,2.116,559,5.957,560,4.691,561,7.106,562,3.024,563,5.378,564,3.024,565,3.024,566,3.024,567,3.024,568,3.024,569,3.024,570,3.024,571,3.024,572,3.024,573,3.024,574,2.638,575,6.677,576,1.554,577,3.024,578,3.024,579,4.502,580,6.369,581,3.024,582,2.638,583,1.799,584,5.556,585,4.023,586,3.127,587,2.042,588,4.502,589,5.378,590,4.502,591,4.502,592,3.024,593,4.502,594,3.024]],["title/interfaces/Counts.html",[236,0.743,595,1.835]],["body/interfaces/Counts.html",[2,0.181,3,0.181,7,0.141,18,0.33,19,0.752,28,0.013,30,1.433,31,0.536,38,0.181,44,2.364,46,1.525,127,0.011,128,0.011,236,1.429,282,1.331,456,2.11,484,3.725,514,3.514,595,3.61,596,4.634,597,3.725,598,6.171,599,6.171,600,4.761,601,4.265,602,3.97,603,4.265,604,3.97,605,2.764,606,4.265]],["title/modules/DemandModule.html",[133,1.188,144,2.749]],["body/modules/DemandModule.html",[2,0.189,3,0.189,7,0.147,28,0.013,36,0.432,37,1.008,38,0.173,39,0.028,69,1.467,127,0.011,128,0.011,133,2.111,135,3.012,136,3.895,137,3.305,138,3.329,144,5.543,149,3.399,150,1.517,151,3.152,153,3.55,270,5.2,607,5.353,608,5.353,609,6.136,610,6.136]],["title/injectables/DemandService.html",[242,1.515,270,2.579]],["body/injectables/DemandService.html",[2,0.091,3,0.091,7,0.071,18,0.354,19,0.472,21,1.058,23,0.578,24,1.012,27,1.321,28,0.013,29,1.432,30,1.439,31,0.558,32,0.895,33,0.78,36,0.372,37,0.485,38,0.071,39,0.014,42,1.842,48,2.047,60,3.249,79,1.039,91,2.139,127,0.007,128,0.007,150,1.455,174,1.23,180,1.099,189,2.272,191,1.039,192,1.039,193,2.208,195,1.099,198,1.591,203,2.273,210,1.099,215,1.998,242,1.973,244,1.249,265,2.451,266,3.172,269,5.355,270,2.802,276,5.773,281,3.709,304,1.766,311,2.143,313,1.099,314,1.099,317,2.082,327,1.508,348,2.306,456,2.376,467,2.296,480,5.956,506,1.988,512,3.17,529,3.858,549,1.517,558,1.389,611,2.954,612,3.682,613,4.154,614,5.888,615,4.423,616,5.888,617,4.423,618,4.423,619,5.888,620,5.888,621,5.888,622,4.423,623,7.056,624,2.954,625,4.423,626,4.423,627,4.189,628,7.556,629,2.954,630,5.303,631,2.724,632,3.249,633,3.958,634,2.954,635,3.172,636,4.423,637,2.954,638,4.423,639,2.954,640,2.954,641,2.954,642,6.862,643,2.954,644,2.954,645,4.423,646,3.749,647,2.954,648,3.209,649,4.423,650,2.506,651,5.888,652,4.423,653,2.954,654,3.487,655,4.423,656,2.954,657,4.423,658,2.954,659,2.506,660,3.239,661,2.954,662,2.172,663,1.517,664,2.143,665,5.888,666,1.994,667,2.954,668,2.954,669,2.954,670,1.871,671,5.303,672,2.954,673,2.954,674,2.954,675,3.253,676,2.506,677,2.954,678,2.954,679,5.888,680,4.423,681,2.954,682,1.591,683,2.954,684,2.954,685,2.954,686,2.954,687,4.423,688,5.888,689,2.954]],["title/classes/Edge.html",[39,0.019,456,1.461]],["body/classes/Edge.html",[2,0.053,3,0.114,6,0.452,7,0.041,18,0.096,19,0.394,21,0.685,23,0.335,24,0.979,27,1.24,28,0.013,29,1.346,30,1.419,31,0.567,32,0.748,33,1.063,34,0.741,36,0.292,38,0.144,39,0.022,42,1.8,45,0.771,46,1.041,58,0.879,60,3.212,64,0.879,71,0.757,79,0.636,111,0.757,127,0.004,128,0.004,174,0.712,179,0.969,180,1.609,187,0.922,191,0.814,192,0.708,193,1.8,195,0.637,198,1.543,203,2.915,210,1.375,215,0.865,236,0.789,244,1.22,253,1.347,265,0.712,267,1.292,275,2.614,281,2.556,282,1.233,313,0.637,314,0.637,317,1.531,327,1.692,336,2.238,348,2.304,357,1.543,358,2.329,431,2.949,456,2.725,467,2.394,506,2.073,549,0.879,550,0.637,576,2.472,595,1.666,605,2.032,612,2.447,613,1.991,627,2.804,631,1.472,632,3.513,633,1.543,635,3.893,646,0.969,650,0.969,659,1.623,660,0.879,662,1.814,663,0.879,666,1.666,675,2.883,676,3.706,682,0.922,690,0.969,691,2.329,692,2.584,693,3.688,694,3.112,695,3.414,696,3.444,697,3.112,698,3.428,699,2.584,700,3.603,701,2.584,702,2.877,703,3.285,704,3.781,705,3.112,706,2.584,707,2.865,708,3.706,709,2.209,710,2.865,711,2.584,712,2.584,713,1.712,714,1.711,715,1.711,716,1.711,717,1.711,718,3.112,719,2.094,720,1.712,721,1.711,722,1.711,723,1.711,724,2.094,725,1.712,726,1.712,727,1.292,728,1.711,729,1.711,730,1.711,731,2.094,732,2.804,733,1.711,734,1.711,735,1.543,736,1.711,737,1.472,738,1.711,739,1.711,740,1.711,741,1.712,742,1.711,743,1.712,744,1.711,745,1.406,746,2.472,747,1.991,748,1.712,749,2.584,750,1.711,751,1.623,752,1.543,753,1.712,754,1.711,755,1.543,756,1.711,757,1.711,758,2.584,759,1.712,760,0.958,761,0.969,762,1.023,763,1.023,764,2.674,765,3.132,766,2.959,767,0.922,768,0.969,769,2.978,770,1.623,771,1.712,772,1.023,773,1.023,774,0.969,775,1.023,776,0.969,777,1.023,778,2.449,779,1.023,780,1.023,781,1.023,782,1.023,783,1.023,784,1.023,785,1.023,786,0.969,787,0.969,788,2.209,789,0.922,790,1.023,791,1.023,792,1.023,793,1.712,794,1.712,795,1.023,796,1.023,797,1.023,798,1.712,799,1.712,800,1.712,801,1.023,802,1.023,803,1.023,804,1.623,805,2.209,806,2.584,807,2.584,808,1.712,809,1.712,810,2.584,811,2.209,812,2.584,813,2.584,814,1.023,815,1.712,816,1.712,817,1.712,818,1.023,819,1.712,820,1.023,821,1.712,822,1.023,823,1.023,824,1.023,825,1.023,826,2.726,827,0.969,828,0.922,829,1.023,830,0.969,831,1.712,832,1.023,833,1.023,834,1.6,835,1.023,836,2.209,837,1.023,838,1.023,839,1.712,840,1.023,841,1.023,842,1.023,843,1.023,844,1.023,845,0.922,846,1.712,847,1.712,848,1.023,849,1.712,850,1.023,851,1.023,852,1.023,853,1.023,854,1.023,855,1.023,856,1.023,857,1.023,858,1.023,859,1.023,860,1.712,861,1.023,862,1.023,863,1.023,864,1.472,865,1.023,866,2.209,867,2.209,868,1.023,869,2.209,870,1.023,871,1.023,872,1.023,873,1.712,874,1.023,875,1.023,876,1.023,877,1.623,878,1.023,879,1.023,880,1.023,881,0.922,882,2.094,883,0.969,884,1.023,885,1.712,886,1.712,887,1.023,888,1.712,889,1.712,890,1.023,891,1.023,892,1.023,893,2.209,894,1.023,895,1.023,896,2.209,897,1.023,898,0.969,899,1.023,900,1.023,901,1.023,902,1.023,903,1.023,904,0.879,905,1.991,906,1.023,907,1.543,908,1.023,909,1.023,910,1.023,911,1.623,912,1.023,913,1.023,914,1.023,915,1.712,916,1.023,917,1.023,918,0.969,919,0.879,920,1.023,921,1.023,922,1.023,923,1.023,924,1.023,925,1.023,926,0.879,927,1.023,928,1.023,929,0.84,930,1.023,931,1.023,932,1.023,933,1.023,934,1.023,935,1.023,936,1.023,937,1.023,938,1.023,939,1.023,940,1.023,941,1.023,942,1.023,943,1.023,944,1.023,945,0.969,946,0.969,947,1.023,948,0.969,949,0.969,950,0.84,951,1.023,952,1.712,953,1.023,954,0.969,955,1.023,956,0.969,957,0.922,958,1.023,959,1.023,960,1.023,961,1.023,962,1.023,963,1.023,964,1.023,965,1.023,966,0.804,967,1.023,968,1.023]],["title/classes/EnumValues.html",[39,0.019,312,2.953]],["body/classes/EnumValues.html",[2,0.158,3,0.158,7,0.123,18,0.288,21,1.55,24,0.851,27,1.339,28,0.013,30,1.311,31,0.567,33,0.905,38,0.185,39,0.03,48,2.503,79,0.954,127,0.01,128,0.01,189,3.651,191,1.046,192,0.954,282,1.408,312,4.703,348,1.957,467,2.807,506,1.603,538,4.703,662,2.519,675,2.923,945,3.673,966,2.412,969,4.045,970,6.199,971,6.484,972,6.484,973,6.484,974,5.132,975,6.484,976,5.132,977,7.467,978,4.476,979,5.132,980,5.132,981,5.132,982,5.132,983,4.476,984,6.514,985,5.656,986,5.656,987,3.465,988,4.476,989,6.484,990,5.656,991,6.484,992,5.656,993,4.045,994,4.476,995,6.484,996,5.132,997,5.132,998,5.132]],["title/components/EstimateOfDemandComponent.html",[0,0.555,90,1.229]],["body/components/EstimateOfDemandComponent.html",[0,0.904,1,0.779,2,0.126,3,0.082,4,0.893,5,0.893,6,0.705,7,0.064,9,0.979,10,1.789,11,0.893,12,2.678,13,2.001,14,1.524,16,1.524,18,0.314,19,0.437,21,0.979,22,2.379,23,0.801,24,1.031,27,1.242,28,0.013,29,1.717,30,1.128,31,0.533,32,0.54,33,0.722,36,0.409,37,0.438,38,0.064,39,0.012,46,0.577,69,0.638,70,1.37,71,1.082,72,1.324,73,1.87,74,0.893,79,0.976,80,0.893,81,0.806,82,0.893,83,0.806,84,1.766,85,1.115,86,0.893,87,0.806,88,1.472,89,0.893,90,1.688,91,2.142,92,0.893,93,0.806,94,0.893,95,0.806,96,0.834,97,1.37,98,0.779,99,0.893,100,0.806,101,0.893,102,0.806,103,0.806,104,0.893,105,0.893,106,0.806,107,0.893,108,0.779,109,0.893,110,0.806,111,0.705,112,1.37,113,0.806,114,1.505,115,0.806,116,0.893,117,0.806,118,0.893,119,0.779,120,0.893,121,0.779,122,0.893,123,0.806,124,0.893,125,0.806,126,0.893,127,0.006,128,0.006,150,0.66,161,0.729,174,1.111,191,0.888,192,0.888,203,2.158,213,3.296,217,3.125,219,2.719,220,2.343,221,3.253,222,3.253,223,3.253,228,2.343,229,1.196,230,2.011,233,1.156,252,2.104,259,3.605,260,3.805,261,2.104,262,5.017,263,3.115,264,2.628,265,2.328,266,3.012,269,2.766,275,3.083,281,2.745,282,1.236,289,1.371,290,1.371,291,1.371,292,1.371,293,1.371,296,1.371,297,1.936,298,2.328,300,5.823,301,2.971,302,1.438,303,1.512,304,1.595,307,1.438,308,1.255,311,1.936,312,1.936,313,0.993,314,0.993,315,1.371,316,4.877,317,1.477,318,1.371,321,1.691,322,1.371,323,1.371,324,2.628,325,1.438,326,2.328,327,1.442,336,1.581,341,1.595,345,1.203,346,1.371,347,1.203,348,2.065,349,4.198,352,1.31,353,1.936,357,2.206,358,2.206,359,3.573,360,3.573,364,2.766,365,2.595,467,1.156,513,1.581,558,2.628,583,1.505,612,2.343,654,4.754,693,3.423,695,3.972,703,4.324,737,1.371,760,2.288,769,3.856,877,3.167,999,7.561,1000,6.596,1001,2.669,1002,4.096,1003,4.096,1004,4.096,1005,4.096,1006,4.096,1007,4.096,1008,2.669,1009,2.669,1010,2.669,1011,4.096,1012,2.669,1013,4.096,1014,2.669,1015,4.096,1016,2.669,1017,2.669,1018,2.669,1019,2.669,1020,4.096,1021,2.669,1022,2.669,1023,2.669,1024,2.669,1025,1.789,1026,2.104,1027,2.669,1028,2.669,1029,2.669,1030,4.096,1031,4.096,1032,2.328,1033,2.669,1034,2.669,1035,2.328,1036,4.096,1037,4.096,1038,2.669,1039,1.936,1040,4.096,1041,2.669,1042,2.669,1043,4.984,1044,2.669,1045,4.096,1046,2.328,1047,2.328,1048,4.348,1049,4.096,1050,4.096,1051,4.984,1052,2.669,1053,2.669,1054,2.669,1055,2.669,1056,2.669,1057,2.669,1058,2.669,1059,2.669,1060,2.669,1061,2.669,1062,2.669,1063,2.669,1064,4.096]],["title/components/FooterComponent.html",[0,0.555,93,1.229]],["body/components/FooterComponent.html",[0,1.034,1,1.423,2,0.193,3,0.15,4,1.631,5,1.631,6,1.287,7,0.117,9,1.5,10,2.491,11,1.631,12,2.845,13,2.439,14,2.335,16,2.335,18,0.274,19,0.67,20,6.77,21,1.5,22,2.63,24,0.823,27,0.801,28,0.013,29,1.358,30,1.181,31,0.37,32,0.986,33,0.859,34,2.717,35,5.473,36,0.274,37,0.801,38,0.117,39,0.022,49,4.252,50,4.252,51,4.237,52,4.237,69,1.165,70,2.099,71,1.657,72,2.028,73,2.451,74,1.631,75,3.842,76,3.842,77,3.842,79,0.924,80,1.631,81,1.472,82,1.631,83,1.472,84,1.887,85,1.091,86,1.631,87,1.472,88,1.753,89,1.631,90,1.472,91,1.575,92,1.631,93,2.212,94,1.631,95,1.472,96,1.522,97,2.099,98,1.423,99,1.631,100,1.472,101,1.631,102,1.472,103,1.472,104,1.631,105,1.631,106,1.472,107,1.631,108,1.423,109,1.631,110,1.472,111,1.287,112,2.099,113,1.472,114,1.472,115,1.472,116,1.631,117,1.472,118,1.631,119,1.423,120,1.631,121,1.423,122,1.631,123,1.472,124,1.631,125,1.472,126,1.631,127,0.01,128,0.01,211,4.552,212,4.946,325,3.38,1065,4.874,1066,6.274,1067,6.274,1068,6.274,1069,4.874,1070,4.874]],["title/classes/GoOn.html",[39,0.019,1071,2.306]],["body/classes/GoOn.html",[2,0.149,3,0.149,7,0.116,9,1.853,18,0.389,19,0.667,23,0.948,24,0.908,28,0.013,30,1.178,31,0.637,32,0.981,33,0.855,36,0.351,38,0.189,39,0.036,79,0.714,84,1.853,85,1.085,88,1.122,127,0.01,128,0.01,150,1.807,161,1.324,191,0.714,192,0.714,229,2.332,244,1.369,282,1.423,506,1.995,513,3.084,550,1.805,583,1.464,586,3.963,720,4.371,760,1.622,1071,4.142,1072,3.072,1073,4.247,1074,2.612,1075,6.254,1076,4.849,1077,3.962,1078,2.186,1079,2.899,1080,4.138,1081,4.138,1082,4.138,1083,2.491,1084,3.275,1085,3.072,1086,3.888,1087,3.072,1088,3.072,1089,2.899,1090,3.072,1091,3.072]],["title/components/GoogleMapComponent.html",[0,0.555,95,1.229]],["body/components/GoogleMapComponent.html",[0,0.914,1,0.999,2,0.152,3,0.105,4,1.649,5,1.145,6,0.904,7,0.082,9,1.179,10,2.073,11,1.145,12,2.757,13,2.17,18,0.192,19,0.526,21,1.179,22,2.268,23,0.669,24,1.039,27,0.949,28,0.013,29,1.509,30,1.275,31,0.612,32,1.488,36,0.277,37,0.562,38,0.082,39,0.016,69,0.818,70,1.649,71,1.526,72,1.593,73,2.114,74,1.145,79,0.986,80,1.145,81,1.033,82,1.145,83,1.033,84,1.719,85,1.414,86,1.145,87,1.033,88,1.663,89,1.145,90,1.033,91,1.106,92,1.145,93,1.033,94,1.145,95,1.908,96,1.804,97,1.649,98,0.999,99,1.145,100,1.033,101,1.145,102,1.033,103,1.033,104,1.145,105,1.145,106,1.033,107,1.145,108,0.999,109,1.145,110,1.033,111,0.904,112,1.649,113,1.033,114,1.033,115,1.033,116,1.145,117,1.033,118,1.145,119,0.999,120,1.145,121,0.999,122,1.145,123,1.033,124,1.145,125,1.033,126,1.145,127,0.008,128,0.008,149,3.72,191,0.85,192,0.85,244,1.784,259,4.653,282,1.114,317,1.669,324,2.317,327,0.818,349,3.123,385,5.215,478,3.885,482,4.547,506,1.218,576,2.532,631,2.532,660,2.532,666,1.543,670,4.004,720,2.946,737,2.532,919,3.583,929,2.42,1025,2.98,1086,1.758,1092,7.968,1093,3.423,1094,5.776,1095,4.929,1096,4.929,1097,5.513,1098,5.513,1099,5.513,1100,6.085,1101,5.513,1102,5.513,1103,4.71,1104,3.423,1105,4.71,1106,4.929,1107,4.981,1108,3.576,1109,3.423,1110,6.319,1111,3.423,1112,4.929,1113,4.929,1114,3.423,1115,4.929,1116,4.929,1117,3.423,1118,4.929,1119,4.3,1120,3.423,1121,4.981,1122,3.423,1123,3.423,1124,4.929,1125,3.885,1126,3.423,1127,4.929,1128,4.981,1129,3.423,1130,4.3,1131,4.929,1132,3.423,1133,3.423,1134,4.3,1135,3.423,1136,4.929,1137,2.986,1138,3.423,1139,3.423,1140,3.423,1141,3.423,1142,3.423,1143,3.423,1144,3.423,1145,3.423,1146,2.986,1147,2.986,1148,2.986,1149,2.986,1150,2.986,1151,2.986,1152,2.986,1153,2.986,1154,2.986]],["title/classes/Heap.html",[39,0.019,764,2.091]],["body/classes/Heap.html",[2,0.145,3,0.145,7,0.113,18,0.344,19,0.654,21,1.466,24,0.984,27,1.286,28,0.013,29,1.564,30,1.276,31,0.518,32,0.952,33,0.829,36,0.264,38,0.147,39,0.028,46,1.327,79,0.903,127,0.009,128,0.009,191,0.903,192,0.903,203,3.313,215,2.06,236,0.859,317,1.802,327,1.125,336,1.816,456,2.595,506,2.016,648,3.413,675,2.765,693,3.524,764,4.159,766,3.897,828,3.303,834,2.037,864,3.15,904,3.713,905,3.894,907,4.038,926,3.15,1155,6.706,1156,4.104,1157,5.349,1158,6.822,1159,6.306,1160,6.132,1161,6.132,1162,4.705,1163,5.349,1164,4.705,1165,4.705,1166,5.349,1167,4.705,1168,5.349,1169,4.705,1170,4.104,1171,5.349,1172,4.104,1173,4.104,1174,4.104,1175,4.104,1176,4.104,1177,4.104,1178,3.709,1179,4.104]],["title/components/HomeComponent.html",[0,0.555,98,1.188]],["body/components/HomeComponent.html",[0,0.977,1,1.198,2,0.211,3,0.126,4,1.373,5,1.373,6,1.084,7,0.098,9,1.339,10,2.287,11,1.373,12,2.805,13,2.358,14,2.083,16,2.083,18,0.23,19,0.597,21,1.339,22,2.457,23,0.803,24,0.898,27,1.124,28,0.013,29,1.481,31,0.425,32,0.83,33,0.724,36,0.358,37,0.674,38,0.098,39,0.019,40,3.547,41,4.413,42,2.849,43,4.061,44,2.066,45,2.524,46,1.481,47,4.413,48,2.161,69,0.981,70,1.873,71,1.683,72,1.809,73,2.29,74,1.373,79,0.938,80,1.373,81,1.239,82,1.373,83,1.239,84,1.809,85,0.918,86,1.373,87,1.239,88,1.657,89,1.373,90,1.239,91,1.326,92,1.373,93,1.239,94,1.373,95,1.239,96,1.282,97,1.873,98,1.998,99,1.373,100,1.239,101,1.373,102,1.239,103,1.239,104,1.373,105,1.373,106,1.239,107,1.373,108,1.198,109,1.373,110,1.239,111,1.084,112,1.873,113,1.239,114,1.239,115,1.239,116,1.373,117,1.239,118,1.373,119,1.198,120,1.373,121,1.198,122,1.373,123,1.239,124,1.373,125,1.239,126,1.373,127,0.009,128,0.009,180,1.527,191,0.604,192,0.604,205,4.884,210,2.083,244,1.799,282,0.987,327,1.713,336,2.765,348,1.924,367,5.022,379,5.395,384,3.235,385,5.363,438,3.58,484,3.547,512,3.346,664,2.977,830,3.171,1047,3.58,1048,4.884,1128,3.235,1130,4.884,1180,4.104,1181,5.598,1182,5.598,1183,5.97,1184,5.598,1185,4.104,1186,4.104,1187,5.97,1188,3.58,1189,4.884,1190,4.104,1191,4.104,1192,7.392,1193,4.104,1194,4.104,1195,4.104,1196,6.371,1197,4.104,1198,5.598,1199,4.104,1200,5.598,1201,5.598,1202,3.58,1203,4.104,1204,4.884,1205,4.104,1206,4.884,1207,4.884,1208,4.884,1209,4.104,1210,4.104,1211,3.58,1212,4.104,1213,5.598,1214,4.104]],["title/components/InfoDialogComponent.html",[0,0.555,100,1.229]],["body/components/InfoDialogComponent.html",[0,1.031,1,1.408,2,0.242,3,0.148,4,2.085,5,1.614,6,1.274,7,0.116,11,1.614,12,2.843,13,2.378,18,0.271,19,0.665,23,1.219,24,0.906,28,0.013,31,0.525,36,0.35,37,0.792,38,0.116,39,0.022,46,1.745,69,1.154,70,2.085,71,1.646,72,2.015,73,2.442,74,1.614,79,1.016,80,1.614,81,1.457,82,1.614,83,1.457,84,1.883,85,1.079,86,1.614,87,1.457,88,1.748,89,1.614,90,1.457,91,1.559,92,1.614,93,1.457,94,1.614,95,1.457,96,1.507,97,2.085,98,1.408,99,1.614,100,2.203,101,1.614,102,1.457,103,1.457,104,1.614,105,1.614,106,1.457,107,1.614,108,1.408,109,1.614,110,1.457,111,1.274,112,2.085,113,1.457,114,1.457,115,1.457,116,1.614,117,1.457,118,1.614,119,1.408,120,1.614,121,1.408,122,1.614,123,1.457,124,1.614,125,1.457,126,1.614,127,0.01,128,0.01,191,0.71,192,0.71,242,2.319,506,1.913,1103,3.258,1215,7.298,1216,4.825,1217,5.437,1218,5.009,1219,6.592,1220,4.825,1221,7.739,1222,4.825,1223,3.803,1224,4.825,1225,4.825,1226,4.825,1227,2.884,1228,4.825]],["title/interfaces/LinkFlow.html",[236,0.743,627,2.193]],["body/interfaces/LinkFlow.html",[2,0.061,3,0.127,6,0.526,7,0.048,18,0.112,19,0.439,24,0.262,27,1.225,28,0.013,29,1.28,30,1.395,31,0.361,33,1.087,34,0.863,36,0.315,38,0.153,39,0.022,42,1.353,45,0.899,46,1.027,58,1.024,60,3.028,64,1.024,71,0.858,111,0.858,127,0.005,128,0.005,174,0.83,179,1.129,180,1.767,187,1.074,191,0.606,192,0.293,193,1.977,195,0.742,198,1.751,203,2.989,210,1.531,236,0.955,244,1.34,253,0.937,265,0.83,267,0.899,275,2.781,281,2.754,282,1.208,313,0.742,314,0.742,317,1.629,327,1.753,336,2.381,348,2.359,357,1.751,358,2.557,431,2.331,456,2.751,467,2.561,506,2.025,549,1.024,550,0.742,576,2.686,595,1.856,605,1.528,612,2.637,613,2.217,627,2.817,631,1.67,632,3.221,633,1.751,635,3.907,646,1.129,650,1.129,659,1.841,660,1.024,662,1.596,663,1.024,666,1.465,675,3.028,676,3.881,682,1.074,690,1.129,691,2.217,692,2.46,693,3.702,694,2.838,695,3.177,696,3.187,697,2.46,698,3.168,699,1.191,700,3.126,701,1.191,702,1.943,703,2.962,704,3.494,705,2.46,706,1.191,708,3.494,709,1.191,711,1.191,712,1.191,713,1.191,718,2.46,719,1.841,724,1.841,725,1.191,726,1.191,727,0.899,731,1.841,732,2.557,735,1.074,737,1.024,741,1.191,743,1.191,745,0.978,746,2.114,747,1.751,748,1.191,749,1.943,751,1.129,752,1.074,753,1.191,755,1.074,758,3.536,759,1.191,760,0.667,761,1.129,762,1.191,763,1.191,764,2.881,765,3.351,766,3.132,767,1.074,768,1.129,769,3.187,770,1.841,771,2.46,772,1.943,773,1.191,774,1.129,775,1.191,776,1.129,777,1.191,778,2.689,779,1.191,780,1.191,781,1.191,782,1.191,783,1.191,784,1.191,785,1.191,786,1.129,787,1.129,788,2.46,789,1.074,790,1.191,791,1.191,792,1.191,793,1.943,794,1.943,795,1.191,796,1.191,797,1.191,798,1.943,799,1.943,800,1.943,801,1.191,802,1.191,803,1.191,804,1.841,805,2.46,806,2.838,807,2.838,808,1.943,809,1.943,810,2.838,811,2.46,812,2.838,813,2.838,814,1.191,815,1.943,816,1.943,817,1.943,818,1.191,819,1.943,820,1.191,821,1.943,822,1.191,823,1.191,824,1.191,825,1.191,826,2.962,827,1.129,828,1.074,829,1.191,830,1.129,831,1.943,832,1.191,833,1.191,834,1.782,835,1.191,836,2.46,837,1.191,838,1.191,839,1.943,840,1.191,841,1.191,842,1.191,843,1.191,844,1.191,845,1.074,846,1.943,847,1.943,848,1.191,849,1.943,850,1.191,851,1.191,852,1.191,853,1.191,854,1.191,855,1.191,856,1.191,857,1.191,858,1.191,859,1.191,860,1.943,861,1.191,862,1.191,863,1.191,864,1.67,865,1.191,866,2.46,867,2.46,868,1.191,869,2.46,870,1.191,871,1.191,872,1.191,873,1.943,874,1.191,875,1.191,876,1.191,877,1.841,878,1.191,879,1.191,880,1.191,881,1.074,882,2.331,883,1.129,884,1.191,885,1.943,886,1.943,887,1.191,888,1.943,889,1.943,890,1.191,891,1.191,892,1.191,893,2.46,894,1.191,895,1.191,896,2.46,897,1.191,898,1.129,899,1.191,900,1.191,901,1.191,902,1.191,903,1.191,904,1.024,905,2.217,906,1.191,907,1.751,908,1.191,909,1.191,910,1.191,911,1.841,912,1.191,913,1.191,914,1.191,915,1.943,916,1.191,917,1.191,918,1.129,919,1.024,920,1.191,921,1.191,922,1.191,923,1.191,924,1.191,925,1.191,926,1.024,927,1.191,928,1.191,929,0.978,930,1.191,931,1.191,932,1.191,933,1.191,934,1.191,935,1.191,936,1.191,937,1.191,938,1.191,939,1.191,940,1.191,941,1.191,942,1.191,943,1.191,944,1.191,945,1.129,946,1.129,947,1.191,948,1.129,949,1.129,950,0.978,951,1.191,952,1.943,953,1.191,954,1.129,955,1.191,956,1.129,957,1.074,958,1.191,959,1.191,960,1.191,961,1.191,962,1.191,963,1.191,964,1.191,965,1.191,966,0.937,967,1.191,968,1.191]],["title/modules/LocationModule.html",[133,1.188,145,2.749]],["body/modules/LocationModule.html",[2,0.189,3,0.189,7,0.147,28,0.013,36,0.432,37,1.008,38,0.173,39,0.028,69,1.467,127,0.011,128,0.011,133,2.111,135,3.012,136,3.895,137,3.305,138,3.329,145,5.543,149,3.399,150,1.517,151,3.152,153,3.55,1229,5.353,1230,5.353,1231,4.907,1232,6.136,1233,6.136]],["title/injectables/LocationService.html",[242,1.515,1231,2.433]],["body/injectables/LocationService.html",[2,0.133,3,0.133,7,0.103,18,0.242,19,0.618,21,1.67,23,1.277,24,1.022,27,1.279,28,0.013,29,1.511,31,0.531,34,1.866,36,0.367,37,0.708,38,0.103,39,0.02,44,1.747,79,0.852,96,2.04,127,0.01,128,0.009,150,1.726,191,0.852,192,0.852,193,3.372,195,1.604,215,1.301,242,2.431,282,1.152,317,1.981,325,3.761,473,4.561,482,3.459,506,2.034,558,2.026,760,1.442,767,2.321,768,2.441,786,3.278,787,3.278,881,3.117,946,2.441,1025,2.345,1108,5.558,1231,3.459,1234,4.309,1235,4.561,1236,5.786,1237,5.048,1238,5.048,1239,4.424,1240,5.786,1241,7.065,1242,6.683,1243,7.5,1244,5.786,1245,6.354,1246,6.983,1247,5.786,1248,5.786,1249,5.786,1250,4.309,1251,6.983,1252,5.44,1253,5.149,1254,4.309,1255,5.786,1256,4.309,1257,4.309,1258,5.786,1259,4.309,1260,4.309,1261,6.983,1262,4.309,1263,4.309,1264,6.532,1265,5.786,1266,5.786,1267,4.309,1268,3.759,1269,5.786,1270,3.759,1271,4.309,1272,4.309,1273,5.786,1274,4.309,1275,4.309,1276,4.309,1277,3.759,1278,4.309]],["title/interfaces/Map.html",[236,0.743,1025,1.461]],["body/interfaces/Map.html",[2,0.187,3,0.187,7,0.145,18,0.341,19,0.767,28,0.013,31,0.461,38,0.183,46,1.803,127,0.011,128,0.011,215,1.832,233,2.627,236,1.397,327,1.451,513,3.054,597,3.844,670,3.844,950,3.757,1025,2.939,1279,4.782]],["title/classes/MapChanged.html",[39,0.019,1280,2.953]],["body/classes/MapChanged.html",[2,0.167,3,0.167,7,0.13,9,1.745,18,0.305,19,0.718,23,1.064,24,0.958,28,0.013,31,0.639,32,1.101,33,0.959,36,0.378,38,0.183,39,0.034,79,0.801,85,1.217,88,1.258,127,0.01,128,0.01,150,1.885,161,1.486,191,0.801,192,0.801,229,2.287,282,1.344,506,1.973,550,2.025,583,1.643,586,3.918,720,4.558,1025,2.904,1073,4.107,1074,2.931,1078,2.453,1086,3.454,1280,5.531,1281,4.289,1282,6.725,1283,5.441,1284,5.866,1285,4.289,1286,4.746,1287,4.289]],["title/components/MapComponent.html",[0,0.555,102,1.229]],["body/components/MapComponent.html",[0,0.951,1,0.905,2,0.141,3,0.095,4,1.037,5,1.037,6,0.819,7,0.074,9,1.097,10,1.959,11,1.037,12,2.727,13,2.105,14,1.707,16,1.707,18,0.174,19,0.489,21,1.097,22,2.503,23,0.897,24,1.062,27,1.201,28,0.013,29,1.669,30,1.313,31,0.58,32,0.627,33,0.547,36,0.418,37,0.509,38,0.074,39,0.014,69,0.741,70,1.534,71,1.211,72,1.482,73,2.018,74,1.037,79,0.803,80,1.037,81,0.936,82,1.037,83,0.936,84,1.667,85,1.026,86,1.037,87,0.936,88,1.656,89,1.037,90,0.936,91,1.002,92,1.037,93,0.936,94,1.037,95,0.936,96,0.969,97,1.534,98,0.905,99,1.037,100,0.936,101,1.037,102,1.821,103,0.936,104,1.037,105,1.037,106,0.936,107,1.037,108,0.905,109,1.037,110,0.936,111,0.819,112,1.534,113,0.936,114,1.385,115,0.936,116,1.037,117,0.936,118,1.037,119,0.905,120,1.037,121,0.905,122,1.037,123,0.936,124,1.037,125,0.936,126,1.037,127,0.007,128,0.007,149,3.026,161,0.847,180,1.154,191,0.456,192,0.675,203,1.77,210,1.154,213,3.436,217,3.308,219,2.902,220,2.566,221,3.423,222,3.423,223,3.423,228,2.566,229,1.593,230,2.252,233,1.343,244,1.902,252,2.356,263,3.167,265,2.272,266,3.249,275,2.719,282,0.962,289,1.593,290,1.593,291,1.593,292,1.593,293,1.593,296,1.593,304,1.854,307,1.67,308,1.458,311,2.25,313,1.154,314,1.154,315,1.593,317,1.441,318,1.593,322,1.593,323,1.593,324,1.458,327,1.305,336,1.197,341,1.854,345,2.068,346,3.461,347,3.227,348,1.385,352,3.514,467,1.986,482,4.028,513,1.77,516,1.854,576,2.356,583,0.936,612,2.156,670,2.906,693,2.156,834,1.343,919,1.593,966,2.156,1025,2.669,1026,2.444,1097,5.261,1098,5.261,1099,5.261,1100,5.261,1101,5.261,1102,5.261,1103,4.072,1105,4.072,1107,3.615,1108,3.959,1119,4.761,1125,4.302,1137,2.705,1146,4.761,1147,2.705,1148,2.705,1149,2.705,1150,2.705,1151,2.705,1152,2.705,1153,2.705,1154,4.761,1183,4.001,1288,3.101,1289,3.615,1290,3.615,1291,4.586,1292,4.586,1293,4.586,1294,3.101,1295,3.101,1296,3.101,1297,3.101,1298,3.101,1299,3.101,1300,3.101,1301,3.101,1302,3.101,1303,3.101,1304,3.101,1305,3.101,1306,3.101,1307,2.444,1308,4.001,1309,3.101,1310,3.101,1311,3.101,1312,3.097,1313,3.101,1314,4.586,1315,4.586,1316,4.586,1317,3.101,1318,4.586,1319,2.25,1320,2.705,1321,3.101,1322,3.101,1323,4.586,1324,3.101,1325,3.101,1326,3.101,1327,3.101,1328,3.101,1329,3.101,1330,2.444,1331,3.101,1332,3.101,1333,3.101,1334,3.101,1335,3.101,1336,3.101,1337,3.101,1338,4.586,1339,3.101,1340,3.101,1341,3.101,1342,4.586,1343,3.101]],["title/interfaces/MapState.html",[236,0.743,1344,2.953]],["body/interfaces/MapState.html",[2,0.172,3,0.172,7,0.134,18,0.313,19,0.729,27,1.212,28,0.013,31,0.424,32,1.128,36,0.414,38,0.184,88,1.29,127,0.01,128,0.01,189,2.865,215,1.684,229,1.628,236,1.246,327,1.633,345,2.514,347,3.078,558,2.622,583,2.455,1025,3.034,1078,2.514,1284,4.865,1285,4.396,1286,4.865,1287,5.382,1344,5.898,1345,4.396,1346,4.953,1347,4.865,1348,4.865,1349,5.577,1350,4.865,1351,3.159,1352,4.865,1353,6.828,1354,4.865,1355,5.382,1356,5.577,1357,5.577,1358,4.865]],["title/modules/MaterialModule.html",[133,1.188,1359,2.579]],["body/modules/MaterialModule.html",[2,0.18,3,0.18,7,0.14,28,0.013,36,0.438,37,0.958,38,0.168,39,0.027,62,4.232,127,0.011,128,0.011,133,1.703,153,3.445,156,4.599,157,4.232,327,1.395,1227,3.487,1359,5.062,1360,5.089,1361,6.121,1362,6.121,1363,6.121,1364,7.017,1365,6.121,1366,6.121,1367,6.121,1368,6.121,1369,6.121,1370,6.121,1371,6.121,1372,6.121,1373,6.121,1374,6.121,1375,6.121,1376,6.121,1377,6.121,1378,7.526,1379,5.834,1380,7.017,1381,5.834,1382,5.834,1383,5.834]],["title/interfaces/Member.html",[236,0.743,778,2.306]],["body/interfaces/Member.html",[2,0.061,3,0.126,6,0.525,7,0.048,18,0.112,19,0.438,24,0.261,27,1.225,28,0.013,29,1.278,30,1.39,31,0.468,33,0.921,34,0.861,36,0.315,38,0.153,39,0.022,42,1.35,45,0.896,46,1.026,58,1.021,60,3.025,64,1.021,71,0.857,111,0.857,127,0.005,128,0.005,174,0.828,179,1.126,180,1.764,187,1.071,191,0.605,192,0.293,193,1.973,195,0.74,198,1.747,203,2.988,210,1.529,215,0.6,236,0.953,244,1.338,253,0.934,265,0.828,267,0.896,275,2.778,281,2.75,282,1.278,313,0.74,314,0.74,317,1.628,327,1.752,336,2.379,348,2.358,357,1.747,358,2.553,431,2.327,456,2.75,467,2.559,506,2.025,549,1.021,550,0.74,576,2.682,595,1.852,605,1.525,612,2.633,613,2.213,627,2.213,631,1.666,632,3.218,633,1.747,635,3.905,646,1.126,650,1.126,659,1.837,660,1.021,662,1.592,663,1.021,666,1.462,675,3.026,676,3.879,682,1.071,690,1.126,691,2.213,692,2.456,693,3.701,694,2.456,695,3.173,696,3.183,697,2.456,698,3.165,699,1.188,700,3.122,701,1.188,702,1.939,703,2.958,704,3.491,705,2.456,706,1.188,708,3.491,709,1.188,711,1.188,712,1.188,713,1.188,718,2.456,719,1.837,724,1.837,725,1.188,726,1.188,727,0.896,731,1.837,732,2.553,735,1.071,737,1.021,741,1.188,743,1.188,745,0.976,746,2.11,747,1.747,748,1.188,749,1.939,751,1.126,752,1.071,753,1.188,755,1.071,758,2.456,759,1.188,760,0.665,761,1.126,762,1.188,763,1.188,764,2.878,765,3.347,766,3.129,767,1.071,768,1.126,769,3.183,770,1.837,771,1.939,772,1.188,773,1.188,774,1.126,775,1.188,776,1.126,777,1.939,778,3.173,779,2.833,780,2.833,781,1.188,782,1.188,783,1.188,784,1.188,785,1.188,786,1.126,787,1.126,788,2.456,789,1.071,790,1.188,791,1.188,792,1.188,793,1.939,794,1.939,795,1.188,796,1.188,797,1.188,798,1.939,799,1.939,800,1.939,801,1.188,802,1.188,803,1.188,804,1.837,805,2.456,806,2.833,807,2.833,808,1.939,809,1.939,810,2.833,811,2.456,812,2.833,813,2.833,814,1.188,815,1.939,816,1.939,817,1.939,818,1.188,819,1.939,820,1.188,821,1.939,822,1.188,823,1.188,824,1.188,825,1.188,826,2.958,827,1.126,828,1.071,829,1.188,830,1.126,831,1.939,832,1.188,833,1.188,834,1.779,835,1.188,836,2.456,837,1.188,838,1.188,839,1.939,840,1.188,841,1.188,842,1.188,843,1.188,844,1.188,845,1.071,846,1.939,847,1.939,848,1.188,849,1.939,850,1.188,851,1.188,852,1.188,853,1.188,854,1.188,855,1.188,856,1.188,857,1.188,858,1.188,859,1.188,860,1.939,861,1.188,862,1.188,863,1.188,864,1.666,865,1.188,866,2.456,867,2.456,868,1.188,869,2.456,870,1.188,871,1.188,872,1.188,873,1.939,874,1.188,875,1.188,876,1.188,877,1.837,878,1.188,879,1.188,880,1.188,881,1.071,882,2.327,883,1.126,884,1.188,885,1.939,886,1.939,887,1.188,888,1.939,889,1.939,890,1.188,891,1.188,892,1.188,893,2.456,894,1.188,895,1.188,896,2.456,897,1.188,898,1.126,899,1.188,900,1.188,901,1.188,902,1.188,903,1.188,904,1.021,905,2.213,906,1.188,907,1.747,908,1.188,909,1.188,910,1.188,911,1.837,912,1.188,913,1.188,914,1.188,915,1.939,916,1.188,917,1.188,918,1.126,919,1.021,920,1.188,921,1.188,922,1.188,923,1.188,924,1.188,925,1.188,926,1.021,927,1.188,928,1.188,929,0.976,930,1.188,931,1.188,932,1.188,933,1.188,934,1.188,935,1.188,936,1.188,937,1.188,938,1.188,939,1.188,940,1.188,941,1.188,942,1.188,943,1.188,944,1.188,945,1.126,946,1.126,947,1.188,948,1.126,949,1.126,950,0.976,951,1.188,952,1.939,953,1.188,954,1.126,955,1.188,956,1.126,957,1.071,958,1.188,959,1.188,960,1.188,961,1.188,962,1.188,963,1.188,964,1.188,965,1.188,966,0.934,967,1.188,968,1.188]],["title/components/MessageArchivedComponent.html",[0,0.555,103,1.229]],["body/components/MessageArchivedComponent.html",[0,1.043,1,1.46,2,0.196,3,0.154,4,2.134,5,1.674,6,1.321,7,0.12,11,1.674,12,2.851,13,2.398,18,0.281,19,0.681,23,0.978,24,0.837,28,0.013,31,0.485,36,0.358,37,0.822,38,0.12,39,0.023,46,1.74,69,1.196,70,2.134,71,1.685,72,2.062,73,2.475,74,1.674,79,1.034,80,1.674,81,1.51,82,1.674,83,1.51,84,1.899,85,1.119,86,1.674,87,1.51,88,1.768,89,1.674,90,1.51,91,1.617,92,1.674,93,1.51,94,1.674,95,1.51,96,1.563,97,2.134,98,1.46,99,1.674,100,1.51,101,1.674,102,1.51,103,2.234,104,2.35,105,1.674,106,1.51,107,1.674,108,1.46,109,1.674,110,1.51,111,1.321,112,2.134,113,1.51,114,1.51,115,1.51,116,1.674,117,1.51,118,1.674,119,1.46,120,1.674,121,1.46,122,1.674,123,1.51,124,1.674,125,1.51,126,1.674,127,0.01,128,0.01,191,0.736,192,0.736,242,2.374,506,1.736,1103,3.378,1223,3.944,1227,2.991,1384,7.024,1385,5.003,1386,6.38,1387,5.003,1388,5.003,1389,5.003,1390,5.003,1391,5.003]],["title/modules/NetworkModule.html",[133,1.188,146,2.749]],["body/modules/NetworkModule.html",[2,0.185,3,0.185,7,0.144,28,0.013,36,0.452,37,0.986,38,0.171,39,0.028,69,1.435,127,0.011,128,0.011,133,2.083,135,2.946,136,3.844,137,3.232,138,3.298,146,5.616,149,3.355,150,1.483,151,3.082,153,3.503,266,4.399,1392,5.234,1393,5.234,1394,5.234,1395,5.515,1396,6,1397,6,1398,6]],["title/classes/Node.html",[39,0.019,693,1.913]],["body/classes/Node.html",[2,0.057,3,0.121,6,0.493,7,0.045,18,0.105,19,0.42,23,0.365,24,0.882,27,1.209,28,0.013,29,1.244,30,1.398,31,0.529,32,1.021,33,1.131,34,0.808,36,0.305,38,0.149,39,0.023,42,1.282,45,1.389,46,0.987,58,0.959,60,2.951,64,0.959,71,0.813,79,0.275,111,0.813,127,0.005,128,0.005,174,0.777,179,1.057,180,1.698,187,1.659,191,0.672,192,0.453,193,1.9,195,0.695,198,1.659,203,2.973,210,1.463,215,0.564,236,0.833,244,1.288,253,0.877,265,0.777,267,0.842,275,2.71,281,2.669,282,1.226,313,0.695,314,0.695,317,1.588,327,1.727,336,2.32,348,2.346,357,1.659,358,2.458,431,3.079,456,2.778,467,2.49,506,2.056,549,0.959,550,0.695,576,2.594,595,2.451,605,1.448,612,2.555,613,2.118,627,2.118,631,1.582,632,3.151,633,1.659,635,3.848,646,1.057,650,1.057,659,1.745,660,0.959,662,1.512,663,0.959,666,1.389,675,2.967,676,3.807,682,1.005,690,1.057,691,2.118,692,2.35,693,3.695,694,2.35,695,3.079,696,3.097,697,3.249,698,3.088,699,1.116,700,3.018,701,1.116,702,1.841,703,2.861,704,3.878,705,2.35,706,1.116,708,3.405,709,1.116,711,1.116,712,1.116,713,1.116,718,2.35,719,1.745,720,1.841,724,1.745,725,1.116,726,1.116,727,0.842,731,1.745,732,2.458,735,1.005,737,0.959,741,1.116,743,1.116,745,0.916,746,2.02,747,1.659,748,1.116,749,1.841,751,1.057,752,1.005,753,1.116,755,1.005,758,2.35,759,1.116,760,0.624,761,1.057,762,1.116,763,1.116,764,2.792,765,3.405,766,3.151,767,1.005,768,1.057,769,3.097,770,1.745,771,1.841,772,1.116,773,1.116,774,1.057,775,1.116,776,1.057,777,1.116,778,2.585,779,1.116,780,1.116,781,1.841,782,1.841,783,1.841,784,1.841,785,1.841,786,1.745,787,1.745,788,3.437,789,2.458,790,2.728,791,2.728,792,2.728,793,1.841,794,1.841,795,1.841,796,1.116,797,1.116,798,1.841,799,1.841,800,1.841,801,1.116,802,1.116,803,1.116,804,1.745,805,2.35,806,2.728,807,2.728,808,1.841,809,1.841,810,2.728,811,2.35,812,2.728,813,2.728,814,1.116,815,1.841,816,1.841,817,1.841,818,1.116,819,1.841,820,1.116,821,1.841,822,1.116,823,1.116,824,1.116,825,1.116,826,2.861,827,1.057,828,1.005,829,1.116,830,1.057,831,1.841,832,1.116,833,1.116,834,1.703,835,1.116,836,2.35,837,1.116,838,1.116,839,1.841,840,1.116,841,1.116,842,1.116,843,1.116,844,1.116,845,1.005,846,1.841,847,1.841,848,1.116,849,1.841,850,1.116,851,1.116,852,1.116,853,1.116,854,1.116,855,1.116,856,1.116,857,1.116,858,1.116,859,1.116,860,1.841,861,1.116,862,1.116,863,1.116,864,1.582,865,1.116,866,2.35,867,2.35,868,1.116,869,2.35,870,1.116,871,1.116,872,1.116,873,1.841,874,1.116,875,1.116,876,1.116,877,1.745,878,1.116,879,1.116,880,1.116,881,1.005,882,2.227,883,1.057,884,1.116,885,1.841,886,1.841,887,1.116,888,1.841,889,1.841,890,1.116,891,1.116,892,1.116,893,2.35,894,1.116,895,1.116,896,2.35,897,1.116,898,1.057,899,1.116,900,1.116,901,1.116,902,1.116,903,1.116,904,0.959,905,2.118,906,1.116,907,1.659,908,1.116,909,1.116,910,1.116,911,1.745,912,1.116,913,1.116,914,1.116,915,1.841,916,1.116,917,1.116,918,1.057,919,0.959,920,1.116,921,1.116,922,1.116,923,1.116,924,1.116,925,1.116,926,0.959,927,1.116,928,1.116,929,0.916,930,1.116,931,1.116,932,1.116,933,1.116,934,1.116,935,1.116,936,1.116,937,1.116,938,1.116,939,1.116,940,1.116,941,1.116,942,1.116,943,1.116,944,1.116,945,1.057,946,1.057,947,1.116,948,1.057,949,1.057,950,0.916,951,1.116,952,1.841,953,1.116,954,1.057,955,1.116,956,1.057,957,1.005,958,1.116,959,1.116,960,1.116,961,1.116,962,1.116,963,1.116,964,1.116,965,1.116,966,0.877,967,1.116,968,1.116,1399,3.08,1400,1.866,1401,1.866,1402,1.866,1403,1.866,1404,1.866,1405,1.866,1406,1.866,1407,1.866]],["title/components/NumericComponent.html",[0,0.555,106,1.229]],["body/components/NumericComponent.html",[0,1.007,1,1.092,2,0.162,3,0.115,4,1.251,5,1.251,6,0.988,7,0.09,9,1.255,10,2.177,11,1.251,12,2.781,13,2.227,14,1.953,16,1.953,18,0.21,19,0.56,21,1.255,22,2.648,23,1.026,24,1.046,27,1.257,28,0.013,29,1.725,31,0.5,32,1.227,33,1.069,36,0.389,37,0.614,38,0.09,39,0.017,42,2.738,44,1.831,46,1.423,69,0.894,70,1.756,71,1.387,72,1.697,73,2.2,74,1.251,79,1.02,80,1.251,81,1.129,82,1.251,83,1.129,84,1.764,85,1.174,86,1.251,87,1.129,88,1.706,89,1.251,90,1.129,91,1.209,92,1.251,93,1.129,94,1.251,95,1.129,96,1.168,97,1.756,98,1.092,99,1.251,100,1.129,101,1.251,102,1.129,103,1.129,104,1.251,105,1.251,106,1.986,107,1.251,108,1.092,109,1.251,110,1.129,111,0.988,112,1.756,113,1.129,114,1.585,115,1.129,116,1.251,117,1.129,118,1.251,119,1.092,120,1.251,121,1.092,122,1.251,123,1.129,124,1.251,125,1.129,126,1.251,127,0.008,128,0.008,161,1.021,191,0.551,192,0.551,213,3.597,217,3.526,219,3.123,220,2.852,221,3.621,222,3.621,223,3.621,228,2.852,229,1.532,230,2.577,233,1.619,252,2.697,263,3.376,282,1.069,289,1.921,290,1.921,291,1.921,292,1.921,293,1.921,296,1.921,315,1.921,317,0.988,318,1.921,322,1.921,323,1.921,439,4.138,456,2.361,484,4.167,514,3.932,516,2.236,546,2.713,583,1.129,595,2.367,600,4.441,601,3.808,602,3.545,603,3.808,957,2.828,987,4.441,1408,3.74,1409,5.25,1410,5.25,1411,6.577,1412,5.25,1413,3.74,1414,3.74,1415,3.74,1416,3.74,1417,3.74,1418,3.263,1419,3.263,1420,3.263,1421,5.25,1422,3.74,1423,5.25,1424,4.579,1425,5.25,1426,5.25,1427,5.25,1428,5.25,1429,5.25]],["title/interfaces/NumericalSimulation.html",[236,0.743,600,2.749]],["body/interfaces/NumericalSimulation.html",[2,0.172,3,0.172,7,0.134,18,0.315,19,0.731,28,0.013,30,1.443,31,0.611,38,0.177,44,2.325,46,1.481,127,0.01,128,0.01,236,1.406,282,1.459,456,2.765,484,4.88,514,4.604,595,3.473,596,4.415,597,3.549,598,4.415,599,4.415,600,4.993,601,5.587,602,5.201,603,5.587,604,3.782,605,2.633,606,4.063]],["title/interfaces/OdPair.html",[236,0.743,275,1.835]],["body/interfaces/OdPair.html",[2,0.061,3,0.126,6,0.523,7,0.048,18,0.111,19,0.437,24,0.26,27,1.224,28,0.013,29,1.277,30,1.385,31,0.425,33,0.919,34,0.858,36,0.314,38,0.153,39,0.022,42,1.347,45,0.893,46,1.024,58,1.018,60,3.021,64,1.018,71,0.854,111,0.854,127,0.005,128,0.005,174,0.825,179,1.123,180,1.761,187,1.067,191,0.603,192,0.292,193,1.97,195,0.737,198,1.743,203,3.001,210,1.525,215,0.598,236,0.952,244,1.336,253,0.932,265,0.825,267,0.893,275,2.871,281,2.897,282,1.277,313,0.737,314,0.737,317,1.626,327,1.75,336,2.376,348,2.357,357,1.743,358,2.549,431,2.322,456,2.749,467,2.555,506,2.024,549,1.018,550,0.737,576,2.678,595,1.848,605,1.521,612,2.774,613,2.208,627,2.208,631,1.662,632,3.215,633,1.743,635,3.902,646,1.123,650,1.123,659,1.833,660,1.018,662,1.588,663,1.018,666,1.458,675,3.023,676,3.875,682,1.067,690,1.123,691,2.208,692,2.45,693,3.712,694,2.45,695,3.71,696,3.179,697,2.45,698,3.161,699,1.184,700,3.116,701,1.184,702,1.934,703,3.607,704,3.486,705,2.45,706,1.184,708,3.486,709,1.184,711,1.184,712,1.184,713,1.184,718,2.45,719,1.833,724,1.833,725,1.184,726,1.184,727,0.893,731,1.833,732,2.549,735,1.067,737,1.018,741,1.184,743,1.184,745,0.973,746,2.106,747,1.743,748,1.184,749,1.934,751,1.123,752,1.067,753,1.184,755,1.067,758,2.45,759,1.184,760,0.663,761,1.123,762,1.184,763,1.184,764,2.873,765,3.343,766,3.126,767,1.067,768,1.123,769,3.685,770,2.322,771,1.934,772,1.184,773,1.184,774,1.123,775,1.184,776,1.123,777,1.184,778,2.68,779,1.184,780,1.184,781,1.184,782,1.184,783,1.184,784,1.184,785,1.184,786,1.123,787,1.123,788,2.45,789,1.067,790,1.184,791,1.184,792,1.184,793,1.934,794,1.934,795,1.184,796,1.184,797,1.184,798,1.934,799,1.934,800,1.934,801,1.184,802,1.184,803,1.184,804,1.833,805,2.45,806,2.828,807,2.828,808,1.934,809,1.934,810,2.828,811,2.45,812,2.828,813,2.828,814,1.184,815,1.934,816,1.934,817,1.934,818,1.184,819,1.934,820,1.184,821,1.934,822,1.184,823,1.184,824,1.184,825,1.184,826,2.953,827,1.123,828,1.067,829,1.184,830,1.123,831,1.934,832,1.184,833,1.184,834,1.775,835,1.184,836,2.45,837,1.184,838,1.184,839,1.934,840,1.184,841,1.184,842,1.184,843,1.184,844,1.184,845,1.067,846,1.934,847,1.934,848,1.184,849,1.934,850,1.184,851,1.184,852,1.184,853,1.184,854,1.184,855,1.184,856,1.184,857,1.184,858,1.184,859,1.184,860,1.934,861,1.184,862,1.184,863,1.184,864,1.662,865,1.184,866,2.45,867,2.45,868,1.184,869,2.45,870,1.184,871,1.184,872,1.184,873,1.934,874,1.184,875,1.184,876,1.184,877,1.833,878,1.184,879,1.184,880,1.184,881,1.067,882,2.322,883,1.123,884,1.184,885,1.934,886,1.934,887,1.184,888,1.934,889,1.934,890,1.184,891,1.184,892,1.184,893,2.45,894,1.184,895,1.184,896,2.45,897,1.184,898,1.123,899,1.184,900,1.184,901,1.184,902,1.184,903,1.184,904,1.018,905,2.208,906,1.184,907,1.743,908,1.184,909,1.184,910,1.184,911,1.833,912,1.184,913,1.184,914,1.184,915,1.934,916,1.184,917,1.184,918,1.123,919,1.018,920,1.184,921,1.184,922,1.184,923,1.184,924,1.184,925,1.184,926,1.018,927,1.184,928,1.184,929,0.973,930,1.184,931,1.184,932,1.184,933,1.184,934,1.184,935,1.184,936,1.184,937,1.184,938,1.184,939,1.184,940,1.184,941,1.184,942,1.184,943,1.184,944,1.184,945,1.123,946,1.123,947,1.184,948,1.123,949,1.123,950,0.973,951,1.184,952,1.934,953,1.184,954,1.123,955,1.184,956,1.123,957,1.067,958,1.184,959,1.184,960,1.184,961,1.184,962,1.184,963,1.184,964,1.184,965,1.184,966,0.932,967,1.184,968,1.184]],["title/interfaces/Path.html",[203,1.571,236,0.743]],["body/interfaces/Path.html",[2,0.16,3,0.16,7,0.125,18,0.367,19,0.697,27,1.073,28,0.013,29,1.414,30,1.363,31,0.57,36,0.292,38,0.157,39,0.024,46,1.124,127,0.01,128,0.01,203,3.278,215,1.568,236,1.193,317,1.372,327,1.242,336,2.005,456,2.933,506,1.767,648,4.74,675,2.946,693,3.892,764,3.97,766,3.208,828,2.798,834,2.249,864,2.668,904,3.356,905,4.25,907,4.314,926,2.668,1155,4.532,1156,4.532,1157,4.532,1159,4.532,1163,4.532,1166,4.532,1168,4.532,1170,4.532,1171,5.7,1172,4.532,1173,4.532,1174,4.532,1175,4.532,1176,4.532,1177,4.532,1178,4.095,1179,4.532]],["title/classes/PeriodsChanged.html",[39,0.019,1430,2.433]],["body/classes/PeriodsChanged.html",[2,0.158,3,0.158,7,0.123,9,1.842,18,0.289,19,0.693,23,1.005,24,0.933,28,0.013,31,0.628,32,1.039,33,0.906,36,0.364,38,0.189,39,0.036,44,2.496,79,0.756,85,1.452,127,0.01,128,0.01,150,1.847,161,1.403,191,0.756,192,0.756,229,2.332,244,1.451,282,1.387,506,1.998,547,3.255,550,1.912,553,2.768,583,1.551,585,4.382,586,3.968,587,3.47,1073,4.238,1074,2.768,1078,2.317,1086,3.838,1430,4.466,1431,3.255,1432,6.489,1433,5.138,1434,4.251,1435,4.251,1436,2.911,1437,3.728,1438,3.728,1439,3.47]],["title/components/PrivacyComponent.html",[0,0.555,108,1.188]],["body/components/PrivacyComponent.html",[0,0.993,1,1.254,2,0.178,3,0.132,4,1.437,5,1.437,6,1.134,7,0.103,9,1.38,10,2.341,11,1.437,12,2.817,13,2.503,14,2.148,16,2.148,18,0.241,21,1.38,22,2.503,23,1.275,24,0.758,27,0.705,28,0.013,29,1.249,36,0.241,37,0.705,38,0.103,39,0.02,40,4.418,45,3.378,46,1.772,48,2.228,69,1.027,70,1.931,71,1.525,72,1.866,73,2.333,74,1.437,79,0.85,80,1.437,81,1.297,82,1.437,83,1.297,84,1.83,85,0.961,86,1.437,87,1.297,88,1.683,89,1.437,90,1.297,91,1.388,92,1.437,93,1.297,94,1.437,95,1.297,96,2.272,97,1.931,98,1.254,99,1.437,100,1.297,101,1.437,102,1.297,103,1.297,104,1.437,105,1.437,106,1.297,107,1.437,108,2.036,109,1.437,110,1.297,111,1.134,112,1.931,113,1.297,114,1.297,115,1.297,116,1.437,117,1.297,118,1.437,119,1.254,120,1.437,121,1.254,122,1.437,123,1.297,124,1.437,125,1.297,126,1.437,127,0.011,128,0.009,138,3.019,211,5.779,325,3.11,537,4.551,648,4.188,708,3.95,770,3.27,1025,2.072,1121,4.551,1252,4.188,1424,5.036,1440,4.295,1441,5.773,1442,5.773,1443,4.295,1444,4.295,1445,6.788,1446,6.083,1447,4.551,1448,5.773,1449,5.773,1450,5.773,1451,5.773,1452,5.773,1453,5.773,1454,5.773,1455,5.773,1456,6.973,1457,5.773,1458,5.773,1459,5.036,1460,5.773,1461,5.773,1462,5.773,1463,4.551,1464,5.773,1465,5.773,1466,6.973,1467,5.773,1468,5.773,1469,5.773,1470,5.036,1471,4.551,1472,5.773]],["title/classes/Relation.html",[39,0.019,826,2.306]],["body/classes/Relation.html",[2,0.06,3,0.125,6,0.515,7,0.047,18,0.109,19,0.432,23,0.381,24,0.678,27,1.22,28,0.013,29,1.268,30,1.392,31,0.422,32,0.394,33,0.978,34,0.844,36,0.312,38,0.152,39,0.024,42,1.329,45,0.879,46,1.201,58,1.001,60,3.002,64,1.639,71,1.07,79,0.287,111,0.843,127,0.005,128,0.005,174,0.811,179,1.808,180,1.743,187,1.05,191,0.69,192,0.47,193,1.95,195,0.725,198,1.719,203,2.979,210,1.508,215,0.588,236,0.855,244,1.322,253,0.916,265,0.811,267,0.879,275,2.757,281,2.725,282,1.2,313,0.725,314,0.725,317,1.615,327,1.744,336,2.36,348,2.351,357,1.719,358,2.523,431,2.296,456,2.741,467,2.537,506,2.038,549,1.001,550,0.725,576,2.655,595,1.827,605,1.5,612,2.609,613,2.183,627,2.183,631,1.639,632,3.197,633,1.719,635,3.887,646,1.104,650,1.104,659,1.808,660,1.001,662,1.567,663,1.001,666,1.439,675,3.007,676,3.856,682,1.05,690,1.104,691,2.523,692,2.8,693,3.691,694,2.422,695,3.144,696,3.156,697,2.422,698,3.141,699,1.165,700,3.089,701,1.165,702,1.908,703,2.928,704,3.925,705,2.422,706,1.165,708,3.464,709,1.165,711,1.165,712,1.165,713,1.165,718,2.422,719,1.808,724,1.808,725,1.165,726,1.165,727,0.879,731,1.808,732,2.523,735,1.05,737,1.001,741,1.165,743,1.165,745,0.957,746,2.082,747,1.719,748,1.165,749,1.908,751,1.104,752,1.05,753,1.165,755,1.05,758,2.422,759,1.165,760,0.652,761,1.104,762,1.165,763,1.165,764,2.851,765,3.319,766,3.107,767,1.05,768,1.104,769,3.156,770,1.808,771,1.908,772,1.165,773,1.165,774,1.104,775,1.165,776,1.104,777,1.165,778,3.586,779,1.165,780,1.165,781,1.165,782,1.165,783,1.165,784,1.165,785,1.165,786,1.104,787,1.104,788,2.422,789,1.05,790,1.165,791,1.165,792,1.165,793,1.908,794,1.908,795,1.165,796,1.165,797,1.165,798,1.908,799,1.908,800,1.908,801,1.165,802,1.165,803,1.165,804,1.808,805,2.422,806,2.8,807,2.8,808,1.908,809,1.908,810,2.8,811,2.422,812,2.8,813,2.8,814,1.165,815,1.908,816,1.908,817,1.908,818,1.165,819,1.908,820,1.165,821,1.908,822,1.165,823,1.165,824,1.165,825,1.165,826,3.319,827,1.808,828,1.719,829,1.908,830,1.808,831,3.318,832,1.908,833,1.165,834,1.755,835,1.165,836,2.422,837,1.165,838,1.165,839,1.908,840,1.165,841,1.165,842,1.165,843,1.165,844,1.165,845,1.05,846,1.908,847,1.908,848,1.165,849,1.908,850,1.165,851,1.165,852,1.165,853,1.165,854,1.165,855,1.165,856,1.165,857,1.165,858,1.165,859,1.165,860,1.908,861,1.165,862,1.165,863,1.165,864,1.639,865,1.165,866,2.422,867,2.422,868,1.165,869,2.422,870,1.165,871,1.165,872,1.165,873,1.908,874,1.165,875,1.165,876,1.165,877,1.808,878,1.165,879,1.165,880,1.165,881,1.05,882,2.296,883,1.104,884,1.165,885,1.908,886,1.908,887,1.165,888,1.908,889,1.908,890,1.165,891,1.165,892,1.165,893,2.422,894,1.165,895,1.165,896,2.422,897,1.165,898,1.104,899,1.165,900,1.165,901,1.165,902,1.165,903,1.165,904,1.001,905,2.183,906,1.165,907,1.719,908,1.165,909,1.165,910,1.165,911,1.808,912,1.165,913,1.165,914,1.165,915,1.908,916,1.165,917,1.165,918,1.104,919,1.001,920,1.165,921,1.165,922,1.165,923,1.165,924,1.165,925,1.165,926,1.001,927,1.165,928,1.165,929,0.957,930,1.165,931,1.165,932,1.165,933,1.165,934,1.165,935,1.165,936,1.165,937,1.165,938,1.165,939,1.165,940,1.165,941,1.165,942,1.165,943,1.165,944,1.165,945,1.104,946,1.104,947,1.165,948,1.104,949,1.104,950,0.957,951,1.165,952,1.908,953,1.165,954,1.104,955,1.165,956,1.104,957,1.05,958,1.165,959,1.165,960,1.165,961,1.165,962,1.165,963,1.165,964,1.165,965,1.165,966,0.916,967,1.165,968,1.165,1473,3.191,1474,1.949,1475,1.949]],["title/classes/Reset.html",[39,0.019,150,1.006]],["body/classes/Reset.html",[2,0.158,3,0.158,7,0.123,9,1.842,18,0.289,19,0.693,23,1.005,24,0.933,28,0.013,31,0.628,32,1.039,33,0.906,36,0.364,38,0.189,39,0.036,44,2.496,79,0.756,85,1.452,127,0.01,128,0.01,150,1.904,161,1.403,191,0.756,192,0.756,229,2.332,244,1.451,282,1.387,506,1.998,547,3.255,550,1.912,553,2.768,583,1.551,585,3.47,586,3.968,587,3.47,1073,4.238,1074,2.768,1078,2.317,1086,3.838,1430,4.251,1431,3.255,1434,4.251,1435,4.251,1436,2.911,1437,3.728,1438,4.707,1439,3.47,1476,6.489,1477,5.138]],["title/injectables/SchedulerService.html",[242,1.515,1478,2.579]],["body/injectables/SchedulerService.html",[2,0.09,3,0.162,7,0.07,18,0.428,21,1.052,23,0.86,24,0.825,27,1.285,28,0.013,29,1.524,30,1.348,31,0.446,32,1.068,36,0.412,37,0.482,38,0.07,39,0.014,42,2.748,44,1.993,46,1.752,48,1.132,53,3.468,60,2.16,79,0.864,84,1.263,127,0.007,128,0.007,150,1.632,187,1.58,191,0.864,192,0.864,203,2.038,242,1.965,264,2.758,265,3.101,266,3.161,267,3.086,268,3.507,269,3.962,270,3.717,275,1.322,282,0.931,303,1.662,304,1.753,305,2.312,306,2.559,317,1.86,324,2.068,325,1.58,327,1.637,345,2.381,347,3.086,352,3.361,354,2.559,386,3.717,407,2.312,456,1.579,497,3.507,506,1.305,528,5.758,544,2.128,582,4.606,612,2.068,613,3.556,632,3.086,633,2.37,654,2.312,660,2.26,666,3.175,745,2.592,746,1.507,760,2.409,766,2.592,834,3.267,881,3.387,883,2.493,898,2.493,926,2.712,929,2.592,1025,1.895,1039,3.192,1089,4.51,1105,3.962,1134,3.838,1231,3.507,1239,3.345,1447,3.468,1463,2.312,1471,4.625,1478,2.788,1479,2.933,1480,4.4,1481,4.4,1482,4.4,1483,2.559,1484,4.162,1485,4.162,1486,2.933,1487,2.933,1488,4.4,1489,4.4,1490,2.933,1491,6.601,1492,5.758,1493,6.601,1494,7.545,1495,4.4,1496,2.933,1497,3.838,1498,4.4,1499,4.4,1500,2.933,1501,7.201,1502,2.559,1503,2.312,1504,2.312,1505,2.933,1506,2.933,1507,2.933,1508,2.933,1509,2.933,1510,2.933,1511,2.933,1512,2.933,1513,2.933,1514,5.118,1515,5.28,1516,2.933,1517,5.867,1518,2.933,1519,2.933,1520,2.933,1521,2.933,1522,2.933,1523,2.933,1524,2.933,1525,2.933,1526,2.933,1527,2.933,1528,5.28,1529,5.151,1530,2.933,1531,5.867,1532,2.933,1533,2.933,1534,2.933,1535,2.933,1536,5.867,1537,2.933,1538,4.4,1539,4.4,1540,4.4,1541,4.4,1542,4.4,1543,3.838,1544,2.933,1545,2.559,1546,2.559,1547,5.28,1548,4.606,1549,5.28,1550,5.28,1551,5.28,1552,4.4,1553,5.28,1554,2.933,1555,2.933,1556,2.933,1557,2.933,1558,2.933,1559,2.933,1560,2.933,1561,2.933,1562,2.933,1563,2.933,1564,2.933,1565,2.933]],["title/components/SearchForTheAreaComponent.html",[0,0.555,110,1.229]],["body/components/SearchForTheAreaComponent.html",[0,0.97,1,0.963,2,0.148,3,0.101,4,1.103,5,1.103,6,0.871,7,0.079,9,1.147,10,2.03,11,1.103,12,2.746,13,2.146,14,1.785,16,1.785,18,0.349,19,0.512,21,1.147,22,2.551,23,0.938,24,1.04,27,1.255,28,0.013,29,1.734,30,0.817,31,0.502,32,0.667,33,0.846,36,0.371,37,0.542,38,0.079,39,0.015,46,0.714,69,0.789,70,1.605,71,1.267,72,1.551,73,2.078,74,1.103,79,0.914,80,1.103,81,0.996,82,1.103,83,0.996,84,1.827,85,1.265,86,1.103,87,0.996,88,1.526,89,1.103,90,0.996,91,1.066,92,1.103,93,0.996,94,1.103,95,0.996,96,1.03,97,1.605,98,0.963,99,1.103,100,0.996,101,1.103,102,0.996,103,0.996,104,1.103,105,1.103,106,0.996,107,1.103,108,0.963,109,1.103,110,1.875,111,2.019,112,1.605,113,0.996,114,0.996,115,0.996,116,1.103,117,0.996,118,1.103,119,0.963,120,1.103,121,0.963,122,1.103,123,0.996,124,1.103,125,0.996,126,1.103,127,0.009,128,0.007,191,0.706,192,0.706,213,3.491,217,3.381,219,2.975,220,2.659,221,3.489,222,3.489,223,3.489,228,2.659,229,1.401,230,2.356,233,1.428,252,2.465,259,3.945,260,4.117,264,2.92,282,1.095,289,1.694,290,1.694,291,1.694,292,1.694,293,1.694,296,1.694,302,1.776,303,1.868,315,1.694,317,1.267,318,1.694,321,2.089,322,1.694,323,1.694,324,3.491,325,1.776,345,1.487,347,2.55,348,0.996,352,2.777,353,3.481,364,3.24,365,3.04,473,5.603,482,1.971,513,1.852,583,2.199,727,2.163,760,2.304,789,2.585,1035,4.186,1083,2.465,1108,2.392,1231,3.713,1237,2.877,1238,2.877,1239,3.04,1242,2.877,1245,5.418,1253,4.896,1268,2.877,1270,2.877,1277,2.877,1483,2.877,1484,4.896,1503,2.599,1514,2.877,1529,4.194,1548,2.877,1566,7.544,1567,6.58,1568,2.877,1569,4.186,1570,4.186,1571,4.798,1572,3.298,1573,3.298,1574,3.298,1575,3.298,1576,4.798,1577,3.298,1578,3.298,1579,3.298,1580,3.298,1581,3.298,1582,3.298,1583,2.877,1584,3.298,1585,4.798,1586,3.298,1587,4.186,1588,3.298,1589,3.298,1590,3.298,1591,3.298,1592,3.298,1593,3.298,1594,3.298,1595,3.298,1596,3.298,1597,3.298,1598,3.298,1599,3.298,1600,3.298,1601,3.298,1602,4.798,1603,3.298,1604,2.877,1605,3.298,1606,3.298,1607,3.298,1608,3.298,1609,3.298,1610,3.298,1611,3.298,1612,2.877]],["title/components/SelectionOfTheAreaComponent.html",[0,0.555,113,1.229]],["body/components/SelectionOfTheAreaComponent.html",[0,0.979,1,0.991,2,0.151,3,0.104,4,1.136,5,1.136,6,0.897,7,0.081,9,1.172,10,2.064,11,1.136,12,2.754,13,2.165,14,1.824,16,1.824,18,0.354,19,0.523,21,1.172,22,2.574,23,0.958,24,1.044,27,1.288,28,0.013,29,1.697,30,0.834,31,0.478,32,0.687,33,0.864,34,2.122,36,0.42,37,0.558,38,0.081,39,0.016,46,0.735,48,2.968,69,0.812,70,1.639,71,1.294,72,1.584,73,2.106,74,1.136,79,0.846,80,1.136,81,1.025,82,1.136,83,1.025,84,1.858,85,1.286,86,1.136,87,1.025,88,1.609,89,1.136,90,1.025,91,1.097,92,1.136,93,1.025,94,1.136,95,1.025,96,1.06,97,1.639,98,0.991,99,1.136,100,1.025,101,1.136,102,1.025,103,1.025,104,1.136,105,1.136,106,1.025,107,1.136,108,0.991,109,1.136,110,1.025,111,0.897,112,1.639,113,1.901,114,2.293,115,1.025,116,1.136,117,1.025,118,1.136,119,0.991,120,1.136,121,0.991,122,1.136,123,1.025,124,1.136,125,1.025,126,1.136,127,0.007,128,0.007,161,0.927,191,0.5,192,0.846,213,3.516,217,3.415,219,3.01,220,2.703,221,3.521,222,3.521,223,3.521,228,2.703,229,1.431,230,2.406,233,1.47,252,2.517,259,3.991,260,4.158,263,3.27,264,2.96,265,2.621,266,3.392,289,1.744,290,1.744,291,1.744,292,1.744,293,1.744,296,1.744,297,2.463,301,3.555,302,1.829,303,1.923,304,2.03,307,1.829,308,1.596,313,1.263,314,1.263,315,1.744,317,1.519,318,1.744,321,2.151,322,1.744,323,1.744,324,1.596,325,1.829,364,3.309,365,3.105,516,2.03,583,1.025,691,2.64,727,3.31,745,3.091,804,3.567,904,2.517,918,2.776,1025,2.064,1026,2.676,1032,2.962,1239,3.105,1319,2.463,1320,2.962,1471,4.963,1568,2.962,1569,4.275,1570,4.275,1613,7.593,1614,6.624,1615,3.395,1616,3.395,1617,3.395,1618,3.395,1619,3.395,1620,3.395,1621,3.395,1622,3.395,1623,3.395,1624,6.296,1625,6.256,1626,3.395,1627,3.395,1628,4.9,1629,3.395,1630,3.395,1631,3.395,1632,3.395,1633,3.395,1634,3.395,1635,3.395,1636,3.395,1637,3.395,1638,3.395,1639,3.395,1640,3.395,1641,4.9,1642,4.9,1643,4.9,1644,4.9,1645,4.275,1646,4.275]],["title/modules/SharedModule.html",[133,1.188,147,2.433]],["body/modules/SharedModule.html",[2,0.195,3,0.152,7,0.119,27,0.813,28,0.013,36,0.466,37,0.813,38,0.177,39,0.023,69,1.184,93,2.496,100,2.518,103,2.518,127,0.01,128,0.01,133,1.85,135,2.43,136,3.765,137,2.667,138,2.744,147,5.065,149,2.979,150,1.224,151,2.543,153,3.432,194,2.667,200,4.597,239,3.343,245,4.279,302,2.667,327,1.184,506,1.224,970,3.902,1359,5.208,1529,3.343,1647,4.319,1648,4.319,1649,4.319,1650,4.319,1651,4.319,1652,6.337,1653,6.337,1654,5.528,1655,4.319,1656,5.528,1657,4.319,1658,5.528,1659,5.528,1660,5.528,1661,4.319,1662,4.319,1663,4.951,1664,4.951,1665,4.319,1666,4.319,1667,3.902,1668,4.951]],["title/interfaces/Simulation.html",[44,1.229,236,0.743]],["body/interfaces/Simulation.html",[2,0.177,3,0.177,7,0.138,18,0.323,19,0.743,28,0.013,30,1.415,31,0.569,38,0.179,44,2.493,46,1.75,127,0.011,128,0.011,236,1.419,282,1.319,456,2.066,484,3.646,514,3.44,595,3.769,596,4.536,597,3.646,598,4.536,599,4.536,600,5.249,601,4.174,602,3.886,603,4.174,604,4.7,605,3.272,606,5.639]],["title/classes/SimulationChanged.html",[39,0.019,1434,2.433]],["body/classes/SimulationChanged.html",[2,0.156,3,0.156,7,0.122,9,1.836,18,0.285,19,0.688,23,0.994,24,0.929,28,0.013,31,0.638,32,1.028,33,0.896,36,0.362,38,0.188,39,0.035,44,2.492,79,0.748,85,1.442,127,0.01,128,0.01,150,1.839,161,1.388,191,0.748,192,0.748,229,2.327,244,1.435,282,1.383,506,1.993,547,3.22,550,1.892,553,2.738,583,1.535,585,3.433,586,3.959,587,3.433,720,4.448,1073,4.227,1074,2.738,1078,2.292,1086,3.823,1430,4.23,1431,3.22,1434,4.448,1435,4.23,1436,2.88,1437,4.675,1438,3.688,1439,3.433,1669,6.445,1670,5.083]],["title/components/SimulationComponent.html",[0,0.555,115,1.229]],["body/components/SimulationComponent.html",[0,0.939,1,0.87,2,0.137,3,0.092,4,0.998,5,0.998,6,0.787,7,0.071,9,1.065,10,1.914,11,0.998,12,2.715,13,2.078,14,1.658,16,1.658,18,0.332,19,0.475,21,1.065,22,2.471,23,0.871,24,1.061,27,1.21,28,0.013,29,1.685,30,1.272,31,0.575,32,0.901,33,0.785,36,0.414,37,0.49,38,0.071,39,0.014,44,2.224,48,2.731,69,0.713,70,1.49,71,1.176,72,1.44,73,1.979,74,0.998,79,0.871,80,0.998,81,0.9,82,0.998,83,0.9,84,1.81,85,0.997,86,0.998,87,0.9,88,1.536,89,0.998,90,0.9,91,0.964,92,0.998,93,0.9,94,0.998,95,0.9,96,0.931,97,1.49,98,0.87,99,0.998,100,0.9,101,0.998,102,0.9,103,0.9,104,0.998,105,0.998,106,0.9,107,0.998,108,0.87,109,0.998,110,0.9,111,0.787,112,1.49,113,0.9,114,1.345,115,1.786,116,0.998,117,0.9,118,0.998,119,0.87,120,0.998,121,0.87,122,0.998,123,0.9,124,0.998,125,0.9,126,0.998,127,0.007,128,0.007,161,0.814,174,1.241,191,0.656,192,0.656,213,3.4,217,3.261,219,2.854,220,2.507,221,3.379,222,3.379,223,3.379,228,2.507,229,1.3,230,2.187,233,1.291,244,1.67,252,2.288,259,3.784,260,3.97,263,3.122,264,2.781,282,1.171,289,1.532,290,1.532,291,1.532,292,1.532,293,1.532,296,1.532,302,1.606,303,1.689,313,1.109,314,1.109,315,1.532,317,1.408,318,1.532,321,1.889,322,1.532,323,1.532,336,1.151,348,2.078,349,4.796,364,3.008,365,2.822,408,2.163,497,3.536,499,4.663,500,4.663,502,5.235,503,5.794,508,3.511,509,3.886,512,2.663,514,2.663,516,1.782,521,3.886,546,2.163,552,2.601,553,1.606,554,3.886,555,3.886,583,0.9,595,3.19,604,3.008,605,2.094,606,4.818,732,2.4,735,3.187,755,3.578,845,3.187,987,3.995,1418,2.601,1419,2.601,1420,2.601,1436,3.586,1485,4.203,1504,2.35,1671,2.982,1672,4.454,1673,4.454,1674,5.794,1675,4.454,1676,2.982,1677,2.982,1678,2.982,1679,2.982,1680,2.982,1681,2.982,1682,2.982,1683,2.982,1684,2.982,1685,2.982,1686,2.982,1687,2.982,1688,2.982,1689,2.982,1690,2.601,1691,2.35,1692,6.331,1693,2.982,1694,4.454,1695,2.982,1696,2.982,1697,2.982,1698,2.982,1699,2.982,1700,2.982,1701,2.982,1702,2.982,1703,2.982,1704,2.982,1705,4.454,1706,2.982,1707,4.454,1708,4.454,1709,2.982,1710,2.982,1711,2.982,1712,4.454,1713,4.454,1714,4.454,1715,4.454,1716,4.454,1717,4.454,1718,4.454]],["title/classes/SimulationEnded.html",[39,0.019,1435,2.433]],["body/classes/SimulationEnded.html",[2,0.157,3,0.157,7,0.123,9,1.839,18,0.287,19,0.69,23,0.999,24,0.931,28,0.013,31,0.628,32,1.034,33,0.901,36,0.363,38,0.188,39,0.035,44,2.494,79,0.752,85,1.447,127,0.01,128,0.01,150,1.843,161,1.395,191,0.752,192,0.752,229,2.329,244,2.171,282,1.385,506,1.996,547,3.238,550,1.902,553,2.753,583,1.543,585,3.451,586,3.964,587,4.367,1073,4.232,1074,2.753,1078,2.304,1086,3.83,1430,4.241,1431,3.238,1434,4.241,1435,4.457,1436,2.895,1437,3.708,1438,3.708,1439,3.451,1719,6.467,1720,5.111]],["title/modules/SimulationModule.html",[133,1.188,148,2.749]],["body/modules/SimulationModule.html",[2,0.181,3,0.181,7,0.141,28,0.013,36,0.457,37,0.967,38,0.169,39,0.027,69,1.408,127,0.011,128,0.011,133,2.06,135,2.891,136,3.801,137,3.172,138,3.272,148,5.598,149,3.317,150,1.455,151,3.025,153,3.464,160,4.641,161,1.608,308,2.768,386,5.152,497,4.861,545,5.137,1351,3.997,1721,5.137,1722,5.137,1723,5.888,1724,5.888,1725,5.888]],["title/interfaces/SimulationState.html",[236,0.743,1726,3.208]],["body/interfaces/SimulationState.html",[2,0.169,3,0.169,7,0.132,18,0.309,19,0.723,28,0.013,31,0.418,36,0.412,38,0.199,44,2.52,127,0.01,128,0.01,161,1.503,215,1.662,236,1.236,327,1.914,546,3.993,553,3.649,583,2.448,1346,4.913,1351,3.118,1436,3.837,1726,6.391,1727,4.801,1728,7.337,1729,5.339,1730,4.801,1731,6.196,1732,6.308,1733,5.504,1734,4.801,1735,5.908,1736,4.801,1737,4.801,1738,4.801,1739,4.801,1740,4.801]],["title/classes/Statistics.html",[39,0.019,377,2.579]],["body/classes/Statistics.html",[2,0.114,3,0.114,7,0.089,18,0.208,21,1.247,24,1.036,27,1.361,28,0.013,30,1.42,31,0.6,33,0.653,36,0.208,38,0.089,39,0.024,79,1.162,127,0.008,128,0.008,191,1.162,192,1.162,215,1.118,282,1.262,317,1.984,327,0.886,336,2.528,348,2.084,377,4.149,456,2.835,506,1.887,558,1.741,602,2.501,755,4.046,834,2.613,882,3.418,911,3.418,970,6.676,1046,4.548,1178,4.11,1674,5.263,1741,3.704,1742,5.214,1743,5.214,1744,5.214,1745,5.214,1746,5.214,1747,5.214,1748,5.214,1749,5.214,1750,5.214,1751,5.214,1752,5.214,1753,5.214,1754,5.214,1755,5.214,1756,8.557,1757,3.704,1758,5.214,1759,3.704,1760,5.214,1761,3.704,1762,5.214,1763,3.704,1764,5.214,1765,3.704,1766,5.214,1767,3.704,1768,3.704,1769,3.704,1770,5.214,1771,3.704,1772,5.214,1773,3.704,1774,5.214,1775,3.704,1776,5.214,1777,3.704,1778,5.214,1779,3.704,1780,3.231,1781,5.214,1782,5.214,1783,5.214,1784,5.214,1785,3.704,1786,3.704,1787,3.704,1788,3.704,1789,3.704,1790,3.704,1791,5.214,1792,5.214,1793,5.214,1794,5.214,1795,3.704,1796,3.704,1797,3.704,1798,3.704,1799,3.704]],["title/components/StatisticsComponent.html",[0,0.555,117,1.229]],["body/components/StatisticsComponent.html",[0,0.985,1,1.013,2,0.153,3,0.107,4,1.161,5,1.161,6,0.916,7,0.083,9,1.19,10,2.089,11,1.161,12,2.761,13,2.179,14,1.852,16,1.852,18,0.357,19,0.531,21,1.19,22,2.591,23,0.973,24,1.06,27,1.235,28,0.013,29,1.703,30,1.193,31,0.561,32,0.702,33,0.612,36,0.422,37,0.57,38,0.083,39,0.016,44,2.033,48,2.705,69,0.83,70,1.665,71,1.315,72,1.609,73,2.128,74,1.161,79,0.857,80,1.161,81,1.048,82,1.161,83,1.048,84,1.866,85,1.114,86,1.161,87,1.048,88,1.557,89,1.161,90,1.048,91,1.121,92,1.161,93,1.048,94,1.161,95,1.048,96,1.084,97,1.665,98,1.013,99,1.161,100,1.048,101,1.161,102,1.048,103,1.048,104,1.161,105,1.161,106,1.048,107,1.161,108,1.013,109,1.161,110,1.048,111,0.916,112,1.665,113,1.048,114,1.503,115,1.048,116,1.161,117,1.92,118,1.161,119,1.013,120,1.161,121,1.013,122,1.161,123,1.048,124,1.161,125,1.048,126,1.161,127,0.008,128,0.008,161,0.947,174,1.445,191,0.511,192,0.511,213,3.535,217,3.44,219,3.036,220,2.736,221,3.544,222,3.544,223,3.544,228,2.736,229,1.453,230,2.444,233,1.502,252,2.557,259,4.025,260,4.189,263,3.294,264,2.989,282,1.326,289,1.782,290,1.782,291,1.782,292,1.782,293,1.782,296,1.782,302,1.869,303,1.966,307,1.869,308,1.631,315,1.782,317,1.68,318,1.782,321,2.198,322,1.782,323,1.782,327,1.19,341,2.074,345,1.564,346,1.782,347,1.564,348,1.503,352,1.703,353,2.517,365,3.153,377,3.153,386,4.029,407,2.735,408,2.517,421,3.027,497,3.801,504,6.113,516,2.074,537,3.923,560,3.027,574,6.113,604,3.361,605,2.34,724,4.183,732,2.681,1485,4.588,1504,2.735,1691,2.735,1800,3.47,1801,4.978,1802,4.978,1803,7.008,1804,7.008,1805,4.978,1806,3.47,1807,3.47,1808,3.47,1809,3.47,1810,3.47,1811,3.47,1812,3.47,1813,3.47,1814,3.47,1815,3.47,1816,3.47,1817,3.47,1818,3.47,1819,3.47,1820,3.47,1821,3.47,1822,3.47,1823,3.47,1824,3.47,1825,3.923]],["title/interfaces/Step.html",[236,0.743,513,1.571]],["body/interfaces/Step.html",[2,0.186,3,0.186,7,0.145,18,0.34,19,0.766,28,0.013,31,0.46,38,0.183,46,1.803,127,0.011,128,0.011,215,1.829,233,3.108,236,1.396,327,1.448,513,3.159,597,3.838,670,3.838,950,3.882,1025,2.745,1279,4.775]],["title/classes/StepChanged.html",[39,0.019,1080,2.433]],["body/classes/StepChanged.html",[2,0.149,3,0.149,7,0.116,9,1.853,18,0.389,19,0.667,23,0.948,24,0.908,28,0.013,30,1.178,31,0.637,32,0.981,33,0.855,36,0.351,38,0.189,39,0.036,79,0.714,84,1.853,85,1.085,88,1.122,127,0.01,128,0.01,150,1.807,161,1.324,191,0.714,192,0.714,229,2.332,244,1.369,282,1.423,506,1.995,513,3.084,550,1.805,583,1.464,586,3.963,720,4.371,760,1.622,1071,3.921,1072,3.072,1073,4.247,1074,2.612,1077,3.072,1078,2.186,1079,2.899,1080,4.371,1081,4.138,1082,4.138,1083,2.491,1084,3.275,1085,3.962,1086,3.888,1087,3.072,1088,3.072,1089,2.899,1090,3.072,1091,3.072,1826,6.254,1827,4.849]],["title/classes/StepError.html",[39,0.019,1081,2.433]],["body/classes/StepError.html",[2,0.15,3,0.15,7,0.117,9,1.856,18,0.39,19,0.67,23,0.953,24,0.911,28,0.013,30,1.181,31,0.627,32,0.986,33,0.859,36,0.352,38,0.189,39,0.036,79,0.718,84,1.856,85,1.091,88,1.127,127,0.01,128,0.01,150,1.811,161,1.331,191,0.718,192,0.718,229,2.335,244,1.376,282,1.461,506,1.997,513,3.087,550,1.814,583,1.472,586,3.966,760,1.631,1071,3.931,1072,3.088,1073,4.252,1074,2.626,1077,3.088,1078,2.198,1079,2.914,1080,4.148,1081,4.38,1082,4.148,1083,2.504,1084,3.292,1085,3.088,1086,3.894,1087,3.975,1088,3.088,1089,2.914,1090,3.088,1091,3.088,1828,6.274,1829,4.874]],["title/classes/StepPending.html",[39,0.019,1082,2.433]],["body/classes/StepPending.html",[2,0.148,3,0.148,7,0.116,9,1.851,18,0.388,19,0.665,23,0.943,24,0.906,28,0.013,30,1.175,31,0.626,32,0.976,33,0.851,36,0.35,38,0.189,39,0.036,79,0.71,84,1.851,85,1.079,88,1.116,127,0.01,128,0.01,150,1.804,161,1.317,191,0.71,192,0.71,229,2.33,244,2.133,282,1.459,506,1.993,513,3.08,550,1.795,583,1.457,586,3.959,760,1.614,1071,3.912,1072,3.057,1073,4.242,1074,2.599,1077,3.057,1078,2.175,1079,2.884,1080,4.128,1081,4.128,1082,4.363,1083,2.478,1084,3.258,1085,3.057,1086,3.882,1087,3.057,1088,3.949,1089,2.884,1090,3.057,1091,3.057,1830,6.233,1831,4.825]],["title/interfaces/Tag.html",[236,0.743,704,2.306]],["body/interfaces/Tag.html",[2,0.061,3,0.127,6,0.526,7,0.048,18,0.112,19,0.439,24,0.261,27,1.225,28,0.013,29,1.279,30,1.385,31,0.361,33,1.087,34,0.862,36,0.315,38,0.153,39,0.022,42,1.352,45,0.898,46,1.027,58,1.023,60,3.027,64,1.023,71,1.086,111,0.858,127,0.005,128,0.005,174,0.829,179,1.128,180,1.766,187,1.072,191,0.605,192,0.293,193,1.975,195,0.741,198,1.749,203,2.989,210,1.53,215,0.601,236,0.954,244,1.339,253,0.936,265,0.829,267,0.898,275,2.78,281,2.752,282,1.279,313,0.741,314,0.741,317,1.628,327,1.752,336,2.38,348,2.359,357,1.749,358,2.556,431,2.33,456,2.751,467,2.56,506,2.025,549,1.023,550,0.741,576,2.685,595,1.854,605,1.527,612,2.635,613,2.215,627,2.215,631,1.668,632,3.22,633,1.749,635,3.907,646,1.128,650,1.128,659,1.84,660,1.023,662,1.594,663,1.023,666,1.464,675,3.027,676,3.88,682,1.072,690,1.128,691,2.215,692,2.458,693,3.701,694,2.458,695,3.176,696,3.185,697,2.458,698,3.167,699,1.19,700,3.124,701,1.19,702,1.941,703,2.961,704,3.715,705,2.458,706,1.19,708,3.493,709,1.19,711,1.19,712,1.19,713,1.19,718,2.458,719,1.84,724,1.84,725,1.19,726,1.19,727,0.898,731,1.84,732,2.556,735,1.072,737,1.023,741,1.19,743,1.19,745,0.977,746,2.112,747,1.749,748,1.19,749,1.941,751,1.128,752,1.072,753,1.19,755,1.072,758,2.458,759,1.19,760,0.666,761,1.128,762,1.19,763,1.19,764,2.88,765,3.349,766,3.131,767,1.072,768,1.128,769,3.185,770,2.33,771,1.941,772,1.19,773,1.941,774,1.84,775,1.941,776,2.688,777,1.19,778,2.688,779,1.19,780,1.19,781,1.19,782,1.19,783,1.19,784,1.19,785,1.19,786,1.128,787,1.128,788,2.458,789,1.072,790,1.19,791,1.19,792,1.19,793,1.941,794,1.941,795,1.19,796,1.19,797,1.19,798,1.941,799,1.941,800,1.941,801,1.19,802,1.19,803,1.19,804,1.84,805,2.458,806,2.836,807,2.836,808,1.941,809,1.941,810,2.836,811,2.458,812,2.836,813,2.836,814,1.19,815,1.941,816,1.941,817,1.941,818,1.19,819,1.941,820,1.19,821,1.941,822,1.19,823,1.19,824,1.19,825,1.19,826,2.961,827,1.128,828,1.072,829,1.19,830,1.128,831,1.941,832,1.19,833,1.19,834,1.781,835,1.19,836,2.458,837,1.19,838,1.19,839,1.941,840,1.19,841,1.19,842,1.19,843,1.19,844,1.19,845,1.072,846,1.941,847,1.941,848,1.19,849,1.941,850,1.19,851,1.19,852,1.19,853,1.19,854,1.19,855,1.19,856,1.19,857,1.19,858,1.19,859,1.19,860,1.941,861,1.19,862,1.19,863,1.19,864,1.668,865,1.19,866,2.458,867,2.458,868,1.19,869,2.458,870,1.19,871,1.19,872,1.19,873,1.941,874,1.19,875,1.19,876,1.19,877,1.84,878,1.19,879,1.19,880,1.19,881,1.072,882,2.33,883,1.128,884,1.19,885,1.941,886,1.941,887,1.19,888,1.941,889,1.941,890,1.19,891,1.19,892,1.19,893,2.458,894,1.19,895,1.19,896,2.458,897,1.19,898,1.128,899,1.19,900,1.19,901,1.19,902,1.19,903,1.19,904,1.023,905,2.215,906,1.19,907,1.749,908,1.19,909,1.19,910,1.19,911,1.84,912,1.19,913,1.19,914,1.19,915,1.941,916,1.19,917,1.19,918,1.128,919,1.023,920,1.19,921,1.19,922,1.19,923,1.19,924,1.19,925,1.19,926,1.023,927,1.19,928,1.19,929,0.977,930,1.19,931,1.19,932,1.19,933,1.19,934,1.19,935,1.19,936,1.19,937,1.19,938,1.19,939,1.19,940,1.19,941,1.19,942,1.19,943,1.19,944,1.19,945,1.128,946,1.128,947,1.19,948,1.128,949,1.128,950,0.977,951,1.19,952,1.941,953,1.19,954,1.128,955,1.19,956,1.128,957,1.072,958,1.19,959,1.19,960,1.19,961,1.19,962,1.19,963,1.19,964,1.19,965,1.19,966,0.936,967,1.19,968,1.19]],["title/components/TermsComponent.html",[0,0.555,119,1.188]],["body/components/TermsComponent.html",[0,1.01,1,1.319,2,0.184,3,0.139,4,1.512,5,1.512,6,1.194,7,0.108,9,1.428,10,2.401,11,1.512,12,2.829,13,2.543,14,2.223,16,2.223,18,0.254,21,1.428,22,2.555,23,1.308,24,0.784,27,0.742,28,0.013,29,1.292,36,0.254,37,0.742,38,0.108,39,0.021,40,4.509,45,3.678,51,4.033,52,4.806,69,1.081,70,1.998,71,1.578,72,1.93,73,2.381,74,1.512,79,0.879,80,1.512,81,1.365,82,1.512,83,1.365,84,1.854,85,1.011,86,1.512,87,1.365,88,1.712,89,1.512,90,1.365,91,1.461,92,1.512,93,1.365,94,1.512,95,1.365,96,2.311,97,1.998,98,1.319,99,1.512,100,1.365,101,1.512,102,1.365,103,1.365,104,1.512,105,1.512,106,1.365,107,1.512,108,1.319,109,1.512,110,1.365,111,1.194,112,1.998,113,1.365,114,1.365,115,1.365,116,1.512,117,1.365,118,1.512,119,2.078,120,1.512,121,1.319,122,1.512,123,1.365,124,1.512,125,1.365,126,1.512,127,0.009,128,0.009,207,4.708,211,5.163,212,6.551,325,4.332,1025,2.144,1252,4.333,1319,4.333,1445,6.208,1447,4.708,1470,5.21,1832,4.52,1833,5.973,1834,5.973,1835,4.52,1836,4.52,1837,5.973,1838,5.973,1839,5.973,1840,5.973,1841,5.973,1842,5.973,1843,4.52,1844,4.52]],["title/components/UiComponent.html",[0,0.555,121,1.188]],["body/components/UiComponent.html",[0,0.889,1,0.933,2,0.171,3,0.098,4,1.069,5,1.069,6,0.844,7,0.077,9,1.121,10,1.994,11,1.069,12,2.736,13,2.224,14,1.745,16,1.745,18,0.179,19,0.5,21,1.121,22,2.196,23,0.917,24,1.018,27,1.21,28,0.013,29,1.62,30,0.544,31,0.549,32,1.318,33,1.149,36,0.426,37,0.525,38,0.077,39,0.015,46,1.324,69,0.764,70,1.569,71,1.238,72,1.515,73,2.047,74,1.069,79,0.959,80,1.069,81,0.965,82,1.069,83,0.965,84,1.683,85,0.715,86,1.069,87,0.965,88,1.628,89,1.069,90,0.965,91,1.033,92,1.069,93,0.965,94,1.069,95,0.965,96,0.998,97,1.569,98,0.933,99,1.069,100,1.415,101,1.069,102,0.965,103,1.415,104,1.069,105,1.069,106,0.965,107,1.069,108,0.933,109,1.069,110,0.965,111,0.844,112,1.569,113,0.965,114,1.415,115,0.965,116,1.069,117,0.965,118,1.069,119,0.933,120,1.069,121,1.786,122,1.069,123,0.965,124,1.069,125,0.965,126,1.069,127,0.007,128,0.007,150,1.74,161,0.872,180,2.619,191,0.818,192,0.818,193,2.713,194,1.721,195,1.189,210,2.741,218,4.378,219,3.376,220,2.876,234,2.518,235,2.518,237,4.029,239,2.158,241,4.438,244,2.253,263,3.309,265,2.835,282,1.241,307,1.721,308,1.502,317,1.799,327,0.764,341,1.91,345,1.441,346,1.641,347,2.504,348,0.965,352,2.726,377,4.315,419,2.318,420,4.845,544,2.318,583,1.415,698,1.641,760,1.858,957,3.669,1083,3.708,1217,5.337,1219,2.787,1227,1.91,1289,3.696,1290,3.696,1307,2.518,1312,2.158,1478,3.876,1529,3.166,1665,2.787,1666,2.787,1667,2.518,1825,5.548,1845,3.195,1846,4.688,1847,4.688,1848,4.688,1849,4.688,1850,3.195,1851,5.941,1852,6.118,1853,6.118,1854,6.118,1855,5.554,1856,6.118,1857,4.845,1858,4.688,1859,3.195,1860,3.195,1861,3.195,1862,3.195,1863,4.688,1864,3.195,1865,4.688,1866,3.195,1867,3.195,1868,3.195,1869,3.195,1870,3.195,1871,3.195,1872,3.195,1873,2.787,1874,2.787,1875,3.195,1876,3.195,1877,3.195,1878,3.195,1879,3.195,1880,3.195,1881,3.195,1882,3.195,1883,5.554,1884,5.554,1885,4.688,1886,4.688,1887,4.688,1888,3.195,1889,3.195,1890,5.554,1891,4.688,1892,3.195,1893,2.787,1894,3.195,1895,3.195,1896,4.688,1897,3.195,1898,3.195,1899,3.195,1900,3.195,1901,3.195]],["title/modules/UiModule.html",[133,1.188,1902,2.953]],["body/modules/UiModule.html",[2,0.133,3,0.133,7,0.103,28,0.013,36,0.474,37,0.709,38,0.139,39,0.02,69,1.032,83,2.265,87,2.265,88,0.998,90,2.265,95,2.265,102,2.265,106,2.265,110,2.265,113,2.265,115,2.265,117,2.265,121,2.19,123,2.265,125,2.265,127,0.009,128,0.009,133,1.69,135,2.118,136,3.521,137,2.324,138,2.83,147,4.484,149,2.722,150,1.066,151,2.216,153,2.843,160,3.401,161,1.178,162,3.764,163,3.764,250,3.764,264,3.527,308,2.028,1000,3.764,1105,5.066,1351,3.28,1478,4.753,1502,3.764,1567,3.764,1614,3.764,1874,3.764,1902,6.224,1903,3.764,1904,3.764,1905,3.764,1906,3.764,1907,5.066,1908,4.314,1909,5.791,1910,5.791,1911,3.764,1912,3.764,1913,3.764,1914,3.764,1915,4.314,1916,4.314,1917,5.791,1918,4.314,1919,4.314,1920,4.314,1921,4.314,1922,4.314,1923,4.314,1924,4.314,1925,4.314,1926,4.314,1927,4.314,1928,4.314,1929,4.314,1930,4.314,1931,4.314,1932,4.314]],["title/modules/UiRoutingModule.html",[133,1.188,1907,2.749]],["body/modules/UiRoutingModule.html",[0,0.836,2,0.189,3,0.189,7,0.147,28,0.013,36,0.455,37,1.006,38,0.173,39,0.028,121,2.109,127,0.011,128,0.011,133,1.788,153,3.547,194,3.3,199,5.344,200,5.241,203,2.365,206,5.344,207,4.829,239,4.137,241,4.444,245,4.879,1667,4.829,1873,5.344,1907,4.879,1914,5.344,1933,5.344,1934,6.126]],["title/interfaces/UiState.html",[236,0.743,1935,3.208]],["body/interfaces/UiState.html",[2,0.154,3,0.154,7,0.12,18,0.282,19,0.682,28,0.013,31,0.486,36,0.416,38,0.202,84,1.87,88,1.16,127,0.01,128,0.01,161,1.37,215,1.514,236,1.352,327,1.942,346,2.577,513,2.858,583,2.487,727,2.262,760,2.138,1025,2.887,1083,3.283,1344,4.636,1346,4.636,1351,2.842,1355,3.954,1729,5.037,1730,4.376,1731,6.34,1732,6.402,1935,5.837,1936,4.376,1937,5.575,1938,7.033,1939,7.033,1940,5.016,1941,5.016,1942,5.016,1943,5.016,1944,4.376,1945,4.376,1946,6.135,1947,4.376,1948,5.165,1949,4.376,1950,4.376,1951,4.376,1952,4.376,1953,4.376,1954,4.376]],["title/components/WeatherComponent.html",[0,0.555,123,1.229]],["body/components/WeatherComponent.html",[0,0.967,1,0.953,2,0.147,3,0.1,4,1.092,5,1.092,6,0.862,7,0.078,9,1.139,10,2.018,11,1.092,12,2.743,13,2.193,14,1.772,16,1.772,18,0.183,19,0.508,21,1.139,22,2.543,23,0.931,24,1.061,27,1.29,28,0.013,29,1.748,30,0.555,31,0.552,32,1.137,33,0.991,34,1.413,36,0.408,37,0.536,38,0.078,39,0.015,48,2.649,62,4.079,69,0.78,70,1.593,71,1.258,72,1.539,73,2.068,74,1.092,79,0.967,80,1.092,81,0.985,82,1.092,83,0.985,84,1.694,85,1.065,86,1.092,87,0.985,88,1.639,89,1.092,90,0.985,91,1.055,92,1.092,93,0.985,94,1.092,95,0.985,96,1.019,97,1.593,98,0.953,99,1.092,100,0.985,101,1.092,102,0.985,103,0.985,104,1.092,105,1.092,106,0.985,107,1.092,108,0.953,109,1.092,110,0.985,111,0.862,112,1.593,113,0.985,114,1.438,115,0.985,116,1.092,117,0.985,118,1.092,119,0.953,120,1.092,121,0.953,122,1.092,123,1.866,124,1.092,125,0.985,126,1.092,127,0.007,128,0.007,161,0.891,191,0.828,192,0.828,213,3.482,215,2.072,217,3.369,219,2.963,220,2.643,221,3.478,222,3.478,223,3.478,228,2.643,229,1.39,230,2.338,233,1.413,252,2.446,263,3.331,265,2.341,266,3.329,267,3.274,268,3.694,282,1.306,289,1.676,290,1.676,291,1.676,292,1.676,293,1.676,296,1.676,304,1.951,305,2.573,307,1.758,308,1.534,309,4.164,310,2.847,314,1.215,315,1.676,317,1.736,318,1.676,319,4.154,322,1.676,323,1.676,327,1.139,337,4.978,341,1.951,345,1.472,346,1.676,347,2.535,348,0.985,352,2.76,367,4.432,379,4.872,384,2.573,385,4.978,558,1.534,966,1.534,1128,4.432,1312,2.204,1955,3.264,1956,4.762,1957,4.762,1958,6.18,1959,4.762,1960,6.18,1961,4.762,1962,5.622,1963,3.264,1964,4.762,1965,5.622,1966,4.762,1967,3.264,1968,4.762,1969,3.264,1970,3.264,1971,3.264,1972,3.264,1973,3.264,1974,4.762,1975,3.264,1976,3.264,1977,3.264,1978,3.264,1979,3.264,1980,2.847,1981,3.264,1982,3.264,1983,3.264,1984,4.762,1985,4.762,1986,3.264,1987,6.572,1988,3.264,1989,3.264,1990,4.762,1991,3.264,1992,3.264,1993,3.264,1994,3.264,1995,3.264,1996,3.264,1997,4.762]],["title/interfaces/WeatherConditions.html",[236,0.743,309,2.579]],["body/interfaces/WeatherConditions.html",[2,0.168,3,0.168,7,0.131,18,0.306,19,0.718,28,0.013,30,1.402,31,0.596,38,0.161,46,1.179,62,4.883,127,0.01,128,0.01,192,1.203,215,2.366,236,1.229,253,2.561,267,2.457,282,1.408,294,4.295,309,4.264,337,5.792,550,2.027,719,3.813,1330,4.295,1998,4.753,1999,6.013,2000,6.013,2001,6.013,2002,7.629,2003,4.753,2004,4.753,2005,4.753,2006,4.753,2007,6.371,2008,4.753,2009,4.753,2010,4.753,2011,4.753,2012,4.753,2013,4.753,2014,5.757,2015,5.872,2016,5.306,2017,5.872]],["title/modules/WeatherModule.html",[133,1.188,1395,2.749]],["body/modules/WeatherModule.html",[2,0.189,3,0.189,7,0.147,28,0.013,36,0.432,37,1.008,38,0.173,39,0.028,69,1.467,127,0.011,128,0.011,133,2.111,135,3.012,136,3.895,137,3.305,138,3.329,149,3.399,150,1.517,151,3.152,153,3.55,268,4.907,1395,5.543,2018,5.353,2019,5.353,2020,6.136,2021,6.136]],["title/injectables/WeatherService.html",[242,1.515,268,2.433]],["body/injectables/WeatherService.html",[2,0.114,3,0.114,7,0.089,13,1.12,18,0.208,19,0.557,21,1.248,23,0.726,24,1.016,27,1.271,28,0.013,29,1.418,30,1.176,31,0.559,33,1.065,34,1.607,36,0.429,37,0.609,38,0.089,39,0.017,46,1.745,48,2.988,79,1.055,85,0.83,127,0.008,128,0.008,138,2.261,150,1.62,174,1.545,191,1.172,192,1.172,193,2.876,195,1.381,215,1.979,242,2.248,253,3.368,267,3.702,268,3.121,282,0.654,309,5.005,313,1.381,314,1.943,317,1.985,324,2.454,327,1.567,336,1.432,348,1.12,506,2.004,544,2.692,549,1.906,558,2.454,632,1.822,635,1.999,663,1.906,664,2.692,666,2.955,675,2.955,682,2.812,727,1.673,745,1.822,746,3.367,747,1.999,761,2.102,834,2.261,984,4.554,990,3.237,993,4.115,1025,1.332,1211,3.237,1218,3.787,1231,3.918,1235,2.925,1484,4.761,1503,2.925,1546,4.554,1583,3.237,1625,6.25,1657,3.237,1980,3.237,2022,3.711,2023,7.741,2024,7.164,2025,5.221,2026,5.221,2027,5.221,2028,6.04,2029,6.554,2030,5.221,2031,5.221,2032,3.711,2033,6.554,2034,5.221,2035,5.221,2036,3.711,2037,3.711,2038,3.711,2039,3.711,2040,3.711,2041,3.711,2042,5.221,2043,3.711,2044,5.221,2045,5.221,2046,3.711,2047,3.711,2048,3.711,2049,5.221,2050,3.711,2051,4.554,2052,4.554,2053,5.221,2054,3.711,2055,5.221,2056,3.237,2057,3.711,2058,3.711,2059,3.711,2060,3.711,2061,3.711,2062,3.711,2063,3.711,2064,3.711,2065,3.711,2066,3.711,2067,3.711,2068,3.711,2069,3.711,2070,3.711,2071,5.221,2072,3.711,2073,3.711,2074,6.04,2075,3.711,2076,3.711,2077,3.711,2078,3.711,2079,3.711,2080,3.711,2081,3.711]],["title/components/WizardComponent.html",[0,0.555,125,1.229]],["body/components/WizardComponent.html",[0,0.924,1,1.027,2,0.155,3,0.108,4,1.177,5,1.177,6,0.929,7,0.084,9,1.202,10,2.106,11,1.177,12,2.765,13,2.188,14,1.871,16,1.871,18,0.407,19,0.537,21,1.202,22,2.297,23,0.983,24,0.951,27,1.051,28,0.013,29,1.523,30,0.856,31,0.486,32,0.712,36,0.424,37,0.578,38,0.084,39,0.016,44,1.518,46,1.385,48,1.358,69,0.841,70,1.682,71,1.328,72,1.625,73,2.141,74,1.177,79,0.942,80,1.177,81,1.062,82,1.177,83,1.062,84,1.871,85,1.312,86,1.177,87,1.062,88,1.714,89,1.177,90,1.062,91,1.896,92,1.177,93,1.062,94,1.177,95,1.062,96,1.099,97,1.682,98,1.027,99,1.177,100,1.062,101,1.177,102,1.062,103,1.062,104,1.177,105,1.177,106,1.062,107,1.177,108,1.027,109,1.177,110,1.062,111,1.549,112,1.682,113,1.062,114,1.771,115,1.062,116,1.177,117,1.062,118,1.177,119,1.027,120,1.177,121,1.027,122,1.177,123,1.062,124,1.177,125,1.932,126,1.177,127,0.008,128,0.008,180,1.309,191,0.74,192,0.74,194,1.895,210,1.309,215,1.518,233,1.523,253,2.363,260,3.825,261,2.773,262,5.549,264,3.008,269,3.395,275,2.267,297,2.552,300,4.624,301,2.552,302,1.895,303,1.993,309,2.229,313,1.309,314,1.309,317,1.69,324,2.363,327,1.403,337,2.552,345,1.586,347,2.645,352,2.88,377,3.185,419,2.552,467,1.523,482,2.103,499,2.773,513,2.47,558,3.484,675,1.586,727,2.267,929,1.727,950,1.727,966,1.654,1089,4.332,1223,2.773,1227,2.103,1239,4.054,1253,2.773,1289,3.962,1290,3.962,1307,2.773,1312,2.376,1319,2.552,1478,4.054,1825,5.044,1851,6.322,1857,5.117,1893,3.069,1999,2.773,2000,2.773,2001,2.773,2082,3.518,2083,5.027,2084,5.027,2085,6.141,2086,6.399,2087,5.027,2088,3.518,2089,3.518,2090,3.518,2091,5.027,2092,6.399,2093,3.518,2094,5.582,2095,5.027,2096,5.582,2097,5.027,2098,3.518,2099,3.518,2100,5.866,2101,3.518,2102,3.518,2103,3.518,2104,3.518,2105,4.385,2106,3.518,2107,3.518,2108,3.518,2109,3.518,2110,7.411,2111,5.866,2112,6.769,2113,5.866,2114,3.518,2115,5.866,2116,5.866,2117,3.518,2118,3.518,2119,3.518,2120,3.518,2121,3.518,2122,3.518,2123,3.518,2124,3.518,2125,3.518,2126,3.518,2127,3.518,2128,3.518,2129,3.518,2130,3.518,2131,3.518,2132,3.518]],["title/injectables/WizardService.html",[242,1.515,264,1.913]],["body/injectables/WizardService.html",[2,0.132,3,0.132,7,0.103,18,0.451,19,0.615,21,1.377,23,0.837,24,1.045,27,1.256,28,0.013,29,1.771,30,1.341,31,0.622,36,0.42,37,0.703,38,0.103,39,0.02,46,1.619,79,1.07,88,0.99,114,1.292,127,0.009,128,0.009,150,1.721,161,1.169,180,1.593,191,1.07,192,1.07,210,1.593,242,2.422,263,3.519,264,2.708,282,1.32,307,2.306,308,2.012,506,2.094,513,2.223,516,2.559,558,2.012,583,2.26,584,6.672,586,3.675,664,3.105,760,1.927,1071,3.263,1077,2.712,1079,2.559,1085,2.712,1087,3.649,1088,3.649,1089,4.344,1090,2.712,1218,3.105,1227,2.559,1529,3.89,1948,4.907,2085,6.339,2096,6.074,2133,4.28,2134,5.76,2135,5.76,2136,6.963,2137,6.963,2138,5.76,2139,5.76,2140,5.76,2141,4.28,2142,5.76,2143,4.28,2144,5.76,2145,4.28,2146,4.28,2147,4.28,2148,4.28,2149,5.76,2150,4.28,2151,4.28,2152,4.28,2153,4.28,2154,4.28,2155,4.28,2156,4.28]],["title/interfaces/WizardState.html",[236,0.743,1948,2.749]],["body/interfaces/WizardState.html",[2,0.143,3,0.143,7,0.111,18,0.381,19,0.649,27,1.258,28,0.013,30,1.224,31,0.546,32,0.939,36,0.381,38,0.187,84,1.621,88,1.074,127,0.009,128,0.009,138,2.632,189,2.384,210,2.522,215,1.401,229,1.355,236,1.11,244,2.03,282,1.396,324,2.857,327,1.785,345,2.093,346,3.934,347,3.365,348,1.401,513,3.218,558,3.6,583,2.517,760,2.648,1077,2.941,1078,2.093,1079,2.775,1083,4.066,1085,2.941,1087,2.941,1088,2.941,1090,2.941,1091,3.851,1346,4.409,1347,4.049,1348,4.049,1351,2.629,1354,4.049,1948,5.561,2157,3.659,2158,4.642,2159,4.049,2160,4.049,2161,6.078,2162,6.078,2163,6.078,2164,6.078,2165,6.078,2166,4.642,2167,4.049,2168,4.049,2169,4.049,2170,4.049,2171,4.049,2172,4.049,2173,4.049,2174,4.049]],["title/dependencies.html",[135,2.405,2175,3.393]],["body/dependencies.html",[28,0.013,37,0.917,43,4.051,127,0.01,128,0.01,135,2.742,156,5.387,157,4.958,161,1.525,194,3.009,195,2.078,302,3.009,406,4.872,1187,4.872,1188,4.872,1227,3.338,1655,4.872,1661,4.872,1662,4.872,1911,4.872,1912,4.872,1913,4.872,2176,5.585,2177,8.273,2178,5.585,2179,5.585,2180,5.585,2181,6.834,2182,5.585,2183,5.585,2184,5.585,2185,5.585,2186,5.585,2187,7.694,2188,5.585,2189,5.585,2190,5.585,2191,5.585,2192,5.585,2193,5.585,2194,5.585,2195,5.585,2196,5.585,2197,5.585,2198,5.585,2199,5.585,2200,5.585,2201,5.585,2202,5.585,2203,5.585,2204,5.585,2205,5.585,2206,5.585,2207,5.585,2208,4.872,2209,5.585,2210,6.834,2211,5.585,2212,5.585,2213,5.585,2214,5.585,2215,5.585,2216,5.585,2217,5.585,2218,5.585,2219,5.585,2220,5.585,2221,5.585]],["title/miscellaneous/enumerations.html",[2222,1.922,2223,4.273]],["body/miscellaneous/enumerations.html",[18,0.3,28,0.01,33,1.517,44,2.433,84,1.9,85,1.696,127,0.01,128,0.01,150,1.964,229,2.115,294,5.245,349,4.216,498,4.666,508,5.245,510,5.805,511,5.805,512,3.978,513,3.009,514,3.978,547,4.216,553,2.881,690,3.03,696,3.584,698,3.418,760,1.789,769,3.584,1025,2.721,1071,3.03,1072,3.389,1078,3.266,1079,3.978,1080,3.197,1081,3.197,1082,3.197,1083,2.747,1084,3.612,1280,3.88,1281,4.216,1285,5.245,1330,4.216,1430,3.197,1431,3.389,1434,3.197,1435,3.197,1436,3.03,1998,4.666,2003,4.666,2004,4.666,2005,4.666,2006,4.666,2007,6.319,2008,4.666,2009,4.666,2010,4.666,2011,4.666,2012,4.666,2013,4.666,2014,5.71,2015,5.805,2016,5.245,2017,5.805,2222,3.03,2223,4.666,2224,5.349,2225,4.666,2226,5.349,2227,4.666,2228,5.349,2229,4.666]],["title/miscellaneous/functions.html",[189,2.516,2222,1.922]],["body/miscellaneous/functions.html",[18,0.306,28,0.013,33,1.188,44,1.647,48,2.6,79,1.204,84,1.305,127,0.01,128,0.01,173,6.376,189,2.803,191,1.204,192,1.204,215,2.034,229,2.331,408,4.887,538,3.958,583,2.207,662,2.679,663,3.461,845,4.511,969,4.301,983,4.76,985,5.877,986,4.76,987,3.685,988,4.76,992,4.76,993,4.301,994,4.76,1025,1.959,1078,3.295,1218,3.958,1345,4.301,1351,4.14,1352,4.76,1690,5.877,1691,5.31,2105,6.376,2157,4.301,2160,4.76,2222,3.091,2230,6.967,2231,6.737,2232,6.737,2233,4.76,2234,5.456,2235,6.737,2236,4.76,2237,6.737,2238,4.76,2239,5.456,2240,5.456,2241,5.456,2242,5.456,2243,6.737,2244,5.456,2245,4.76,2246,5.456]],["title/index.html",[18,0.191,512,2.028,666,1.53]],["body/index.html",[7,0.178,28,0.011,40,4.709,41,4.468,42,2.871,43,4.112,44,2.082,45,2.556,46,1.492,47,4.468,48,2.188,51,3.828,53,5.436,54,6.016,55,4.945,56,4.945,57,4.945,58,2.912,59,4.945,63,4.945,64,3.542,66,4.945,68,7.117,72,1.832,96,1.77,127,0.011,128,0.011,182,4.468,189,3.542,324,3.636,478,4.468,541,4.945,776,3.907,929,2.783,1025,2.475,1107,4.468,1241,4.945,1252,5.75,1543,6.914,2052,4.945,2247,5.668,2248,5.668,2249,8.341,2250,5.668,2251,7.433,2252,6.896,2253,5.668,2254,5.668,2255,5.668,2256,6.896,2257,5.668,2258,5.668,2259,5.668,2260,5.668,2261,5.668,2262,5.668,2263,6.896,2264,5.668,2265,5.668,2266,5.668,2267,5.668,2268,5.668]],["title/license.html",[52,2.291,512,2.028,666,1.53]],["body/license.html",[7,0.138,28,0.011,45,3.138,51,3.886,52,3.886,64,2.956,75,5.897,76,4.536,77,4.536,127,0.011,128,0.011,138,2.492,151,2.956,229,1.68,253,2.705,474,5.02,731,3.26,774,3.26,827,3.26,1039,5.049,1446,6.071,1463,4.536,1492,5.02,1497,5.02,1604,6.071,2051,5.02,2094,5.02,2269,5.754,2270,5.754,2271,5.754,2272,5.754,2273,5.754,2274,7.773,2275,8.313,2276,6.959,2277,7.482,2278,5.754,2279,7.482,2280,5.754,2281,5.754,2282,5.754,2283,5.754,2284,5.754,2285,5.754,2286,5.754,2287,5.754,2288,5.754,2289,5.754,2290,5.754,2291,6.959,2292,6.959,2293,5.754,2294,5.754,2295,6.959,2296,5.754,2297,5.754,2298,5.754,2299,5.754,2300,5.754,2301,5.754,2302,5.754,2303,5.754,2304,5.754,2305,5.754,2306,5.754,2307,5.754,2308,5.754,2309,5.754,2310,5.754,2311,5.754,2312,5.754]],["title/modules.html",[133,1.625]],["body/modules.html",[28,0.011,127,0.011,128,0.011,133,1.788,134,4.444,143,4.137,144,4.137,145,4.137,146,4.137,147,3.662,148,4.137,157,6.055,834,3.327,1359,3.881,1395,4.137,1545,6.703,1612,7.281,1902,4.444,1907,4.137,2313,8.347,2314,8.466]],["title/overview.html",[2315,4.856]],["body/overview.html",[0,0.586,1,1.904,28,0.013,38,0.103,39,0.02,69,1.027,81,2.311,83,1.969,87,1.969,90,1.969,93,2.311,95,1.969,98,1.904,100,2.311,102,1.969,103,2.311,106,1.969,108,1.904,110,1.969,113,1.969,115,1.969,117,1.969,119,1.904,121,1.904,123,1.969,125,1.969,127,0.009,128,0.009,133,1.685,134,6.129,135,2.108,136,2.314,137,2.314,138,1.86,139,3.746,140,3.746,141,3.746,142,3.746,143,4.404,144,4.913,145,4.913,146,5.169,147,4.938,148,5.169,149,2.714,150,1.062,151,2.206,236,0.784,242,1.598,264,3.066,266,3.513,268,3.898,270,4.131,386,4.131,497,3.898,607,3.746,608,3.746,752,2.314,1105,4.404,1229,3.746,1230,3.746,1231,3.898,1359,4.85,1392,3.746,1393,3.746,1394,3.746,1395,4.913,1478,4.131,1647,3.746,1648,3.746,1649,3.746,1650,3.746,1721,3.746,1722,3.746,1902,6.214,1903,3.746,1904,3.746,1905,3.746,1906,3.746,1907,4.404,2018,3.746,2019,3.746,2315,3.746,2316,4.295,2317,4.295,2318,4.295,2319,4.295]],["title/miscellaneous/typealiases.html",[2222,1.922,2320,4.898]],["body/miscellaneous/typealiases.html",[18,0.348,28,0.013,30,1.055,31,0.471,127,0.011,128,0.011,150,1.908,282,1.092,969,4.884,978,6.735,1071,3.51,1072,3.925,1080,3.704,1081,3.704,1082,3.704,1091,4.891,1280,4.495,1281,4.884,1287,6.085,1430,3.704,1431,3.925,1434,3.704,1435,3.704,1439,5.213,2222,3.51,2225,5.405,2227,5.405,2229,5.405,2230,5.405,2321,6.196]],["title/miscellaneous/variables.html",[2222,1.922,2322,4.273]],["body/miscellaneous/variables.html",[18,0.126,28,0.013,30,0.865,31,0.623,32,1.656,33,1.443,38,0.159,42,2.463,44,2.099,46,0.773,48,2.143,58,1.151,60,1.1,69,0.854,84,0.854,114,0.676,127,0.005,128,0.005,147,2.662,149,1.053,180,2.633,189,2.288,191,0.33,200,1.625,203,1.719,210,2.471,236,0.409,244,1.434,267,1.61,281,1.753,282,1.043,313,1.657,336,0.865,346,2.61,348,1.786,362,1.954,363,3.115,409,3.885,410,3.885,411,3.885,419,2.591,439,1.766,447,1.954,451,1.954,456,1.282,462,1.954,463,3.115,467,1.546,471,1.954,477,3.115,480,1.766,482,1.339,500,2.815,502,1.766,513,2.843,538,1.625,553,2.99,558,2.389,583,2.318,597,2.263,612,1.679,631,2.851,632,1.1,662,1.1,670,2.263,691,1.207,696,1.207,698,1.151,727,1.01,735,1.924,737,2.288,745,2.495,746,1.151,747,1.207,751,1.269,752,1.924,760,1.857,765,1.269,766,1.753,767,3.577,789,1.207,864,1.835,919,1.835,948,1.269,949,1.269,950,1.1,954,1.269,956,2.023,966,1.679,987,1.513,1025,2.495,1039,2.591,1083,2.851,1103,3.007,1121,4.892,1125,2.815,1189,3.885,1202,3.115,1204,3.115,1206,1.954,1207,1.954,1208,1.954,1235,2.815,1239,1.419,1279,1.766,1308,3.885,1312,1.513,1344,4.502,1345,1.766,1350,3.885,1351,3.351,1355,2.815,1358,3.885,1359,3.219,1360,1.954,1361,1.954,1362,1.954,1363,1.954,1365,1.954,1366,1.954,1367,1.954,1368,1.954,1369,1.954,1370,1.954,1371,1.954,1372,1.954,1373,1.954,1374,1.954,1375,1.954,1376,1.954,1377,1.954,1436,3.144,1459,1.954,1587,1.954,1645,1.954,1646,1.954,1651,1.954,1654,1.954,1656,1.954,1658,1.954,1659,1.954,1660,1.954,1726,5.577,1727,1.954,1729,4.005,1731,5.479,1732,6.236,1734,1.954,1735,4.433,1736,1.954,1737,3.115,1738,1.954,1739,1.954,1740,1.954,1780,1.954,1933,1.954,1935,2.815,1936,1.954,1937,3.115,1944,1.954,1945,1.954,1946,4.842,1947,1.954,1948,4.851,1949,1.954,1950,1.954,1951,1.954,1952,1.954,1953,1.954,1954,1.954,1999,1.766,2000,1.766,2001,4.662,2014,1.766,2016,1.766,2056,5.16,2157,1.766,2159,3.885,2167,3.885,2168,1.954,2169,3.885,2170,1.954,2171,3.885,2172,1.954,2173,3.885,2174,1.954,2208,3.115,2222,1.269,2233,3.115,2236,4.433,2238,4.842,2245,1.954,2322,1.954,2323,4.454,2324,5.915,2325,7.364,2326,2.24,2327,2.24,2328,2.24,2329,4.454,2330,4.454,2331,4.454,2332,2.24,2333,4.454,2334,2.24,2335,2.24,2336,2.24,2337,3.571,2338,2.24,2339,7.075,2340,3.571,2341,3.571,2342,3.571,2343,3.571,2344,3.571,2345,4.454,2346,3.571,2347,3.571,2348,2.24,2349,2.24,2350,2.24,2351,3.571,2352,2.24,2353,2.24,2354,2.24,2355,4.454,2356,4.454,2357,4.454,2358,3.571,2359,5.081,2360,2.24,2361,4.454,2362,2.24,2363,2.24,2364,3.571,2365,3.571,2366,2.24,2367,2.24,2368,2.24,2369,2.24,2370,2.24,2371,2.24,2372,3.571,2373,2.24,2374,2.24,2375,2.24,2376,2.24,2377,2.24,2378,5.081,2379,2.24,2380,3.571,2381,2.24,2382,5.081,2383,2.24,2384,2.24,2385,2.24,2386,2.24,2387,2.24,2388,2.24,2389,2.24,2390,2.24,2391,2.24,2392,2.24,2393,2.24,2394,2.24,2395,2.24,2396,2.24,2397,2.24,2398,2.24,2399,2.24,2400,2.24,2401,2.24,2402,2.24,2403,2.24,2404,3.571,2405,2.24,2406,2.24,2407,2.24,2408,2.24,2409,2.24,2410,2.24,2411,2.24,2412,2.24,2413,2.24,2414,2.24,2415,2.24,2416,4.454,2417,2.24,2418,3.571,2419,2.24,2420,2.24,2421,2.24,2422,2.24,2423,2.24,2424,2.24,2425,2.24,2426,3.571,2427,2.24,2428,2.24,2429,2.24,2430,2.24,2431,2.24,2432,2.24,2433,2.24,2434,2.24,2435,2.24,2436,2.24,2437,3.571,2438,2.24,2439,2.24,2440,2.24,2441,2.24,2442,2.24,2443,2.24,2444,2.24,2445,2.24,2446,2.24]]],"invertedIndex":[["",{"_index":28,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"interfaces/SimulationState.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":348,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"components/SimulationComponent.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["0.0.3",{"_index":2204,"title":{},"body":{"dependencies.html":{}}}],["0.009",{"_index":2423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.25",{"_index":2439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.3",{"_index":1203,"title":{},"body":{"components/HomeComponent.html":{}}}],["0.404",{"_index":2424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.5",{"_index":1210,"title":{},"body":{"components/HomeComponent.html":{}}}],["0.5.7",{"_index":2209,"title":{},"body":{"dependencies.html":{}}}],["0.75",{"_index":2441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.8.26",{"_index":2221,"title":{},"body":{"dependencies.html":{}}}],["0.91",{"_index":2422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["00",{"_index":997,"title":{},"body":{"classes/EnumValues.html":{}}}],["004ba0",{"_index":2413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["01d",{"_index":2428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["02d",{"_index":2429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["03d",{"_index":2430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["04d",{"_index":2431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["09d",{"_index":2432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0m",{"_index":2376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":336,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"components/SimulationComponent.html":{},"classes/Statistics.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["1.1.0",{"_index":2202,"title":{},"body":{"dependencies.html":{}}}],["1.455",{"_index":2425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10",{"_index":752,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":956,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["1000",{"_index":984,"title":{},"body":{"classes/EnumValues.html":{},"injectables/WeatherService.html":{}}}],["1000)).slice",{"_index":998,"title":{},"body":{"classes/EnumValues.html":{}}}],["10000",{"_index":2416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10d",{"_index":2433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11",{"_index":2316,"title":{},"body":{"overview.html":{}}}],["11d",{"_index":2434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.476358",{"_index":2389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13",{"_index":1451,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["13d",{"_index":2435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16",{"_index":1336,"title":{},"body":{"components/MapComponent.html":{}}}],["17",{"_index":2319,"title":{},"body":{"overview.html":{}}}],["18",{"_index":1311,"title":{},"body":{"components/MapComponent.html":{}}}],["196/2003",{"_index":1454,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["1976d2",{"_index":2414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1]).patchvalu",{"_index":1062,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["1].destin",{"_index":1042,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["1].edg",{"_index":936,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["2",{"_index":467,"title":{},"body":{"components/ChartsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["2.0.8",{"_index":2213,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":2214,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":2211,"title":{},"body":{"dependencies.html":{}}}],["2.5.7",{"_index":2218,"title":{},"body":{"dependencies.html":{}}}],["2.7.2",{"_index":2205,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":2404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2016/679",{"_index":1457,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["2018",{"_index":2270,"title":{},"body":{"license.html":{}}}],["21",{"_index":2317,"title":{},"body":{"overview.html":{}}}],["23",{"_index":2318,"title":{},"body":{"overview.html":{}}}],["24",{"_index":1645,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{},"miscellaneous/variables.html":{}}}],["250px",{"_index":1899,"title":{},"body":{"components/UiComponent.html":{}}}],["3",{"_index":966,"title":{},"body":{"classes/Edge.html":{},"classes/EnumValues.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["3.6",{"_index":809,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["30",{"_index":2393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":1312,"title":{},"body":{"components/MapComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["40",{"_index":2353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["41.910943",{"_index":2388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":419,"title":{},"body":{"components/ChartsComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["5.1.5",{"_index":2196,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":808,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["500",{"_index":2442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5000",{"_index":1895,"title":{},"body":{"components/UiComponent.html":{}}}],["50d",{"_index":2436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.0.0",{"_index":2183,"title":{},"body":{"dependencies.html":{}}}],["6.0.1",{"_index":2187,"title":{},"body":{"dependencies.html":{}}}],["6.0.15",{"_index":2200,"title":{},"body":{"dependencies.html":{}}}],["6.0.2",{"_index":2198,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":2185,"title":{},"body":{"dependencies.html":{}}}],["6.1.1",{"_index":2177,"title":{},"body":{"dependencies.html":{}}}],["6.1.2",{"_index":2191,"title":{},"body":{"dependencies.html":{}}}],["6.1.4",{"_index":2189,"title":{},"body":{"dependencies.html":{}}}],["6.2.2",{"_index":2219,"title":{},"body":{"dependencies.html":{}}}],["6.4.3",{"_index":2181,"title":{},"body":{"dependencies.html":{}}}],["6.5.2",{"_index":2216,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":990,"title":{},"body":{"classes/EnumValues.html":{},"injectables/WeatherService.html":{}}}],["60)).slice",{"_index":991,"title":{},"body":{"classes/EnumValues.html":{}}}],["63a4ff",{"_index":2351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["666",{"_index":465,"title":{},"body":{"components/ChartsComponent.html":{}}}],["70",{"_index":1208,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["76d219",{"_index":2398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["840",{"_index":1212,"title":{},"body":{"components/HomeComponent.html":{}}}],["9",{"_index":2116,"title":{},"body":{"components/WizardComponent.html":{}}}],["about'},{'nam",{"_index":80,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["about.component.html",{"_index":17,"title":{},"body":{"components/AboutComponent.html":{}}}],["about.component.scss",{"_index":15,"title":{},"body":{"components/AboutComponent.html":{}}}],["about/about.compon",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["aboutcompon",{"_index":1,"title":{"components/AboutComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["abov",{"_index":2290,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":216,"title":{},"body":{"classes/BaseComponent.html":{}}}],["abstractcontrol",{"_index":279,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["accept",{"_index":1838,"title":{},"body":{"components/TermsComponent.html":{}}}],["accessor",{"_index":297,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WizardComponent.html":{}}}],["account",{"_index":726,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["acquir",{"_index":1464,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["action",{"_index":229,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"components/NumericComponent.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/WeatherComponent.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["action.payload",{"_index":2165,"title":{},"body":{"interfaces/WizardState.html":{}}}],["action.payload.map",{"_index":1356,"title":{},"body":{"interfaces/MapState.html":{}}}],["action.payload.nextindex",{"_index":2166,"title":{},"body":{"interfaces/WizardState.html":{}}}],["action.payload.step",{"_index":2163,"title":{},"body":{"interfaces/WizardState.html":{}}}],["action.typ",{"_index":1354,"title":{},"body":{"interfaces/MapState.html":{},"interfaces/WizardState.html":{}}}],["actionreducermap",{"_index":1729,"title":{},"body":{"interfaces/SimulationState.html":{},"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["actions/map.act",{"_index":1349,"title":{},"body":{"interfaces/MapState.html":{}}}],["actions/wizard.act",{"_index":2158,"title":{},"body":{"interfaces/WizardState.html":{}}}],["actual_compon",{"_index":126,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["add",{"_index":1048,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/HomeComponent.html":{}}}],["adddestin",{"_index":1004,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["adddestination(control",{"_index":1011,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["addedge(edg",{"_index":861,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["addorigin",{"_index":1005,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["addorigin(control",{"_index":1013,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["addorupdatenode(nod",{"_index":848,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["address",{"_index":1253,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{},"components/WizardComponent.html":{}}}],["addweathercondit",{"_index":2026,"title":{},"body":{"injectables/WeatherService.html":{}}}],["addweatherconditions(data",{"_index":2036,"title":{},"body":{"injectables/WeatherService.html":{}}}],["adjust",{"_index":747,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["adjustmentfactorcoeffici",{"_index":2421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["administr",{"_index":2379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["afterdatasetsdraw",{"_index":2350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["afterviewinit",{"_index":367,"title":{},"body":{"components/ChartsComponent.html":{},"components/HomeComponent.html":{},"components/WeatherComponent.html":{}}}],["again",{"_index":1533,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["algorithm",{"_index":896,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["alias",{"_index":2321,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alreadi",{"_index":1056,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["altern",{"_index":927,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["analysi",{"_index":2418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["and/or",{"_index":2285,"title":{},"body":{"license.html":{}}}],["angular",{"_index":66,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["angular/anim",{"_index":2176,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2182,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/stepp",{"_index":2103,"title":{},"body":{"components/WizardComponent.html":{}}}],["angular/cli",{"_index":2253,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":1655,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":1657,"title":{},"body":{"modules/SharedModule.html":{},"injectables/WeatherService.html":{}}}],["angular/compil",{"_index":2178,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":37,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"modules/MaterialModule.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":1661,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/form",{"_index":302,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WizardComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":2179,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":1227,"title":{},"body":{"components/InfoDialogComponent.html":{},"modules/MaterialModule.html":{},"components/MessageArchivedComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":194,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"modules/SharedModule.html":{},"components/UiComponent.html":{},"modules/UiRoutingModule.html":{},"components/WizardComponent.html":{},"dependencies.html":{}}}],["anim",{"_index":1187,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{}}}],["animate('500m",{"_index":2375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animationtriggermetadata",{"_index":2372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["anime.timelin",{"_index":1199,"title":{},"body":{"components/HomeComponent.html":{}}}],["animej",{"_index":1188,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{}}}],["annot",{"_index":2208,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["anoth",{"_index":1536,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["api",{"_index":1252,"title":{},"body":{"injectables/LocationService.html":{},"components/PrivacyComponent.html":{},"components/TermsComponent.html":{},"index.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{}}}],["app.compon",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":131,"title":{},"body":{"components/AppComponent.html":{}}}],["app_initi",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":81,"title":{"components/AppComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["appconfig",{"_index":1980,"title":{},"body":{"components/WeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["appconfig.apis.openweathermap.apikey",{"_index":2064,"title":{},"body":{"injectables/WeatherService.html":{}}}],["appconfig.apis.openweathermap.forecasturl",{"_index":2057,"title":{},"body":{"injectables/WeatherService.html":{}}}],["appconfig.apis.openweathermap.iconurl",{"_index":1995,"title":{},"body":{"components/WeatherComponent.html":{}}}],["appconfig.apis.openweathermap.weatherurl",{"_index":2058,"title":{},"body":{"injectables/WeatherService.html":{}}}],["appconfig.firebase.projectid",{"_index":2359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appli",{"_index":1124,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["applic",{"_index":1447,"title":{},"body":{"components/PrivacyComponent.html":{},"injectables/SchedulerService.html":{},"components/TermsComponent.html":{}}}],["appmodul",{"_index":134,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppreloadingstrategi",{"_index":181,"title":{"classes/AppPreloadingStrategy.html":{}},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{}}}],["approutingmodul",{"_index":143,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["archived.compon",{"_index":1665,"title":{},"body":{"modules/SharedModule.html":{},"components/UiComponent.html":{}}}],["archived.component.t",{"_index":1385,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["archived.component.ts:11",{"_index":1388,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["archived.component.ts:13",{"_index":1389,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["area",{"_index":1239,"title":{},"body":{"injectables/LocationService.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["area'},{'nam",{"_index":112,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["area.compon",{"_index":1917,"title":{},"body":{"modules/UiModule.html":{}}}],["area.component.html",{"_index":1570,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.scss",{"_index":1569,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.t",{"_index":1568,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:16",{"_index":1572,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:18",{"_index":1571,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:21",{"_index":1616,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:23",{"_index":1617,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:27",{"_index":1574,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:28",{"_index":1623,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:33",{"_index":1579,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:35",{"_index":1627,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:42",{"_index":1575,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:43",{"_index":1615,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:46",{"_index":1578,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:50",{"_index":1577,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:53",{"_index":1618,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:59",{"_index":1621,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:73",{"_index":1619,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:78",{"_index":1573,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:81",{"_index":1620,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area/search",{"_index":1567,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"modules/UiModule.html":{}}}],["area/select",{"_index":1614,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{},"modules/UiModule.html":{}}}],["areamaxlimit",{"_index":2392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["areaminlimit",{"_index":2394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["argmin",{"_index":615,"title":{},"body":{"injectables/DemandService.html":{}}}],["argmin(linkflow",{"_index":626,"title":{},"body":{"injectables/DemandService.html":{}}}],["argument",{"_index":630,"title":{},"body":{"injectables/DemandService.html":{}}}],["aris",{"_index":2312,"title":{},"body":{"license.html":{}}}],["array",{"_index":651,"title":{},"body":{"injectables/DemandService.html":{}}}],["array(this.odmatrix.length).fill(0",{"_index":672,"title":{},"body":{"injectables/DemandService.html":{}}}],["arriv",{"_index":1717,"title":{},"body":{"components/SimulationComponent.html":{}}}],["arrivedvehicl",{"_index":598,"title":{},"body":{"interfaces/Counts.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{}}}],["art",{"_index":1450,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["assign",{"_index":633,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{}}}],["assignmentmatrix",{"_index":646,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["assignmentmatrix[z",{"_index":678,"title":{},"body":{"injectables/DemandService.html":{}}}],["associ",{"_index":1497,"title":{},"body":{"injectables/SchedulerService.html":{},"license.html":{}}}],["attach",{"_index":775,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["attribut",{"_index":771,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["author",{"_index":2302,"title":{},"body":{"license.html":{}}}],["avail",{"_index":1545,"title":{},"body":{"injectables/SchedulerService.html":{},"modules.html":{}}}],["avg",{"_index":604,"title":{},"body":{"interfaces/Counts.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{}}}],["avgspe",{"_index":606,"title":{},"body":{"interfaces/Counts.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{},"components/SimulationComponent.html":{}}}],["axi",{"_index":463,"title":{},"body":{"components/ChartsComponent.html":{},"miscellaneous/variables.html":{}}}],["b",{"_index":962,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["babdb",{"_index":2396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bachelor'",{"_index":56,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["bachelor\\'",{"_index":78,"title":{},"body":{"components/AboutComponent.html":{}}}],["backgroundcolor",{"_index":468,"title":{},"body":{"components/ChartsComponent.html":{}}}],["bar",{"_index":1386,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["bar'},{'nam",{"_index":105,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["base",{"_index":682,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{}}}],["basecolor",{"_index":2395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basecompon",{"_index":213,"title":{"classes/BaseComponent.html":{}},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["basecomponent:11",{"_index":290,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["basecomponent:13",{"_index":289,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["basecomponent:22",{"_index":293,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["basecomponent:27",{"_index":291,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["basecomponent:32",{"_index":292,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["basecomponent:9",{"_index":296,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["basictimelin",{"_index":1198,"title":{},"body":{"components/HomeComponent.html":{}}}],["becom",{"_index":1540,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["befor",{"_index":916,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["beginatzero",{"_index":2346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["belong",{"_index":655,"title":{},"body":{"injectables/DemandService.html":{}}}],["beta.17",{"_index":2184,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":691,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["bf",{"_index":912,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["blur",{"_index":2121,"title":{},"body":{"components/WizardComponent.html":{}}}],["boolean",{"_index":244,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["bordercolor",{"_index":441,"title":{},"body":{"components/ChartsComponent.html":{}}}],["borderwidth",{"_index":466,"title":{},"body":{"components/ChartsComponent.html":{}}}],["bound",{"_index":1319,"title":{},"body":{"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/TermsComponent.html":{},"components/WizardComponent.html":{}}}],["breadth",{"_index":910,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["break",{"_index":352,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["broken",{"_index":2011,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["brokencloud",{"_index":2010,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["brows",{"_index":2314,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1317,"title":{},"body":{"components/MapComponent.html":{}}}],["buildodpair",{"_index":256,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["buildodpair(odpair",{"_index":274,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["built",{"_index":65,"title":{},"body":{"components/AboutComponent.html":{}}}],["busiest",{"_index":455,"title":{},"body":{"components/ChartsComponent.html":{}}}],["busiestchart",{"_index":371,"title":{},"body":{"components/ChartsComponent.html":{}}}],["busiestchartopt",{"_index":410,"title":{},"body":{"components/ChartsComponent.html":{},"miscellaneous/variables.html":{}}}],["busiestcolor",{"_index":411,"title":{},"body":{"components/ChartsComponent.html":{},"miscellaneous/variables.html":{}}}],["busiestctx",{"_index":372,"title":{},"body":{"components/ChartsComponent.html":{}}}],["c",{"_index":2269,"title":{},"body":{"license.html":{}}}],["calc",{"_index":1494,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["calcassignmentmatrix(odpair",{"_index":892,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["calcincidencematrix",{"_index":884,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["calclinkflow",{"_index":706,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["calcmaxflow",{"_index":707,"title":{},"body":{"classes/Edge.html":{}}}],["calcmaxflow(factor",{"_index":743,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["calcodmatrix",{"_index":616,"title":{},"body":{"injectables/DemandService.html":{}}}],["calcpathcosts(odpair",{"_index":968,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["calcshortestpath",{"_index":1560,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["calcshortestpaths(odpair",{"_index":880,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["calcshortestpathsprobabilities(odpair",{"_index":951,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["calcul",{"_index":635,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{}}}],["calendar_today",{"_index":1641,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["call",{"_index":2044,"title":{},"body":{"injectables/WeatherService.html":{}}}],["cancomponentdeactiv",{"_index":237,"title":{"interfaces/CanComponentDeactivate.html":{}},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/UiComponent.html":{}}}],["candeactiv",{"_index":241,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/UiComponent.html":{},"modules/UiRoutingModule.html":{}}}],["candeactivate(compon",{"_index":246,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{}}}],["candeactivateguard",{"_index":245,"title":{"injectables/CanDeactivateGuard.html":{}},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"modules/SharedModule.html":{},"modules/UiRoutingModule.html":{}}}],["cannnot",{"_index":1535,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["capac",{"_index":477,"title":{},"body":{"components/ChartsComponent.html":{},"miscellaneous/variables.html":{}}}],["case",{"_index":347,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{}}}],["catch((error",{"_index":1589,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["catcherror",{"_index":2054,"title":{},"body":{"injectables/WeatherService.html":{}}}],["catcherror((error",{"_index":2068,"title":{},"body":{"injectables/WeatherService.html":{}}}],["categori",{"_index":1459,"title":{},"body":{"components/PrivacyComponent.html":{},"miscellaneous/variables.html":{}}}],["cd",{"_index":2265,"title":{},"body":{"index.html":{}}}],["cdr",{"_index":1855,"title":{},"body":{"components/UiComponent.html":{}}}],["center",{"_index":482,"title":{},"body":{"components/ChartsComponent.html":{},"components/GoogleMapComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["central1",{"_index":2365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["central1/networkdata",{"_index":2360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["central1/trafficdata",{"_index":2362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["centroid",{"_index":1326,"title":{},"body":{"components/MapComponent.html":{}}}],["chang",{"_index":85,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"miscellaneous/enumerations.html":{}}}],["changedemand",{"_index":617,"title":{},"body":{"injectables/DemandService.html":{}}}],["changedemand(demand",{"_index":636,"title":{},"body":{"injectables/DemandService.html":{}}}],["changedetectorref",{"_index":1856,"title":{},"body":{"components/UiComponent.html":{}}}],["changeofconditionscompon",{"_index":83,"title":{"components/ChangeOfConditionsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["changes['cent",{"_index":1141,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["changes['zoom",{"_index":1143,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["changestartingtim",{"_index":618,"title":{},"body":{"injectables/DemandService.html":{}}}],["changestartingtimes(startingtim",{"_index":638,"title":{},"body":{"injectables/DemandService.html":{}}}],["changeweath",{"_index":2027,"title":{},"body":{"injectables/WeatherService.html":{}}}],["changeweather(weath",{"_index":2038,"title":{},"body":{"injectables/WeatherService.html":{}}}],["charg",{"_index":2273,"title":{},"body":{"license.html":{}}}],["chart",{"_index":368,"title":{},"body":{"components/ChartsComponent.html":{}}}],["chart(this.busiestctx",{"_index":437,"title":{},"body":{"components/ChartsComponent.html":{}}}],["chart(this.heavytrafficctx",{"_index":429,"title":{},"body":{"components/ChartsComponent.html":{}}}],["chart(this.moderatetrafficctx",{"_index":435,"title":{},"body":{"components/ChartsComponent.html":{}}}],["chart.j",{"_index":406,"title":{},"body":{"components/ChartsComponent.html":{},"dependencies.html":{}}}],["chartj",{"_index":2206,"title":{},"body":{"dependencies.html":{}}}],["charts'},{'nam",{"_index":89,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["charts.component.html",{"_index":370,"title":{},"body":{"components/ChartsComponent.html":{}}}],["charts.component.scss",{"_index":369,"title":{},"body":{"components/ChartsComponent.html":{}}}],["charts/charts.compon",{"_index":1930,"title":{},"body":{"modules/UiModule.html":{}}}],["chartscompon",{"_index":87,"title":{"components/ChartsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["check",{"_index":654,"title":{},"body":{"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"injectables/SchedulerService.html":{}}}],["circular",{"_index":875,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["claim",{"_index":2305,"title":{},"body":{"license.html":{}}}],["class",{"_index":39,"title":{"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"classes/GoOn.html":{},"classes/Heap.html":{},"classes/MapChanged.html":{},"classes/Node.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"classes/Statistics.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"overview.html":{}}}],["clear",{"_index":1330,"title":{},"body":{"components/MapComponent.html":{},"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["clearski",{"_index":2003,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["cli",{"_index":2252,"title":{},"body":{"index.html":{}}}],["click",{"_index":1113,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["clock",{"_index":1485,"title":{},"body":{"injectables/SchedulerService.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{}}}],["clock.servic",{"_index":1724,"title":{},"body":{"modules/SimulationModule.html":{}}}],["clockservic",{"_index":497,"title":{"injectables/ClockService.html":{}},"body":{"injectables/ClockService.html":{},"injectables/SchedulerService.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"components/StatisticsComponent.html":{},"overview.html":{}}}],["clockstatist",{"_index":1816,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["cloud",{"_index":2007,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["cloudfunctions.net/networkdata",{"_index":2366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cloudfunctions.net/trafficdata",{"_index":2367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_appmodul",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_demandmodul",{"_index":607,"title":{},"body":{"modules/DemandModule.html":{},"overview.html":{}}}],["cluster_demandmodule_provid",{"_index":608,"title":{},"body":{"modules/DemandModule.html":{},"overview.html":{}}}],["cluster_locationmodul",{"_index":1229,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_provid",{"_index":1230,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_networkmodul",{"_index":1392,"title":{},"body":{"modules/NetworkModule.html":{},"overview.html":{}}}],["cluster_networkmodule_import",{"_index":1393,"title":{},"body":{"modules/NetworkModule.html":{},"overview.html":{}}}],["cluster_networkmodule_provid",{"_index":1394,"title":{},"body":{"modules/NetworkModule.html":{},"overview.html":{}}}],["cluster_sharedmodul",{"_index":1647,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declar",{"_index":1648,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_export",{"_index":1650,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_import",{"_index":1649,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_simulationmodul",{"_index":1721,"title":{},"body":{"modules/SimulationModule.html":{},"overview.html":{}}}],["cluster_simulationmodule_provid",{"_index":1722,"title":{},"body":{"modules/SimulationModule.html":{},"overview.html":{}}}],["cluster_uimodul",{"_index":1903,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_uimodule_declar",{"_index":1904,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_uimodule_import",{"_index":1905,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_uimodule_provid",{"_index":1906,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_weathermodul",{"_index":2018,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["cluster_weathermodule_provid",{"_index":2019,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["code",{"_index":62,"title":{},"body":{"components/AboutComponent.html":{},"modules/MaterialModule.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{}}}],["codeaddress",{"_index":1244,"title":{},"body":{"injectables/LocationService.html":{}}}],["codeaddress(address",{"_index":1249,"title":{},"body":{"injectables/LocationService.html":{}}}],["coeffici",{"_index":2417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collect",{"_index":1460,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["color",{"_index":751,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["combin",{"_index":762,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["combine(existingnode.incomingedg",{"_index":852,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["combine(existingnode.outgoingedg",{"_index":855,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["commonmodul",{"_index":1654,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["complet",{"_index":1047,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/HomeComponent.html":{}}}],["compon",{"_index":0,"title":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiRoutingModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["component.candeactiv",{"_index":247,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{}}}],["component_templ",{"_index":74,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["comput",{"_index":58,"title":{},"body":{"components/AboutComponent.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["condit",{"_index":253,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"license.html":{}}}],["conditions'},{'nam",{"_index":86,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["conditions.compon",{"_index":1922,"title":{},"body":{"modules/UiModule.html":{}}}],["conditions.component.html",{"_index":255,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.scss",{"_index":254,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.t",{"_index":251,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:108",{"_index":285,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:112",{"_index":287,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:119",{"_index":280,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:123",{"_index":277,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:25",{"_index":272,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:27",{"_index":273,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:29",{"_index":295,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:31",{"_index":299,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:33",{"_index":271,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:48",{"_index":283,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:54",{"_index":288,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:81",{"_index":284,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions/chang",{"_index":250,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"modules/UiModule.html":{}}}],["config",{"_index":314,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"interfaces/Tag.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{}}}],["config.json",{"_index":2263,"title":{},"body":{"index.html":{}}}],["config.t",{"_index":2324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configur",{"_index":2446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connect",{"_index":1463,"title":{},"body":{"components/PrivacyComponent.html":{},"injectables/SchedulerService.html":{},"license.html":{}}}],["consol",{"_index":2254,"title":{},"body":{"index.html":{}}}],["const",{"_index":327,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Map.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"modules/SharedModule.html":{},"interfaces/SimulationState.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"components/AboutComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["constructor(@inject(mat_snack_bar_data",{"_index":1391,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["constructor(data",{"_index":1387,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["constructor(dialogref",{"_index":1220,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["constructor(edgeid",{"_index":713,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["constructor(elementref",{"_index":384,"title":{},"body":{"components/ChartsComponent.html":{},"components/HomeComponent.html":{},"components/WeatherComponent.html":{}}}],["constructor(formbuild",{"_index":261,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/WizardComponent.html":{}}}],["constructor(http",{"_index":2032,"title":{},"body":{"injectables/WeatherService.html":{}}}],["constructor(map",{"_index":1104,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["constructor(maticonregistri",{"_index":1379,"title":{},"body":{"modules/MaterialModule.html":{}}}],["constructor(network",{"_index":624,"title":{},"body":{"injectables/DemandService.html":{}}}],["constructor(nodeid",{"_index":795,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["constructor(payload",{"_index":1074,"title":{},"body":{"classes/GoOn.html":{},"classes/MapChanged.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{}}}],["constructor(priv",{"_index":664,"title":{},"body":{"injectables/DemandService.html":{},"components/HomeComponent.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{}}}],["constructor(publ",{"_index":1086,"title":{},"body":{"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/MapChanged.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{}}}],["constructor(relationid",{"_index":832,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["constructor(rout",{"_index":1850,"title":{},"body":{"components/UiComponent.html":{}}}],["constructor(stor",{"_index":516,"title":{},"body":{"injectables/ClockService.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"injectables/WizardService.html":{}}}],["constructor(wizard",{"_index":1483,"title":{},"body":{"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["contain",{"_index":1157,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["content",{"_index":476,"title":{},"body":{"components/ChartsComponent.html":{}}}],["continu",{"_index":364,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{}}}],["contract",{"_index":2309,"title":{},"body":{"license.html":{}}}],["control",{"_index":349,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"components/SimulationComponent.html":{},"miscellaneous/enumerations.html":{}}}],["control.get([control.length",{"_index":1061,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["control.length",{"_index":1030,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["control.paus",{"_index":564,"title":{},"body":{"injectables/ClockService.html":{}}}],["control.push(this.formbuilder.group",{"_index":1060,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["control.quick",{"_index":572,"title":{},"body":{"injectables/ClockService.html":{}}}],["control.removeat(i",{"_index":1031,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["control.slow",{"_index":570,"title":{},"body":{"injectables/ClockService.html":{}}}],["control.start",{"_index":562,"title":{},"body":{"injectables/ClockService.html":{}}}],["control.step",{"_index":568,"title":{},"body":{"injectables/ClockService.html":{}}}],["control.stop",{"_index":566,"title":{},"body":{"injectables/ClockService.html":{}}}],["control.valu",{"_index":1036,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["convert",{"_index":1583,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"injectables/WeatherService.html":{}}}],["cooki",{"_index":1466,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["cooper",{"_index":1313,"title":{},"body":{"components/MapComponent.html":{}}}],["coordin",{"_index":1238,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["copi",{"_index":2274,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":75,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"license.html":{}}}],["copyright&nbsp;©&nbsp",{"_index":49,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{}}}],["core",{"_index":2217,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":1498,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["correctgraph",{"_index":1544,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["cost",{"_index":905,"title":{},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["count",{"_index":595,"title":{"interfaces/Counts.html":{}},"body":{"interfaces/Counts.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Simulation.html":{},"components/SimulationComponent.html":{},"interfaces/Tag.html":{}}}],["counts?.arrivedvehicl",{"_index":1718,"title":{},"body":{"components/SimulationComponent.html":{}}}],["counts?.startedvehicl",{"_index":1716,"title":{},"body":{"components/SimulationComponent.html":{}}}],["creat",{"_index":929,"title":{},"body":{"classes/Edge.html":{},"components/GoogleMapComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"components/WizardComponent.html":{},"index.html":{}}}],["createchart",{"_index":378,"title":{},"body":{"components/ChartsComponent.html":{}}}],["createfeatureselector",{"_index":1730,"title":{},"body":{"interfaces/SimulationState.html":{},"interfaces/UiState.html":{}}}],["createfeatureselector('simul",{"_index":1736,"title":{},"body":{"interfaces/SimulationState.html":{},"miscellaneous/variables.html":{}}}],["createfeatureselector('ui",{"_index":1947,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["creategraph",{"_index":1534,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["createmap",{"_index":1095,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["createmap(el",{"_index":1127,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["createselector",{"_index":1731,"title":{},"body":{"interfaces/SimulationState.html":{},"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["cross",{"_index":888,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["curr",{"_index":1178,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{},"classes/Statistics.html":{}}}],["curr.heavytrafficcount",{"_index":1788,"title":{},"body":{"classes/Statistics.html":{}}}],["curr.moderatetrafficcount",{"_index":1789,"title":{},"body":{"classes/Statistics.html":{}}}],["current",{"_index":727,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{},"interfaces/UiState.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["currentstep",{"_index":346,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["currentyear",{"_index":20,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{}}}],["d",{"_index":358,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["d.count",{"_index":922,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["d2191a",{"_index":2402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d27519",{"_index":2400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damag",{"_index":2306,"title":{},"body":{"license.html":{}}}],["data",{"_index":46,"title":{},"body":{"components/AboutComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"interfaces/Counts.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Map.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Simulation.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["data.list.length",{"_index":2070,"title":{},"body":{"injectables/WeatherService.html":{}}}],["data.list[0",{"_index":2080,"title":{},"body":{"injectables/WeatherService.html":{}}}],["data.list[0].dt",{"_index":2077,"title":{},"body":{"injectables/WeatherService.html":{}}}],["dataset",{"_index":432,"title":{},"body":{"components/ChartsComponent.html":{}}}],["date",{"_index":1625,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{},"injectables/WeatherService.html":{}}}],["date().getfullyear",{"_index":35,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{}}}],["date.now",{"_index":591,"title":{},"body":{"injectables/ClockService.html":{}}}],["datetim",{"_index":1913,"title":{},"body":{"modules/UiModule.html":{},"dependencies.html":{}}}],["day",{"_index":1628,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["deactiv",{"_index":239,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"modules/SharedModule.html":{},"components/UiComponent.html":{},"modules/UiRoutingModule.html":{}}}],["deal",{"_index":2276,"title":{},"body":{"license.html":{}}}],["decim",{"_index":2243,"title":{},"body":{"miscellaneous/functions.html":{}}}],["declar",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["decor",{"_index":1223,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/MessageArchivedComponent.html":{},"components/WizardComponent.html":{}}}],["decre",{"_index":1453,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["deepclon",{"_index":1347,"title":{},"body":{"interfaces/MapState.html":{},"interfaces/WizardState.html":{}}}],["deepclone(initialmapst",{"_index":1353,"title":{},"body":{"interfaces/MapState.html":{}}}],["deepclone(initialwizardst",{"_index":2161,"title":{},"body":{"interfaces/WizardState.html":{}}}],["deepclone(state.map",{"_index":1357,"title":{},"body":{"interfaces/MapState.html":{}}}],["deepclone(state.step",{"_index":2164,"title":{},"body":{"interfaces/WizardState.html":{}}}],["default",{"_index":32,"title":{},"body":{"components/AboutComponent.html":{},"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":24,"title":{},"body":{"components/AboutComponent.html":{},"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["degre",{"_index":57,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["delay",{"_index":484,"title":{},"body":{"components/ChartsComponent.html":{},"interfaces/Counts.html":{},"components/HomeComponent.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{}}}],["delet",{"_index":1064,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["deleteodpair",{"_index":1006,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["deleteodpair(i",{"_index":1015,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand",{"_index":269,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"injectables/SchedulerService.html":{},"components/WizardComponent.html":{}}}],["demand'},{'nam",{"_index":92,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["demand.compon",{"_index":1920,"title":{},"body":{"modules/UiModule.html":{}}}],["demand.component.html",{"_index":1003,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.scss",{"_index":1002,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.t",{"_index":1001,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:142",{"_index":1014,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:150",{"_index":1012,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:23",{"_index":1009,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:25",{"_index":1010,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:27",{"_index":1023,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:29",{"_index":1024,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:31",{"_index":1008,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:44",{"_index":1017,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:50",{"_index":1022,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:59",{"_index":1018,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:81",{"_index":1019,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:85",{"_index":1016,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:93",{"_index":1021,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.length",{"_index":673,"title":{},"body":{"injectables/DemandService.html":{}}}],["demand.servic",{"_index":610,"title":{},"body":{"modules/DemandModule.html":{}}}],["demand/demand.modul",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["demand/demand.servic",{"_index":306,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/SchedulerService.html":{}}}],["demand/estim",{"_index":1000,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"modules/UiModule.html":{}}}],["demandmodul",{"_index":144,"title":{"modules/DemandModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"modules.html":{},"overview.html":{}}}],["demandservic",{"_index":270,"title":{"injectables/DemandService.html":{}},"body":{"components/ChangeOfConditionsComponent.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"injectables/SchedulerService.html":{},"overview.html":{}}}],["deni",{"_index":1605,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["denomin",{"_index":960,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["densiti",{"_index":694,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["dep",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["depend",{"_index":135,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{},"overview.html":{}}}],["describ",{"_index":770,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["descript",{"_index":215,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/Heap.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"interfaces/MapState.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/SimulationState.html":{},"classes/Statistics.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{},"miscellaneous/functions.html":{}}}],["destin",{"_index":695,"title":{},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["develop",{"_index":54,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["dialog",{"_index":1217,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/UiComponent.html":{}}}],["dialog'},{'nam",{"_index":101,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["dialog.compon",{"_index":1666,"title":{},"body":{"modules/SharedModule.html":{},"components/UiComponent.html":{}}}],["dialog.component.t",{"_index":1216,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:18",{"_index":1222,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:21",{"_index":1225,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:22",{"_index":1224,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialogref",{"_index":1219,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/UiComponent.html":{}}}],["dialogref.afterclos",{"_index":1901,"title":{},"body":{"components/UiComponent.html":{}}}],["dialogresult",{"_index":1890,"title":{},"body":{"components/UiComponent.html":{}}}],["differ",{"_index":928,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["direct",{"_index":72,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"index.html":{}}}],["directives/pairs.direct",{"_index":2106,"title":{},"body":{"components/WizardComponent.html":{}}}],["disabledefaultui",{"_index":1097,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["disabledoubleclickzoom",{"_index":1098,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["disagre",{"_index":1839,"title":{},"body":{"components/TermsComponent.html":{}}}],["display",{"_index":1121,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/PrivacyComponent.html":{},"miscellaneous/variables.html":{}}}],["displayedcolumn",{"_index":1411,"title":{},"body":{"components/NumericComponent.html":{}}}],["dissert",{"_index":55,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["distanc",{"_index":696,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["distribut",{"_index":2283,"title":{},"body":{"license.html":{}}}],["doc",{"_index":2247,"title":{},"body":{"index.html":{}}}],["document",{"_index":64,"title":{},"body":{"components/AboutComponent.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"index.html":{},"license.html":{}}}],["doesn't",{"_index":1611,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["domsanit",{"_index":1378,"title":{},"body":{"modules/MaterialModule.html":{}}}],["domsanitizer.bypasssecuritytrustresourceurl('./assets/images/ic_code_24px.svg",{"_index":1383,"title":{},"body":{"modules/MaterialModule.html":{}}}],["domsanitizer.bypasssecuritytrustresourceurl('./assets/images/ic_more_vert_24px.svg",{"_index":1382,"title":{},"body":{"modules/MaterialModule.html":{}}}],["doubl",{"_index":1112,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["draw",{"_index":709,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["draw(color",{"_index":748,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["drawingopt",{"_index":697,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["drawtim",{"_index":2349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["durat",{"_index":698,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["durationintraff",{"_index":699,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["dynam",{"_index":2180,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":945,"title":{},"body":{"classes/Edge.html":{},"classes/EnumValues.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["e[nam",{"_index":982,"title":{},"body":{"classes/EnumValues.html":{}}}],["each",{"_index":660,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"components/GoogleMapComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{}}}],["earth'",{"_index":784,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["eas",{"_index":1206,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["edg",{"_index":456,"title":{"classes/Edge.html":{}},"body":{"components/ChartsComponent.html":{},"interfaces/Counts.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Simulation.html":{},"classes/Statistics.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["edge.calcmaxflow(factor",{"_index":895,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["edge.downstream[i",{"_index":1799,"title":{},"body":{"classes/Statistics.html":{}}}],["edge.drawingoptions.infowindow.setcontent('edg",{"_index":947,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["edge.dur",{"_index":1793,"title":{},"body":{"classes/Statistics.html":{}}}],["edge.edgeid",{"_index":860,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["edge.heavytrafficcount",{"_index":1783,"title":{},"body":{"classes/Statistics.html":{}}}],["edge.label",{"_index":882,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"classes/Statistics.html":{},"interfaces/Tag.html":{}}}],["edge.moderatetrafficcount",{"_index":1784,"title":{},"body":{"classes/Statistics.html":{}}}],["edge.origin.nodeid",{"_index":923,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["edge.upstream.map((valu",{"_index":1798,"title":{},"body":{"classes/Statistics.html":{}}}],["edgeid",{"_index":700,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["edgeofa.edgeid",{"_index":941,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["edgeofb.edgeid",{"_index":940,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["edges.filter((edg",{"_index":1797,"title":{},"body":{"classes/Statistics.html":{}}}],["edges.push(edg",{"_index":944,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["edges.reduce((prev",{"_index":1785,"title":{},"body":{"classes/Statistics.html":{}}}],["edges[m].edgeid",{"_index":887,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["el",{"_index":1130,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{}}}],["element",{"_index":71,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["element.delay",{"_index":1428,"title":{},"body":{"components/NumericComponent.html":{}}}],["element.edg",{"_index":1423,"title":{},"body":{"components/NumericComponent.html":{}}}],["element.innerhtml",{"_index":1197,"title":{},"body":{"components/HomeComponent.html":{}}}],["element.innertext",{"_index":1194,"title":{},"body":{"components/HomeComponent.html":{}}}],["element.stop",{"_index":1429,"title":{},"body":{"components/NumericComponent.html":{}}}],["element.trafficcount",{"_index":1427,"title":{},"body":{"components/NumericComponent.html":{}}}],["element.trafficvolum",{"_index":1426,"title":{},"body":{"components/NumericComponent.html":{}}}],["element.waynam",{"_index":1425,"title":{},"body":{"components/NumericComponent.html":{}}}],["elementref",{"_index":385,"title":{},"body":{"components/ChartsComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/WeatherComponent.html":{}}}],["elementtyp",{"_index":2380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["empti",{"_index":1643,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["enabl",{"_index":478,"title":{},"body":{"components/ChartsComponent.html":{},"components/GoogleMapComponent.html":{},"index.html":{}}}],["enables/dis",{"_index":1110,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["encapsul",{"_index":1289,"title":{},"body":{"components/MapComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["end",{"_index":553,"title":{},"body":{"injectables/ClockService.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"interfaces/SimulationState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["endsimul",{"_index":499,"title":{},"body":{"injectables/ClockService.html":{},"components/SimulationComponent.html":{},"components/WizardComponent.html":{}}}],["endtim",{"_index":593,"title":{},"body":{"injectables/ClockService.html":{}}}],["engin",{"_index":59,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["enter",{"_index":1644,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["entrycompon",{"_index":1652,"title":{},"body":{"modules/SharedModule.html":{}}}],["enum",{"_index":550,"title":{},"body":{"injectables/ClockService.html":{},"classes/Edge.html":{},"classes/GoOn.html":{},"interfaces/LinkFlow.html":{},"classes/MapChanged.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"interfaces/WeatherConditions.html":{}}}],["enumer",{"_index":2223,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumvalu",{"_index":312,"title":{"classes/EnumValues.html":{}},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{}}}],["enumvalues.getvalues(pathtyp",{"_index":1028,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["enumvalues.getvalues(weatherdescript",{"_index":320,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["enumvaluetyp",{"_index":978,"title":{},"body":{"classes/EnumValues.html":{},"miscellaneous/typealiases.html":{}}}],["environ",{"_index":767,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["environment.test",{"_index":946,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["environments/environ",{"_index":768,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["eppstein",{"_index":897,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["error",{"_index":760,"title":{},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["error.cod",{"_index":1602,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["error.permission_deni",{"_index":1603,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["error.position_unavail",{"_index":1606,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["error.timeout",{"_index":1608,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["estim",{"_index":91,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["estimate(linkflow",{"_index":640,"title":{},"body":{"injectables/DemandService.html":{}}}],["estimateofdemandcompon",{"_index":90,"title":{"components/EstimateOfDemandComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["estimations[x",{"_index":679,"title":{},"body":{"injectables/DemandService.html":{}}}],["eu",{"_index":1455,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["evalu",{"_index":2045,"title":{},"body":{"injectables/WeatherService.html":{}}}],["event",{"_index":2094,"title":{},"body":{"components/WizardComponent.html":{},"license.html":{}}}],["event.previouslyselectedindex",{"_index":2124,"title":{},"body":{"components/WizardComponent.html":{}}}],["event.selectedindex",{"_index":2125,"title":{},"body":{"components/WizardComponent.html":{}}}],["everpol",{"_index":2203,"title":{},"body":{"dependencies.html":{}}}],["execut",{"_index":505,"title":{},"body":{"injectables/ClockService.html":{}}}],["existingnod",{"_index":849,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["existingnode.incomingedg",{"_index":851,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["existingnode.outgoingedg",{"_index":854,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["exit",{"_index":1825,"title":{},"body":{"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["exp",{"_index":958,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["explor",{"_index":914,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["export",{"_index":38,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"interfaces/SimulationState.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["express",{"_index":2297,"title":{},"body":{"license.html":{}}}],["extend",{"_index":252,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["extern",{"_index":1470,"title":{},"body":{"components/PrivacyComponent.html":{},"components/TermsComponent.html":{}}}],["extract",{"_index":1742,"title":{},"body":{"classes/Statistics.html":{}}}],["factor",{"_index":746,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["fals",{"_index":210,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["fast_forward",{"_index":1715,"title":{},"body":{"components/SimulationComponent.html":{}}}],["fast_rewind",{"_index":1713,"title":{},"body":{"components/SimulationComponent.html":{}}}],["featuresimulationst",{"_index":1735,"title":{},"body":{"interfaces/SimulationState.html":{},"miscellaneous/variables.html":{}}}],["featuretyp",{"_index":2378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["featureuist",{"_index":1946,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["few",{"_index":2006,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["fewcloud",{"_index":2005,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"interfaces/SimulationState.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"index.html":{},"license.html":{}}}],["fill",{"_index":442,"title":{},"body":{"components/ChartsComponent.html":{}}}],["filterpaths(shortestpath",{"_index":930,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["firebas",{"_index":68,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["firebaserc",{"_index":2262,"title":{},"body":{"index.html":{}}}],["first",{"_index":911,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"classes/Statistics.html":{},"interfaces/Tag.html":{}}}],["fit",{"_index":2300,"title":{},"body":{"license.html":{}}}],["flexlayoutmodul",{"_index":1660,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["flow",{"_index":632,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["follow",{"_index":1492,"title":{},"body":{"injectables/SchedulerService.html":{},"license.html":{}}}],["fontcolor",{"_index":472,"title":{},"body":{"components/ChartsComponent.html":{}}}],["fontstyl",{"_index":470,"title":{},"body":{"components/ChartsComponent.html":{}}}],["footer",{"_index":1066,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'nam",{"_index":94,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["footer.component.html",{"_index":1068,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":1067,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.compon",{"_index":1664,"title":{},"body":{"modules/SharedModule.html":{}}}],["footercompon",{"_index":93,"title":{"components/FooterComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["forecast",{"_index":2023,"title":{},"body":{"injectables/WeatherService.html":{}}}],["form",{"_index":233,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/Map.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["formarray",{"_index":300,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/WizardComponent.html":{}}}],["format",{"_index":985,"title":{},"body":{"classes/EnumValues.html":{},"miscellaneous/functions.html":{}}}],["formattimefrommillisecond",{"_index":1691,"title":{},"body":{"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"miscellaneous/functions.html":{}}}],["formattimefrommilliseconds(0",{"_index":1704,"title":{},"body":{"components/SimulationComponent.html":{}}}],["formattimefrommilliseconds(clockstatistics.totalprocessingtim",{"_index":1822,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["formattimefrommilliseconds(clockstatistics.totalsimulatedtim",{"_index":1821,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["formattimefrommilliseconds(m",{"_index":994,"title":{},"body":{"classes/EnumValues.html":{},"miscellaneous/functions.html":{}}}],["formattimefrommilliseconds(periods.simulatedtimeperiod",{"_index":1703,"title":{},"body":{"components/SimulationComponent.html":{}}}],["formattimefromsecond",{"_index":408,"title":{},"body":{"components/ChartsComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"miscellaneous/functions.html":{}}}],["formattimefromseconds(",{"_index":988,"title":{},"body":{"classes/EnumValues.html":{},"miscellaneous/functions.html":{}}}],["formattimefromseconds(periods.timeperiods[periods.timeperiods.length",{"_index":1698,"title":{},"body":{"components/SimulationComponent.html":{}}}],["formattimefromseconds(simulationstatistics.totaltim",{"_index":1819,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["formattimefromseconds(this.statistics.busiestedgedelay",{"_index":481,"title":{},"body":{"components/ChartsComponent.html":{}}}],["formattimefromseconds(valu",{"_index":487,"title":{},"body":{"components/ChartsComponent.html":{}}}],["formbuild",{"_index":262,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/WizardComponent.html":{}}}],["formgroup",{"_index":260,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WizardComponent.html":{}}}],["formsmodul",{"_index":1658,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["formstep",{"_index":2100,"title":{},"body":{"components/WizardComponent.html":{}}}],["forroot",{"_index":1668,"title":{},"body":{"modules/SharedModule.html":{}}}],["fraction",{"_index":2437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["free",{"_index":731,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"license.html":{}}}],["freeflowveloc",{"_index":701,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["frommap",{"_index":1942,"title":{},"body":{"interfaces/UiState.html":{}}}],["frommap.getmap",{"_index":1954,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["frommap.mapreduc",{"_index":1945,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["frommap.mapst",{"_index":1938,"title":{},"body":{"interfaces/UiState.html":{}}}],["fromsimul",{"_index":546,"title":{},"body":{"injectables/ClockService.html":{},"components/NumericComponent.html":{},"components/SimulationComponent.html":{},"interfaces/SimulationState.html":{}}}],["fromsimulation.getend",{"_index":1739,"title":{},"body":{"interfaces/SimulationState.html":{},"miscellaneous/variables.html":{}}}],["fromsimulation.getperiod",{"_index":1740,"title":{},"body":{"interfaces/SimulationState.html":{},"miscellaneous/variables.html":{}}}],["fromsimulation.getsimul",{"_index":1738,"title":{},"body":{"interfaces/SimulationState.html":{},"miscellaneous/variables.html":{}}}],["fromsimulation.simulationreduc",{"_index":1734,"title":{},"body":{"interfaces/SimulationState.html":{},"miscellaneous/variables.html":{}}}],["fromsimulation.simulationst",{"_index":1728,"title":{},"body":{"interfaces/SimulationState.html":{}}}],["fromui",{"_index":307,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WizardService.html":{}}}],["fromwizard",{"_index":1940,"title":{},"body":{"interfaces/UiState.html":{}}}],["fromwizard.getcurrentstep",{"_index":1951,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["fromwizard.geterror",{"_index":1952,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["fromwizard.getpend",{"_index":1953,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["fromwizard.getstep",{"_index":1950,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["fromwizard.wizardreduc",{"_index":1944,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["fromwizard.wizardst",{"_index":1939,"title":{},"body":{"interfaces/UiState.html":{}}}],["full",{"_index":207,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TermsComponent.html":{},"modules/UiRoutingModule.html":{}}}],["function",{"_index":189,"title":{"miscellaneous/functions.html":{}},"body":{"classes/AppPreloadingStrategy.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/DemandService.html":{},"classes/EnumValues.html":{},"interfaces/MapState.html":{},"interfaces/WizardState.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["functions/src/funct",{"_index":2264,"title":{},"body":{"index.html":{}}}],["furnish",{"_index":2288,"title":{},"body":{"license.html":{}}}],["g",{"_index":2251,"title":{},"body":{"index.html":{}}}],["gdpr",{"_index":1458,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["gener",{"_index":648,"title":{},"body":{"injectables/DemandService.html":{},"classes/Heap.html":{},"interfaces/Path.html":{},"components/PrivacyComponent.html":{}}}],["geocod",{"_index":1241,"title":{},"body":{"injectables/LocationService.html":{},"index.html":{}}}],["geograph",{"_index":1237,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["geoloc",{"_index":1242,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["geometri",{"_index":2381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gestur",{"_index":1115,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["gesturehandl",{"_index":1099,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["get",{"_index":666,"title":{"index.html":{},"license.html":{}},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"components/GoogleMapComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{}}}],["getbusiestedg",{"_index":1743,"title":{},"body":{"classes/Statistics.html":{}}}],["getbusiestedge(edg",{"_index":1755,"title":{},"body":{"classes/Statistics.html":{}}}],["getbusiestedgecapac",{"_index":1744,"title":{},"body":{"classes/Statistics.html":{}}}],["getbusiestedgecapacity(edg",{"_index":1758,"title":{},"body":{"classes/Statistics.html":{}}}],["getbusiestedgedata",{"_index":1745,"title":{},"body":{"classes/Statistics.html":{}}}],["getbusiestedgedata(edg",{"_index":1760,"title":{},"body":{"classes/Statistics.html":{}}}],["getbusiestedgedelay",{"_index":1746,"title":{},"body":{"classes/Statistics.html":{}}}],["getbusiestedgedelay(edg",{"_index":1762,"title":{},"body":{"classes/Statistics.html":{}}}],["getbusiestedgelabel",{"_index":1747,"title":{},"body":{"classes/Statistics.html":{}}}],["getbusiestedgelabel(edg",{"_index":1764,"title":{},"body":{"classes/Statistics.html":{}}}],["getcapac",{"_index":710,"title":{},"body":{"classes/Edge.html":{}}}],["getcapacity(timeinterv",{"_index":753,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getcurrentposit",{"_index":1245,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["getcurrentstep",{"_index":2169,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["getedg",{"_index":840,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getedge(edgeid",{"_index":858,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getend",{"_index":2329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["geterror",{"_index":2171,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["getfactor",{"_index":2028,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getformstep",{"_index":2101,"title":{},"body":{"components/WizardComponent.html":{}}}],["getheavytrafficdata",{"_index":1748,"title":{},"body":{"classes/Statistics.html":{}}}],["getheavytrafficdata(edg",{"_index":1766,"title":{},"body":{"classes/Statistics.html":{}}}],["getheavytrafficedg",{"_index":1749,"title":{},"body":{"classes/Statistics.html":{}}}],["getheavytrafficedges(edg",{"_index":1768,"title":{},"body":{"classes/Statistics.html":{}}}],["getheavytrafficlabel",{"_index":1750,"title":{},"body":{"classes/Statistics.html":{}}}],["getheavytrafficlabels(edg",{"_index":1770,"title":{},"body":{"classes/Statistics.html":{}}}],["geticon",{"_index":1959,"title":{},"body":{"components/WeatherComponent.html":{}}}],["geticon(cod",{"_index":1966,"title":{},"body":{"components/WeatherComponent.html":{}}}],["getincidencematrix",{"_index":890,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getkjam",{"_index":711,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getlatlng",{"_index":1246,"title":{},"body":{"injectables/LocationService.html":{}}}],["getmap",{"_index":1358,"title":{},"body":{"interfaces/MapState.html":{},"miscellaneous/variables.html":{}}}],["getmax",{"_index":1626,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["getmin",{"_index":1622,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["getmoderatetrafficedg",{"_index":1751,"title":{},"body":{"classes/Statistics.html":{}}}],["getmoderatetrafficedges(edg",{"_index":1772,"title":{},"body":{"classes/Statistics.html":{}}}],["getmoderatetrafficlabel",{"_index":1752,"title":{},"body":{"classes/Statistics.html":{}}}],["getmoderatetrafficlabels(edg",{"_index":1774,"title":{},"body":{"classes/Statistics.html":{}}}],["getmoderateytrafficdata",{"_index":1753,"title":{},"body":{"classes/Statistics.html":{}}}],["getmoderateytrafficdata(edg",{"_index":1776,"title":{},"body":{"classes/Statistics.html":{}}}],["getnam",{"_index":971,"title":{},"body":{"classes/EnumValues.html":{}}}],["getnames(",{"_index":973,"title":{},"body":{"classes/EnumValues.html":{}}}],["getnetwork",{"_index":1530,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["getnetworkdata",{"_index":1537,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["getnod",{"_index":838,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getnode(nodeid",{"_index":844,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getodmatrix",{"_index":619,"title":{},"body":{"injectables/DemandService.html":{}}}],["getodnod",{"_index":878,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getodnode(label",{"_index":876,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getodpair",{"_index":298,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{}}}],["getpath",{"_index":1158,"title":{},"body":{"classes/Heap.html":{}}}],["getpend",{"_index":2173,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["getperiod",{"_index":2330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getrel",{"_index":842,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getscript",{"_index":2231,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getscript(src",{"_index":2240,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getshortestpath",{"_index":1159,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["getsimul",{"_index":2331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getstartingtim",{"_index":620,"title":{},"body":{"injectables/DemandService.html":{}}}],["getstatist",{"_index":507,"title":{},"body":{"injectables/ClockService.html":{}}}],["getstep",{"_index":2167,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["gettrafficdata",{"_index":1561,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["gettrafficvolum",{"_index":1754,"title":{},"body":{"classes/Statistics.html":{}}}],["gettrafficvolumes(edg",{"_index":1778,"title":{},"body":{"classes/Statistics.html":{}}}],["getvalu",{"_index":972,"title":{},"body":{"classes/EnumValues.html":{}}}],["getvalues(",{"_index":975,"title":{},"body":{"classes/EnumValues.html":{}}}],["getvari",{"_index":712,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getvis",{"_index":257,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["getvisibility(pair",{"_index":278,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["getweathercondit",{"_index":2029,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getweatherdata",{"_index":1546,"title":{},"body":{"injectables/SchedulerService.html":{},"injectables/WeatherService.html":{}}}],["getweatherdata(tim",{"_index":2042,"title":{},"body":{"injectables/WeatherService.html":{}}}],["gl",{"_index":621,"title":{},"body":{"injectables/DemandService.html":{}}}],["gls(linkflow",{"_index":645,"title":{},"body":{"injectables/DemandService.html":{}}}],["go",{"_index":1084,"title":{},"body":{"classes/GoOn.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"miscellaneous/enumerations.html":{}}}],["googl",{"_index":96,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"index.html":{}}}],["google'",{"_index":1843,"title":{},"body":{"components/TermsComponent.html":{}}}],["google.maps.geocod",{"_index":1261,"title":{},"body":{"injectables/LocationService.html":{}}}],["google.maps.geocoderresult",{"_index":1268,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["google.maps.geocoderstatu",{"_index":1270,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["google.maps.geocoderstatus.ok",{"_index":1271,"title":{},"body":{"injectables/LocationService.html":{}}}],["google.maps.geocoderstatus.zero_result",{"_index":1590,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["google.maps.infowindow",{"_index":802,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["google.maps.latlng",{"_index":798,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["google.maps.latlngboundsliter",{"_index":1320,"title":{},"body":{"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["google.maps.latlngliter",{"_index":1108,"title":{},"body":{"components/GoogleMapComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{}}}],["google.maps.maptypeid",{"_index":1119,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["google.maps.maptypeid.roadmap",{"_index":1310,"title":{},"body":{"components/MapComponent.html":{}}}],["google.maps.maptypestyl",{"_index":1125,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["google.maps.mark",{"_index":794,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["google.maps.polylin",{"_index":800,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["google\\'",{"_index":1844,"title":{},"body":{"components/TermsComponent.html":{}}}],["googlemapcompon",{"_index":95,"title":{"components/GoogleMapComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["goon",{"_index":1071,"title":{"classes/GoOn.html":{}},"body":{"classes/GoOn.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["goon(data",{"_index":2140,"title":{},"body":{"injectables/WizardService.html":{}}}],["govern",{"_index":1837,"title":{},"body":{"components/TermsComponent.html":{}}}],["grant",{"_index":2272,"title":{},"body":{"license.html":{}}}],["graph",{"_index":834,"title":{},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"classes/Statistics.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"modules.html":{}}}],["graph.calcassignmentmatrix(odpair",{"_index":1556,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["graph.calcincidencematrix",{"_index":1555,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["graph.calcmaxflows(factors[0]).pip",{"_index":1563,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["graph.calcshortestpaths(odpairs).pip",{"_index":1554,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["guard.servic",{"_index":1667,"title":{},"body":{"modules/SharedModule.html":{},"components/UiComponent.html":{},"modules/UiRoutingModule.html":{}}}],["guard.service.t",{"_index":240,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{}}}],["guard.service.ts:10",{"_index":248,"title":{},"body":{"injectables/CanDeactivateGuard.html":{}}}],["hammerj",{"_index":2212,"title":{},"body":{"dependencies.html":{}}}],["handl",{"_index":1116,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["hasbackdrop",{"_index":1900,"title":{},"body":{"components/UiComponent.html":{}}}],["headlin",{"_index":1201,"title":{},"body":{"components/HomeComponent.html":{}}}],["heap",{"_index":764,"title":{"classes/Heap.html":{}},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["heavi",{"_index":447,"title":{},"body":{"components/ChartsComponent.html":{},"miscellaneous/variables.html":{}}}],["heavytraff",{"_index":2440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["heavytrafficchart",{"_index":373,"title":{},"body":{"components/ChartsComponent.html":{}}}],["heavytrafficcolor",{"_index":2401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["heavytrafficctx",{"_index":374,"title":{},"body":{"components/ChartsComponent.html":{}}}],["hectar",{"_index":2391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["herebi",{"_index":2271,"title":{},"body":{"license.html":{}}}],["hide",{"_index":1323,"title":{},"body":{"components/MapComponent.html":{}}}],["highli",{"_index":2410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["holder",{"_index":2303,"title":{},"body":{"license.html":{}}}],["home",{"_index":205,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{}}}],["home'},{'nam",{"_index":99,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["home.component.html",{"_index":1182,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":1181,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.transit",{"_index":1190,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.compon",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["home_transit",{"_index":1189,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["homecompon",{"_index":98,"title":{"components/HomeComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["horizont",{"_index":460,"title":{},"body":{"components/ChartsComponent.html":{}}}],["horizontalbar",{"_index":430,"title":{},"body":{"components/ChartsComponent.html":{}}}],["hour",{"_index":1646,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{},"miscellaneous/variables.html":{}}}],["hoverbackgroundcolor",{"_index":433,"title":{},"body":{"components/ChartsComponent.html":{}}}],["html",{"_index":70,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["html5",{"_index":1255,"title":{},"body":{"injectables/LocationService.html":{}}}],["htmlcanvasel",{"_index":400,"title":{},"body":{"components/ChartsComponent.html":{}}}],["htmlelement",{"_index":1128,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/WeatherComponent.html":{}}}],["htmlimageel",{"_index":1968,"title":{},"body":{"components/WeatherComponent.html":{}}}],["http",{"_index":2035,"title":{},"body":{"injectables/WeatherService.html":{}}}],["http://localhost:4201",{"_index":2358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":2033,"title":{},"body":{"injectables/WeatherService.html":{}}}],["httpclientmodul",{"_index":1656,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["httpparam",{"_index":2053,"title":{},"body":{"injectables/WeatherService.html":{}}}],["https://cloud.google.com/map",{"_index":2257,"title":{},"body":{"index.html":{}}}],["https://developers.google.com/maps/documentation/javascript/styl",{"_index":2387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://openweathermap.org",{"_index":2260,"title":{},"body":{"index.html":{}}}],["https://u",{"_index":2364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://wiki.openstreetmap.org/wiki/key:oneway",{"_index":863,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["https://wiki.openstreetmap.org/wiki/tag:junction%3droundabout",{"_index":871,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["icon",{"_index":337,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"components/WizardComponent.html":{}}}],["icon.src",{"_index":1994,"title":{},"body":{"components/WeatherComponent.html":{}}}],["iconcontain",{"_index":1958,"title":{},"body":{"components/WeatherComponent.html":{}}}],["id",{"_index":864,"title":{},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["identifi",{"_index":1236,"title":{},"body":{"injectables/LocationService.html":{}}}],["imag",{"_index":1993,"title":{},"body":{"components/WeatherComponent.html":{}}}],["implement",{"_index":9,"title":{},"body":{"components/AboutComponent.html":{},"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["impli",{"_index":2298,"title":{},"body":{"license.html":{}}}],["import",{"_index":36,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"interfaces/SimulationState.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["incid",{"_index":883,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{}}}],["incidencematrix",{"_index":837,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["includ",{"_index":2279,"title":{},"body":{"license.html":{}}}],["incomingedg",{"_index":791,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["index",{"_index":18,"title":{"index.html":{}},"body":{"components/AboutComponent.html":{},"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"interfaces/SimulationState.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indic",{"_index":718,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"interfaces/SimulationState.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["infodialogcompon",{"_index":100,"title":{"components/InfoDialogComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["inform",{"_index":1448,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["infowindow",{"_index":801,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["inherit",{"_index":217,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["init",{"_index":1134,"title":{},"body":{"components/GoogleMapComponent.html":{},"injectables/SchedulerService.html":{}}}],["initi",{"_index":670,"title":{},"body":{"injectables/DemandService.html":{},"components/GoogleMapComponent.html":{},"interfaces/Map.html":{},"components/MapComponent.html":{},"interfaces/Step.html":{},"miscellaneous/variables.html":{}}}],["initialmapst",{"_index":1350,"title":{},"body":{"interfaces/MapState.html":{},"miscellaneous/variables.html":{}}}],["initialsimulationst",{"_index":2333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["initialwizardst",{"_index":2159,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":242,"title":{"injectables/CanDeactivateGuard.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"injectables/LocationService.html":{},"injectables/SchedulerService.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{}},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"components/MessageArchivedComponent.html":{},"injectables/SchedulerService.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{},"overview.html":{}}}],["inject(mat_dialog_data",{"_index":1228,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["input",{"_index":259,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{}}}],["insert",{"_index":904,"title":{},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{}}}],["instal",{"_index":1543,"title":{},"body":{"injectables/SchedulerService.html":{},"index.html":{}}}],["instant",{"_index":741,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["instanti",{"_index":902,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["interfac",{"_index":236,"title":{"interfaces/CanComponentDeactivate.html":{},"interfaces/Counts.html":{},"interfaces/LinkFlow.html":{},"interfaces/Map.html":{},"interfaces/MapState.html":{},"interfaces/Member.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"interfaces/Simulation.html":{},"interfaces/SimulationState.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"interfaces/UiState.html":{},"interfaces/WeatherConditions.html":{},"interfaces/WizardState.html":{}},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"interfaces/Counts.html":{},"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Map.html":{},"interfaces/MapState.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/Simulation.html":{},"interfaces/SimulationState.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"interfaces/UiState.html":{},"interfaces/WeatherConditions.html":{},"interfaces/WizardState.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["internet",{"_index":1532,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["interv",{"_index":500,"title":{},"body":{"injectables/ClockService.html":{},"components/SimulationComponent.html":{},"miscellaneous/variables.html":{}}}],["interval(this.simulatedtimeinterv",{"_index":577,"title":{},"body":{"injectables/ClockService.html":{}}}],["invalid",{"_index":361,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["invalid_request",{"_index":1592,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["invers",{"_index":772,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["invok",{"_index":1266,"title":{},"body":{"injectables/LocationService.html":{}}}],["isnan(+key",{"_index":980,"title":{},"body":{"classes/EnumValues.html":{}}}],["isoneway(edgeid",{"_index":865,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["isonpath",{"_index":622,"title":{},"body":{"injectables/DemandService.html":{}}}],["isonpath(odmatrixassign",{"_index":652,"title":{},"body":{"injectables/DemandService.html":{}}}],["isroundabout(edgeid",{"_index":872,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["javascript",{"_index":2259,"title":{},"body":{"index.html":{}}}],["js",{"_index":2210,"title":{},"body":{"dependencies.html":{}}}],["junction",{"_index":873,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["k",{"_index":765,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["key",{"_index":776,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"index.html":{}}}],["kind",{"_index":2296,"title":{},"body":{"license.html":{}}}],["ksp(o",{"_index":899,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["l",{"_index":1213,"title":{},"body":{"components/HomeComponent.html":{}}}],["label",{"_index":431,"title":{},"body":{"components/ChartsComponent.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["labels.icon",{"_index":2385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["labelstr",{"_index":2344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["last",{"_index":1046,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"classes/Statistics.html":{}}}],["lat",{"_index":789,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["latitud",{"_index":786,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["latlng",{"_index":1243,"title":{},"body":{"injectables/LocationService.html":{}}}],["layout",{"_index":1662,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["leav",{"_index":1642,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["legend",{"_index":69,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"modules/DemandModule.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"modules/LocationModule.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"components/WizardComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["legisl",{"_index":1452,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["letter",{"_index":1192,"title":{},"body":{"components/HomeComponent.html":{}}}],["level",{"_index":919,"title":{},"body":{"classes/Edge.html":{},"components/GoogleMapComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["liabil",{"_index":2307,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":2304,"title":{},"body":{"license.html":{}}}],["licens",{"_index":52,"title":{"license.html":{}},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"components/TermsComponent.html":{},"license.html":{}}}],["limit",{"_index":1039,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"injectables/SchedulerService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["line",{"_index":438,"title":{},"body":{"components/ChartsComponent.html":{},"components/HomeComponent.html":{}}}],["linear",{"_index":1207,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["link",{"_index":60,"title":{},"body":{"components/AboutComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["linkflow",{"_index":627,"title":{"interfaces/LinkFlow.html":{}},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["linkflows[i].valu",{"_index":683,"title":{},"body":{"injectables/DemandService.html":{}}}],["linkflows[i].vari",{"_index":686,"title":{},"body":{"injectables/DemandService.html":{}}}],["liter",{"_index":720,"title":{},"body":{"classes/Edge.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/MapChanged.html":{},"classes/Node.html":{},"classes/SimulationChanged.html":{},"classes/StepChanged.html":{}}}],["lng",{"_index":1587,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":188,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["loadchildren",{"_index":208,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loadscript",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["locat",{"_index":1484,"title":{},"body":{"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"injectables/WeatherService.html":{}}}],["location.servic",{"_index":1233,"title":{},"body":{"modules/LocationModule.html":{}}}],["location/location.modul",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["location/location.servic",{"_index":1503,"title":{},"body":{"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"injectables/WeatherService.html":{}}}],["locationmodul",{"_index":145,"title":{"modules/LocationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LocationModule.html":{},"modules.html":{},"overview.html":{}}}],["locationservic",{"_index":1231,"title":{"injectables/LocationService.html":{}},"body":{"modules/LocationModule.html":{},"injectables/LocationService.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"injectables/WeatherService.html":{},"overview.html":{}}}],["login",{"_index":2256,"title":{},"body":{"index.html":{}}}],["logit",{"_index":949,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["lon",{"_index":790,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["longitud",{"_index":787,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["ltm",{"_index":1780,"title":{},"body":{"classes/Statistics.html":{},"miscellaneous/variables.html":{}}}],["ltmedg",{"_index":1756,"title":{},"body":{"classes/Statistics.html":{}}}],["m",{"_index":362,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"miscellaneous/variables.html":{}}}],["m/",{"_index":732,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{}}}],["m:ss",{"_index":986,"title":{},"body":{"classes/EnumValues.html":{},"miscellaneous/functions.html":{}}}],["m:ss.mmm",{"_index":992,"title":{},"body":{"classes/EnumValues.html":{},"miscellaneous/functions.html":{}}}],["maintainaspectratio",{"_index":2341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["make",{"_index":1467,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["manag",{"_index":1346,"title":{},"body":{"interfaces/MapState.html":{},"interfaces/SimulationState.html":{},"interfaces/UiState.html":{},"interfaces/WizardState.html":{}}}],["map",{"_index":1025,"title":{"interfaces/Map.html":{}},"body":{"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"components/PrivacyComponent.html":{},"injectables/SchedulerService.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Step.html":{},"components/TermsComponent.html":{},"interfaces/UiState.html":{},"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["map'},{'nam",{"_index":97,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["map((respons",{"_index":2067,"title":{},"body":{"injectables/WeatherService.html":{}}}],["map.compon",{"_index":1927,"title":{},"body":{"modules/UiModule.html":{}}}],["map.component.html",{"_index":1292,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.scss",{"_index":1291,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.t",{"_index":1093,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:17",{"_index":1109,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:21",{"_index":1126,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:25",{"_index":1111,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:29",{"_index":1114,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:33",{"_index":1120,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:37",{"_index":1122,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:41",{"_index":1123,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:45",{"_index":1117,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:49",{"_index":1106,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:51",{"_index":1135,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:56",{"_index":1133,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:66",{"_index":1132,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:71",{"_index":1129,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.data.bound",{"_index":1639,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["map.data.selectednod",{"_index":1033,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["map.servic",{"_index":1137,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["map.styl",{"_index":1309,"title":{},"body":{"components/MapComponent.html":{}}}],["map/googl",{"_index":1926,"title":{},"body":{"modules/UiModule.html":{}}}],["map/map.compon",{"_index":1925,"title":{},"body":{"modules/UiModule.html":{}}}],["map/map.servic",{"_index":1502,"title":{},"body":{"injectables/SchedulerService.html":{},"modules/UiModule.html":{}}}],["mapact",{"_index":1287,"title":{},"body":{"classes/MapChanged.html":{},"interfaces/MapState.html":{},"miscellaneous/typealiases.html":{}}}],["mapactiontyp",{"_index":1285,"title":{},"body":{"classes/MapChanged.html":{},"interfaces/MapState.html":{},"miscellaneous/enumerations.html":{}}}],["mapactiontypes.mapchang",{"_index":1284,"title":{},"body":{"classes/MapChanged.html":{},"interfaces/MapState.html":{}}}],["mapactiontypes.reset",{"_index":1286,"title":{},"body":{"classes/MapChanged.html":{},"interfaces/MapState.html":{}}}],["mapchang",{"_index":1280,"title":{"classes/MapChanged.html":{}},"body":{"classes/MapChanged.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["mapcompon",{"_index":102,"title":{"components/MapComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["mapreduc",{"_index":2232,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mapreducer(st",{"_index":1352,"title":{},"body":{"interfaces/MapState.html":{},"miscellaneous/functions.html":{}}}],["mapservic",{"_index":1105,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{},"injectables/SchedulerService.html":{},"modules/UiModule.html":{},"overview.html":{}}}],["mapstat",{"_index":1344,"title":{"interfaces/MapState.html":{}},"body":{"interfaces/MapState.html":{},"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["mapstyl",{"_index":1308,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["maptypeid",{"_index":1100,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["marker",{"_index":793,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["mat_dialog_data",{"_index":1226,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["mat_snack_bar_data",{"_index":1390,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["matbuttonmodul",{"_index":1365,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matcardmodul",{"_index":1363,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["match",{"_index":128,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"interfaces/SimulationState.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":1854,"title":{},"body":{"components/UiComponent.html":{}}}],["matdialogmodul",{"_index":1373,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matdialogref",{"_index":1221,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["material.modul",{"_index":1663,"title":{},"body":{"modules/SharedModule.html":{}}}],["materialmodul",{"_index":1359,"title":{"modules/MaterialModule.html":{}},"body":{"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["matexpansionmodul",{"_index":1376,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matgridlistmodul",{"_index":1374,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["math.abs(curr",{"_index":1795,"title":{},"body":{"classes/Statistics.html":{}}}],["math.exp",{"_index":959,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["math.floor(",{"_index":989,"title":{},"body":{"classes/EnumValues.html":{}}}],["math.floor((m",{"_index":996,"title":{},"body":{"classes/EnumValues.html":{}}}],["math.floor(m",{"_index":995,"title":{},"body":{"classes/EnumValues.html":{}}}],["math.pow(bas",{"_index":685,"title":{},"body":{"injectables/DemandService.html":{}}}],["math.trunc(edge.maxflow",{"_index":1792,"title":{},"body":{"classes/Statistics.html":{}}}],["maticonmodul",{"_index":1366,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["maticonregistri",{"_index":1364,"title":{},"body":{"modules/MaterialModule.html":{}}}],["maticonregistry.addsvgicon",{"_index":1380,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodul",{"_index":1369,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matmenumodul",{"_index":1367,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matprogressspinnermodul",{"_index":1371,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matrix",{"_index":613,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{}}}],["matselectmodul",{"_index":1375,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matsidenavmodul",{"_index":1361,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matsnackbar",{"_index":1853,"title":{},"body":{"components/UiComponent.html":{}}}],["matsnackbarmodul",{"_index":1370,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matstepp",{"_index":2096,"title":{},"body":{"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["matsteppermodul",{"_index":1368,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattablemodul",{"_index":1377,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattoolbarmodul",{"_index":1362,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattooltipmodul",{"_index":1372,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":745,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["maxbarthick",{"_index":2352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxdemand",{"_index":2415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxflow",{"_index":702,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["maximum",{"_index":737,"title":{},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["maxodpair",{"_index":2406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxtimeinterv",{"_index":2445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxzoom",{"_index":1101,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["mean",{"_index":773,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["measur",{"_index":759,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["medium",{"_index":2411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["member",{"_index":778,"title":{"interfaces/Member.html":{}},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["memoizedselector",{"_index":1732,"title":{},"body":{"interfaces/SimulationState.html":{},"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["merchant",{"_index":2299,"title":{},"body":{"license.html":{}}}],["merg",{"_index":2281,"title":{},"body":{"license.html":{}}}],["messag",{"_index":1529,"title":{},"body":{"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/UiComponent.html":{},"injectables/WizardService.html":{}}}],["messagearchivedcompon",{"_index":103,"title":{"components/MessageArchivedComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["meter",{"_index":719,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"interfaces/WeatherConditions.html":{}}}],["method",{"_index":21,"title":{},"body":{"components/AboutComponent.html":{},"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["millimet",{"_index":2002,"title":{},"body":{"interfaces/WeatherConditions.html":{}}}],["millisecond",{"_index":993,"title":{},"body":{"classes/EnumValues.html":{},"injectables/WeatherService.html":{},"miscellaneous/functions.html":{}}}],["min",{"_index":804,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{}}}],["mindist",{"_index":2403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mindur",{"_index":2405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minimum",{"_index":631,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"components/GoogleMapComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["minzoom",{"_index":1102,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["miscellan",{"_index":2222,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mist",{"_index":2017,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["mit",{"_index":51,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"components/TermsComponent.html":{},"index.html":{},"license.html":{}}}],["mm",{"_index":363,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":459,"title":{},"body":{"components/ChartsComponent.html":{}}}],["model",{"_index":950,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Map.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["models/actions/simulation.act",{"_index":548,"title":{},"body":{"injectables/ClockService.html":{}}}],["models/actions/wizard.act",{"_index":2152,"title":{},"body":{"injectables/WizardService.html":{}}}],["models/base.compon",{"_index":315,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["models/reduc",{"_index":308,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SimulationModule.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"injectables/WizardService.html":{}}}],["models/reducers/wizard.reduc",{"_index":2153,"title":{},"body":{"injectables/WizardService.html":{}}}],["models/ui",{"_index":1026,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["moder",{"_index":451,"title":{},"body":{"components/ChartsComponent.html":{},"miscellaneous/variables.html":{}}}],["moderatetraff",{"_index":2438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["moderatetrafficchart",{"_index":375,"title":{},"body":{"components/ChartsComponent.html":{}}}],["moderatetrafficcolor",{"_index":2399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["moderatetrafficctx",{"_index":376,"title":{},"body":{"components/ChartsComponent.html":{}}}],["modifi",{"_index":2280,"title":{},"body":{"license.html":{}}}],["modul",{"_index":133,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/MaterialModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"modules/WeatherModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/MaterialModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithprovid",{"_index":1653,"title":{},"body":{"modules/SharedModule.html":{}}}],["moment",{"_index":1624,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["more",{"_index":830,"title":{},"body":{"classes/Edge.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["more_vert",{"_index":1381,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mout",{"_index":2201,"title":{},"body":{"dependencies.html":{}}}],["mout/array/combin",{"_index":763,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["mout/lang/deepclon",{"_index":1348,"title":{},"body":{"interfaces/MapState.html":{},"interfaces/WizardState.html":{}}}],["move",{"_index":917,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["ms",{"_index":538,"title":{},"body":{"injectables/ClockService.html":{},"classes/EnumValues.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["multi",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["multinomi",{"_index":948,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["n",{"_index":688,"title":{},"body":{"injectables/DemandService.html":{}}}],["name",{"_index":79,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"classes/AppPreloadingStrategy.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"miscellaneous/functions.html":{}}}],["navigate_next",{"_index":365,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{}}}],["navigator.geoloc",{"_index":1598,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["navigator.geolocation.getcurrentposit",{"_index":1275,"title":{},"body":{"injectables/LocationService.html":{}}}],["neighbor",{"_index":915,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["network",{"_index":265,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{}}}],["network.servic",{"_index":1398,"title":{},"body":{"modules/NetworkModule.html":{}}}],["network/graph",{"_index":311,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{}}}],["network/network.modul",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["network/network.servic",{"_index":304,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"injectables/SchedulerService.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WeatherComponent.html":{}}}],["network/weather/weath",{"_index":310,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/WeatherComponent.html":{}}}],["network/weather/weather.servic",{"_index":305,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/SchedulerService.html":{},"components/WeatherComponent.html":{}}}],["networkdata",{"_index":2357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["networkmodul",{"_index":146,"title":{"modules/NetworkModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NetworkModule.html":{},"modules.html":{},"overview.html":{}}}],["networkservic",{"_index":266,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"modules/NetworkModule.html":{},"injectables/SchedulerService.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WeatherComponent.html":{},"overview.html":{}}}],["new",{"_index":34,"title":{},"body":{"components/AboutComponent.html":{},"components/ChartsComponent.html":{},"classes/Edge.html":{},"components/FooterComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["next",{"_index":918,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{}}}],["nextdt",{"_index":2081,"title":{},"body":{"injectables/WeatherService.html":{}}}],["nextindex",{"_index":1089,"title":{},"body":{"classes/GoOn.html":{},"injectables/SchedulerService.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["ng",{"_index":1911,"title":{},"body":{"modules/UiModule.html":{},"dependencies.html":{}}}],["ngafterviewinit",{"_index":379,"title":{},"body":{"components/ChartsComponent.html":{},"components/HomeComponent.html":{},"components/WeatherComponent.html":{}}}],["ngmodul",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/MaterialModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"modules/WeatherModule.html":{}}}],["ngonchang",{"_index":1096,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["ngonchanges(chang",{"_index":1131,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["ngondestroy",{"_index":220,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{}}}],["ngoninit",{"_index":22,"title":{},"body":{"components/AboutComponent.html":{},"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["ngrx",{"_index":1078,"title":{},"body":{"classes/GoOn.html":{},"classes/MapChanged.html":{},"interfaces/MapState.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["ngrx/store",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"interfaces/SimulationState.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"injectables/WizardService.html":{},"dependencies.html":{}}}],["node",{"_index":693,"title":{"classes/Node.html":{}},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.count",{"_index":925,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.incomingedg",{"_index":853,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.incomingedges.length",{"_index":1044,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["node.j",{"_index":2248,"title":{},"body":{"index.html":{}}}],["node.label",{"_index":877,"title":{},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.label).length",{"_index":1055,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["node.nodeid",{"_index":847,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.outgoingedg",{"_index":856,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.outgoingedges.length",{"_index":1045,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["nodeid",{"_index":788,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["noninfring",{"_index":2301,"title":{},"body":{"license.html":{}}}],["normal",{"_index":471,"title":{},"body":{"components/ChartsComponent.html":{},"miscellaneous/variables.html":{}}}],["notic",{"_index":2291,"title":{},"body":{"license.html":{}}}],["notrafficcolor",{"_index":2397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["npm",{"_index":2249,"title":{},"body":{"index.html":{}}}],["npm@latest",{"_index":2250,"title":{},"body":{"index.html":{}}}],["null",{"_index":558,"title":{},"body":{"injectables/ClockService.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"injectables/LocationService.html":{},"interfaces/MapState.html":{},"classes/Statistics.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":30,"title":{},"body":{"components/AboutComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Simulation.html":{},"components/SimulationComponent.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["numer",{"_index":957,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{}}}],["numeric'},{'nam",{"_index":107,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["numeric.component.html",{"_index":1410,"title":{},"body":{"components/NumericComponent.html":{}}}],["numeric.component.scss",{"_index":1409,"title":{},"body":{"components/NumericComponent.html":{}}}],["numeric/numeric.compon",{"_index":1929,"title":{},"body":{"modules/UiModule.html":{}}}],["numericalsimul",{"_index":600,"title":{"interfaces/NumericalSimulation.html":{}},"body":{"interfaces/Counts.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{}}}],["numericcompon",{"_index":106,"title":{"components/NumericComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["o",{"_index":357,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["o/d",{"_index":612,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":2339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(e).filter((key",{"_index":979,"title":{},"body":{"classes/EnumValues.html":{}}}],["observ",{"_index":193,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"injectables/WeatherService.html":{}}}],["observable.create((observ",{"_index":1265,"title":{},"body":{"injectables/LocationService.html":{}}}],["observer.complet",{"_index":1273,"title":{},"body":{"injectables/LocationService.html":{}}}],["observer.error(error",{"_index":1278,"title":{},"body":{"injectables/LocationService.html":{}}}],["observer.error(statu",{"_index":1274,"title":{},"body":{"injectables/LocationService.html":{}}}],["observer.next(posit",{"_index":1276,"title":{},"body":{"injectables/LocationService.html":{}}}],["observer.next(result",{"_index":1272,"title":{},"body":{"injectables/LocationService.html":{}}}],["obtain",{"_index":2051,"title":{},"body":{"injectables/WeatherService.html":{},"license.html":{}}}],["odmatrix",{"_index":614,"title":{},"body":{"injectables/DemandService.html":{}}}],["odmatrixassign",{"_index":628,"title":{},"body":{"injectables/DemandService.html":{}}}],["odmatrixassignment[n][i",{"_index":689,"title":{},"body":{"injectables/DemandService.html":{}}}],["odpair",{"_index":275,"title":{"interfaces/OdPair.html":{}},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"components/WizardComponent.html":{}}}],["odpair.destin",{"_index":1043,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["odpair.origin",{"_index":1051,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["odpairs.filter(pair",{"_index":1052,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["odpairs.length",{"_index":1037,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["odpairs.map((pair",{"_index":328,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["odpairs[odpairs.length",{"_index":1038,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["odpairs[uiconfig.maxodpair",{"_index":1041,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["odpairscontrol",{"_index":342,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["odpairscontrol.length",{"_index":350,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["odpairscontrol.removeat(i",{"_index":351,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["of(nul",{"_index":198,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["offici",{"_index":63,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["offset",{"_index":1211,"title":{},"body":{"components/HomeComponent.html":{},"injectables/WeatherService.html":{}}}],["on",{"_index":529,"title":{},"body":{"injectables/ClockService.html":{},"injectables/DemandService.html":{}}}],["onchang",{"_index":1094,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["ondestroy",{"_index":218,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChartsComponent.html":{},"components/UiComponent.html":{}}}],["oneway",{"_index":868,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["oninit",{"_index":10,"title":{},"body":{"components/AboutComponent.html":{},"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["opac",{"_index":1204,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["open",{"_index":1542,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["opendialog",{"_index":1848,"title":{},"body":{"components/UiComponent.html":{}}}],["opendialog(data",{"_index":1863,"title":{},"body":{"components/UiComponent.html":{}}}],["opensnackbar",{"_index":1849,"title":{},"body":{"components/UiComponent.html":{}}}],["opensnackbar(messag",{"_index":1865,"title":{},"body":{"components/UiComponent.html":{}}}],["openweathermap",{"_index":2052,"title":{},"body":{"injectables/WeatherService.html":{},"index.html":{}}}],["oper",{"_index":1493,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["option",{"_index":192,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"miscellaneous/functions.html":{}}}],["options).pip",{"_index":2066,"title":{},"body":{"injectables/WeatherService.html":{}}}],["origin",{"_index":703,"title":{},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["originalpath",{"_index":797,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["otherwis",{"_index":2311,"title":{},"body":{"license.html":{}}}],["out",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"license.html":{},"overview.html":{}}}],["outgoingedg",{"_index":792,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["over_query_limit",{"_index":1593,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["overview",{"_index":2315,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owldatetimemodul",{"_index":1909,"title":{},"body":{"modules/UiModule.html":{}}}],["owlnativedatetimemodul",{"_index":1910,"title":{},"body":{"modules/UiModule.html":{}}}],["packag",{"_index":2175,"title":{"dependencies.html":{}},"body":{}}],["paid",{"_index":1541,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["pair",{"_index":281,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["pair.demand",{"_index":329,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["pair.destin",{"_index":1054,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["pair.origin",{"_index":1053,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["pair.startingtim",{"_index":330,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["pair.value.destin",{"_index":360,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{}}}],["pair.value.origin",{"_index":359,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{}}}],["pairs,paths,edg",{"_index":650,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["pairsvalid",{"_index":2105,"title":{},"body":{"components/WizardComponent.html":{},"miscellaneous/functions.html":{}}}],["panel",{"_index":1881,"title":{},"body":{"components/UiComponent.html":{}}}],["panelclass",{"_index":1896,"title":{},"body":{"components/UiComponent.html":{}}}],["param",{"_index":675,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{}}}],["paramet",{"_index":191,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["part",{"_index":1840,"title":{},"body":{"components/TermsComponent.html":{}}}],["particular",{"_index":774,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"license.html":{}}}],["past",{"_index":1538,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["path",{"_index":203,"title":{"interfaces/Path.html":{}},"body":{"modules/AppRoutingModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"modules/UiRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["path.cost",{"_index":1174,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["path.edg",{"_index":1173,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["path.nod",{"_index":1172,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["path.pathid",{"_index":1171,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["path.t",{"_index":1156,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["path.ts:23",{"_index":1162,"title":{},"body":{"classes/Heap.html":{}}}],["path.ts:29",{"_index":1169,"title":{},"body":{"classes/Heap.html":{}}}],["path.ts:37",{"_index":1167,"title":{},"body":{"classes/Heap.html":{}}}],["path.ts:45",{"_index":1165,"title":{},"body":{"classes/Heap.html":{}}}],["path.ts:49",{"_index":1164,"title":{},"body":{"classes/Heap.html":{}}}],["patha",{"_index":932,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["patha.filter((edgeofa",{"_index":938,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["patha.length",{"_index":942,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["pathb",{"_index":934,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["pathb.find((edgeofb",{"_index":939,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["pathcost",{"_index":952,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["pathid",{"_index":907,"title":{},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["pathmatch",{"_index":206,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/UiRoutingModule.html":{}}}],["pathtyp",{"_index":769,"title":{},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/enumerations.html":{}}}],["pathtype.dist",{"_index":1063,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["paus",{"_index":508,"title":{},"body":{"injectables/ClockService.html":{},"components/SimulationComponent.html":{},"miscellaneous/enumerations.html":{}}}],["payload",{"_index":586,"title":{},"body":{"injectables/ClockService.html":{},"classes/GoOn.html":{},"classes/MapChanged.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{}}}],["pend",{"_index":1083,"title":{},"body":{"classes/GoOn.html":{},"components/SearchForTheAreaComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["perform",{"_index":528,"title":{},"body":{"injectables/ClockService.html":{},"injectables/SchedulerService.html":{}}}],["period",{"_index":1436,"title":{},"body":{"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"interfaces/SimulationState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["periods.simulatedtimeinterv",{"_index":1699,"title":{},"body":{"components/SimulationComponent.html":{}}}],["periods.simulatedtimeperiod",{"_index":1702,"title":{},"body":{"components/SimulationComponent.html":{}}}],["periods.timeinterv",{"_index":1694,"title":{},"body":{"components/SimulationComponent.html":{}}}],["periods.timeperiod",{"_index":1696,"title":{},"body":{"components/SimulationComponent.html":{}}}],["periodschang",{"_index":1430,"title":{"classes/PeriodsChanged.html":{}},"body":{"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["permiss",{"_index":1604,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"license.html":{}}}],["permit",{"_index":2287,"title":{},"body":{"license.html":{}}}],["person",{"_index":1446,"title":{},"body":{"components/PrivacyComponent.html":{},"license.html":{}}}],["pick",{"_index":1912,"title":{},"body":{"modules/UiModule.html":{},"dependencies.html":{}}}],["platform",{"_index":2258,"title":{},"body":{"index.html":{}}}],["play_arrow",{"_index":1712,"title":{},"body":{"components/SimulationComponent.html":{}}}],["pleas",{"_index":1471,"title":{},"body":{"components/PrivacyComponent.html":{},"injectables/SchedulerService.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["plugin",{"_index":2207,"title":{},"body":{"dependencies.html":{}}}],["png",{"_index":1996,"title":{},"body":{"components/WeatherComponent.html":{}}}],["poi",{"_index":2383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["point",{"_index":783,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["polici",{"_index":1445,"title":{},"body":{"components/PrivacyComponent.html":{},"components/TermsComponent.html":{}}}],["polylin",{"_index":799,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["poorli",{"_index":2412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pop",{"_index":1160,"title":{},"body":{"classes/Heap.html":{}}}],["pop(pathid",{"_index":1166,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["populatechart",{"_index":380,"title":{},"body":{"components/ChartsComponent.html":{}}}],["portion",{"_index":2294,"title":{},"body":{"license.html":{}}}],["posit",{"_index":473,"title":{},"body":{"components/ChartsComponent.html":{},"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["position.coords.latitud",{"_index":1600,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["position.coords.longitud",{"_index":1601,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["positionerror",{"_index":1277,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["predt",{"_index":2076,"title":{},"body":{"injectables/WeatherService.html":{}}}],["preload",{"_index":183,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{}}}],["preload(rout",{"_index":186,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["preloadingstrategi",{"_index":185,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{}}}],["prerequisit",{"_index":2261,"title":{},"body":{"index.html":{}}}],["presscontrol",{"_index":509,"title":{},"body":{"injectables/ClockService.html":{},"components/SimulationComponent.html":{}}}],["presscontrol(control",{"_index":521,"title":{},"body":{"injectables/ClockService.html":{},"components/SimulationComponent.html":{}}}],["prev",{"_index":1790,"title":{},"body":{"classes/Statistics.html":{}}}],["prev.cost",{"_index":1179,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["prev.heavytrafficcount",{"_index":1786,"title":{},"body":{"classes/Statistics.html":{}}}],["prev.moderatetrafficcount",{"_index":1787,"title":{},"body":{"classes/Statistics.html":{}}}],["privaci",{"_index":211,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/PrivacyComponent.html":{},"components/TermsComponent.html":{}}}],["privacy'},{'nam",{"_index":109,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["privacy.component.html",{"_index":1442,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["privacy.component.scss",{"_index":1441,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["privacy/privacy.compon",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["privacycompon",{"_index":108,"title":{"components/PrivacyComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["privat",{"_index":317,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{}}}],["probabl",{"_index":659,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["process",{"_index":537,"title":{},"body":{"injectables/ClockService.html":{},"components/PrivacyComponent.html":{},"components/StatisticsComponent.html":{}}}],["processingtim",{"_index":501,"title":{},"body":{"injectables/ClockService.html":{}}}],["product",{"_index":2355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profil",{"_index":1468,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["project",{"_index":53,"title":{},"body":{"components/AboutComponent.html":{},"injectables/SchedulerService.html":{},"index.html":{}}}],["promis",{"_index":243,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{}}}],["propagateflow",{"_index":536,"title":{},"body":{"injectables/ClockService.html":{}}}],["properti",{"_index":19,"title":{},"body":{"components/AboutComponent.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"interfaces/SimulationState.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["propertynam",{"_index":1140,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["protect",{"_index":708,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["provid",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/NetworkModule.html":{},"components/PrivacyComponent.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"interfaces/WizardState.html":{},"license.html":{},"overview.html":{}}}],["public",{"_index":506,"title":{},"body":{"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"modules/SharedModule.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"classes/Statistics.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{}}}],["publish",{"_index":2282,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":827,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"license.html":{}}}],["pursuant",{"_index":1449,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["push",{"_index":1161,"title":{},"body":{"classes/Heap.html":{}}}],["push(path",{"_index":1168,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["putinerror",{"_index":2134,"title":{},"body":{"injectables/WizardService.html":{}}}],["putinerror(error",{"_index":2142,"title":{},"body":{"injectables/WizardService.html":{}}}],["putonhold",{"_index":2135,"title":{},"body":{"injectables/WizardService.html":{}}}],["putonhold(messag",{"_index":2144,"title":{},"body":{"injectables/WizardService.html":{}}}],["qs",{"_index":2215,"title":{},"body":{"dependencies.html":{}}}],["queue",{"_index":1163,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["quick",{"_index":510,"title":{},"body":{"injectables/ClockService.html":{},"miscellaneous/enumerations.html":{}}}],["quota",{"_index":1539,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["rain",{"_index":2014,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["rainintens",{"_index":1999,"title":{},"body":{"interfaces/WeatherConditions.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["rate",{"_index":2426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reactiveformsmodul",{"_index":1659,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["readonli",{"_index":1073,"title":{},"body":{"classes/GoOn.html":{},"classes/MapChanged.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{}}}],["real",{"_index":47,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["receiveact",{"_index":221,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["rectangl",{"_index":1318,"title":{},"body":{"components/MapComponent.html":{}}}],["redirectto",{"_index":204,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reduc",{"_index":1351,"title":{},"body":{"interfaces/MapState.html":{},"modules/SimulationModule.html":{},"interfaces/SimulationState.html":{},"modules/UiModule.html":{},"interfaces/UiState.html":{},"interfaces/WizardState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["reducers/map.reduc",{"_index":1943,"title":{},"body":{"interfaces/UiState.html":{}}}],["reducers/simulation.reduc",{"_index":1733,"title":{},"body":{"interfaces/SimulationState.html":{}}}],["reducers/wizard.reduc",{"_index":1941,"title":{},"body":{"interfaces/UiState.html":{}}}],["reduct",{"_index":2025,"title":{},"body":{"injectables/WeatherService.html":{}}}],["ref",{"_index":779,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["refer",{"_index":1472,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["regul",{"_index":1456,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["relat",{"_index":826,"title":{"classes/Relation.html":{}},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["relation'",{"_index":777,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["relationid",{"_index":831,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["relationship",{"_index":829,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["releas",{"_index":1841,"title":{},"body":{"components/TermsComponent.html":{}}}],["remain",{"_index":1462,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["remov",{"_index":926,"title":{},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{}}}],["removefromerror",{"_index":2136,"title":{},"body":{"injectables/WizardService.html":{}}}],["removefromwait",{"_index":2137,"title":{},"body":{"injectables/WizardService.html":{}}}],["render",{"_index":1962,"title":{},"body":{"components/WeatherComponent.html":{}}}],["renderer2",{"_index":1965,"title":{},"body":{"components/WeatherComponent.html":{}}}],["repositori",{"_index":61,"title":{},"body":{"components/AboutComponent.html":{}}}],["repres",{"_index":781,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["request",{"_index":1597,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["request_deni",{"_index":1594,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["requir",{"_index":1107,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{},"index.html":{}}}],["reset",{"_index":150,"title":{"classes/Reset.html":{}},"body":{"modules/AppModule.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/ClockService.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"modules/NetworkModule.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"modules/SharedModule.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["resetcondit",{"_index":1960,"title":{},"body":{"components/WeatherComponent.html":{}}}],["resetcount",{"_index":924,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["resourc",{"_index":2024,"title":{},"body":{"injectables/WeatherService.html":{}}}],["respons",{"_index":1235,"title":{},"body":{"injectables/LocationService.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["restrict",{"_index":2278,"title":{},"body":{"license.html":{}}}],["result",{"_index":127,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"interfaces/SimulationState.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results[0].geometry.location.lat",{"_index":1586,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["results[0].geometry.location.lng",{"_index":1588,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["retriev",{"_index":1531,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["return",{"_index":27,"title":{},"body":{"components/AboutComponent.html":{},"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["rgba(255,255,255,1.0",{"_index":469,"title":{},"body":{"components/ChartsComponent.html":{}}}],["right",{"_index":474,"title":{},"body":{"components/ChartsComponent.html":{},"license.html":{}}}],["road",{"_index":2384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roadmap",{"_index":1118,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["roberto",{"_index":76,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"license.html":{}}}],["roberto&nbsp;simonetti",{"_index":50,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{}}}],["role",{"_index":780,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["root",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'nam",{"_index":82,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["round",{"_index":663,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"miscellaneous/functions.html":{}}}],["round(1",{"_index":821,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["round(exps[z][n",{"_index":964,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["round(maxflow",{"_index":820,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["round(sum",{"_index":687,"title":{},"body":{"injectables/DemandService.html":{}}}],["round(this.dens",{"_index":816,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["round(this.dist",{"_index":807,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["round(this.getkjam",{"_index":814,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["round(valu",{"_index":2242,"title":{},"body":{"miscellaneous/functions.html":{}}}],["roundabout",{"_index":874,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["rout",{"_index":187,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{}}}],["route.data",{"_index":196,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["route.data.preload",{"_index":197,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["router",{"_index":1851,"title":{},"body":{"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["routermodul",{"_index":200,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UiRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["routermodule.forchild",{"_index":1934,"title":{},"body":{"modules/UiRoutingModule.html":{}}}],["routermodule.forroot",{"_index":202,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.modul",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"modules/UiModule.html":{}}}],["routing.module.t",{"_index":199,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/UiRoutingModule.html":{}}}],["run",{"_index":541,"title":{},"body":{"injectables/ClockService.html":{},"index.html":{}}}],["rxj",{"_index":195,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"injectables/WeatherService.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":544,"title":{},"body":{"injectables/ClockService.html":{},"injectables/SchedulerService.html":{},"components/UiComponent.html":{},"injectables/WeatherService.html":{}}}],["s",{"_index":987,"title":{},"body":{"classes/EnumValues.html":{},"components/NumericComponent.html":{},"components/SimulationComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["s/end.html\">renderer2",{"_index":1963,"title":{},"body":{"components/WeatherComponent.html":{}}}],["s/map.html\">google.maps.latlngliter",{"_index":1259,"title":{},"body":{"injectables/LocationService.html":{}}}],["same",{"_index":1050,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["save",{"_index":1465,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["scale",{"_index":1202,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["scaleid",{"_index":461,"title":{},"body":{"components/ChartsComponent.html":{}}}],["scalelabel",{"_index":2343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scalex",{"_index":1209,"title":{},"body":{"components/HomeComponent.html":{}}}],["scatter",{"_index":2009,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["scatteredcloud",{"_index":2008,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["schedul",{"_index":1857,"title":{},"body":{"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["scheduledemand",{"_index":1480,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["scheduledemand(data",{"_index":1489,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["schedulenetwork",{"_index":1481,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["schedulenetwork(data",{"_index":1495,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["scheduler.servic",{"_index":2104,"title":{},"body":{"components/WizardComponent.html":{}}}],["schedulerservic",{"_index":1478,"title":{"injectables/SchedulerService.html":{}},"body":{"injectables/SchedulerService.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["schedulesimul",{"_index":1482,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["schedulesimulation(data",{"_index":1499,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["search",{"_index":111,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["search(address",{"_index":1576,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["searchfortheareacompon",{"_index":110,"title":{"components/SearchForTheAreaComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["second",{"_index":662,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["select",{"_index":114,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"miscellaneous/variables.html":{}}}],["selectionchang",{"_index":2095,"title":{},"body":{"components/WizardComponent.html":{}}}],["selectionoftheareacompon",{"_index":113,"title":{"components/SelectionOfTheAreaComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["sell",{"_index":2286,"title":{},"body":{"license.html":{}}}],["sendact",{"_index":222,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["sent",{"_index":230,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["sequenc",{"_index":1491,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["serve:devapp",{"_index":2266,"title":{},"body":{"index.html":{}}}],["servic",{"_index":325,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"injectables/LocationService.html":{},"components/PrivacyComponent.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/TermsComponent.html":{}}}],["set",{"_index":576,"title":{},"body":{"injectables/ClockService.html":{},"classes/Edge.html":{},"components/GoogleMapComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["set('appid",{"_index":2063,"title":{},"body":{"injectables/WeatherService.html":{}}}],["set('lat",{"_index":2059,"title":{},"body":{"injectables/WeatherService.html":{}}}],["set('lon",{"_index":2061,"title":{},"body":{"injectables/WeatherService.html":{}}}],["setcondit",{"_index":1961,"title":{},"body":{"components/WeatherComponent.html":{}}}],["setconditions(weath",{"_index":1974,"title":{},"body":{"components/WeatherComponent.html":{}}}],["setlatlng",{"_index":1247,"title":{},"body":{"injectables/LocationService.html":{}}}],["setlatlng(latlng",{"_index":1258,"title":{},"body":{"injectables/LocationService.html":{}}}],["settimeout",{"_index":1505,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["shall",{"_index":2292,"title":{},"body":{"license.html":{}}}],["shared/can",{"_index":1873,"title":{},"body":{"components/UiComponent.html":{},"modules/UiRoutingModule.html":{}}}],["shared/info",{"_index":1876,"title":{},"body":{"components/UiComponent.html":{}}}],["shared/messag",{"_index":1875,"title":{},"body":{"components/UiComponent.html":{}}}],["shared/shared.modul",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"modules/UiModule.html":{}}}],["sharededg",{"_index":937,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["sharededges.length",{"_index":943,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["sharedmodul",{"_index":147,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["sharedmodule.forroot",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["shortest",{"_index":766,"title":{},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["shortestpath",{"_index":836,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["shortestpaths.length",{"_index":931,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["shortestpaths[i",{"_index":935,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["shortestpaths[i].edg",{"_index":933,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["shortestpathsprob",{"_index":893,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["shortestpathsprobabilities[z].push(p",{"_index":967,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["show",{"_index":1183,"title":{},"body":{"components/HomeComponent.html":{},"components/MapComponent.html":{}}}],["shower",{"_index":2013,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["showerrain",{"_index":2012,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["shows/hid",{"_index":1338,"title":{},"body":{"components/MapComponent.html":{}}}],["simonetti",{"_index":77,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"license.html":{}}}],["simplechang",{"_index":1136,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["simul",{"_index":44,"title":{"interfaces/Simulation.html":{}},"body":{"components/AboutComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"components/HomeComponent.html":{},"injectables/LocationService.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"interfaces/SimulationState.html":{},"components/StatisticsComponent.html":{},"components/WizardComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["simulatedtimeinterv",{"_index":502,"title":{},"body":{"injectables/ClockService.html":{},"components/SimulationComponent.html":{},"miscellaneous/variables.html":{}}}],["simulatedtimeperiod",{"_index":503,"title":{},"body":{"injectables/ClockService.html":{},"components/SimulationComponent.html":{}}}],["simulation'},{'nam",{"_index":116,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["simulation.avgspe",{"_index":1707,"title":{},"body":{"components/SimulationComponent.html":{}}}],["simulation.component.html",{"_index":1673,"title":{},"body":{"components/SimulationComponent.html":{}}}],["simulation.component.scss",{"_index":1672,"title":{},"body":{"components/SimulationComponent.html":{}}}],["simulation.count",{"_index":1705,"title":{},"body":{"components/SimulationComponent.html":{}}}],["simulation.data",{"_index":1421,"title":{},"body":{"components/NumericComponent.html":{}}}],["simulation.servic",{"_index":545,"title":{},"body":{"injectables/ClockService.html":{},"modules/SimulationModule.html":{}}}],["simulation/clock.servic",{"_index":1504,"title":{},"body":{"injectables/SchedulerService.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{}}}],["simulation/models/reduc",{"_index":1418,"title":{},"body":{"components/NumericComponent.html":{},"components/SimulationComponent.html":{}}}],["simulation/models/simul",{"_index":1419,"title":{},"body":{"components/NumericComponent.html":{},"components/SimulationComponent.html":{}}}],["simulation/simulation.modul",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["simulation/simulation.servic",{"_index":407,"title":{},"body":{"components/ChartsComponent.html":{},"injectables/SchedulerService.html":{},"components/StatisticsComponent.html":{}}}],["simulation?').pip",{"_index":1888,"title":{},"body":{"components/UiComponent.html":{}}}],["simulation?').subscrib",{"_index":1892,"title":{},"body":{"components/UiComponent.html":{}}}],["simulationact",{"_index":1439,"title":{},"body":{"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"miscellaneous/typealiases.html":{}}}],["simulationactiontyp",{"_index":547,"title":{},"body":{"injectables/ClockService.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"miscellaneous/enumerations.html":{}}}],["simulationactiontypes.periodschang",{"_index":585,"title":{},"body":{"injectables/ClockService.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{}}}],["simulationactiontypes.reset",{"_index":1438,"title":{},"body":{"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{}}}],["simulationactiontypes.simulationchang",{"_index":1437,"title":{},"body":{"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{}}}],["simulationactiontypes.simulationend",{"_index":587,"title":{},"body":{"injectables/ClockService.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{}}}],["simulationchang",{"_index":1434,"title":{"classes/SimulationChanged.html":{}},"body":{"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["simulationcompon",{"_index":115,"title":{"components/SimulationComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["simulationend",{"_index":1435,"title":{"classes/SimulationEnded.html":{}},"body":{"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["simulationmodul",{"_index":148,"title":{"modules/SimulationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SimulationModule.html":{},"modules.html":{},"overview.html":{}}}],["simulationreduc",{"_index":2235,"title":{},"body":{"miscellaneous/functions.html":{}}}],["simulationreducer(st",{"_index":2246,"title":{},"body":{"miscellaneous/functions.html":{}}}],["simulationservic",{"_index":386,"title":{},"body":{"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/SchedulerService.html":{},"modules/SimulationModule.html":{},"components/StatisticsComponent.html":{},"overview.html":{}}}],["simulationst",{"_index":1726,"title":{"interfaces/SimulationState.html":{}},"body":{"interfaces/SimulationState.html":{},"miscellaneous/variables.html":{}}}],["simulationstatist",{"_index":1815,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["simulationstatistics.totalavgspe",{"_index":1824,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["ski",{"_index":2004,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["skip_next",{"_index":1714,"title":{},"body":{"components/SimulationComponent.html":{}}}],["slow",{"_index":511,"title":{},"body":{"injectables/ClockService.html":{},"miscellaneous/enumerations.html":{}}}],["snack",{"_index":104,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["snackbar",{"_index":1852,"title":{},"body":{"components/UiComponent.html":{}}}],["snow",{"_index":2016,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["snowintens",{"_index":2000,"title":{},"body":{"interfaces/WeatherConditions.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["softwar",{"_index":2275,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"interfaces/SimulationState.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["sp",{"_index":2409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["space",{"_index":2407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specif",{"_index":782,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["speed",{"_index":605,"title":{},"body":{"interfaces/Counts.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Simulation.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{}}}],["squar",{"_index":649,"title":{},"body":{"injectables/DemandService.html":{}}}],["src",{"_index":2241,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../chart",{"_index":2323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../clock.service.t",{"_index":2224,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.prod.t",{"_index":2327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":2326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.test.t",{"_index":2328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../graph.t",{"_index":2226,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../home.transition.t",{"_index":2332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../map.actions.t",{"_index":2225,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../map.reducer.t",{"_index":2233,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../map.style.t",{"_index":2334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../material.module.t",{"_index":2335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../pairs.directive.t",{"_index":2234,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../reducers.t",{"_index":2325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../shared.module.t",{"_index":2336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../simulation.actions.t",{"_index":2227,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../simulation.reducer.t",{"_index":2236,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../ui",{"_index":2337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../utils.t",{"_index":2230,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../weather.t",{"_index":2228,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../wizard.actions.t",{"_index":2229,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../wizard.reducer.t",{"_index":2238,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/about/about.component.t",{"_index":8,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/about/about.component.ts:10",{"_index":25,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/about/about.component.ts:14",{"_index":26,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/app",{"_index":182,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"index.html":{}}}],["src/app/app.component.t",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/demand/demand.module.t",{"_index":609,"title":{},"body":{"modules/DemandModule.html":{}}}],["src/app/demand/demand.service.t",{"_index":611,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:104",{"_index":641,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:121",{"_index":658,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:136",{"_index":653,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:17",{"_index":661,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:22",{"_index":625,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:26",{"_index":656,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:33",{"_index":634,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:45",{"_index":643,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:49",{"_index":637,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:55",{"_index":644,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:59",{"_index":639,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:71",{"_index":647,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:85",{"_index":629,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/home/home.component.t",{"_index":1180,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:15",{"_index":1184,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:19",{"_index":1186,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:23",{"_index":1185,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.transition.t",{"_index":2371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/location/location.module.t",{"_index":1232,"title":{},"body":{"modules/LocationModule.html":{}}}],["src/app/location/location.service.t",{"_index":1234,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:15",{"_index":1262,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:17",{"_index":1248,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:25",{"_index":1257,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:33",{"_index":1250,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:53",{"_index":1254,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:68",{"_index":1256,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:72",{"_index":1260,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/network/graph.t",{"_index":690,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/network/graph.ts:101",{"_index":738,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:103",{"_index":716,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:105",{"_index":739,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:110",{"_index":717,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:115",{"_index":722,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:120",{"_index":723,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:125",{"_index":730,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:130",{"_index":740,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:132",{"_index":715,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:134",{"_index":729,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:139",{"_index":734,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:144",{"_index":736,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:146",{"_index":721,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:152",{"_index":714,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:161",{"_index":742,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:192",{"_index":744,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:200",{"_index":757,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:204",{"_index":756,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:208",{"_index":754,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:212",{"_index":750,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:225",{"_index":1475,"title":{},"body":{"classes/Relation.html":{}}}],["src/app/network/graph.ts:227",{"_index":1474,"title":{},"body":{"classes/Relation.html":{}}}],["src/app/network/graph.ts:229",{"_index":1473,"title":{},"body":{"classes/Relation.html":{}}}],["src/app/network/graph.ts:65",{"_index":1405,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:67",{"_index":1402,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:69",{"_index":1403,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:71",{"_index":1404,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:73",{"_index":1407,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:75",{"_index":1401,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:77",{"_index":1406,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:79",{"_index":1400,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:84",{"_index":1399,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:97",{"_index":728,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:99",{"_index":733,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/k",{"_index":1155,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["src/app/network/network.module.t",{"_index":1396,"title":{},"body":{"modules/NetworkModule.html":{}}}],["src/app/network/weather/weather.module.t",{"_index":2020,"title":{},"body":{"modules/WeatherModule.html":{}}}],["src/app/network/weather/weather.service.t",{"_index":2022,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:110",{"_index":2037,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:120",{"_index":2048,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:18",{"_index":2034,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:22",{"_index":2046,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:26",{"_index":2041,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:34",{"_index":2043,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:54",{"_index":2050,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:81",{"_index":2039,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:95",{"_index":2040,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.t",{"_index":1998,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/privacy/privacy.component.t",{"_index":1440,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["src/app/privacy/privacy.component.ts:12",{"_index":1444,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["src/app/privacy/privacy.component.ts:8",{"_index":1443,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["src/app/shared/can",{"_index":238,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{}}}],["src/app/shared/footer/footer.component.t",{"_index":1065,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/footer/footer.component.ts:10",{"_index":1070,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/footer/footer.component.ts:12",{"_index":1069,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/info",{"_index":1215,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["src/app/shared/material.module.t",{"_index":1360,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/messag",{"_index":1384,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["src/app/shared/shared.module.t",{"_index":1651,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["src/app/simulation/clock.service.t",{"_index":498,"title":{},"body":{"injectables/ClockService.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/simulation/clock.service.ts:103",{"_index":526,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:115",{"_index":520,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:121",{"_index":530,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:141",{"_index":527,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:148",{"_index":525,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:163",{"_index":523,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:180",{"_index":518,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:195",{"_index":531,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:26",{"_index":540,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:31",{"_index":539,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:36",{"_index":533,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:41",{"_index":535,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:43",{"_index":542,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:45",{"_index":532,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:47",{"_index":517,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:60",{"_index":524,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:70",{"_index":522,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:93",{"_index":519,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/models/actions/simulation.actions.t",{"_index":1431,"title":{},"body":{"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/simulation/models/actions/simulation.actions.ts:19",{"_index":1669,"title":{},"body":{"classes/SimulationChanged.html":{}}}],["src/app/simulation/models/actions/simulation.actions.ts:21",{"_index":1670,"title":{},"body":{"classes/SimulationChanged.html":{}}}],["src/app/simulation/models/actions/simulation.actions.ts:27",{"_index":1719,"title":{},"body":{"classes/SimulationEnded.html":{}}}],["src/app/simulation/models/actions/simulation.actions.ts:29",{"_index":1720,"title":{},"body":{"classes/SimulationEnded.html":{}}}],["src/app/simulation/models/actions/simulation.actions.ts:35",{"_index":1432,"title":{},"body":{"classes/PeriodsChanged.html":{}}}],["src/app/simulation/models/actions/simulation.actions.ts:37",{"_index":1433,"title":{},"body":{"classes/PeriodsChanged.html":{}}}],["src/app/simulation/models/actions/simulation.actions.ts:43",{"_index":1476,"title":{},"body":{"classes/Reset.html":{}}}],["src/app/simulation/models/actions/simulation.actions.ts:45",{"_index":1477,"title":{},"body":{"classes/Reset.html":{}}}],["src/app/simulation/models/reducers.t",{"_index":1727,"title":{},"body":{"interfaces/SimulationState.html":{},"miscellaneous/variables.html":{}}}],["src/app/simulation/models/reducers/simulation.reducer.t",{"_index":2245,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/simulation/models/simul",{"_index":596,"title":{},"body":{"interfaces/Counts.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{}}}],["src/app/simulation/simulation.module.t",{"_index":1723,"title":{},"body":{"modules/SimulationModule.html":{}}}],["src/app/simulation/statistics.t",{"_index":1741,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:12",{"_index":1775,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:16",{"_index":1767,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:20",{"_index":1777,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:24",{"_index":1757,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:30",{"_index":1765,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:34",{"_index":1761,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:38",{"_index":1759,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:44",{"_index":1763,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:68",{"_index":1769,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:72",{"_index":1773,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:76",{"_index":1779,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:8",{"_index":1771,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/terms/terms.component.t",{"_index":1832,"title":{},"body":{"components/TermsComponent.html":{}}}],["src/app/terms/terms.component.ts:12",{"_index":1836,"title":{},"body":{"components/TermsComponent.html":{}}}],["src/app/terms/terms.component.ts:8",{"_index":1835,"title":{},"body":{"components/TermsComponent.html":{}}}],["src/app/ui/charts/chart",{"_index":2338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/ui/charts/charts.component.t",{"_index":366,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:131",{"_index":392,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:137",{"_index":397,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:180",{"_index":396,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:186",{"_index":395,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:22",{"_index":403,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:24",{"_index":405,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:26",{"_index":401,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:28",{"_index":402,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:30",{"_index":404,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:32",{"_index":399,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:34",{"_index":387,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:44",{"_index":391,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:48",{"_index":389,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:54",{"_index":390,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:63",{"_index":398,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:67",{"_index":393,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:78",{"_index":394,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:82",{"_index":388,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/directives/pairs.directive.t",{"_index":2244,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/ui/map/googl",{"_index":1092,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["src/app/ui/map/map.component.t",{"_index":1288,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:128",{"_index":1296,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:24",{"_index":1298,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:27",{"_index":1306,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:29",{"_index":1299,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:30",{"_index":1300,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:31",{"_index":1302,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:32",{"_index":1303,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:33",{"_index":1304,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:34",{"_index":1301,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:35",{"_index":1305,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:37",{"_index":1293,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:55",{"_index":1294,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:60",{"_index":1297,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:64",{"_index":1295,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.style.t",{"_index":2377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/ui/models/actions/map.actions.t",{"_index":1281,"title":{},"body":{"classes/MapChanged.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/ui/models/actions/map.actions.ts:17",{"_index":1282,"title":{},"body":{"classes/MapChanged.html":{}}}],["src/app/ui/models/actions/map.actions.ts:19",{"_index":1283,"title":{},"body":{"classes/MapChanged.html":{}}}],["src/app/ui/models/actions/wizard.actions.t",{"_index":1072,"title":{},"body":{"classes/GoOn.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:20",{"_index":1826,"title":{},"body":{"classes/StepChanged.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:22",{"_index":1827,"title":{},"body":{"classes/StepChanged.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:28",{"_index":1828,"title":{},"body":{"classes/StepError.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:30",{"_index":1829,"title":{},"body":{"classes/StepError.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:36",{"_index":1830,"title":{},"body":{"classes/StepPending.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:38",{"_index":1831,"title":{},"body":{"classes/StepPending.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:44",{"_index":1075,"title":{},"body":{"classes/GoOn.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:46",{"_index":1076,"title":{},"body":{"classes/GoOn.html":{}}}],["src/app/ui/models/base.component.t",{"_index":214,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/base.component.ts:11",{"_index":226,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/base.component.ts:13",{"_index":225,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/base.component.ts:22",{"_index":232,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/base.component.ts:27",{"_index":227,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/base.component.ts:32",{"_index":231,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/base.component.ts:9",{"_index":224,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/reducers.t",{"_index":1936,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["src/app/ui/models/reducers/map.reducer.t",{"_index":1345,"title":{},"body":{"interfaces/MapState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/ui/models/reducers/wizard.reducer.t",{"_index":2157,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/ui/models/ui",{"_index":1279,"title":{},"body":{"interfaces/Map.html":{},"interfaces/Step.html":{},"miscellaneous/variables.html":{}}}],["src/app/ui/numeric/numeric.component.t",{"_index":1408,"title":{},"body":{"components/NumericComponent.html":{}}}],["src/app/ui/numeric/numeric.component.ts:17",{"_index":1417,"title":{},"body":{"components/NumericComponent.html":{}}}],["src/app/ui/numeric/numeric.component.ts:19",{"_index":1412,"title":{},"body":{"components/NumericComponent.html":{}}}],["src/app/ui/numeric/numeric.component.ts:27",{"_index":1413,"title":{},"body":{"components/NumericComponent.html":{}}}],["src/app/ui/numeric/numeric.component.ts:32",{"_index":1416,"title":{},"body":{"components/NumericComponent.html":{}}}],["src/app/ui/numeric/numeric.component.ts:36",{"_index":1414,"title":{},"body":{"components/NumericComponent.html":{}}}],["src/app/ui/numeric/numeric.component.ts:44",{"_index":1415,"title":{},"body":{"components/NumericComponent.html":{}}}],["src/app/ui/ui",{"_index":1933,"title":{},"body":{"modules/UiRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["src/app/ui/ui.component.t",{"_index":1845,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:102",{"_index":1860,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:106",{"_index":1866,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:114",{"_index":1864,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:24",{"_index":1870,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:26",{"_index":1868,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:28",{"_index":1869,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:30",{"_index":1871,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:32",{"_index":1858,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:43",{"_index":1862,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:77",{"_index":1861,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:83",{"_index":1859,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:93",{"_index":1867,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.module.t",{"_index":1908,"title":{},"body":{"modules/UiModule.html":{}}}],["src/app/ui/utils.t",{"_index":969,"title":{},"body":{"classes/EnumValues.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/ui/utils.ts:5",{"_index":974,"title":{},"body":{"classes/EnumValues.html":{}}}],["src/app/ui/utils.ts:9",{"_index":976,"title":{},"body":{"classes/EnumValues.html":{}}}],["src/app/ui/weather/weather.component.t",{"_index":1955,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:20",{"_index":1977,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:22",{"_index":1979,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:24",{"_index":1978,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:26",{"_index":1964,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:38",{"_index":1970,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:43",{"_index":1969,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:47",{"_index":1976,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:51",{"_index":1971,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:69",{"_index":1973,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:73",{"_index":1975,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:80",{"_index":1972,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:89",{"_index":1967,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/wizard/chang",{"_index":249,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["src/app/ui/wizard/estim",{"_index":999,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["src/app/ui/wizard/scheduler.service.t",{"_index":1479,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["src/app/ui/wizard/scheduler.service.ts:125",{"_index":1490,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["src/app/ui/wizard/scheduler.service.ts:13",{"_index":1486,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["src/app/ui/wizard/scheduler.service.ts:181",{"_index":1500,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["src/app/ui/wizard/scheduler.service.ts:29",{"_index":1487,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["src/app/ui/wizard/scheduler.service.ts:53",{"_index":1496,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["src/app/ui/wizard/search",{"_index":1566,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["src/app/ui/wizard/select",{"_index":1613,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.t",{"_index":1671,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:100",{"_index":1679,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:22",{"_index":1676,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:24",{"_index":1677,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:26",{"_index":1688,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:28",{"_index":1689,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:30",{"_index":1686,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:32",{"_index":1687,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:34",{"_index":1684,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:36",{"_index":1683,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:38",{"_index":1685,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:40",{"_index":1675,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:50",{"_index":1678,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:56",{"_index":1682,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:60",{"_index":1680,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:96",{"_index":1681,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.t",{"_index":1800,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:21",{"_index":1806,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:23",{"_index":1807,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:25",{"_index":1814,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:27",{"_index":1813,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:29",{"_index":1812,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:31",{"_index":1805,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:42",{"_index":1808,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:48",{"_index":1811,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:52",{"_index":1809,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:67",{"_index":1810,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/wizard.component.t",{"_index":2082,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:119",{"_index":2089,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:20",{"_index":2098,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:22",{"_index":2099,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:24",{"_index":2102,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:26",{"_index":2088,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:35",{"_index":2090,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:92",{"_index":2093,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.service.t",{"_index":2133,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:12",{"_index":2151,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:14",{"_index":2139,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:22",{"_index":2148,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:31",{"_index":2150,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:38",{"_index":2143,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:45",{"_index":2145,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:52",{"_index":2146,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:59",{"_index":2147,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:66",{"_index":2141,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/utils.t",{"_index":2239,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/environments/environment.prod.t",{"_index":2363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":2354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/environments/environment.test.t",{"_index":2368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start",{"_index":512,"title":{"index.html":{},"license.html":{}},"body":{"injectables/ClockService.html":{},"injectables/DemandService.html":{},"components/HomeComponent.html":{},"components/SimulationComponent.html":{},"miscellaneous/enumerations.html":{}}}],["startedvehicl",{"_index":599,"title":{},"body":{"interfaces/Counts.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{}}}],["startingtim",{"_index":276,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{}}}],["startingtimes.length",{"_index":674,"title":{},"body":{"injectables/DemandService.html":{}}}],["starttest",{"_index":2267,"title":{},"body":{"index.html":{}}}],["starttim",{"_index":590,"title":{},"body":{"injectables/ClockService.html":{}}}],["state",{"_index":583,"title":{},"body":{"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"components/NumericComponent.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"interfaces/SimulationState.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["state.currentstep",{"_index":2170,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["state.end",{"_index":2369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.error",{"_index":2172,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["state.map",{"_index":1355,"title":{},"body":{"interfaces/MapState.html":{},"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["state.pend",{"_index":2174,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["state.period",{"_index":2370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.simul",{"_index":1737,"title":{},"body":{"interfaces/SimulationState.html":{},"miscellaneous/variables.html":{}}}],["state.step",{"_index":2168,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["state.steps[action.payload.index",{"_index":2162,"title":{},"body":{"interfaces/WizardState.html":{}}}],["state.t",{"_index":597,"title":{},"body":{"interfaces/Counts.html":{},"interfaces/Map.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{},"interfaces/Step.html":{},"miscellaneous/variables.html":{}}}],["state.wizard",{"_index":1949,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["static",{"_index":970,"title":{},"body":{"classes/EnumValues.html":{},"modules/SharedModule.html":{},"classes/Statistics.html":{}}}],["statist",{"_index":377,"title":{"classes/Statistics.html":{}},"body":{"components/ChartsComponent.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["statistics'},{'nam",{"_index":118,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["statistics.component.html",{"_index":1802,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["statistics.component.scss",{"_index":1801,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["statisticscompon",{"_index":117,"title":{"components/StatisticsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["statu",{"_index":1269,"title":{},"body":{"injectables/LocationService.html":{}}}],["step",{"_index":513,"title":{"interfaces/Step.html":{}},"body":{"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"interfaces/Map.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/UiState.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["stepchang",{"_index":1080,"title":{"classes/StepChanged.html":{}},"body":{"classes/GoOn.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["stepclick",{"_index":2087,"title":{},"body":{"components/WizardComponent.html":{}}}],["stepclick(ev",{"_index":2091,"title":{},"body":{"components/WizardComponent.html":{}}}],["steperror",{"_index":1081,"title":{"classes/StepError.html":{}},"body":{"classes/GoOn.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["steppedlin",{"_index":440,"title":{},"body":{"components/ChartsComponent.html":{}}}],["steppend",{"_index":1082,"title":{"classes/StepPending.html":{}},"body":{"classes/GoOn.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["stepper",{"_index":2085,"title":{},"body":{"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["stepperselectionev",{"_index":2092,"title":{},"body":{"components/WizardComponent.html":{}}}],["steps[0",{"_index":1334,"title":{},"body":{"components/MapComponent.html":{}}}],["steps[0].data.cent",{"_index":1335,"title":{},"body":{"components/MapComponent.html":{}}}],["steps[2",{"_index":1337,"title":{},"body":{"components/MapComponent.html":{}}}],["steps[2].data.odpair",{"_index":1339,"title":{},"body":{"components/MapComponent.html":{}}}],["steps[3",{"_index":1341,"title":{},"body":{"components/MapComponent.html":{}}}],["steps[3].data.odpair",{"_index":1342,"title":{},"body":{"components/MapComponent.html":{}}}],["stepsiz",{"_index":2348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stop",{"_index":514,"title":{},"body":{"injectables/ClockService.html":{},"interfaces/Counts.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{},"components/SimulationComponent.html":{},"miscellaneous/enumerations.html":{}}}],["store",{"_index":263,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WizardService.html":{}}}],["storemodul",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{}}}],["storemodule.forfeature('simul",{"_index":1725,"title":{},"body":{"modules/SimulationModule.html":{}}}],["storemodule.forfeature('ui",{"_index":1932,"title":{},"body":{"modules/UiModule.html":{}}}],["storemodule.forroot",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["strada",{"_index":40,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/PrivacyComponent.html":{},"components/TermsComponent.html":{},"index.html":{}}}],["strategi",{"_index":201,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["strategy.t",{"_index":184,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["strategy.ts:6",{"_index":190,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["stream",{"_index":1515,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["stream.subscrib",{"_index":1528,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["string",{"_index":282,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"interfaces/Counts.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["structur",{"_index":828,"title":{},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["style",{"_index":1103,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"miscellaneous/variables.html":{}}}],["styler",{"_index":2382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["styleurl",{"_index":14,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["subject",{"_index":2289,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":2284,"title":{},"body":{"license.html":{}}}],["subscrib",{"_index":228,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["subscript",{"_index":219,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{}}}],["subscription.unsubscrib",{"_index":235,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChartsComponent.html":{},"components/UiComponent.html":{}}}],["subsequ",{"_index":2408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["substanti",{"_index":2293,"title":{},"body":{"license.html":{}}}],["sum",{"_index":623,"title":{},"body":{"injectables/DemandService.html":{}}}],["sum(odmatrixassign",{"_index":657,"title":{},"body":{"injectables/DemandService.html":{}}}],["sumexp",{"_index":961,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["sumexps.push(sum",{"_index":963,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["sumexps[z",{"_index":965,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["super",{"_index":318,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["support",{"_index":1612,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"modules.html":{}}}],["sure",{"_index":1886,"title":{},"body":{"components/UiComponent.html":{}}}],["surfac",{"_index":785,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["svg",{"_index":2313,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":345,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{}}}],["switchmap",{"_index":1501,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["switchmap((respons",{"_index":1517,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["t",{"_index":977,"title":{},"body":{"classes/EnumValues.html":{}}}],["tag",{"_index":704,"title":{"interfaces/Tag.html":{}},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["tag.key",{"_index":867,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["tag.valu",{"_index":869,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["take",{"_index":725,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["takewhil",{"_index":543,"title":{},"body":{"injectables/ClockService.html":{}}}],["tap",{"_index":1872,"title":{},"body":{"components/UiComponent.html":{}}}],["tap((dialogresult",{"_index":1889,"title":{},"body":{"components/UiComponent.html":{}}}],["target",{"_index":1200,"title":{},"body":{"components/HomeComponent.html":{}}}],["targettim",{"_index":1796,"title":{},"body":{"classes/Statistics.html":{}}}],["technic",{"_index":1469,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["templateurl",{"_index":16,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["term",{"_index":212,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/TermsComponent.html":{}}}],["terms'},{'nam",{"_index":120,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["terms.component.html",{"_index":1834,"title":{},"body":{"components/TermsComponent.html":{}}}],["terms.component.scss",{"_index":1833,"title":{},"body":{"components/TermsComponent.html":{}}}],["terms/terms.compon",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["termscompon",{"_index":119,"title":{"components/TermsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["test",{"_index":2356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testlicens",{"_index":2268,"title":{},"body":{"index.html":{}}}],["text",{"_index":1193,"title":{},"body":{"components/HomeComponent.html":{}}}],["text.split",{"_index":1195,"title":{},"body":{"components/HomeComponent.html":{}}}],["theta",{"_index":954,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["this.adddestination(control",{"_index":1057,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.addorigin(control",{"_index":1049,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.argmin(linkflow",{"_index":677,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.avgspe",{"_index":1708,"title":{},"body":{"components/SimulationComponent.html":{}}}],["this.busiestchart",{"_index":417,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.busiestchart.data.datasets[0].data",{"_index":492,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.busiestchart.data.label",{"_index":485,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.busiestchart.destroy",{"_index":418,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.busiestchart.options.annotation.annotations.push",{"_index":458,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.busiestchart.options.title.text",{"_index":454,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.busiestchart.upd",{"_index":496,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.busiestctx",{"_index":427,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.calcpathcosts(odpair",{"_index":953,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.calcshortestpathsprobabilities(odpair",{"_index":894,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.cdr.detectchang",{"_index":1884,"title":{},"body":{"components/UiComponent.html":{}}}],["this.cent",{"_index":1146,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.clock.getstatist",{"_index":1817,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.clock.presscontrol(control",{"_index":1711,"title":{},"body":{"components/SimulationComponent.html":{}}}],["this.clock.reset",{"_index":1513,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.count",{"_index":1706,"title":{},"body":{"components/SimulationComponent.html":{}}}],["this.createchart",{"_index":412,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.createmap(el",{"_index":1139,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["this.currentstep",{"_index":1314,"title":{},"body":{"components/MapComponent.html":{}}}],["this.data",{"_index":1422,"title":{},"body":{"components/NumericComponent.html":{}}}],["this.demand.calcodmatrix",{"_index":1559,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.demand.changedemand(demand",{"_index":331,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["this.demand.changestartingtimes(startingtim",{"_index":332,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["this.demand.getodmatrix",{"_index":355,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["this.demand.getstartingtim",{"_index":356,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["this.demand.reset",{"_index":1511,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.dens",{"_index":813,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.descript",{"_index":319,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/WeatherComponent.html":{}}}],["this.descriptions.findindex(descript",{"_index":334,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["this.dialog.open(infodialogcompon",{"_index":1897,"title":{},"body":{"components/UiComponent.html":{}}}],["this.disabledefaultui",{"_index":1147,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.disabledoubleclickzoom",{"_index":1148,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.dist",{"_index":805,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.drawingoptions.marker.set('vis",{"_index":825,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.drawingoptions.polyline.set('strokecolor",{"_index":823,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.drawingoptions.polyline.set('zindex",{"_index":824,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.dur",{"_index":806,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.durationintraff",{"_index":811,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.edg",{"_index":841,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.edgeid",{"_index":803,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.edges.find((edg",{"_index":859,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.edges.push(edg",{"_index":862,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.elementref.nativeelement.queryselector('#busiestchart",{"_index":428,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.elementref.nativeelement.queryselector('#heavytrafficchart",{"_index":424,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.elementref.nativeelement.queryselector('#iconcontain",{"_index":1982,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.elementref.nativeelement.queryselector('#map",{"_index":1138,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["this.elementref.nativeelement.queryselector('#moderatetrafficchart",{"_index":426,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.elementref.nativeelement.queryselector('.headlin",{"_index":1191,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.endsimul",{"_index":552,"title":{},"body":{"injectables/ClockService.html":{},"components/SimulationComponent.html":{}}}],["this.estimate(linkflow",{"_index":680,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.execut",{"_index":579,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.flow",{"_index":815,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.formbuilder.array",{"_index":2111,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.formbuilder.group",{"_index":2110,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.formgroup.get('bounds').setvalue(map.data.bound",{"_index":1640,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.formgroup.get('center').setvalu",{"_index":1585,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.formgroup.get('endsimulation').setvalue(end",{"_index":1710,"title":{},"body":{"components/SimulationComponent.html":{}}}],["this.formgroup.get('odpair",{"_index":316,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{}}}],["this.formgroup.get('weathercondit",{"_index":344,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["this.freeflowveloc",{"_index":810,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.geocod",{"_index":1263,"title":{},"body":{"injectables/LocationService.html":{}}}],["this.geocoder.geocod",{"_index":1267,"title":{},"body":{"injectables/LocationService.html":{}}}],["this.gesturehandl",{"_index":1152,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.getedge(edgeid).tags.find(tag",{"_index":866,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.getheavytrafficedges(edges).map((edg",{"_index":1781,"title":{},"body":{"classes/Statistics.html":{}}}],["this.geticon(weather.icon",{"_index":1988,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.getkjam",{"_index":818,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.getmoderatetrafficedges(edges).map((edg",{"_index":1782,"title":{},"body":{"classes/Statistics.html":{}}}],["this.getnames(e).map((nam",{"_index":981,"title":{},"body":{"classes/EnumValues.html":{}}}],["this.getnode(node.nodeid",{"_index":850,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.getpathsedg",{"_index":885,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.gettrafficvolumes(edg",{"_index":1791,"title":{},"body":{"classes/Statistics.html":{}}}],["this.gls(linkflow",{"_index":669,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.heap",{"_index":903,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.heap.getpaths().length",{"_index":921,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.heap.push",{"_index":906,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.heavytrafficchart",{"_index":413,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.heavytrafficchart.data.datasets[0].data",{"_index":488,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.heavytrafficchart.data.label",{"_index":448,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.heavytrafficchart.destroy",{"_index":414,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.heavytrafficchart.options.title.text",{"_index":446,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.heavytrafficchart.upd",{"_index":494,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.heavytrafficctx",{"_index":423,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.http.get(url",{"_index":2065,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.icon",{"_index":1987,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.iconcontain",{"_index":1981,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.incidencematrix",{"_index":891,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.incidencematrix[z][n][m",{"_index":889,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.index",{"_index":353,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/StatisticsComponent.html":{}}}],["this.interv",{"_index":557,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.interval.pip",{"_index":578,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.isonpath(odmatrixassign",{"_index":681,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.isroundabout(edgeid",{"_index":870,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.latlng",{"_index":1264,"title":{},"body":{"injectables/LocationService.html":{}}}],["this.linkflow",{"_index":817,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.location.codeaddress(address).foreach",{"_index":1584,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.location.getcurrentposition().subscrib",{"_index":1599,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.location.getlatlng().lat.tostr",{"_index":2060,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.location.getlatlng().lng.tostr",{"_index":2062,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.location.reset",{"_index":1508,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.location.setlatlng(cent",{"_index":1581,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.map.buildbounds(this.cent",{"_index":1321,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.clearnodesact",{"_index":1331,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.hidepath",{"_index":1332,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.hiderect",{"_index":1324,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.initmap(el",{"_index":1145,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["this.map.reset",{"_index":1507,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.map.setcenter(this.cent",{"_index":1142,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["this.map.setcenter(this.map.getcentroid",{"_index":1328,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.setcentroid",{"_index":1327,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.setzoom(17",{"_index":1329,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.setzoom(this.zoom",{"_index":1144,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["this.map.showgraph",{"_index":1325,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.shownodes(odpair",{"_index":1340,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.showpaths(odpair",{"_index":1343,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.showrect(bound",{"_index":1322,"title":{},"body":{"components/MapComponent.html":{}}}],["this.maptypeid",{"_index":1149,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.maxflow",{"_index":819,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.maxzoom",{"_index":1150,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.min.getd",{"_index":1631,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.min.getfullyear",{"_index":1629,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.min.gethour",{"_index":1632,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.min.getminut",{"_index":1634,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.min.getmonth",{"_index":1630,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.minzoom",{"_index":1151,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.moderatetrafficchart",{"_index":415,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.moderatetrafficchart.data.datasets[0].data",{"_index":490,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.moderatetrafficchart.data.label",{"_index":452,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.moderatetrafficchart.destroy",{"_index":416,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.moderatetrafficchart.options.title.text",{"_index":450,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.moderatetrafficchart.upd",{"_index":495,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.moderatetrafficctx",{"_index":425,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.network",{"_index":1882,"title":{},"body":{"components/UiComponent.html":{}}}],["this.network.calclinkflows(respons",{"_index":1558,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.correctgraph",{"_index":1524,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.creategraph(respons",{"_index":1519,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.getassignmentmatrix",{"_index":668,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.network.getgraph",{"_index":1552,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.getlinkflow",{"_index":667,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.network.getnetwork().pip",{"_index":1516,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.getnetworkdata",{"_index":1520,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.getodpair",{"_index":354,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/SchedulerService.html":{}}}],["this.network.gettim",{"_index":1527,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.gettimestr",{"_index":1991,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.network.gettrafficdata",{"_index":1557,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.reset",{"_index":1509,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.setbounds(bound",{"_index":1636,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.network.setodpairs(odpair",{"_index":1029,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.network.settime(tim",{"_index":1638,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.network.updategraph(respons",{"_index":1522,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.nod",{"_index":839,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.nodeid",{"_index":796,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.nodes.filter((nod",{"_index":879,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.nodes.find((nod",{"_index":846,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.nodes.push(nod",{"_index":857,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.numer",{"_index":1883,"title":{},"body":{"components/UiComponent.html":{}}}],["this.odmatrix",{"_index":665,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.opendialog('ar",{"_index":1885,"title":{},"body":{"components/UiComponent.html":{}}}],["this.opensnackbar(error",{"_index":1880,"title":{},"body":{"components/UiComponent.html":{}}}],["this.paths.findindex((path",{"_index":1175,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["this.paths.push",{"_index":1170,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["this.paths.reduce((prev",{"_index":1177,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["this.paths.splice(index",{"_index":1176,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["this.pathtyp",{"_index":1027,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.paus",{"_index":565,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.pend",{"_index":1878,"title":{},"body":{"components/UiComponent.html":{}}}],["this.populatechart",{"_index":422,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.processingtim",{"_index":559,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.quick",{"_index":573,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.receiveact",{"_index":322,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["this.rel",{"_index":843,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.relationid",{"_index":833,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.renderer.appendchild(this.iconcontain",{"_index":1989,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.renderer.removechild(this.iconcontain",{"_index":1992,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.reset",{"_index":582,"title":{},"body":{"injectables/ClockService.html":{},"injectables/SchedulerService.html":{}}}],["this.resetcondit",{"_index":1984,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.resetcount",{"_index":901,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.router.navigate(['/hom",{"_index":1893,"title":{},"body":{"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["this.scheduler.reset",{"_index":1891,"title":{},"body":{"components/UiComponent.html":{}}}],["this.scheduler.scheduledemand(data",{"_index":2129,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.scheduler.schedulenetwork(data",{"_index":2128,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.scheduler.schedulesimulation(data",{"_index":2130,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.sendact",{"_index":323,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["this.setconditions(weathercondit",{"_index":1985,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.show",{"_index":1214,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.simulatedtimeinterv",{"_index":555,"title":{},"body":{"injectables/ClockService.html":{},"components/SimulationComponent.html":{}}}],["this.simulatedtimeperiod",{"_index":554,"title":{},"body":{"injectables/ClockService.html":{},"components/SimulationComponent.html":{}}}],["this.simulation.getstatist",{"_index":421,"title":{},"body":{"components/ChartsComponent.html":{},"components/StatisticsComponent.html":{}}}],["this.simulation.init",{"_index":1565,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.simulation.propagateflow",{"_index":592,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.simulation.reset",{"_index":1512,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.simulation.resetflow",{"_index":581,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.slow",{"_index":571,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.snackbar.openfromcomponent(messagearchivedcompon",{"_index":1894,"title":{},"body":{"components/UiComponent.html":{}}}],["this.start",{"_index":563,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.startingtim",{"_index":671,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.stat",{"_index":2155,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.statist",{"_index":420,"title":{},"body":{"components/ChartsComponent.html":{},"components/UiComponent.html":{}}}],["this.statistics.busiestedgecapac",{"_index":464,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.statistics.busiestedgedata",{"_index":493,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.statistics.busiestedgelabel",{"_index":457,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.statistics.heavytrafficdata",{"_index":489,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.statistics.heavytrafficlabel",{"_index":449,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.statistics.moderatetrafficdata",{"_index":491,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.statistics.moderatetrafficlabel",{"_index":453,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.statistics.periods.map((valu",{"_index":486,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.step",{"_index":569,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.stepp",{"_index":2123,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.stepper.reset",{"_index":2156,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.stepper.selected.complet",{"_index":2127,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.stepper.selectedindex",{"_index":2132,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.stop",{"_index":567,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.store.dispatch",{"_index":584,"title":{},"body":{"injectables/ClockService.html":{},"injectables/WizardService.html":{}}}],["this.store.pipe(select(fromsimulation.end)).subscribe((end",{"_index":551,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.store.pipe(select(fromui.wizardstate)).subscribe((st",{"_index":2154,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.styl",{"_index":1153,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.subscript",{"_index":561,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.subscription.clos",{"_index":575,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.subscription.unsubscrib",{"_index":580,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.subscriptions.foreach((subscript",{"_index":234,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChartsComponent.html":{},"components/UiComponent.html":{}}}],["this.subscriptions.push(this.formgroup.get('bounds').valuechanges.subscrib",{"_index":1635,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.subscriptions.push(this.formgroup.get('center').valuechanges.subscrib",{"_index":1580,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.subscriptions.push(this.formgroup.get('odpairs').valuechanges.subscrib",{"_index":326,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{}}}],["this.subscriptions.push(this.formgroup.get('time').valuechanges.subscrib",{"_index":1637,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.subscriptions.push(this.formgroup.get('weatherconditions').valuechanges.subscrib",{"_index":333,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromsimulation.end)).subscribe((end",{"_index":1709,"title":{},"body":{"components/SimulationComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromsimulation.periods)).subscribe((period",{"_index":1693,"title":{},"body":{"components/SimulationComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromsimulation.simulation)).subscribe((simul",{"_index":1420,"title":{},"body":{"components/NumericComponent.html":{},"components/SimulationComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromui.currentstep)).subscribe((currentstep",{"_index":341,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromui.error)).subscribe((error",{"_index":1879,"title":{},"body":{"components/UiComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromui.map)).subscribe((map",{"_index":1032,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromui.pending)).subscribe((pend",{"_index":1877,"title":{},"body":{"components/UiComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromui.steps)).subscribe((step",{"_index":1333,"title":{},"body":{"components/MapComponent.html":{}}}],["this.sum(odmatrixassign",{"_index":684,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.tim",{"_index":1990,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.timeinterv",{"_index":1695,"title":{},"body":{"components/SimulationComponent.html":{}}}],["this.timeperiod",{"_index":1697,"title":{},"body":{"components/SimulationComponent.html":{}}}],["this.totalavgspe",{"_index":1823,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.totalprocessingtim",{"_index":560,"title":{},"body":{"injectables/ClockService.html":{},"components/StatisticsComponent.html":{}}}],["this.totalsimulatedtim",{"_index":1820,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.totaltim",{"_index":1818,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.updatechart",{"_index":445,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.updatedata",{"_index":444,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.updateodpairs(map.data.selectednod",{"_index":1034,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.updateopt",{"_index":443,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.updatesimulatedtimeperiod",{"_index":594,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.valuechang",{"_index":321,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{}}}],["this.veloc",{"_index":812,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.walk(o",{"_index":909,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.weather.changeweather(weathercondit",{"_index":340,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["this.weather.getfactor",{"_index":1562,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.weather.getweathercondit",{"_index":1983,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.weather.getweatherdata(this.network.gettim",{"_index":1525,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.weather.reset",{"_index":1510,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.weather.updateweatherdata(respons",{"_index":1526,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.weathercondit",{"_index":2055,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.wizard.goon",{"_index":2131,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.wizard.goon(data",{"_index":1551,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.wizard.putinerror(\"brows",{"_index":1610,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.putinerror('invalid",{"_index":1596,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.putinerror('zero",{"_index":1591,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.putinerror(error",{"_index":1058,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.wizard.putinerror(messag",{"_index":1548,"title":{},"body":{"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.putonhold('check",{"_index":1523,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.wizard.putonhold('comput",{"_index":1553,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.wizard.putonhold('cr",{"_index":1518,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.wizard.putonhold('get",{"_index":1514,"title":{},"body":{"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.putonhold('initi",{"_index":1564,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.wizard.putonhold('search",{"_index":1582,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.putonhold('upd",{"_index":1521,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.wizard.removefromwait",{"_index":1550,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.wizard.reset",{"_index":1506,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.wizard.stepp",{"_index":2122,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.wizard.updatestep",{"_index":1059,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.wizard.updatestep(this.formgroup.valu",{"_index":1035,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{}}}],["this.wizardform",{"_index":2109,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.wizardform.get('formstep",{"_index":2108,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.wizardform.get('formsteps').get([index]).valu",{"_index":2126,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.zoom",{"_index":1154,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["through",{"_index":1240,"title":{},"body":{"injectables/LocationService.html":{}}}],["throwerror",{"_index":761,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{}}}],["throwerror('getweatherdata",{"_index":2069,"title":{},"body":{"injectables/WeatherService.html":{}}}],["thunderstorm",{"_index":2015,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["tick",{"_index":2345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["time",{"_index":48,"title":{},"body":{"components/AboutComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/EnumValues.html":{},"components/HomeComponent.html":{},"components/PrivacyComponent.html":{},"injectables/SchedulerService.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["time.gettim",{"_index":2075,"title":{},"body":{"injectables/WeatherService.html":{}}}],["time.gettimezoneoffset",{"_index":2072,"title":{},"body":{"injectables/WeatherService.html":{}}}],["timeinterv",{"_index":755,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SimulationComponent.html":{},"classes/Statistics.html":{},"interfaces/Tag.html":{}}}],["timeintervaldecr",{"_index":2444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["timeintervalincr",{"_index":2443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["timelimit",{"_index":2390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["timeout",{"_index":1609,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["timeperiod",{"_index":1674,"title":{},"body":{"components/SimulationComponent.html":{},"classes/Statistics.html":{}}}],["timer",{"_index":534,"title":{},"body":{"injectables/ClockService.html":{}}}],["timezon",{"_index":2073,"title":{},"body":{"injectables/WeatherService.html":{}}}],["timezoneoffset",{"_index":2071,"title":{},"body":{"injectables/WeatherService.html":{}}}],["titl",{"_index":2340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["togglevalu",{"_index":258,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["togglevalue(pair",{"_index":286,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["toinch",{"_index":2030,"title":{},"body":{"injectables/WeatherService.html":{}}}],["toinches(valu",{"_index":2047,"title":{},"body":{"injectables/WeatherService.html":{}}}],["tool",{"_index":2255,"title":{},"body":{"index.html":{}}}],["toolbox",{"_index":2419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tort",{"_index":2310,"title":{},"body":{"license.html":{}}}],["tosecond",{"_index":1690,"title":{},"body":{"components/SimulationComponent.html":{},"miscellaneous/functions.html":{}}}],["toseconds(periods.simulatedtimeinterv",{"_index":1700,"title":{},"body":{"components/SimulationComponent.html":{}}}],["toseconds(uiconfig.simulatedtimeinterv",{"_index":1701,"title":{},"body":{"components/SimulationComponent.html":{}}}],["toseconds(valu",{"_index":983,"title":{},"body":{"classes/EnumValues.html":{},"miscellaneous/functions.html":{}}}],["total",{"_index":724,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{}}}],["totalavgspe",{"_index":1803,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["totalprocessingtim",{"_index":504,"title":{},"body":{"injectables/ClockService.html":{},"components/StatisticsComponent.html":{}}}],["totalsimulatedtim",{"_index":574,"title":{},"body":{"injectables/ClockService.html":{},"components/StatisticsComponent.html":{}}}],["totaltim",{"_index":1804,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["traffic",{"_index":42,"title":{},"body":{"components/AboutComponent.html":{},"components/ChartsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["trafficchartopt",{"_index":409,"title":{},"body":{"components/ChartsComponent.html":{},"miscellaneous/variables.html":{}}}],["trafficcount",{"_index":603,"title":{},"body":{"interfaces/Counts.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{}}}],["trafficdata",{"_index":2361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trafficvolum",{"_index":602,"title":{},"body":{"interfaces/Counts.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{},"classes/Statistics.html":{}}}],["trafficvolumes[i",{"_index":1794,"title":{},"body":{"classes/Statistics.html":{}}}],["transit",{"_index":2386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('void",{"_index":2374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translat",{"_index":2195,"title":{},"body":{"dependencies.html":{}}}],["translatez",{"_index":1205,"title":{},"body":{"components/HomeComponent.html":{}}}],["transport",{"_index":835,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["travers",{"_index":913,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["tri",{"_index":881,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{}}}],["trigger('hometransit",{"_index":2373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChartsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"miscellaneous/variables.html":{}}}],["turf/area",{"_index":2186,"title":{},"body":{"dependencies.html":{}}}],["turf/bear",{"_index":2192,"title":{},"body":{"dependencies.html":{}}}],["turf/cent",{"_index":2199,"title":{},"body":{"dependencies.html":{}}}],["turf/centroid",{"_index":2197,"title":{},"body":{"dependencies.html":{}}}],["turf/dist",{"_index":2193,"title":{},"body":{"dependencies.html":{}}}],["turf/help",{"_index":2188,"title":{},"body":{"dependencies.html":{}}}],["turf/invari",{"_index":2190,"title":{},"body":{"dependencies.html":{}}}],["turf/transform",{"_index":2194,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":692,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["type",{"_index":31,"title":{},"body":{"components/AboutComponent.html":{},"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"interfaces/SimulationState.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealias",{"_index":2320,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1692,"title":{},"body":{"components/SimulationComponent.html":{}}}],["typescript",{"_index":67,"title":{},"body":{"components/AboutComponent.html":{}}}],["ui",{"_index":88,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["ui'},{'nam",{"_index":122,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["ui.compon",{"_index":1914,"title":{},"body":{"modules/UiModule.html":{},"modules/UiRoutingModule.html":{}}}],["ui.component.html",{"_index":1847,"title":{},"body":{"components/UiComponent.html":{}}}],["ui.component.scss",{"_index":1846,"title":{},"body":{"components/UiComponent.html":{}}}],["ui/ui",{"_index":549,"title":{},"body":{"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{}}}],["ui/ui.module#uimodul",{"_index":209,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["uicompon",{"_index":121,"title":{"components/UiComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["uiconfig",{"_index":313,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["uiconfig.links.heavytrafficcolor",{"_index":434,"title":{},"body":{"components/ChartsComponent.html":{}}}],["uiconfig.links.moderatetrafficcolor",{"_index":436,"title":{},"body":{"components/ChartsComponent.html":{}}}],["uiconfig.map.cent",{"_index":1315,"title":{},"body":{"components/MapComponent.html":{}}}],["uiconfig.map.zoom",{"_index":1316,"title":{},"body":{"components/MapComponent.html":{}}}],["uiconfig.maxodpair",{"_index":1040,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["uiconfig.simulatedtimeinterv",{"_index":556,"title":{},"body":{"injectables/ClockService.html":{}}}],["uiconfig.sp",{"_index":822,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["uiconfig.theta",{"_index":955,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["uiconfig.timeintervaldecr",{"_index":589,"title":{},"body":{"injectables/ClockService.html":{}}}],["uiconfig.timeintervalincr",{"_index":588,"title":{},"body":{"injectables/ClockService.html":{}}}],["uiconfig.timelimit",{"_index":1633,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["uiconfig.weathericons[index",{"_index":338,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["uimodul",{"_index":1902,"title":{"modules/UiModule.html":{}},"body":{"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["uiroutingmodul",{"_index":1907,"title":{"modules/UiRoutingModule.html":{}},"body":{"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["uistat",{"_index":1935,"title":{"interfaces/UiState.html":{}},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["unavail",{"_index":1607,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["undefin",{"_index":845,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SimulationComponent.html":{},"interfaces/Tag.html":{},"miscellaneous/functions.html":{}}}],["under",{"_index":1842,"title":{},"body":{"components/TermsComponent.html":{}}}],["unexpect",{"_index":1547,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["unix",{"_index":2078,"title":{},"body":{"injectables/WeatherService.html":{}}}],["unknown",{"_index":642,"title":{},"body":{"injectables/DemandService.html":{}}}],["unknown_error",{"_index":1595,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["updat",{"_index":324,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"components/MapComponent.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{},"index.html":{}}}],["updatechart",{"_index":381,"title":{},"body":{"components/ChartsComponent.html":{}}}],["updatedata",{"_index":382,"title":{},"body":{"components/ChartsComponent.html":{}}}],["updateodpair",{"_index":1007,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["updateodpairs(nod",{"_index":1020,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["updateon",{"_index":2120,"title":{},"body":{"components/WizardComponent.html":{}}}],["updateopt",{"_index":383,"title":{},"body":{"components/ChartsComponent.html":{}}}],["updatesimulatedtimeperiod",{"_index":515,"title":{},"body":{"injectables/ClockService.html":{}}}],["updatestep",{"_index":2138,"title":{},"body":{"injectables/WizardService.html":{}}}],["updatestep(data",{"_index":2149,"title":{},"body":{"injectables/WizardService.html":{}}}],["updateweatherdata",{"_index":2031,"title":{},"body":{"injectables/WeatherService.html":{}}}],["updateweatherdata(data",{"_index":2049,"title":{},"body":{"injectables/WeatherService.html":{}}}],["uppercas",{"_index":1997,"title":{},"body":{"components/WeatherComponent.html":{}}}],["urban",{"_index":41,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["url",{"_index":2056,"title":{},"body":{"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["us",{"_index":45,"title":{},"body":{"components/AboutComponent.html":{},"classes/Edge.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"index.html":{},"license.html":{}}}],["usefactori",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":1937,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["utc",{"_index":2079,"title":{},"body":{"injectables/WeatherService.html":{}}}],["utctim",{"_index":2074,"title":{},"body":{"injectables/WeatherService.html":{}}}],["util",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{}}}],["valid",{"_index":301,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WizardComponent.html":{}}}],["validators.max(uiconfig.rainintensity.max",{"_index":2117,"title":{},"body":{"components/WizardComponent.html":{}}}],["validators.max(uiconfig.snowintensity.max",{"_index":2118,"title":{},"body":{"components/WizardComponent.html":{}}}],["validators.max(uiconfig.visibility.max",{"_index":2114,"title":{},"body":{"components/WizardComponent.html":{}}}],["validators.min(0",{"_index":2113,"title":{},"body":{"components/WizardComponent.html":{}}}],["validators.pattern('^[0",{"_index":2115,"title":{},"body":{"components/WizardComponent.html":{}}}],["validators.requir",{"_index":2112,"title":{},"body":{"components/WizardComponent.html":{}}}],["validators.requiredtru",{"_index":2119,"title":{},"body":{"components/WizardComponent.html":{}}}],["valu",{"_index":33,"title":{},"body":{"components/AboutComponent.html":{},"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.edgeid",{"_index":886,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["valuechang",{"_index":223,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["var",{"_index":73,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["variabl",{"_index":2322,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["varianc",{"_index":758,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["vehicl",{"_index":735,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SimulationComponent.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["veloc",{"_index":705,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["version",{"_index":898,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{}}}],["vertic",{"_index":479,"title":{},"body":{"components/ChartsComponent.html":{}}}],["viewchild",{"_index":2097,"title":{},"body":{"components/WizardComponent.html":{}}}],["viewchild('stepp",{"_index":2107,"title":{},"body":{"components/WizardComponent.html":{}}}],["viewencapsul",{"_index":1307,"title":{},"body":{"components/MapComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["viewencapsulation.non",{"_index":1290,"title":{},"body":{"components/MapComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["visibl",{"_index":2001,"title":{},"body":{"interfaces/WeatherConditions.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":29,"title":{},"body":{"components/AboutComponent.html":{},"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["volum",{"_index":439,"title":{},"body":{"components/ChartsComponent.html":{},"components/NumericComponent.html":{},"miscellaneous/variables.html":{}}}],["voluntarili",{"_index":1461,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["wait",{"_index":1549,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["walk",{"_index":908,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["walk(o",{"_index":920,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["want",{"_index":1887,"title":{},"body":{"components/UiComponent.html":{}}}],["warranti",{"_index":2295,"title":{},"body":{"license.html":{}}}],["way",{"_index":1424,"title":{},"body":{"components/NumericComponent.html":{},"components/PrivacyComponent.html":{}}}],["waynam",{"_index":601,"title":{},"body":{"interfaces/Counts.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{}}}],["weather",{"_index":267,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["weather'},{'nam",{"_index":124,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["weather.component.html",{"_index":1957,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.component.scss",{"_index":1956,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.descript",{"_index":1986,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.servic",{"_index":2021,"title":{},"body":{"modules/WeatherModule.html":{}}}],["weather/weather.compon",{"_index":1928,"title":{},"body":{"modules/UiModule.html":{}}}],["weather/weather.modul",{"_index":1397,"title":{},"body":{"modules/NetworkModule.html":{}}}],["weathercompon",{"_index":123,"title":{"components/WeatherComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["weathercondit",{"_index":309,"title":{"interfaces/WeatherConditions.html":{}},"body":{"components/ChangeOfConditionsComponent.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{}}}],["weatherconditions.descript",{"_index":335,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["weatherconditions.icon",{"_index":339,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["weatherconditionscontrol",{"_index":343,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["weatherdescript",{"_index":294,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["weathericon",{"_index":2427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weathermodul",{"_index":1395,"title":{"modules/WeatherModule.html":{}},"body":{"modules/NetworkModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["weatherservic",{"_index":268,"title":{"injectables/WeatherService.html":{}},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/SchedulerService.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"overview.html":{}}}],["web",{"_index":43,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{},"dependencies.html":{},"index.html":{}}}],["whether",{"_index":2308,"title":{},"body":{"license.html":{}}}],["whole",{"_index":1488,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["width",{"_index":1898,"title":{},"body":{"components/UiComponent.html":{}}}],["without",{"_index":2277,"title":{},"body":{"license.html":{}}}],["wizard",{"_index":84,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["wizard.component.html",{"_index":2084,"title":{},"body":{"components/WizardComponent.html":{}}}],["wizard.component.scss",{"_index":2083,"title":{},"body":{"components/WizardComponent.html":{}}}],["wizard.servic",{"_index":303,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WizardComponent.html":{}}}],["wizard/chang",{"_index":1921,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/estim",{"_index":1919,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/scheduler.servic",{"_index":1874,"title":{},"body":{"components/UiComponent.html":{},"modules/UiModule.html":{}}}],["wizard/search",{"_index":1916,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/select",{"_index":1918,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/simulation/simulation.compon",{"_index":1923,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/statistics/statistics.compon",{"_index":1924,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/wizard.compon",{"_index":1915,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/wizard.servic",{"_index":1931,"title":{},"body":{"modules/UiModule.html":{}}}],["wizardact",{"_index":1091,"title":{},"body":{"classes/GoOn.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/WizardState.html":{},"miscellaneous/typealiases.html":{}}}],["wizardactiontyp",{"_index":1079,"title":{},"body":{"classes/GoOn.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{}}}],["wizardactiontypes.goon",{"_index":1077,"title":{},"body":{"classes/GoOn.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["wizardactiontypes.reset",{"_index":1090,"title":{},"body":{"classes/GoOn.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["wizardactiontypes.stepchang",{"_index":1085,"title":{},"body":{"classes/GoOn.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["wizardactiontypes.steperror",{"_index":1087,"title":{},"body":{"classes/GoOn.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["wizardactiontypes.steppend",{"_index":1088,"title":{},"body":{"classes/GoOn.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["wizardcompon",{"_index":125,"title":{"components/WizardComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["wizardform",{"_index":2086,"title":{},"body":{"components/WizardComponent.html":{}}}],["wizardreduc",{"_index":2237,"title":{},"body":{"miscellaneous/functions.html":{}}}],["wizardreducer(st",{"_index":2160,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/functions.html":{}}}],["wizardservic",{"_index":264,"title":{"injectables/WizardService.html":{}},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"modules/UiModule.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"overview.html":{}}}],["wizardst",{"_index":1948,"title":{"interfaces/WizardState.html":{}},"body":{"interfaces/UiState.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["wrap",{"_index":1251,"title":{},"body":{"injectables/LocationService.html":{}}}],["wrappedtext",{"_index":1196,"title":{},"body":{"components/HomeComponent.html":{}}}],["x",{"_index":480,"title":{},"body":{"components/ChartsComponent.html":{},"injectables/DemandService.html":{},"miscellaneous/variables.html":{}}}],["xadjust",{"_index":483,"title":{},"body":{"components/ChartsComponent.html":{}}}],["xax",{"_index":2342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xi",{"_index":2420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["y",{"_index":462,"title":{},"body":{"components/ChartsComponent.html":{},"miscellaneous/variables.html":{}}}],["yadjust",{"_index":475,"title":{},"body":{"components/ChartsComponent.html":{}}}],["yax",{"_index":2347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ye",{"_index":1218,"title":{},"body":{"components/InfoDialogComponent.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{},"miscellaneous/functions.html":{}}}],["z",{"_index":676,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["zero",{"_index":900,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["zindex",{"_index":749,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["zone.j",{"_index":2220,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"components/GoogleMapComponent.html":{},"modules/LocationModule.html":{},"components/MapComponent.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutComponent.html":{"url":"components/AboutComponent.html","title":"component - AboutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AboutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/about/about.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n            \n                styleUrls\n                about.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./about.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentYear\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/about/about.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/about/about.component.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentYear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentYear:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : new Date().getFullYear()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/about/about.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-about',\n    templateUrl: './about.component.html',\n    styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n\n    currentYear: number = new Date().getFullYear();\n\n    constructor() { }\n\n    ngOnInit(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    STRADA\n    An urban traffic web simulator that uses data in real time\n    Copyright&nbsp;©&nbsp;{{ currentYear }} Roberto&nbsp;Simonetti - MIT license\n    Project developed for the dissertation of my bachelor's degree in computer engineering\n    Links\n    \n        \n            \n                Repository:\n                STRADA source code\n            \n        \n        \n            \n                Official documentation:\n                STRADA documentation\n            \n        \n    \n    Built with\n    \n        \n            \n                Angular, TypeScript & Firebase\n            \n        \n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    STRADA    An urban traffic web simulator that uses data in real time    Copyright © {{ currentYear }} Roberto Simonetti - MIT license    Project developed for the dissertation of my bachelor\\'s degree in computer engineering    Links                                        Repository:                STRADA source code                                                        Official documentation:                STRADA documentation                            Built with                                        Angular, TypeScript & Firebase                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent { }\n\n    \n\n    \n        \n\n    \n        \n            \n            \n                STRADA\n            \n\n            \n\n            \n                \n            \n            \n                \n                    About\n                \n            \n        \n    \n\n    \n\n        \n            \n        \n\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    STRADA                                                                                                                About                                                                            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nPrivacyComponent\n\nPrivacyComponent\n\nAppModule -->\n\nPrivacyComponent->AppModule\n\n\n\n\n\nTermsComponent\n\nTermsComponent\n\nAppModule -->\n\nTermsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nDemandModule\n\nDemandModule\n\nAppModule -->\n\nDemandModule->AppModule\n\n\n\n\n\nLocationModule\n\nLocationModule\n\nAppModule -->\n\nLocationModule->AppModule\n\n\n\n\n\nNetworkModule\n\nNetworkModule\n\nAppModule -->\n\nNetworkModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nSimulationModule\n\nSimulationModule\n\nAppModule -->\n\nSimulationModule->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AboutComponent\n                            \n                            \n                                AppComponent\n                            \n                            \n                                HomeComponent\n                            \n                            \n                                PrivacyComponent\n                            \n                            \n                                TermsComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                            \n                                    DemandModule\n                            \n                            \n                                    LocationModule\n                            \n                            \n                                    NetworkModule\n                            \n                            \n                                    SharedModule\n                            \n                            \n                                    SimulationModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule, APP_INITIALIZER } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { StoreModule } from '@ngrx/store';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { SharedModule } from './shared/shared.module';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { AboutComponent } from './about/about.component';\nimport { PrivacyComponent } from './privacy/privacy.component';\nimport { TermsComponent } from './terms/terms.component';\nimport { LocationModule } from './location/location.module';\nimport { NetworkModule } from './network/network.module';\nimport { DemandModule } from './demand/demand.module';\nimport { SimulationModule } from './simulation/simulation.module';\n\nimport { loadScripts } from './utils';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        HomeComponent,\n        AboutComponent,\n        PrivacyComponent,\n        TermsComponent\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        SharedModule.forRoot(),\n        StoreModule.forRoot({}),\n        LocationModule,\n        NetworkModule,\n        DemandModule,\n        SimulationModule\n    ],\n    providers: [\n        {\n            provide: APP_INITIALIZER,\n            useFactory: loadScripts,\n            deps: [],\n            multi: true\n        }\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPreloadingStrategy.html":{"url":"classes/AppPreloadingStrategy.html","title":"class - AppPreloadingStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPreloadingStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app-preloading-strategy.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        PreloadingStrategy\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                preload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            preload\n                            \n                            \n                        \n                    \n                \n                \n                    \npreload(route: Route, load: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app-preloading-strategy.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    Route\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        load\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { PreloadingStrategy, Route } from \"@angular/router\";\nimport { Observable, of } from \"rxjs\";\n\nexport class AppPreloadingStrategy implements PreloadingStrategy {\n\n    preload(route: Route, load: Function): Observable {\n        return route.data && route.data.preload ? load() : of(null);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { AppPreloadingStrategy } from './app-preloading-strategy';\n\nimport { HomeComponent } from './home/home.component';\nimport { AboutComponent } from './about/about.component';\nimport { PrivacyComponent } from './privacy/privacy.component';\nimport { TermsComponent } from './terms/terms.component';\n\n@NgModule({\n    providers: [AppPreloadingStrategy],\n    imports: [\n        RouterModule.forRoot([\n            { path: '', redirectTo: 'home', pathMatch: 'full' },\n            { path: 'home', component: HomeComponent },\n            { path: 'about', component: AboutComponent },\n            {\n                path: 'simulation',\n                loadChildren: './ui/ui.module#UiModule',\n                data: { preload: false }\n            },\n            { path: 'privacy', component: PrivacyComponent },\n            { path: 'terms', component: TermsComponent },\n            { path: '**', redirectTo: 'home' }\n        ], { preloadingStrategy: AppPreloadingStrategy })\n    ],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseComponent.html":{"url":"classes/BaseComponent.html","title":"class - BaseComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/base.component.ts\n        \n\n            \n                Description\n            \n            \n                Abstract class inherited from UI components.\n\n            \n\n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { OnInit, OnDestroy } from \"@angular/core\";\nimport { Subscription } from \"rxjs\";\n\n/**\n * Abstract class inherited from UI components.\n */\nexport abstract class BaseComponent implements OnInit, OnDestroy {\n\n    subscriptions: Subscription[] = [];\n\n    abstract ngOnInit(): void;\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach((subscription: Subscription) => {\n            if (subscription) { subscription.unsubscribe(); }\n        });\n    }\n\n    /**\n     * Subscribes to the form changes.\n     */\n    abstract valueChanges(): void;\n\n    /**\n     * Subscribes to the actions sent by other components.\n     */\n    abstract receiveActions(): void;\n\n    /**\n     * Subscribes to the actions sent to other components.\n     */\n    abstract sendActions(): void;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CanComponentDeactivate.html":{"url":"interfaces/CanComponentDeactivate.html","title":"interface - CanComponentDeactivate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CanComponentDeactivate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/can-deactivate-guard.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        canDeactivate\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canDeactivate\n                                    \n                                \n                                \n                                    \n                                        canDeactivate:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nexport interface CanComponentDeactivate {\n    canDeactivate: () => Observable | Promise | boolean;\n}\n\n@Injectable() export class CanDeactivateGuard implements CanDeactivate {\n    canDeactivate(component: CanComponentDeactivate): boolean | Observable | Promise {\n        return component.canDeactivate ? component.canDeactivate() : true;\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CanDeactivateGuard.html":{"url":"injectables/CanDeactivateGuard.html","title":"injectable - CanDeactivateGuard","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  CanDeactivateGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/can-deactivate-guard.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canDeactivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canDeactivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanDeactivate(component: CanComponentDeactivate)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/can-deactivate-guard.service.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        component\n                                                        \n                                                                    CanComponentDeactivate\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean | Observable | Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nexport interface CanComponentDeactivate {\n    canDeactivate: () => Observable | Promise | boolean;\n}\n\n@Injectable() export class CanDeactivateGuard implements CanDeactivate {\n    canDeactivate(component: CanComponentDeactivate): boolean | Observable | Promise {\n        return component.canDeactivate ? component.canDeactivate() : true;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangeOfConditionsComponent.html":{"url":"components/ChangeOfConditionsComponent.html","title":"component - ChangeOfConditionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChangeOfConditionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-change-of-conditions\n            \n\n            \n                styleUrls\n                change-of-conditions.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./change-of-conditions.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                descriptions\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildOdPair\n                            \n                            \n                                getVisibility\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                toggleValue\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, wizard: WizardService, network: NetworkService, weather: WeatherService, demand: DemandService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        weather\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        demand\n                                                  \n                                                        \n                                                                    DemandService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:27\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buildOdPair\n                            \n                            \n                        \n                    \n                \n                \n                    \nbuildOdPair(odPair: OdPair, demand: number, startingTime: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:123\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        odPair\n                                                        \n                                                                    OdPair\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        demand\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        startingTime\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FormGroup\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getVisibility\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetVisibility(pair: AbstractControl)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:119\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pair\n                                                        \n                                                                    AbstractControl\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:108\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleValue\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleValue(pair: AbstractControl)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:112\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pair\n                                                        \n                                                                    AbstractControl\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            descriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        descriptions:     WeatherDescription[]\n\n                    \n                \n                    \n                        \n                            Type :     WeatherDescription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        odPairs\n                    \n                \n\n                \n                    \n                        getodPairs()\n                    \n                \n                            \n                                \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:31\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, FormArray, AbstractControl, Validators } from '@angular/forms';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { WizardService } from '../wizard.service';\nimport { NetworkService } from '../../../network/network.service';\nimport { WeatherService } from '../../../network/weather/weather.service';\nimport { DemandService } from '../../../demand/demand.service';\nimport * as fromUi from '../../models/reducers';\nimport { WeatherDescription, WeatherConditions } from '../../../network/weather/weather';\nimport { OdPair } from '../../../network/graph';\nimport { EnumValues } from '../../utils';\nimport { uiConfig } from '../../ui-config';\n\nimport { BaseComponent } from '../../models/base.component';\n\n@Component({\n    selector: 'wizard-change-of-conditions',\n    templateUrl: './change-of-conditions.component.html',\n    styleUrls: ['./change-of-conditions.component.scss']\n})\nexport class ChangeOfConditionsComponent extends BaseComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    descriptions: WeatherDescription[] = [];\n\n    get odPairs(): FormArray {\n        return this.formGroup.get('odPairs') as FormArray;\n    }\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private store: Store,\n        private wizard: WizardService,\n        private network: NetworkService,\n        private weather: WeatherService,\n        private demand: DemandService\n    ) {\n        super();\n\n        this.descriptions = EnumValues.getValues(WeatherDescription);\n    }\n\n    ngOnInit(): void {\n        this.valueChanges();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        // Updates demand service data on value changes.\n        this.subscriptions.push(this.formGroup.get('odPairs').valueChanges.subscribe(\n            (odPairs: any[]) => {\n                const demand = odPairs.map((pair: any) => {\n                    return pair.demand;\n                });\n                const startingTimes = odPairs.map((pair: any) => {\n                    return pair.startingTime;\n                });\n                this.demand.changeDemand(demand);\n                this.demand.changeStartingTimes(startingTimes);\n            }\n        ));\n        // Updates weather service data on value changes.\n        this.subscriptions.push(this.formGroup.get('weatherConditions').valueChanges.subscribe(\n            (weatherConditions: WeatherConditions) => {\n                const index = this.descriptions.findIndex(description => description == weatherConditions.description);\n                if (index != -1) {\n                    const icon = uiConfig.weatherIcons[index];\n                    weatherConditions.icon = icon;\n                }\n                this.weather.changeWeather(weatherConditions);\n            }\n        ));\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.currentStep)).subscribe((currentStep: number) => {\n            const odPairsControl = this.formGroup.get('odPairs') as FormArray;\n            const weatherConditionsControl = this.formGroup.get('weatherConditions');\n            switch (currentStep) {\n                case 0:\n                    // Resets control.\n                    if (odPairsControl.length > 0) {\n                        for (let i = odPairsControl.length - 1; i >= 0; i--) {\n                            odPairsControl.removeAt(i);\n                        }\n                    }\n                    break;\n                case this.index:\n                    const odPairs = this.network.getOdPairs();\n                    const demand = this.demand.getOdMatrix();\n                    const startingTimes = this.demand.getStartingTimes();\n                    for (let i = 0; i \n    \n\n    \n        \n    \n        \n            \n                \n                    O\n                    D\n                    Demand\n                    Time\n                    \n                \n                \n                    \n                        {{ pair.value.origin }}\n                    \n                    \n                        {{ pair.value.destination }}\n                    \n                    \n                        \n                            \n                            \n                                Invalid value\n                            \n                        \n                    \n                    \n                        \n                            \n                            \n                                Invalid value\n                            \n                        \n                    \n                    \n                        \n                            {{ getVisibility(pair) }}\n                        \n                    \n                \n            \n        \n        \n        \n            \n                \n                    \n                        {{ description }}\n                    \n                \n            \n            \n                \n                m\n                \n                    Invalid value\n                \n            \n            \n                \n                mm\n                \n                    Invalid value\n                \n            \n            \n                \n                mm\n                \n                    Invalid value\n                \n            \n        \n    \n\n    \n        Continue\n            navigate_next\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            O                    D                    Demand                    Time                                                                                                {{ pair.value.origin }}                                                                {{ pair.value.destination }}                                                                                                                                                        Invalid value                                                                                                                                                                                                            Invalid value                                                                                                                                                {{ getVisibility(pair) }}                                                                                                                                                                        {{ description }}                                                                                            m                                    Invalid value                                                                        mm                                    Invalid value                                                                        mm                                    Invalid value                                                    Continue            navigate_next            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChangeOfConditionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChartsComponent.html":{"url":"components/ChartsComponent.html","title":"component - ChartsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChartsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/charts/charts.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ui-charts\n            \n\n            \n                styleUrls\n                charts.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./charts.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                busiestChart\n                            \n                            \n                                busiestCtx\n                            \n                            \n                                heavyTrafficChart\n                            \n                            \n                                heavyTrafficCtx\n                            \n                            \n                                moderateTrafficChart\n                            \n                            \n                                moderateTrafficCtx\n                            \n                            \n                                statistics\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createCharts\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                populateCharts\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                updateCharts\n                            \n                            \n                                updateData\n                            \n                            \n                                updateOptions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, store: Store, simulation: SimulationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/charts/charts.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        simulation\n                                                  \n                                                        \n                                                                    SimulationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createCharts\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateCharts()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:82\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            populateCharts\n                            \n                            \n                        \n                    \n                \n                \n                    \npopulateCharts()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:131\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateCharts\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateCharts()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:186\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateData\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:180\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateOptions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:137\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            busiestChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        busiestChart:     Chart\n\n                    \n                \n                    \n                        \n                            Type :     Chart\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            busiestCtx\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        busiestCtx:     HTMLCanvasElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLCanvasElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heavyTrafficChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heavyTrafficChart:     Chart\n\n                    \n                \n                    \n                        \n                            Type :     Chart\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heavyTrafficCtx\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heavyTrafficCtx:     HTMLCanvasElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLCanvasElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moderateTrafficChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        moderateTrafficChart:     Chart\n\n                    \n                \n                    \n                        \n                            Type :     Chart\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moderateTrafficCtx\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        moderateTrafficCtx:     HTMLCanvasElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLCanvasElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            statistics\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        statistics:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, OnDestroy, ElementRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { Store, select } from '@ngrx/store';\nimport { Chart } from 'chart.js';\n\nimport { SimulationService } from '../../simulation/simulation.service';\nimport * as fromUi from '../models/reducers';\nimport { formatTimeFromSeconds } from '../utils';\nimport { trafficChartOptions, busiestChartOptions, busiestColor } from './charts-config';\nimport { uiConfig } from '../ui-config';\n\nimport { BaseComponent } from '../models/base.component';\n\n@Component({\n    selector: 'ui-charts',\n    templateUrl: './charts.component.html',\n    styleUrls: ['./charts.component.scss']\n})\nexport class ChartsComponent extends BaseComponent implements OnInit, AfterViewInit, OnDestroy {\n\n    heavyTrafficCtx: HTMLCanvasElement;\n\n    moderateTrafficCtx: HTMLCanvasElement;\n\n    busiestCtx: HTMLCanvasElement;\n\n    heavyTrafficChart: Chart;\n\n    moderateTrafficChart: Chart;\n\n    busiestChart: Chart;\n\n    statistics: any;\n\n    constructor(\n        private elementRef: ElementRef,\n        private store: Store,\n        private simulation: SimulationService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        //\n    }\n\n    ngAfterViewInit(): void {\n        this.createCharts();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach((subscription: Subscription) => {\n            if (subscription) { subscription.unsubscribe(); }\n        });\n        if (this.heavyTrafficChart) { this.heavyTrafficChart.destroy(); }\n        if (this.moderateTrafficChart) { this.moderateTrafficChart.destroy(); }\n        if (this.busiestChart) { this.busiestChart.destroy(); }\n    }\n\n    valueChanges(): void {\n        //\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.currentStep)).subscribe((currentStep: number) => {\n            switch (currentStep) {\n                case 5:\n                    this.statistics = this.simulation.getStatistics();\n                    this.populateCharts();\n                    break;\n            }\n        }));\n    }\n\n    sendActions(): void {\n        //\n    }\n\n    createCharts(): void {\n        this.heavyTrafficCtx = this.elementRef.nativeElement.querySelector('#heavyTrafficChart');\n        this.moderateTrafficCtx = this.elementRef.nativeElement.querySelector('#moderateTrafficChart');\n        this.busiestCtx = this.elementRef.nativeElement.querySelector('#busiestChart');\n\n        this.heavyTrafficChart = new Chart(this.heavyTrafficCtx, {\n            type: 'horizontalBar',\n            data: {\n                labels: [],\n                datasets: [\n                    {\n                        data: [],\n                        hoverBackgroundColor: uiConfig.links.heavyTrafficColor\n                    }\n                ]\n            },\n            options: trafficChartOptions\n        });\n        this.moderateTrafficChart = new Chart(this.moderateTrafficCtx, {\n            type: 'horizontalBar',\n            data: {\n                labels: [],\n                datasets: [\n                    {\n                        data: [],\n                        hoverBackgroundColor: uiConfig.links.moderateTrafficColor\n                    }\n                ]\n            },\n            options: trafficChartOptions\n        });\n        this.busiestChart = new Chart(this.busiestCtx, {\n            type: 'line',\n            data: {\n                labels: [],\n                datasets: [\n                    {\n                        label: 'Traffic volume',\n                        steppedLine: true,\n                        data: [],\n                        borderColor: busiestColor,\n                        fill: false\n                    }\n                ]\n            },\n            options: busiestChartOptions\n        });\n    }\n\n    populateCharts(): void {\n        this.updateOptions();\n        this.updateData();\n        this.updateCharts();\n    }\n\n    updateOptions(): void {\n        this.heavyTrafficChart.options.title.text = 'Heavy traffic';\n        this.heavyTrafficChart.data.labels = this.statistics.heavyTrafficLabels;\n        this.moderateTrafficChart.options.title.text = 'Moderate traffic';\n        this.moderateTrafficChart.data.labels = this.statistics.moderateTrafficLabels;\n        this.busiestChart.options.title.text = 'Busiest edge ' + this.statistics.busiestEdgeLabel;\n        this.busiestChart.options.annotation.annotations.push({\n            type: 'line',\n            mode: 'horizontal',\n            scaleID: \"y-axis-0\",\n            value: this.statistics.busiestEdgeCapacity,\n            borderColor: '#666',\n            borderWidth: 2,\n            label: {\n                backgroundColor: 'rgba(255,255,255,1.0)',\n                fontStyle: \"normal\",\n                fontColor: \"#666\",\n                position: \"right\",\n                yAdjust: 0,\n                content: \"Capacity\",\n                enabled: true\n            }\n        });\n        this.busiestChart.options.annotation.annotations.push({\n            type: 'line',\n            mode: 'vertical',\n            scaleID: \"x-axis-0\",\n            value: formatTimeFromSeconds(this.statistics.busiestEdgeDelay),\n            borderColor: '#666',\n            borderWidth: 2,\n            label: {\n                backgroundColor: 'rgba(255,255,255,1.0)',\n                fontStyle: \"normal\",\n                fontColor: \"#666\",\n                position: \"center\",\n                xAdjust: 0,\n                content: \"Delay\",\n                enabled: true\n            }\n        });\n        this.busiestChart.data.labels = this.statistics.periods.map((value: number) => formatTimeFromSeconds(value));\n    }\n\n    updateData(): void {\n        this.heavyTrafficChart.data.datasets[0].data = this.statistics.heavyTrafficData;\n        this.moderateTrafficChart.data.datasets[0].data = this.statistics.moderateTrafficData;\n        this.busiestChart.data.datasets[0].data = this.statistics.busiestEdgeData;\n    }\n\n    updateCharts(): void {\n        this.heavyTrafficChart.update();\n        this.moderateTrafficChart.update();\n        this.busiestChart.update();\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        \n    \n\n\n    \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChartsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClockService.html":{"url":"injectables/ClockService.html","title":"injectable - ClockService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ClockService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/clock.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                endSimulation\n                            \n                            \n                                    Private\n                                interval\n                            \n                            \n                                    Private\n                                processingTime\n                            \n                            \n                                    Private\n                                simulatedTimeInterval\n                            \n                            \n                                    Private\n                                simulatedTimePeriod\n                            \n                            \n                                    Private\n                                subscription\n                            \n                            \n                                    Private\n                                totalProcessingTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                execute\n                            \n                            \n                                    Public\n                                getStatistics\n                            \n                            \n                                    Private\n                                pause\n                            \n                            \n                                    Public\n                                pressControl\n                            \n                            \n                                    Private\n                                quick\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Private\n                                slow\n                            \n                            \n                                    Private\n                                start\n                            \n                            \n                                    Private\n                                step\n                            \n                            \n                                    Private\n                                stop\n                            \n                            \n                                    Private\n                                updateSimulatedTimePeriod\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, simulation: SimulationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/simulation/clock.service.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        simulation\n                                                  \n                                                        \n                                                                    SimulationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            execute\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        execute()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:180\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getStatistics\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getStatistics()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:93\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pause\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        pause()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:115\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pressControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        pressControl(control: Control)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        control\n                                                        \n                                                                    Control\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            quick\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        quick()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:163\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            slow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        slow()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:148\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            start\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        start()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:103\n                            \n                        \n\n\n                \n                    \n                            Starts simulation.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            step\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        step()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:141\n                            \n                        \n\n\n                \n                    \n                            Performs one step.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stop\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        stop()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:121\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateSimulatedTimePeriod\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateSimulatedTimePeriod()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:195\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            endSimulation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        endSimulation:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            interval\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        interval:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:36\n                            \n                        \n\n                \n                    \n                        Simulation timer.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            processingTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        processingTime:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:41\n                            \n                        \n\n                \n                    \n                        PropagateFlow processing time (ms).\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            simulatedTimeInterval\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        simulatedTimeInterval:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:31\n                            \n                        \n\n                \n                    \n                        Simulated time interval.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            simulatedTimePeriod\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        simulatedTimePeriod:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:26\n                            \n                        \n\n                \n                    \n                        Simulated running time.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            totalProcessingTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        totalProcessingTime:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:43\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Observable, interval, Subscription } from \"rxjs\";\nimport { takeWhile } from \"rxjs/operators\";\n\nimport { Store, select } from '@ngrx/store';\n\nimport { SimulationService } from \"./simulation.service\";\nimport * as fromSimulation from './models/reducers';\nimport { SimulationActionTypes } from './models/actions/simulation.actions';\nimport { uiConfig } from \"../ui/ui-config\";\n\nexport enum Control {\n    start = 'start',\n    pause = 'pause',\n    stop = 'stop',\n    step = 'step',\n    slow = 'slow',\n    quick = 'quick'\n}\n\n@Injectable() export class ClockService {\n\n    /**\n     * Simulated running time.\n     */\n    private simulatedTimePeriod: number;\n\n    /**\n     * Simulated time interval.\n     */\n    private simulatedTimeInterval: number;\n\n    /**\n     * Simulation timer.\n     */\n    private interval: Observable;\n\n    /**\n     * PropagateFlow processing time (ms).\n     */\n    private processingTime: number = 0;\n\n    private totalProcessingTime: number = 0;\n\n    private endSimulation: boolean = false;\n\n    private subscription: Subscription;\n\n    constructor(\n        private store: Store,\n        private simulation: SimulationService\n    ) {\n        this.store.pipe(select(fromSimulation.end)).subscribe((end: boolean) => {\n            this.endSimulation = end;\n        });\n        this.simulatedTimePeriod = 0;\n        this.simulatedTimeInterval = uiConfig.simulatedTimeInterval;\n    }\n\n    public reset(): void {\n        this.simulatedTimePeriod = 0;\n        this.simulatedTimeInterval = uiConfig.simulatedTimeInterval;\n        this.interval = null;\n        this.processingTime = 0;\n        this.totalProcessingTime = 0;\n        this.endSimulation = false;\n        this.subscription = null;\n    }\n\n    public pressControl(control: Control): void {\n        switch (control) {\n            case Control.start:\n                this.start();\n                break;\n            case Control.pause:\n                this.pause();\n                break;\n            case Control.stop:\n                this.stop();\n                break;\n            case Control.step:\n                this.step();\n                break;\n            case Control.slow:\n                this.slow();\n                break;\n            case Control.quick:\n                this.quick();\n                break;\n        }\n    }\n\n    public getStatistics(): any {\n        return {\n            totalSimulatedTime: this.simulatedTimePeriod,\n            totalProcessingTime: this.totalProcessingTime\n        };\n    }\n\n    /**\n     * Starts simulation.\n     */\n    private start(): void {\n        if (!this.subscription || this.subscription.closed) {\n            // Sets interval.\n            this.interval = interval(this.simulatedTimeInterval);\n            this.subscription = this.interval.pipe(\n                takeWhile(() => !this.endSimulation)\n            ).subscribe(() => {\n                this.execute();\n            });\n        }\n    }\n\n    private pause(): void {\n        if (this.subscription && !this.subscription.closed) {\n            this.subscription.unsubscribe();\n        }\n    }\n\n    private stop(): void {\n        if (this.subscription && !this.subscription.closed) {\n            this.subscription.unsubscribe();\n        }\n        this.simulation.resetFlows();\n        this.reset();\n        // Updates simulation state.\n        this.store.dispatch({\n            type: SimulationActionTypes.PeriodsChanged,\n            payload: { simulatedTimeInterval: this.simulatedTimeInterval, simulatedTimePeriod: this.simulatedTimePeriod }\n        });\n        this.store.dispatch({\n            type: SimulationActionTypes.SimulationEnded,\n            payload: false\n        });\n    }\n\n    /**\n     * Performs one step.\n     */\n    private step(): void {\n        if (this.subscription && !this.subscription.closed) {\n            this.subscription.unsubscribe();\n        }\n        this.execute();\n    }\n\n    private slow(): void {\n        if (this.subscription && !this.subscription.closed) {\n            this.subscription.unsubscribe();\n            this.simulatedTimeInterval += uiConfig.timeIntervalIncrement;\n            this.start();\n        } else {\n            this.simulatedTimeInterval += uiConfig.timeIntervalIncrement;\n        }\n        // Updates simulation state.\n        this.store.dispatch({\n            type: SimulationActionTypes.PeriodsChanged,\n            payload: { simulatedTimeInterval: this.simulatedTimeInterval, simulatedTimePeriod: this.simulatedTimePeriod }\n        });\n    }\n\n    private quick(): void {\n        if (this.simulatedTimeInterval - uiConfig.timeIntervalDecrement > this.processingTime) {\n            if (this.subscription && !this.subscription.closed) {\n                this.subscription.unsubscribe();\n                this.simulatedTimeInterval -= uiConfig.timeIntervalDecrement;\n                this.start();\n            } else {\n                this.simulatedTimeInterval -= uiConfig.timeIntervalDecrement;\n            }\n            // Updates simulation state.\n            this.store.dispatch({\n                type: SimulationActionTypes.PeriodsChanged,\n                payload: { simulatedTimeInterval: this.simulatedTimeInterval, simulatedTimePeriod: this.simulatedTimePeriod }\n            });\n        }\n    }\n\n    private execute(): void {\n        const startTime = Date.now();\n        this.simulation.propagateFlows();\n        const endTime = Date.now();\n        // Updates processing time.\n        this.processingTime = endTime - startTime;\n        this.totalProcessingTime += this.processingTime;\n        this.updateSimulatedTimePeriod();\n        // Updates simulation state.\n        this.store.dispatch({\n            type: SimulationActionTypes.PeriodsChanged,\n            payload: { simulatedTimeInterval: this.simulatedTimeInterval, simulatedTimePeriod: this.simulatedTimePeriod }\n        });\n    }\n\n    private updateSimulatedTimePeriod(): void {\n        this.simulatedTimePeriod += this.simulatedTimeInterval;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Counts.html":{"url":"interfaces/Counts.html","title":"interface - Counts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Counts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/models/simulation-state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        arrivedVehicles\n                                \n                                \n                                        startedVehicles\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        arrivedVehicles\n                                    \n                                \n                                \n                                    \n                                        arrivedVehicles:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startedVehicles\n                                    \n                                \n                                \n                                    \n                                        startedVehicles:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface NumericalSimulation {\n\n    edge: string;\n    wayName: string;\n    trafficVolume: number;\n    trafficCount: number;\n    delay: number | string;\n    stops: number;\n\n}\n\nexport interface Counts {\n\n    startedVehicles: number;\n    arrivedVehicles: number;\n\n}\n\nexport interface Simulation {\n\n    /**\n     * Simulation data.\n     */\n    data: NumericalSimulation[];\n    /**\n     * Simulation counts.\n     */\n    counts: Counts;\n    /**\n     * Simulation avg. speed.\n     */\n    avgSpeed: number;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DemandModule.html":{"url":"modules/DemandModule.html","title":"module - DemandModule","body":"\n                   \n\n\n\n\n  Modules\n  DemandModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DemandModule\n\n\n\ncluster_DemandModule_providers\n\n\n\n\nDemandService\n\nDemandService\n\n\n\nDemandModule\n\nDemandModule\n\nDemandModule -->\n\nDemandService->DemandModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/demand/demand.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     DemandService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { DemandService } from './demand.service';\n\n@NgModule({\n    imports: [],\n    declarations: [],\n    providers: [DemandService]\n})\nexport class DemandModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DemandService.html":{"url":"injectables/DemandService.html","title":"injectable - DemandService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  DemandService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/demand/demand.service.ts\n        \n\n            \n                Description\n            \n            \n                Estimates the O/D matrix of the traffic demand.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                odMatrix\n                            \n                            \n                                    Private\n                                startingTimes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                argmin\n                            \n                            \n                                    Public\n                                calcOdMatrix\n                            \n                            \n                                    Public\n                                changeDemand\n                            \n                            \n                                    Public\n                                changeStartingTimes\n                            \n                            \n                                    Private\n                                estimate\n                            \n                            \n                                    Public\n                                getOdMatrix\n                            \n                            \n                                    Public\n                                getStartingTimes\n                            \n                            \n                                    Public\n                                gls\n                            \n                            \n                                    Private\n                                isOnPath\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Private\n                                sum\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(network: NetworkService)\n                    \n                \n                        \n                            \n                                Defined in src/app/demand/demand.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            argmin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        argmin(linkFlows: LinkFlow[], odMatrixAssignment: number[][])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:85\n                            \n                        \n\n\n                \n                    \n                            Argument of the minimum function.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        linkFlows\n                                                        \n                                                                    LinkFlow[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The link flows\n\n                                                        \n                                                \n                                                \n                                                        odMatrixAssignment\n                                                        \n                                                                    number[][]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Assignment matrix of the O/D pair\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            calcOdMatrix\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        calcOdMatrix()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:33\n                            \n                        \n\n\n                \n                    \n                            Calculates O/D matrix.\n\n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            changeDemand\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        changeDemand(demand: number[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        demand\n                                                        \n                                                                    number[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            changeStartingTimes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        changeStartingTimes(startingTimes: number[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        startingTimes\n                                                        \n                                                                    number[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            estimate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        estimate(linkFlows: LinkFlow[], odMatrixAssignment: number[][], x: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:104\n                            \n                        \n\n\n                \n                    \n                            Estimates the sum for the unknown demand.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        linkFlows\n                                                        \n                                                                    LinkFlow[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The link flows\n\n                                                        \n                                                \n                                                \n                                                        odMatrixAssignment\n                                                        \n                                                                    number[][]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Assignment matrix of the O/D pair\n\n                                                        \n                                                \n                                                \n                                                        x\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The unknown demand\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getOdMatrix\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getOdMatrix()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     number[]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getStartingTimes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getStartingTimes()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     number[]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gls\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        gls(linkFlows: LinkFlow[], assignmentMatrix: [][][])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:71\n                            \n                        \n\n\n                \n                    \n                            Generalized Least Squares (GLS).\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        linkFlows\n                                                        \n                                                                    LinkFlow[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The link flows\n\n                                                        \n                                                \n                                                \n                                                        assignmentMatrix\n                                                        \n                                                                    [][][]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Assignment matrix [pairs,paths,edges]\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number[]\n\n                            \n                                \n                                    The array of the demand\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isOnPath\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isOnPath(odMatrixAssignment: number[][], i: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:136\n                            \n                        \n\n\n                \n                    \n                            Checks that the edge belongs to one of the paths of the O/D pair.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        odMatrixAssignment\n                                                        \n                                                                    number[][]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Assignment matrix of the O/D pair\n\n                                                        \n                                                \n                                                \n                                                        i\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The index of the edge\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sum\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sum(odMatrixAssignment: number[][], i: number, x: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:121\n                            \n                        \n\n\n                \n                    \n                            Sums the unknown demand probability for each path.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        odMatrixAssignment\n                                                        \n                                                                    number[][]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Assignment matrix of the O/D pair\n\n                                                        \n                                                \n                                                \n                                                        i\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The index of the edge\n\n                                                        \n                                                \n                                                \n                                                        x\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The unknown demand\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            odMatrix\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        odMatrix:     number[]\n\n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:17\n                            \n                        \n\n                \n                    \n                        The array of the demand.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            startingTimes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        startingTimes:     number[]\n\n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:22\n                            \n                        \n\n                \n                    \n                        Starting time in seconds for each O/D pair.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\nimport { NetworkService } from '../network/network.service';\nimport { LinkFlow } from '../network/graph';\nimport { round } from '../utils';\nimport { uiConfig } from '../ui/ui-config';\n\n/**\n * Estimates the O/D matrix of the traffic demand.\n */\n@Injectable() export class DemandService {\n\n    /**\n     * The array of the demand.\n     */\n    private odMatrix: number[] = [];\n\n    /**\n     * Starting time in seconds for each O/D pair.\n     */\n    private startingTimes: number[] = [];\n\n    constructor(private network: NetworkService) { }\n\n    public reset(): void {\n        this.odMatrix = [];\n    }\n\n    /**\n     * Calculates O/D matrix.\n     */\n    public calcOdMatrix(): Observable {\n        // Gets link flows from network.\n        const linkFlows = this.network.getLinkFlows();\n        // Gets assignment matrix from network.\n        const assignmentMatrix = this.network.getAssignmentMatrix();\n        // Calculates demand.\n        this.odMatrix = this.gls(linkFlows, assignmentMatrix);\n        // Initializes starting times.\n        this.startingTimes = Array(this.odMatrix.length).fill(0);\n        return of(null);\n    }\n\n    public getOdMatrix(): number[] {\n        return this.odMatrix;\n    }\n\n    public changeDemand(demand: number[]): void {\n        if (demand.length > 0) {\n            this.odMatrix = demand;\n        }\n    }\n\n    public getStartingTimes(): number[] {\n        return this.startingTimes;\n    }\n\n    public changeStartingTimes(startingTimes: number[]): void {\n        if (startingTimes.length > 0) {\n            this.startingTimes = startingTimes;\n        }\n    }\n\n    /**\n     * Generalized Least Squares (GLS).\n     * @param linkFlows The link flows\n     * @param assignmentMatrix Assignment matrix [pairs,paths,edges]\n     * @returns The array of the demand\n     */\n    public gls(linkFlows: LinkFlow[], assignmentMatrix: number[][][]): number[] {\n        const demand: number[] = [];\n        // Calculates argument of the minimum for each O/D pair.\n        for (let z = 0; z  0 ? this.argmin(linkFlows, assignmentMatrix[z]) : null;\n        }\n        return demand;\n    }\n\n    /**\n     * Argument of the minimum function.\n     * @param linkFlows The link flows\n     * @param odMatrixAssignment Assignment matrix of the O/D pair\n     */\n    private argmin(linkFlows: LinkFlow[], odMatrixAssignment: number[][]): number {\n        const estimations: number[] = [];\n        // The unknown demand.\n        let x = 0;\n        estimations[x] = this.estimate(linkFlows, odMatrixAssignment, x);\n        if (estimations[x] == 0) { return 0; }\n        do {\n            x++;\n            estimations[x] = this.estimate(linkFlows, odMatrixAssignment, x);\n        } while (estimations[x]  0 && this.isOnPath(odMatrixAssignment, i)) {\n                const base = linkFlows[i].value - this.sum(odMatrixAssignment, i, x);\n                sum += Math.pow(base, 2) / linkFlows[i].variance;\n            }\n        }\n        return round(sum, 2);\n    }\n\n    /**\n     * Sums the unknown demand probability for each path.\n     * @param odMatrixAssignment Assignment matrix of the O/D pair\n     * @param i The index of the edge\n     * @param x The unknown demand\n     */\n    private sum(odMatrixAssignment: number[][], i: number, x: number): number {\n        let sum = 0;\n        for (let n = 0; n  0) {\n                sum += odMatrixAssignment[n][i] * x;\n            }\n        }\n        return round(sum, 2);\n    }\n\n    /**\n     * Checks that the edge belongs to one of the paths of the O/D pair.\n     * @param odMatrixAssignment Assignment matrix of the O/D pair\n     * @param i The index of the edge\n     */\n    private isOnPath(odMatrixAssignment: number[][], i: number): boolean {\n        for (let n = 0; n  0) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Edge.html":{"url":"classes/Edge.html","title":"class - Edge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Edge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                Link between two nodes.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                density\n                            \n                            \n                                    Public\n                                destination\n                            \n                            \n                                    Public\n                                distance\n                            \n                            \n                                    Public\n                                drawingOptions\n                            \n                            \n                                    Public\n                                duration\n                            \n                            \n                                    Public\n                                durationInTraffic\n                            \n                            \n                                    Public\n                                edgeId\n                            \n                            \n                                    Public\n                                flow\n                            \n                            \n                                    Public\n                                freeFlowVelocity\n                            \n                            \n                                    Public\n                                label\n                            \n                            \n                                    Public\n                                linkFlow\n                            \n                            \n                                    Public\n                                maxFlow\n                            \n                            \n                                    Public\n                                origin\n                            \n                            \n                                    Public\n                                tags\n                            \n                            \n                                    Public\n                                velocity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                calcLinkFlow\n                            \n                            \n                                    Public\n                                calcMaxFlow\n                            \n                            \n                                    Protected\n                                draw\n                            \n                            \n                                    Protected\n                                getCapacity\n                            \n                            \n                                    Public\n                                getKjam\n                            \n                            \n                                    Public\n                                getVariance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(edgeId: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/graph.ts:152\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edgeId\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            density\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        density:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:132\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            destination\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        destination:     Node\n\n                    \n                \n                    \n                        \n                            Type :     Node\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:103\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            distance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        distance:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:110\n                            \n                        \n\n                \n                    \n                        Indicates the distance in meters.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            drawingOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        drawingOptions:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:146\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            duration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        duration:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:115\n                            \n                        \n\n                \n                    \n                        Indicates the duration in seconds.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            durationInTraffic\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        durationInTraffic:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:120\n                            \n                        \n\n                \n                    \n                        Indicates the total duration of the edge, taking into account current traffic conditions.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            edgeId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        edgeId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:97\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            flow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        flow:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:134\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            freeFlowVelocity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        freeFlowVelocity:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:125\n                            \n                        \n\n                \n                    \n                        Free flow speed (m/s).\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            label\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        label:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:99\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            linkFlow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        linkFlow:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:139\n                            \n                        \n\n                \n                    \n                        Number of vehicles calculated from traffic data.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            maxFlow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maxFlow:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:144\n                            \n                        \n\n                \n                    \n                        Maximum flow of the link.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            origin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        origin:     Node\n\n                    \n                \n                    \n                        \n                            Type :     Node\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:101\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tags:     Tag[]\n\n                    \n                \n                    \n                        \n                            Type :     Tag[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:105\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            velocity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        velocity:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:130\n                            \n                        \n\n                \n                    \n                        Instant speed (m/s).\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            calcLinkFlow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        calcLinkFlow()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:161\n                            \n                        \n\n\n                \n                    \n                            Calculates the value of the link flow.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            calcMaxFlow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        calcMaxFlow(factor: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:192\n                            \n                        \n\n\n                \n                    \n                            Calculates the max flow of the edge.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        factor\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Weather Adjustment Factor\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            draw\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        draw(color: string, zIndex: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:212\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        color\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        zIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                10\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            getCapacity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getCapacity(timeInterval: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:208\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timeInterval\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getKjam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getKjam()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:204\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getVariance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getVariance()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:200\n                            \n                        \n\n\n                \n                    \n                            Gets the variance of measurement error of link flow.\n\n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\n\nimport * as combine from 'mout/array/combine';\n\nimport { Heap, Path } from './k-shortest-path';\nimport { round } from '../utils';\nimport { environment } from '../../environments/environment';\nimport { uiConfig } from '../ui/ui-config';\n\nexport enum PathType {\n    distance = 'distance',\n    duration = 'duration'\n}\n\n/**\n * An O/D pair is described by the origin and destination nodes, and the type of path.\n */\nexport interface OdPair {\n\n    origin: string;\n    destination: string;\n    pathType: PathType;\n\n}\n\nexport interface LinkFlow {\n\n    /**\n     * linkFlow attribute.\n     */\n    value: number;\n    /**\n     * Variance is the inverse of density.\n     */\n    variance: number;\n\n}\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public label: string;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    public drawingOptions: { marker?: google.maps.Marker } = {};\n\n    /**\n     * Used by the k shortest path routing.\n     */\n    public count: number = 0;\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public label: string;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    /**\n     * Free flow speed (m/s).\n     */\n    public freeFlowVelocity: number;\n\n    /**\n     * Instant speed (m/s).\n     */\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    /**\n     * Number of vehicles calculated from traffic data.\n     */\n    public linkFlow: number;\n\n    /**\n     * Maximum flow of the link.\n     */\n    public maxFlow: number;\n\n    public drawingOptions: {\n        originalPath?: google.maps.LatLng[],\n        path?: google.maps.LatLng[],\n        polyline?: google.maps.Polyline,\n        marker?: google.maps.Marker,\n        infowindow?: google.maps.InfoWindow\n    } = {};\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the link flow.\n     */\n    public calcLinkFlow(): void {\n        // Min distance is 1 meter.\n        if (this.distance == 0) { this.distance = 1; }\n        // Min duration is 1 second.\n        if (this.duration == 0) {\n            this.duration = round(this.distance / (50 / 3.6)) > 1 ? round(this.distance / (50 / 3.6)) : 1;\n        }\n        // Calculates free flow velocity (m/s).\n        this.freeFlowVelocity = round(this.distance / this.duration, 2);\n        // Calculates link flow.\n        if (this.durationInTraffic > 0 && this.durationInTraffic >= this.duration) {\n            // Calculates velocity (m/s).\n            this.velocity = round(this.distance / this.durationInTraffic, 2);\n            // Calculates density.\n            this.density = round(this.getKjam() * (this.freeFlowVelocity - this.velocity) / this.freeFlowVelocity, 2);\n            // Calculates flow.\n            this.flow = round(this.density * this.velocity, 2);\n            // Calculates link flow.\n            this.linkFlow = round(this.density * this.distance);\n        } else {\n            this.velocity = 0;\n            this.density = 0;\n            this.flow = 0;\n            this.linkFlow = 0;\n        }\n    }\n\n    /**\n     * Calculates the max flow of the edge.\n     * @param factor Weather Adjustment Factor\n     */\n    public calcMaxFlow(factor: number): void {\n        const maxFlow = this.getKjam() * this.freeFlowVelocity;\n        this.maxFlow = round(maxFlow * factor, 2);\n    }\n\n    /**\n     * Gets the variance of measurement error of link flow.\n     */\n    public getVariance(): number {\n        return this.density > 0 ? round(1 / this.density, 2) : 1;\n    }\n\n    public getKjam(): number {\n        return round(1 / uiConfig.sp, 2);\n    }\n\n    protected getCapacity(timeInterval: number): number {\n        return this.maxFlow * timeInterval;\n    }\n\n    protected draw(color: string, zIndex: number = 10): void {\n        this.drawingOptions.polyline.set('strokeColor', color);\n        this.drawingOptions.polyline.set('zIndex', zIndex);\n        this.drawingOptions.marker.set('visible', true);\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    protected nodes: Node[] = [];\n\n    protected edges: Edge[] = [];\n\n    protected relations: Relation[] = [];\n\n    /**\n     * Paths for each O/D pair [pairs,paths,edges].\n     */\n    protected shortestPaths: Edge[][][] = [];\n\n    protected incidenceMatrix: boolean[][][] = [];\n\n    protected assignmentMatrix: number[][][] = [];\n\n    private heap: Heap;\n\n    /**\n     * Shortest paths drawing options.\n     */\n    private drawingOptions: {\n        polylines?: google.maps.Polyline[][];\n    } = {};\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public getEdge(edgeId: number): Edge {\n        return this.edges.find((edge: Edge) => edge.edgeId == edgeId);\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Key:oneway\n     * @param edgeId Id of the edge\n     */\n    public isOneway(edgeId: number): boolean {\n        return !!this.getEdge(edgeId).tags.find(tag => tag.key == 'oneway' && tag.value != 'no') ||\n            this.isRoundabout(edgeId);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Tag:junction%3Droundabout\n     * @param edgeId Id of the edge\n     */\n    public isRoundabout(edgeId: number): boolean {\n        return this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'roundabout') ||\n            this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'circular') ?\n            true : false;\n    }\n\n    public getOdNode(label: string): Node {\n        return this.nodes.find((node: Node) => node.label == label);\n    }\n\n    public getOdNodes(): Node[] {\n        return this.nodes.filter((node: Node) => node.label);\n    }\n\n    /**\n     * Calculates the set of minimum paths.\n     * @param odPairs The O/D pairs\n     */\n    public calcShortestPaths(odPairs: OdPair[]): Observable {\n        try {\n            for (let i = 0; i  edge.label);\n    }\n\n    /**\n     * Calculates the incidence matrix of paths for O/D pairs.\n     */\n    public calcIncidenceMatrix(): Observable {\n        const edges = this.getPathsEdges();\n        for (let z = 0; z  value.edgeId == edges[m].edgeId)) {\n                        // The path crosses the edge.\n                        this.incidenceMatrix[z][n][m] = true;\n                    } else {\n                        // The path does not cross the edge.\n                        this.incidenceMatrix[z][n][m] = false;\n                    }\n                }\n            }\n        }\n        return of(null);\n    }\n\n    public getIncidenceMatrix(): boolean[][][] {\n        return this.incidenceMatrix;\n    }\n\n    /**\n     * Calculates the assignment matrix.\n     * @param odPairs The O/D pairs\n     */\n    public calcAssignmentMatrix(odPairs: OdPair[]): Observable {\n        // Calculates the probabilities of shortest paths.\n        const shortestPathsProbabilities = this.calcShortestPathsProbabilities(odPairs);\n\n        // Assignment matrix.\n        for (let z = 0; z  {\n        const edges = this.getPathsEdges();\n        for (const edge of edges) {\n            edge.calcMaxFlow(factor);\n        }\n        return of(null);\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link distance or duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param o Source node\n     * @param d Destination node\n     * @param pathType Distance or duration\n     * @param k The number of shortest paths to compute\n     * @returns The set of shortest paths\n     */\n    private ksp(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Sets to zero the count property of the nodes.\n        this.resetCount();\n        // Instantiates the heap.\n        this.heap = new Heap();\n        // Inserts the path of origin into heap with cost 0.\n        this.heap.push({ pathId: 0, node: o, edges: [], cost: 0 });\n        // Walks the graph.\n        return this.walk(o, d, pathType, k);\n    }\n\n    /**\n     * Breadth First Search (BFS) algorithm for traversing and searching tree data\n     * explores the neighbor nodes first, before moving to the next level neighbors.\n     */\n    private walk(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Set of shortest paths from origin to destination.\n        const shortestPaths: Path[] = [];\n\n        let pathId = 1;\n        let node: Node;\n        while (this.heap.getPaths().length > 0 && d.count  edge.origin.nodeId == node.nodeId) ? false : true;\n    }\n\n    private resetCount(): void {\n        for (const node of this.nodes) {\n            node.count = 0;\n        }\n    }\n\n    /**\n     * Removes the alternative paths that differ only for two links.\n     * @param shortestPaths The shortest paths as created by the algorithm\n     */\n    private filterPaths(shortestPaths: Path[]): void {\n        if (shortestPaths.length > 1) {\n            let i = 0;\n            do {\n                const pathA = shortestPaths[i].edges;\n                const pathB = shortestPaths[i + 1].edges;\n                const sharedEdges = pathA.filter((edgeOfA: Edge) =>\n                    pathB.find((edgeOfB: Edge) =>\n                        edgeOfB.edgeId == edgeOfA.edgeId));\n                if (pathA.length - sharedEdges.length  value.edgeId == edge.edgeId)) {\n                        edges.push(edge);\n                        edge.label = 'E' + count++;\n                        if (!environment.testing) {\n                            edge.drawingOptions.infowindow.setContent('Edge: ' + edge.label);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Multinomial logit model.\n     * @param odPairs The O/D pairs\n     */\n    private calcShortestPathsProbabilities(odPairs: OdPair[]): number[][] {\n        // Gets the total cost of paths.\n        const pathCosts = this.calcPathCosts(odPairs);\n        const shortestPathsProbabilities: number[][] = [];\n        // Theta parameter adjustment.\n        const parameter = uiConfig.theta * 100;\n        // Calculates numerator.\n        const exps: number[][] = [];\n        for (let z = 0; z  {\n                return value > 0 ? Math.exp(-value / parameter) : 0;\n            });\n        }\n        // Calculates denominator.\n        const sumExps: number[] = [];\n        for (let z = 0; z  a + b, 0);\n            sumExps.push(sum);\n        }\n        // Probabilities.\n        for (let z = 0; z  0 ? round(exps[z][n] / sumExps[z], 3) : 0;\n                shortestPathsProbabilities[z].push(p);\n            }\n        }\n        return shortestPathsProbabilities;\n    }\n\n    private calcPathCosts(odPairs: OdPair[]): number[][] {\n        const pathCosts: number[][] = [];\n        for (let z = 0; z \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnumValues.html":{"url":"classes/EnumValues.html","title":"class - EnumValues","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnumValues\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/utils.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getNames\n                            \n                            \n                                    Static\n                                getValues\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getNames\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getNames(e: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/utils.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getValues\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getValues(e: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/utils.ts:9\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     T[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export type EnumValueType = string | number;\n\nexport class EnumValues {\n\n    public static getNames(e: any): string[] {\n        return Object.keys(e).filter((key: string) => isNaN(+key));\n    }\n\n    public static getValues(e: any): T[] {\n        return this.getNames(e).map((name: string) => e[name]) as T[];\n    }\n\n}\n\nexport function toSeconds(value: number): number {\n    return value / 1000;\n}\n\n/**\n * Format time to M:SS\n * @param s Seconds\n * @returns M:SS\n */\nexport function formatTimeFromSeconds(s: number): string {\n    return Math.floor(s / 60) + ':' + ('0' + Math.floor(s % 60)).slice(-2);\n}\n\n/**\n * Format time to M:SS.mmm\n * @param ms Milliseconds\n * @returns M:SS.mmm\n */\nexport function formatTimeFromMilliseconds(ms: number): string {\n    return Math.floor(ms / 1000 / 60) + ':' +\n        ('0' + Math.floor((ms / 1000) % 60)).slice(-2) + '.' +\n        ('00' + (ms - Math.floor(ms / 1000) * 1000)).slice(-3);\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EstimateOfDemandComponent.html":{"url":"components/EstimateOfDemandComponent.html","title":"component - EstimateOfDemandComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EstimateOfDemandComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-estimate-of-demand\n            \n\n            \n                styleUrls\n                estimate-of-demand.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./estimate-of-demand.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pathTypes\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addDestination\n                            \n                            \n                                addOrigin\n                            \n                            \n                                deleteOdPair\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                updateOdPairs\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, wizard: WizardService, network: NetworkService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addDestination\n                            \n                            \n                        \n                    \n                \n                \n                    \naddDestination(control: FormArray, origin: string, destination: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:150\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        control\n                                                        \n                                                                    FormArray\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        origin\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        destination\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addOrigin\n                            \n                            \n                        \n                    \n                \n                \n                    \naddOrigin(control: FormArray, origin: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:142\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        control\n                                                        \n                                                                    FormArray\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        origin\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteOdPair\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteOdPair(i: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:85\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        i\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateOdPairs\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateOdPairs(node: Node)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:93\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                                    Node\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pathTypes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pathTypes:     PathType[]\n\n                    \n                \n                    \n                        \n                            Type :     PathType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        odPairs\n                    \n                \n\n                \n                    \n                        getodPairs()\n                    \n                \n                            \n                                \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:29\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, FormArray } from '@angular/forms';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { WizardService } from '../wizard.service';\nimport { NetworkService } from '../../../network/network.service';\nimport * as fromUi from '../../models/reducers';\nimport { Map } from '../../models/ui-state';\nimport { PathType, OdPair, Node } from '../../../network/graph';\nimport { EnumValues } from '../../utils';\nimport { uiConfig } from '../../ui-config';\n\nimport { BaseComponent } from '../../models/base.component';\n\n@Component({\n    selector: 'wizard-estimate-of-demand',\n    templateUrl: './estimate-of-demand.component.html',\n    styleUrls: ['./estimate-of-demand.component.scss']\n})\nexport class EstimateOfDemandComponent extends BaseComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    pathTypes: PathType[];\n\n    get odPairs(): FormArray {\n        return this.formGroup.get('odPairs') as FormArray;\n    }\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private store: Store,\n        private wizard: WizardService,\n        private network: NetworkService\n    ) {\n        super();\n\n        this.pathTypes = EnumValues.getValues(PathType);\n    }\n\n    ngOnInit(): void {\n        this.valueChanges();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        // Updates network service data on value changes.\n        this.subscriptions.push(this.formGroup.get('odPairs').valueChanges.subscribe(\n            (odPairs: OdPair[]) => {\n                this.network.setOdPairs(odPairs);\n            }\n        ));\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.currentStep)).subscribe((currentStep: number) => {\n            switch (currentStep) {\n                case 0:\n                    // Resets control.\n                    const control = this.formGroup.get('odPairs') as FormArray;\n                    if (control.length > 0) {\n                        for (let i = control.length - 1; i >= 0; i--) {\n                            control.removeAt(i);\n                        }\n                    }\n                    break;\n            }\n        }));\n        this.subscriptions.push(this.store.pipe(select(fromUi.map)).subscribe((map: Map) => {\n            if (map && map.data.selectedNode) {\n                this.updateOdPairs(map.data.selectedNode);\n\n            }\n        }));\n    }\n\n    sendActions(): void {\n        //\n    }\n\n    deleteOdPair(i: number): void {\n        // Updates control.\n        const control = this.formGroup.get('odPairs') as FormArray;\n        control.removeAt(i);\n        // Updates step state.\n        this.wizard.updateStep(this.formGroup.value, this.index);\n    }\n\n    updateOdPairs(node: Node): void {\n        const control = this.formGroup.get('odPairs') as FormArray;\n        const odPairs = control.value;\n\n        let error = null;\n\n        if (odPairs.length > 0) {\n            const odPair = odPairs[odPairs.length - 1];\n            // Checks limit.\n            if (odPairs.length == uiConfig.maxOdPairs && odPairs[uiConfig.maxOdPairs - 1].destination) {\n                error = `The maximum number of O/D pairs is ${uiConfig.maxOdPairs}`;\n                // Checks if valid node.\n            } else if (odPair.destination == null && node.incomingEdges.length == 0) {\n                error = `The node cannot be a destination`;\n            } else if (odPair.destination && node.outgoingEdges.length == 0) {\n                error = `The node cannot be an origin`;\n                // Checks if last O/D pair is completed.\n            } else if (odPair.destination) {\n                // Adds origin.\n                this.addOrigin(control, node.label);\n                // Checks if same node.\n            } else if (odPair.origin == node.label) {\n                error = `The origin and destination nodes cannot be the same`;\n            } else {\n                // Checks if the pair is valid.\n                if (odPairs.filter(pair => pair.origin == odPair.origin && pair.destination == node.label).length > 0) {\n                    error = `O/D pair already selected`;\n                } else {\n                    // Adds destination.\n                    this.addDestination(control, odPair.origin, node.label);\n                }\n            }\n        } else {\n            if (node.outgoingEdges.length == 0) {\n                error = `The node cannot be an origin`;\n            } else {\n                // Adds origin.\n                this.addOrigin(control, node.label);\n            }\n        }\n\n        if (error) {\n            this.wizard.putInError(error);\n        } else {\n            // Updates step state.\n            this.wizard.updateStep({ odPairs: control.value }, 2);\n        }\n    }\n\n    addOrigin(control: FormArray, origin: string): void {\n        control.push(this.formBuilder.group({\n            origin: origin,\n            destination: null,\n            pathType: null\n        }));\n    }\n\n    addDestination(control: FormArray, origin: string, destination: string): void {\n        control.get([control.length - 1]).patchValue({\n            origin: origin,\n            destination: destination,\n            pathType: PathType.distance\n        });\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                O\n                D\n                Path\n                \n            \n            \n                \n                    {{ pair.value.origin }}\n                \n                \n                    {{ pair.value.destination }}\n                \n                \n                    \n                        \n                            {{ path }}\n                        \n                    \n                \n                \n                    \n                        delete\n                    \n                \n            \n        \n    \n\n    \n        Continue\n            navigate_next\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        O                D                Path                                                                            {{ pair.value.origin }}                                                    {{ pair.value.destination }}                                                                                                        {{ path }}                                                                                                                        delete                                                                        Continue            navigate_next            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EstimateOfDemandComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/footer/footer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentYear\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/footer/footer.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentYear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentYear:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : new Date().getFullYear()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/footer/footer.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-footer',\n    templateUrl: './footer.component.html',\n    styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n    currentYear: number = new Date().getFullYear();\n\n    ngOnInit(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n        \n            \n                \n                    \n                        Privacy\n                    \n                \n                \n                    \n                        Terms of service\n                    \n                \n            \n        \n    \n\n    \n\n    \n        \n            Copyright&nbsp;©&nbsp;{{ currentYear }} Roberto&nbsp;Simonetti - MIT license\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                Privacy                                                                                                Terms of service                                                                                        Copyright © {{ currentYear }} Roberto Simonetti - MIT license            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GoOn.html":{"url":"classes/GoOn.html","title":"class - GoOn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  GoOn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/actions/wizard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/models/actions/wizard.actions.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : WizardActionTypes.GoOn\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Step } from '../ui-state';\n\n/**\n * ngrx: wizard Actions.\n */\nexport enum WizardActionTypes {\n\n    StepChanged = '[Wizard] Step Changed',\n    StepError = '[Wizard] Step Error',\n    StepPending = '[Wizard] Step Pending',\n    GoOn = '[Wizard] Go On',\n    Reset = '[Wizard] Reset'\n\n}\n\nexport class StepChanged implements Action {\n\n    public readonly type: string = WizardActionTypes.StepChanged;\n\n    constructor(public payload: { step: Step, index: number }) { }\n\n}\n\nexport class StepError implements Action {\n\n    public readonly type: string = WizardActionTypes.StepError;\n\n    constructor(public payload: string) { }\n\n}\n\nexport class StepPending implements Action {\n\n    public readonly type: string = WizardActionTypes.StepPending;\n\n    constructor(public payload: string | boolean) { }\n\n}\n\nexport class GoOn implements Action {\n\n    public readonly type: string = WizardActionTypes.GoOn;\n\n    constructor(public payload: { step: Step, index: number, nextIndex: number }) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = WizardActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type WizardActions = StepChanged | StepError | StepPending | GoOn | Reset;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GoogleMapComponent.html":{"url":"components/GoogleMapComponent.html","title":"component - GoogleMapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GoogleMapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/map/google-map.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                google-map\n            \n\n\n\n            \n                template\n                \n\n\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                map\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createMap\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                center\n                            \n                            \n                                disableDefaultUI\n                            \n                            \n                                disableDoubleClickZoom\n                            \n                            \n                                gestureHandling\n                            \n                            \n                                mapTypeId\n                            \n                            \n                                maxZoom\n                            \n                            \n                                minZoom\n                            \n                            \n                                styles\n                            \n                            \n                                zoom\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(map: MapService, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/map/google-map.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                    MapService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        center\n                    \n                    \n                        Center map. Required.\n\n                            \n                            Type:    google.maps.LatLngLiteral\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableDefaultUI\n                    \n                    \n                        Enables/disables all default UI.\n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableDoubleClickZoom\n                    \n                    \n                        Enables/disables zoom and center on double click. Enabled by default.\n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        gestureHandling\n                    \n                    \n                        This setting controls how gestures on the map are handled.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapTypeId\n                    \n                    \n                        The initial map mapTypeId. Defaults to ROADMAP.\n\n                            \n                            Type:    google.maps.MapTypeId\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxZoom\n                    \n                    \n                        The maximum zoom level which will be displayed on the map.\n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minZoom\n                    \n                    \n                        The minimum zoom level which will be displayed on the map.\n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        styles\n                    \n                    \n                        Styles to apply to each of the default map types.\n\n                            \n                            Type:    google.maps.MapTypeStyle[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zoom\n                    \n                    \n                        The initial map zoom level. Required.\n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createMap(el: HTMLElement)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                        \n                                                                    HTMLElement\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:66\n                            \n                        \n\n\n                \n                    \n                            On changes, updates center map & zoom.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            On init, creates map.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            map\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        map:     MapService\n\n                    \n                \n                    \n                        \n                            Type :     MapService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:51\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit, OnChanges, SimpleChange, ElementRef } from '@angular/core';\n\nimport { MapService } from './/map.service';\n\n@Component({\n    selector: 'google-map',\n    template: `\n        \n        \n        `\n})\nexport class GoogleMapComponent implements OnInit, OnChanges {\n\n    /**\n     * Center map. Required.\n     */\n    @Input() center: google.maps.LatLngLiteral;\n    /**\n     * The initial map zoom level. Required.\n     */\n    @Input() zoom: number;\n    /**\n     * Enables/disables all default UI.\n     */\n    @Input() disableDefaultUI: boolean;\n    /**\n     * Enables/disables zoom and center on double click. Enabled by default.\n     */\n    @Input() disableDoubleClickZoom: boolean;\n    /**\n     * The initial map mapTypeId. Defaults to ROADMAP.\n     */\n    @Input() mapTypeId: google.maps.MapTypeId;\n    /**\n     * The maximum zoom level which will be displayed on the map.\n     */\n    @Input() maxZoom: number;\n    /**\n     * The minimum zoom level which will be displayed on the map.\n     */\n    @Input() minZoom: number;\n    /**\n     * This setting controls how gestures on the map are handled.\n     */\n    @Input() gestureHandling: string;\n    /**\n     * Styles to apply to each of the default map types.\n     */\n    @Input() styles: google.maps.MapTypeStyle[];\n\n    constructor(public map: MapService, private elementRef: ElementRef) { }\n\n    /**\n     * On init, creates map.\n     */\n    ngOnInit(): void {\n        // Gets the map element.\n        const el: HTMLElement = this.elementRef.nativeElement.querySelector('#map');\n\n        this.createMap(el);\n    }\n\n    /**\n     * On changes, updates center map & zoom.\n     */\n    ngOnChanges(changes: { [propertyName: string]: SimpleChange }): void {\n        if (changes['center']) { this.map.setCenter(this.center); }\n        if (changes['zoom']) { this.map.setZoom(this.zoom); }\n    }\n\n    private createMap(el: HTMLElement): void {\n        this.map.initMap(el, {\n            center: this.center,\n            disableDefaultUI: this.disableDefaultUI,\n            disableDoubleClickZoom: this.disableDoubleClickZoom,\n            mapTypeId: this.mapTypeId,\n            maxZoom: this.maxZoom as number,\n            minZoom: this.minZoom as number,\n            gestureHandling: this.gestureHandling as string,\n            styles: this.styles,\n            zoom: this.zoom as number\n        });\n    }\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GoogleMapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Heap.html":{"url":"classes/Heap.html","title":"class - Heap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Heap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/k-shortest-path.ts\n        \n\n            \n                Description\n            \n            \n                Heap data structure containing paths.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                paths\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getPaths\n                            \n                            \n                                    Public\n                                getShortestPath\n                            \n                            \n                                    Public\n                                pop\n                            \n                            \n                                    Public\n                                push\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            paths\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paths:     Path[]\n\n                    \n                \n                    \n                        \n                            Type :     Path[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/k-shortest-path.ts:23\n                            \n                        \n\n                \n                    \n                        The queue of paths.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getPaths\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getPaths()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/k-shortest-path.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Path[]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getShortestPath\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getShortestPath()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/k-shortest-path.ts:45\n                            \n                        \n\n\n                \n                    \n                            Returns the shortest path in the heap by cost.\n\n\n                            \n                                Returns :     Path\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pop\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        pop(pathId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/k-shortest-path.ts:37\n                            \n                        \n\n\n                \n                    \n                            Removes a path from the heap.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pathId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The id of the path\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            push\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        push(path: Path)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/k-shortest-path.ts:29\n                            \n                        \n\n\n                \n                    \n                            Inserts a path into the heap.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                        \n                                                                    Path\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The path to insert\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Edge, Node } from \"./graph\";\n\n/**\n * Path to generic node.\n */\nexport interface Path {\n\n    pathId: number;\n    node: Node;\n    edges: Edge[];\n    cost: number;\n\n}\n\n/**\n * Heap data structure containing paths.\n */\nexport class Heap {\n\n    /**\n     * The queue of paths.\n     */\n    private paths: Path[] = [];\n\n    /**\n     * Inserts a path into the heap.\n     * @param path The path to insert\n     */\n    public push(path: Path): void {\n        this.paths.push({ pathId: path.pathId, node: path.node, edges: path.edges, cost: path.cost });\n    }\n\n    /**\n     * Removes a path from the heap.\n     * @param pathId The id of the path\n     */\n    public pop(pathId: number): void {\n        const index = this.paths.findIndex((path: Path) => path.pathId == pathId);\n        this.paths.splice(index, 1);\n    }\n\n    /**\n     * Returns the shortest path in the heap by cost.\n     */\n    public getShortestPath(): Path {\n        return this.paths.reduce((prev: Path, curr: Path) => prev.cost \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home/home.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home/home.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        show:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, ElementRef } from '@angular/core';\n\nimport * as anime from 'animejs';\n\nimport { HOME_TRANSITION } from './home.transition';\n\n@Component({\n    selector: 'app-home',\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.scss'],\n    animations: [HOME_TRANSITION]\n})\nexport class HomeComponent implements OnInit, AfterViewInit {\n\n    show: boolean = false;\n\n    constructor(private elementRef: ElementRef) { }\n\n    ngOnInit(): void {\n        //\n    }\n\n    ngAfterViewInit(): void {\n        const element: HTMLElement = this.elementRef.nativeElement.querySelector('.headline .letters');\n        const text: string = element.innerText;\n        const letters: string[] = text.split('');\n\n        let wrappedText = '';\n        for (const letter of letters) {\n            wrappedText += `${letter}`;\n        }\n\n        element.innerHTML = wrappedText;\n\n        // Anime.\n        const basicTimeline = anime.timeline();\n        basicTimeline\n            .add({\n                targets: '.headline .letter',\n                scale: [0.3, 1],\n                opacity: [0, 1],\n                translateZ: 0,\n                easing: 'linear',\n                delay: (el, i) => {\n                    return 70 * (i + 1);\n                }\n            }).add({\n                targets: '.headline .line',\n                scaleX: [0, 1],\n                opacity: [0.5, 1],\n                easing: 'linear',\n                offset: '-=840',\n                delay: (el, i, l) => {\n                    return 70 * (l - i);\n                },\n                complete: (anim) => {\n                    this.show = true;\n                }\n            });\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                STRADA\n                \n            \n        \n        \n            \n                Simulation of TRAffic DAta\n                An urban traffic web simulator that uses data in real time\n                GET STARTED\n                \n                \n                More info\n            \n        \n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        STRADA                                                                        Simulation of TRAffic DAta                An urban traffic web simulator that uses data in real time                GET STARTED                                                More info                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoDialogComponent.html":{"url":"components/InfoDialogComponent.html","title":"component - InfoDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InfoDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/info-dialog.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                info-dialog\n            \n\n\n\n            \n                template\n                Info\n\n    {{ data }}\n\n\n    No\n    Yes\n\n\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/info-dialog.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/info-dialog.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/info-dialog.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n    selector: 'info-dialog',\n    template: `\n        Info\n        \n            {{ data }}\n        \n        \n            No\n            Yes\n        \n    `,\n    styles: []\n})\nexport class InfoDialogComponent {\n\n    constructor(\n        public dialogRef: MatDialogRef,\n        @Inject(MAT_DIALOG_DATA) public data: any\n    ) { }\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Info    {{ data }}    No    Yes'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InfoDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LinkFlow.html":{"url":"interfaces/LinkFlow.html","title":"interface - LinkFlow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LinkFlow\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        value\n                                \n                                \n                                        variance\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    linkFlow attribute.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        variance\n                                    \n                                \n                                \n                                    \n                                        variance:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Variance is the inverse of density.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\n\nimport * as combine from 'mout/array/combine';\n\nimport { Heap, Path } from './k-shortest-path';\nimport { round } from '../utils';\nimport { environment } from '../../environments/environment';\nimport { uiConfig } from '../ui/ui-config';\n\nexport enum PathType {\n    distance = 'distance',\n    duration = 'duration'\n}\n\n/**\n * An O/D pair is described by the origin and destination nodes, and the type of path.\n */\nexport interface OdPair {\n\n    origin: string;\n    destination: string;\n    pathType: PathType;\n\n}\n\nexport interface LinkFlow {\n\n    /**\n     * linkFlow attribute.\n     */\n    value: number;\n    /**\n     * Variance is the inverse of density.\n     */\n    variance: number;\n\n}\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public label: string;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    public drawingOptions: { marker?: google.maps.Marker } = {};\n\n    /**\n     * Used by the k shortest path routing.\n     */\n    public count: number = 0;\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public label: string;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    /**\n     * Free flow speed (m/s).\n     */\n    public freeFlowVelocity: number;\n\n    /**\n     * Instant speed (m/s).\n     */\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    /**\n     * Number of vehicles calculated from traffic data.\n     */\n    public linkFlow: number;\n\n    /**\n     * Maximum flow of the link.\n     */\n    public maxFlow: number;\n\n    public drawingOptions: {\n        originalPath?: google.maps.LatLng[],\n        path?: google.maps.LatLng[],\n        polyline?: google.maps.Polyline,\n        marker?: google.maps.Marker,\n        infowindow?: google.maps.InfoWindow\n    } = {};\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the link flow.\n     */\n    public calcLinkFlow(): void {\n        // Min distance is 1 meter.\n        if (this.distance == 0) { this.distance = 1; }\n        // Min duration is 1 second.\n        if (this.duration == 0) {\n            this.duration = round(this.distance / (50 / 3.6)) > 1 ? round(this.distance / (50 / 3.6)) : 1;\n        }\n        // Calculates free flow velocity (m/s).\n        this.freeFlowVelocity = round(this.distance / this.duration, 2);\n        // Calculates link flow.\n        if (this.durationInTraffic > 0 && this.durationInTraffic >= this.duration) {\n            // Calculates velocity (m/s).\n            this.velocity = round(this.distance / this.durationInTraffic, 2);\n            // Calculates density.\n            this.density = round(this.getKjam() * (this.freeFlowVelocity - this.velocity) / this.freeFlowVelocity, 2);\n            // Calculates flow.\n            this.flow = round(this.density * this.velocity, 2);\n            // Calculates link flow.\n            this.linkFlow = round(this.density * this.distance);\n        } else {\n            this.velocity = 0;\n            this.density = 0;\n            this.flow = 0;\n            this.linkFlow = 0;\n        }\n    }\n\n    /**\n     * Calculates the max flow of the edge.\n     * @param factor Weather Adjustment Factor\n     */\n    public calcMaxFlow(factor: number): void {\n        const maxFlow = this.getKjam() * this.freeFlowVelocity;\n        this.maxFlow = round(maxFlow * factor, 2);\n    }\n\n    /**\n     * Gets the variance of measurement error of link flow.\n     */\n    public getVariance(): number {\n        return this.density > 0 ? round(1 / this.density, 2) : 1;\n    }\n\n    public getKjam(): number {\n        return round(1 / uiConfig.sp, 2);\n    }\n\n    protected getCapacity(timeInterval: number): number {\n        return this.maxFlow * timeInterval;\n    }\n\n    protected draw(color: string, zIndex: number = 10): void {\n        this.drawingOptions.polyline.set('strokeColor', color);\n        this.drawingOptions.polyline.set('zIndex', zIndex);\n        this.drawingOptions.marker.set('visible', true);\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    protected nodes: Node[] = [];\n\n    protected edges: Edge[] = [];\n\n    protected relations: Relation[] = [];\n\n    /**\n     * Paths for each O/D pair [pairs,paths,edges].\n     */\n    protected shortestPaths: Edge[][][] = [];\n\n    protected incidenceMatrix: boolean[][][] = [];\n\n    protected assignmentMatrix: number[][][] = [];\n\n    private heap: Heap;\n\n    /**\n     * Shortest paths drawing options.\n     */\n    private drawingOptions: {\n        polylines?: google.maps.Polyline[][];\n    } = {};\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public getEdge(edgeId: number): Edge {\n        return this.edges.find((edge: Edge) => edge.edgeId == edgeId);\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Key:oneway\n     * @param edgeId Id of the edge\n     */\n    public isOneway(edgeId: number): boolean {\n        return !!this.getEdge(edgeId).tags.find(tag => tag.key == 'oneway' && tag.value != 'no') ||\n            this.isRoundabout(edgeId);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Tag:junction%3Droundabout\n     * @param edgeId Id of the edge\n     */\n    public isRoundabout(edgeId: number): boolean {\n        return this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'roundabout') ||\n            this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'circular') ?\n            true : false;\n    }\n\n    public getOdNode(label: string): Node {\n        return this.nodes.find((node: Node) => node.label == label);\n    }\n\n    public getOdNodes(): Node[] {\n        return this.nodes.filter((node: Node) => node.label);\n    }\n\n    /**\n     * Calculates the set of minimum paths.\n     * @param odPairs The O/D pairs\n     */\n    public calcShortestPaths(odPairs: OdPair[]): Observable {\n        try {\n            for (let i = 0; i  edge.label);\n    }\n\n    /**\n     * Calculates the incidence matrix of paths for O/D pairs.\n     */\n    public calcIncidenceMatrix(): Observable {\n        const edges = this.getPathsEdges();\n        for (let z = 0; z  value.edgeId == edges[m].edgeId)) {\n                        // The path crosses the edge.\n                        this.incidenceMatrix[z][n][m] = true;\n                    } else {\n                        // The path does not cross the edge.\n                        this.incidenceMatrix[z][n][m] = false;\n                    }\n                }\n            }\n        }\n        return of(null);\n    }\n\n    public getIncidenceMatrix(): boolean[][][] {\n        return this.incidenceMatrix;\n    }\n\n    /**\n     * Calculates the assignment matrix.\n     * @param odPairs The O/D pairs\n     */\n    public calcAssignmentMatrix(odPairs: OdPair[]): Observable {\n        // Calculates the probabilities of shortest paths.\n        const shortestPathsProbabilities = this.calcShortestPathsProbabilities(odPairs);\n\n        // Assignment matrix.\n        for (let z = 0; z  {\n        const edges = this.getPathsEdges();\n        for (const edge of edges) {\n            edge.calcMaxFlow(factor);\n        }\n        return of(null);\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link distance or duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param o Source node\n     * @param d Destination node\n     * @param pathType Distance or duration\n     * @param k The number of shortest paths to compute\n     * @returns The set of shortest paths\n     */\n    private ksp(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Sets to zero the count property of the nodes.\n        this.resetCount();\n        // Instantiates the heap.\n        this.heap = new Heap();\n        // Inserts the path of origin into heap with cost 0.\n        this.heap.push({ pathId: 0, node: o, edges: [], cost: 0 });\n        // Walks the graph.\n        return this.walk(o, d, pathType, k);\n    }\n\n    /**\n     * Breadth First Search (BFS) algorithm for traversing and searching tree data\n     * explores the neighbor nodes first, before moving to the next level neighbors.\n     */\n    private walk(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Set of shortest paths from origin to destination.\n        const shortestPaths: Path[] = [];\n\n        let pathId = 1;\n        let node: Node;\n        while (this.heap.getPaths().length > 0 && d.count  edge.origin.nodeId == node.nodeId) ? false : true;\n    }\n\n    private resetCount(): void {\n        for (const node of this.nodes) {\n            node.count = 0;\n        }\n    }\n\n    /**\n     * Removes the alternative paths that differ only for two links.\n     * @param shortestPaths The shortest paths as created by the algorithm\n     */\n    private filterPaths(shortestPaths: Path[]): void {\n        if (shortestPaths.length > 1) {\n            let i = 0;\n            do {\n                const pathA = shortestPaths[i].edges;\n                const pathB = shortestPaths[i + 1].edges;\n                const sharedEdges = pathA.filter((edgeOfA: Edge) =>\n                    pathB.find((edgeOfB: Edge) =>\n                        edgeOfB.edgeId == edgeOfA.edgeId));\n                if (pathA.length - sharedEdges.length  value.edgeId == edge.edgeId)) {\n                        edges.push(edge);\n                        edge.label = 'E' + count++;\n                        if (!environment.testing) {\n                            edge.drawingOptions.infowindow.setContent('Edge: ' + edge.label);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Multinomial logit model.\n     * @param odPairs The O/D pairs\n     */\n    private calcShortestPathsProbabilities(odPairs: OdPair[]): number[][] {\n        // Gets the total cost of paths.\n        const pathCosts = this.calcPathCosts(odPairs);\n        const shortestPathsProbabilities: number[][] = [];\n        // Theta parameter adjustment.\n        const parameter = uiConfig.theta * 100;\n        // Calculates numerator.\n        const exps: number[][] = [];\n        for (let z = 0; z  {\n                return value > 0 ? Math.exp(-value / parameter) : 0;\n            });\n        }\n        // Calculates denominator.\n        const sumExps: number[] = [];\n        for (let z = 0; z  a + b, 0);\n            sumExps.push(sum);\n        }\n        // Probabilities.\n        for (let z = 0; z  0 ? round(exps[z][n] / sumExps[z], 3) : 0;\n                shortestPathsProbabilities[z].push(p);\n            }\n        }\n        return shortestPathsProbabilities;\n    }\n\n    private calcPathCosts(odPairs: OdPair[]): number[][] {\n        const pathCosts: number[][] = [];\n        for (let z = 0; z \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LocationModule.html":{"url":"modules/LocationModule.html","title":"module - LocationModule","body":"\n                   \n\n\n\n\n  Modules\n  LocationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_providers\n\n\n\n\nLocationService\n\nLocationService\n\n\n\nLocationModule\n\nLocationModule\n\nLocationModule -->\n\nLocationService->LocationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/location/location.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     LocationService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { LocationService } from './location.service';\n\n@NgModule({\n    imports: [],\n    declarations: [],\n    providers: [LocationService]\n})\nexport class LocationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocationService.html":{"url":"injectables/LocationService.html","title":"injectable - LocationService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  LocationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/location/location.service.ts\n        \n\n            \n                Description\n            \n            \n                Responsible for identifying the geographic coordinates of the simulation area,\nthrough geocoding or geolocation.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                geocoder\n                            \n                            \n                                    Private\n                                latLng\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                codeAddress\n                            \n                            \n                                    Public\n                                getCurrentPosition\n                            \n                            \n                                    Public\n                                getLatLng\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Public\n                                setLatLng\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/location/location.service.ts:17\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            codeAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        codeAddress(address: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/location/location.service.ts:33\n                            \n                        \n\n\n                \n                    \n                            Geocoding service.\nWraps the Google Maps API geocoding service into an observable.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        address\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getCurrentPosition\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getCurrentPosition()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/location/location.service.ts:53\n                            \n                        \n\n\n                \n                    \n                            Tries HTML5 geolocation.\nWraps the Geolocation API into an observable.\n\n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getLatLng\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getLatLng()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/location/location.service.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     google.maps.LatLngLiteral\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/location/location.service.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setLatLng\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setLatLng(latLng: s/map.html\">google.maps.LatLngLiteral)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/location/location.service.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        latLng\n                                                        \n                                                                    google.maps.LatLngLiteral\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            geocoder\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        geocoder:     google.maps.Geocoder\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.Geocoder\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/location/location.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            latLng\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        latLng:     google.maps.LatLngLiteral\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.LatLngLiteral\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/location/location.service.ts:15\n                            \n                        \n\n                \n                    \n                        Center of the area (latitude, longitude).\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\nimport { environment } from '../../environments/environment';\n\n/**\n * Responsible for identifying the geographic coordinates of the simulation area,\n * through geocoding or geolocation.\n */\n@Injectable() export class LocationService {\n\n    /**\n     * Center of the area (latitude, longitude).\n     */\n    private latLng: google.maps.LatLngLiteral;\n\n    private geocoder: google.maps.Geocoder;\n\n    constructor() {\n        if (!environment.testing) {\n            this.geocoder = new google.maps.Geocoder();\n        }\n    }\n\n    public reset(): void {\n        this.latLng = null;\n    }\n\n    /**\n     * Geocoding service.\n     * Wraps the Google Maps API geocoding service into an observable.\n     */\n    public codeAddress(address: string): Observable {\n        return Observable.create((observer: Observer) => {\n            // Invokes geocode method of Google Maps API geocoding.\n            this.geocoder.geocode({ address: address }, (\n                (results: google.maps.GeocoderResult[], status: google.maps.GeocoderStatus) => {\n                    if (status === google.maps.GeocoderStatus.OK) {\n                        observer.next(results);\n                        observer.complete();\n                    } else {\n                        observer.error(status);\n                    }\n                })\n            );\n        });\n    }\n\n    /**\n     * Tries HTML5 geolocation.\n     * Wraps the Geolocation API into an observable.\n     */\n    public getCurrentPosition(): Observable {\n        return Observable.create((observer: Observer) => {\n            // Invokes getCurrentPosition method of Geolocation API.\n            navigator.geolocation.getCurrentPosition(\n                (position: Position) => {\n                    observer.next(position);\n                    observer.complete();\n                },\n                (error: PositionError) => {\n                    observer.error(error);\n                }\n            );\n        });\n    }\n\n    public getLatLng(): google.maps.LatLngLiteral {\n        return this.latLng;\n    }\n\n    public setLatLng(latLng: google.maps.LatLngLiteral): void {\n        this.latLng = latLng;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Map.html":{"url":"interfaces/Map.html","title":"interface - Map","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Map\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/ui-state.ts\n        \n\n            \n                Description\n            \n            \n                Map model.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Map data.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Step {\n\n    /**\n     * Form model data.\n     */\n    data: any;\n\n}\n\n/**\n * Map model.\n */\nexport interface Map {\n\n    /**\n     * Map data.\n     */\n    data: any;\n\n}\n\n/**\n * Initial steps.\n */\nexport const STEPS: Step[] = [];\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MapChanged.html":{"url":"classes/MapChanged.html","title":"class - MapChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  MapChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/actions/map.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/models/actions/map.actions.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/map.actions.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : MapActionTypes.MapChanged\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/map.actions.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Map } from '../ui-state';\n\n/**\n * ngrx: map Actions.\n */\nexport enum MapActionTypes {\n\n    MapChanged = '[Map] Map Changed',\n    Reset = '[Map] Reset'\n\n}\n\nexport class MapChanged implements Action {\n\n    public readonly type: string = MapActionTypes.MapChanged;\n\n    constructor(public payload: { map: Map }) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = MapActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type MapActions = MapChanged | Reset;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapComponent.html":{"url":"components/MapComponent.html","title":"component - MapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/map/map.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                ui-map\n            \n\n            \n                styleUrls\n                map.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./map.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                center\n                            \n                            \n                                currentStep\n                            \n                            \n                                disableDefaultUI\n                            \n                            \n                                disableDoubleClickZoom\n                            \n                            \n                                gestureHandling\n                            \n                            \n                                mapTypeId\n                            \n                            \n                                maxZoom\n                            \n                            \n                                minZoom\n                            \n                            \n                                styles\n                            \n                            \n                                zoom\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, map: MapService, network: NetworkService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/map/map.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                    MapService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:128\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            center\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        center:     google.maps.LatLngLiteral\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.LatLngLiteral\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentStep\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentStep:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableDefaultUI\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        disableDefaultUI:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableDoubleClickZoom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        disableDoubleClickZoom:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gestureHandling\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gestureHandling:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapTypeId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mapTypeId:     google.maps.MapTypeId\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.MapTypeId\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxZoom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maxZoom:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minZoom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        minZoom:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            styles\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        styles:     google.maps.MapTypeStyle[]\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.MapTypeStyle[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            zoom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zoom:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { MapService } from './map.service';\nimport { NetworkService } from '../../network/network.service';\nimport * as fromUi from '../models/reducers';\nimport { Step } from '../models/ui-state';\nimport { mapStyle } from './map.style';\nimport { OdPair } from '../../network/graph';\nimport { uiConfig } from '../ui-config';\n\nimport { BaseComponent } from '../models/base.component';\n\n@Component({\n    selector: 'ui-map',\n    templateUrl: './map.component.html',\n    styleUrls: ['./map.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class MapComponent extends BaseComponent implements OnInit {\n\n    // Center map. Required.\n    center: google.maps.LatLngLiteral;\n\n    // The initial map zoom level. Required.\n    zoom: number;\n\n    disableDefaultUI: boolean;\n    disableDoubleClickZoom: boolean;\n    mapTypeId: google.maps.MapTypeId;\n    maxZoom: number;\n    minZoom: number;\n    gestureHandling: string;\n    styles: google.maps.MapTypeStyle[];\n\n    currentStep: number;\n\n    constructor(\n        private store: Store,\n        private map: MapService,\n        private network: NetworkService\n    ) {\n        super();\n        // Map options.\n        this.disableDefaultUI = true;\n        this.disableDoubleClickZoom = false;\n        this.mapTypeId = google.maps.MapTypeId.ROADMAP;\n        this.maxZoom = 18;\n        this.minZoom = 4;\n        this.gestureHandling = 'cooperative';\n        this.styles = mapStyle;\n    }\n\n    ngOnInit(): void {\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        //\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.currentStep)).subscribe((currentStep: number) => {\n            this.currentStep = currentStep;\n            switch (currentStep) {\n                case 0:\n                    this.center = uiConfig.map.center;\n                    this.zoom = uiConfig.map.zoom;\n                    break;\n                case 1:\n                    // Builds & shows initial rectangle.\n                    const bounds: google.maps.LatLngBoundsLiteral = this.map.buildBounds(this.center);\n                    this.map.showRect(bounds);\n                    break;\n                case 2:\n                    // Hides the rectangle.\n                    this.map.hideRect();\n                    // Shows graph.\n                    this.map.showGraph();\n                    // Sets centroid.\n                    this.map.setCentroid();\n                    // Sets map.\n                    this.map.setCenter(this.map.getCentroid());\n                    this.map.setZoom(17);\n                    break;\n                case 3:\n                    // Clears nodes actions.\n                    this.map.clearNodesActions();\n                    break;\n                case 4:\n                    // Hides paths.\n                    this.map.hidePaths();\n                    break;\n            }\n        }));\n        this.subscriptions.push(this.store.pipe(select(fromUi.steps)).subscribe((steps: Step[]) => {\n            switch (this.currentStep) {\n                case 0:\n                    if (steps[0]) {\n                        // Updates center map.\n                        this.center = steps[0].data.center;\n                        this.zoom = 16;\n                    } else {\n                        this.center = uiConfig.map.center;\n                        this.zoom = uiConfig.map.zoom;\n                    }\n                    break;\n                case 2:\n                    if (steps[2]) {\n                        // Shows/hides O/D nodes.\n                        const odPairs: OdPair[] = steps[2].data.odPairs;\n                        this.map.showNodes(odPairs);\n                    }\n                    break;\n                case 3:\n                    if (steps[3] && steps[3].data.odPairs) {\n                        // Shows/hides O/D paths.\n                        const odPairs = steps[3].data.odPairs;\n                        this.map.showPaths(odPairs);\n                    }\n                    break;\n            }\n        }));\n    }\n\n    sendActions(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MapState.html":{"url":"interfaces/MapState.html","title":"interface - MapState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MapState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/reducers/map.reducer.ts\n        \n\n            \n                Description\n            \n            \n                Map state management.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        map\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        map\n                                    \n                                \n                                \n                                    \n                                        map:     Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import deepClone from 'mout/lang/deepClone';\n\nimport { Map } from \"../ui-state\";\nimport { MapActions, MapActionTypes } from '../actions/map.actions';\n\n/**\n * Map state management.\n */\nexport interface MapState {\n\n    map: Map;\n\n}\n\nexport const initialMapState: MapState = {\n    map: null\n};\n\n/**\n * ngrx: map Reducer.\n */\nexport function mapReducer(state: MapState = deepClone(initialMapState), action: MapActions): MapState {\n    switch (action.type) {\n        case MapActionTypes.MapChanged: {\n            state.map = action.payload.map;\n            return {\n                ...state,\n                map: deepClone(state.map)\n            };\n        }\n        case MapActionTypes.Reset: {\n            return deepClone(initialMapState);\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\nexport const getMap: (state: MapState) => Map = (state: MapState) => state.map;\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n  Modules\n  MaterialModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/material.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport {\n    MatSidenavModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatIconRegistry,\n    MatButtonModule,\n    MatIconModule,\n    MatMenuModule,\n    MatStepperModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule,\n    MatDialogModule,\n    MatGridListModule,\n    MatSelectModule,\n    MatExpansionModule,\n    MatTableModule\n} from '@angular/material';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nconst materialModules: any[] = [\n    MatSidenavModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    MatMenuModule,\n    MatStepperModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule,\n    MatDialogModule,\n    MatGridListModule,\n    MatSelectModule,\n    MatExpansionModule,\n    MatTableModule\n];\n\n@NgModule({\n    imports: materialModules,\n    exports: materialModules\n})\nexport class MaterialModule {\n\n    constructor(matIconRegistry: MatIconRegistry, domSanitizer: DomSanitizer) {\n        matIconRegistry.addSvgIcon(\n            'more_vert', domSanitizer.bypassSecurityTrustResourceUrl('./assets/images/ic_more_vert_24px.svg')\n        );\n        matIconRegistry.addSvgIcon(\n            'code', domSanitizer.bypassSecurityTrustResourceUrl('./assets/images/ic_code_24px.svg')\n        );\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Member.html":{"url":"interfaces/Member.html","title":"interface - Member","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Member\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                Relation's member.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ref\n                                \n                                \n                                        role\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ref\n                                    \n                                \n                                \n                                    \n                                        ref:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\n\nimport * as combine from 'mout/array/combine';\n\nimport { Heap, Path } from './k-shortest-path';\nimport { round } from '../utils';\nimport { environment } from '../../environments/environment';\nimport { uiConfig } from '../ui/ui-config';\n\nexport enum PathType {\n    distance = 'distance',\n    duration = 'duration'\n}\n\n/**\n * An O/D pair is described by the origin and destination nodes, and the type of path.\n */\nexport interface OdPair {\n\n    origin: string;\n    destination: string;\n    pathType: PathType;\n\n}\n\nexport interface LinkFlow {\n\n    /**\n     * linkFlow attribute.\n     */\n    value: number;\n    /**\n     * Variance is the inverse of density.\n     */\n    variance: number;\n\n}\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public label: string;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    public drawingOptions: { marker?: google.maps.Marker } = {};\n\n    /**\n     * Used by the k shortest path routing.\n     */\n    public count: number = 0;\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public label: string;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    /**\n     * Free flow speed (m/s).\n     */\n    public freeFlowVelocity: number;\n\n    /**\n     * Instant speed (m/s).\n     */\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    /**\n     * Number of vehicles calculated from traffic data.\n     */\n    public linkFlow: number;\n\n    /**\n     * Maximum flow of the link.\n     */\n    public maxFlow: number;\n\n    public drawingOptions: {\n        originalPath?: google.maps.LatLng[],\n        path?: google.maps.LatLng[],\n        polyline?: google.maps.Polyline,\n        marker?: google.maps.Marker,\n        infowindow?: google.maps.InfoWindow\n    } = {};\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the link flow.\n     */\n    public calcLinkFlow(): void {\n        // Min distance is 1 meter.\n        if (this.distance == 0) { this.distance = 1; }\n        // Min duration is 1 second.\n        if (this.duration == 0) {\n            this.duration = round(this.distance / (50 / 3.6)) > 1 ? round(this.distance / (50 / 3.6)) : 1;\n        }\n        // Calculates free flow velocity (m/s).\n        this.freeFlowVelocity = round(this.distance / this.duration, 2);\n        // Calculates link flow.\n        if (this.durationInTraffic > 0 && this.durationInTraffic >= this.duration) {\n            // Calculates velocity (m/s).\n            this.velocity = round(this.distance / this.durationInTraffic, 2);\n            // Calculates density.\n            this.density = round(this.getKjam() * (this.freeFlowVelocity - this.velocity) / this.freeFlowVelocity, 2);\n            // Calculates flow.\n            this.flow = round(this.density * this.velocity, 2);\n            // Calculates link flow.\n            this.linkFlow = round(this.density * this.distance);\n        } else {\n            this.velocity = 0;\n            this.density = 0;\n            this.flow = 0;\n            this.linkFlow = 0;\n        }\n    }\n\n    /**\n     * Calculates the max flow of the edge.\n     * @param factor Weather Adjustment Factor\n     */\n    public calcMaxFlow(factor: number): void {\n        const maxFlow = this.getKjam() * this.freeFlowVelocity;\n        this.maxFlow = round(maxFlow * factor, 2);\n    }\n\n    /**\n     * Gets the variance of measurement error of link flow.\n     */\n    public getVariance(): number {\n        return this.density > 0 ? round(1 / this.density, 2) : 1;\n    }\n\n    public getKjam(): number {\n        return round(1 / uiConfig.sp, 2);\n    }\n\n    protected getCapacity(timeInterval: number): number {\n        return this.maxFlow * timeInterval;\n    }\n\n    protected draw(color: string, zIndex: number = 10): void {\n        this.drawingOptions.polyline.set('strokeColor', color);\n        this.drawingOptions.polyline.set('zIndex', zIndex);\n        this.drawingOptions.marker.set('visible', true);\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    protected nodes: Node[] = [];\n\n    protected edges: Edge[] = [];\n\n    protected relations: Relation[] = [];\n\n    /**\n     * Paths for each O/D pair [pairs,paths,edges].\n     */\n    protected shortestPaths: Edge[][][] = [];\n\n    protected incidenceMatrix: boolean[][][] = [];\n\n    protected assignmentMatrix: number[][][] = [];\n\n    private heap: Heap;\n\n    /**\n     * Shortest paths drawing options.\n     */\n    private drawingOptions: {\n        polylines?: google.maps.Polyline[][];\n    } = {};\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public getEdge(edgeId: number): Edge {\n        return this.edges.find((edge: Edge) => edge.edgeId == edgeId);\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Key:oneway\n     * @param edgeId Id of the edge\n     */\n    public isOneway(edgeId: number): boolean {\n        return !!this.getEdge(edgeId).tags.find(tag => tag.key == 'oneway' && tag.value != 'no') ||\n            this.isRoundabout(edgeId);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Tag:junction%3Droundabout\n     * @param edgeId Id of the edge\n     */\n    public isRoundabout(edgeId: number): boolean {\n        return this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'roundabout') ||\n            this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'circular') ?\n            true : false;\n    }\n\n    public getOdNode(label: string): Node {\n        return this.nodes.find((node: Node) => node.label == label);\n    }\n\n    public getOdNodes(): Node[] {\n        return this.nodes.filter((node: Node) => node.label);\n    }\n\n    /**\n     * Calculates the set of minimum paths.\n     * @param odPairs The O/D pairs\n     */\n    public calcShortestPaths(odPairs: OdPair[]): Observable {\n        try {\n            for (let i = 0; i  edge.label);\n    }\n\n    /**\n     * Calculates the incidence matrix of paths for O/D pairs.\n     */\n    public calcIncidenceMatrix(): Observable {\n        const edges = this.getPathsEdges();\n        for (let z = 0; z  value.edgeId == edges[m].edgeId)) {\n                        // The path crosses the edge.\n                        this.incidenceMatrix[z][n][m] = true;\n                    } else {\n                        // The path does not cross the edge.\n                        this.incidenceMatrix[z][n][m] = false;\n                    }\n                }\n            }\n        }\n        return of(null);\n    }\n\n    public getIncidenceMatrix(): boolean[][][] {\n        return this.incidenceMatrix;\n    }\n\n    /**\n     * Calculates the assignment matrix.\n     * @param odPairs The O/D pairs\n     */\n    public calcAssignmentMatrix(odPairs: OdPair[]): Observable {\n        // Calculates the probabilities of shortest paths.\n        const shortestPathsProbabilities = this.calcShortestPathsProbabilities(odPairs);\n\n        // Assignment matrix.\n        for (let z = 0; z  {\n        const edges = this.getPathsEdges();\n        for (const edge of edges) {\n            edge.calcMaxFlow(factor);\n        }\n        return of(null);\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link distance or duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param o Source node\n     * @param d Destination node\n     * @param pathType Distance or duration\n     * @param k The number of shortest paths to compute\n     * @returns The set of shortest paths\n     */\n    private ksp(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Sets to zero the count property of the nodes.\n        this.resetCount();\n        // Instantiates the heap.\n        this.heap = new Heap();\n        // Inserts the path of origin into heap with cost 0.\n        this.heap.push({ pathId: 0, node: o, edges: [], cost: 0 });\n        // Walks the graph.\n        return this.walk(o, d, pathType, k);\n    }\n\n    /**\n     * Breadth First Search (BFS) algorithm for traversing and searching tree data\n     * explores the neighbor nodes first, before moving to the next level neighbors.\n     */\n    private walk(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Set of shortest paths from origin to destination.\n        const shortestPaths: Path[] = [];\n\n        let pathId = 1;\n        let node: Node;\n        while (this.heap.getPaths().length > 0 && d.count  edge.origin.nodeId == node.nodeId) ? false : true;\n    }\n\n    private resetCount(): void {\n        for (const node of this.nodes) {\n            node.count = 0;\n        }\n    }\n\n    /**\n     * Removes the alternative paths that differ only for two links.\n     * @param shortestPaths The shortest paths as created by the algorithm\n     */\n    private filterPaths(shortestPaths: Path[]): void {\n        if (shortestPaths.length > 1) {\n            let i = 0;\n            do {\n                const pathA = shortestPaths[i].edges;\n                const pathB = shortestPaths[i + 1].edges;\n                const sharedEdges = pathA.filter((edgeOfA: Edge) =>\n                    pathB.find((edgeOfB: Edge) =>\n                        edgeOfB.edgeId == edgeOfA.edgeId));\n                if (pathA.length - sharedEdges.length  value.edgeId == edge.edgeId)) {\n                        edges.push(edge);\n                        edge.label = 'E' + count++;\n                        if (!environment.testing) {\n                            edge.drawingOptions.infowindow.setContent('Edge: ' + edge.label);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Multinomial logit model.\n     * @param odPairs The O/D pairs\n     */\n    private calcShortestPathsProbabilities(odPairs: OdPair[]): number[][] {\n        // Gets the total cost of paths.\n        const pathCosts = this.calcPathCosts(odPairs);\n        const shortestPathsProbabilities: number[][] = [];\n        // Theta parameter adjustment.\n        const parameter = uiConfig.theta * 100;\n        // Calculates numerator.\n        const exps: number[][] = [];\n        for (let z = 0; z  {\n                return value > 0 ? Math.exp(-value / parameter) : 0;\n            });\n        }\n        // Calculates denominator.\n        const sumExps: number[] = [];\n        for (let z = 0; z  a + b, 0);\n            sumExps.push(sum);\n        }\n        // Probabilities.\n        for (let z = 0; z  0 ? round(exps[z][n] / sumExps[z], 3) : 0;\n                shortestPathsProbabilities[z].push(p);\n            }\n        }\n        return shortestPathsProbabilities;\n    }\n\n    private calcPathCosts(odPairs: OdPair[]): number[][] {\n        const pathCosts: number[][] = [];\n        for (let z = 0; z \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MessageArchivedComponent.html":{"url":"components/MessageArchivedComponent.html","title":"component - MessageArchivedComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MessageArchivedComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/message-archived.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snack-bar\n            \n\n\n\n            \n                template\n                {{ data }}\n\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/message-archived.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/message-archived.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material';\n\n@Component({\n    selector: 'snack-bar',\n    template: `\n        {{ data }}\n    `,\n    styles: []\n})\nexport class MessageArchivedComponent {\n\n    constructor(@Inject(MAT_SNACK_BAR_DATA) public data: any) { }\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ data }}'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MessageArchivedComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NetworkModule.html":{"url":"modules/NetworkModule.html","title":"module - NetworkModule","body":"\n                   \n\n\n\n\n  Modules\n  NetworkModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NetworkModule\n\n\n\ncluster_NetworkModule_imports\n\n\n\ncluster_NetworkModule_providers\n\n\n\n\nWeatherModule\n\nWeatherModule\n\n\n\nNetworkModule\n\nNetworkModule\n\nNetworkModule -->\n\nWeatherModule->NetworkModule\n\n\n\n\n\nNetworkService\n\nNetworkService\n\nNetworkModule -->\n\nNetworkService->NetworkModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/network/network.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     NetworkService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    WeatherModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { WeatherModule } from './weather/weather.module';\n\nimport { NetworkService } from './network.service';\n\n@NgModule({\n    imports: [WeatherModule],\n    declarations: [],\n    providers: [NetworkService]\n})\nexport class NetworkModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Node.html":{"url":"classes/Node.html","title":"class - Node","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Node\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                Node represents a specific point on the earth's surface defined by its latitude and longitude.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                count\n                            \n                            \n                                    Public\n                                drawingOptions\n                            \n                            \n                                    Public\n                                incomingEdges\n                            \n                            \n                                    Public\n                                label\n                            \n                            \n                                    Public\n                                lat\n                            \n                            \n                                    Public\n                                lon\n                            \n                            \n                                    Public\n                                nodeId\n                            \n                            \n                                    Public\n                                outgoingEdges\n                            \n                            \n                                    Public\n                                tags\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(nodeId: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/graph.ts:84\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        nodeId\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            count\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        count:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:84\n                            \n                        \n\n                \n                    \n                        Used by the k shortest path routing.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            drawingOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        drawingOptions:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            incomingEdges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        incomingEdges:     Edge[]\n\n                    \n                \n                    \n                        \n                            Type :     Edge[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            label\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        label:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lat\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lat:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:69\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lon:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nodeId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nodeId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            outgoingEdges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        outgoingEdges:     Edge[]\n\n                    \n                \n                    \n                        \n                            Type :     Edge[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tags:     Tag[]\n\n                    \n                \n                    \n                        \n                            Type :     Tag[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:73\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\n\nimport * as combine from 'mout/array/combine';\n\nimport { Heap, Path } from './k-shortest-path';\nimport { round } from '../utils';\nimport { environment } from '../../environments/environment';\nimport { uiConfig } from '../ui/ui-config';\n\nexport enum PathType {\n    distance = 'distance',\n    duration = 'duration'\n}\n\n/**\n * An O/D pair is described by the origin and destination nodes, and the type of path.\n */\nexport interface OdPair {\n\n    origin: string;\n    destination: string;\n    pathType: PathType;\n\n}\n\nexport interface LinkFlow {\n\n    /**\n     * linkFlow attribute.\n     */\n    value: number;\n    /**\n     * Variance is the inverse of density.\n     */\n    variance: number;\n\n}\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public label: string;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    public drawingOptions: { marker?: google.maps.Marker } = {};\n\n    /**\n     * Used by the k shortest path routing.\n     */\n    public count: number = 0;\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public label: string;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    /**\n     * Free flow speed (m/s).\n     */\n    public freeFlowVelocity: number;\n\n    /**\n     * Instant speed (m/s).\n     */\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    /**\n     * Number of vehicles calculated from traffic data.\n     */\n    public linkFlow: number;\n\n    /**\n     * Maximum flow of the link.\n     */\n    public maxFlow: number;\n\n    public drawingOptions: {\n        originalPath?: google.maps.LatLng[],\n        path?: google.maps.LatLng[],\n        polyline?: google.maps.Polyline,\n        marker?: google.maps.Marker,\n        infowindow?: google.maps.InfoWindow\n    } = {};\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the link flow.\n     */\n    public calcLinkFlow(): void {\n        // Min distance is 1 meter.\n        if (this.distance == 0) { this.distance = 1; }\n        // Min duration is 1 second.\n        if (this.duration == 0) {\n            this.duration = round(this.distance / (50 / 3.6)) > 1 ? round(this.distance / (50 / 3.6)) : 1;\n        }\n        // Calculates free flow velocity (m/s).\n        this.freeFlowVelocity = round(this.distance / this.duration, 2);\n        // Calculates link flow.\n        if (this.durationInTraffic > 0 && this.durationInTraffic >= this.duration) {\n            // Calculates velocity (m/s).\n            this.velocity = round(this.distance / this.durationInTraffic, 2);\n            // Calculates density.\n            this.density = round(this.getKjam() * (this.freeFlowVelocity - this.velocity) / this.freeFlowVelocity, 2);\n            // Calculates flow.\n            this.flow = round(this.density * this.velocity, 2);\n            // Calculates link flow.\n            this.linkFlow = round(this.density * this.distance);\n        } else {\n            this.velocity = 0;\n            this.density = 0;\n            this.flow = 0;\n            this.linkFlow = 0;\n        }\n    }\n\n    /**\n     * Calculates the max flow of the edge.\n     * @param factor Weather Adjustment Factor\n     */\n    public calcMaxFlow(factor: number): void {\n        const maxFlow = this.getKjam() * this.freeFlowVelocity;\n        this.maxFlow = round(maxFlow * factor, 2);\n    }\n\n    /**\n     * Gets the variance of measurement error of link flow.\n     */\n    public getVariance(): number {\n        return this.density > 0 ? round(1 / this.density, 2) : 1;\n    }\n\n    public getKjam(): number {\n        return round(1 / uiConfig.sp, 2);\n    }\n\n    protected getCapacity(timeInterval: number): number {\n        return this.maxFlow * timeInterval;\n    }\n\n    protected draw(color: string, zIndex: number = 10): void {\n        this.drawingOptions.polyline.set('strokeColor', color);\n        this.drawingOptions.polyline.set('zIndex', zIndex);\n        this.drawingOptions.marker.set('visible', true);\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    protected nodes: Node[] = [];\n\n    protected edges: Edge[] = [];\n\n    protected relations: Relation[] = [];\n\n    /**\n     * Paths for each O/D pair [pairs,paths,edges].\n     */\n    protected shortestPaths: Edge[][][] = [];\n\n    protected incidenceMatrix: boolean[][][] = [];\n\n    protected assignmentMatrix: number[][][] = [];\n\n    private heap: Heap;\n\n    /**\n     * Shortest paths drawing options.\n     */\n    private drawingOptions: {\n        polylines?: google.maps.Polyline[][];\n    } = {};\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public getEdge(edgeId: number): Edge {\n        return this.edges.find((edge: Edge) => edge.edgeId == edgeId);\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Key:oneway\n     * @param edgeId Id of the edge\n     */\n    public isOneway(edgeId: number): boolean {\n        return !!this.getEdge(edgeId).tags.find(tag => tag.key == 'oneway' && tag.value != 'no') ||\n            this.isRoundabout(edgeId);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Tag:junction%3Droundabout\n     * @param edgeId Id of the edge\n     */\n    public isRoundabout(edgeId: number): boolean {\n        return this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'roundabout') ||\n            this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'circular') ?\n            true : false;\n    }\n\n    public getOdNode(label: string): Node {\n        return this.nodes.find((node: Node) => node.label == label);\n    }\n\n    public getOdNodes(): Node[] {\n        return this.nodes.filter((node: Node) => node.label);\n    }\n\n    /**\n     * Calculates the set of minimum paths.\n     * @param odPairs The O/D pairs\n     */\n    public calcShortestPaths(odPairs: OdPair[]): Observable {\n        try {\n            for (let i = 0; i  edge.label);\n    }\n\n    /**\n     * Calculates the incidence matrix of paths for O/D pairs.\n     */\n    public calcIncidenceMatrix(): Observable {\n        const edges = this.getPathsEdges();\n        for (let z = 0; z  value.edgeId == edges[m].edgeId)) {\n                        // The path crosses the edge.\n                        this.incidenceMatrix[z][n][m] = true;\n                    } else {\n                        // The path does not cross the edge.\n                        this.incidenceMatrix[z][n][m] = false;\n                    }\n                }\n            }\n        }\n        return of(null);\n    }\n\n    public getIncidenceMatrix(): boolean[][][] {\n        return this.incidenceMatrix;\n    }\n\n    /**\n     * Calculates the assignment matrix.\n     * @param odPairs The O/D pairs\n     */\n    public calcAssignmentMatrix(odPairs: OdPair[]): Observable {\n        // Calculates the probabilities of shortest paths.\n        const shortestPathsProbabilities = this.calcShortestPathsProbabilities(odPairs);\n\n        // Assignment matrix.\n        for (let z = 0; z  {\n        const edges = this.getPathsEdges();\n        for (const edge of edges) {\n            edge.calcMaxFlow(factor);\n        }\n        return of(null);\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link distance or duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param o Source node\n     * @param d Destination node\n     * @param pathType Distance or duration\n     * @param k The number of shortest paths to compute\n     * @returns The set of shortest paths\n     */\n    private ksp(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Sets to zero the count property of the nodes.\n        this.resetCount();\n        // Instantiates the heap.\n        this.heap = new Heap();\n        // Inserts the path of origin into heap with cost 0.\n        this.heap.push({ pathId: 0, node: o, edges: [], cost: 0 });\n        // Walks the graph.\n        return this.walk(o, d, pathType, k);\n    }\n\n    /**\n     * Breadth First Search (BFS) algorithm for traversing and searching tree data\n     * explores the neighbor nodes first, before moving to the next level neighbors.\n     */\n    private walk(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Set of shortest paths from origin to destination.\n        const shortestPaths: Path[] = [];\n\n        let pathId = 1;\n        let node: Node;\n        while (this.heap.getPaths().length > 0 && d.count  edge.origin.nodeId == node.nodeId) ? false : true;\n    }\n\n    private resetCount(): void {\n        for (const node of this.nodes) {\n            node.count = 0;\n        }\n    }\n\n    /**\n     * Removes the alternative paths that differ only for two links.\n     * @param shortestPaths The shortest paths as created by the algorithm\n     */\n    private filterPaths(shortestPaths: Path[]): void {\n        if (shortestPaths.length > 1) {\n            let i = 0;\n            do {\n                const pathA = shortestPaths[i].edges;\n                const pathB = shortestPaths[i + 1].edges;\n                const sharedEdges = pathA.filter((edgeOfA: Edge) =>\n                    pathB.find((edgeOfB: Edge) =>\n                        edgeOfB.edgeId == edgeOfA.edgeId));\n                if (pathA.length - sharedEdges.length  value.edgeId == edge.edgeId)) {\n                        edges.push(edge);\n                        edge.label = 'E' + count++;\n                        if (!environment.testing) {\n                            edge.drawingOptions.infowindow.setContent('Edge: ' + edge.label);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Multinomial logit model.\n     * @param odPairs The O/D pairs\n     */\n    private calcShortestPathsProbabilities(odPairs: OdPair[]): number[][] {\n        // Gets the total cost of paths.\n        const pathCosts = this.calcPathCosts(odPairs);\n        const shortestPathsProbabilities: number[][] = [];\n        // Theta parameter adjustment.\n        const parameter = uiConfig.theta * 100;\n        // Calculates numerator.\n        const exps: number[][] = [];\n        for (let z = 0; z  {\n                return value > 0 ? Math.exp(-value / parameter) : 0;\n            });\n        }\n        // Calculates denominator.\n        const sumExps: number[] = [];\n        for (let z = 0; z  a + b, 0);\n            sumExps.push(sum);\n        }\n        // Probabilities.\n        for (let z = 0; z  0 ? round(exps[z][n] / sumExps[z], 3) : 0;\n                shortestPathsProbabilities[z].push(p);\n            }\n        }\n        return shortestPathsProbabilities;\n    }\n\n    private calcPathCosts(odPairs: OdPair[]): number[][] {\n        const pathCosts: number[][] = [];\n        for (let z = 0; z \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NumericComponent.html":{"url":"components/NumericComponent.html","title":"component - NumericComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NumericComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/numeric/numeric.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ui-numeric\n            \n\n            \n                styleUrls\n                numeric.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./numeric.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/numeric/numeric.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/numeric/numeric.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/numeric/numeric.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/numeric/numeric.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/numeric/numeric.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     NumericalSimulation[]\n\n                    \n                \n                    \n                        \n                            Type :     NumericalSimulation[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/numeric/numeric.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        displayedColumns:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['edge', 'wayName', 'trafficVolume', 'trafficCount', 'delay', 'stops']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/numeric/numeric.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { Store, select } from '@ngrx/store';\n\nimport * as fromSimulation from '../../simulation/models/reducers';\nimport { Simulation, NumericalSimulation } from '../../simulation/models/simulation-state';\n\nimport { BaseComponent } from '../models/base.component';\n\n@Component({\n    selector: 'ui-numeric',\n    templateUrl: './numeric.component.html',\n    styleUrls: ['./numeric.component.scss']\n})\nexport class NumericComponent extends BaseComponent implements OnInit {\n\n    data: NumericalSimulation[] = [];\n\n    displayedColumns: string[] = ['edge', 'wayName', 'trafficVolume', 'trafficCount', 'delay', 'stops'];\n\n    constructor(\n        private store: Store\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        //\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromSimulation.simulation)).subscribe((simulation: Simulation) => {\n            if (simulation && simulation.data) {\n                this.data = simulation.data;\n            }\n        }));\n    }\n\n    sendActions(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    \n         Edge \n         {{ element.edge }} \n    \n    \n         Way name \n         {{ element.wayName }} \n    \n    \n         Traffic volume \n         {{ element.trafficVolume }} \n    \n    \n         Traffic count \n         {{ element.trafficCount }} \n    \n    \n         Delay (s) \n         {{ element.delay }} \n    \n    \n         Stops (s) \n         {{ element.stops }} \n    \n    \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             Edge          {{ element.edge }}                  Way name          {{ element.wayName }}                  Traffic volume          {{ element.trafficVolume }}                  Traffic count          {{ element.trafficCount }}                  Delay (s)          {{ element.delay }}                  Stops (s)          {{ element.stops }}             '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NumericComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NumericalSimulation.html":{"url":"interfaces/NumericalSimulation.html","title":"interface - NumericalSimulation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NumericalSimulation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/models/simulation-state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        delay\n                                \n                                \n                                        edge\n                                \n                                \n                                        stops\n                                \n                                \n                                        trafficCount\n                                \n                                \n                                        trafficVolume\n                                \n                                \n                                        wayName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        delay\n                                    \n                                \n                                \n                                    \n                                        delay:     number | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        edge\n                                    \n                                \n                                \n                                    \n                                        edge:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stops\n                                    \n                                \n                                \n                                    \n                                        stops:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trafficCount\n                                    \n                                \n                                \n                                    \n                                        trafficCount:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trafficVolume\n                                    \n                                \n                                \n                                    \n                                        trafficVolume:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wayName\n                                    \n                                \n                                \n                                    \n                                        wayName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface NumericalSimulation {\n\n    edge: string;\n    wayName: string;\n    trafficVolume: number;\n    trafficCount: number;\n    delay: number | string;\n    stops: number;\n\n}\n\nexport interface Counts {\n\n    startedVehicles: number;\n    arrivedVehicles: number;\n\n}\n\nexport interface Simulation {\n\n    /**\n     * Simulation data.\n     */\n    data: NumericalSimulation[];\n    /**\n     * Simulation counts.\n     */\n    counts: Counts;\n    /**\n     * Simulation avg. speed.\n     */\n    avgSpeed: number;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OdPair.html":{"url":"interfaces/OdPair.html","title":"interface - OdPair","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OdPair\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                An O/D pair is described by the origin and destination nodes, and the type of path.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        destination\n                                \n                                \n                                        origin\n                                \n                                \n                                        pathType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                    \n                                \n                                \n                                    \n                                        destination:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        origin\n                                    \n                                \n                                \n                                    \n                                        origin:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pathType\n                                    \n                                \n                                \n                                    \n                                        pathType:     PathType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PathType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\n\nimport * as combine from 'mout/array/combine';\n\nimport { Heap, Path } from './k-shortest-path';\nimport { round } from '../utils';\nimport { environment } from '../../environments/environment';\nimport { uiConfig } from '../ui/ui-config';\n\nexport enum PathType {\n    distance = 'distance',\n    duration = 'duration'\n}\n\n/**\n * An O/D pair is described by the origin and destination nodes, and the type of path.\n */\nexport interface OdPair {\n\n    origin: string;\n    destination: string;\n    pathType: PathType;\n\n}\n\nexport interface LinkFlow {\n\n    /**\n     * linkFlow attribute.\n     */\n    value: number;\n    /**\n     * Variance is the inverse of density.\n     */\n    variance: number;\n\n}\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public label: string;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    public drawingOptions: { marker?: google.maps.Marker } = {};\n\n    /**\n     * Used by the k shortest path routing.\n     */\n    public count: number = 0;\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public label: string;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    /**\n     * Free flow speed (m/s).\n     */\n    public freeFlowVelocity: number;\n\n    /**\n     * Instant speed (m/s).\n     */\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    /**\n     * Number of vehicles calculated from traffic data.\n     */\n    public linkFlow: number;\n\n    /**\n     * Maximum flow of the link.\n     */\n    public maxFlow: number;\n\n    public drawingOptions: {\n        originalPath?: google.maps.LatLng[],\n        path?: google.maps.LatLng[],\n        polyline?: google.maps.Polyline,\n        marker?: google.maps.Marker,\n        infowindow?: google.maps.InfoWindow\n    } = {};\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the link flow.\n     */\n    public calcLinkFlow(): void {\n        // Min distance is 1 meter.\n        if (this.distance == 0) { this.distance = 1; }\n        // Min duration is 1 second.\n        if (this.duration == 0) {\n            this.duration = round(this.distance / (50 / 3.6)) > 1 ? round(this.distance / (50 / 3.6)) : 1;\n        }\n        // Calculates free flow velocity (m/s).\n        this.freeFlowVelocity = round(this.distance / this.duration, 2);\n        // Calculates link flow.\n        if (this.durationInTraffic > 0 && this.durationInTraffic >= this.duration) {\n            // Calculates velocity (m/s).\n            this.velocity = round(this.distance / this.durationInTraffic, 2);\n            // Calculates density.\n            this.density = round(this.getKjam() * (this.freeFlowVelocity - this.velocity) / this.freeFlowVelocity, 2);\n            // Calculates flow.\n            this.flow = round(this.density * this.velocity, 2);\n            // Calculates link flow.\n            this.linkFlow = round(this.density * this.distance);\n        } else {\n            this.velocity = 0;\n            this.density = 0;\n            this.flow = 0;\n            this.linkFlow = 0;\n        }\n    }\n\n    /**\n     * Calculates the max flow of the edge.\n     * @param factor Weather Adjustment Factor\n     */\n    public calcMaxFlow(factor: number): void {\n        const maxFlow = this.getKjam() * this.freeFlowVelocity;\n        this.maxFlow = round(maxFlow * factor, 2);\n    }\n\n    /**\n     * Gets the variance of measurement error of link flow.\n     */\n    public getVariance(): number {\n        return this.density > 0 ? round(1 / this.density, 2) : 1;\n    }\n\n    public getKjam(): number {\n        return round(1 / uiConfig.sp, 2);\n    }\n\n    protected getCapacity(timeInterval: number): number {\n        return this.maxFlow * timeInterval;\n    }\n\n    protected draw(color: string, zIndex: number = 10): void {\n        this.drawingOptions.polyline.set('strokeColor', color);\n        this.drawingOptions.polyline.set('zIndex', zIndex);\n        this.drawingOptions.marker.set('visible', true);\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    protected nodes: Node[] = [];\n\n    protected edges: Edge[] = [];\n\n    protected relations: Relation[] = [];\n\n    /**\n     * Paths for each O/D pair [pairs,paths,edges].\n     */\n    protected shortestPaths: Edge[][][] = [];\n\n    protected incidenceMatrix: boolean[][][] = [];\n\n    protected assignmentMatrix: number[][][] = [];\n\n    private heap: Heap;\n\n    /**\n     * Shortest paths drawing options.\n     */\n    private drawingOptions: {\n        polylines?: google.maps.Polyline[][];\n    } = {};\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public getEdge(edgeId: number): Edge {\n        return this.edges.find((edge: Edge) => edge.edgeId == edgeId);\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Key:oneway\n     * @param edgeId Id of the edge\n     */\n    public isOneway(edgeId: number): boolean {\n        return !!this.getEdge(edgeId).tags.find(tag => tag.key == 'oneway' && tag.value != 'no') ||\n            this.isRoundabout(edgeId);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Tag:junction%3Droundabout\n     * @param edgeId Id of the edge\n     */\n    public isRoundabout(edgeId: number): boolean {\n        return this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'roundabout') ||\n            this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'circular') ?\n            true : false;\n    }\n\n    public getOdNode(label: string): Node {\n        return this.nodes.find((node: Node) => node.label == label);\n    }\n\n    public getOdNodes(): Node[] {\n        return this.nodes.filter((node: Node) => node.label);\n    }\n\n    /**\n     * Calculates the set of minimum paths.\n     * @param odPairs The O/D pairs\n     */\n    public calcShortestPaths(odPairs: OdPair[]): Observable {\n        try {\n            for (let i = 0; i  edge.label);\n    }\n\n    /**\n     * Calculates the incidence matrix of paths for O/D pairs.\n     */\n    public calcIncidenceMatrix(): Observable {\n        const edges = this.getPathsEdges();\n        for (let z = 0; z  value.edgeId == edges[m].edgeId)) {\n                        // The path crosses the edge.\n                        this.incidenceMatrix[z][n][m] = true;\n                    } else {\n                        // The path does not cross the edge.\n                        this.incidenceMatrix[z][n][m] = false;\n                    }\n                }\n            }\n        }\n        return of(null);\n    }\n\n    public getIncidenceMatrix(): boolean[][][] {\n        return this.incidenceMatrix;\n    }\n\n    /**\n     * Calculates the assignment matrix.\n     * @param odPairs The O/D pairs\n     */\n    public calcAssignmentMatrix(odPairs: OdPair[]): Observable {\n        // Calculates the probabilities of shortest paths.\n        const shortestPathsProbabilities = this.calcShortestPathsProbabilities(odPairs);\n\n        // Assignment matrix.\n        for (let z = 0; z  {\n        const edges = this.getPathsEdges();\n        for (const edge of edges) {\n            edge.calcMaxFlow(factor);\n        }\n        return of(null);\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link distance or duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param o Source node\n     * @param d Destination node\n     * @param pathType Distance or duration\n     * @param k The number of shortest paths to compute\n     * @returns The set of shortest paths\n     */\n    private ksp(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Sets to zero the count property of the nodes.\n        this.resetCount();\n        // Instantiates the heap.\n        this.heap = new Heap();\n        // Inserts the path of origin into heap with cost 0.\n        this.heap.push({ pathId: 0, node: o, edges: [], cost: 0 });\n        // Walks the graph.\n        return this.walk(o, d, pathType, k);\n    }\n\n    /**\n     * Breadth First Search (BFS) algorithm for traversing and searching tree data\n     * explores the neighbor nodes first, before moving to the next level neighbors.\n     */\n    private walk(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Set of shortest paths from origin to destination.\n        const shortestPaths: Path[] = [];\n\n        let pathId = 1;\n        let node: Node;\n        while (this.heap.getPaths().length > 0 && d.count  edge.origin.nodeId == node.nodeId) ? false : true;\n    }\n\n    private resetCount(): void {\n        for (const node of this.nodes) {\n            node.count = 0;\n        }\n    }\n\n    /**\n     * Removes the alternative paths that differ only for two links.\n     * @param shortestPaths The shortest paths as created by the algorithm\n     */\n    private filterPaths(shortestPaths: Path[]): void {\n        if (shortestPaths.length > 1) {\n            let i = 0;\n            do {\n                const pathA = shortestPaths[i].edges;\n                const pathB = shortestPaths[i + 1].edges;\n                const sharedEdges = pathA.filter((edgeOfA: Edge) =>\n                    pathB.find((edgeOfB: Edge) =>\n                        edgeOfB.edgeId == edgeOfA.edgeId));\n                if (pathA.length - sharedEdges.length  value.edgeId == edge.edgeId)) {\n                        edges.push(edge);\n                        edge.label = 'E' + count++;\n                        if (!environment.testing) {\n                            edge.drawingOptions.infowindow.setContent('Edge: ' + edge.label);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Multinomial logit model.\n     * @param odPairs The O/D pairs\n     */\n    private calcShortestPathsProbabilities(odPairs: OdPair[]): number[][] {\n        // Gets the total cost of paths.\n        const pathCosts = this.calcPathCosts(odPairs);\n        const shortestPathsProbabilities: number[][] = [];\n        // Theta parameter adjustment.\n        const parameter = uiConfig.theta * 100;\n        // Calculates numerator.\n        const exps: number[][] = [];\n        for (let z = 0; z  {\n                return value > 0 ? Math.exp(-value / parameter) : 0;\n            });\n        }\n        // Calculates denominator.\n        const sumExps: number[] = [];\n        for (let z = 0; z  a + b, 0);\n            sumExps.push(sum);\n        }\n        // Probabilities.\n        for (let z = 0; z  0 ? round(exps[z][n] / sumExps[z], 3) : 0;\n                shortestPathsProbabilities[z].push(p);\n            }\n        }\n        return shortestPathsProbabilities;\n    }\n\n    private calcPathCosts(odPairs: OdPair[]): number[][] {\n        const pathCosts: number[][] = [];\n        for (let z = 0; z \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Path.html":{"url":"interfaces/Path.html","title":"interface - Path","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Path\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/k-shortest-path.ts\n        \n\n            \n                Description\n            \n            \n                Path to generic node.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        cost\n                                \n                                \n                                        edges\n                                \n                                \n                                        node\n                                \n                                \n                                        pathId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cost\n                                    \n                                \n                                \n                                    \n                                        cost:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        edges\n                                    \n                                \n                                \n                                    \n                                        edges:     Edge[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Edge[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        node\n                                    \n                                \n                                \n                                    \n                                        node:     Node\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Node\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pathId\n                                    \n                                \n                                \n                                    \n                                        pathId:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Edge, Node } from \"./graph\";\n\n/**\n * Path to generic node.\n */\nexport interface Path {\n\n    pathId: number;\n    node: Node;\n    edges: Edge[];\n    cost: number;\n\n}\n\n/**\n * Heap data structure containing paths.\n */\nexport class Heap {\n\n    /**\n     * The queue of paths.\n     */\n    private paths: Path[] = [];\n\n    /**\n     * Inserts a path into the heap.\n     * @param path The path to insert\n     */\n    public push(path: Path): void {\n        this.paths.push({ pathId: path.pathId, node: path.node, edges: path.edges, cost: path.cost });\n    }\n\n    /**\n     * Removes a path from the heap.\n     * @param pathId The id of the path\n     */\n    public pop(pathId: number): void {\n        const index = this.paths.findIndex((path: Path) => path.pathId == pathId);\n        this.paths.splice(index, 1);\n    }\n\n    /**\n     * Returns the shortest path in the heap by cost.\n     */\n    public getShortestPath(): Path {\n        return this.paths.reduce((prev: Path, curr: Path) => prev.cost \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PeriodsChanged.html":{"url":"classes/PeriodsChanged.html","title":"class - PeriodsChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  PeriodsChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/models/actions/simulation.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/simulation/models/actions/simulation.actions.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/models/actions/simulation.actions.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : SimulationActionTypes.PeriodsChanged\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/models/actions/simulation.actions.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Simulation } from '../simulation-state';\n\n/**\n * ngrx: simulation Actions.\n */\nexport enum SimulationActionTypes {\n\n    SimulationChanged = '[Simulation] Simulation Changed',\n    SimulationEnded = '[Simulation] Simulation Ended',\n    PeriodsChanged = '[Simulation] Periods Changed',\n    Reset = '[Simulation] Reset'\n\n}\n\nexport class SimulationChanged implements Action {\n\n    public readonly type: string = SimulationActionTypes.SimulationChanged;\n\n    constructor(public payload: { simulation: Simulation }) { }\n\n}\n\nexport class SimulationEnded implements Action {\n\n    public readonly type: string = SimulationActionTypes.SimulationEnded;\n\n    constructor(public payload: boolean) { }\n\n}\n\nexport class PeriodsChanged implements Action {\n\n    public readonly type: string = SimulationActionTypes.PeriodsChanged;\n\n    constructor(public payload: any) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = SimulationActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type SimulationActions = SimulationChanged | SimulationEnded | PeriodsChanged | Reset;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PrivacyComponent.html":{"url":"components/PrivacyComponent.html","title":"component - PrivacyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PrivacyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/privacy/privacy.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-privacy\n            \n\n            \n                styleUrls\n                privacy.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./privacy.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/privacy/privacy.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/privacy/privacy.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-privacy',\n    templateUrl: './privacy.component.html',\n    styleUrls: ['./privacy.component.scss']\n})\nexport class PrivacyComponent implements OnInit {\n\n    constructor() { }\n\n    ngOnInit(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            Privacy Policy of STRADA\n        \n        \n            This privacy policy describes how your personal data are used and protected by the application\n                STRADA\n            \n            The information is provided pursuant to art. 13 of Legislative Decree no. 196/2003 and EU Regulation 2016/679\n                General Data Protection Regulation (GDPR).\n            \n            Categories of processed data\n            The app does not collect any personal data.\n            Data you provide voluntarily\n            The data and the results are displayed by the app for the time in which you remain connected, and no data is\n                in any way acquired or saved.\n            Cookies\n            The app makes no use of cookies, neither profiling nor technical.\n            External services\n            The app uses Google Maps APIs, for which please refer to its privacy policy:\n                Google Privacy Policy\n            \n        \n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Privacy Policy of STRADA                            This privacy policy describes how your personal data are used and protected by the application                STRADA                        The information is provided pursuant to art. 13 of Legislative Decree no. 196/2003 and EU Regulation 2016/679                General Data Protection Regulation (GDPR).                        Categories of processed data            The app does not collect any personal data.            Data you provide voluntarily            The data and the results are displayed by the app for the time in which you remain connected, and no data is                in any way acquired or saved.            Cookies            The app makes no use of cookies, neither profiling nor technical.            External services            The app uses Google Maps APIs, for which please refer to its privacy policy:                Google Privacy Policy                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PrivacyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Relation.html":{"url":"classes/Relation.html","title":"class - Relation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Relation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                members\n                            \n                            \n                                    Public\n                                relationId\n                            \n                            \n                                    Public\n                                tags\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(relationId: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/graph.ts:229\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        relationId\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            members\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        members:     Member[]\n\n                    \n                \n                    \n                        \n                            Type :     Member[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:227\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            relationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        relationId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:225\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tags:     Tag[]\n\n                    \n                \n                    \n                        \n                            Type :     Tag[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:229\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\n\nimport * as combine from 'mout/array/combine';\n\nimport { Heap, Path } from './k-shortest-path';\nimport { round } from '../utils';\nimport { environment } from '../../environments/environment';\nimport { uiConfig } from '../ui/ui-config';\n\nexport enum PathType {\n    distance = 'distance',\n    duration = 'duration'\n}\n\n/**\n * An O/D pair is described by the origin and destination nodes, and the type of path.\n */\nexport interface OdPair {\n\n    origin: string;\n    destination: string;\n    pathType: PathType;\n\n}\n\nexport interface LinkFlow {\n\n    /**\n     * linkFlow attribute.\n     */\n    value: number;\n    /**\n     * Variance is the inverse of density.\n     */\n    variance: number;\n\n}\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public label: string;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    public drawingOptions: { marker?: google.maps.Marker } = {};\n\n    /**\n     * Used by the k shortest path routing.\n     */\n    public count: number = 0;\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public label: string;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    /**\n     * Free flow speed (m/s).\n     */\n    public freeFlowVelocity: number;\n\n    /**\n     * Instant speed (m/s).\n     */\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    /**\n     * Number of vehicles calculated from traffic data.\n     */\n    public linkFlow: number;\n\n    /**\n     * Maximum flow of the link.\n     */\n    public maxFlow: number;\n\n    public drawingOptions: {\n        originalPath?: google.maps.LatLng[],\n        path?: google.maps.LatLng[],\n        polyline?: google.maps.Polyline,\n        marker?: google.maps.Marker,\n        infowindow?: google.maps.InfoWindow\n    } = {};\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the link flow.\n     */\n    public calcLinkFlow(): void {\n        // Min distance is 1 meter.\n        if (this.distance == 0) { this.distance = 1; }\n        // Min duration is 1 second.\n        if (this.duration == 0) {\n            this.duration = round(this.distance / (50 / 3.6)) > 1 ? round(this.distance / (50 / 3.6)) : 1;\n        }\n        // Calculates free flow velocity (m/s).\n        this.freeFlowVelocity = round(this.distance / this.duration, 2);\n        // Calculates link flow.\n        if (this.durationInTraffic > 0 && this.durationInTraffic >= this.duration) {\n            // Calculates velocity (m/s).\n            this.velocity = round(this.distance / this.durationInTraffic, 2);\n            // Calculates density.\n            this.density = round(this.getKjam() * (this.freeFlowVelocity - this.velocity) / this.freeFlowVelocity, 2);\n            // Calculates flow.\n            this.flow = round(this.density * this.velocity, 2);\n            // Calculates link flow.\n            this.linkFlow = round(this.density * this.distance);\n        } else {\n            this.velocity = 0;\n            this.density = 0;\n            this.flow = 0;\n            this.linkFlow = 0;\n        }\n    }\n\n    /**\n     * Calculates the max flow of the edge.\n     * @param factor Weather Adjustment Factor\n     */\n    public calcMaxFlow(factor: number): void {\n        const maxFlow = this.getKjam() * this.freeFlowVelocity;\n        this.maxFlow = round(maxFlow * factor, 2);\n    }\n\n    /**\n     * Gets the variance of measurement error of link flow.\n     */\n    public getVariance(): number {\n        return this.density > 0 ? round(1 / this.density, 2) : 1;\n    }\n\n    public getKjam(): number {\n        return round(1 / uiConfig.sp, 2);\n    }\n\n    protected getCapacity(timeInterval: number): number {\n        return this.maxFlow * timeInterval;\n    }\n\n    protected draw(color: string, zIndex: number = 10): void {\n        this.drawingOptions.polyline.set('strokeColor', color);\n        this.drawingOptions.polyline.set('zIndex', zIndex);\n        this.drawingOptions.marker.set('visible', true);\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    protected nodes: Node[] = [];\n\n    protected edges: Edge[] = [];\n\n    protected relations: Relation[] = [];\n\n    /**\n     * Paths for each O/D pair [pairs,paths,edges].\n     */\n    protected shortestPaths: Edge[][][] = [];\n\n    protected incidenceMatrix: boolean[][][] = [];\n\n    protected assignmentMatrix: number[][][] = [];\n\n    private heap: Heap;\n\n    /**\n     * Shortest paths drawing options.\n     */\n    private drawingOptions: {\n        polylines?: google.maps.Polyline[][];\n    } = {};\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public getEdge(edgeId: number): Edge {\n        return this.edges.find((edge: Edge) => edge.edgeId == edgeId);\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Key:oneway\n     * @param edgeId Id of the edge\n     */\n    public isOneway(edgeId: number): boolean {\n        return !!this.getEdge(edgeId).tags.find(tag => tag.key == 'oneway' && tag.value != 'no') ||\n            this.isRoundabout(edgeId);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Tag:junction%3Droundabout\n     * @param edgeId Id of the edge\n     */\n    public isRoundabout(edgeId: number): boolean {\n        return this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'roundabout') ||\n            this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'circular') ?\n            true : false;\n    }\n\n    public getOdNode(label: string): Node {\n        return this.nodes.find((node: Node) => node.label == label);\n    }\n\n    public getOdNodes(): Node[] {\n        return this.nodes.filter((node: Node) => node.label);\n    }\n\n    /**\n     * Calculates the set of minimum paths.\n     * @param odPairs The O/D pairs\n     */\n    public calcShortestPaths(odPairs: OdPair[]): Observable {\n        try {\n            for (let i = 0; i  edge.label);\n    }\n\n    /**\n     * Calculates the incidence matrix of paths for O/D pairs.\n     */\n    public calcIncidenceMatrix(): Observable {\n        const edges = this.getPathsEdges();\n        for (let z = 0; z  value.edgeId == edges[m].edgeId)) {\n                        // The path crosses the edge.\n                        this.incidenceMatrix[z][n][m] = true;\n                    } else {\n                        // The path does not cross the edge.\n                        this.incidenceMatrix[z][n][m] = false;\n                    }\n                }\n            }\n        }\n        return of(null);\n    }\n\n    public getIncidenceMatrix(): boolean[][][] {\n        return this.incidenceMatrix;\n    }\n\n    /**\n     * Calculates the assignment matrix.\n     * @param odPairs The O/D pairs\n     */\n    public calcAssignmentMatrix(odPairs: OdPair[]): Observable {\n        // Calculates the probabilities of shortest paths.\n        const shortestPathsProbabilities = this.calcShortestPathsProbabilities(odPairs);\n\n        // Assignment matrix.\n        for (let z = 0; z  {\n        const edges = this.getPathsEdges();\n        for (const edge of edges) {\n            edge.calcMaxFlow(factor);\n        }\n        return of(null);\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link distance or duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param o Source node\n     * @param d Destination node\n     * @param pathType Distance or duration\n     * @param k The number of shortest paths to compute\n     * @returns The set of shortest paths\n     */\n    private ksp(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Sets to zero the count property of the nodes.\n        this.resetCount();\n        // Instantiates the heap.\n        this.heap = new Heap();\n        // Inserts the path of origin into heap with cost 0.\n        this.heap.push({ pathId: 0, node: o, edges: [], cost: 0 });\n        // Walks the graph.\n        return this.walk(o, d, pathType, k);\n    }\n\n    /**\n     * Breadth First Search (BFS) algorithm for traversing and searching tree data\n     * explores the neighbor nodes first, before moving to the next level neighbors.\n     */\n    private walk(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Set of shortest paths from origin to destination.\n        const shortestPaths: Path[] = [];\n\n        let pathId = 1;\n        let node: Node;\n        while (this.heap.getPaths().length > 0 && d.count  edge.origin.nodeId == node.nodeId) ? false : true;\n    }\n\n    private resetCount(): void {\n        for (const node of this.nodes) {\n            node.count = 0;\n        }\n    }\n\n    /**\n     * Removes the alternative paths that differ only for two links.\n     * @param shortestPaths The shortest paths as created by the algorithm\n     */\n    private filterPaths(shortestPaths: Path[]): void {\n        if (shortestPaths.length > 1) {\n            let i = 0;\n            do {\n                const pathA = shortestPaths[i].edges;\n                const pathB = shortestPaths[i + 1].edges;\n                const sharedEdges = pathA.filter((edgeOfA: Edge) =>\n                    pathB.find((edgeOfB: Edge) =>\n                        edgeOfB.edgeId == edgeOfA.edgeId));\n                if (pathA.length - sharedEdges.length  value.edgeId == edge.edgeId)) {\n                        edges.push(edge);\n                        edge.label = 'E' + count++;\n                        if (!environment.testing) {\n                            edge.drawingOptions.infowindow.setContent('Edge: ' + edge.label);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Multinomial logit model.\n     * @param odPairs The O/D pairs\n     */\n    private calcShortestPathsProbabilities(odPairs: OdPair[]): number[][] {\n        // Gets the total cost of paths.\n        const pathCosts = this.calcPathCosts(odPairs);\n        const shortestPathsProbabilities: number[][] = [];\n        // Theta parameter adjustment.\n        const parameter = uiConfig.theta * 100;\n        // Calculates numerator.\n        const exps: number[][] = [];\n        for (let z = 0; z  {\n                return value > 0 ? Math.exp(-value / parameter) : 0;\n            });\n        }\n        // Calculates denominator.\n        const sumExps: number[] = [];\n        for (let z = 0; z  a + b, 0);\n            sumExps.push(sum);\n        }\n        // Probabilities.\n        for (let z = 0; z  0 ? round(exps[z][n] / sumExps[z], 3) : 0;\n                shortestPathsProbabilities[z].push(p);\n            }\n        }\n        return shortestPathsProbabilities;\n    }\n\n    private calcPathCosts(odPairs: OdPair[]): number[][] {\n        const pathCosts: number[][] = [];\n        for (let z = 0; z \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reset.html":{"url":"classes/Reset.html","title":"class - Reset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/models/actions/simulation.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/simulation/models/actions/simulation.actions.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/models/actions/simulation.actions.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : SimulationActionTypes.Reset\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/models/actions/simulation.actions.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Simulation } from '../simulation-state';\n\n/**\n * ngrx: simulation Actions.\n */\nexport enum SimulationActionTypes {\n\n    SimulationChanged = '[Simulation] Simulation Changed',\n    SimulationEnded = '[Simulation] Simulation Ended',\n    PeriodsChanged = '[Simulation] Periods Changed',\n    Reset = '[Simulation] Reset'\n\n}\n\nexport class SimulationChanged implements Action {\n\n    public readonly type: string = SimulationActionTypes.SimulationChanged;\n\n    constructor(public payload: { simulation: Simulation }) { }\n\n}\n\nexport class SimulationEnded implements Action {\n\n    public readonly type: string = SimulationActionTypes.SimulationEnded;\n\n    constructor(public payload: boolean) { }\n\n}\n\nexport class PeriodsChanged implements Action {\n\n    public readonly type: string = SimulationActionTypes.PeriodsChanged;\n\n    constructor(public payload: any) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = SimulationActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type SimulationActions = SimulationChanged | SimulationEnded | PeriodsChanged | Reset;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SchedulerService.html":{"url":"injectables/SchedulerService.html","title":"injectable - SchedulerService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SchedulerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/wizard/scheduler.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                reset\n                            \n                            \n                                scheduleDemand\n                            \n                            \n                                scheduleNetwork\n                            \n                            \n                                scheduleSimulation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(wizard: WizardService, map: MapService, location: LocationService, network: NetworkService, weather: WeatherService, demand: DemandService, simulation: SimulationService, clock: ClockService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/scheduler.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                    MapService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    LocationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        weather\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        demand\n                                                  \n                                                        \n                                                                    DemandService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        simulation\n                                                  \n                                                        \n                                                                    SimulationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        clock\n                                                  \n                                                        \n                                                                    ClockService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/scheduler.service.ts:29\n                            \n                        \n\n\n                \n                    \n                            Resets the whole application.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scheduleDemand\n                            \n                            \n                        \n                    \n                \n                \n                    \nscheduleDemand(data: any, index: number, nextIndex: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/scheduler.service.ts:125\n                            \n                        \n\n\n                \n                    \n                            Performs in sequence the following operations:\n\nCalcs shortest paths\nCalcs incidence matrix\nCalcs assignment matrix\nGets traffic data\nCalcs link flows\nCalcs O/D matrix\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        nextIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scheduleNetwork\n                            \n                            \n                        \n                    \n                \n                \n                    \nscheduleNetwork(data: any, index: number, nextIndex: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/scheduler.service.ts:53\n                            \n                        \n\n\n                \n                    \n                            Performs in sequence the following operations:\n\nGets network\nCreates the graph\nGets network data\nAssociates data to the graph\nCorrects graph data\nGets and updates weather data\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        nextIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scheduleSimulation\n                            \n                            \n                        \n                    \n                \n                \n                    \nscheduleSimulation(data: any, index: number, nextIndex: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/scheduler.service.ts:181\n                            \n                        \n\n\n                \n                    \n                            Performs in sequence the following operations:\n\nCalcs max flow for each edge.\nInits the simulation.\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        nextIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { switchMap } from \"rxjs/operators\";\n\nimport { WizardService } from \"./wizard.service\";\nimport { MapService } from \"../map/map.service\";\nimport { LocationService } from \"../../location/location.service\";\nimport { NetworkService } from \"../../network/network.service\";\nimport { WeatherService } from \"../../network/weather/weather.service\";\nimport { DemandService } from \"../../demand/demand.service\";\nimport { SimulationService } from \"../../simulation/simulation.service\";\nimport { ClockService } from \"../../simulation/clock.service\";\n\n@Injectable() export class SchedulerService {\n\n    constructor(\n        private wizard: WizardService,\n        private map: MapService,\n        private location: LocationService,\n        private network: NetworkService,\n        private weather: WeatherService,\n        private demand: DemandService,\n        private simulation: SimulationService,\n        private clock: ClockService\n    ) { }\n\n    /**\n     * Resets the whole application.\n     */\n    public reset(): void {\n        setTimeout(() => {\n            // Wizard.\n            this.wizard.reset();\n            // Services.\n            this.map.reset();\n            this.location.reset();\n            this.network.reset();\n            this.weather.reset();\n            this.demand.reset();\n            this.simulation.reset();\n            this.clock.reset();\n        });\n    }\n\n    /**\n     * Performs in sequence the following operations:\n     * - Gets network\n     * - Creates the graph\n     * - Gets network data\n     * - Associates data to the graph\n     * - Corrects graph data\n     * - Gets and updates weather data\n     */\n    scheduleNetwork(data: any, index: number, nextIndex: number): void {\n        this.wizard.putOnHold('Getting the network');\n        const stream = this.network.getNetwork().pipe(\n            switchMap((response: any) => {\n                this.wizard.putOnHold('Creating the graph');\n                return this.network.createGraph(response);\n            }),\n            switchMap(() => {\n                this.wizard.putOnHold('Getting network data');\n                return this.network.getNetworkData();\n            }),\n            switchMap((response: any) => {\n                this.wizard.putOnHold('Updating the graph');\n                return this.network.updateGraph(response);\n            }),\n            switchMap(() => {\n                this.wizard.putOnHold('Checking the data');\n                return this.network.correctGraph();\n            }),\n            switchMap(() => {\n                this.wizard.putOnHold('Getting weather data');\n                return this.weather.getWeatherData(this.network.getTime());\n            }),\n            switchMap((response: any) => {\n                return this.weather.updateWeatherData(response, this.network.getTime());\n            })\n        );\n\n        stream.subscribe(\n            () => { },\n            (error: any) => {\n                let message: string;\n                switch (error) {\n                    case 'getNetwork':\n                        message = 'Network cannot be retrieved. Check your Internet connection and try again';\n                        break;\n                    case 'createGraph':\n                        message = 'Graph cannnot be created. Please, try with another area';\n                        break;\n                    case 'getNetworkData':\n                        message = 'Network data cannot be retrieved. Past the quota limits traffic data become paid.' +\n                            'This is an open source project: install your own version of it';\n                        break;\n                    case 'correctGraph':\n                        message = 'Graph data are not available. Please, try with another area';\n                        break;\n                    case 'getWeatherData':\n                        message = 'Weather data cannot be retrieved. Please, try at another time';\n                        break;\n                    default:\n                        message = 'Unexpected error';\n                }\n                this.wizard.putInError(message);\n                this.reset();\n            },\n            () => {\n                // Removes from waiting.\n                this.wizard.removeFromWaiting();\n                this.wizard.goOn(data, index, nextIndex);\n            }\n        );\n    }\n\n    /**\n     * Performs in sequence the following operations:\n     * - Calcs shortest paths\n     * - Calcs incidence matrix\n     * - Calcs assignment matrix\n     * - Gets traffic data\n     * - Calcs link flows\n     * - Calcs O/D matrix\n     */\n    scheduleDemand(data: any, index: number, nextIndex: number): void {\n        const graph = this.network.getGraph();\n        const odPairs = this.network.getOdPairs();\n\n        this.wizard.putOnHold('Computing shortest paths');\n        const stream = graph.calcShortestPaths(odPairs).pipe(\n            switchMap(() => {\n                return graph.calcIncidenceMatrix();\n            }),\n            switchMap(() => {\n                return graph.calcAssignmentMatrix(odPairs);\n            }),\n            switchMap(() => {\n                this.wizard.putOnHold('Getting traffic data');\n                return this.network.getTrafficData();\n            }),\n            switchMap((response: any) => {\n                return this.network.calcLinkFlows(response);\n            }),\n            switchMap(() => {\n                this.wizard.putOnHold('Computing demand');\n                return this.demand.calcOdMatrix();\n            })\n        );\n\n        stream.subscribe(\n            () => { },\n            (error: any) => {\n                let message: string;\n                switch (error) {\n                    case 'calcShortestPaths':\n                        message = 'There are no routes. Please, try with another area';\n                        break;\n                    case 'getTrafficData':\n                        message = 'Traffic data cannot be retrieved. Past the quota limits traffic data become paid.' +\n                            'This is an open source project: install your own version of it';\n                        break;\n                    default:\n                        message = 'Unexpected error';\n                }\n                this.wizard.putInError(message);\n                this.reset();\n            },\n            () => {\n                // Removes from waiting.\n                this.wizard.removeFromWaiting();\n                this.wizard.goOn(data, index, nextIndex);\n            }\n        );\n    }\n\n    /**\n     * Performs in sequence the following operations:\n     * - Calcs max flow for each edge.\n     * - Inits the simulation.\n     */\n    scheduleSimulation(data: any, index: number, nextIndex: number): void {\n        const graph = this.network.getGraph();\n        const factors = this.weather.getFactors();\n\n        this.wizard.putOnHold('Computing max flows');\n        const stream = graph.calcMaxflows(factors[0]).pipe(\n            switchMap(() => {\n                this.wizard.putOnHold('Initializing simulation');\n                return this.simulation.init();\n            })\n        );\n\n        stream.subscribe(\n            () => { },\n            (error: any) => {\n                let message: string;\n                switch (error) {\n                    default:\n                        message = 'Unexpected error';\n                }\n                this.wizard.putInError(message);\n                this.reset();\n            },\n            () => {\n                // Removes from waiting.\n                this.wizard.removeFromWaiting();\n                this.wizard.goOn(data, index, nextIndex);\n            }\n        );\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchForTheAreaComponent.html":{"url":"components/SearchForTheAreaComponent.html","title":"component - SearchForTheAreaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SearchForTheAreaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-search-for-the-area\n            \n\n            \n                styleUrls\n                search-for-the-area.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./search-for-the-area.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentPosition\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                search\n                            \n                            \n                                sendActions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(wizard: WizardService, location: LocationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    LocationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCurrentPosition\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCurrentPosition()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            search\n                            \n                            \n                        \n                    \n                \n                \n                    \nsearch(address: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        address\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { WizardService } from '../wizard.service';\nimport { LocationService } from '../../../location/location.service';\n\nimport { BaseComponent } from '../../models/base.component';\n\n@Component({\n    selector: 'wizard-search-for-the-area',\n    templateUrl: './search-for-the-area.component.html',\n    styleUrls: ['./search-for-the-area.component.scss']\n})\nexport class SearchForTheAreaComponent extends BaseComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    constructor(\n        private wizard: WizardService,\n        private location: LocationService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.valueChanges();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        // Updates location service data on value changes.\n        this.subscriptions.push(this.formGroup.get('center').valueChanges.subscribe(\n            (center: google.maps.LatLngLiteral) => {\n                this.location.setLatLng(center);\n            }\n        ));\n    }\n\n    receiveActions(): void {\n        //\n    }\n\n    sendActions(): void {\n        //\n    }\n\n    search(address: string): void {\n        if (!!address) {\n            // Updates pending state.\n            this.wizard.putOnHold('Searching address');\n            // Converts the address into geographic coordinates.\n            this.location.codeAddress(address).forEach(\n                (results: google.maps.GeocoderResult[]) => {\n                    this.formGroup.get('center').setValue({\n                        lat: results[0].geometry.location.lat(),\n                        lng: results[0].geometry.location.lng()\n                    });\n                    // Updates step state.\n                    this.wizard.updateStep(this.formGroup.value, this.index);\n                })\n                .then()\n                .catch((error: google.maps.GeocoderStatus) => {\n                    if (error === google.maps.GeocoderStatus.ZERO_RESULTS) {\n                        // Updates error state.\n                        this.wizard.putInError('Zero results');\n                    } else {\n                        // INVALID_REQUEST, OVER_QUERY_LIMIT, REQUEST_DENIED, UNKNOWN_ERROR\n                        // Updates error state.\n                        this.wizard.putInError('Invalid request');\n                    }\n                });\n        }\n    }\n\n    getCurrentPosition(): void {\n        if (navigator.geolocation) {\n            // Updates pending state.\n            this.wizard.putOnHold('Getting position');\n            this.location.getCurrentPosition().subscribe(\n                (position: Position) => {\n                    this.formGroup.get('center').setValue({ lat: position.coords.latitude, lng: position.coords.longitude });\n                    // Updates step state.\n                    this.wizard.updateStep(this.formGroup.value, this.index);\n                },\n                (error: PositionError) => {\n                    if (error.code > 0) {\n                        let message: string;\n                        switch (error.code) {\n                            case error.PERMISSION_DENIED:\n                                message = 'Permission denied';\n                                break;\n                            case error.POSITION_UNAVAILABLE:\n                                message = 'Position unavailable';\n                                break;\n                            case error.TIMEOUT:\n                                message = 'Position timeout';\n                                break;\n                        }\n                        // Updates error state.\n                        this.wizard.putInError(message);\n                    }\n                });\n\n        } else {\n            // Updates error state.\n            this.wizard.putInError(\"Browser doesn't support geolocation\");\n        }\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n            \n                search\n            \n        \n        Get current position\n    \n\n    \n        Continue\n            navigate_next\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    search                            Get current position                Continue            navigate_next            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchForTheAreaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectionOfTheAreaComponent.html":{"url":"components/SelectionOfTheAreaComponent.html","title":"component - SelectionOfTheAreaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SelectionOfTheAreaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-selection-of-the-area\n            \n\n            \n                styleUrls\n                selection-of-the-area.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./selection-of-the-area.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, wizard: WizardService, network: NetworkService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n\n                \n                    \n                        getmin()\n                    \n                \n                            \n                                \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:28\n                                \n                            \n                    \n                        \n                                Min moment: current time.\n\n\n                                \n                                    Returns :     Date\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n\n                \n                    \n                        getmax()\n                    \n                \n                            \n                                \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:35\n                                \n                            \n                    \n                        \n                                Max moment: current day.\n\n\n                                \n                                    Returns :     Date\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { WizardService } from '../wizard.service';\nimport { NetworkService } from '../../../network/network.service';\nimport * as fromUi from '../../models/reducers';\nimport { Map } from '../../models/ui-state';\nimport { uiConfig } from '../../ui-config';\n\nimport { BaseComponent } from '../../models/base.component';\n\n@Component({\n    selector: 'wizard-selection-of-the-area',\n    templateUrl: './selection-of-the-area.component.html',\n    styleUrls: ['./selection-of-the-area.component.scss']\n})\nexport class SelectionOfTheAreaComponent extends BaseComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    /**\n     * Min moment: current time.\n     */\n    get min(): Date {\n        return new Date();\n    }\n\n    /**\n     * Max moment: current day.\n     */\n    get max(): Date {\n        return new Date(\n            this.min.getFullYear(),\n            this.min.getMonth(),\n            this.min.getDate(),\n            this.min.getHours() + uiConfig.timeLimit,\n            this.min.getMinutes()\n        );\n    }\n\n    constructor(\n        private store: Store,\n        private wizard: WizardService,\n        private network: NetworkService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.valueChanges();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        // Updates network service data on value changes.\n        this.subscriptions.push(this.formGroup.get('bounds').valueChanges.subscribe(\n            (bounds: google.maps.LatLngBoundsLiteral) => {\n                this.network.setBounds(bounds);\n            }\n        ));\n        this.subscriptions.push(this.formGroup.get('time').valueChanges.subscribe(\n            (time: Date) => {\n                this.network.setTime(time);\n            }\n        ));\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.map)).subscribe((map: Map) => {\n            if (map && map.data.bounds) {\n                this.formGroup.get('bounds').setValue(map.data.bounds);\n            }\n        }));\n    }\n\n    sendActions(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n            \n                calendar_today\n            \n            Optional. Leave it empty for the current time\n            \n                \n                \n                    Please, enter a time between the current time and the next 24 hours\n                \n                \n                    Please, insert a valid time or select it\n                \n            \n        \n        \n    \n\n    \n        Continue\n            navigate_next\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    calendar_today                        Optional. Leave it empty for the current time                                                                Please, enter a time between the current time and the next 24 hours                                                    Please, insert a valid time or select it                                                            Continue            navigate_next            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SelectionOfTheAreaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n  Modules\n  SharedModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nFooterComponent\n\nFooterComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nFooterComponent->SharedModule\n\n\n\n\n\nInfoDialogComponent\n\nInfoDialogComponent\n\nSharedModule -->\n\nInfoDialogComponent->SharedModule\n\n\n\n\n\nMessageArchivedComponent\n\nMessageArchivedComponent\n\nSharedModule -->\n\nMessageArchivedComponent->SharedModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nSharedModule->FooterComponent \n\n\n\n\n\nInfoDialogComponent \n\nInfoDialogComponent \n\nInfoDialogComponent  -->\n\nSharedModule->InfoDialogComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nMessageArchivedComponent \n\nMessageArchivedComponent \n\nMessageArchivedComponent  -->\n\nSharedModule->MessageArchivedComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                FooterComponent\n                            \n                            \n                                InfoDialogComponent\n                            \n                            \n                                MessageArchivedComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                InfoDialogComponent\n                            \n                            \n                                MessageArchivedComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    MaterialModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    FooterComponent\n                            \n                            \n                                    InfoDialogComponent\n                            \n                            \n                                    MaterialModule\n                            \n                            \n                                    MessageArchivedComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { MaterialModule } from './material.module';\n\nimport { FooterComponent } from './footer/footer.component';\nimport { MessageArchivedComponent } from './message-archived.component';\nimport { InfoDialogComponent } from './info-dialog.component';\n\nimport { CanDeactivateGuard } from './can-deactivate-guard.service';\n\nconst sharedModules: any[] = [\n    CommonModule,\n    RouterModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    FlexLayoutModule\n];\n\n@NgModule({\n    entryComponents: [\n        MessageArchivedComponent,\n        InfoDialogComponent\n    ],\n    declarations: [\n        FooterComponent,\n        MessageArchivedComponent,\n        InfoDialogComponent\n    ],\n    imports: sharedModules,\n    exports: [\n        sharedModules,\n        FooterComponent,\n        MessageArchivedComponent,\n        InfoDialogComponent\n    ]\n})\nexport class SharedModule {\n    public static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: SharedModule,\n            providers: [\n                CanDeactivateGuard\n            ]\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Simulation.html":{"url":"interfaces/Simulation.html","title":"interface - Simulation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Simulation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/models/simulation-state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        avgSpeed\n                                \n                                \n                                        counts\n                                \n                                \n                                        data\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avgSpeed\n                                    \n                                \n                                \n                                    \n                                        avgSpeed:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Simulation avg. speed.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        counts\n                                    \n                                \n                                \n                                    \n                                        counts:     Counts\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Counts\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Simulation counts.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     NumericalSimulation[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     NumericalSimulation[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Simulation data.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface NumericalSimulation {\n\n    edge: string;\n    wayName: string;\n    trafficVolume: number;\n    trafficCount: number;\n    delay: number | string;\n    stops: number;\n\n}\n\nexport interface Counts {\n\n    startedVehicles: number;\n    arrivedVehicles: number;\n\n}\n\nexport interface Simulation {\n\n    /**\n     * Simulation data.\n     */\n    data: NumericalSimulation[];\n    /**\n     * Simulation counts.\n     */\n    counts: Counts;\n    /**\n     * Simulation avg. speed.\n     */\n    avgSpeed: number;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SimulationChanged.html":{"url":"classes/SimulationChanged.html","title":"class - SimulationChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SimulationChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/models/actions/simulation.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/simulation/models/actions/simulation.actions.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/models/actions/simulation.actions.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : SimulationActionTypes.SimulationChanged\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/models/actions/simulation.actions.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Simulation } from '../simulation-state';\n\n/**\n * ngrx: simulation Actions.\n */\nexport enum SimulationActionTypes {\n\n    SimulationChanged = '[Simulation] Simulation Changed',\n    SimulationEnded = '[Simulation] Simulation Ended',\n    PeriodsChanged = '[Simulation] Periods Changed',\n    Reset = '[Simulation] Reset'\n\n}\n\nexport class SimulationChanged implements Action {\n\n    public readonly type: string = SimulationActionTypes.SimulationChanged;\n\n    constructor(public payload: { simulation: Simulation }) { }\n\n}\n\nexport class SimulationEnded implements Action {\n\n    public readonly type: string = SimulationActionTypes.SimulationEnded;\n\n    constructor(public payload: boolean) { }\n\n}\n\nexport class PeriodsChanged implements Action {\n\n    public readonly type: string = SimulationActionTypes.PeriodsChanged;\n\n    constructor(public payload: any) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = SimulationActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type SimulationActions = SimulationChanged | SimulationEnded | PeriodsChanged | Reset;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SimulationComponent.html":{"url":"components/SimulationComponent.html","title":"component - SimulationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SimulationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/simulation/simulation.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-simulation\n            \n\n            \n                styleUrls\n                simulation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./simulation.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                avgSpeed\n                            \n                            \n                                control\n                            \n                            \n                                counts\n                            \n                            \n                                endSimulation\n                            \n                            \n                                simulatedTimeInterval\n                            \n                            \n                                simulatedTimePeriod\n                            \n                            \n                                timeInterval\n                            \n                            \n                                timePeriod\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                pressControl\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, wizard: WizardService, clock: ClockService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/simulation/simulation.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        clock\n                                                  \n                                                        \n                                                                    ClockService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:24\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pressControl\n                            \n                            \n                        \n                    \n                \n                \n                    \npressControl(control: Control)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:100\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        control\n                                                        \n                                                                    Control\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:96\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            avgSpeed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        avgSpeed:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            control\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        control:     \n\n                    \n                \n                    \n                        \n                            Default value : Control\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            counts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        counts:     Counts\n\n                    \n                \n                    \n                        \n                            Type :     Counts\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            endSimulation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        endSimulation:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            simulatedTimeInterval\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        simulatedTimeInterval:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            simulatedTimePeriod\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        simulatedTimePeriod:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeInterval\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timeInterval:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timePeriod\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timePeriod:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { WizardService } from '../wizard.service';\nimport { ClockService, Control } from '../../../simulation/clock.service';\nimport * as fromSimulation from '../../../simulation/models/reducers';\nimport { Simulation, Counts } from '../../../simulation/models/simulation-state';\nimport { toSeconds, formatTimeFromSeconds, formatTimeFromMilliseconds } from '../../utils';\nimport { uiConfig } from '../../ui-config';\n\nimport { BaseComponent } from '../../models/base.component';\n\n@Component({\n    selector: 'wizard-simulation',\n    templateUrl: './simulation.component.html',\n    styleUrls: ['./simulation.component.scss']\n})\nexport class SimulationComponent extends BaseComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    timeInterval: number;\n\n    timePeriod: string;\n\n    simulatedTimeInterval: number;\n\n    simulatedTimePeriod: string;\n\n    counts: Counts;\n\n    avgSpeed: number;\n\n    endSimulation: boolean;\n\n    control: typeof Control = Control;\n\n    constructor(\n        private store: Store,\n        private wizard: WizardService,\n        private clock: ClockService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.valueChanges();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        //\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromSimulation.periods)).subscribe((periods: any) => {\n            if (periods) {\n                if (typeof periods.timeInterval !== \"undefined\") {\n                    this.timeInterval = periods.timeInterval;\n                }\n                if (typeof periods.timePeriods !== \"undefined\") {\n                    this.timePeriod = formatTimeFromSeconds(periods.timePeriods[periods.timePeriods.length - 1]);\n                }\n                if (typeof periods.simulatedTimeInterval !== \"undefined\") {\n                    this.simulatedTimeInterval = toSeconds(periods.simulatedTimeInterval);\n                } else {\n                    this.simulatedTimeInterval = toSeconds(uiConfig.simulatedTimeInterval);\n                }\n                if (typeof periods.simulatedTimePeriod !== \"undefined\") {\n                    this.simulatedTimePeriod = formatTimeFromMilliseconds(periods.simulatedTimePeriod);\n                } else {\n                    this.simulatedTimePeriod = formatTimeFromMilliseconds(0);\n                }\n            }\n        }));\n        this.subscriptions.push(this.store.pipe(select(fromSimulation.simulation)).subscribe((simulation: Simulation) => {\n            if (simulation && simulation.counts) {\n                this.counts = simulation.counts;\n            }\n            if (simulation && simulation.avgSpeed) {\n                this.avgSpeed = simulation.avgSpeed;\n            }\n        }));\n        this.subscriptions.push(this.store.pipe(select(fromSimulation.end)).subscribe((end: boolean) => {\n            this.endSimulation = end;\n            this.avgSpeed = 0;\n            this.formGroup.get('endSimulation').setValue(end);\n        }));\n    }\n\n    sendActions(): void {\n        //\n    }\n\n    pressControl(control: Control): void {\n        this.clock.pressControl(control);\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    \n                        stop\n                    \n                \n                \n                    \n                        play_arrow\n                    \n                \n                \n                    \n                        pause\n                    \n                \n            \n            \n                \n                    \n                        fast_rewind\n                    \n                \n                \n                    \n                        skip_next\n                    \n                \n                \n                    \n                        fast_forward\n                    \n                \n            \n        \n        \n        \n            Time interval: {{ timeInterval }} s\n            Time period: {{ timePeriod }}\n            Simulated time interval: {{ simulatedTimeInterval }} s\n            Simulated time period: {{ simulatedTimePeriod }}\n        \n        \n        \n            Started vehicles: {{ counts?.startedVehicles || 0 }}\n            Arrived vehicles: {{ counts?.arrivedVehicles || 0 }}\n        \n        \n        \n            Avg. speed: {{ avgSpeed || 0 }} m/s\n        \n    \n\n    \n        Continue\n            navigate_next\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    stop                                                                                                play_arrow                                                                                                pause                                                                                                                        fast_rewind                                                                                                skip_next                                                                                                fast_forward                                                                                    Time interval: {{ timeInterval }} s            Time period: {{ timePeriod }}            Simulated time interval: {{ simulatedTimeInterval }} s            Simulated time period: {{ simulatedTimePeriod }}                                    Started vehicles: {{ counts?.startedVehicles || 0 }}            Arrived vehicles: {{ counts?.arrivedVehicles || 0 }}                                    Avg. speed: {{ avgSpeed || 0 }} m/s                        Continue            navigate_next            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SimulationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SimulationEnded.html":{"url":"classes/SimulationEnded.html","title":"class - SimulationEnded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SimulationEnded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/models/actions/simulation.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/simulation/models/actions/simulation.actions.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/models/actions/simulation.actions.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : SimulationActionTypes.SimulationEnded\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/models/actions/simulation.actions.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Simulation } from '../simulation-state';\n\n/**\n * ngrx: simulation Actions.\n */\nexport enum SimulationActionTypes {\n\n    SimulationChanged = '[Simulation] Simulation Changed',\n    SimulationEnded = '[Simulation] Simulation Ended',\n    PeriodsChanged = '[Simulation] Periods Changed',\n    Reset = '[Simulation] Reset'\n\n}\n\nexport class SimulationChanged implements Action {\n\n    public readonly type: string = SimulationActionTypes.SimulationChanged;\n\n    constructor(public payload: { simulation: Simulation }) { }\n\n}\n\nexport class SimulationEnded implements Action {\n\n    public readonly type: string = SimulationActionTypes.SimulationEnded;\n\n    constructor(public payload: boolean) { }\n\n}\n\nexport class PeriodsChanged implements Action {\n\n    public readonly type: string = SimulationActionTypes.PeriodsChanged;\n\n    constructor(public payload: any) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = SimulationActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type SimulationActions = SimulationChanged | SimulationEnded | PeriodsChanged | Reset;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SimulationModule.html":{"url":"modules/SimulationModule.html","title":"module - SimulationModule","body":"\n                   \n\n\n\n\n  Modules\n  SimulationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SimulationModule\n\n\n\ncluster_SimulationModule_providers\n\n\n\n\nClockService\n\nClockService\n\n\n\nSimulationModule\n\nSimulationModule\n\nSimulationModule -->\n\nClockService->SimulationModule\n\n\n\n\n\nSimulationService\n\nSimulationService\n\nSimulationModule -->\n\nSimulationService->SimulationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/simulation/simulation.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     ClockService\n                            \n                            \n                                     SimulationService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { StoreModule } from \"@ngrx/store\";\n\nimport { SimulationService } from './simulation.service';\nimport { ClockService } from './clock.service';\nimport { reducers } from './models/reducers';\n\n@NgModule({\n    imports: [\n        StoreModule.forFeature('simulation', reducers)\n    ],\n    declarations: [],\n    providers: [SimulationService, ClockService]\n})\nexport class SimulationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SimulationState.html":{"url":"interfaces/SimulationState.html","title":"interface - SimulationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SimulationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/models/reducers.ts\n        \n\n            \n                Description\n            \n            \n                Simulation state management.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        simulation\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        simulation\n                                    \n                                \n                                \n                                    \n                                        simulation:     fromSimulation.SimulationState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromSimulation.SimulationState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, createFeatureSelector, createSelector, MemoizedSelector } from \"@ngrx/store\";\n\nimport * as fromSimulation from './reducers/simulation.reducer';\nimport { Simulation } from \"./simulation-state\";\n\n/**\n * Simulation state management.\n */\nexport interface SimulationState {\n\n    simulation: fromSimulation.SimulationState;\n\n}\n\nexport const reducers: ActionReducerMap = {\n    simulation: fromSimulation.simulationReducer\n};\n\nexport const featureSimulationState: MemoizedSelector = createFeatureSelector('simulation');\n\n/**\n * Exports the simulation state.\n */\nexport const simulationState: MemoizedSelector = createSelector(\n    featureSimulationState,\n    (state: SimulationState) => state.simulation\n);\n\nexport const simulation: MemoizedSelector = createSelector(\n    simulationState,\n    fromSimulation.getSimulation\n);\n\n/**\n * Exports the end state.\n */\nexport const end: MemoizedSelector = createSelector(\n    simulationState,\n    fromSimulation.getEnd\n);\n\n/**\n * Exports the periods state.\n */\nexport const periods: MemoizedSelector = createSelector(\n    simulationState,\n    fromSimulation.getPeriods\n);\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Statistics.html":{"url":"classes/Statistics.html","title":"class - Statistics","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Statistics\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/statistics.ts\n        \n\n            \n                Description\n            \n            \n                Extracts statistics from the graph.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getBusiestEdge\n                            \n                            \n                                    Static\n                                getBusiestEdgeCapacity\n                            \n                            \n                                    Static\n                                getBusiestEdgeData\n                            \n                            \n                                    Static\n                                getBusiestEdgeDelay\n                            \n                            \n                                    Static\n                                getBusiestEdgeLabel\n                            \n                            \n                                    Static\n                                getHeavyTrafficData\n                            \n                            \n                                    Private\n                                    Static\n                                getHeavyTrafficEdges\n                            \n                            \n                                    Static\n                                getHeavyTrafficLabels\n                            \n                            \n                                    Private\n                                    Static\n                                getModerateTrafficEdges\n                            \n                            \n                                    Static\n                                getModerateTrafficLabels\n                            \n                            \n                                    Static\n                                getModerateyTrafficData\n                            \n                            \n                                    Private\n                                    Static\n                                getTrafficVolumes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getBusiestEdge\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBusiestEdge(edges: LtmEdge[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edges\n                                                        \n                                                                    LtmEdge[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     LtmEdge\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getBusiestEdgeCapacity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBusiestEdgeCapacity(edge: LtmEdge)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edge\n                                                        \n                                                                    LtmEdge\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getBusiestEdgeData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBusiestEdgeData(edge: LtmEdge)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edge\n                                                        \n                                                                    LtmEdge\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getBusiestEdgeDelay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBusiestEdgeDelay(edge: LtmEdge, timePeriods: number[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edge\n                                                        \n                                                                    LtmEdge\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        timePeriods\n                                                        \n                                                                    number[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getBusiestEdgeLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBusiestEdgeLabel(edge: LtmEdge)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edge\n                                                        \n                                                                    LtmEdge\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getHeavyTrafficData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getHeavyTrafficData(edges: LtmEdge[], timeInterval: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edges\n                                                        \n                                                                    LtmEdge[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        timeInterval\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            getHeavyTrafficEdges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getHeavyTrafficEdges(edges: LtmEdge[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edges\n                                                        \n                                                                    LtmEdge[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     LtmEdge[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getHeavyTrafficLabels\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getHeavyTrafficLabels(edges: LtmEdge[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edges\n                                                        \n                                                                    LtmEdge[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            getModerateTrafficEdges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getModerateTrafficEdges(edges: LtmEdge[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edges\n                                                        \n                                                                    LtmEdge[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     LtmEdge[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getModerateTrafficLabels\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getModerateTrafficLabels(edges: LtmEdge[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edges\n                                                        \n                                                                    LtmEdge[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getModerateyTrafficData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getModerateyTrafficData(edges: LtmEdge[], timeInterval: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edges\n                                                        \n                                                                    LtmEdge[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        timeInterval\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            getTrafficVolumes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getTrafficVolumes(edge: LtmEdge)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edge\n                                                        \n                                                                    LtmEdge\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { LtmEdge } from \"./ltm-graph\";\n\n/**\n * Extracts statistics from the graph.\n */\nexport class Statistics {\n\n    public static getHeavyTrafficLabels(edges: LtmEdge[]): string[] {\n        return this.getHeavyTrafficEdges(edges).map((edge: LtmEdge) => edge.label);\n    }\n\n    public static getModerateTrafficLabels(edges: LtmEdge[]): string[] {\n        return this.getModerateTrafficEdges(edges).map((edge: LtmEdge) => edge.label);\n    }\n\n    public static getHeavyTrafficData(edges: LtmEdge[], timeInterval: number): number[] {\n        return this.getHeavyTrafficEdges(edges).map((edge: LtmEdge) => edge.heavyTrafficCount * timeInterval);\n    }\n\n    public static getModerateyTrafficData(edges: LtmEdge[], timeInterval: number): number[] {\n        return this.getModerateTrafficEdges(edges).map((edge: LtmEdge) => edge.moderateTrafficCount * timeInterval);\n    }\n\n    public static getBusiestEdge(edges: LtmEdge[]): LtmEdge {\n        return edges.reduce((prev: LtmEdge, curr: LtmEdge) =>\n            prev.heavyTrafficCount + prev.moderateTrafficCount > curr.heavyTrafficCount + curr.moderateTrafficCount ? prev : curr\n        );\n    }\n\n    public static getBusiestEdgeLabel(edge: LtmEdge): string {\n        return edge.label;\n    }\n\n    public static getBusiestEdgeData(edge: LtmEdge): number[] {\n        return this.getTrafficVolumes(edge);\n    }\n\n    public static getBusiestEdgeCapacity(edge: LtmEdge): number {\n        return Math.trunc(edge.maxFlow * edge.duration) > 1 ?\n            Math.trunc(edge.maxFlow * edge.duration) + 1 :\n            1;\n    }\n\n    public static getBusiestEdgeDelay(edge: LtmEdge, timePeriods: number[]): number {\n        const trafficVolumes = this.getTrafficVolumes(edge);\n\n        let i = 0;\n        let first: number;\n        let last: number;\n        do {\n            if (trafficVolumes[i] > 0 && first == null) {\n                first = i;\n            }\n            if (trafficVolumes[i] > 0) {\n                last = i + 1;\n            }\n            i++;\n        } while (i  Math.abs(curr - targetTime)  edge.heavyTrafficCount > 0);\n    }\n\n    private static getModerateTrafficEdges(edges: LtmEdge[]): LtmEdge[] {\n        return edges.filter((edge: LtmEdge) => edge.moderateTrafficCount > 0);\n    }\n\n    private static getTrafficVolumes(edge: LtmEdge): number[] {\n        return edge.upstream.map((value: number, i: number) => value - edge.downstream[i]);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatisticsComponent.html":{"url":"components/StatisticsComponent.html","title":"component - StatisticsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StatisticsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/statistics/statistics.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-statistics\n            \n\n            \n                styleUrls\n                statistics.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./statistics.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                totalAvgSpeed\n                            \n                            \n                                totalProcessingTime\n                            \n                            \n                                totalSimulatedTime\n                            \n                            \n                                totalTime\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, wizard: WizardService, simulation: SimulationService, clock: ClockService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/statistics/statistics.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        simulation\n                                                  \n                                                        \n                                                                    SimulationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        clock\n                                                  \n                                                        \n                                                                    ClockService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalAvgSpeed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        totalAvgSpeed:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalProcessingTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        totalProcessingTime:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalSimulatedTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        totalSimulatedTime:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        totalTime:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { WizardService } from '../wizard.service';\nimport { SimulationService } from '../../../simulation/simulation.service';\nimport { ClockService } from '../../../simulation/clock.service';\nimport * as fromUi from '../../models/reducers';\nimport { formatTimeFromSeconds, formatTimeFromMilliseconds } from '../../utils';\n\nimport { BaseComponent } from '../../models/base.component';\n\n@Component({\n    selector: 'wizard-statistics',\n    templateUrl: './statistics.component.html',\n    styleUrls: ['./statistics.component.scss']\n})\nexport class StatisticsComponent extends BaseComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    totalTime: string;\n\n    totalSimulatedTime: string;\n\n    totalProcessingTime: string;\n\n    totalAvgSpeed: number;\n\n    constructor(\n        private store: Store,\n        private wizard: WizardService,\n        private simulation: SimulationService,\n        private clock: ClockService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.valueChanges();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        //\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.currentStep)).subscribe((currentStep: number) => {\n            switch (currentStep) {\n                case this.index:\n                    const simulationStatistics = this.simulation.getStatistics();\n                    const clockStatistics = this.clock.getStatistics();\n                    this.totalTime = formatTimeFromSeconds(simulationStatistics.totalTime);\n                    this.totalSimulatedTime = formatTimeFromMilliseconds(clockStatistics.totalSimulatedTime);\n                    this.totalProcessingTime = formatTimeFromMilliseconds(clockStatistics.totalProcessingTime);\n                    this.totalAvgSpeed = simulationStatistics.totalAvgSpeed;\n                    break;\n            }\n        }));\n    }\n\n    sendActions(): void {\n        //\n    }\n}\n\n    \n\n    \n        \n    \n        \n            Total time: {{ totalTime }}\n            Total simulated time: {{ totalSimulatedTime }}\n            Total processing time: {{ totalProcessingTime }}\n        \n        \n        \n            Total avg. speed: {{ totalAvgSpeed || 0 }} m/s\n        \n    \n\n    \n        Exit\n            navigate_next\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Total time: {{ totalTime }}            Total simulated time: {{ totalSimulatedTime }}            Total processing time: {{ totalProcessingTime }}                                    Total avg. speed: {{ totalAvgSpeed || 0 }} m/s                        Exit            navigate_next            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatisticsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Step.html":{"url":"interfaces/Step.html","title":"interface - Step","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Step\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/ui-state.ts\n        \n\n            \n                Description\n            \n            \n                Step model.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Form model data.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Step {\n\n    /**\n     * Form model data.\n     */\n    data: any;\n\n}\n\n/**\n * Map model.\n */\nexport interface Map {\n\n    /**\n     * Map data.\n     */\n    data: any;\n\n}\n\n/**\n * Initial steps.\n */\nexport const STEPS: Step[] = [];\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StepChanged.html":{"url":"classes/StepChanged.html","title":"class - StepChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  StepChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/actions/wizard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/models/actions/wizard.actions.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : WizardActionTypes.StepChanged\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Step } from '../ui-state';\n\n/**\n * ngrx: wizard Actions.\n */\nexport enum WizardActionTypes {\n\n    StepChanged = '[Wizard] Step Changed',\n    StepError = '[Wizard] Step Error',\n    StepPending = '[Wizard] Step Pending',\n    GoOn = '[Wizard] Go On',\n    Reset = '[Wizard] Reset'\n\n}\n\nexport class StepChanged implements Action {\n\n    public readonly type: string = WizardActionTypes.StepChanged;\n\n    constructor(public payload: { step: Step, index: number }) { }\n\n}\n\nexport class StepError implements Action {\n\n    public readonly type: string = WizardActionTypes.StepError;\n\n    constructor(public payload: string) { }\n\n}\n\nexport class StepPending implements Action {\n\n    public readonly type: string = WizardActionTypes.StepPending;\n\n    constructor(public payload: string | boolean) { }\n\n}\n\nexport class GoOn implements Action {\n\n    public readonly type: string = WizardActionTypes.GoOn;\n\n    constructor(public payload: { step: Step, index: number, nextIndex: number }) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = WizardActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type WizardActions = StepChanged | StepError | StepPending | GoOn | Reset;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StepError.html":{"url":"classes/StepError.html","title":"class - StepError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  StepError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/actions/wizard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/models/actions/wizard.actions.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : WizardActionTypes.StepError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Step } from '../ui-state';\n\n/**\n * ngrx: wizard Actions.\n */\nexport enum WizardActionTypes {\n\n    StepChanged = '[Wizard] Step Changed',\n    StepError = '[Wizard] Step Error',\n    StepPending = '[Wizard] Step Pending',\n    GoOn = '[Wizard] Go On',\n    Reset = '[Wizard] Reset'\n\n}\n\nexport class StepChanged implements Action {\n\n    public readonly type: string = WizardActionTypes.StepChanged;\n\n    constructor(public payload: { step: Step, index: number }) { }\n\n}\n\nexport class StepError implements Action {\n\n    public readonly type: string = WizardActionTypes.StepError;\n\n    constructor(public payload: string) { }\n\n}\n\nexport class StepPending implements Action {\n\n    public readonly type: string = WizardActionTypes.StepPending;\n\n    constructor(public payload: string | boolean) { }\n\n}\n\nexport class GoOn implements Action {\n\n    public readonly type: string = WizardActionTypes.GoOn;\n\n    constructor(public payload: { step: Step, index: number, nextIndex: number }) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = WizardActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type WizardActions = StepChanged | StepError | StepPending | GoOn | Reset;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StepPending.html":{"url":"classes/StepPending.html","title":"class - StepPending","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  StepPending\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/actions/wizard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string | boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/models/actions/wizard.actions.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string | boolean\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     string | boolean\n\n                    \n                \n                    \n                        \n                            Type :     string | boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : WizardActionTypes.StepPending\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Step } from '../ui-state';\n\n/**\n * ngrx: wizard Actions.\n */\nexport enum WizardActionTypes {\n\n    StepChanged = '[Wizard] Step Changed',\n    StepError = '[Wizard] Step Error',\n    StepPending = '[Wizard] Step Pending',\n    GoOn = '[Wizard] Go On',\n    Reset = '[Wizard] Reset'\n\n}\n\nexport class StepChanged implements Action {\n\n    public readonly type: string = WizardActionTypes.StepChanged;\n\n    constructor(public payload: { step: Step, index: number }) { }\n\n}\n\nexport class StepError implements Action {\n\n    public readonly type: string = WizardActionTypes.StepError;\n\n    constructor(public payload: string) { }\n\n}\n\nexport class StepPending implements Action {\n\n    public readonly type: string = WizardActionTypes.StepPending;\n\n    constructor(public payload: string | boolean) { }\n\n}\n\nexport class GoOn implements Action {\n\n    public readonly type: string = WizardActionTypes.GoOn;\n\n    constructor(public payload: { step: Step, index: number, nextIndex: number }) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = WizardActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type WizardActions = StepChanged | StepError | StepPending | GoOn | Reset;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tag.html":{"url":"interfaces/Tag.html","title":"interface - Tag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Tag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                Tag describes the meaning of the particular element to which it is attached.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        key\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\n\nimport * as combine from 'mout/array/combine';\n\nimport { Heap, Path } from './k-shortest-path';\nimport { round } from '../utils';\nimport { environment } from '../../environments/environment';\nimport { uiConfig } from '../ui/ui-config';\n\nexport enum PathType {\n    distance = 'distance',\n    duration = 'duration'\n}\n\n/**\n * An O/D pair is described by the origin and destination nodes, and the type of path.\n */\nexport interface OdPair {\n\n    origin: string;\n    destination: string;\n    pathType: PathType;\n\n}\n\nexport interface LinkFlow {\n\n    /**\n     * linkFlow attribute.\n     */\n    value: number;\n    /**\n     * Variance is the inverse of density.\n     */\n    variance: number;\n\n}\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public label: string;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    public drawingOptions: { marker?: google.maps.Marker } = {};\n\n    /**\n     * Used by the k shortest path routing.\n     */\n    public count: number = 0;\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public label: string;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    /**\n     * Free flow speed (m/s).\n     */\n    public freeFlowVelocity: number;\n\n    /**\n     * Instant speed (m/s).\n     */\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    /**\n     * Number of vehicles calculated from traffic data.\n     */\n    public linkFlow: number;\n\n    /**\n     * Maximum flow of the link.\n     */\n    public maxFlow: number;\n\n    public drawingOptions: {\n        originalPath?: google.maps.LatLng[],\n        path?: google.maps.LatLng[],\n        polyline?: google.maps.Polyline,\n        marker?: google.maps.Marker,\n        infowindow?: google.maps.InfoWindow\n    } = {};\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the link flow.\n     */\n    public calcLinkFlow(): void {\n        // Min distance is 1 meter.\n        if (this.distance == 0) { this.distance = 1; }\n        // Min duration is 1 second.\n        if (this.duration == 0) {\n            this.duration = round(this.distance / (50 / 3.6)) > 1 ? round(this.distance / (50 / 3.6)) : 1;\n        }\n        // Calculates free flow velocity (m/s).\n        this.freeFlowVelocity = round(this.distance / this.duration, 2);\n        // Calculates link flow.\n        if (this.durationInTraffic > 0 && this.durationInTraffic >= this.duration) {\n            // Calculates velocity (m/s).\n            this.velocity = round(this.distance / this.durationInTraffic, 2);\n            // Calculates density.\n            this.density = round(this.getKjam() * (this.freeFlowVelocity - this.velocity) / this.freeFlowVelocity, 2);\n            // Calculates flow.\n            this.flow = round(this.density * this.velocity, 2);\n            // Calculates link flow.\n            this.linkFlow = round(this.density * this.distance);\n        } else {\n            this.velocity = 0;\n            this.density = 0;\n            this.flow = 0;\n            this.linkFlow = 0;\n        }\n    }\n\n    /**\n     * Calculates the max flow of the edge.\n     * @param factor Weather Adjustment Factor\n     */\n    public calcMaxFlow(factor: number): void {\n        const maxFlow = this.getKjam() * this.freeFlowVelocity;\n        this.maxFlow = round(maxFlow * factor, 2);\n    }\n\n    /**\n     * Gets the variance of measurement error of link flow.\n     */\n    public getVariance(): number {\n        return this.density > 0 ? round(1 / this.density, 2) : 1;\n    }\n\n    public getKjam(): number {\n        return round(1 / uiConfig.sp, 2);\n    }\n\n    protected getCapacity(timeInterval: number): number {\n        return this.maxFlow * timeInterval;\n    }\n\n    protected draw(color: string, zIndex: number = 10): void {\n        this.drawingOptions.polyline.set('strokeColor', color);\n        this.drawingOptions.polyline.set('zIndex', zIndex);\n        this.drawingOptions.marker.set('visible', true);\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    protected nodes: Node[] = [];\n\n    protected edges: Edge[] = [];\n\n    protected relations: Relation[] = [];\n\n    /**\n     * Paths for each O/D pair [pairs,paths,edges].\n     */\n    protected shortestPaths: Edge[][][] = [];\n\n    protected incidenceMatrix: boolean[][][] = [];\n\n    protected assignmentMatrix: number[][][] = [];\n\n    private heap: Heap;\n\n    /**\n     * Shortest paths drawing options.\n     */\n    private drawingOptions: {\n        polylines?: google.maps.Polyline[][];\n    } = {};\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public getEdge(edgeId: number): Edge {\n        return this.edges.find((edge: Edge) => edge.edgeId == edgeId);\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Key:oneway\n     * @param edgeId Id of the edge\n     */\n    public isOneway(edgeId: number): boolean {\n        return !!this.getEdge(edgeId).tags.find(tag => tag.key == 'oneway' && tag.value != 'no') ||\n            this.isRoundabout(edgeId);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Tag:junction%3Droundabout\n     * @param edgeId Id of the edge\n     */\n    public isRoundabout(edgeId: number): boolean {\n        return this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'roundabout') ||\n            this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'circular') ?\n            true : false;\n    }\n\n    public getOdNode(label: string): Node {\n        return this.nodes.find((node: Node) => node.label == label);\n    }\n\n    public getOdNodes(): Node[] {\n        return this.nodes.filter((node: Node) => node.label);\n    }\n\n    /**\n     * Calculates the set of minimum paths.\n     * @param odPairs The O/D pairs\n     */\n    public calcShortestPaths(odPairs: OdPair[]): Observable {\n        try {\n            for (let i = 0; i  edge.label);\n    }\n\n    /**\n     * Calculates the incidence matrix of paths for O/D pairs.\n     */\n    public calcIncidenceMatrix(): Observable {\n        const edges = this.getPathsEdges();\n        for (let z = 0; z  value.edgeId == edges[m].edgeId)) {\n                        // The path crosses the edge.\n                        this.incidenceMatrix[z][n][m] = true;\n                    } else {\n                        // The path does not cross the edge.\n                        this.incidenceMatrix[z][n][m] = false;\n                    }\n                }\n            }\n        }\n        return of(null);\n    }\n\n    public getIncidenceMatrix(): boolean[][][] {\n        return this.incidenceMatrix;\n    }\n\n    /**\n     * Calculates the assignment matrix.\n     * @param odPairs The O/D pairs\n     */\n    public calcAssignmentMatrix(odPairs: OdPair[]): Observable {\n        // Calculates the probabilities of shortest paths.\n        const shortestPathsProbabilities = this.calcShortestPathsProbabilities(odPairs);\n\n        // Assignment matrix.\n        for (let z = 0; z  {\n        const edges = this.getPathsEdges();\n        for (const edge of edges) {\n            edge.calcMaxFlow(factor);\n        }\n        return of(null);\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link distance or duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param o Source node\n     * @param d Destination node\n     * @param pathType Distance or duration\n     * @param k The number of shortest paths to compute\n     * @returns The set of shortest paths\n     */\n    private ksp(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Sets to zero the count property of the nodes.\n        this.resetCount();\n        // Instantiates the heap.\n        this.heap = new Heap();\n        // Inserts the path of origin into heap with cost 0.\n        this.heap.push({ pathId: 0, node: o, edges: [], cost: 0 });\n        // Walks the graph.\n        return this.walk(o, d, pathType, k);\n    }\n\n    /**\n     * Breadth First Search (BFS) algorithm for traversing and searching tree data\n     * explores the neighbor nodes first, before moving to the next level neighbors.\n     */\n    private walk(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Set of shortest paths from origin to destination.\n        const shortestPaths: Path[] = [];\n\n        let pathId = 1;\n        let node: Node;\n        while (this.heap.getPaths().length > 0 && d.count  edge.origin.nodeId == node.nodeId) ? false : true;\n    }\n\n    private resetCount(): void {\n        for (const node of this.nodes) {\n            node.count = 0;\n        }\n    }\n\n    /**\n     * Removes the alternative paths that differ only for two links.\n     * @param shortestPaths The shortest paths as created by the algorithm\n     */\n    private filterPaths(shortestPaths: Path[]): void {\n        if (shortestPaths.length > 1) {\n            let i = 0;\n            do {\n                const pathA = shortestPaths[i].edges;\n                const pathB = shortestPaths[i + 1].edges;\n                const sharedEdges = pathA.filter((edgeOfA: Edge) =>\n                    pathB.find((edgeOfB: Edge) =>\n                        edgeOfB.edgeId == edgeOfA.edgeId));\n                if (pathA.length - sharedEdges.length  value.edgeId == edge.edgeId)) {\n                        edges.push(edge);\n                        edge.label = 'E' + count++;\n                        if (!environment.testing) {\n                            edge.drawingOptions.infowindow.setContent('Edge: ' + edge.label);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Multinomial logit model.\n     * @param odPairs The O/D pairs\n     */\n    private calcShortestPathsProbabilities(odPairs: OdPair[]): number[][] {\n        // Gets the total cost of paths.\n        const pathCosts = this.calcPathCosts(odPairs);\n        const shortestPathsProbabilities: number[][] = [];\n        // Theta parameter adjustment.\n        const parameter = uiConfig.theta * 100;\n        // Calculates numerator.\n        const exps: number[][] = [];\n        for (let z = 0; z  {\n                return value > 0 ? Math.exp(-value / parameter) : 0;\n            });\n        }\n        // Calculates denominator.\n        const sumExps: number[] = [];\n        for (let z = 0; z  a + b, 0);\n            sumExps.push(sum);\n        }\n        // Probabilities.\n        for (let z = 0; z  0 ? round(exps[z][n] / sumExps[z], 3) : 0;\n                shortestPathsProbabilities[z].push(p);\n            }\n        }\n        return shortestPathsProbabilities;\n    }\n\n    private calcPathCosts(odPairs: OdPair[]): number[][] {\n        const pathCosts: number[][] = [];\n        for (let z = 0; z \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TermsComponent.html":{"url":"components/TermsComponent.html","title":"component - TermsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TermsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/terms/terms.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-terms\n            \n\n            \n                styleUrls\n                terms.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./terms.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/terms/terms.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/terms/terms.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-terms',\n    templateUrl: './terms.component.html',\n    styleUrls: ['./terms.component.scss']\n})\nexport class TermsComponent implements OnInit {\n\n    constructor() { }\n\n    ngOnInit(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            Terms of service of STRADA\n        \n        \n            These Terms of service govern your use of the application\n                STRADA\n            \n            By using the app, you accept these Terms in full. If you disagree with these Terms or any part of these Terms,\n                you must not use the app.\n            \n            Privacy Policy of the app\n            \n                Privacy Policy\n            \n            License to use\n            The app is released under the MIT license.\n            External services\n            The app uses Google Maps APIs. By using the app, you are bound by Google's Terms of Service:\n                Google Terms of Service\n            \n        \n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Terms of service of STRADA                            These Terms of service govern your use of the application                STRADA                        By using the app, you accept these Terms in full. If you disagree with these Terms or any part of these Terms,                you must not use the app.                        Privacy Policy of the app                            Privacy Policy                        License to use            The app is released under the MIT license.            External services            The app uses Google Maps APIs. By using the app, you are bound by Google\\'s Terms of Service:                Google Terms of Service                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TermsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UiComponent.html":{"url":"components/UiComponent.html","title":"component - UiComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UiComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/ui.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                CanComponentDeactivate\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ui\n            \n\n            \n                styleUrls\n                ui.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ui.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                network\n                            \n                            \n                                numerical\n                            \n                            \n                                pending\n                            \n                            \n                                statistics\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canDeactivate\n                            \n                            \n                                exit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDialog\n                            \n                            \n                                openSnackBar\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, snackBar: MatSnackBar, dialog: MatDialog, cdr: ChangeDetectorRef, store: Store, scheduler: SchedulerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/ui.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        scheduler\n                                                  \n                                                        \n                                                                    SchedulerService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canDeactivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanDeactivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:83\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable | boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            exit\n                            \n                            \n                        \n                    \n                \n                \n                    \nexit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:102\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenDialog(data: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:114\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openSnackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenSnackBar(message: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:106\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:93\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            network\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        network:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numerical\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        numerical:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pending\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pending:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            statistics\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        statistics:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy, ViewEncapsulation, ChangeDetectorRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatSnackBar, MatDialog } from '@angular/material';\nimport { Subscription, Observable, of } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { CanComponentDeactivate } from '../shared/can-deactivate-guard.service';\nimport { SchedulerService } from './wizard/scheduler.service';\nimport * as fromUi from './models/reducers';\n\nimport { MessageArchivedComponent } from '../shared/message-archived.component';\nimport { InfoDialogComponent } from '../shared/info-dialog.component';\n\n@Component({\n    selector: 'app-ui',\n    templateUrl: './ui.component.html',\n    styleUrls: ['./ui.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class UiComponent implements OnInit, OnDestroy, CanComponentDeactivate {\n\n    pending: boolean = false;\n\n    network: boolean = true;\n\n    numerical: boolean = false;\n\n    statistics: boolean = false;\n\n    subscriptions: Subscription[] = [];\n\n    constructor(\n        private router: Router,\n        private snackBar: MatSnackBar,\n        private dialog: MatDialog,\n        private cdr: ChangeDetectorRef,\n        private store: Store,\n        private scheduler: SchedulerService\n    ) { }\n\n    ngOnInit(): void {\n        // Pending state.\n        this.subscriptions.push(this.store.pipe(select(fromUi.pending)).subscribe((pending: boolean) => {\n            this.pending = pending;\n        }));\n        // Error state.\n        this.subscriptions.push(this.store.pipe(select(fromUi.error)).subscribe((error: string) => {\n            if (error) {\n                this.openSnackBar(error);\n            }\n        }));\n        // Panels.\n        this.subscriptions.push(this.store.pipe(select(fromUi.currentStep)).subscribe((currentStep: number) => {\n            switch (currentStep) {\n                case 0:\n                    this.network = true;\n                    this.numerical = false;\n                    this.statistics = false;\n                    this.cdr.detectChanges();\n                    break;\n                case 4:\n                    this.numerical = true;\n                    this.statistics = false;\n                    this.cdr.detectChanges();\n                    break;\n                case 5:\n                    this.numerical = true;\n                    this.statistics = true;\n                    this.cdr.detectChanges();\n                    break;\n            }\n        }));\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach((subscription: Subscription) => {\n            if (subscription) { subscription.unsubscribe(); }\n        });\n    }\n\n    canDeactivate(): Observable | boolean {\n        return this.openDialog('Are you sure you want to exit the simulation?').pipe(\n            tap((dialogResult: boolean) => {\n                if (dialogResult) {\n                    this.scheduler.reset();\n                }\n            })\n        );\n    }\n\n    reset(): void {\n        this.openDialog('Are you sure you want to reset the simulation?').subscribe(\n            (dialogResult: boolean) => {\n                if (dialogResult) {\n                    this.scheduler.reset();\n                }\n            });\n    }\n\n    exit(): void {\n        this.router.navigate(['/home']);\n    }\n\n    openSnackBar(message: string): void {\n        this.snackBar.openFromComponent(MessageArchivedComponent, {\n            data: message,\n            duration: 5000,\n            panelClass: ['error-snackbar']\n        });\n    }\n\n    openDialog(data: string): Observable {\n        const dialogRef = this.dialog.open(InfoDialogComponent, {\n            width: '250px',\n            data: data,\n            hasBackdrop: true,\n            panelClass: 'info-dialog'\n        });\n\n        return dialogRef.afterClosed();\n    }\n\n}\n\n    \n\n    \n        \n    \n    \n    \n        {{ pending }}\n    \n\n\n\n    \n        \n            \n        \n        \n            \n                \n                    \n                        \n                            Network\n                        \n                    \n                    \n                \n                \n                    \n                        \n                            Numerical\n                        \n                    \n                    \n                \n                \n                    \n                        \n                            Statistics\n                        \n                    \n                    \n                \n            \n        \n    \n    \n        \n        \n            Reset\n            Exit\n        \n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ pending }}                                                                                                                                                Network                                                                                                                                                                        Numerical                                                                                                                                                                        Statistics                                                                                                                                        Reset            Exit            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UiComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiModule.html":{"url":"modules/UiModule.html","title":"module - UiModule","body":"\n                   \n\n\n\n\n  Modules\n  UiModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UiModule\n\n\n\ncluster_UiModule_declarations\n\n\n\ncluster_UiModule_imports\n\n\n\ncluster_UiModule_providers\n\n\n\n\nChangeOfConditionsComponent\n\nChangeOfConditionsComponent\n\n\n\nUiModule\n\nUiModule\n\nUiModule -->\n\nChangeOfConditionsComponent->UiModule\n\n\n\n\n\nChartsComponent\n\nChartsComponent\n\nUiModule -->\n\nChartsComponent->UiModule\n\n\n\n\n\nEstimateOfDemandComponent\n\nEstimateOfDemandComponent\n\nUiModule -->\n\nEstimateOfDemandComponent->UiModule\n\n\n\n\n\nGoogleMapComponent\n\nGoogleMapComponent\n\nUiModule -->\n\nGoogleMapComponent->UiModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nUiModule -->\n\nMapComponent->UiModule\n\n\n\n\n\nNumericComponent\n\nNumericComponent\n\nUiModule -->\n\nNumericComponent->UiModule\n\n\n\n\n\nSearchForTheAreaComponent\n\nSearchForTheAreaComponent\n\nUiModule -->\n\nSearchForTheAreaComponent->UiModule\n\n\n\n\n\nSelectionOfTheAreaComponent\n\nSelectionOfTheAreaComponent\n\nUiModule -->\n\nSelectionOfTheAreaComponent->UiModule\n\n\n\n\n\nSimulationComponent\n\nSimulationComponent\n\nUiModule -->\n\nSimulationComponent->UiModule\n\n\n\n\n\nStatisticsComponent\n\nStatisticsComponent\n\nUiModule -->\n\nStatisticsComponent->UiModule\n\n\n\n\n\nUiComponent\n\nUiComponent\n\nUiModule -->\n\nUiComponent->UiModule\n\n\n\n\n\nWeatherComponent\n\nWeatherComponent\n\nUiModule -->\n\nWeatherComponent->UiModule\n\n\n\n\n\nWizardComponent\n\nWizardComponent\n\nUiModule -->\n\nWizardComponent->UiModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nUiModule -->\n\nSharedModule->UiModule\n\n\n\n\n\nUiRoutingModule\n\nUiRoutingModule\n\nUiModule -->\n\nUiRoutingModule->UiModule\n\n\n\n\n\nMapService\n\nMapService\n\nUiModule -->\n\nMapService->UiModule\n\n\n\n\n\nSchedulerService\n\nSchedulerService\n\nUiModule -->\n\nSchedulerService->UiModule\n\n\n\n\n\nWizardService\n\nWizardService\n\nUiModule -->\n\nWizardService->UiModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/ui/ui.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ChangeOfConditionsComponent\n                            \n                            \n                                ChartsComponent\n                            \n                            \n                                EstimateOfDemandComponent\n                            \n                            \n                                GoogleMapComponent\n                            \n                            \n                                MapComponent\n                            \n                            \n                                NumericComponent\n                            \n                            \n                                SearchForTheAreaComponent\n                            \n                            \n                                SelectionOfTheAreaComponent\n                            \n                            \n                                SimulationComponent\n                            \n                            \n                                StatisticsComponent\n                            \n                            \n                                UiComponent\n                            \n                            \n                                WeatherComponent\n                            \n                            \n                                WizardComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     MapService\n                            \n                            \n                                     SchedulerService\n                            \n                            \n                                     WizardService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                            \n                                    UiRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { UiRoutingModule } from './ui-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { StoreModule } from \"@ngrx/store\";\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\n\nimport { UiComponent } from './ui.component';\nimport { WizardComponent } from './wizard/wizard.component';\nimport { SearchForTheAreaComponent } from './wizard/search-for-the-area/search-for-the-area.component';\nimport { SelectionOfTheAreaComponent } from './wizard/selection-of-the-area/selection-of-the-area.component';\nimport { EstimateOfDemandComponent } from './wizard/estimate-of-demand/estimate-of-demand.component';\nimport { ChangeOfConditionsComponent } from './wizard/change-of-conditions/change-of-conditions.component';\nimport { SimulationComponent } from './wizard/simulation/simulation.component';\nimport { StatisticsComponent } from './wizard/statistics/statistics.component';\nimport { MapComponent } from './map/map.component';\nimport { GoogleMapComponent } from './map/google-map.component';\nimport { WeatherComponent } from './weather/weather.component';\nimport { NumericComponent } from './numeric/numeric.component';\nimport { ChartsComponent } from './charts/charts.component';\n\nimport { WizardService } from './wizard/wizard.service';\nimport { SchedulerService } from './wizard/scheduler.service';\nimport { MapService } from './map/map.service';\nimport { reducers } from './models/reducers';\n\n@NgModule({\n    imports: [\n        UiRoutingModule,\n        SharedModule,\n        StoreModule.forFeature('ui', reducers),\n        OwlDateTimeModule,\n        OwlNativeDateTimeModule\n    ],\n    declarations: [\n        UiComponent,\n        WizardComponent,\n        SearchForTheAreaComponent,\n        SelectionOfTheAreaComponent,\n        EstimateOfDemandComponent,\n        ChangeOfConditionsComponent,\n        SimulationComponent,\n        StatisticsComponent,\n        MapComponent,\n        GoogleMapComponent,\n        WeatherComponent,\n        NumericComponent,\n        ChartsComponent\n    ],\n    providers: [\n        WizardService,\n        SchedulerService,\n        MapService\n    ]\n})\nexport class UiModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiRoutingModule.html":{"url":"modules/UiRoutingModule.html","title":"module - UiRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  UiRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/ui/ui-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { CanDeactivateGuard } from '../shared/can-deactivate-guard.service';\n\nimport { UiComponent } from './ui.component';\n\n@NgModule({\n    imports: [\n        RouterModule.forChild([\n            { path: '', component: UiComponent, pathMatch: 'full', canDeactivate: [CanDeactivateGuard] }\n        ])\n    ],\n    exports: [RouterModule]\n})\nexport class UiRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UiState.html":{"url":"interfaces/UiState.html","title":"interface - UiState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UiState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/reducers.ts\n        \n\n            \n                Description\n            \n            \n                User interface state management.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        map\n                                \n                                \n                                        wizard\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        map\n                                    \n                                \n                                \n                                    \n                                        map:     fromMap.MapState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromMap.MapState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wizard\n                                    \n                                \n                                \n                                    \n                                        wizard:     fromWizard.WizardState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromWizard.WizardState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, createFeatureSelector, createSelector, MemoizedSelector } from \"@ngrx/store\";\n\nimport * as fromWizard from './reducers/wizard.reducer';\nimport * as fromMap from './reducers/map.reducer';\nimport { Step, Map } from \"./ui-state\";\n\n/**\n * User interface state management.\n */\nexport interface UiState {\n\n    wizard: fromWizard.WizardState;\n    map: fromMap.MapState;\n\n}\n\nexport const reducers: ActionReducerMap = {\n    wizard: fromWizard.wizardReducer,\n    map: fromMap.mapReducer\n};\n\nexport const featureUiState: MemoizedSelector = createFeatureSelector('ui');\n\n/**\n * Exports the wizard state.\n */\nexport const wizardState: MemoizedSelector = createSelector(\n    featureUiState,\n    (state: UiState) => state.wizard\n);\n\n/**\n * Exports the steps state.\n */\nexport const steps: MemoizedSelector = createSelector(\n    wizardState,\n    fromWizard.getSteps\n);\n\n/**\n * Exports the current step state.\n */\nexport const currentStep: MemoizedSelector = createSelector(\n    wizardState,\n    fromWizard.getCurrentStep\n);\n\n/**\n * Exports the error state.\n */\nexport const error: MemoizedSelector = createSelector(\n    wizardState,\n    fromWizard.getError\n);\n\n/**\n * Exports the pending state.\n */\nexport const pending: MemoizedSelector = createSelector(\n    wizardState,\n    fromWizard.getPending\n);\n\n/**\n * Exports the map state.\n */\nexport const mapState: MemoizedSelector = createSelector(\n    featureUiState,\n    (state: UiState) => state.map\n);\n\nexport const map: MemoizedSelector = createSelector(\n    mapState,\n    fromMap.getMap\n);\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherComponent.html":{"url":"components/WeatherComponent.html","title":"component - WeatherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/weather/weather.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ui-weather\n            \n\n            \n                styleUrls\n                weather.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                icon\n                            \n                            \n                                iconContainer\n                            \n                            \n                                time\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getIcon\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                resetConditions\n                            \n                            \n                                sendActions\n                            \n                            \n                                setConditions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, renderer: s/end.html\">Renderer2, store: Store, weather: WeatherService, network: NetworkService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/weather/weather.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        weather\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIcon(code: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:89\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        code\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     HTMLImageElement\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetConditions\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetConditions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setConditions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetConditions(weather: WeatherConditions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        weather\n                                                        \n                                                                    WeatherConditions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        description:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '-'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icon:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iconContainer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iconContainer:     HTMLElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            time\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        time:     any | string\n\n                    \n                \n                    \n                        \n                            Type :     any | string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, ElementRef, Renderer2 } from '@angular/core';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { WeatherService } from '../../network/weather/weather.service';\nimport { NetworkService } from '../../network/network.service';\nimport * as fromUi from '../models/reducers';\nimport { WeatherConditions } from '../../network/weather/weather';\nimport { appConfig } from '../../app-config';\n\nimport { BaseComponent } from '../models/base.component';\n\n@Component({\n    selector: 'ui-weather',\n    templateUrl: './weather.component.html',\n    styleUrls: ['./weather.component.scss']\n})\nexport class WeatherComponent extends BaseComponent implements OnInit, AfterViewInit {\n\n    description: string = '-';\n\n    iconContainer: HTMLElement;\n\n    icon: any;\n\n    time: any | string = '';\n\n    constructor(\n        private elementRef: ElementRef,\n        private renderer: Renderer2,\n        private store: Store,\n        private weather: WeatherService,\n        private network: NetworkService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    ngAfterViewInit(): void {\n        this.iconContainer = this.elementRef.nativeElement.querySelector('#iconContainer');\n    }\n\n    valueChanges(): void {\n        //\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.currentStep)).subscribe((currentStep: number) => {\n            const weatherConditions = this.weather.getWeatherConditions();\n            switch (currentStep) {\n                case 0:\n                    this.resetConditions();\n                    break;\n                case 3:\n                    this.setConditions(weatherConditions);\n                    break;\n                case 4:\n                    this.resetConditions();\n                    this.setConditions(weatherConditions);\n                    break;\n            }\n        }));\n    }\n\n    sendActions(): void {\n        //\n    }\n\n    setConditions(weather: WeatherConditions): void {\n        this.description = weather.description;\n        this.icon = this.getIcon(weather.icon);\n        this.renderer.appendChild(this.iconContainer, this.icon);\n        this.time = this.network.getTimeString();\n    }\n\n    resetConditions(): void {\n        this.description = '-';\n        if (this.icon) {\n            this.renderer.removeChild(this.iconContainer, this.icon);\n            this.icon = null;\n            this.time = '';\n        }\n    }\n\n    getIcon(code: string): HTMLImageElement {\n        const icon = new Image();\n        if (!!code) {\n            icon.src = appConfig.apis.openWeatherMap.iconUrl + '/' + code + '.png';\n        }\n        return icon;\n    }\n\n}\n\n    \n\n    \n        \n    \n        Weather {{ description | uppercase }}\n        \n        {{ time }}\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Weather {{ description | uppercase }}                {{ time }}    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WeatherConditions.html":{"url":"interfaces/WeatherConditions.html","title":"interface - WeatherConditions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WeatherConditions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/weather/weather.ts\n        \n\n            \n                Description\n            \n            \n                Weather conditions data.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                            Optional\n                                        rainIntensity\n                                \n                                \n                                            Optional\n                                        snowIntensity\n                                \n                                \n                                            Optional\n                                        visibility\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The code of the icon.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rainIntensity\n                                    \n                                \n                                \n                                    \n                                        rainIntensity:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Millimeters.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        snowIntensity\n                                    \n                                \n                                \n                                    \n                                        snowIntensity:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Millimeters.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visibility\n                                    \n                                \n                                \n                                    \n                                        visibility:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Meters.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface WeatherConditions {\n\n    description: string;\n    /**\n     * The code of the icon.\n     */\n    icon?: string;\n    /**\n     * Meters.\n     */\n    visibility?: number;\n    /**\n     * Millimeters.\n     */\n    rainIntensity?: number;\n    /**\n     * Millimeters.\n     */\n    snowIntensity?: number;\n\n}\n\nexport enum WeatherDescription {\n    clearSky = 'clear sky',\n    fewClouds = 'few clouds',\n    scatteredClouds = 'scattered clouds',\n    brokenClouds = 'broken clouds',\n    showerRain = 'shower rain',\n    rain = 'rain',\n    thunderstorm = 'thunderstorm',\n    snow = 'snow',\n    mist = 'mist',\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WeatherModule.html":{"url":"modules/WeatherModule.html","title":"module - WeatherModule","body":"\n                   \n\n\n\n\n  Modules\n  WeatherModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_providers\n\n\n\n\nWeatherService\n\nWeatherService\n\n\n\nWeatherModule\n\nWeatherModule\n\nWeatherModule -->\n\nWeatherService->WeatherModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/network/weather/weather.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     WeatherService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { WeatherService } from './weather.service';\n\n@NgModule({\n    imports: [],\n    declarations: [],\n    providers: [WeatherService]\n})\nexport class WeatherModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherService.html":{"url":"injectables/WeatherService.html","title":"injectable - WeatherService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  WeatherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/weather/weather.service.ts\n        \n\n            \n                Description\n            \n            \n                Gets the weather data from the Weather or Forecast resources\nand provides reduction factors for graph values based on weather conditions.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                weatherConditions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addWeatherConditions\n                            \n                            \n                                    Public\n                                changeWeather\n                            \n                            \n                                    Public\n                                getFactors\n                            \n                            \n                                    Public\n                                getWeatherConditions\n                            \n                            \n                                    Public\n                                getWeatherData\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Private\n                                toInches\n                            \n                            \n                                    Public\n                                updateWeatherData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, location: LocationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/weather/weather.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    LocationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            addWeatherConditions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addWeatherConditions(data: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:110\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            changeWeather\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        changeWeather(weather: WeatherConditions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:81\n                            \n                        \n\n\n                \n                    \n                            Changes the current weather conditions.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weather\n                                                        \n                                                                    WeatherConditions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The weather conditions\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFactors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFactors()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:95\n                            \n                        \n\n\n                \n                    \n                            Calculates Weather Adjustment Factors.\n\n\n                            \n                            \n                            \n                                Returns :     number[]\n\n                            \n                                \n                                    The factor for max flow parameter\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getWeatherConditions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getWeatherConditions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     WeatherConditions\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getWeatherData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getWeatherData(time?: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:34\n                            \n                        \n\n\n                \n                    \n                            Gets weather data from the Weather resource. The Forecast resource is called only if the optional parameter 'time' is evaluated.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        time\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                Optional parameter for forecasting data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            toInches\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toInches(value: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:120\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updateWeatherData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateWeatherData(data: any, time?: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:54\n                            \n                        \n\n\n                \n                    \n                            Updates weather conditions with the data obtained from OpenWeatherMap.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Weather data\n\n                                                        \n                                                \n                                                \n                                                        time\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                Optional parameter for forecasting data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            weatherConditions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherConditions:     WeatherConditions\n\n                    \n                \n                    \n                        \n                            Type :     WeatherConditions\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable, throwError, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { LocationService } from '../../location/location.service';\nimport { WeatherConditions } from './weather';\nimport { round } from '../../utils';\nimport { appConfig } from '../../app-config';\nimport { uiConfig } from '../../ui/ui-config';\n\n/**\n * Gets the weather data from the Weather or Forecast resources\n * and provides reduction factors for graph values based on weather conditions.\n */\n@Injectable() export class WeatherService {\n\n    private weatherConditions: WeatherConditions;\n\n    constructor(private http: HttpClient, private location: LocationService) { }\n\n    public reset(): void {\n        this.weatherConditions = null;\n    }\n\n    public getWeatherConditions(): WeatherConditions {\n        return this.weatherConditions;\n    }\n\n    /**\n     * Gets weather data from the Weather resource. The Forecast resource is called only if the optional parameter 'time' is evaluated.\n     * @param time Optional parameter for forecasting data\n     */\n    public getWeatherData(time?: Date): Observable {\n        const url: string = time ? appConfig.apis.openWeatherMap.forecastUrl : appConfig.apis.openWeatherMap.weatherUrl;\n        const options = {\n            params: new HttpParams()\n                .set('lat', this.location.getLatLng().lat.toString())\n                .set('lon', this.location.getLatLng().lng.toString())\n                .set('appid', appConfig.apis.openWeatherMap.apiKey)\n        };\n\n        return this.http.get(url, options).pipe(\n            map((response: any) => response),\n            catchError((error: any) => throwError('getWeatherData'))\n        );\n    }\n\n    /**\n     * Updates weather conditions with the data obtained from OpenWeatherMap.\n     * @param data Weather data\n     * @param time Optional parameter for forecasting data\n     */\n    public updateWeatherData(data: any, time?: Date): Observable {\n        if (time != null && data.list.length > 0) {\n            const timezoneOffset = time.getTimezoneOffset() * 60 * 1000; // Timezone offset in milliseconds\n            const utcTime = time.getTime() + timezoneOffset;\n\n            let preDt: number = data.list[0].dt * 1000; // Converts Unix UTC in milliseconds\n            let forecast: any = data.list[0];\n            for (let i = 1; i = utcTime) {\n                    forecast = nextDt - utcTime \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WizardComponent.html":{"url":"components/WizardComponent.html","title":"component - WizardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WizardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/wizard.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                ui-wizard\n            \n\n            \n                styleUrls\n                wizard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./wizard.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                stepper\n                            \n                            \n                                wizardForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                exit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                stepClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, router: Router, wizard: WizardService, scheduler: SchedulerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/wizard.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        scheduler\n                                                  \n                                                        \n                                                                    SchedulerService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            exit\n                            \n                            \n                        \n                    \n                \n                \n                    \nexit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.component.ts:119\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.component.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stepClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nstepClick(event: StepperSelectionEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.component.ts:92\n                            \n                        \n\n\n                \n                    \n                            Updates current step and step data.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    StepperSelectionEvent\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                SelectionChange stepper event.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stepper\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stepper:     MatStepper\n\n                    \n                \n                    \n                        \n                            Type :     MatStepper\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wizardForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        wizardForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        formSteps\n                    \n                \n\n                \n                    \n                        getformSteps()\n                    \n                \n                            \n                                \n                                    Defined in src/app/ui/wizard/wizard.component.ts:24\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, FormArray, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MatStepper } from '@angular/material';\nimport { StepperSelectionEvent } from '@angular/cdk/stepper';\n\nimport { WizardService } from './wizard.service';\nimport { SchedulerService } from './scheduler.service';\nimport { pairsValidator } from '../directives/pairs.directive';\nimport { uiConfig } from '../ui-config';\n\n@Component({\n    selector: 'ui-wizard',\n    templateUrl: './wizard.component.html',\n    styleUrls: ['./wizard.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class WizardComponent implements OnInit {\n\n    @ViewChild('stepper') stepper: MatStepper;\n\n    wizardForm: FormGroup;\n\n    get formSteps(): FormArray {\n        return this.wizardForm.get('formSteps') as FormArray;\n    }\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private router: Router,\n        private wizard: WizardService,\n        private scheduler: SchedulerService\n    ) { }\n\n    ngOnInit(): void {\n        // Creates form model.\n        this.wizardForm = this.formBuilder.group({\n            formSteps: this.formBuilder.array([\n                this.formBuilder.group({\n                    address: [''],\n                    center: [null, [Validators.required]]\n                }),\n                this.formBuilder.group({\n                    bounds: [null, [Validators.required]],\n                    time: [null]\n                }),\n                this.formBuilder.group({\n                    odPairs: this.formBuilder.array([], pairsValidator())\n                }),\n                this.formBuilder.group({\n                    odPairs: this.formBuilder.array([]),\n                    weatherConditions: this.formBuilder.group({\n                        description: [null],\n                        icon: [null],\n                        visibility: [\n                            null,\n                            [Validators.required,\n                            Validators.min(0),\n                            Validators.max(uiConfig.visibility.max),\n                            Validators.pattern('^[0-9]*$')]\n                        ],\n                        rainIntensity: [\n                            null,\n                            [Validators.required,\n                            Validators.min(0),\n                            Validators.max(uiConfig.rainIntensity.max),\n                            Validators.pattern('^[0-9]*$')]\n                        ],\n                        snowIntensity: [\n                            null,\n                            [Validators.required,\n                            Validators.min(0),\n                            Validators.max(uiConfig.snowIntensity.max),\n                            Validators.pattern('^[0-9]*$')]\n                        ]\n                    })\n                }),\n                this.formBuilder.group({\n                    endSimulation: [false, [Validators.requiredTrue]]\n                }),\n                this.formBuilder.group({})\n            ])\n        }, { updateOn: 'blur' });\n\n        this.wizard.stepper = this.stepper;\n    }\n\n    /**\n     * Updates current step and step data.\n     * @param event SelectionChange stepper event.\n     */\n    stepClick(event: StepperSelectionEvent): void {\n        const index: number = event.previouslySelectedIndex;\n        const nextIndex: number = event.selectedIndex;\n        const data = this.wizardForm.get('formSteps').get([index]).value;\n\n        if (nextIndex > index) {\n            this.stepper.selected.completed = true;\n            switch (nextIndex) {\n                case 2:\n                    this.scheduler.scheduleNetwork(data, index, nextIndex);\n                    break;\n                case 3:\n                    this.scheduler.scheduleDemand(data, index, nextIndex);\n                    break;\n                case 4:\n                    this.scheduler.scheduleSimulation(data, index, nextIndex);\n                    break;\n                default:\n                    this.wizard.goOn(\n                        data,\n                        index,\n                        nextIndex\n                    );\n            }\n        }\n    }\n\n    exit(): void {\n        if (this.stepper.selectedIndex == 5) {\n            this.router.navigate(['/home']);\n        }\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    \n                        Search for the area\n                    \n                    \n                \n                \n                    \n                        Selection of the area\n                    \n                    \n                \n                \n                    \n                        Estimate of demand\n                    \n                    \n                \n                \n                    \n                        Change of conditions\n                    \n                    \n                \n                \n                    \n                        Simulation\n                    \n                    \n                \n                \n                    \n                        Statistics\n                    \n                    \n                \n            \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    Search for the area                                                                                                                    Selection of the area                                                                                                                    Estimate of demand                                                                                                                    Change of conditions                                                                                                                    Simulation                                                                                                                    Statistics                                                                                '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WizardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WizardService.html":{"url":"injectables/WizardService.html","title":"injectable - WizardService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  WizardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/wizard/wizard.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                state\n                            \n                            \n                                    Public\n                                stepper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                goOn\n                            \n                            \n                                    Public\n                                putInError\n                            \n                            \n                                    Public\n                                putOnHold\n                            \n                            \n                                    Public\n                                removeFromError\n                            \n                            \n                                    Public\n                                removeFromWaiting\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Public\n                                updateStep\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/wizard.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            goOn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        goOn(data: any, index: number, nextIndex: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        nextIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            putInError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        putInError(error: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            putOnHold\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        putOnHold(message?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            removeFromError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeFromError()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            removeFromWaiting\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeFromWaiting()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updateStep\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateStep(data: any, index: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            state\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        state:     WizardState\n\n                    \n                \n                    \n                        \n                            Type :     WizardState\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stepper\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stepper:     MatStepper\n\n                    \n                \n                    \n                        \n                            Type :     MatStepper\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { MatStepper } from \"@angular/material\";\n\nimport { Store, select } from '@ngrx/store';\n\nimport * as fromUi from '../models/reducers';\nimport { WizardActionTypes } from '../models/actions/wizard.actions';\nimport { WizardState } from \"../models/reducers/wizard.reducer\";\n\n@Injectable() export class WizardService {\n\n    public state: WizardState;\n\n    public stepper: MatStepper;\n\n    constructor(private store: Store) {\n        this.store.pipe(select(fromUi.wizardState)).subscribe((state: WizardState) => {\n            this.state = state;\n        });\n    }\n\n    public reset(): void {\n        // Stepper.\n        this.stepper.reset();\n        // UI state.\n        this.store.dispatch({\n            type: WizardActionTypes.Reset\n        });\n    }\n\n    public updateStep(data: any, index: number): void {\n        this.store.dispatch({\n            type: WizardActionTypes.StepChanged,\n            payload: { step: { data: data }, index: index }\n        });\n    }\n\n    public putInError(error: string): void {\n        this.store.dispatch({\n            type: WizardActionTypes.StepError,\n            payload: error\n        });\n    }\n\n    public putOnHold(message?: string): void {\n        this.store.dispatch({\n            type: WizardActionTypes.StepPending,\n            payload: message || true\n        });\n    }\n\n    public removeFromError(): void {\n        this.store.dispatch({\n            type: WizardActionTypes.StepError,\n            payload: null\n        });\n    }\n\n    public removeFromWaiting(): void {\n        this.store.dispatch({\n            type: WizardActionTypes.StepPending,\n            payload: false\n        });\n    }\n\n    public goOn(data: any, index: number, nextIndex: number): void {\n        this.store.dispatch({\n            type: WizardActionTypes.GoOn,\n            payload: { step: { data: data }, index: index, nextIndex: nextIndex }\n        });\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WizardState.html":{"url":"interfaces/WizardState.html","title":"interface - WizardState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WizardState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/reducers/wizard.reducer.ts\n        \n\n            \n                Description\n            \n            \n                Wizard state management.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        currentStep\n                                \n                                \n                                        error\n                                \n                                \n                                        pending\n                                \n                                \n                                        steps\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentStep\n                                    \n                                \n                                \n                                    \n                                        currentStep:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pending\n                                    \n                                \n                                \n                                    \n                                        pending:     string | boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        steps\n                                    \n                                \n                                \n                                    \n                                        steps:     Step[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Step[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import deepClone from 'mout/lang/deepClone';\n\nimport { Step, STEPS } from \"../ui-state\";\nimport { WizardActions, WizardActionTypes } from '../actions/wizard.actions';\n\n/**\n * Wizard state management.\n */\nexport interface WizardState {\n\n    steps: Step[];\n    currentStep: number;\n    error: string | null;\n    pending: string | boolean;\n\n}\n\nexport const initialWizardState: WizardState = {\n    steps: STEPS,\n    currentStep: 0,\n    error: null,\n    pending: false\n};\n\n/**\n * ngrx: wizard Reducer.\n */\nexport function wizardReducer(state: WizardState = deepClone(initialWizardState), action: WizardActions): WizardState {\n    switch (action.type) {\n        case WizardActionTypes.StepChanged: {\n            // Updates the step at the provided index.\n            state.steps[action.payload.index] = action.payload.step;\n            return {\n                ...state,\n                steps: deepClone(state.steps),\n                error: null,\n                pending: false\n            };\n        }\n        case WizardActionTypes.StepError: {\n            return {\n                ...state,\n                error: action.payload,\n                pending: false\n            };\n        }\n        case WizardActionTypes.StepPending: {\n            return {\n                ...state,\n                error: null,\n                pending: action.payload\n            };\n        }\n        case WizardActionTypes.GoOn: {\n            // Updates the step at the provided index.\n            state.steps[action.payload.index] = action.payload.step;\n            return {\n                ...state,\n                steps: deepClone(state.steps),\n                currentStep: action.payload.nextIndex\n            };\n        }\n        case WizardActionTypes.Reset: {\n            return deepClone(initialWizardState);\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\nexport const getSteps: (state: WizardState) => Step[] = (state: WizardState) => state.steps;\n\nexport const getCurrentStep: (state: WizardState) => number = (state: WizardState) => state.currentStep;\n\nexport const getError: (state: WizardState) => string = (state: WizardState) => state.error;\n\nexport const getPending: (state: WizardState) => string | boolean = (state: WizardState) => state.pending;\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 6.1.1\n        \n            @angular/common : 6.1.1\n        \n            @angular/compiler : 6.1.1\n        \n            @angular/core : 6.1.1\n        \n            @angular/forms : 6.1.1\n        \n            @angular/http : 6.1.1\n        \n            @angular/platform-browser : 6.1.1\n        \n            @angular/platform-browser-dynamic : 6.1.1\n        \n            @angular/router : 6.1.1\n        \n            @angular/material : 6.4.3\n        \n            @angular/cdk : 6.4.3\n        \n            @angular/flex-layout : 6.0.0-beta.17\n        \n            @ngrx/store : 6.1.0\n        \n            @turf/area : 6.0.1\n        \n            @turf/helpers : 6.1.4\n        \n            @turf/invariant : 6.1.2\n        \n            @turf/bearing : 6.0.1\n        \n            @turf/distance : 6.0.1\n        \n            @turf/transform-translate : 5.1.5\n        \n            @turf/centroid : 6.0.2\n        \n            @turf/center : 6.0.1\n        \n            ng-pick-datetime : 6.0.15\n        \n            mout : 1.1.0\n        \n            everpolate : 0.0.3\n        \n            chart.js : 2.7.2\n        \n            chartjs-plugin-annotation : 0.5.7\n        \n            web-animations-js : 2.3.1\n        \n            hammerjs : 2.0.8\n        \n            animejs : 2.2.0\n        \n            qs : 6.5.2\n        \n            core-js : 2.5.7\n        \n            rxjs : 6.2.2\n        \n            zone.js : 0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Control   (src/.../clock.service.ts)\n                        \n                        \n                            MapActionTypes   (src/.../map.actions.ts)\n                        \n                        \n                            PathType   (src/.../graph.ts)\n                        \n                        \n                            SimulationActionTypes   (src/.../simulation.actions.ts)\n                        \n                        \n                            WeatherDescription   (src/.../weather.ts)\n                        \n                        \n                            WizardActionTypes   (src/.../wizard.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/simulation/clock.service.ts\n    \n        \n            \n                \n                    \n                        \n                        Control\n                    \n                \n                        \n                            \n                                 start\n                            \n                        \n                        \n                            \n                                Value: start\n                            \n                        \n                        \n                            \n                                 pause\n                            \n                        \n                        \n                            \n                                Value: pause\n                            \n                        \n                        \n                            \n                                 stop\n                            \n                        \n                        \n                            \n                                Value: stop\n                            \n                        \n                        \n                            \n                                 step\n                            \n                        \n                        \n                            \n                                Value: step\n                            \n                        \n                        \n                            \n                                 slow\n                            \n                        \n                        \n                            \n                                Value: slow\n                            \n                        \n                        \n                            \n                                 quick\n                            \n                        \n                        \n                            \n                                Value: quick\n                            \n                        \n            \n        \n\n    src/app/ui/models/actions/map.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        MapActionTypes\n                    \n                \n                    \n                        \n                            ngrx: map Actions.\n\n                        \n                    \n                        \n                            \n                                 MapChanged\n                            \n                        \n                        \n                            \n                                Value: [Map] Map Changed\n                            \n                        \n                        \n                            \n                                 Reset\n                            \n                        \n                        \n                            \n                                Value: [Map] Reset\n                            \n                        \n            \n        \n\n    src/app/network/graph.ts\n    \n        \n            \n                \n                    \n                        \n                        PathType\n                    \n                \n                        \n                            \n                                 distance\n                            \n                        \n                        \n                            \n                                Value: distance\n                            \n                        \n                        \n                            \n                                 duration\n                            \n                        \n                        \n                            \n                                Value: duration\n                            \n                        \n            \n        \n\n    src/app/simulation/models/actions/simulation.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        SimulationActionTypes\n                    \n                \n                    \n                        \n                            ngrx: simulation Actions.\n\n                        \n                    \n                        \n                            \n                                 SimulationChanged\n                            \n                        \n                        \n                            \n                                Value: [Simulation] Simulation Changed\n                            \n                        \n                        \n                            \n                                 SimulationEnded\n                            \n                        \n                        \n                            \n                                Value: [Simulation] Simulation Ended\n                            \n                        \n                        \n                            \n                                 PeriodsChanged\n                            \n                        \n                        \n                            \n                                Value: [Simulation] Periods Changed\n                            \n                        \n                        \n                            \n                                 Reset\n                            \n                        \n                        \n                            \n                                Value: [Simulation] Reset\n                            \n                        \n            \n        \n\n    src/app/network/weather/weather.ts\n    \n        \n            \n                \n                    \n                        \n                        WeatherDescription\n                    \n                \n                        \n                            \n                                 clearSky\n                            \n                        \n                        \n                            \n                                Value: clear sky\n                            \n                        \n                        \n                            \n                                 fewClouds\n                            \n                        \n                        \n                            \n                                Value: few clouds\n                            \n                        \n                        \n                            \n                                 scatteredClouds\n                            \n                        \n                        \n                            \n                                Value: scattered clouds\n                            \n                        \n                        \n                            \n                                 brokenClouds\n                            \n                        \n                        \n                            \n                                Value: broken clouds\n                            \n                        \n                        \n                            \n                                 showerRain\n                            \n                        \n                        \n                            \n                                Value: shower rain\n                            \n                        \n                        \n                            \n                                 rain\n                            \n                        \n                        \n                            \n                                Value: rain\n                            \n                        \n                        \n                            \n                                 thunderstorm\n                            \n                        \n                        \n                            \n                                Value: thunderstorm\n                            \n                        \n                        \n                            \n                                 snow\n                            \n                        \n                        \n                            \n                                Value: snow\n                            \n                        \n                        \n                            \n                                 mist\n                            \n                        \n                        \n                            \n                                Value: mist\n                            \n                        \n            \n        \n\n    src/app/ui/models/actions/wizard.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        WizardActionTypes\n                    \n                \n                    \n                        \n                            ngrx: wizard Actions.\n\n                        \n                    \n                        \n                            \n                                 StepChanged\n                            \n                        \n                        \n                            \n                                Value: [Wizard] Step Changed\n                            \n                        \n                        \n                            \n                                 StepError\n                            \n                        \n                        \n                            \n                                Value: [Wizard] Step Error\n                            \n                        \n                        \n                            \n                                 StepPending\n                            \n                        \n                        \n                            \n                                Value: [Wizard] Step Pending\n                            \n                        \n                        \n                            \n                                 GoOn\n                            \n                        \n                        \n                            \n                                Value: [Wizard] Go On\n                            \n                        \n                        \n                            \n                                 Reset\n                            \n                        \n                        \n                            \n                                Value: [Wizard] Reset\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            formatTimeFromMilliseconds   (src/.../utils.ts)\n                        \n                        \n                            formatTimeFromSeconds   (src/.../utils.ts)\n                        \n                        \n                            getScript   (src/.../utils.ts)\n                        \n                        \n                            loadScripts   (src/.../utils.ts)\n                        \n                        \n                            mapReducer   (src/.../map.reducer.ts)\n                        \n                        \n                            pairsValidator   (src/.../pairs.directive.ts)\n                        \n                        \n                            round   (src/.../utils.ts)\n                        \n                        \n                            simulationReducer   (src/.../simulation.reducer.ts)\n                        \n                        \n                            toSeconds   (src/.../utils.ts)\n                        \n                        \n                            wizardReducer   (src/.../wizard.reducer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/ui/utils.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            formatTimeFromMilliseconds\n                            \n                            \n                        \n                    \n                \n                \n                    \nformatTimeFromMilliseconds(ms: undefined)\n                    \n                \n\n\n\n\n                \n                    \n                            Format time to M:SS.mmm\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ms\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Milliseconds\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formatTimeFromSeconds\n                            \n                            \n                        \n                    \n                \n                \n                    \nformatTimeFromSeconds(s: undefined)\n                    \n                \n\n\n\n\n                \n                    \n                            Format time to M:SS\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        s\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Seconds\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toSeconds\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoSeconds(value: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/utils.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getScript\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetScript(src: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        src\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadScripts\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadScripts()\n                    \n                \n\n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            round\n                            \n                            \n                        \n                    \n                \n                \n                    \nround(value: undefined, decimals?: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        decimals\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/ui/models/reducers/map.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mapReducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nmapReducer(state: undefined, action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n                            ngrx: map Reducer.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/ui/directives/pairs.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            pairsValidator\n                            \n                            \n                        \n                    \n                \n                \n                    \npairsValidator()\n                    \n                \n\n\n\n\n            \n        \n\n    src/app/simulation/models/reducers/simulation.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            simulationReducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nsimulationReducer(state: undefined, action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n                            ngrx: simulation Reducer.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/ui/models/reducers/wizard.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            wizardReducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nwizardReducer(state: undefined, action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n                            ngrx: wizard Reducer.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSTRADA\n\n\nSTRADA (Simulation of TRAffic DAta) is an urban traffic web simulator that uses data in real time.\n\n\nProject developed for the dissertation of my bachelor's degree in computer engineering.\n\nDocumentation\nOfficial docs: STRADA documentation\nDevelopment\nRequirements\n\nNode.js and npm\nUpdate npm: npm install npm@latest -g\nAngular CLI: npm install -g @angular/cli\nFirebase\nCreate a Firebase project in the Firebase console\nFirebase CLI: npm install -g firebase-tools\nLogin: firebase login\n\n\nGoogle Maps \nGet your API keys: https://cloud.google.com/maps-platform/\nEnable Maps JavaScript API, Geocoding API and Directions API\n\n\nOpenWeatherMap\nGet your API key: https://openweathermap.org/\n\n\n\nPrerequisites\n\nUpdate .firebaserc file\nUpdate src/app/app-config.json file\nUpdate functions/src/functions-config.json file\n\nFirebase Functions\ncd functions\nnpm install\nnpm run serve:devApp\nnpm install\nnpm startTest\nnpm testLicense\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Roberto Simonetti\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DemandModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LocationModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NetworkModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SimulationModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WeatherModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_DemandModule\n\n\n\ncluster_DemandModule_providers\n\n\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_providers\n\n\n\ncluster_NetworkModule\n\n\n\ncluster_NetworkModule_imports\n\n\n\ncluster_NetworkModule_providers\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SimulationModule\n\n\n\ncluster_SimulationModule_providers\n\n\n\ncluster_UiModule\n\n\n\ncluster_UiModule_declarations\n\n\n\ncluster_UiModule_imports\n\n\n\ncluster_UiModule_providers\n\n\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_providers\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nPrivacyComponent\n\nPrivacyComponent\n\nAppModule -->\n\nPrivacyComponent->AppModule\n\n\n\n\n\nTermsComponent\n\nTermsComponent\n\nAppModule -->\n\nTermsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nDemandModule\n\nDemandModule\n\nAppModule -->\n\nDemandModule->AppModule\n\n\n\n\n\nLocationModule\n\nLocationModule\n\nAppModule -->\n\nLocationModule->AppModule\n\n\n\n\n\nNetworkModule\n\nNetworkModule\n\nAppModule -->\n\nNetworkModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nSharedModule->FooterComponent \n\n\n\n\n\nInfoDialogComponent \n\nInfoDialogComponent \n\nInfoDialogComponent  -->\n\nSharedModule->InfoDialogComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nMessageArchivedComponent \n\nMessageArchivedComponent \n\nMessageArchivedComponent  -->\n\nSharedModule->MessageArchivedComponent \n\n\n\n\n\nUiModule\n\nUiModule\n\nUiModule -->\n\nSharedModule->UiModule\n\n\n\n\n\nSimulationModule\n\nSimulationModule\n\nAppModule -->\n\nSimulationModule->AppModule\n\n\n\n\n\nDemandService\n\nDemandService\n\nDemandModule -->\n\nDemandService->DemandModule\n\n\n\n\n\nLocationService\n\nLocationService\n\nLocationModule -->\n\nLocationService->LocationModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nNetworkModule -->\n\nWeatherModule->NetworkModule\n\n\n\n\n\nNetworkService\n\nNetworkService\n\nNetworkModule -->\n\nNetworkService->NetworkModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nSharedModule -->\n\nFooterComponent->SharedModule\n\n\n\n\n\nInfoDialogComponent\n\nInfoDialogComponent\n\nSharedModule -->\n\nInfoDialogComponent->SharedModule\n\n\n\n\n\nMessageArchivedComponent\n\nMessageArchivedComponent\n\nSharedModule -->\n\nMessageArchivedComponent->SharedModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\nClockService\n\nClockService\n\nSimulationModule -->\n\nClockService->SimulationModule\n\n\n\n\n\nSimulationService\n\nSimulationService\n\nSimulationModule -->\n\nSimulationService->SimulationModule\n\n\n\n\n\nChangeOfConditionsComponent\n\nChangeOfConditionsComponent\n\nUiModule -->\n\nChangeOfConditionsComponent->UiModule\n\n\n\n\n\nChartsComponent\n\nChartsComponent\n\nUiModule -->\n\nChartsComponent->UiModule\n\n\n\n\n\nEstimateOfDemandComponent\n\nEstimateOfDemandComponent\n\nUiModule -->\n\nEstimateOfDemandComponent->UiModule\n\n\n\n\n\nGoogleMapComponent\n\nGoogleMapComponent\n\nUiModule -->\n\nGoogleMapComponent->UiModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nUiModule -->\n\nMapComponent->UiModule\n\n\n\n\n\nNumericComponent\n\nNumericComponent\n\nUiModule -->\n\nNumericComponent->UiModule\n\n\n\n\n\nSearchForTheAreaComponent\n\nSearchForTheAreaComponent\n\nUiModule -->\n\nSearchForTheAreaComponent->UiModule\n\n\n\n\n\nSelectionOfTheAreaComponent\n\nSelectionOfTheAreaComponent\n\nUiModule -->\n\nSelectionOfTheAreaComponent->UiModule\n\n\n\n\n\nSimulationComponent\n\nSimulationComponent\n\nUiModule -->\n\nSimulationComponent->UiModule\n\n\n\n\n\nStatisticsComponent\n\nStatisticsComponent\n\nUiModule -->\n\nStatisticsComponent->UiModule\n\n\n\n\n\nUiComponent\n\nUiComponent\n\nUiModule -->\n\nUiComponent->UiModule\n\n\n\n\n\nWeatherComponent\n\nWeatherComponent\n\nUiModule -->\n\nWeatherComponent->UiModule\n\n\n\n\n\nWizardComponent\n\nWizardComponent\n\nUiModule -->\n\nWizardComponent->UiModule\n\n\n\n\n\nUiRoutingModule\n\nUiRoutingModule\n\nUiModule -->\n\nUiRoutingModule->UiModule\n\n\n\n\n\nMapService\n\nMapService\n\nUiModule -->\n\nMapService->UiModule\n\n\n\n\n\nSchedulerService\n\nSchedulerService\n\nUiModule -->\n\nSchedulerService->UiModule\n\n\n\n\n\nWizardService\n\nWizardService\n\nUiModule -->\n\nWizardService->UiModule\n\n\n\n\n\nWeatherService\n\nWeatherService\n\nWeatherModule -->\n\nWeatherService->WeatherModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            11 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        21 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        10 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        23 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        17 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EnumValueType   (src/.../utils.ts)\n                        \n                        \n                            MapActions   (src/.../map.actions.ts)\n                        \n                        \n                            SimulationActions   (src/.../simulation.actions.ts)\n                        \n                        \n                            WizardActions   (src/.../wizard.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/ui/utils.ts\n    \n        \n            \n                \n                    \n                        \n                        EnumValueType\n                    \n                \n                \n                    \n                        EnumValueType:     string | number\n\n                    \n                \n            \n        \n\n    src/app/ui/models/actions/map.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        MapActions\n                    \n                \n                \n                    \n                        MapActions:     MapChanged | Reset\n\n                    \n                \n            \n        \n\n    src/app/simulation/models/actions/simulation.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        SimulationActions\n                    \n                \n                \n                    \n                        SimulationActions:     SimulationChanged | SimulationEnded | PeriodsChanged | Reset\n\n                    \n                \n            \n        \n\n    src/app/ui/models/actions/wizard.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        WizardActions\n                    \n                \n                \n                    \n                        WizardActions:     StepChanged | StepError | StepPending | GoOn | Reset\n\n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            busiestChartOptions   (src/.../charts-config.ts)\n                        \n                        \n                            busiestColor   (src/.../charts-config.ts)\n                        \n                        \n                            currentStep   (src/.../reducers.ts)\n                        \n                        \n                            end   (src/.../reducers.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.test.ts)\n                        \n                        \n                            error   (src/.../reducers.ts)\n                        \n                        \n                            featureSimulationState   (src/.../reducers.ts)\n                        \n                        \n                            featureUiState   (src/.../reducers.ts)\n                        \n                        \n                            getCurrentStep   (src/.../wizard.reducer.ts)\n                        \n                        \n                            getEnd   (src/.../simulation.reducer.ts)\n                        \n                        \n                            getError   (src/.../wizard.reducer.ts)\n                        \n                        \n                            getMap   (src/.../map.reducer.ts)\n                        \n                        \n                            getPending   (src/.../wizard.reducer.ts)\n                        \n                        \n                            getPeriods   (src/.../simulation.reducer.ts)\n                        \n                        \n                            getSimulation   (src/.../simulation.reducer.ts)\n                        \n                        \n                            getSteps   (src/.../wizard.reducer.ts)\n                        \n                        \n                            HOME_TRANSITION   (src/.../home.transition.ts)\n                        \n                        \n                            initialMapState   (src/.../map.reducer.ts)\n                        \n                        \n                            initialSimulationState   (src/.../simulation.reducer.ts)\n                        \n                        \n                            initialWizardState   (src/.../wizard.reducer.ts)\n                        \n                        \n                            map   (src/.../reducers.ts)\n                        \n                        \n                            mapState   (src/.../reducers.ts)\n                        \n                        \n                            mapStyle   (src/.../map.style.ts)\n                        \n                        \n                            materialModules   (src/.../material.module.ts)\n                        \n                        \n                            pending   (src/.../reducers.ts)\n                        \n                        \n                            periods   (src/.../reducers.ts)\n                        \n                        \n                            reducers   (src/.../reducers.ts)\n                        \n                        \n                            reducers   (src/.../reducers.ts)\n                        \n                        \n                            sharedModules   (src/.../shared.module.ts)\n                        \n                        \n                            simulation   (src/.../reducers.ts)\n                        \n                        \n                            simulationState   (src/.../reducers.ts)\n                        \n                        \n                            steps   (src/.../reducers.ts)\n                        \n                        \n                            STEPS   (src/.../ui-state.ts)\n                        \n                        \n                            trafficChartOptions   (src/.../charts-config.ts)\n                        \n                        \n                            uiConfig   (src/.../ui-config.ts)\n                        \n                        \n                            wizardState   (src/.../reducers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/ui/charts/charts-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            busiestChartOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        busiestChartOptions:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    legend: {\n        display: true\n    },\n    title: {\n        display: true\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n        xAxes: [{\n            id: 'x-axis-0',\n            type: 'category',\n            scaleLabel: {\n                display: true,\n                labelString: 'Time'\n            },\n            ticks: {\n                beginAtZero: true\n            }\n        }],\n        yAxes: [{\n            id: 'y-axis-0',\n            type: 'linear',\n            ticks: {\n                stepSize: 10\n            }\n        }]\n    },\n    annotation: {\n        drawTime: 'afterDatasetsDraw',\n        annotations: []\n    }\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            busiestColor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        busiestColor:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '#63a4ff'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trafficChartOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trafficChartOptions:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    legend: {\n        display: false\n    },\n    title: {\n        display: true\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n        xAxes: [{\n            scaleLabel: {\n                display: true,\n                labelString: 'Time (s)'\n            },\n            ticks: {\n                beginAtZero: true\n            }\n        }],\n        yAxes: [{\n            display: true,\n            maxBarThickness: 40\n        }]\n    }\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/ui/models/reducers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            currentStep\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentStep:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    wizardState,\n    fromWizard.getCurrentStep\n)\n                        \n                    \n\n                \n                    \n                        Exports the current step state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    wizardState,\n    fromWizard.getError\n)\n                        \n                    \n\n                \n                    \n                        Exports the error state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            featureUiState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        featureUiState:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createFeatureSelector('ui')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            map\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        map:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    mapState,\n    fromMap.getMap\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mapState:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    featureUiState,\n    (state: UiState) => state.map\n)\n                        \n                    \n\n                \n                    \n                        Exports the map state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pending\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pending:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    wizardState,\n    fromWizard.getPending\n)\n                        \n                    \n\n                \n                    \n                        Exports the pending state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reducers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reducers:     ActionReducerMap\n\n                    \n                \n                    \n                        \n                            Type :     ActionReducerMap\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    wizard: fromWizard.wizardReducer,\n    map: fromMap.mapReducer\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            steps\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        steps:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    wizardState,\n    fromWizard.getSteps\n)\n                        \n                    \n\n                \n                    \n                        Exports the steps state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wizardState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        wizardState:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    featureUiState,\n    (state: UiState) => state.wizard\n)\n                        \n                    \n\n                \n                    \n                        Exports the wizard state.\n\n                    \n                \n\n            \n        \n\n    src/app/simulation/models/reducers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            end\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        end:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    simulationState,\n    fromSimulation.getEnd\n)\n                        \n                    \n\n                \n                    \n                        Exports the end state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            featureSimulationState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        featureSimulationState:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createFeatureSelector('simulation')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            periods\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        periods:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    simulationState,\n    fromSimulation.getPeriods\n)\n                        \n                    \n\n                \n                    \n                        Exports the periods state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reducers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reducers:     ActionReducerMap\n\n                    \n                \n                    \n                        \n                            Type :     ActionReducerMap\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    simulation: fromSimulation.simulationReducer\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            simulation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        simulation:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    simulationState,\n    fromSimulation.getSimulation\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            simulationState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        simulationState:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    featureSimulationState,\n    (state: SimulationState) => state.simulation\n)\n                        \n                    \n\n                \n                    \n                        Exports the simulation state.\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    production: false,\n    testing: false,\n    functions: {\n        networkData: {\n            url: 'http://localhost:4201/' + appConfig.firebase.projectId + '/us-central1/networkData'\n        },\n        trafficData: {\n            url: 'http://localhost:4201/' + appConfig.firebase.projectId + '/us-central1/trafficData'\n        }\n    }\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    production: true,\n    testing: false,\n    functions: {\n        networkData: {\n            url: 'https://us-central1-' + appConfig.firebase.projectId + '.cloudfunctions.net/networkData'\n        },\n        trafficData: {\n            url: 'https://us-central1-' + appConfig.firebase.projectId + '.cloudfunctions.net/trafficData'\n        }\n    }\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    production: false,\n    testing: true,\n    functions: {\n        networkData: {\n            url: ''\n        },\n        trafficData: {\n            url: ''\n        }\n    }\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/ui/models/reducers/wizard.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getCurrentStep\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getCurrentStep:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : (state: WizardState) => state.currentStep\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getError:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : (state: WizardState) => state.error\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPending\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getPending:     string | boolean\n\n                    \n                \n                    \n                        \n                            Type :     string | boolean\n\n                        \n                    \n                    \n                        \n                            Default value : (state: WizardState) => state.pending\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSteps\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getSteps:     Step[]\n\n                    \n                \n                    \n                        \n                            Type :     Step[]\n\n                        \n                    \n                    \n                        \n                            Default value : (state: WizardState) => state.steps\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialWizardState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        initialWizardState:     WizardState\n\n                    \n                \n                    \n                        \n                            Type :     WizardState\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    steps: STEPS,\n    currentStep: 0,\n    error: null,\n    pending: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/simulation/models/reducers/simulation.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getEnd\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getEnd:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : (state: SimulationState) => state.end\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPeriods\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getPeriods:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : (state: SimulationState) => state.periods\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSimulation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getSimulation:     Simulation\n\n                    \n                \n                    \n                        \n                            Type :     Simulation\n\n                        \n                    \n                    \n                        \n                            Default value : (state: SimulationState) => state.simulation\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialSimulationState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        initialSimulationState:     SimulationState\n\n                    \n                \n                    \n                        \n                            Type :     SimulationState\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    simulation: null,\n    end: false,\n    periods: null\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/ui/models/reducers/map.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getMap:     Map\n\n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : (state: MapState) => state.map\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialMapState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        initialMapState:     MapState\n\n                    \n                \n                    \n                        \n                            Type :     MapState\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    map: null\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/home/home.transition.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            HOME_TRANSITION\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        HOME_TRANSITION:     AnimationTriggerMetadata\n\n                    \n                \n                    \n                        \n                            Type :     AnimationTriggerMetadata\n\n                        \n                    \n                    \n                        \n                            Default value : trigger('homeTransition', [\n    transition('void => *', [\n        style({\n            opacity: 0\n        }),\n        animate('500ms 0ms ease-in',\n            style({\n                opacity: 1\n            })\n        )\n    ])\n])\n                        \n                    \n\n\n            \n        \n\n    src/app/ui/map/map.style.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mapStyle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mapStyle:     google.maps.MapTypeStyle[]\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.MapTypeStyle[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        \"featureType\": \"administrative\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road\",\n        \"elementType\": \"labels.icon\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"transit\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    }\n]\n                        \n                    \n\n                \n                    \n                        Styled Maps: https://developers.google.com/maps/documentation/javascript/styling\n\n                    \n                \n\n            \n        \n\n    src/app/shared/material.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            materialModules\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        materialModules:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    MatSidenavModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    MatMenuModule,\n    MatStepperModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule,\n    MatDialogModule,\n    MatGridListModule,\n    MatSelectModule,\n    MatExpansionModule,\n    MatTableModule\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/shared/shared.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            sharedModules\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sharedModules:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    CommonModule,\n    RouterModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    FlexLayoutModule\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/ui/models/ui-state.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            STEPS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        STEPS:     Step[]\n\n                    \n                \n                    \n                        \n                            Type :     Step[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n                \n                    \n                        Initial steps.\n\n                    \n                \n\n            \n        \n\n    src/app/ui/ui-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            uiConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uiConfig:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    /**\n     * Initial map.\n     */\n    map: {\n        center: { lat: 41.910943, lng: 12.476358 },\n        zoom: 4\n    },\n    /**\n     * Time of simulation limit in hours.\n     */\n    timeLimit: 24,\n    /**\n     * Area limit in hectares.\n     */\n    areaMaxLimit: 30,\n    areaMinLimit: 3,\n    links: {\n        baseColor: '#babdbe',\n        noTrafficColor: '#76d219',\n        moderateTrafficColor: '#d27519',\n        heavyTrafficColor: '#d2191a'\n    },\n    /**\n     * Minimum edge distance for traffic data.\n     */\n    minDistance: 20,\n    /**\n     * Minimum edge duration for traffic data.\n     */\n    minDuration: 2,\n    /**\n     * Maximum number of O/D pairs that the user can select.\n     */\n    maxOdPairs: 5,\n    /**\n     * The number of shortest paths to compute.\n     */\n    k: 3,\n    /**\n     * Multinomial logit parameter.\n     */\n    theta: 2,\n    /**\n     * Minimum spacing between subsequent vehicles.\n     */\n    sp: 5,\n    /**\n     * Shortest paths.\n     */\n    paths: {\n        /**\n         * Highly, Medium, Poorly\n         */\n        colors: [\n            '#004ba0',\n            '#1976d2',\n            '#63a4ff'\n        ]\n    },\n    /**\n     * Maximum No. vehicles for O/D pair.\n     */\n    maxDemand: 10000,\n    /**\n     * Weather Adjustment Factor Coefficients for max flow.\n     * \"Traffic Analysis Toolbox. Volume XI: Weather and Traffic Analysis, Modeling and Simulation\"\n     */\n    adjustmentFactorCoefficients: [0.91, 0.009, -0.404, -1.455, 0, 0],\n    /**\n     * Visibility (m).\n     */\n    visibility: {\n        max: 10000,\n        default: 10000 // Normal value\n    },\n    /**\n     * Rain rating (mm).\n     */\n    rainIntensity: {\n        max: 70\n    },\n    /**\n     * Snow rating (mm).\n     */\n    snowIntensity: {\n        max: 20\n    },\n    weatherIcons: ['01d', '02d', '03d', '04d', '09d', '10d', '11d', '13d', '50d'],\n    /**\n     * Minimum fraction of the capacity of the moderate traffic level.\n     */\n    moderateTraffic: 0.25,\n    /**\n     * Minimum fraction of the capacity of the heavy traffic level.\n     */\n    heavyTraffic: 0.75,\n    /**\n     * Simulated time interval (ms).\n     */\n    simulatedTimeInterval: 500,\n    timeIntervalIncrement: 100,\n    timeIntervalDecrement: 100,\n    /**\n     * Maximum time interval in seconds for LTM.\n     */\n    maxTimeInterval: 10\n}\n                        \n                    \n\n                \n                    \n                        User interface configuration.\n\n                    \n                \n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
