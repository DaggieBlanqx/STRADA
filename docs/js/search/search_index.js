var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AboutComponent.html",[0,0.568,1,1.2]],["body/components/AboutComponent.html",[0,1.035,1,2.106,2,0.182,3,0.204,4,1.538,5,1.538,6,1.217,7,0.108,8,4.571,9,1.454,10,2.431,11,1.538,12,2.856,13,2.433,14,2.253,15,6.023,16,2.253,17,6.023,18,0.252,19,0.631,20,6.67,21,1.407,22,2.585,23,1.29,24,0.868,25,6.023,26,4.571,27,0.736,28,0.013,29,1.275,30,1.124,31,0.341,32,0.905,33,0.789,34,2.518,35,5.257,36,0.252,37,0.736,38,0.108,39,0.021,40,4.85,41,4.752,42,2.425,43,4.375,44,1.771,45,2.726,46,1.275,47,4.752,48,2.425,49,3.989,50,3.989,51,4.073,52,4.073,53,4.752,54,5.257,55,5.257,56,3.989,57,5.257,58,3.103,59,5.257,60,2.841,61,6.023,62,4.375,63,5.257,64,3.689,65,6.023,66,5.257,67,6.023,68,5.257,69,1.103,70,2.027,71,1.604,72,1.959,73,2.41,74,1.538,75,3.606,76,3.606,77,3.606,78,4.571,79,0.87,80,1.538,81,1.39,82,1.538,83,1.39,84,1.881,85,1.033,86,1.538,87,1.39,88,1.739,89,1.538,90,1.39,91,1.487,92,1.538,93,1.39,94,1.538,95,1.39,96,1.437,97,2.027,98,1.344,99,1.538,100,1.39,101,1.538,102,1.39,103,1.39,104,1.538,105,1.538,106,1.39,107,1.538,108,1.344,109,1.538,110,1.39,111,1.217,112,2.027,113,1.39,114,1.39,115,1.39,116,1.538,117,1.39,118,1.538,119,1.344,120,1.538,121,1.344,122,1.538,123,1.39,124,1.538,125,1.39,126,1.538,127,0.009,128,0.009]],["title/components/AppComponent.html",[0,0.568,81,1.241]],["body/components/AppComponent.html",[0,1.085,1,1.566,2,0.201,3,0.161,4,1.792,5,1.792,6,1.418,7,0.126,11,1.792,12,2.889,13,2.501,14,2.485,16,2.485,28,0.013,36,0.294,37,0.857,38,0.126,39,0.024,40,4.216,69,1.286,70,2.236,71,1.769,72,2.161,73,2.552,74,1.792,79,0.959,80,1.792,81,2.305,82,1.792,83,1.619,84,1.948,85,1.204,86,1.792,87,1.619,88,1.823,89,1.792,90,1.619,91,1.732,92,1.792,93,1.619,94,1.792,95,1.619,96,1.674,97,2.236,98,1.566,99,1.792,100,1.619,101,1.792,102,1.619,103,1.619,104,1.792,105,1.792,106,1.619,107,1.792,108,1.566,109,1.792,110,1.619,111,1.418,112,2.236,113,1.619,114,1.619,115,1.619,116,1.792,117,1.619,118,1.792,119,1.566,120,1.792,121,1.566,122,1.792,123,1.619,124,1.792,125,1.619,126,1.792,127,0.01,128,0.01,129,5.325,130,6.644,131,6.644,132,6.644]],["title/modules/AppModule.html",[133,1.2,134,2.964]],["body/modules/AppModule.html",[1,2.274,2,0.144,3,0.144,7,0.113,13,1.45,28,0.013,36,0.466,37,0.768,38,0.146,39,0.022,69,1.151,81,2.506,98,2.274,108,2.274,119,2.274,127,0.009,128,0.009,133,1.821,134,6.216,135,2.348,136,3.714,137,3.714,138,2.989,139,4.161,140,4.161,141,4.161,142,4.161,143,5.229,144,5.229,145,5.229,146,5.229,147,4.519,148,5.229,149,2.921,150,1.151,151,2.456,152,4.768,153,3.049,154,6.192,155,6.192,156,4.885,157,3.463,158,6.192,159,4.768,160,3.761,161,1.27,162,4.161,163,4.161,164,4.768,165,4.161,166,4.161,167,4.161,168,4.161,169,4.768,170,4.768,171,4.768,172,4.768,173,5.404,174,1.849,175,4.768,176,4.768,177,4.768,178,4.768,179,2.707,180,1.721]],["title/classes/AppPreloadingStrategy.html",[39,0.019,181,3.22]],["body/classes/AppPreloadingStrategy.html",[2,0.182,3,0.182,7,0.142,9,1.727,18,0.332,21,1.671,24,0.774,27,1.151,28,0.013,31,0.449,36,0.395,38,0.142,39,0.033,79,0.868,127,0.011,128,0.011,181,5.643,182,5.643,183,6.897,184,6.011,185,6.664,186,7.153,187,4.36,188,7.903,189,3.934,190,6.011,191,0.868,192,0.868,193,3.074,194,3.247,195,2.17,196,6.011,197,6.011,198,3.097]],["title/modules/AppRoutingModule.html",[133,1.2,143,2.76]],["body/modules/AppRoutingModule.html",[0,1.075,1,2.021,2,0.17,3,0.17,7,0.133,13,1.711,28,0.013,36,0.455,37,0.906,38,0.162,39,0.026,44,1.655,46,1.191,98,2.021,108,2.021,119,2.021,127,0.01,128,0.01,133,1.655,138,2.446,143,4.648,153,3.385,165,4.911,166,4.911,167,4.911,168,4.911,181,5.855,182,4.439,183,5.999,185,4.911,194,3.039,199,4.911,200,4.992,201,5.627,202,5.627,203,2.947,204,6.874,205,6.477,206,4.911,207,4.439,208,5.627,209,5.627,210,2.031,211,4.087,212,4.439]],["title/classes/BaseComponent.html",[39,0.019,213,1.925]],["body/classes/BaseComponent.html",[0,1.103,2,0.159,3,0.159,7,0.124,9,1.59,10,2.597,18,0.29,19,0.69,21,1.539,22,2.723,24,1.021,27,1.251,28,0.013,29,1.749,31,0.392,32,1.04,33,0.907,36,0.364,37,0.846,38,0.124,39,0.034,85,1.489,88,1.539,127,0.01,128,0.01,195,1.896,213,3.107,214,5.253,215,1.545,216,8.047,217,3.244,218,5.677,219,3.741,220,3.559,221,3.716,222,3.716,223,3.716,224,5.253,225,5.253,226,5.253,227,5.253,228,3.74,229,2.219,230,3.716,231,5.253,232,5.253,233,2.864,234,4.144,235,4.144]],["title/interfaces/CanComponentDeactivate.html",[236,0.755,237,2.964]],["body/interfaces/CanComponentDeactivate.html",[2,0.182,3,0.182,7,0.142,9,1.449,18,0.331,19,0.749,27,0.966,28,0.013,31,0.448,36,0.421,37,0.966,38,0.169,39,0.027,127,0.011,128,0.011,180,2.166,189,3.681,193,3.072,194,3.242,195,2.166,236,1.322,237,5.542,238,5.238,239,4.059,240,5.238,241,5.946,242,2.49,243,6.237,244,1.967,245,4.059,246,5.238,247,6.237]],["title/injectables/CanDeactivateGuard.html",[242,1.422,245,2.76]],["body/injectables/CanDeactivateGuard.html",[0,0.816,2,0.178,3,0.178,7,0.138,9,1.416,18,0.324,21,1.647,24,0.755,27,1.135,28,0.013,31,0.438,36,0.417,37,0.944,38,0.166,39,0.027,79,0.847,127,0.011,128,0.011,180,2.117,191,0.847,192,0.847,193,3.155,194,3.168,195,2.117,236,1.085,237,5.693,238,6.152,239,4.767,240,5.119,241,5.824,242,2.633,243,6.595,244,2.08,245,4.767,246,6.152,247,6.152,248,5.866]],["title/components/ChangeOfConditionsComponent.html",[0,0.568,83,1.241]],["body/components/ChangeOfConditionsComponent.html",[0,0.96,1,0.88,2,0.135,3,0.091,4,1.007,5,1.007,6,0.797,7,0.071,9,1.079,10,1.931,11,1.007,12,2.739,13,2.099,14,1.672,16,1.672,18,0.368,19,0.468,21,1.044,22,2.492,23,0.855,24,1.026,27,1.248,28,0.013,29,1.625,30,1.059,31,0.53,32,0.885,33,1.312,36,0.428,37,0.482,38,0.071,39,0.014,46,0.946,69,0.722,70,1.504,71,1.19,72,1.454,73,1.997,74,1.007,79,0.962,80,1.007,81,0.91,82,1.007,83,1.804,84,1.833,85,1.67,86,1.007,87,0.91,88,1.557,89,1.007,90,0.91,91,0.973,92,1.007,93,0.91,94,1.007,95,0.91,96,0.941,97,1.504,98,0.88,99,1.007,100,0.91,101,1.007,102,0.91,103,0.91,104,1.007,105,1.007,106,0.91,107,1.007,108,0.88,109,1.007,110,0.91,111,0.797,112,1.504,113,0.91,114,1.359,115,0.91,116,1.007,117,0.91,118,1.007,119,0.88,120,1.007,121,0.88,122,1.007,123,0.91,124,1.007,125,0.91,126,1.007,127,0.007,128,0.007,150,0.722,161,0.797,174,1.16,191,0.857,192,0.857,203,1.613,213,3.423,215,2.03,217,3.281,219,2.874,220,2.524,221,3.4,222,3.281,223,3.4,228,2.524,229,1.314,230,2.201,233,1.301,249,7.677,250,6.7,251,2.992,252,2.302,253,2.108,254,4.469,255,4.469,256,4.469,257,4.469,258,4.469,259,3.804,260,4.136,261,2.173,262,4.839,263,3.125,264,2.799,265,2.153,266,3.057,267,2.686,268,3.555,269,4.689,270,3.555,271,2.992,272,2.992,273,2.992,274,2.992,275,3.086,276,2.992,277,5.35,278,6.351,279,2.992,280,2.201,281,0.535,282,2.992,283,2.992,284,2.992,285,2.992,286,2.992,287,2.992,288,1.541,289,1.541,290,1.541,291,1.541,292,1.541,293,4.682,294,2.992,295,1.541,296,2.173,297,2.611,298,2.992,299,4.682,300,2.173,301,1.616,302,1.699,303,1.699,304,2.36,305,2.36,306,1.616,307,1.354,308,1.08,309,2.023,310,0.823,311,3.395,312,2.611,313,2.023,314,2.173,315,1.08,316,1.08,317,1.541,318,3.9,319,1.717,320,1.541,321,2.611,322,2.992,323,1.899,324,1.541,325,1.541,326,2.022,327,2.414,328,2.611,329,1.613,330,2.992,331,2.992,332,2.992,333,2.992,334,2.992,335,2.992,336,1.672,337,3.246,338,2.992,339,2.992,340,2.992,341,1.792,342,2.992,343,2.992,344,2.992,345,1.354,346,1.541,347,2.022,348,1.804,349,1.899,350,4.469,351,2.992,352,1.473,353,2.173,354,2.611,355,2.611,356,2.414,357,2.414,358,3.9,359,3.9,360,4.469,361,7.098,362,3.9,363,5.179,364,3.022,365,2.836]],["title/components/ChartsComponent.html",[0,0.568,87,1.241]],["body/components/ChartsComponent.html",[0,0.947,1,0.843,2,0.131,3,0.087,4,0.965,5,0.965,6,0.764,7,0.068,9,1.045,10,1.882,11,0.965,12,2.725,13,2.07,14,1.619,16,1.619,18,0.158,19,0.454,21,1.011,22,2.457,23,0.829,24,1.05,27,1.258,28,0.013,29,1.735,30,0.722,31,0.574,32,0.568,33,0.901,34,2.181,36,0.404,37,0.462,38,0.068,39,0.013,42,2.099,44,1.534,46,1.388,69,0.692,70,1.457,71,1.153,72,1.408,73,1.955,74,0.965,79,0.753,80,0.965,81,0.872,82,0.965,83,0.872,84,1.643,85,0.979,86,0.965,87,1.766,88,1.637,89,0.965,90,0.872,91,0.933,92,0.965,93,0.872,94,0.965,95,0.872,96,0.902,97,1.457,98,0.843,99,0.965,100,0.872,101,0.965,102,0.872,103,0.872,104,0.965,105,0.965,106,0.872,107,0.965,108,0.843,109,0.965,110,0.872,111,0.764,112,1.457,113,0.872,114,1.316,115,0.872,116,0.965,117,0.872,118,0.965,119,0.843,120,0.965,121,0.843,122,0.965,123,0.872,124,0.965,125,0.872,126,0.965,127,0.007,128,0.007,161,0.764,174,1.112,180,1.882,191,0.414,192,0.839,195,1.035,210,1.035,213,3.383,217,3.229,218,4.114,219,3.171,220,3.211,221,3.353,222,3.353,223,3.353,228,2.46,229,1.273,230,2.132,233,1.247,234,2.262,235,2.262,252,2.23,263,3.081,288,1.477,289,1.477,290,1.477,291,1.477,292,1.477,295,1.477,306,1.549,307,1.298,315,1.035,316,1.562,317,1.477,319,1.344,320,1.477,324,1.477,325,1.477,341,1.718,345,1.298,346,1.477,347,1.298,348,1.766,352,1.412,366,2.868,367,4.114,368,7.612,369,4.329,370,4.329,371,5.81,372,5.81,373,5.81,374,5.81,375,5.81,376,5.81,377,3.48,378,5.81,379,4.583,380,5.81,381,5.81,382,5.81,383,5.81,384,2.262,385,4.762,386,3.299,387,4.329,388,2.868,389,2.868,390,2.868,391,2.868,392,2.868,393,2.868,394,2.868,395,2.868,396,2.868,397,2.868,398,2.868,399,2.868,400,7.173,401,2.868,402,2.868,403,2.868,404,2.868,405,2.868,406,2.503,407,2.262,408,2.083,409,4.552,410,3.778,411,3.778,412,2.868,413,4.329,414,2.868,415,4.329,416,2.868,417,4.329,418,2.868,419,2.083,420,2.503,421,2.503,422,2.868,423,2.868,424,2.868,425,2.868,426,2.868,427,2.868,428,2.868,429,2.868,430,4.329,431,3.723,432,5.215,433,4.329,434,2.868,435,2.868,436,2.868,437,2.868,438,4.552,439,2.083,440,2.868,441,5.215,442,2.868,443,2.868,444,2.868,445,2.868,446,2.868,447,2.503,448,2.868,449,2.868,450,2.868,451,2.503,452,2.868,453,2.868,454,2.868,455,2.868,456,0.999,457,2.868,458,4.329,459,4.329,460,2.868,461,4.329,462,2.503,463,3.778,464,2.868,465,5.81,466,4.329,467,1.882,468,4.329,469,4.329,470,4.329,471,3.778,472,4.329,473,3.415,474,2.503,475,2.868,476,4.329,477,2.503,478,3.415,479,2.868,480,2.262,481,2.868,482,1.718,483,2.868,484,1.718,485,2.868,486,2.868,487,2.868,488,2.868,489,2.868,490,2.868,491,2.868,492,2.868,493,2.868,494,2.868,495,2.868,496,2.868]],["title/injectables/ClockService.html",[242,1.422,497,2.445]],["body/injectables/ClockService.html",[2,0.093,3,0.093,7,0.072,18,0.169,19,0.477,21,1.063,23,0.871,24,1.035,27,1.229,28,0.013,29,1.708,30,1.273,31,0.581,32,1.074,33,0.937,36,0.395,37,0.493,38,0.107,39,0.014,44,2.307,48,2.801,79,0.657,114,0.931,127,0.007,128,0.007,150,1.449,161,0.816,191,0.657,192,0.657,193,2.417,195,1.105,210,2.167,219,3.234,228,1.445,242,1.89,244,1.652,263,3.041,307,1.386,308,2.579,310,1.652,315,1.105,316,1.105,319,2.188,326,2.903,329,1.063,345,1.386,347,3.041,348,2.173,349,4.265,352,3.31,386,3.409,497,2.724,498,2.673,499,4.736,500,5.191,501,6.004,502,5.638,503,6.238,504,5.598,505,6.004,506,1.763,507,5.239,508,5.302,509,3.969,510,5.865,511,5.865,512,4.536,513,3.816,514,6.004,515,1.835,516,4.548,517,3.063,518,3.063,519,3.063,520,3.969,521,3.063,522,3.063,523,3.063,524,3.063,525,3.063,526,3.063,527,3.588,528,3.969,529,3.063,530,3.063,531,3.063,532,3.063,533,4.548,534,3.063,535,3.969,536,4.28,537,3.303,538,3.063,539,3.063,540,3.969,541,3.063,542,4.548,543,2.224,544,2.673,545,2.071,546,1.835,547,2.673,548,1.508,549,1.146,550,3.063,551,4.734,552,1.578,553,6.238,554,6.661,555,4.548,556,4.548,557,2.058,558,6.004,559,4.734,560,7.147,561,3.063,562,5.425,563,3.063,564,3.063,565,3.063,566,3.063,567,3.063,568,3.063,569,3.063,570,3.063,571,3.063,572,3.063,573,2.673,574,6.721,575,1.508,576,3.063,577,3.063,578,4.548,579,6.414,580,3.063,581,2.673,582,5.06,583,3.81,584,3.026,585,1.944,586,4.548,587,5.425,588,4.548,589,4.548,590,3.063,591,4.548,592,3.063]],["title/interfaces/Counts.html",[236,0.755,593,1.774]],["body/interfaces/Counts.html",[2,0.181,3,0.181,7,0.141,18,0.33,19,0.748,28,0.013,30,1.406,31,0.533,38,0.18,44,2.241,46,1.51,127,0.011,128,0.011,236,1.46,281,1.363,456,2.085,484,3.584,513,3.397,593,3.505,594,4.72,595,3.797,596,5.731,597,5.731,598,4.527,599,4.046,600,3.797,601,4.046]],["title/modules/DemandModule.html",[133,1.2,144,2.76]],["body/modules/DemandModule.html",[2,0.187,3,0.187,7,0.145,28,0.013,36,0.426,37,0.992,38,0.171,39,0.028,69,1.488,127,0.011,128,0.011,133,2.135,135,3.036,136,3.921,137,3.329,138,3.355,144,5.57,149,3.425,150,1.488,151,3.176,153,3.575,270,4.933,602,5.38,603,5.38,604,6.165,605,6.165]],["title/injectables/DemandService.html",[242,1.422,270,2.445]],["body/injectables/DemandService.html",[2,0.097,3,0.097,7,0.076,18,0.362,19,0.494,21,1.102,23,0.616,24,0.982,27,1.296,28,0.013,29,1.301,30,1.411,31,0.542,32,0.637,33,0.556,36,0.378,37,0.518,38,0.076,39,0.015,42,1.899,60,3.227,79,1.02,91,2.225,127,0.007,128,0.007,150,1.484,174,1.248,180,1.161,189,2.43,191,1.02,192,1.02,193,2.248,195,1.161,198,1.658,203,2.219,210,1.161,215,2.012,242,1.946,244,1.298,265,2.475,266,3.168,269,5.109,270,2.825,280,3.703,303,1.827,313,2.176,315,1.161,316,1.161,319,2.024,329,1.529,348,2.344,456,2.384,467,2.427,480,6.082,506,1.91,528,4.117,548,1.585,557,1.456,606,3.218,607,3.553,608,4.045,609,5.366,610,4.717,611,6.149,612,4.717,613,6.149,614,6.149,615,4.717,616,6.327,617,3.218,618,4.717,619,4.717,620,4.272,621,7.709,622,3.218,623,5.584,624,2.877,625,3.227,626,4.061,627,3.218,628,3.168,629,4.717,630,3.218,631,3.218,632,3.218,633,7.069,634,3.218,635,4.717,636,3.884,637,3.218,638,3.426,639,4.717,640,2.678,641,6.149,642,4.717,643,3.218,644,3.426,645,4.717,646,3.218,647,4.717,648,3.218,649,2.678,650,2.75,651,1.518,652,2.337,653,6.149,654,2.051,655,3.218,656,3.218,657,3.218,658,3.218,659,3.215,660,2.548,661,3.218,662,3.218,663,6.149,664,4.717,665,3.218,666,1.738,667,3.218,668,3.218,669,3.218,670,3.218,671,4.717,672,6.149,673,3.218]],["title/classes/Edge.html",[39,0.019,456,1.422]],["body/classes/Edge.html",[2,0.053,3,0.114,6,0.464,7,0.041,18,0.096,19,0.393,21,0.68,23,0.334,24,0.966,27,1.223,28,0.013,29,1.328,30,1.396,31,0.56,32,0.742,33,1.05,34,0.729,36,0.291,38,0.144,39,0.022,42,1.763,45,0.789,46,1.031,58,0.898,60,3.111,64,0.898,71,0.775,79,0.632,111,0.775,127,0.004,128,0.004,174,0.676,179,0.99,180,1.58,187,0.941,191,0.806,192,0.703,193,1.763,195,0.629,198,1.5,203,2.741,210,1.353,215,0.856,236,0.81,244,1.205,253,1.373,265,0.702,267,1.318,275,2.545,280,2.592,281,1.259,315,0.629,316,0.629,319,1.509,329,1.645,336,2.19,348,2.333,356,1.572,357,2.365,431,2.988,456,2.631,467,2.428,506,2.03,548,0.858,549,0.652,575,2.398,593,1.63,607,2.382,608,1.931,620,2.843,624,1.5,625,3.398,626,1.572,628,3.747,636,0.99,640,0.99,649,1.653,650,0.858,651,0.822,654,1.63,659,2.803,660,3.562,666,0.941,674,0.99,675,2.365,676,2.623,677,3.569,678,3.153,679,3.453,680,3.482,681,3.153,682,3.465,683,2.623,684,3.643,685,2.623,686,2.917,687,3.324,688,3.633,689,3.153,690,2.623,691,2.911,692,3.944,693,2.246,694,2.911,695,2.623,696,2.623,697,1.744,698,1.743,699,1.743,700,1.743,701,1.743,702,3.153,703,2.129,704,1.744,705,1.743,706,1.743,707,1.931,708,1.743,709,2.025,710,1.744,711,1.744,712,1.318,713,1.743,714,1.743,715,1.743,716,2.129,717,2.623,718,3.153,719,1.743,720,1.743,721,1.5,722,1.743,723,1.5,724,1.743,725,1.743,726,1.743,727,1.744,728,1.743,729,1.744,730,1.743,731,1.434,732,2.509,733,2.025,734,1.744,735,2.623,736,1.743,737,1.653,738,1.572,739,1.744,740,1.743,741,1.5,742,1.743,743,1.743,744,2.623,745,1.744,746,0.98,747,0.99,748,1.044,749,1.044,750,2.711,751,3.171,752,2.995,753,0.941,754,0.99,755,3.017,756,1.653,757,1.744,758,1.044,759,1.044,760,0.99,761,1.044,762,0.99,763,1.044,764,2.486,765,1.044,766,1.044,767,1.044,768,1.044,769,1.044,770,1.044,771,1.044,772,0.99,773,0.99,774,2.246,775,0.941,776,1.044,777,1.044,778,1.044,779,1.744,780,1.744,781,1.044,782,1.044,783,1.044,784,1.744,785,1.744,786,1.044,787,1.044,788,1.044,789,1.653,790,2.246,791,2.623,792,2.623,793,1.744,794,1.744,795,2.623,796,2.246,797,2.623,798,2.623,799,1.044,800,1.744,801,1.744,802,1.744,803,1.044,804,1.744,805,1.044,806,1.744,807,1.044,808,1.044,809,1.044,810,1.044,811,2.765,812,0.99,813,0.941,814,1.044,815,0.941,816,1.744,817,1.044,818,1.044,819,1.568,820,1.044,821,2.129,822,1.044,823,1.044,824,1.744,825,1.044,826,1.744,827,1.044,828,1.044,829,1.044,830,0.941,831,1.744,832,1.744,833,1.044,834,1.744,835,1.044,836,1.044,837,1.044,838,0.99,839,1.044,840,1.044,841,0.99,842,1.044,843,1.044,844,1.044,845,1.744,846,1.044,847,1.044,848,1.044,849,1.5,850,1.044,851,2.246,852,2.129,853,1.044,854,2.246,855,1.044,856,1.044,857,1.044,858,1.744,859,1.044,860,1.044,861,1.044,862,1.653,863,1.044,864,1.044,865,1.044,866,0.941,867,2.025,868,0.99,869,1.044,870,1.044,871,1.744,872,1.044,873,1.744,874,1.744,875,1.044,876,1.044,877,1.044,878,2.246,879,1.044,880,1.044,881,2.129,882,1.044,883,0.99,884,1.044,885,1.044,886,1.044,887,1.044,888,1.044,889,0.898,890,2.025,891,1.044,892,1.572,893,1.044,894,1.044,895,1.044,896,1.653,897,1.044,898,1.044,899,1.044,900,1.744,901,1.044,902,1.044,903,0.99,904,0.898,905,1.044,906,1.044,907,1.044,908,1.044,909,1.044,910,1.044,911,0.898,912,1.044,913,1.044,914,0.858,915,1.044,916,1.044,917,1.044,918,1.044,919,1.044,920,1.044,921,1.044,922,1.044,923,1.044,924,1.044,925,1.044,926,1.044,927,1.044,928,1.044,929,1.044,930,0.99,931,0.99,932,1.044,933,0.99,934,0.99,935,0.822,936,1.044,937,1.744,938,1.044,939,0.99,940,1.044,941,0.99,942,0.941,943,1.044,944,1.044,945,1.044,946,1.044,947,1.044,948,1.044,949,1.044,950,1.044,951,0.822,952,1.044,953,1.044]],["title/classes/EnumValues.html",[39,0.019,314,2.964]],["body/classes/EnumValues.html",[2,0.157,3,0.157,7,0.122,18,0.285,21,1.523,24,0.84,27,1.318,28,0.013,30,1.29,31,0.56,33,0.893,38,0.183,39,0.03,48,2.625,79,0.941,127,0.01,128,0.01,189,3.68,191,1.031,192,0.941,281,1.434,314,4.736,348,1.982,467,2.835,506,1.574,537,4.736,659,2.835,707,2.663,930,3.702,951,2.438,954,4.078,955,6.23,956,6.52,957,6.52,958,6.52,959,5.169,960,6.52,961,5.169,962,7.501,963,4.511,964,5.169,965,5.169,966,5.169,967,5.169,968,4.511,969,6.547,970,5.691,971,5.691,972,3.495,973,4.511,974,6.52,975,5.691,976,6.52,977,5.691,978,4.078,979,4.511,980,6.52,981,5.169,982,5.169,983,5.169]],["title/components/EstimateOfDemandComponent.html",[0,0.568,90,1.241]],["body/components/EstimateOfDemandComponent.html",[0,0.928,1,0.796,2,0.125,3,0.082,4,0.911,5,0.911,6,0.721,7,0.064,9,1,10,1.816,11,0.911,12,2.705,13,2.028,14,1.549,16,1.549,18,0.311,19,0.434,21,0.968,22,2.408,23,0.793,24,1.016,27,1.224,28,0.013,29,1.687,30,1.113,31,0.527,32,0.536,33,0.715,36,0.404,37,0.436,38,0.064,39,0.012,46,0.573,69,0.653,70,1.394,71,1.103,72,1.347,73,1.898,74,0.911,79,0.963,80,0.911,81,0.823,82,0.911,83,0.823,84,1.793,85,1.138,86,0.911,87,0.823,88,1.498,89,0.911,90,1.714,91,2.17,92,0.911,93,0.823,94,0.911,95,0.823,96,0.851,97,1.394,98,0.796,99,0.911,100,0.823,101,0.911,102,0.823,103,0.823,104,0.911,105,0.911,106,0.823,107,0.911,108,0.796,109,0.911,110,0.823,111,0.721,112,1.394,113,0.823,114,1.53,115,0.823,116,0.911,117,0.823,118,0.911,119,0.796,120,0.911,121,0.796,122,0.911,123,0.823,124,0.911,125,0.823,126,0.911,127,0.006,128,0.006,150,0.653,161,0.721,174,1.049,191,0.877,192,0.877,203,2.035,213,3.328,217,3.157,219,2.75,220,2.374,221,3.286,222,3.286,223,3.286,228,2.374,229,1.218,230,2.04,233,1.176,252,2.134,259,3.641,260,3.84,261,1.965,262,4.656,263,3.019,264,2.66,265,2.27,266,2.905,269,2.629,275,2.992,280,2.777,281,1.261,288,1.394,289,1.394,290,1.394,291,1.394,292,1.394,295,1.394,296,1.965,297,2.361,299,5.86,300,3.008,301,1.461,302,1.536,303,1.536,306,1.461,307,1.224,308,1.495,309,1.83,310,1.385,313,1.83,314,1.965,315,0.976,316,0.976,317,1.394,318,4.921,319,1.453,320,1.394,323,1.717,324,1.394,325,1.394,326,2.552,327,1.461,328,2.361,329,1.42,336,1.549,341,1.621,345,1.224,346,1.394,347,1.224,348,2.092,349,4.234,352,1.332,353,1.965,356,2.237,357,2.237,358,3.615,359,3.615,364,2.801,365,2.629,467,1.176,557,2.552,607,2.277,644,4.414,677,3.314,679,4.006,687,4.356,723,1.394,746,2.316,755,3.888,862,3.202,984,7.601,985,6.633,986,2.705,987,4.142,988,4.142,989,4.142,990,4.142,991,4.142,992,4.142,993,2.705,994,2.705,995,2.705,996,4.142,997,2.705,998,4.142,999,2.705,1000,4.142,1001,2.705,1002,2.705,1003,2.705,1004,2.705,1005,4.142,1006,2.705,1007,2.705,1008,2.705,1009,2.705,1010,1.816,1011,2.705,1012,2.705,1013,2.705,1014,4.142,1015,4.142,1016,2.361,1017,2.705,1018,2.705,1019,2.361,1020,4.142,1021,4.142,1022,2.705,1023,1.965,1024,4.142,1025,2.705,1026,2.705,1027,5.032,1028,2.705,1029,4.142,1030,2.361,1031,2.361,1032,4.392,1033,4.142,1034,4.142,1035,5.032,1036,2.705,1037,2.705,1038,2.705,1039,2.705,1040,2.705,1041,2.705,1042,2.705,1043,2.705,1044,2.705,1045,2.705,1046,2.705,1047,2.705,1048,4.142]],["title/components/FooterComponent.html",[0,0.568,93,1.241]],["body/components/FooterComponent.html",[0,1.059,1,1.445,2,0.191,3,0.149,4,1.654,5,1.654,6,1.309,7,0.116,9,1.524,10,2.518,11,1.654,12,2.872,13,2.466,14,2.361,16,2.361,18,0.271,19,0.662,20,6.802,21,1.475,22,2.657,24,0.813,27,0.791,28,0.013,29,1.336,30,1.163,31,0.367,32,0.973,33,0.849,34,2.64,35,5.51,36,0.271,37,0.791,38,0.116,39,0.022,49,4.288,50,4.288,51,4.269,52,4.269,69,1.186,70,2.125,71,1.681,72,2.053,73,2.478,74,1.654,75,3.876,76,3.876,77,3.876,79,0.911,80,1.654,81,1.494,82,1.654,83,1.494,84,1.914,85,1.111,86,1.654,87,1.494,88,1.779,89,1.654,90,1.494,91,1.598,92,1.654,93,2.238,94,1.654,95,1.494,96,1.545,97,2.125,98,1.445,99,1.654,100,1.494,101,1.654,102,1.494,103,1.494,104,1.654,105,1.654,106,1.494,107,1.654,108,1.445,109,1.654,110,1.494,111,1.309,112,2.125,113,1.494,114,1.494,115,1.494,116,1.654,117,1.494,118,1.654,119,1.445,120,1.654,121,1.445,122,1.654,123,1.494,124,1.654,125,1.494,126,1.654,127,0.01,128,0.01,211,4.585,212,4.98,327,3.41,1049,4.913,1050,6.313,1051,6.313,1052,6.313,1053,4.913,1054,4.913]],["title/classes/GoOn.html",[39,0.019,1055,2.318]],["body/classes/GoOn.html",[2,0.148,3,0.148,7,0.115,9,1.879,18,0.384,19,0.66,23,0.936,24,0.896,28,0.013,30,1.161,31,0.628,32,0.968,33,0.844,36,0.348,38,0.187,39,0.035,79,0.706,84,1.879,85,1.105,88,1.142,127,0.009,128,0.009,150,1.774,161,1.302,191,0.706,192,0.706,229,2.359,244,1.345,281,1.449,308,2.895,310,1.345,506,1.956,549,1.828,584,3.822,704,4.401,746,1.645,1055,4.172,1056,3.102,1057,4.276,1058,2.64,1059,6.293,1060,4.888,1061,3.994,1062,2.212,1063,2.928,1064,4.168,1065,4.168,1066,4.168,1067,2.518,1068,3.306,1069,3.102,1070,3.917,1071,3.102,1072,3.102,1073,2.928,1074,3.102,1075,3.102]],["title/components/GoogleMapComponent.html",[0,0.568,95,1.241]],["body/components/GoogleMapComponent.html",[0,0.937,1,1.018,2,0.151,3,0.105,4,1.674,5,1.165,6,0.922,7,0.082,9,1.201,10,2.101,11,1.165,12,2.784,13,2.198,18,0.191,19,0.521,21,1.162,22,2.297,23,0.663,24,1.024,27,0.937,28,0.013,29,1.485,30,1.256,31,0.604,32,1.464,36,0.275,37,0.557,38,0.082,39,0.016,69,0.836,70,1.674,71,1.551,72,1.618,73,2.142,74,1.165,79,0.973,80,1.165,81,1.053,82,1.165,83,1.053,84,1.745,85,1.439,86,1.165,87,1.053,88,1.689,89,1.165,90,1.053,91,1.126,92,1.165,93,1.053,94,1.165,95,1.935,96,1.83,97,1.674,98,1.018,99,1.165,100,1.053,101,1.165,102,1.053,103,1.053,104,1.165,105,1.165,106,1.053,107,1.165,108,1.018,109,1.165,110,1.053,111,0.922,112,1.674,113,1.053,114,1.053,115,1.053,116,1.165,117,1.053,118,1.165,119,1.018,120,1.165,121,1.018,122,1.165,123,1.053,124,1.165,125,1.053,126,1.165,127,0.007,128,0.007,149,3.75,191,0.84,192,0.84,244,1.752,259,4.684,281,1.138,319,1.64,326,2.251,329,0.809,349,3.157,385,5.25,478,3.924,482,4.579,506,1.201,575,2.45,624,2.563,650,2.45,654,1.505,704,2.98,723,2.563,904,3.615,914,2.45,1010,3.007,1070,1.784,1076,8.003,1077,3.463,1078,5.822,1079,4.975,1080,4.975,1081,5.554,1082,5.554,1083,5.554,1084,6.124,1085,5.554,1086,5.554,1087,4.745,1088,3.463,1089,4.745,1090,4.975,1091,5.02,1092,3.613,1093,3.463,1094,6.364,1095,3.463,1096,4.975,1097,4.975,1098,3.463,1099,4.975,1100,4.975,1101,3.463,1102,4.039,1103,4.975,1104,4.341,1105,3.463,1106,5.02,1107,3.463,1108,3.463,1109,4.341,1110,3.924,1111,3.463,1112,4.975,1113,5.02,1114,3.463,1115,4.341,1116,4.975,1117,3.463,1118,3.463,1119,3.924,1120,3.463,1121,4.975,1122,3.022,1123,3.463,1124,3.463,1125,3.463,1126,3.463,1127,3.463,1128,3.463,1129,3.463,1130,3.463,1131,3.022,1132,3.022,1133,3.022,1134,3.022,1135,3.022,1136,3.022,1137,3.022,1138,3.022,1139,3.022]],["title/classes/Heap.html",[39,0.019,750,2.103]],["body/classes/Heap.html",[2,0.144,3,0.144,7,0.112,18,0.341,19,0.647,21,1.442,24,0.97,27,1.266,28,0.013,29,1.538,30,1.256,31,0.512,32,0.939,33,0.819,36,0.262,38,0.146,39,0.028,46,1.306,79,0.891,127,0.009,128,0.009,191,0.891,192,0.891,203,3.108,215,2.017,236,0.878,319,1.768,329,1.108,336,1.774,456,2.532,506,1.977,638,3.446,659,2.683,677,3.409,750,4.188,752,3.926,813,3.333,819,1.984,849,3.18,889,3.743,890,3.924,892,4.068,911,3.18,1140,6.739,1141,4.141,1142,5.387,1143,6.86,1144,6.341,1145,6.172,1146,6.172,1147,4.744,1148,5.387,1149,4.744,1150,4.744,1151,5.387,1152,4.744,1153,5.387,1154,4.744,1155,4.141,1156,5.387,1157,4.141,1158,4.141,1159,4.141,1160,4.141,1161,4.141,1162,4.141,1163,3.446,1164,4.141]],["title/components/HomeComponent.html",[0,0.568,98,1.2]],["body/components/HomeComponent.html",[0,1.001,1,1.219,2,0.209,3,0.126,4,1.395,5,1.395,6,1.104,7,0.098,9,1.362,10,2.315,11,1.395,12,2.833,13,2.385,14,2.11,16,2.11,18,0.229,19,0.591,21,1.318,22,2.485,23,0.793,24,0.887,27,1.108,28,0.013,29,1.457,31,0.421,32,0.821,33,0.716,36,0.354,37,0.667,38,0.098,39,0.019,40,3.58,41,4.451,42,2.771,43,4.097,44,2.024,45,2.553,46,1.457,47,4.451,48,2.271,69,1.001,70,1.899,71,1.708,72,1.835,73,2.317,74,1.395,79,0.926,80,1.395,81,1.26,82,1.395,83,1.26,84,1.835,85,0.937,86,1.395,87,1.26,88,1.682,89,1.395,90,1.26,91,1.348,92,1.395,93,1.26,94,1.395,95,1.26,96,1.303,97,1.899,98,2.024,99,1.395,100,1.26,101,1.395,102,1.26,103,1.26,104,1.395,105,1.395,106,1.26,107,1.395,108,1.219,109,1.395,110,1.26,111,1.104,112,1.899,113,1.26,114,1.26,115,1.26,116,1.395,117,1.26,118,1.395,119,1.219,120,1.395,121,1.219,122,1.395,123,1.26,124,1.395,125,1.26,126,1.395,127,0.008,128,0.008,180,1.496,191,0.598,192,0.598,205,4.923,210,2.036,244,1.765,281,1.009,329,1.682,336,2.694,348,1.95,367,5.059,379,5.431,384,3.27,385,5.396,438,3.617,484,3.379,512,3.58,652,3.01,815,3.047,1031,3.617,1032,4.923,1113,3.27,1115,4.923,1165,4.145,1166,5.642,1167,5.642,1168,6.008,1169,5.642,1170,4.145,1171,4.145,1172,6.008,1173,3.617,1174,4.923,1175,4.145,1176,4.145,1177,7.43,1178,4.145,1179,4.145,1180,4.145,1181,6.413,1182,4.145,1183,5.642,1184,4.145,1185,5.642,1186,5.642,1187,3.617,1188,4.145,1189,4.923,1190,4.145,1191,4.923,1192,4.923,1193,4.923,1194,4.145,1195,4.145,1196,3.617,1197,4.145,1198,5.642,1199,4.145]],["title/components/InfoDialogComponent.html",[0,0.568,100,1.241]],["body/components/InfoDialogComponent.html",[0,1.056,1,1.43,2,0.24,3,0.147,4,2.111,5,1.637,6,1.295,7,0.115,11,1.637,12,2.87,13,2.404,18,0.269,19,0.657,23,1.201,24,0.894,28,0.013,31,0.519,36,0.346,37,0.783,38,0.115,39,0.022,46,1.713,69,1.174,70,2.111,71,1.671,72,2.04,73,2.469,74,1.637,79,1.002,80,1.637,81,1.479,82,1.637,83,1.479,84,1.909,85,1.1,86,1.637,87,1.479,88,1.773,89,1.637,90,1.479,91,1.582,92,1.637,93,1.479,94,1.637,95,1.479,96,1.529,97,2.111,98,1.43,99,1.637,100,2.23,101,1.637,102,1.479,103,1.479,104,1.637,105,1.637,106,1.479,107,1.637,108,1.43,109,1.637,110,1.479,111,1.295,112,2.111,113,1.479,114,1.479,115,1.479,116,1.637,117,1.479,118,1.637,119,1.43,120,1.637,121,1.43,122,1.637,123,1.479,124,1.637,125,1.479,126,1.637,127,0.009,128,0.009,191,0.702,192,0.702,242,2.185,506,1.876,1087,3.289,1200,7.334,1201,4.864,1202,5.474,1203,5.042,1204,6.625,1205,4.864,1206,7.773,1207,4.864,1208,3.837,1209,4.864,1210,4.864,1211,4.864,1212,2.913,1213,4.864]],["title/interfaces/LinkFlow.html",[236,0.755,620,2.204]],["body/interfaces/LinkFlow.html",[2,0.061,3,0.126,6,0.541,7,0.048,18,0.112,19,0.437,24,0.261,27,1.208,28,0.013,29,1.264,30,1.373,31,0.359,33,1.075,34,0.849,36,0.313,38,0.152,39,0.022,42,1.329,45,0.919,46,1.017,58,1.046,60,2.936,64,1.046,71,0.879,111,0.879,127,0.005,128,0.005,174,0.787,179,1.153,180,1.734,187,1.096,191,0.602,192,0.293,193,1.934,195,0.733,198,1.701,203,2.81,210,1.506,236,0.978,244,1.323,253,0.958,265,0.817,267,0.919,275,2.706,280,2.791,281,1.234,315,0.733,316,0.733,319,1.604,329,1.706,336,2.328,348,2.388,356,1.783,357,2.595,431,2.369,456,2.653,467,2.596,506,1.984,548,1,549,0.759,575,2.604,593,1.814,607,2.564,608,2.149,620,2.856,624,1.701,625,3.12,626,1.783,628,3.761,636,1.153,640,1.153,649,1.874,650,1,651,0.958,654,1.435,659,2.942,660,3.728,666,1.096,674,1.153,675,2.253,676,2.499,677,3.582,678,2.879,679,3.217,680,3.225,681,2.499,682,3.206,683,1.216,684,3.167,685,1.216,686,1.977,687,3.002,688,3.361,689,2.499,690,1.216,692,3.654,693,1.216,695,1.216,696,1.216,697,1.216,702,2.499,703,1.874,707,1.701,709,1.783,710,1.216,711,1.216,712,0.919,716,1.874,717,1.977,718,2.879,721,1.046,723,1.046,727,1.216,729,1.216,731,1,732,2.149,733,1.783,734,1.216,735,1.977,737,1.153,738,1.096,739,1.216,741,1.046,744,3.577,745,1.216,746,0.683,747,1.153,748,1.216,749,1.216,750,2.919,751,3.391,752,3.169,753,1.096,754,1.153,755,3.225,756,1.874,757,2.499,758,1.977,759,1.216,760,1.153,761,1.216,762,1.153,763,1.216,764,2.729,765,1.216,766,1.216,767,1.216,768,1.216,769,1.216,770,1.216,771,1.216,772,1.153,773,1.153,774,2.499,775,1.096,776,1.216,777,1.216,778,1.216,779,1.977,780,1.977,781,1.216,782,1.216,783,1.216,784,1.977,785,1.977,786,1.216,787,1.216,788,1.216,789,1.874,790,2.499,791,2.879,792,2.879,793,1.977,794,1.977,795,2.879,796,2.499,797,2.879,798,2.879,799,1.216,800,1.977,801,1.977,802,1.977,803,1.216,804,1.977,805,1.216,806,1.977,807,1.216,808,1.216,809,1.216,810,1.216,811,3.002,812,1.153,813,1.096,814,1.216,815,1.096,816,1.977,817,1.216,818,1.216,819,1.744,820,1.216,821,2.369,822,1.216,823,1.216,824,1.977,825,1.216,826,1.977,827,1.216,828,1.216,829,1.216,830,1.096,831,1.977,832,1.977,833,1.216,834,1.977,835,1.216,836,1.216,837,1.216,838,1.153,839,1.216,840,1.216,841,1.153,842,1.216,843,1.216,844,1.216,845,1.977,846,1.216,847,1.216,848,1.216,849,1.701,850,1.216,851,2.499,852,2.369,853,1.216,854,2.499,855,1.216,856,1.216,857,1.216,858,1.977,859,1.216,860,1.216,861,1.216,862,1.874,863,1.216,864,1.216,865,1.216,866,1.096,867,2.253,868,1.153,869,1.216,870,1.216,871,1.977,872,1.216,873,1.977,874,1.977,875,1.216,876,1.216,877,1.216,878,2.499,879,1.216,880,1.216,881,2.369,882,1.216,883,1.153,884,1.216,885,1.216,886,1.216,887,1.216,888,1.216,889,1.046,890,2.253,891,1.216,892,1.783,893,1.216,894,1.216,895,1.216,896,1.874,897,1.216,898,1.216,899,1.216,900,1.977,901,1.216,902,1.216,903,1.153,904,1.046,905,1.216,906,1.216,907,1.216,908,1.216,909,1.216,910,1.216,911,1.046,912,1.216,913,1.216,914,1,915,1.216,916,1.216,917,1.216,918,1.216,919,1.216,920,1.216,921,1.216,922,1.216,923,1.216,924,1.216,925,1.216,926,1.216,927,1.216,928,1.216,929,1.216,930,1.153,931,1.153,932,1.216,933,1.153,934,1.153,935,0.958,936,1.216,937,1.977,938,1.216,939,1.153,940,1.216,941,1.153,942,1.096,943,1.216,944,1.216,945,1.216,946,1.216,947,1.216,948,1.216,949,1.216,950,1.216,951,0.958,952,1.216,953,1.216]],["title/modules/LocationModule.html",[133,1.2,145,2.76]],["body/modules/LocationModule.html",[2,0.187,3,0.187,7,0.145,28,0.013,36,0.426,37,0.992,38,0.171,39,0.028,69,1.488,127,0.011,128,0.011,133,2.135,135,3.036,136,3.921,137,3.329,138,3.355,145,5.57,149,3.425,150,1.488,151,3.176,153,3.575,1214,5.38,1215,5.38,1216,4.933,1217,6.165,1218,6.165]],["title/injectables/LocationService.html",[242,1.422,1216,2.445]],["body/injectables/LocationService.html",[2,0.132,3,0.132,7,0.103,18,0.24,19,0.611,21,1.64,23,1.258,24,1.007,27,1.259,28,0.013,29,1.486,31,0.525,34,1.819,36,0.363,37,0.7,38,0.103,39,0.02,44,1.714,79,0.841,96,2.067,127,0.01,128,0.009,150,1.695,191,0.841,192,0.841,193,3.273,195,1.57,215,1.279,242,2.29,281,1.175,319,1.942,327,3.792,473,4.598,482,3.491,506,1.995,557,1.968,746,1.464,753,2.349,754,2.47,772,3.309,773,3.309,866,3.148,931,2.47,1010,2.372,1092,5.59,1216,3.491,1219,4.35,1220,4.598,1221,5.828,1222,5.087,1223,5.087,1224,4.456,1225,5.828,1226,7.097,1227,6.717,1228,7.536,1229,5.828,1230,6.39,1231,7.022,1232,5.828,1233,5.828,1234,5.828,1235,4.35,1236,7.022,1237,5.473,1238,5.185,1239,4.35,1240,5.828,1241,4.35,1242,4.35,1243,5.828,1244,4.35,1245,4.35,1246,7.022,1247,4.35,1248,4.35,1249,6.573,1250,5.828,1251,5.828,1252,4.35,1253,3.796,1254,5.828,1255,3.796,1256,4.35,1257,4.35,1258,5.828,1259,4.35,1260,4.35,1261,4.35,1262,3.796,1263,4.35]],["title/interfaces/Map.html",[236,0.755,1010,1.473]],["body/interfaces/Map.html",[2,0.185,3,0.185,7,0.144,18,0.337,19,0.756,28,0.013,31,0.455,38,0.181,46,1.769,127,0.011,128,0.011,215,1.793,233,2.65,236,1.421,308,2.865,329,1.424,595,3.869,935,3.623,1010,2.965,1102,3.869,1264,4.81]],["title/classes/MapChanged.html",[39,0.019,1265,2.964]],["body/classes/MapChanged.html",[2,0.166,3,0.166,7,0.129,9,1.77,18,0.302,19,0.708,23,1.048,24,0.944,28,0.013,31,0.63,32,1.084,33,0.946,36,0.373,38,0.181,39,0.033,79,0.791,85,1.238,88,1.279,127,0.01,128,0.01,150,1.848,161,1.458,191,0.791,192,0.791,229,2.313,281,1.369,310,1.507,506,1.934,549,2.048,584,3.779,704,4.586,1010,2.93,1057,4.135,1058,2.957,1062,2.478,1070,3.482,1265,5.561,1266,4.32,1267,6.76,1268,5.476,1269,5.899,1270,4.32,1271,4.779,1272,4.32]],["title/components/MapComponent.html",[0,0.568,102,1.241]],["body/components/MapComponent.html",[0,0.975,1,0.923,2,0.14,3,0.095,4,1.057,5,1.057,6,0.836,7,0.074,9,1.118,10,1.987,11,1.057,12,2.755,13,2.132,14,1.733,16,1.733,18,0.173,19,0.486,21,1.082,22,2.531,23,0.887,24,1.047,27,1.183,28,0.013,29,1.64,30,1.292,31,0.573,32,0.622,33,0.542,36,0.413,37,0.505,38,0.074,39,0.014,69,0.758,70,1.559,71,1.234,72,1.507,73,2.045,74,1.057,79,0.795,80,1.057,81,0.955,82,1.057,83,0.955,84,1.693,85,1.047,86,1.057,87,0.955,88,1.682,89,1.057,90,0.955,91,1.021,92,1.057,93,0.955,94,1.057,95,0.955,96,0.987,97,1.559,98,0.923,99,1.057,100,0.955,101,1.057,102,1.847,103,0.955,104,1.057,105,1.057,106,0.955,107,1.057,108,0.923,109,1.057,110,0.955,111,0.836,112,1.559,113,0.955,114,1.408,115,0.955,116,1.057,117,0.955,118,1.057,119,0.923,120,1.057,121,0.923,122,1.057,123,0.955,124,1.057,125,0.955,126,1.057,127,0.007,128,0.007,149,3.057,161,0.836,180,1.133,191,0.453,192,0.669,203,1.672,210,1.133,213,3.467,217,3.34,219,2.933,220,2.597,221,3.454,222,3.454,223,3.454,228,2.597,229,1.619,230,2.281,233,1.365,244,1.867,252,2.386,263,3.069,265,2.216,266,3.13,275,2.642,281,0.984,288,1.617,289,1.617,290,1.617,291,1.617,292,1.617,295,1.617,303,1.783,306,1.696,307,1.421,308,1.672,309,2.123,310,0.864,313,2.123,315,1.133,316,1.133,317,1.617,319,1.419,320,1.617,324,1.617,325,1.617,326,1.421,329,1.286,336,1.174,341,1.881,345,2.096,346,3.493,347,3.258,348,1.408,352,3.545,467,2.014,482,4.062,515,1.881,575,2.281,607,2.096,677,2.096,819,1.313,904,1.617,951,2.185,1010,2.698,1081,5.303,1082,5.303,1083,5.303,1084,5.303,1085,5.303,1086,5.303,1087,4.109,1089,4.109,1091,3.654,1092,3.998,1102,2.94,1104,4.804,1110,4.342,1122,2.74,1131,4.804,1132,2.74,1133,2.74,1134,2.74,1135,2.74,1136,2.74,1137,2.74,1138,2.74,1139,4.804,1168,4.043,1273,3.14,1274,3.654,1275,3.654,1276,4.632,1277,4.632,1278,4.632,1279,3.14,1280,3.14,1281,3.14,1282,3.14,1283,3.14,1284,3.14,1285,3.14,1286,3.14,1287,3.14,1288,3.14,1289,3.14,1290,3.14,1291,3.14,1292,2.477,1293,4.043,1294,3.14,1295,3.14,1296,3.14,1297,3.133,1298,3.14,1299,4.632,1300,4.632,1301,4.632,1302,3.14,1303,4.632,1304,2.28,1305,2.74,1306,3.14,1307,3.14,1308,4.632,1309,3.14,1310,3.14,1311,3.14,1312,3.14,1313,3.14,1314,3.14,1315,2.477,1316,3.14,1317,3.14,1318,3.14,1319,3.14,1320,3.14,1321,3.14,1322,3.14,1323,4.632,1324,3.14,1325,3.14,1326,3.14,1327,4.632,1328,3.14]],["title/interfaces/MapState.html",[236,0.755,1329,2.964]],["body/interfaces/MapState.html",[2,0.17,3,0.17,7,0.132,18,0.31,19,0.719,27,1.193,28,0.013,31,0.419,32,1.111,36,0.409,38,0.182,88,1.311,127,0.01,128,0.01,189,2.89,215,1.65,229,1.65,236,1.269,310,2.246,329,1.603,345,2.539,347,3.105,557,2.539,1010,3.061,1062,2.539,1269,4.897,1270,4.426,1271,4.897,1272,5.413,1329,5.927,1330,4.426,1331,4.983,1332,4.897,1333,4.897,1334,5.611,1335,4.897,1336,3.186,1337,4.897,1338,6.861,1339,4.897,1340,5.413,1341,5.611,1342,5.611,1343,4.897]],["title/modules/MaterialModule.html",[133,1.2,1344,2.59]],["body/modules/MaterialModule.html",[2,0.178,3,0.178,7,0.138,28,0.013,36,0.433,37,0.944,38,0.166,39,0.027,62,4.26,127,0.011,128,0.011,133,1.725,153,3.471,156,4.627,157,4.26,329,1.37,1212,3.513,1344,5.089,1345,5.119,1346,6.152,1347,6.152,1348,6.152,1349,7.049,1350,6.152,1351,6.152,1352,6.152,1353,6.152,1354,6.152,1355,6.152,1356,6.152,1357,6.152,1358,6.152,1359,6.152,1360,6.152,1361,6.152,1362,6.152,1363,7.557,1364,5.866,1365,7.049,1366,5.866,1367,5.866,1368,5.866]],["title/interfaces/Member.html",[236,0.755,764,2.318]],["body/interfaces/Member.html",[2,0.061,3,0.126,6,0.539,7,0.048,18,0.112,19,0.436,24,0.261,27,1.208,28,0.013,29,1.262,30,1.368,31,0.464,33,0.912,34,0.847,36,0.313,38,0.152,39,0.022,42,1.326,45,0.916,46,1.015,58,1.043,60,2.933,64,1.043,71,0.877,111,0.877,127,0.005,128,0.005,174,0.785,179,1.15,180,1.732,187,1.094,191,0.601,192,0.292,193,1.931,195,0.731,198,1.697,203,2.809,210,1.503,215,0.595,236,0.977,244,1.321,253,0.955,265,0.815,267,0.916,275,2.703,280,2.787,281,1.305,315,0.731,316,0.731,319,1.603,329,1.705,336,2.325,348,2.387,356,1.779,357,2.591,431,2.365,456,2.652,467,2.593,506,1.983,548,0.997,549,0.757,575,2.6,593,1.81,607,2.561,608,2.145,620,2.249,624,1.697,625,3.117,626,1.779,628,3.759,636,1.15,640,1.15,649,1.87,650,0.997,651,0.955,654,1.432,659,2.94,660,3.725,666,1.094,674,1.15,675,2.249,676,2.494,677,3.581,678,2.494,679,3.213,680,3.222,681,2.494,682,3.203,683,1.213,684,3.163,685,1.213,686,1.973,687,2.998,688,3.358,689,2.494,690,1.213,692,3.65,693,1.213,695,1.213,696,1.213,697,1.213,702,2.494,703,1.87,707,1.697,709,1.779,710,1.213,711,1.213,712,0.916,716,1.87,717,1.973,718,2.874,721,1.043,723,1.043,727,1.213,729,1.213,731,0.997,732,2.145,733,1.779,734,1.213,735,1.973,737,1.15,738,1.094,739,1.213,741,1.043,744,2.494,745,1.213,746,0.682,747,1.15,748,1.213,749,1.213,750,2.915,751,3.387,752,3.166,753,1.094,754,1.15,755,3.222,756,1.87,757,1.973,758,1.213,759,1.213,760,1.15,761,1.213,762,1.15,763,1.973,764,3.213,765,2.874,766,2.874,767,1.213,768,1.213,769,1.213,770,1.213,771,1.213,772,1.15,773,1.15,774,2.494,775,1.094,776,1.213,777,1.213,778,1.213,779,1.973,780,1.973,781,1.213,782,1.213,783,1.213,784,1.973,785,1.973,786,1.213,787,1.213,788,1.213,789,1.87,790,2.494,791,2.874,792,2.874,793,1.973,794,1.973,795,2.874,796,2.494,797,2.874,798,2.874,799,1.213,800,1.973,801,1.973,802,1.973,803,1.213,804,1.973,805,1.213,806,1.973,807,1.213,808,1.213,809,1.213,810,1.213,811,2.998,812,1.15,813,1.094,814,1.213,815,1.094,816,1.973,817,1.213,818,1.213,819,1.741,820,1.213,821,2.365,822,1.213,823,1.213,824,1.973,825,1.213,826,1.973,827,1.213,828,1.213,829,1.213,830,1.094,831,1.973,832,1.973,833,1.213,834,1.973,835,1.213,836,1.213,837,1.213,838,1.15,839,1.213,840,1.213,841,1.15,842,1.213,843,1.213,844,1.213,845,1.973,846,1.213,847,1.213,848,1.213,849,1.697,850,1.213,851,2.494,852,2.365,853,1.213,854,2.494,855,1.213,856,1.213,857,1.213,858,1.973,859,1.213,860,1.213,861,1.213,862,1.87,863,1.213,864,1.213,865,1.213,866,1.094,867,2.249,868,1.15,869,1.213,870,1.213,871,1.973,872,1.213,873,1.973,874,1.973,875,1.213,876,1.213,877,1.213,878,2.494,879,1.213,880,1.213,881,2.365,882,1.213,883,1.15,884,1.213,885,1.213,886,1.213,887,1.213,888,1.213,889,1.043,890,2.249,891,1.213,892,1.779,893,1.213,894,1.213,895,1.213,896,1.87,897,1.213,898,1.213,899,1.213,900,1.973,901,1.213,902,1.213,903,1.15,904,1.043,905,1.213,906,1.213,907,1.213,908,1.213,909,1.213,910,1.213,911,1.043,912,1.213,913,1.213,914,0.997,915,1.213,916,1.213,917,1.213,918,1.213,919,1.213,920,1.213,921,1.213,922,1.213,923,1.213,924,1.213,925,1.213,926,1.213,927,1.213,928,1.213,929,1.213,930,1.15,931,1.15,932,1.213,933,1.15,934,1.15,935,0.955,936,1.213,937,1.973,938,1.213,939,1.15,940,1.213,941,1.15,942,1.094,943,1.213,944,1.213,945,1.213,946,1.213,947,1.213,948,1.213,949,1.213,950,1.213,951,0.955,952,1.213,953,1.213]],["title/components/MessageArchivedComponent.html",[0,0.568,103,1.241]],["body/components/MessageArchivedComponent.html",[0,1.067,1,1.482,2,0.194,3,0.153,4,2.16,5,1.697,6,1.343,7,0.119,11,1.697,12,2.878,13,2.424,18,0.278,19,0.673,23,0.965,24,0.827,28,0.013,31,0.479,36,0.354,37,0.811,38,0.119,39,0.023,46,1.708,69,1.217,70,2.16,71,1.709,72,2.087,73,2.502,74,1.697,79,1.019,80,1.697,81,1.533,82,1.697,83,1.533,84,1.925,85,1.14,86,1.697,87,1.533,88,1.793,89,1.697,90,1.533,91,1.64,92,1.697,93,1.533,94,1.697,95,1.533,96,1.585,97,2.16,98,1.482,99,1.697,100,1.533,101,1.697,102,1.533,103,2.26,104,2.376,105,1.697,106,1.533,107,1.697,108,1.482,109,1.697,110,1.533,111,1.343,112,2.16,113,1.533,114,1.533,115,1.533,116,1.697,117,1.533,118,1.697,119,1.482,120,1.697,121,1.482,122,1.697,123,1.533,124,1.697,125,1.533,126,1.697,127,0.01,128,0.01,191,0.728,192,0.728,242,2.236,506,1.704,1087,3.409,1208,3.977,1212,3.019,1369,7.061,1370,5.041,1371,6.418,1372,5.041,1373,5.041,1374,5.041,1375,5.041,1376,5.041]],["title/modules/NetworkModule.html",[133,1.2,146,2.76]],["body/modules/NetworkModule.html",[2,0.183,3,0.183,7,0.142,28,0.013,36,0.446,37,0.971,38,0.169,39,0.027,69,1.456,127,0.011,128,0.011,133,2.107,135,2.97,136,3.87,137,3.257,138,3.324,146,5.644,149,3.38,150,1.456,151,3.106,153,3.529,266,4.222,1377,5.263,1378,5.263,1379,5.263,1380,5.542,1381,6.03,1382,6.03,1383,6.03]],["title/classes/Node.html",[39,0.019,677,1.847]],["body/classes/Node.html",[2,0.058,3,0.121,6,0.506,7,0.045,18,0.105,19,0.418,23,0.364,24,0.872,27,1.193,28,0.013,29,1.229,30,1.376,31,0.523,32,1.011,33,1.118,34,0.795,36,0.303,38,0.148,39,0.023,42,1.26,45,1.416,46,0.978,58,0.98,60,2.862,64,0.98,71,0.833,79,0.275,111,0.833,127,0.005,128,0.005,174,0.738,179,1.08,180,1.668,187,1.69,191,0.667,192,0.452,193,1.86,195,0.686,198,1.612,203,2.795,210,1.439,215,0.559,236,0.855,244,1.272,253,0.897,265,0.765,267,0.86,275,2.637,280,2.705,281,1.253,315,0.686,316,0.686,319,1.564,329,1.68,336,2.269,348,2.375,356,1.69,357,2.496,431,3.119,456,2.685,467,2.524,506,2.015,548,0.936,549,0.711,575,2.515,593,2.388,607,2.486,608,2.054,620,2.153,624,1.612,625,3.053,626,1.69,628,3.705,636,1.08,640,1.08,649,1.777,650,0.936,651,0.897,654,1.36,659,2.883,660,3.658,666,1.027,674,1.08,675,2.153,676,2.388,677,3.575,678,2.388,679,3.119,680,3.136,681,3.291,682,3.125,683,1.139,684,3.059,685,1.139,686,1.874,687,2.9,688,3.725,689,2.388,690,1.139,692,3.569,693,1.139,695,1.139,696,1.139,697,1.139,702,2.388,703,1.777,704,1.874,707,1.612,709,1.69,710,1.139,711,1.139,712,0.86,716,1.777,717,1.874,718,2.768,721,0.98,723,0.98,727,1.139,729,1.139,731,0.936,732,2.054,733,1.69,734,1.139,735,1.874,737,1.08,738,1.027,739,1.139,741,0.98,744,2.388,745,1.139,746,0.64,747,1.08,748,1.139,749,1.139,750,2.83,751,3.445,752,3.187,753,1.027,754,1.08,755,3.136,756,1.777,757,1.874,758,1.139,759,1.139,760,1.08,761,1.139,762,1.08,763,1.139,764,2.624,765,1.139,766,1.139,767,1.874,768,1.874,769,1.874,770,1.874,771,1.874,772,1.777,773,1.777,774,3.478,775,2.496,776,2.768,777,2.768,778,2.768,779,1.874,780,1.874,781,1.874,782,1.139,783,1.139,784,1.874,785,1.874,786,1.139,787,1.139,788,1.139,789,1.777,790,2.388,791,2.768,792,2.768,793,1.874,794,1.874,795,2.768,796,2.388,797,2.768,798,2.768,799,1.139,800,1.874,801,1.874,802,1.874,803,1.139,804,1.874,805,1.139,806,1.874,807,1.139,808,1.139,809,1.139,810,1.139,811,2.9,812,1.08,813,1.027,814,1.139,815,1.027,816,1.874,817,1.139,818,1.139,819,1.667,820,1.139,821,2.264,822,1.139,823,1.139,824,1.874,825,1.139,826,1.874,827,1.139,828,1.139,829,1.139,830,1.027,831,1.874,832,1.874,833,1.139,834,1.874,835,1.139,836,1.139,837,1.139,838,1.08,839,1.139,840,1.139,841,1.08,842,1.139,843,1.139,844,1.139,845,1.874,846,1.139,847,1.139,848,1.139,849,1.612,850,1.139,851,2.388,852,2.264,853,1.139,854,2.388,855,1.139,856,1.139,857,1.139,858,1.874,859,1.139,860,1.139,861,1.139,862,1.777,863,1.139,864,1.139,865,1.139,866,1.027,867,2.153,868,1.08,869,1.139,870,1.139,871,1.874,872,1.139,873,1.874,874,1.874,875,1.139,876,1.139,877,1.139,878,2.388,879,1.139,880,1.139,881,2.264,882,1.139,883,1.08,884,1.139,885,1.139,886,1.139,887,1.139,888,1.139,889,0.98,890,2.153,891,1.139,892,1.69,893,1.139,894,1.139,895,1.139,896,1.777,897,1.139,898,1.139,899,1.139,900,1.874,901,1.139,902,1.139,903,1.08,904,0.98,905,1.139,906,1.139,907,1.139,908,1.139,909,1.139,910,1.139,911,0.98,912,1.139,913,1.139,914,0.936,915,1.139,916,1.139,917,1.139,918,1.139,919,1.139,920,1.139,921,1.139,922,1.139,923,1.139,924,1.139,925,1.139,926,1.139,927,1.139,928,1.139,929,1.139,930,1.08,931,1.08,932,1.139,933,1.08,934,1.08,935,0.897,936,1.139,937,1.874,938,1.139,939,1.08,940,1.139,941,1.08,942,1.027,943,1.139,944,1.139,945,1.139,946,1.139,947,1.139,948,1.139,949,1.139,950,1.139,951,0.897,952,1.139,953,1.139,1384,3.129,1385,1.902,1386,1.902,1387,1.902,1388,1.902,1389,1.902,1390,1.902,1391,1.902,1392,1.902]],["title/components/NumericComponent.html",[0,0.568,106,1.241]],["body/components/NumericComponent.html",[0,1.031,1,1.112,2,0.16,3,0.115,4,1.272,5,1.272,6,1.007,7,0.089,9,1.278,10,2.205,11,1.272,12,2.809,13,2.254,14,1.98,16,1.98,18,0.209,19,0.555,21,1.237,22,2.676,23,1.013,24,1.031,27,1.238,28,0.013,29,1.694,31,0.494,32,1.21,33,1.055,36,0.385,37,0.609,38,0.089,39,0.017,42,2.665,44,1.797,46,1.401,69,0.913,70,1.782,71,1.41,72,1.722,73,2.228,74,1.272,79,1.006,80,1.272,81,1.149,82,1.272,83,1.149,84,1.79,85,1.197,86,1.272,87,1.149,88,1.732,89,1.272,90,1.149,91,1.23,92,1.272,93,1.149,94,1.272,95,1.149,96,1.189,97,1.782,98,1.112,99,1.272,100,1.149,101,1.272,102,1.149,103,1.149,104,1.272,105,1.272,106,2.013,107,1.272,108,1.112,109,1.272,110,1.149,111,1.007,112,1.782,113,1.149,114,1.61,115,1.149,116,1.272,117,1.149,118,1.272,119,1.112,120,1.272,121,1.112,122,1.272,123,1.149,124,1.272,125,1.149,126,1.272,127,0.008,128,0.008,161,1.007,191,0.546,192,0.546,213,3.627,217,3.557,219,3.153,220,2.882,221,3.652,222,3.652,223,3.652,228,2.882,229,1.557,230,2.607,233,1.644,252,2.727,263,3.268,281,1.092,288,1.948,289,1.948,290,1.948,291,1.948,292,1.948,295,1.948,310,1.041,317,1.948,319,0.974,320,1.948,324,1.948,325,1.948,439,3.845,456,2.306,484,3.965,513,3.759,515,2.265,545,2.557,593,2.302,598,4.201,599,3.58,600,3.36,601,3.58,942,2.859,972,4.477,1393,3.781,1394,5.294,1395,5.294,1396,6.62,1397,5.294,1398,3.781,1399,3.781,1400,3.781,1401,3.781,1402,3.781,1403,3.299,1404,3.299,1405,3.299,1406,5.294,1407,3.781,1408,5.294,1409,4.621,1410,5.294,1411,5.294,1412,5.294,1413,5.294,1414,5.294]],["title/interfaces/NumericalSimulation.html",[236,0.755,598,2.59]],["body/interfaces/NumericalSimulation.html",[2,0.173,3,0.173,7,0.135,18,0.315,19,0.726,28,0.013,30,1.417,31,0.604,38,0.176,44,2.195,46,1.466,127,0.01,128,0.01,236,1.437,281,1.488,456,2.705,484,4.651,513,4.409,593,3.375,594,4.498,595,3.618,596,4.141,597,4.141,598,4.737,599,5.251,600,4.928,601,5.251]],["title/interfaces/OdPair.html",[236,0.755,275,1.774]],["body/interfaces/OdPair.html",[2,0.061,3,0.126,6,0.538,7,0.048,18,0.111,19,0.436,24,0.26,27,1.207,28,0.013,29,1.261,30,1.363,31,0.422,33,0.91,34,0.844,36,0.312,38,0.152,39,0.022,42,1.323,45,0.913,46,1.014,58,1.04,60,2.929,64,1.04,71,0.875,111,0.875,127,0.005,128,0.005,174,0.783,179,1.146,180,1.728,187,1.09,191,0.6,192,0.291,193,1.928,195,0.728,198,1.693,203,2.82,210,1.5,215,0.594,236,0.975,244,1.318,253,0.952,265,0.812,267,0.913,275,2.792,280,2.934,281,1.304,315,0.728,316,0.728,319,1.601,329,1.703,336,2.323,348,2.386,356,1.775,357,2.587,431,2.359,456,2.651,467,2.59,506,1.983,548,0.994,549,0.755,575,2.596,593,1.806,607,2.696,608,2.141,620,2.244,624,1.693,625,3.114,626,1.775,628,3.756,636,1.146,640,1.146,649,1.866,650,0.994,651,0.952,654,1.428,659,2.937,660,3.722,666,1.09,674,1.146,675,2.244,676,2.489,677,3.592,678,2.489,679,3.748,680,3.218,681,2.489,682,3.199,683,1.209,684,3.158,685,1.209,686,1.968,687,3.646,688,3.354,689,2.489,690,1.209,692,3.646,693,1.209,695,1.209,696,1.209,697,1.209,702,2.489,703,1.866,707,1.693,709,1.775,710,1.209,711,1.209,712,0.913,716,1.866,717,1.968,718,2.869,721,1.04,723,1.04,727,1.209,729,1.209,731,0.994,732,2.141,733,1.775,734,1.209,735,1.968,737,1.146,738,1.09,739,1.209,741,1.04,744,2.489,745,1.209,746,0.679,747,1.146,748,1.209,749,1.209,750,2.911,751,3.383,752,3.163,753,1.09,754,1.146,755,3.722,756,2.359,757,1.968,758,1.209,759,1.209,760,1.146,761,1.209,762,1.146,763,1.209,764,2.719,765,1.209,766,1.209,767,1.209,768,1.209,769,1.209,770,1.209,771,1.209,772,1.146,773,1.146,774,2.489,775,1.09,776,1.209,777,1.209,778,1.209,779,1.968,780,1.968,781,1.209,782,1.209,783,1.209,784,1.968,785,1.968,786,1.209,787,1.209,788,1.209,789,1.866,790,2.489,791,2.869,792,2.869,793,1.968,794,1.968,795,2.869,796,2.489,797,2.869,798,2.869,799,1.209,800,1.968,801,1.968,802,1.968,803,1.209,804,1.968,805,1.209,806,1.968,807,1.209,808,1.209,809,1.209,810,1.209,811,2.993,812,1.146,813,1.09,814,1.209,815,1.09,816,1.968,817,1.209,818,1.209,819,1.737,820,1.209,821,2.359,822,1.209,823,1.209,824,1.968,825,1.209,826,1.968,827,1.209,828,1.209,829,1.209,830,1.09,831,1.968,832,1.968,833,1.209,834,1.968,835,1.209,836,1.209,837,1.209,838,1.146,839,1.209,840,1.209,841,1.146,842,1.209,843,1.209,844,1.209,845,1.968,846,1.209,847,1.209,848,1.209,849,1.693,850,1.209,851,2.489,852,2.359,853,1.209,854,2.489,855,1.209,856,1.209,857,1.209,858,1.968,859,1.209,860,1.209,861,1.209,862,1.866,863,1.209,864,1.209,865,1.209,866,1.09,867,2.244,868,1.146,869,1.209,870,1.209,871,1.968,872,1.209,873,1.968,874,1.968,875,1.209,876,1.209,877,1.209,878,2.489,879,1.209,880,1.209,881,2.359,882,1.209,883,1.146,884,1.209,885,1.209,886,1.209,887,1.209,888,1.209,889,1.04,890,2.244,891,1.209,892,1.775,893,1.209,894,1.209,895,1.209,896,1.866,897,1.209,898,1.209,899,1.209,900,1.968,901,1.209,902,1.209,903,1.146,904,1.04,905,1.209,906,1.209,907,1.209,908,1.209,909,1.209,910,1.209,911,1.04,912,1.209,913,1.209,914,0.994,915,1.209,916,1.209,917,1.209,918,1.209,919,1.209,920,1.209,921,1.209,922,1.209,923,1.209,924,1.209,925,1.209,926,1.209,927,1.209,928,1.209,929,1.209,930,1.146,931,1.146,932,1.209,933,1.146,934,1.146,935,0.952,936,1.209,937,1.968,938,1.209,939,1.146,940,1.209,941,1.146,942,1.09,943,1.209,944,1.209,945,1.209,946,1.209,947,1.209,948,1.209,949,1.209,950,1.209,951,0.952,952,1.209,953,1.209]],["title/interfaces/Path.html",[203,1.473,236,0.755]],["body/interfaces/Path.html",[2,0.158,3,0.158,7,0.123,18,0.363,19,0.689,27,1.058,28,0.013,29,1.39,30,1.341,31,0.563,36,0.289,38,0.155,39,0.024,46,1.107,127,0.01,128,0.01,203,3.075,215,1.538,236,1.216,319,1.348,329,1.222,336,1.957,456,2.858,506,1.734,638,4.772,659,2.856,677,3.76,750,3.998,752,3.236,813,2.826,819,2.187,849,2.695,889,3.385,890,4.278,892,4.342,911,2.695,1140,4.566,1141,4.566,1142,4.566,1144,4.566,1148,4.566,1151,4.566,1153,4.566,1155,4.566,1156,5.734,1157,4.566,1158,4.566,1159,4.566,1160,4.566,1161,4.566,1162,4.566,1163,3.8,1164,4.566]],["title/classes/PeriodsChanged.html",[39,0.019,1415,2.445]],["body/classes/PeriodsChanged.html",[2,0.157,3,0.157,7,0.122,9,1.868,18,0.286,19,0.684,23,0.991,24,0.921,28,0.013,31,0.62,32,1.025,33,0.894,36,0.36,38,0.186,39,0.035,44,2.44,79,0.747,85,1.475,127,0.01,128,0.01,150,1.812,161,1.379,191,0.747,192,0.747,229,2.359,244,1.425,281,1.412,310,1.425,506,1.959,546,3.1,549,1.936,552,2.666,583,4.142,584,3.827,585,3.285,1057,4.267,1058,2.795,1062,2.342,1070,3.866,1415,4.495,1416,3.285,1417,6.526,1418,5.176,1419,4.281,1420,4.281,1421,2.795,1422,3.5,1423,3.5,1424,3.5]],["title/components/PrivacyComponent.html",[0,0.568,108,1.2]],["body/components/PrivacyComponent.html",[0,1.017,1,1.275,2,0.176,3,0.131,4,1.459,5,1.459,6,1.155,7,0.102,9,1.404,10,2.368,11,1.459,12,2.844,13,2.53,14,2.175,16,2.175,18,0.239,21,1.359,22,2.531,23,1.256,24,0.749,27,0.698,28,0.013,29,1.231,36,0.239,37,0.698,38,0.102,39,0.02,40,4.45,45,3.407,46,1.74,48,2.341,69,1.047,70,1.957,71,1.549,72,1.891,73,2.36,74,1.459,79,0.84,80,1.459,81,1.318,82,1.459,83,1.318,84,1.857,85,0.98,86,1.459,87,1.318,88,1.709,89,1.459,90,1.318,91,1.41,92,1.459,93,1.318,94,1.459,95,1.318,96,2.299,97,1.957,98,1.275,99,1.459,100,1.318,101,1.459,102,1.318,103,1.318,104,1.459,105,1.459,106,1.318,107,1.459,108,2.062,109,1.459,110,1.318,111,1.155,112,1.957,113,1.318,114,1.318,115,1.318,116,1.459,117,1.318,118,1.459,119,1.275,120,1.459,121,1.275,122,1.459,123,1.318,124,1.459,125,1.318,126,1.459,127,0.011,128,0.009,138,3.048,211,5.81,327,3.141,536,4.588,638,4.223,692,3.981,756,3.302,1010,2.099,1106,4.588,1237,4.223,1409,5.075,1425,4.335,1426,5.815,1427,5.815,1428,4.335,1429,4.335,1430,6.822,1431,6.12,1432,4.588,1433,5.815,1434,5.815,1435,5.815,1436,5.815,1437,5.815,1438,5.815,1439,5.815,1440,5.815,1441,7.012,1442,5.815,1443,5.815,1444,5.075,1445,5.815,1446,5.815,1447,5.815,1448,4.223,1449,5.815,1450,5.815,1451,7.012,1452,5.815,1453,5.815,1454,5.815,1455,5.075,1456,4.588,1457,5.815]],["title/classes/Relation.html",[39,0.019,811,2.318]],["body/classes/Relation.html",[2,0.06,3,0.124,6,0.529,7,0.047,18,0.11,19,0.431,23,0.38,24,0.673,27,1.203,28,0.013,29,1.252,30,1.37,31,0.419,32,0.393,33,0.968,34,0.83,36,0.31,38,0.151,39,0.024,42,1.305,45,0.898,46,1.187,58,1.023,60,2.911,64,1.67,71,1.094,79,0.287,111,0.863,127,0.005,128,0.005,174,0.77,179,1.841,180,1.712,187,1.072,191,0.685,192,0.468,193,1.909,195,0.717,198,1.67,203,2.8,210,1.483,215,0.584,236,0.877,244,1.305,253,0.937,265,0.799,267,0.898,275,2.682,280,2.762,281,1.226,315,0.717,316,0.717,319,1.59,329,1.697,336,2.308,348,2.38,356,1.751,357,2.561,431,2.333,456,2.643,467,2.572,506,1.997,548,0.978,549,0.743,575,2.574,593,1.786,607,2.538,608,2.116,620,2.219,624,1.67,625,3.097,626,1.751,628,3.742,636,1.127,640,1.127,649,1.841,650,0.978,651,0.937,654,1.409,659,2.922,660,3.704,666,1.072,674,1.127,675,2.561,676,2.841,677,3.571,678,2.461,679,3.184,680,3.195,681,2.461,682,3.179,683,1.189,684,3.13,685,1.189,686,1.942,687,2.967,688,3.769,689,2.461,690,1.189,692,3.625,693,1.189,695,1.189,696,1.189,697,1.189,702,2.461,703,1.841,707,1.67,709,1.751,710,1.189,711,1.189,712,0.898,716,1.841,717,1.942,718,2.841,721,1.023,723,1.023,727,1.189,729,1.189,731,0.978,732,2.116,733,1.751,734,1.189,735,1.942,737,1.127,738,1.072,739,1.189,741,1.023,744,2.461,745,1.189,746,0.668,747,1.127,748,1.189,749,1.189,750,2.889,751,3.359,752,3.144,753,1.072,754,1.127,755,3.195,756,1.841,757,1.942,758,1.189,759,1.189,760,1.127,761,1.189,762,1.127,763,1.189,764,3.625,765,1.189,766,1.189,767,1.189,768,1.189,769,1.189,770,1.189,771,1.189,772,1.127,773,1.127,774,2.461,775,1.072,776,1.189,777,1.189,778,1.189,779,1.942,780,1.942,781,1.189,782,1.189,783,1.189,784,1.942,785,1.942,786,1.189,787,1.189,788,1.189,789,1.841,790,2.461,791,2.841,792,2.841,793,1.942,794,1.942,795,2.841,796,2.461,797,2.841,798,2.841,799,1.189,800,1.942,801,1.942,802,1.942,803,1.189,804,1.942,805,1.189,806,1.942,807,1.189,808,1.189,809,1.189,810,1.189,811,3.359,812,1.841,813,1.751,814,1.942,815,1.751,816,3.359,817,1.942,818,1.189,819,1.718,820,1.189,821,2.333,822,1.189,823,1.189,824,1.942,825,1.189,826,1.942,827,1.189,828,1.189,829,1.189,830,1.072,831,1.942,832,1.942,833,1.189,834,1.942,835,1.189,836,1.189,837,1.189,838,1.127,839,1.189,840,1.189,841,1.127,842,1.189,843,1.189,844,1.189,845,1.942,846,1.189,847,1.189,848,1.189,849,1.67,850,1.189,851,2.461,852,2.333,853,1.189,854,2.461,855,1.189,856,1.189,857,1.189,858,1.942,859,1.189,860,1.189,861,1.189,862,1.841,863,1.189,864,1.189,865,1.189,866,1.072,867,2.219,868,1.127,869,1.189,870,1.189,871,1.942,872,1.189,873,1.942,874,1.942,875,1.189,876,1.189,877,1.189,878,2.461,879,1.189,880,1.189,881,2.333,882,1.189,883,1.127,884,1.189,885,1.189,886,1.189,887,1.189,888,1.189,889,1.023,890,2.219,891,1.189,892,1.751,893,1.189,894,1.189,895,1.189,896,1.841,897,1.189,898,1.189,899,1.189,900,1.942,901,1.189,902,1.189,903,1.127,904,1.023,905,1.189,906,1.189,907,1.189,908,1.189,909,1.189,910,1.189,911,1.023,912,1.189,913,1.189,914,0.978,915,1.189,916,1.189,917,1.189,918,1.189,919,1.189,920,1.189,921,1.189,922,1.189,923,1.189,924,1.189,925,1.189,926,1.189,927,1.189,928,1.189,929,1.189,930,1.127,931,1.127,932,1.189,933,1.127,934,1.127,935,0.937,936,1.189,937,1.942,938,1.189,939,1.127,940,1.189,941,1.127,942,1.072,943,1.189,944,1.189,945,1.189,946,1.189,947,1.189,948,1.189,949,1.189,950,1.189,951,0.937,952,1.189,953,1.189,1458,3.242,1459,1.985,1460,1.985]],["title/classes/Reset.html",[39,0.019,150,0.985]],["body/classes/Reset.html",[2,0.157,3,0.157,7,0.122,9,1.868,18,0.286,19,0.684,23,0.991,24,0.921,28,0.013,31,0.62,32,1.025,33,0.894,36,0.36,38,0.186,39,0.035,44,2.44,79,0.747,85,1.475,127,0.01,128,0.01,150,1.868,161,1.379,191,0.747,192,0.747,229,2.359,244,1.425,281,1.412,310,1.425,506,1.959,546,3.1,549,1.936,552,2.666,583,3.285,584,3.827,585,3.285,1057,4.267,1058,2.795,1062,2.342,1070,3.866,1415,4.281,1416,3.285,1419,4.281,1420,4.281,1421,2.795,1422,3.5,1423,4.413,1424,3.5,1461,6.526,1462,5.176]],["title/injectables/SchedulerService.html",[242,1.422,1463,2.59]],["body/injectables/SchedulerService.html",[2,0.09,3,0.161,7,0.07,18,0.423,21,1.039,23,0.851,24,0.816,27,1.265,28,0.013,29,1.499,30,1.327,31,0.442,32,1.055,36,0.407,37,0.478,38,0.07,39,0.014,42,2.675,44,1.954,46,1.721,48,1.196,53,3.508,60,2.097,79,0.854,84,1.286,127,0.007,128,0.007,150,1.604,187,1.605,191,0.854,192,0.854,203,1.923,242,1.856,264,2.79,265,3.014,266,3.047,267,3.117,268,3.542,269,3.753,270,3.542,275,1.292,281,0.953,302,1.687,303,1.687,304,2.344,305,2.344,319,1.826,326,2.012,327,1.605,329,1.609,345,2.411,347,3.117,352,3.393,354,2.593,386,3.358,407,2.344,456,1.549,497,3.542,506,1.286,527,5.243,543,2.158,581,4.65,607,2.012,608,3.423,625,2.987,626,2.401,644,2.158,650,2.19,654,3.079,731,2.624,732,1.531,746,2.438,752,2.624,819,3.171,866,3.42,868,2.525,883,2.525,911,2.745,914,2.624,1010,1.923,1023,3.229,1073,4.542,1089,4,1119,3.508,1216,3.542,1224,3.381,1432,3.508,1448,2.158,1456,4.666,1463,2.822,1464,2.971,1465,4.446,1466,4.446,1467,4.446,1468,2.593,1469,4.203,1470,4.203,1471,2.971,1472,2.971,1473,4.446,1474,4.446,1475,2.971,1476,6.646,1477,5.8,1478,6.646,1479,7.583,1480,4.446,1481,2.971,1482,3.88,1483,4.446,1484,4.446,1485,2.971,1486,7.243,1487,2.593,1488,2.344,1489,2.344,1490,2.971,1491,2.971,1492,2.971,1493,2.971,1494,2.971,1495,2.971,1496,2.971,1497,2.971,1498,2.971,1499,5.161,1500,5.328,1501,2.971,1502,5.914,1503,2.971,1504,2.971,1505,2.971,1506,2.971,1507,2.971,1508,2.971,1509,2.971,1510,2.971,1511,2.971,1512,2.971,1513,5.328,1514,5.185,1515,2.971,1516,5.914,1517,2.971,1518,2.971,1519,2.971,1520,2.971,1521,5.914,1522,2.971,1523,4.446,1524,4.446,1525,4.446,1526,4.446,1527,4.446,1528,3.88,1529,2.971,1530,2.593,1531,2.593,1532,5.328,1533,4.65,1534,5.328,1535,5.328,1536,5.328,1537,3.88,1538,5.328,1539,2.971,1540,2.971,1541,2.971,1542,2.971,1543,2.971,1544,2.971,1545,2.971,1546,2.971,1547,2.971,1548,2.971,1549,2.971,1550,2.971]],["title/components/SearchForTheAreaComponent.html",[0,0.568,110,1.241]],["body/components/SearchForTheAreaComponent.html",[0,0.994,1,0.981,2,0.147,3,0.101,4,1.123,5,1.123,6,0.889,7,0.079,9,1.169,10,2.058,11,1.123,12,2.773,13,2.173,14,1.812,16,1.812,18,0.345,19,0.508,21,1.132,22,2.58,23,0.927,24,1.025,27,1.236,28,0.013,29,1.704,30,0.808,31,0.496,32,0.661,33,0.837,36,0.367,37,0.537,38,0.079,39,0.015,46,0.706,69,0.806,70,1.63,71,1.29,72,1.575,73,2.106,74,1.123,79,0.903,80,1.123,81,1.015,82,1.123,83,1.015,84,1.854,85,1.289,86,1.123,87,1.015,88,1.552,89,1.123,90,1.015,91,1.085,92,1.123,93,1.015,94,1.123,95,1.015,96,1.049,97,1.63,98,0.981,99,1.123,100,1.015,101,1.123,102,1.015,103,1.015,104,1.123,105,1.123,106,1.015,107,1.123,108,0.981,109,1.123,110,1.902,111,2.046,112,1.63,113,1.015,114,1.015,115,1.015,116,1.123,117,1.015,118,1.123,119,0.981,120,1.123,121,0.981,122,1.123,123,1.015,124,1.123,125,1.015,126,1.123,127,0.009,128,0.007,191,0.699,192,0.699,213,3.521,217,3.412,219,3.006,220,2.69,221,3.521,222,3.521,223,3.521,228,2.69,229,1.424,230,2.386,233,1.451,252,2.495,259,3.979,260,4.15,264,2.951,281,1.118,288,1.719,289,1.719,290,1.719,291,1.719,292,1.719,295,1.719,301,1.803,302,1.895,308,1.748,310,2.016,317,1.719,319,1.249,320,1.719,323,2.118,324,1.719,325,1.719,326,3.378,327,1.803,345,1.51,347,2.58,348,1.015,352,2.808,353,3.518,364,3.276,365,3.074,473,5.64,482,1.999,712,2.192,746,2.332,775,2.616,1019,4.227,1067,2.495,1092,2.424,1216,3.747,1222,2.913,1223,2.913,1224,3.074,1227,2.913,1230,5.46,1238,4.935,1253,2.913,1255,2.913,1262,2.913,1468,2.913,1469,4.935,1488,2.633,1499,2.913,1514,4.231,1533,2.913,1551,7.582,1552,6.617,1553,2.913,1554,4.227,1555,4.227,1556,4.844,1557,3.337,1558,3.337,1559,3.337,1560,3.337,1561,4.844,1562,3.337,1563,3.337,1564,3.337,1565,3.337,1566,3.337,1567,3.337,1568,2.913,1569,3.337,1570,4.844,1571,3.337,1572,4.227,1573,3.337,1574,3.337,1575,3.337,1576,3.337,1577,3.337,1578,3.337,1579,3.337,1580,3.337,1581,3.337,1582,3.337,1583,3.337,1584,3.337,1585,3.337,1586,3.337,1587,4.844,1588,3.337,1589,2.913,1590,3.337,1591,3.337,1592,3.337,1593,3.337,1594,3.337,1595,3.337,1596,3.337,1597,2.913]],["title/components/SelectionOfTheAreaComponent.html",[0,0.568,113,1.241]],["body/components/SelectionOfTheAreaComponent.html",[0,1.003,1,1.01,2,0.15,3,0.104,4,1.156,5,1.156,6,0.915,7,0.081,9,1.194,10,2.092,11,1.156,12,2.782,13,2.193,14,1.85,16,1.85,18,0.35,19,0.518,21,1.155,22,2.603,23,0.947,24,1.029,27,1.268,28,0.013,29,1.667,30,0.825,31,0.474,32,0.68,33,0.854,34,2.068,36,0.415,37,0.553,38,0.081,39,0.016,46,0.727,48,3.11,69,0.829,70,1.665,71,1.317,72,1.609,73,2.134,74,1.156,79,0.837,80,1.156,81,1.044,82,1.156,83,1.044,84,1.885,85,1.31,86,1.156,87,1.044,88,1.635,89,1.156,90,1.044,91,1.117,92,1.156,93,1.044,94,1.156,95,1.044,96,1.08,97,1.665,98,1.01,99,1.156,100,1.044,101,1.156,102,1.044,103,1.044,104,1.156,105,1.156,106,1.044,107,1.156,108,1.01,109,1.156,110,1.044,111,0.915,112,1.665,113,1.928,114,2.32,115,1.044,116,1.156,117,1.044,118,1.156,119,1.01,120,1.156,121,1.01,122,1.156,123,1.044,124,1.156,125,1.044,126,1.156,127,0.007,128,0.007,161,0.915,191,0.496,192,0.837,213,3.546,217,3.446,219,3.041,220,2.734,221,3.552,222,3.552,223,3.552,228,2.734,229,1.454,230,2.436,233,1.493,252,2.548,259,4.025,260,4.192,263,3.167,264,2.991,265,2.552,266,3.266,288,1.77,289,1.77,290,1.77,291,1.77,292,1.77,295,1.77,296,2.495,300,3.592,301,1.855,302,1.95,303,1.95,306,1.855,307,1.555,309,2.323,310,0.946,315,1.24,316,1.24,317,1.77,319,1.494,320,1.77,323,2.18,324,1.77,325,1.77,326,1.555,327,1.855,364,3.345,365,3.139,515,2.058,675,2.671,712,3.34,731,3.122,789,3.6,889,2.548,903,2.808,1010,2.092,1016,2.998,1224,3.139,1304,2.495,1305,2.998,1456,5.002,1553,2.998,1554,4.317,1555,4.317,1598,7.631,1599,6.66,1600,3.435,1601,3.435,1602,3.435,1603,3.435,1604,3.435,1605,3.435,1606,3.435,1607,3.435,1608,3.435,1609,6.34,1610,6.294,1611,3.435,1612,3.435,1613,4.946,1614,3.435,1615,3.435,1616,3.435,1617,3.435,1618,3.435,1619,3.435,1620,3.435,1621,3.435,1622,3.435,1623,3.435,1624,3.435,1625,3.435,1626,4.946,1627,4.946,1628,4.946,1629,4.946,1630,4.317,1631,4.317]],["title/modules/SharedModule.html",[133,1.2,147,2.445]],["body/modules/SharedModule.html",[2,0.193,3,0.151,7,0.118,27,0.803,28,0.013,36,0.46,37,0.803,38,0.175,39,0.023,69,1.204,93,2.523,100,2.544,103,2.544,127,0.01,128,0.01,133,1.875,135,2.457,136,3.795,137,2.694,138,2.772,147,5.093,149,3.007,150,1.204,151,2.57,153,3.46,194,2.694,200,4.63,239,3.374,245,4.312,301,2.694,329,1.166,506,1.204,955,3.936,1344,5.237,1514,3.374,1632,4.354,1633,4.354,1634,4.354,1635,4.354,1636,4.354,1637,6.375,1638,6.375,1639,5.564,1640,4.354,1641,5.564,1642,4.354,1643,5.564,1644,5.564,1645,5.564,1646,4.354,1647,4.354,1648,4.989,1649,4.989,1650,4.354,1651,4.354,1652,3.936,1653,4.989]],["title/interfaces/Simulation.html",[44,1.2,236,0.755]],["body/interfaces/Simulation.html",[2,0.18,3,0.18,7,0.14,18,0.328,19,0.745,28,0.013,30,1.362,31,0.531,38,0.179,44,2.402,46,1.729,127,0.011,128,0.011,236,1.457,281,1.359,456,2.072,484,3.562,513,3.377,593,3.661,594,4.691,595,3.774,596,4.319,597,4.319,598,4.998,599,4.022,600,3.774,601,4.022]],["title/classes/SimulationChanged.html",[39,0.019,1419,2.445]],["body/classes/SimulationChanged.html",[2,0.155,3,0.155,7,0.121,9,1.862,18,0.283,19,0.679,23,0.98,24,0.916,28,0.013,31,0.629,32,1.014,33,0.884,36,0.358,38,0.186,39,0.035,44,2.436,79,0.739,85,1.465,127,0.01,128,0.01,150,1.805,161,1.364,191,0.739,192,0.739,229,2.353,244,1.409,281,1.409,310,1.409,506,1.955,546,3.067,549,1.915,552,2.638,583,3.25,584,3.819,585,3.25,704,4.478,1057,4.255,1058,2.766,1062,2.317,1070,3.851,1415,4.26,1416,3.25,1419,4.478,1420,4.26,1421,2.766,1422,4.384,1423,3.463,1424,3.463,1654,6.482,1655,5.121]],["title/components/SimulationComponent.html",[0,0.568,115,1.241]],["body/components/SimulationComponent.html",[0,0.971,1,0.909,2,0.139,3,0.094,4,1.041,5,1.041,6,0.824,7,0.073,9,1.106,10,1.969,11,1.041,12,2.75,13,2.122,14,1.713,16,1.713,18,0.333,19,0.48,21,1.07,22,2.519,23,0.877,24,1.045,27,1.199,28,0.013,29,1.663,30,1.195,31,0.564,32,0.907,33,0.791,36,0.411,37,0.498,38,0.073,39,0.014,44,2.153,48,2.885,69,0.746,70,1.542,71,1.22,72,1.49,73,2.03,74,1.041,79,0.871,80,1.041,81,0.94,82,1.041,83,0.94,84,1.846,85,1.035,86,1.041,87,0.94,88,1.576,89,1.041,90,0.94,91,1.006,92,1.041,93,0.94,94,1.041,95,0.94,96,0.972,97,1.542,98,0.909,99,1.041,100,0.94,101,1.041,102,0.94,103,0.94,104,1.041,105,1.041,106,0.94,107,1.041,108,0.909,109,1.041,110,0.94,111,0.824,112,1.542,113,0.94,114,1.393,115,1.834,116,1.041,117,0.94,118,1.041,119,0.909,120,1.041,121,0.909,122,1.041,123,0.94,124,1.041,125,0.94,126,1.041,127,0.007,128,0.007,161,0.824,174,1.199,191,0.661,192,0.661,213,3.453,217,3.321,219,2.914,220,2.573,221,3.437,222,3.437,223,3.437,228,2.573,229,1.347,230,2.256,233,1.344,244,1.66,252,2.36,259,3.857,260,4.04,261,2.246,262,4.898,263,3.158,264,2.845,281,1.206,288,1.593,289,1.593,290,1.593,291,1.593,292,1.593,295,1.593,301,1.67,302,1.756,310,0.851,315,1.116,316,1.116,317,1.593,319,1.555,320,1.593,323,1.962,324,1.593,325,1.593,336,1.157,348,1.834,349,4.853,364,3.098,365,2.907,408,2.246,497,3.613,499,4.758,500,4.381,502,5.32,503,5.886,508,3.613,509,3.997,512,2.907,513,2.601,520,3.997,545,2.091,551,2.699,552,1.593,553,3.997,554,3.997,593,3.116,721,3.107,741,3.474,830,3.258,972,4.079,1403,2.699,1404,2.699,1405,2.699,1421,3.478,1470,4.304,1489,2.439,1656,3.092,1657,4.58,1658,4.58,1659,5.32,1660,4.58,1661,3.092,1662,3.092,1663,3.092,1664,3.092,1665,3.092,1666,3.092,1667,3.092,1668,3.092,1669,3.092,1670,3.092,1671,3.092,1672,3.092,1673,3.092,1674,2.699,1675,2.439,1676,6.44,1677,3.092,1678,4.58,1679,2.699,1680,3.092,1681,2.699,1682,3.092,1683,3.092,1684,3.092,1685,3.092,1686,3.092,1687,3.092,1688,3.092,1689,4.58,1690,3.092,1691,3.092,1692,3.092,1693,3.092,1694,4.58,1695,4.58,1696,4.58,1697,4.58,1698,4.58,1699,4.58,1700,4.58]],["title/classes/SimulationEnded.html",[39,0.019,1420,2.445]],["body/classes/SimulationEnded.html",[2,0.156,3,0.156,7,0.121,9,1.865,18,0.284,19,0.682,23,0.985,24,0.918,28,0.013,31,0.619,32,1.019,33,0.889,36,0.359,38,0.186,39,0.035,44,2.438,79,0.743,85,1.47,127,0.01,128,0.01,150,1.808,161,1.371,191,0.743,192,0.743,229,2.356,244,2.126,281,1.41,310,1.417,506,1.957,546,3.084,549,1.925,552,2.652,583,3.267,584,3.823,585,4.128,1057,4.261,1058,2.78,1062,2.33,1070,3.859,1415,4.271,1416,3.267,1419,4.271,1420,4.487,1421,2.78,1422,3.481,1423,3.481,1424,3.481,1701,6.504,1702,5.148]],["title/modules/SimulationModule.html",[133,1.2,148,2.76]],["body/modules/SimulationModule.html",[2,0.179,3,0.179,7,0.14,28,0.013,36,0.451,37,0.953,38,0.167,39,0.027,69,1.429,127,0.011,128,0.011,133,2.084,135,2.915,136,3.828,137,3.197,138,3.298,148,5.625,149,3.343,150,1.429,151,3.049,153,3.49,160,4.67,161,1.577,307,2.679,386,4.634,497,4.888,544,5.166,1336,4.024,1703,5.166,1704,5.166,1705,5.92,1706,5.92,1707,5.92]],["title/injectables/SimulationService.html",[242,1.422,386,2.318]],["body/injectables/SimulationService.html",[2,0.067,3,0.067,7,0.052,18,0.122,19,0.371,21,0.827,23,0.678,24,1.016,27,1.264,28,0.013,29,1.662,30,1.197,31,0.561,32,0.876,33,1.018,34,0.926,36,0.397,37,0.357,38,0.052,39,0.01,42,2.035,44,1.999,46,0.936,48,2.89,60,3.033,79,0.851,127,0.005,128,0.005,150,1.494,161,0.59,174,0.859,180,1.278,191,0.798,192,0.798,193,1.781,195,0.799,198,1.141,203,2.773,210,0.799,215,1.625,242,1.542,244,0.975,263,2.668,265,2.373,266,2.604,269,4.315,270,3.028,275,0.963,303,1.258,305,1.747,307,1.002,310,1.623,313,1.498,315,0.799,316,0.799,319,2.159,326,2.909,329,1.738,336,0.828,348,2.212,355,1.933,377,3.311,386,2.011,439,2.572,456,2.31,484,1.327,500,4.015,506,1.778,507,4.412,513,1.258,515,1.327,527,3.491,535,4.412,545,1.498,546,1.327,547,1.933,548,1.091,552,1.824,557,1.002,575,1.091,582,4.882,583,2.808,584,2.781,585,1.406,593,2.403,596,3.671,597,3.671,598,3.508,599,2.992,600,1.406,601,1.498,607,2.002,608,1.824,609,1.933,616,3.861,625,3.276,628,1.824,644,1.609,650,2.722,651,1.045,654,1.539,659,1.923,660,2.73,677,3.476,688,1.196,709,1.196,721,1.824,741,3.188,815,1.913,819,2.956,821,2.011,838,1.258,841,1.258,852,1.258,867,1.196,881,3.514,935,1.67,1102,4.618,1109,3.091,1119,3.988,1163,1.609,1421,3.343,1422,2.395,1423,1.498,1448,2.572,1537,1.933,1659,4.882,1679,5.934,1681,5.401,1708,2.215,1709,5.055,1710,5.055,1711,5.055,1712,5.055,1713,4.425,1714,5.055,1715,5.055,1716,3.541,1717,5.055,1718,5.23,1719,5.055,1720,3.541,1721,3.541,1722,3.541,1723,4.425,1724,4.425,1725,3.541,1726,2.215,1727,2.215,1728,2.215,1729,3.091,1730,2.215,1731,2.215,1732,2.215,1733,2.215,1734,5.528,1735,2.215,1736,2.215,1737,1.933,1738,2.215,1739,3.541,1740,3.541,1741,2.215,1742,3.541,1743,2.215,1744,2.215,1745,4.425,1746,2.215,1747,2.215,1748,3.541,1749,6.799,1750,2.215,1751,4.425,1752,4.425,1753,3.541,1754,2.215,1755,3.541,1756,3.091,1757,3.541,1758,3.541,1759,3.541,1760,2.215,1761,5.055,1762,2.215,1763,2.215,1764,5.055,1765,2.215,1766,4.425,1767,2.215,1768,3.541,1769,3.541,1770,3.541,1771,2.215,1772,3.541,1773,2.215,1774,4.824,1775,2.215,1776,3.541,1777,3.541,1778,2.215,1779,2.215,1780,3.541,1781,2.215,1782,2.215,1783,2.215,1784,2.215,1785,3.541,1786,2.215,1787,2.215,1788,3.541,1789,2.215,1790,2.215,1791,2.215,1792,2.215,1793,2.215,1794,2.215,1795,2.215,1796,2.215,1797,2.215,1798,2.215,1799,2.215,1800,2.215,1801,3.091,1802,2.215,1803,2.215,1804,2.215,1805,1.933,1806,2.215,1807,2.215,1808,2.215,1809,2.215,1810,2.215,1811,2.215,1812,2.215,1813,2.215,1814,2.215,1815,2.215,1816,2.215,1817,2.215,1818,2.215,1819,2.215,1820,2.215,1821,2.215,1822,2.215,1823,3.541,1824,2.215,1825,2.215,1826,2.215,1827,2.215,1828,2.215,1829,2.215,1830,2.215,1831,3.541,1832,2.215,1833,3.541,1834,2.215,1835,1.933,1836,2.215,1837,3.541,1838,3.541,1839,3.541,1840,2.215,1841,4.425,1842,2.215,1843,2.215,1844,2.215,1845,2.215,1846,2.215,1847,2.215,1848,2.215,1849,2.215,1850,2.215,1851,2.215,1852,2.215]],["title/interfaces/SimulationState.html",[236,0.755,1853,3.22]],["body/interfaces/SimulationState.html",[2,0.168,3,0.168,7,0.131,18,0.306,19,0.713,28,0.013,31,0.414,36,0.407,38,0.197,44,2.463,127,0.01,128,0.01,161,1.475,215,1.629,236,1.259,310,2.24,329,1.877,545,3.745,552,3.507,1331,4.944,1336,3.145,1421,3.676,1853,6.42,1854,4.834,1855,7.37,1856,5.37,1857,4.834,1858,6.226,1859,6.338,1860,5.538,1861,4.834,1862,5.941,1863,4.834,1864,4.834,1865,4.834,1866,4.834,1867,4.834]],["title/classes/Statistics.html",[39,0.019,377,2.445]],["body/classes/Statistics.html",[2,0.113,3,0.113,7,0.088,18,0.206,21,1.226,24,1.021,27,1.338,28,0.013,30,1.396,31,0.592,33,0.645,36,0.29,38,0.088,39,0.024,79,1.144,127,0.008,128,0.008,174,1.448,191,1.144,192,1.144,215,1.098,281,1.286,319,1.944,329,0.872,336,2.27,348,2.109,377,3.943,456,2.762,506,1.851,557,1.689,600,2.369,651,1.761,741,3.885,819,2.537,867,3.277,896,3.446,955,6.704,1030,4.58,1163,3.811,1659,4.787,1718,2.945,1729,4.58,1774,7.493,1801,4.58,1835,3.258,1868,3.733,1869,5.248,1870,5.248,1871,5.248,1872,5.248,1873,5.248,1874,5.248,1875,5.248,1876,5.248,1877,5.248,1878,5.248,1879,5.248,1880,5.248,1881,5.248,1882,3.733,1883,5.248,1884,3.733,1885,5.248,1886,3.733,1887,5.248,1888,3.733,1889,5.248,1890,3.733,1891,5.248,1892,3.733,1893,3.733,1894,3.733,1895,5.248,1896,3.733,1897,5.248,1898,3.733,1899,5.248,1900,3.733,1901,5.248,1902,3.733,1903,5.248,1904,3.733,1905,5.248,1906,5.248,1907,5.248,1908,5.248,1909,3.733,1910,3.733,1911,3.733,1912,3.733,1913,3.733,1914,5.248,1915,5.248,1916,5.248,1917,3.733,1918,3.733,1919,3.733,1920,3.733,1921,3.733]],["title/components/StatisticsComponent.html",[0,0.568,117,1.241]],["body/components/StatisticsComponent.html",[0,1.018,1,1.063,2,0.155,3,0.109,4,1.217,5,1.217,6,0.963,7,0.085,9,1.238,10,2.152,11,1.217,12,2.796,13,2.226,14,1.919,16,1.919,18,0.358,19,0.538,21,1.198,22,2.642,23,0.982,24,1.043,27,1.225,28,0.013,29,1.682,30,0.994,31,0.547,32,0.716,33,0.624,36,0.42,37,0.582,38,0.085,39,0.016,44,2.015,48,2.865,69,0.873,70,1.726,71,1.366,72,1.668,73,2.184,74,1.217,79,0.861,80,1.217,81,1.099,82,1.217,83,1.099,84,1.903,85,1.16,86,1.217,87,1.099,88,1.601,89,1.217,90,1.099,91,1.176,92,1.217,93,1.099,94,1.217,95,1.099,96,1.137,97,1.726,98,1.063,99,1.217,100,1.099,101,1.217,102,1.099,103,1.099,104,1.217,105,1.217,106,1.099,107,1.217,108,1.063,109,1.217,110,1.099,111,0.963,112,1.726,113,1.099,114,1.56,115,1.099,116,1.217,117,1.973,118,1.217,119,1.063,120,1.217,121,1.063,122,1.217,123,1.099,124,1.217,125,1.099,126,1.217,127,0.008,128,0.008,161,0.963,174,1.402,191,0.522,192,0.522,213,3.589,217,3.505,219,3.101,220,2.812,221,3.605,222,3.605,223,3.605,228,2.812,229,1.508,230,2.526,233,1.571,252,2.642,259,4.104,260,4.264,263,3.221,264,3.061,281,1.361,288,1.862,289,1.862,290,1.862,291,1.862,292,1.862,295,1.862,301,1.952,302,2.052,306,1.952,307,1.636,317,1.862,319,1.673,320,1.862,323,2.294,324,1.862,325,1.862,329,1.198,341,2.165,345,1.636,346,1.862,347,1.636,352,1.78,353,2.625,365,3.255,377,3.073,386,3.685,407,2.852,408,2.625,421,3.155,497,3.887,504,6.212,515,2.165,536,4.047,559,3.155,573,6.212,709,3.844,1470,4.704,1489,2.852,1675,2.852,1805,6.212,1922,3.615,1923,5.13,1924,5.13,1925,5.13,1926,3.615,1927,3.615,1928,3.615,1929,3.615,1930,3.615,1931,3.615,1932,3.615,1933,3.615,1934,3.615,1935,3.615,1936,3.615,1937,3.615,1938,3.615,1939,3.615,1940,3.615,1941,3.615,1942,4.047]],["title/interfaces/Step.html",[236,0.755,308,1.473]],["body/interfaces/Step.html",[2,0.184,3,0.184,7,0.144,18,0.336,19,0.755,28,0.013,31,0.455,38,0.181,46,1.769,127,0.011,128,0.011,215,1.79,233,3.133,236,1.42,308,2.964,329,1.422,595,3.863,935,3.743,1010,2.77,1102,3.863,1264,4.802]],["title/classes/StepChanged.html",[39,0.019,1064,2.445]],["body/classes/StepChanged.html",[2,0.148,3,0.148,7,0.115,9,1.879,18,0.384,19,0.66,23,0.936,24,0.896,28,0.013,30,1.161,31,0.628,32,0.968,33,0.844,36,0.348,38,0.187,39,0.035,79,0.706,84,1.879,85,1.105,88,1.142,127,0.009,128,0.009,150,1.774,161,1.302,191,0.706,192,0.706,229,2.359,244,1.345,281,1.449,308,2.895,310,1.345,506,1.956,549,1.828,584,3.822,704,4.401,746,1.645,1055,3.951,1056,3.102,1057,4.276,1058,2.64,1061,3.102,1062,2.212,1063,2.928,1064,4.401,1065,4.168,1066,4.168,1067,2.518,1068,3.306,1069,3.994,1070,3.917,1071,3.102,1072,3.102,1073,2.928,1074,3.102,1075,3.102,1943,6.293,1944,4.888]],["title/classes/StepError.html",[39,0.019,1065,2.445]],["body/classes/StepError.html",[2,0.149,3,0.149,7,0.116,9,1.881,18,0.385,19,0.662,23,0.94,24,0.898,28,0.013,30,1.163,31,0.618,32,0.973,33,0.849,36,0.349,38,0.187,39,0.035,79,0.709,84,1.881,85,1.111,88,1.148,127,0.01,128,0.01,150,1.777,161,1.309,191,0.709,192,0.709,229,2.361,244,1.352,281,1.487,308,2.898,310,1.352,506,1.958,549,1.838,584,3.826,746,1.654,1055,3.961,1056,3.118,1057,4.281,1058,2.653,1061,3.118,1062,2.223,1063,2.943,1064,4.178,1065,4.41,1066,4.178,1067,2.531,1068,3.322,1069,3.118,1070,3.923,1071,4.007,1072,3.118,1073,2.943,1074,3.118,1075,3.118,1945,6.313,1946,4.913]],["title/classes/StepPending.html",[39,0.019,1066,2.445]],["body/classes/StepPending.html",[2,0.147,3,0.147,7,0.115,9,1.876,18,0.383,19,0.657,23,0.931,24,0.894,28,0.013,30,1.158,31,0.618,32,0.963,33,0.84,36,0.346,38,0.187,39,0.035,79,0.702,84,1.876,85,1.1,88,1.136,127,0.009,128,0.009,150,1.771,161,1.295,191,0.702,192,0.702,229,2.356,244,2.089,281,1.485,308,2.892,310,1.339,506,1.954,549,1.819,584,3.819,746,1.637,1055,3.942,1056,3.087,1057,4.271,1058,2.627,1061,3.087,1062,2.201,1063,2.913,1064,4.158,1065,4.158,1066,4.393,1067,2.505,1068,3.289,1069,3.087,1070,3.911,1071,3.087,1072,3.981,1073,2.913,1074,3.087,1075,3.087,1947,6.272,1948,4.864]],["title/interfaces/Tag.html",[236,0.755,688,2.204]],["body/interfaces/Tag.html",[2,0.061,3,0.126,6,0.54,7,0.048,18,0.112,19,0.437,24,0.261,27,1.208,28,0.013,29,1.263,30,1.364,31,0.359,33,1.074,34,0.848,36,0.313,38,0.152,39,0.022,42,1.328,45,0.918,46,1.016,58,1.045,60,2.935,64,1.045,71,1.11,111,0.879,127,0.005,128,0.005,174,0.787,179,1.152,180,1.733,187,1.095,191,0.602,192,0.293,193,1.933,195,0.732,198,1.699,203,2.81,210,1.505,215,0.596,236,0.978,244,1.322,253,0.957,265,0.816,267,0.918,275,2.705,280,2.789,281,1.305,315,0.732,316,0.732,319,1.604,329,1.705,336,2.327,348,2.388,356,1.781,357,2.594,431,2.367,456,2.653,467,2.595,506,1.984,548,0.999,549,0.759,575,2.603,593,1.812,607,2.563,608,2.148,620,2.252,624,1.699,625,3.119,626,1.781,628,3.76,636,1.152,640,1.152,649,1.873,650,0.999,651,0.957,654,1.434,659,2.942,660,3.727,666,1.095,674,1.152,675,2.252,676,2.497,677,3.581,678,2.497,679,3.216,680,3.224,681,2.497,682,3.205,683,1.215,684,3.165,685,1.215,686,1.976,687,3.001,688,3.571,689,2.497,690,1.215,692,3.652,693,1.215,695,1.215,696,1.215,697,1.215,702,2.497,703,1.873,707,1.699,709,1.781,710,1.215,711,1.215,712,0.918,716,1.873,717,1.976,718,2.877,721,1.045,723,1.045,727,1.215,729,1.215,731,0.999,732,2.148,733,1.781,734,1.215,735,1.976,737,1.152,738,1.095,739,1.215,741,1.045,744,2.497,745,1.215,746,0.683,747,1.152,748,1.215,749,1.215,750,2.918,751,3.389,752,3.168,753,1.095,754,1.152,755,3.224,756,2.367,757,1.976,758,1.215,759,1.976,760,1.873,761,1.976,762,2.727,763,1.215,764,2.727,765,1.215,766,1.215,767,1.215,768,1.215,769,1.215,770,1.215,771,1.215,772,1.152,773,1.152,774,2.497,775,1.095,776,1.215,777,1.215,778,1.215,779,1.976,780,1.976,781,1.215,782,1.215,783,1.215,784,1.976,785,1.976,786,1.215,787,1.215,788,1.215,789,1.873,790,2.497,791,2.877,792,2.877,793,1.976,794,1.976,795,2.877,796,2.497,797,2.877,798,2.877,799,1.215,800,1.976,801,1.976,802,1.976,803,1.215,804,1.976,805,1.215,806,1.976,807,1.215,808,1.215,809,1.215,810,1.215,811,3.001,812,1.152,813,1.095,814,1.215,815,1.095,816,1.976,817,1.215,818,1.215,819,1.743,820,1.215,821,2.367,822,1.215,823,1.215,824,1.976,825,1.215,826,1.976,827,1.215,828,1.215,829,1.215,830,1.095,831,1.976,832,1.976,833,1.215,834,1.976,835,1.215,836,1.215,837,1.215,838,1.152,839,1.215,840,1.215,841,1.152,842,1.215,843,1.215,844,1.215,845,1.976,846,1.215,847,1.215,848,1.215,849,1.699,850,1.215,851,2.497,852,2.367,853,1.215,854,2.497,855,1.215,856,1.215,857,1.215,858,1.976,859,1.215,860,1.215,861,1.215,862,1.873,863,1.215,864,1.215,865,1.215,866,1.095,867,2.252,868,1.152,869,1.215,870,1.215,871,1.976,872,1.215,873,1.976,874,1.976,875,1.215,876,1.215,877,1.215,878,2.497,879,1.215,880,1.215,881,2.367,882,1.215,883,1.152,884,1.215,885,1.215,886,1.215,887,1.215,888,1.215,889,1.045,890,2.252,891,1.215,892,1.781,893,1.215,894,1.215,895,1.215,896,1.873,897,1.215,898,1.215,899,1.215,900,1.976,901,1.215,902,1.215,903,1.152,904,1.045,905,1.215,906,1.215,907,1.215,908,1.215,909,1.215,910,1.215,911,1.045,912,1.215,913,1.215,914,0.999,915,1.215,916,1.215,917,1.215,918,1.215,919,1.215,920,1.215,921,1.215,922,1.215,923,1.215,924,1.215,925,1.215,926,1.215,927,1.215,928,1.215,929,1.215,930,1.152,931,1.152,932,1.215,933,1.152,934,1.152,935,0.957,936,1.215,937,1.976,938,1.215,939,1.152,940,1.215,941,1.152,942,1.095,943,1.215,944,1.215,945,1.215,946,1.215,947,1.215,948,1.215,949,1.215,950,1.215,951,0.957,952,1.215,953,1.215]],["title/components/TermsComponent.html",[0,0.568,119,1.2]],["body/components/TermsComponent.html",[0,1.034,1,1.341,2,0.182,3,0.138,4,1.535,5,1.535,6,1.215,7,0.108,9,1.452,10,2.429,11,1.535,12,2.855,13,2.57,14,2.249,16,2.249,18,0.252,21,1.405,22,2.582,23,1.288,24,0.775,27,0.734,28,0.013,29,1.273,36,0.252,37,0.734,38,0.108,39,0.021,40,4.541,45,3.706,51,4.067,52,4.838,69,1.101,70,2.024,71,1.602,72,1.956,73,2.408,74,1.535,79,0.868,80,1.535,81,1.386,82,1.535,83,1.386,84,1.88,85,1.031,86,1.535,87,1.386,88,1.737,89,1.535,90,1.386,91,1.483,92,1.535,93,1.386,94,1.535,95,1.386,96,2.338,97,2.024,98,1.341,99,1.535,100,1.386,101,1.535,102,1.386,103,1.386,104,1.535,105,1.535,106,1.386,107,1.535,108,1.341,109,1.535,110,1.386,111,1.215,112,2.024,113,1.386,114,1.386,115,1.386,116,1.535,117,1.386,118,1.535,119,2.104,120,1.535,121,1.341,122,1.535,123,1.386,124,1.535,125,1.386,126,1.535,127,0.009,128,0.009,207,4.744,211,5.196,212,6.58,327,4.36,1010,2.17,1237,4.368,1304,4.368,1430,6.244,1432,4.744,1455,5.249,1949,4.56,1950,6.014,1951,6.014,1952,4.56,1953,4.56,1954,6.014,1955,6.014,1956,6.014,1957,6.014,1958,6.014,1959,6.014,1960,4.56,1961,4.56]],["title/components/UiComponent.html",[0,0.568,121,1.2]],["body/components/UiComponent.html",[0,0.912,1,0.951,2,0.17,3,0.098,4,1.089,5,1.089,6,0.861,7,0.076,9,1.143,10,2.021,11,1.089,12,2.764,13,2.252,14,1.771,16,1.771,18,0.179,19,0.496,21,1.106,22,2.224,23,0.906,24,1.004,27,1.192,28,0.013,29,1.593,30,0.539,31,0.542,32,1.299,33,1.133,36,0.421,37,0.521,38,0.076,39,0.015,46,1.304,69,0.781,70,1.593,71,1.261,72,1.54,73,2.075,74,1.089,79,0.947,80,1.089,81,0.983,82,1.089,83,0.983,84,1.709,85,0.731,86,1.089,87,0.983,88,1.654,89,1.089,90,0.983,91,1.052,92,1.089,93,0.983,94,1.089,95,0.983,96,1.017,97,1.593,98,0.951,99,1.089,100,1.439,101,1.089,102,0.983,103,1.439,104,1.089,105,1.089,106,0.983,107,1.089,108,0.951,109,1.089,110,0.983,111,0.861,112,1.593,113,0.983,114,1.439,115,0.983,116,1.089,117,0.983,118,1.089,119,0.951,120,1.089,121,1.812,122,1.089,123,0.983,124,1.089,125,0.983,126,1.089,127,0.007,128,0.007,150,1.709,161,0.861,180,2.555,191,0.808,192,0.808,193,2.64,194,1.747,195,1.167,210,2.673,218,4.418,219,3.406,220,2.907,234,2.551,235,2.551,237,4.067,239,2.187,241,4.476,244,2.206,263,3.204,265,2.759,281,1.266,306,1.747,307,1.464,310,1.303,319,1.766,329,0.756,341,1.937,345,1.464,346,1.666,347,2.534,348,0.983,352,2.758,377,4.105,419,2.349,420,4.887,543,2.349,682,1.666,746,1.885,942,3.701,1067,3.74,1202,5.379,1204,2.823,1212,1.937,1274,3.735,1275,3.735,1292,2.551,1297,2.187,1463,3.912,1514,3.202,1650,2.823,1651,2.823,1652,2.551,1942,5.585,1962,3.234,1963,4.734,1964,4.734,1965,4.734,1966,4.734,1967,3.234,1968,5.981,1969,6.164,1970,6.164,1971,6.164,1972,5.6,1973,6.164,1974,4.887,1975,4.734,1976,3.234,1977,3.234,1978,3.234,1979,3.234,1980,4.734,1981,3.234,1982,4.734,1983,3.234,1984,3.234,1985,3.234,1986,3.234,1987,3.234,1988,3.234,1989,3.234,1990,2.823,1991,2.823,1992,3.234,1993,3.234,1994,3.234,1995,3.234,1996,3.234,1997,3.234,1998,3.234,1999,3.234,2000,5.6,2001,5.6,2002,4.734,2003,4.734,2004,4.734,2005,3.234,2006,3.234,2007,5.6,2008,4.734,2009,3.234,2010,2.823,2011,3.234,2012,3.234,2013,4.734,2014,3.234,2015,3.234,2016,3.234,2017,3.234,2018,3.234]],["title/modules/UiModule.html",[133,1.2,2019,2.964]],["body/modules/UiModule.html",[2,0.132,3,0.132,7,0.103,28,0.013,36,0.468,37,0.701,38,0.138,39,0.02,69,1.051,83,2.292,87,2.292,88,1.017,90,2.292,95,2.292,102,2.292,106,2.292,110,2.292,113,2.292,115,2.292,117,2.292,121,2.217,123,2.292,125,2.292,127,0.009,128,0.009,133,1.715,135,2.145,136,3.552,137,2.352,138,2.859,147,4.515,149,2.751,150,1.051,151,2.243,153,2.873,160,3.435,161,1.16,162,3.801,163,3.801,250,3.801,264,3.556,307,1.971,985,3.801,1089,5.098,1336,3.312,1463,4.784,1487,3.801,1552,3.801,1599,3.801,1991,3.801,2019,6.252,2020,3.801,2021,3.801,2022,3.801,2023,3.801,2024,5.098,2025,4.355,2026,5.833,2027,5.833,2028,3.801,2029,3.801,2030,3.801,2031,3.801,2032,4.355,2033,4.355,2034,5.833,2035,4.355,2036,4.355,2037,4.355,2038,4.355,2039,4.355,2040,4.355,2041,4.355,2042,4.355,2043,4.355,2044,4.355,2045,4.355,2046,4.355,2047,4.355,2048,4.355,2049,4.355]],["title/modules/UiRoutingModule.html",[133,1.2,2024,2.76]],["body/modules/UiRoutingModule.html",[0,0.856,2,0.186,3,0.186,7,0.145,28,0.013,36,0.449,37,0.991,38,0.171,39,0.028,121,2.133,127,0.011,128,0.011,133,1.81,153,3.572,194,3.324,199,5.371,200,5.268,203,2.221,206,5.371,207,4.855,239,4.162,241,4.47,245,4.905,1652,4.855,1990,5.371,2024,4.905,2031,5.371,2050,5.371,2051,6.155]],["title/interfaces/UiState.html",[236,0.755,2052,3.22]],["body/interfaces/UiState.html",[2,0.153,3,0.153,7,0.119,18,0.279,19,0.674,28,0.013,31,0.48,36,0.411,38,0.199,84,1.895,88,1.181,127,0.01,128,0.01,161,1.346,215,1.486,236,1.377,308,2.685,310,2.276,329,1.905,346,2.604,712,2.287,746,2.164,1010,2.914,1067,3.312,1329,4.669,1331,4.669,1336,2.87,1340,3.987,1856,5.071,1857,4.411,1858,6.371,1859,6.432,2052,5.869,2053,4.411,2054,5.61,2055,7.069,2056,7.069,2057,5.054,2058,5.054,2059,5.054,2060,5.054,2061,4.411,2062,4.411,2063,6.169,2064,4.411,2065,5.195,2066,4.411,2067,4.411,2068,4.411,2069,4.411,2070,4.411,2071,4.411]],["title/components/WeatherComponent.html",[0,0.568,123,1.241]],["body/components/WeatherComponent.html",[0,0.989,1,0.966,2,0.145,3,0.1,4,1.106,5,1.106,6,0.875,7,0.078,9,1.156,10,2.04,11,1.106,12,2.769,13,2.217,14,1.792,16,1.792,18,0.181,19,0.502,21,1.119,22,2.568,23,0.917,24,1.044,27,1.269,28,0.013,29,1.716,30,0.548,31,0.545,32,1.119,33,0.976,34,1.374,36,0.411,37,0.529,38,0.078,39,0.015,48,2.774,62,4.105,69,0.793,70,1.612,71,1.276,72,1.558,73,2.09,74,1.106,79,0.953,80,1.106,81,0.999,82,1.106,83,0.999,84,1.718,85,1.083,86,1.106,87,0.999,88,1.662,89,1.106,90,0.999,91,1.069,92,1.106,93,0.999,94,1.106,95,0.999,96,1.033,97,1.612,98,0.966,99,1.106,100,0.999,101,1.106,102,0.999,103,0.999,104,1.106,105,1.106,106,0.999,107,1.106,108,0.966,109,1.106,110,0.999,111,0.875,112,1.612,113,0.999,114,1.456,115,0.999,116,1.106,117,0.999,118,1.106,119,0.966,120,1.106,121,0.966,122,1.106,123,1.888,124,1.106,125,0.999,126,1.106,127,0.007,128,0.007,161,0.875,191,0.816,192,0.816,213,3.508,215,2.027,217,3.394,219,2.988,220,2.666,221,3.504,222,3.504,223,3.504,228,2.666,229,1.409,230,2.359,233,1.429,252,2.468,263,3.22,265,2.275,266,3.199,267,3.3,268,3.72,281,1.329,288,1.693,289,1.693,290,1.693,291,1.693,292,1.693,295,1.693,303,1.866,304,2.593,306,1.775,307,1.487,308,1.186,309,2.223,310,0.905,311,4.19,312,2.868,316,1.186,317,1.693,319,1.702,320,1.693,321,4.18,324,1.693,325,1.693,329,1.119,337,5.005,341,1.969,345,1.487,346,1.693,347,2.558,348,0.999,352,2.783,367,4.459,379,4.899,384,2.593,385,5.005,557,1.487,951,1.55,1113,4.459,1297,2.223,2072,3.286,2073,4.79,2074,4.79,2075,6.211,2076,4.79,2077,6.211,2078,4.79,2079,5.652,2080,3.286,2081,4.79,2082,5.652,2083,4.79,2084,3.286,2085,4.79,2086,3.286,2087,3.286,2088,3.286,2089,3.286,2090,3.286,2091,4.79,2092,3.286,2093,3.286,2094,3.286,2095,3.286,2096,3.286,2097,2.868,2098,3.286,2099,3.286,2100,3.286,2101,4.79,2102,4.79,2103,3.286,2104,6.602,2105,3.286,2106,3.286,2107,4.79,2108,3.286,2109,3.286,2110,3.286,2111,3.286,2112,3.286,2113,3.286,2114,4.79]],["title/interfaces/WeatherConditions.html",[236,0.755,311,2.59]],["body/interfaces/WeatherConditions.html",[2,0.166,3,0.166,7,0.129,18,0.303,19,0.709,28,0.013,30,1.379,31,0.588,38,0.16,46,1.16,62,4.913,127,0.01,128,0.01,192,1.184,215,2.314,236,1.252,253,2.587,267,2.481,281,1.433,293,4.326,311,4.294,337,5.821,549,2.051,703,3.841,1315,4.326,2115,4.786,2116,6.043,2117,6.043,2118,6.043,2119,7.661,2120,4.786,2121,4.786,2122,4.786,2123,4.786,2124,6.403,2125,4.786,2126,4.786,2127,4.786,2128,4.786,2129,4.786,2130,4.786,2131,5.788,2132,5.904,2133,5.337,2134,5.904]],["title/modules/WeatherModule.html",[133,1.2,1380,2.76]],["body/modules/WeatherModule.html",[2,0.187,3,0.187,7,0.145,28,0.013,36,0.426,37,0.992,38,0.171,39,0.028,69,1.488,127,0.011,128,0.011,133,2.135,135,3.036,136,3.921,137,3.329,138,3.355,149,3.425,150,1.488,151,3.176,153,3.575,268,4.933,1380,5.57,2135,5.38,2136,5.38,2137,6.165,2138,6.165]],["title/injectables/WeatherService.html",[242,1.422,268,2.445]],["body/injectables/WeatherService.html",[2,0.114,3,0.114,7,0.088,13,1.139,18,0.207,19,0.552,21,1.229,23,0.717,24,1.001,27,1.252,28,0.013,29,1.395,30,1.158,31,0.553,33,1.05,34,1.567,36,0.424,37,0.603,38,0.088,39,0.017,46,1.714,48,3.13,79,1.04,85,0.847,127,0.008,128,0.008,138,2.287,150,1.592,174,1.454,191,1.154,192,1.154,193,2.796,195,1.353,215,1.939,242,2.119,253,3.397,267,3.729,268,3.152,281,0.67,311,5.035,315,1.353,316,1.899,319,1.946,326,2.381,329,1.541,336,1.402,348,1.139,506,1.965,543,2.722,548,1.846,557,2.381,625,1.768,628,1.931,651,1.768,652,2.722,654,2.867,659,2.867,666,2.842,712,1.696,731,1.846,732,3.397,733,2.024,747,2.128,819,2.2,969,4.592,975,3.271,978,4.151,1010,1.353,1196,3.271,1203,3.822,1216,3.95,1220,2.957,1469,4.797,1488,2.957,1531,4.592,1568,3.271,1610,6.285,1642,3.271,2097,3.271,2139,3.748,2140,7.775,2141,7.202,2142,5.262,2143,5.262,2144,5.262,2145,6.081,2146,6.594,2147,5.262,2148,5.262,2149,3.748,2150,6.594,2151,5.262,2152,5.262,2153,3.748,2154,3.748,2155,3.748,2156,3.748,2157,3.748,2158,3.748,2159,5.262,2160,3.748,2161,5.262,2162,5.262,2163,3.748,2164,3.748,2165,3.748,2166,5.262,2167,3.748,2168,4.592,2169,4.592,2170,3.748,2171,5.262,2172,3.748,2173,5.262,2174,3.271,2175,3.748,2176,3.748,2177,3.748,2178,3.748,2179,3.748,2180,3.748,2181,3.748,2182,3.748,2183,3.748,2184,3.748,2185,3.748,2186,3.748,2187,3.748,2188,3.748,2189,5.262,2190,3.748,2191,3.748,2192,6.081,2193,3.748,2194,3.748,2195,3.748,2196,3.748,2197,3.748,2198,3.748,2199,3.748]],["title/components/WizardComponent.html",[0,0.568,125,1.241]],["body/components/WizardComponent.html",[0,0.947,1,1.046,2,0.154,3,0.108,4,1.198,5,1.198,6,0.948,7,0.084,9,1.225,10,2.133,11,1.198,12,2.792,13,2.216,14,1.897,16,1.897,18,0.402,19,0.532,21,1.185,22,2.325,23,0.971,24,0.939,27,1.037,28,0.013,29,1.499,30,0.846,31,0.481,32,0.704,36,0.419,37,0.573,38,0.084,39,0.016,44,1.492,46,1.364,48,1.432,69,0.859,70,1.707,71,1.351,72,1.65,73,2.169,74,1.198,79,0.93,80,1.198,81,1.082,82,1.198,83,1.082,84,1.897,85,1.336,86,1.198,87,1.082,88,1.74,89,1.198,90,1.082,91,1.922,92,1.198,93,1.082,94,1.198,95,1.082,96,1.119,97,1.707,98,1.046,99,1.198,100,1.082,101,1.198,102,1.082,103,1.082,104,1.198,105,1.198,106,1.082,107,1.198,108,1.046,109,1.198,110,1.082,111,1.574,112,1.707,113,1.082,114,1.797,115,1.082,116,1.198,117,1.082,118,1.198,119,1.046,120,1.198,121,1.046,122,1.198,123,1.082,124,1.198,125,1.959,126,1.198,127,0.008,128,0.008,180,1.284,191,0.732,192,0.732,194,1.922,210,1.284,215,1.492,233,1.547,253,2.393,260,3.859,261,2.584,262,5.143,264,3.039,269,3.219,275,2.205,296,2.584,299,4.663,300,2.584,301,1.922,302,2.02,308,2.325,311,2.258,315,1.284,316,1.284,319,1.661,326,2.295,329,1.381,337,2.584,345,1.61,347,2.675,352,2.911,377,3.038,419,2.584,467,1.547,482,2.131,499,2.807,557,3.371,659,1.547,712,2.295,914,1.752,935,1.678,951,1.678,1073,4.365,1208,2.807,1212,2.131,1224,4.089,1238,2.807,1274,4.002,1275,4.002,1292,2.807,1297,2.406,1304,2.584,1463,4.089,1942,5.083,1968,6.36,1974,5.158,2010,3.105,2116,2.807,2117,2.807,2118,2.807,2200,3.558,2201,5.072,2202,5.072,2203,6.18,2204,6.443,2205,5.072,2206,3.558,2207,3.558,2208,3.558,2209,5.072,2210,6.443,2211,3.558,2212,5.623,2213,5.072,2214,5.623,2215,5.072,2216,3.558,2217,3.558,2218,5.911,2219,3.558,2220,3.558,2221,3.558,2222,3.558,2223,4.427,2224,3.558,2225,3.558,2226,3.558,2227,3.558,2228,7.45,2229,5.911,2230,6.811,2231,5.911,2232,3.558,2233,5.911,2234,5.911,2235,3.558,2236,3.558,2237,3.558,2238,3.558,2239,3.558,2240,3.558,2241,3.558,2242,3.558,2243,3.558,2244,3.558,2245,3.558,2246,3.558,2247,3.558,2248,3.558,2249,3.558,2250,3.558]],["title/injectables/WizardService.html",[242,1.422,264,1.925]],["body/injectables/WizardService.html",[2,0.131,3,0.131,7,0.102,18,0.445,19,0.608,21,1.356,23,0.827,24,1.03,27,1.237,28,0.013,29,1.739,30,1.32,31,0.614,36,0.415,37,0.696,38,0.102,39,0.02,46,1.592,79,1.055,88,1.009,114,1.314,127,0.009,128,0.009,150,1.69,161,1.151,180,1.559,191,1.055,192,1.055,210,1.559,242,2.283,263,3.404,264,2.737,281,1.345,306,2.334,307,1.955,308,2.094,310,2.07,506,2.052,515,2.588,557,1.955,582,6.062,584,3.548,652,3.138,746,1.953,1055,3.294,1061,2.742,1063,2.588,1069,2.742,1071,3.682,1072,3.682,1073,4.376,1074,2.742,1203,3.138,1212,2.588,1514,3.924,2065,4.94,2203,6.375,2214,6.111,2251,4.321,2252,5.802,2253,5.802,2254,7.003,2255,7.003,2256,5.802,2257,5.802,2258,5.802,2259,4.321,2260,5.802,2261,4.321,2262,5.802,2263,4.321,2264,4.321,2265,4.321,2266,4.321,2267,5.802,2268,4.321,2269,4.321,2270,4.321,2271,4.321,2272,4.321,2273,4.321,2274,4.321]],["title/interfaces/WizardState.html",[236,0.755,2065,2.76]],["body/interfaces/WizardState.html",[2,0.142,3,0.142,7,0.11,18,0.376,19,0.641,27,1.238,28,0.013,30,1.205,31,0.54,32,0.927,36,0.376,38,0.185,84,1.645,88,1.094,127,0.009,128,0.009,138,2.66,189,2.412,210,2.46,215,1.377,229,1.377,236,1.132,244,1.99,281,1.421,308,3.019,310,2.303,326,2.769,329,1.752,345,2.118,346,3.963,347,3.394,348,1.423,557,3.481,746,2.675,1061,2.971,1062,2.118,1063,2.804,1067,4.095,1069,2.971,1071,2.971,1072,2.971,1074,2.971,1075,3.883,1331,4.444,1332,4.085,1333,4.085,1336,2.658,1339,4.085,2065,5.59,2275,3.693,2276,4.681,2277,4.085,2278,4.085,2279,6.119,2280,6.119,2281,6.119,2282,6.119,2283,6.119,2284,4.681,2285,4.085,2286,4.085,2287,4.085,2288,4.085,2289,4.085,2290,4.085,2291,4.085,2292,4.085]],["title/dependencies.html",[135,2.419,2293,3.403]],["body/dependencies.html",[28,0.013,37,0.905,43,4.081,127,0.01,128,0.01,135,2.767,156,5.418,157,4.988,161,1.497,194,3.035,195,2.028,301,3.035,406,4.904,1172,4.904,1173,4.904,1212,3.366,1640,4.904,1646,4.904,1647,4.904,2028,4.904,2029,4.904,2030,4.904,2294,5.619,2295,8.302,2296,5.619,2297,5.619,2298,5.619,2299,6.867,2300,5.619,2301,5.619,2302,5.619,2303,5.619,2304,5.619,2305,7.726,2306,5.619,2307,5.619,2308,5.619,2309,5.619,2310,5.619,2311,5.619,2312,5.619,2313,5.619,2314,5.619,2315,5.619,2316,5.619,2317,5.619,2318,5.619,2319,5.619,2320,5.619,2321,5.619,2322,5.619,2323,5.619,2324,5.619,2325,5.619,2326,4.904,2327,5.619,2328,6.867,2329,5.619,2330,5.619,2331,5.619,2332,5.619,2333,5.619,2334,5.619,2335,5.619,2336,5.619,2337,5.619,2338,5.619,2339,5.619]],["title/miscellaneous/enumerations.html",[2340,1.932,2341,4.287]],["body/miscellaneous/enumerations.html",[18,0.297,28,0.01,33,1.491,44,2.379,84,1.926,85,1.721,127,0.01,128,0.01,150,1.926,229,2.14,293,5.277,308,2.825,349,4.245,498,4.699,508,5.277,510,5.838,511,5.838,512,4.245,513,3.798,546,4.007,552,2.774,674,3.057,680,3.613,682,3.446,746,1.812,755,3.613,1010,2.747,1055,3.057,1056,3.417,1062,3.293,1063,4.007,1064,3.225,1065,3.225,1066,3.225,1067,2.774,1068,3.641,1265,3.911,1266,4.248,1270,5.277,1315,4.248,1415,3.225,1416,3.417,1419,3.225,1420,3.225,1421,2.908,2115,4.699,2120,4.699,2121,4.699,2122,4.699,2123,4.699,2124,6.351,2125,4.699,2126,4.699,2127,4.699,2128,4.699,2129,4.699,2130,4.699,2131,5.741,2132,5.838,2133,5.277,2134,5.838,2340,3.057,2341,4.699,2342,5.384,2343,4.699,2344,5.384,2345,4.699,2346,5.384,2347,4.699]],["title/miscellaneous/functions.html",[189,2.531,2340,1.932]],["body/miscellaneous/functions.html",[18,0.303,28,0.013,33,1.169,44,1.615,48,2.726,79,1.185,84,1.326,127,0.01,128,0.01,173,6.407,189,2.829,191,1.185,192,1.185,215,1.991,229,2.358,310,2.021,408,4.918,537,3.988,651,3.194,707,2.829,830,4.539,954,4.332,968,4.792,970,5.909,971,4.792,972,3.714,973,4.792,977,4.792,978,4.332,979,4.792,1010,1.982,1062,3.322,1203,3.988,1330,4.332,1336,4.169,1337,4.792,1674,5.909,1675,5.342,2223,6.407,2275,4.332,2278,4.792,2340,3.118,2348,6.997,2349,6.771,2350,6.771,2351,4.792,2352,5.491,2353,6.771,2354,4.792,2355,6.771,2356,4.792,2357,5.491,2358,5.491,2359,5.491,2360,5.491,2361,6.771,2362,5.491,2363,4.792,2364,5.491]],["title/index.html",[18,0.188,512,2.16,654,1.479]],["body/index.html",[7,0.176,28,0.01,40,4.737,41,4.498,42,2.789,43,4.141,44,2.037,45,2.58,46,1.466,47,4.498,48,2.295,51,3.856,53,5.466,54,6.047,55,4.976,56,4.976,57,4.976,58,2.937,59,4.976,63,4.976,64,3.569,66,4.976,68,7.146,72,1.854,96,1.793,127,0.01,128,0.01,182,4.498,189,3.569,326,3.514,478,4.498,540,4.976,762,3.934,914,2.808,1010,2.501,1091,4.498,1226,4.976,1237,5.778,1528,6.944,2169,4.976,2365,5.702,2366,5.702,2367,8.37,2368,5.702,2369,7.464,2370,6.929,2371,5.702,2372,5.702,2373,5.702,2374,6.929,2375,5.702,2376,5.702,2377,5.702,2378,5.702,2379,5.702,2380,5.702,2381,6.929,2382,5.702,2383,5.702,2384,5.702,2385,5.702,2386,5.702]],["title/license.html",[52,2.301,512,2.16,654,1.479]],["body/license.html",[7,0.137,28,0.011,45,3.164,51,3.913,52,3.913,64,2.981,75,5.927,76,4.565,77,4.565,127,0.011,128,0.011,138,2.516,151,2.981,229,1.702,253,2.73,474,5.05,716,3.286,760,3.286,812,3.286,1023,5.078,1431,6.102,1448,4.203,1477,5.05,1482,5.05,1589,6.102,2168,5.05,2212,5.05,2387,5.787,2388,5.787,2389,5.787,2390,5.787,2391,5.787,2392,7.804,2393,8.342,2394,6.991,2395,7.513,2396,5.787,2397,7.513,2398,5.787,2399,5.787,2400,5.787,2401,5.787,2402,5.787,2403,5.787,2404,5.787,2405,5.787,2406,5.787,2407,5.787,2408,5.787,2409,6.991,2410,6.991,2411,5.787,2412,5.787,2413,6.991,2414,5.787,2415,5.787,2416,5.787,2417,5.787,2418,5.787,2419,5.787,2420,5.787,2421,5.787,2422,5.787,2423,5.787,2424,5.787,2425,5.787,2426,5.787,2427,5.787,2428,5.787,2429,5.787,2430,5.787]],["title/modules.html",[133,1.642]],["body/modules.html",[28,0.011,127,0.011,128,0.011,133,1.81,134,4.47,143,4.162,144,4.162,145,4.162,146,4.162,147,3.687,148,4.162,157,6.082,819,3.225,1344,3.906,1380,4.162,1530,6.731,1597,7.309,2019,4.47,2024,4.162,2431,8.375,2432,8.494]],["title/overview.html",[2433,4.872]],["body/overview.html",[0,0.603,1,1.93,28,0.013,38,0.102,39,0.02,69,1.047,81,2.338,83,1.995,87,1.995,90,1.995,93,2.338,95,1.995,98,1.93,100,2.338,102,1.995,103,2.338,106,1.995,108,1.93,110,1.995,113,1.995,115,1.995,117,1.995,119,1.93,121,1.93,123,1.995,125,1.995,127,0.009,128,0.009,133,1.71,134,6.157,135,2.135,136,2.341,137,2.341,138,1.885,139,3.784,140,3.784,141,3.784,142,3.784,143,4.438,144,4.946,145,4.946,146,5.201,147,4.967,148,5.201,149,2.743,150,1.047,151,2.233,236,0.802,242,1.511,264,3.095,266,3.38,268,3.931,270,3.931,386,3.726,497,3.931,602,3.784,603,3.784,738,2.341,1089,4.438,1214,3.784,1215,3.784,1216,3.931,1344,4.881,1377,3.784,1378,3.784,1379,3.784,1380,4.946,1463,4.164,1632,3.784,1633,3.784,1634,3.784,1635,3.784,1703,3.784,1704,3.784,2019,6.242,2020,3.784,2021,3.784,2022,3.784,2023,3.784,2024,4.438,2135,3.784,2136,3.784,2433,3.784,2434,4.335,2435,4.335,2436,4.335,2437,4.335]],["title/miscellaneous/typealiases.html",[2340,1.932,2438,4.912]],["body/miscellaneous/typealiases.html",[18,0.344,28,0.013,30,1.038,31,0.465,127,0.011,128,0.011,150,1.87,281,1.113,954,4.91,963,6.762,1055,3.534,1056,3.95,1064,3.728,1065,3.728,1066,3.728,1075,4.917,1265,4.52,1266,4.91,1272,6.112,1415,3.728,1416,3.95,1419,3.728,1420,3.728,1424,5.24,2340,3.534,2343,5.432,2345,5.432,2347,5.432,2348,5.432,2439,6.224]],["title/miscellaneous/variables.html",[2340,1.932,2440,4.287]],["body/miscellaneous/variables.html",[18,0.126,28,0.013,30,0.856,31,0.615,32,1.628,33,1.42,38,0.158,42,2.4,44,2.057,46,0.765,48,2.254,58,1.171,60,1.072,69,0.873,84,0.873,114,0.691,127,0.005,128,0.005,147,2.697,149,1.072,180,2.569,189,2.319,191,0.328,200,1.651,203,1.625,210,2.413,236,0.421,244,1.412,267,1.636,280,1.781,281,1.066,308,2.673,310,2.124,315,1.625,336,0.85,346,2.643,348,1.813,362,1.984,363,3.156,409,3.929,410,3.929,411,3.929,419,2.626,439,1.651,447,1.984,451,1.984,456,1.26,462,1.984,463,3.156,467,1.572,471,1.984,477,3.156,480,1.793,482,1.362,500,2.626,502,1.793,537,1.651,552,2.885,557,2.322,595,2.295,607,1.636,624,2.885,625,1.072,675,1.228,680,1.228,682,1.171,707,1.171,712,1.029,721,1.863,723,2.319,731,2.527,732,1.171,733,1.228,737,1.291,738,1.953,746,1.885,751,1.291,752,1.781,753,3.611,775,1.228,849,1.863,904,1.863,933,1.291,934,1.291,935,1.072,939,1.291,941,2.053,951,1.706,972,1.537,1010,2.525,1023,2.626,1067,2.885,1087,3.044,1102,2.295,1106,4.933,1110,2.852,1174,3.929,1187,3.156,1189,3.156,1191,1.984,1192,1.984,1193,1.984,1220,2.852,1224,1.443,1264,1.793,1293,3.929,1297,1.537,1329,4.541,1330,1.793,1335,3.929,1336,3.386,1340,2.852,1343,3.929,1344,3.256,1345,1.984,1346,1.984,1347,1.984,1348,1.984,1350,1.984,1351,1.984,1352,1.984,1353,1.984,1354,1.984,1355,1.984,1356,1.984,1357,1.984,1358,1.984,1359,1.984,1360,1.984,1361,1.984,1362,1.984,1421,3.024,1444,1.984,1572,1.984,1630,1.984,1631,1.984,1636,1.984,1639,1.984,1641,1.984,1643,1.984,1644,1.984,1645,1.984,1718,1.793,1737,3.156,1756,1.984,1853,5.616,1854,1.984,1856,4.047,1858,5.519,1859,6.27,1861,1.984,1862,4.477,1863,1.984,1864,3.156,1865,1.984,1866,1.984,1867,1.984,2050,1.984,2052,2.852,2053,1.984,2054,3.156,2061,1.984,2062,1.984,2063,4.887,2064,1.984,2065,4.887,2066,1.984,2067,1.984,2068,1.984,2069,1.984,2070,1.984,2071,1.984,2116,1.793,2117,1.793,2118,4.704,2131,1.793,2133,1.793,2174,5.204,2275,1.793,2277,3.929,2285,3.929,2286,1.984,2287,3.929,2288,1.984,2289,3.929,2290,1.984,2291,3.929,2292,1.984,2326,3.156,2340,1.291,2351,3.156,2354,4.477,2356,4.887,2363,1.984,2440,1.984,2441,4.502,2442,5.963,2443,7.406,2444,2.273,2445,2.273,2446,2.273,2447,4.502,2448,4.502,2449,4.502,2450,2.273,2451,4.502,2452,2.273,2453,2.273,2454,2.273,2455,3.616,2456,2.273,2457,7.119,2458,3.616,2459,3.616,2460,3.616,2461,3.616,2462,3.616,2463,4.502,2464,3.616,2465,3.616,2466,2.273,2467,2.273,2468,2.273,2469,3.616,2470,2.273,2471,2.273,2472,2.273,2473,4.502,2474,4.502,2475,4.502,2476,4.502,2477,2.273,2478,3.616,2479,3.616,2480,5.13,2481,2.273,2482,2.273,2483,2.273,2484,3.616,2485,2.273,2486,2.273,2487,2.273,2488,2.273,2489,2.273,2490,3.616,2491,2.273,2492,2.273,2493,2.273,2494,2.273,2495,2.273,2496,5.13,2497,2.273,2498,3.616,2499,2.273,2500,5.13,2501,2.273,2502,2.273,2503,2.273,2504,2.273,2505,2.273,2506,2.273,2507,2.273,2508,2.273,2509,2.273,2510,2.273,2511,2.273,2512,2.273,2513,2.273,2514,2.273,2515,2.273,2516,2.273,2517,2.273,2518,2.273,2519,2.273,2520,2.273,2521,3.616,2522,2.273,2523,2.273,2524,2.273,2525,2.273,2526,2.273,2527,2.273,2528,2.273,2529,2.273,2530,2.273,2531,2.273,2532,2.273,2533,4.502,2534,2.273,2535,3.616,2536,2.273,2537,2.273,2538,2.273,2539,2.273,2540,2.273,2541,2.273,2542,2.273,2543,2.273,2544,2.273,2545,2.273,2546,2.273,2547,2.273,2548,2.273,2549,2.273,2550,2.273,2551,2.273,2552,2.273,2553,3.616,2554,2.273,2555,2.273,2556,2.273,2557,2.273,2558,2.273,2559,2.273,2560,2.273,2561,2.273,2562,2.273]]],"invertedIndex":[["",{"_index":28,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"interfaces/SimulationState.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":348,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"components/SimulationComponent.html":{},"injectables/SimulationService.html":{},"classes/Statistics.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["0.0.3",{"_index":2322,"title":{},"body":{"dependencies.html":{}}}],["0.009",{"_index":2540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.25",{"_index":2555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.3",{"_index":1188,"title":{},"body":{"components/HomeComponent.html":{}}}],["0.404",{"_index":2541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.5",{"_index":1195,"title":{},"body":{"components/HomeComponent.html":{}}}],["0.5.7",{"_index":2327,"title":{},"body":{"dependencies.html":{}}}],["0.75",{"_index":2557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.8.26",{"_index":2339,"title":{},"body":{"dependencies.html":{}}}],["0.91",{"_index":2539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["00",{"_index":982,"title":{},"body":{"classes/EnumValues.html":{}}}],["004ba0",{"_index":2530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["01d",{"_index":2544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["02d",{"_index":2545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["03d",{"_index":2546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["04d",{"_index":2547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["09d",{"_index":2548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0m",{"_index":2494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":336,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"components/SimulationComponent.html":{},"injectables/SimulationService.html":{},"classes/Statistics.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["1.1.0",{"_index":2320,"title":{},"body":{"dependencies.html":{}}}],["1.455",{"_index":2542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10",{"_index":738,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":941,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["1000",{"_index":969,"title":{},"body":{"classes/EnumValues.html":{},"injectables/WeatherService.html":{}}}],["1000)).slice",{"_index":983,"title":{},"body":{"classes/EnumValues.html":{}}}],["10000",{"_index":2533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10d",{"_index":2549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11",{"_index":2434,"title":{},"body":{"overview.html":{}}}],["11d",{"_index":2550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.476358",{"_index":2506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13",{"_index":1436,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["13d",{"_index":2551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16",{"_index":1321,"title":{},"body":{"components/MapComponent.html":{}}}],["17",{"_index":2437,"title":{},"body":{"overview.html":{}}}],["18",{"_index":1296,"title":{},"body":{"components/MapComponent.html":{}}}],["196/2003",{"_index":1439,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["1976d2",{"_index":2531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1]).patchvalu",{"_index":1046,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["1].destin",{"_index":1026,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["1].edg",{"_index":921,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["2",{"_index":467,"title":{},"body":{"components/ChartsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["2.0.8",{"_index":2331,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":2332,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":2329,"title":{},"body":{"dependencies.html":{}}}],["2.5.7",{"_index":2336,"title":{},"body":{"dependencies.html":{}}}],["2.7.2",{"_index":2323,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":2521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2016/679",{"_index":1442,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["2018",{"_index":2388,"title":{},"body":{"license.html":{}}}],["21",{"_index":2435,"title":{},"body":{"overview.html":{}}}],["23",{"_index":2436,"title":{},"body":{"overview.html":{}}}],["24",{"_index":1630,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{},"miscellaneous/variables.html":{}}}],["250px",{"_index":2016,"title":{},"body":{"components/UiComponent.html":{}}}],["3",{"_index":951,"title":{},"body":{"classes/Edge.html":{},"classes/EnumValues.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["3.6",{"_index":794,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["30",{"_index":2510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":1297,"title":{},"body":{"components/MapComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["40",{"_index":2471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["41.910943",{"_index":2505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":419,"title":{},"body":{"components/ChartsComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["5.1.5",{"_index":2314,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":793,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["500",{"_index":2558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5000",{"_index":2012,"title":{},"body":{"components/UiComponent.html":{}}}],["50d",{"_index":2552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.0.0",{"_index":2301,"title":{},"body":{"dependencies.html":{}}}],["6.0.1",{"_index":2305,"title":{},"body":{"dependencies.html":{}}}],["6.0.15",{"_index":2318,"title":{},"body":{"dependencies.html":{}}}],["6.0.2",{"_index":2316,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":2303,"title":{},"body":{"dependencies.html":{}}}],["6.1.1",{"_index":2295,"title":{},"body":{"dependencies.html":{}}}],["6.1.2",{"_index":2309,"title":{},"body":{"dependencies.html":{}}}],["6.1.4",{"_index":2307,"title":{},"body":{"dependencies.html":{}}}],["6.2.2",{"_index":2337,"title":{},"body":{"dependencies.html":{}}}],["6.4.3",{"_index":2299,"title":{},"body":{"dependencies.html":{}}}],["6.5.2",{"_index":2334,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":975,"title":{},"body":{"classes/EnumValues.html":{},"injectables/WeatherService.html":{}}}],["60)).slice",{"_index":976,"title":{},"body":{"classes/EnumValues.html":{}}}],["63a4ff",{"_index":2469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["666",{"_index":465,"title":{},"body":{"components/ChartsComponent.html":{}}}],["70",{"_index":1193,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["76d219",{"_index":2515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["840",{"_index":1197,"title":{},"body":{"components/HomeComponent.html":{}}}],["9",{"_index":2234,"title":{},"body":{"components/WizardComponent.html":{}}}],["about'},{'nam",{"_index":80,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["about.component.html",{"_index":17,"title":{},"body":{"components/AboutComponent.html":{}}}],["about.component.scss",{"_index":15,"title":{},"body":{"components/AboutComponent.html":{}}}],["about/about.compon",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["aboutcompon",{"_index":1,"title":{"components/AboutComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["abov",{"_index":2408,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":216,"title":{},"body":{"classes/BaseComponent.html":{}}}],["abstractcontrol",{"_index":278,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["accept",{"_index":1955,"title":{},"body":{"components/TermsComponent.html":{}}}],["accessor",{"_index":296,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WizardComponent.html":{}}}],["account",{"_index":711,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["acquir",{"_index":1449,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["action",{"_index":229,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"components/NumericComponent.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/WeatherComponent.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["action.payload",{"_index":2283,"title":{},"body":{"interfaces/WizardState.html":{}}}],["action.payload.map",{"_index":1341,"title":{},"body":{"interfaces/MapState.html":{}}}],["action.payload.nextindex",{"_index":2284,"title":{},"body":{"interfaces/WizardState.html":{}}}],["action.payload.step",{"_index":2281,"title":{},"body":{"interfaces/WizardState.html":{}}}],["action.typ",{"_index":1339,"title":{},"body":{"interfaces/MapState.html":{},"interfaces/WizardState.html":{}}}],["actionreducermap",{"_index":1856,"title":{},"body":{"interfaces/SimulationState.html":{},"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["actions/map.act",{"_index":1334,"title":{},"body":{"interfaces/MapState.html":{}}}],["actions/wizard.act",{"_index":2276,"title":{},"body":{"interfaces/WizardState.html":{}}}],["actual_compon",{"_index":126,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["add",{"_index":1032,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/HomeComponent.html":{}}}],["adddestin",{"_index":989,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["adddestination(control",{"_index":996,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["addedge(edg",{"_index":846,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["addorigin",{"_index":990,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["addorigin(control",{"_index":998,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["addorupdatenode(nod",{"_index":833,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["address",{"_index":1238,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{},"components/WizardComponent.html":{}}}],["addweathercondit",{"_index":2143,"title":{},"body":{"injectables/WeatherService.html":{}}}],["addweatherconditions(data",{"_index":2153,"title":{},"body":{"injectables/WeatherService.html":{}}}],["adjust",{"_index":733,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["adjustmentfactorcoeffici",{"_index":2538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["administr",{"_index":2497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["afterdatasetsdraw",{"_index":2468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["afterviewinit",{"_index":367,"title":{},"body":{"components/ChartsComponent.html":{},"components/HomeComponent.html":{},"components/WeatherComponent.html":{}}}],["again",{"_index":1518,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["algorithm",{"_index":881,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SimulationService.html":{},"interfaces/Tag.html":{}}}],["alias",{"_index":2439,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alreadi",{"_index":1040,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["altern",{"_index":912,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["analysi",{"_index":2535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["and/or",{"_index":2403,"title":{},"body":{"license.html":{}}}],["angular",{"_index":66,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["angular/anim",{"_index":2294,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2300,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/stepp",{"_index":2221,"title":{},"body":{"components/WizardComponent.html":{}}}],["angular/cli",{"_index":2371,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":1640,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":1642,"title":{},"body":{"modules/SharedModule.html":{},"injectables/WeatherService.html":{}}}],["angular/compil",{"_index":2296,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":37,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"modules/MaterialModule.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":1646,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/form",{"_index":301,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WizardComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":2297,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":1212,"title":{},"body":{"components/InfoDialogComponent.html":{},"modules/MaterialModule.html":{},"components/MessageArchivedComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":194,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"modules/SharedModule.html":{},"components/UiComponent.html":{},"modules/UiRoutingModule.html":{},"components/WizardComponent.html":{},"dependencies.html":{}}}],["anim",{"_index":1172,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{}}}],["animate('500m",{"_index":2493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animationtriggermetadata",{"_index":2490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["anime.timelin",{"_index":1184,"title":{},"body":{"components/HomeComponent.html":{}}}],["animej",{"_index":1173,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{}}}],["annot",{"_index":2326,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["anoth",{"_index":1521,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["api",{"_index":1237,"title":{},"body":{"injectables/LocationService.html":{},"components/PrivacyComponent.html":{},"components/TermsComponent.html":{},"index.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{}}}],["app.compon",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":131,"title":{},"body":{"components/AppComponent.html":{}}}],["app_initi",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":81,"title":{"components/AppComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["appconfig",{"_index":2097,"title":{},"body":{"components/WeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["appconfig.apis.openweathermap.apikey",{"_index":2182,"title":{},"body":{"injectables/WeatherService.html":{}}}],["appconfig.apis.openweathermap.forecasturl",{"_index":2175,"title":{},"body":{"injectables/WeatherService.html":{}}}],["appconfig.apis.openweathermap.iconurl",{"_index":2112,"title":{},"body":{"components/WeatherComponent.html":{}}}],["appconfig.apis.openweathermap.weatherurl",{"_index":2176,"title":{},"body":{"injectables/WeatherService.html":{}}}],["appconfig.firebase.projectid",{"_index":2480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appli",{"_index":1109,"title":{},"body":{"components/GoogleMapComponent.html":{},"injectables/SimulationService.html":{}}}],["applic",{"_index":1432,"title":{},"body":{"components/PrivacyComponent.html":{},"injectables/SchedulerService.html":{},"components/TermsComponent.html":{}}}],["appmodul",{"_index":134,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppreloadingstrategi",{"_index":181,"title":{"classes/AppPreloadingStrategy.html":{}},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{}}}],["approutingmodul",{"_index":143,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["archived.compon",{"_index":1650,"title":{},"body":{"modules/SharedModule.html":{},"components/UiComponent.html":{}}}],["archived.component.t",{"_index":1370,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["archived.component.ts:11",{"_index":1373,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["archived.component.ts:13",{"_index":1374,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["area",{"_index":1224,"title":{},"body":{"injectables/LocationService.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["area'},{'nam",{"_index":112,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["area.compon",{"_index":2034,"title":{},"body":{"modules/UiModule.html":{}}}],["area.component.html",{"_index":1555,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.scss",{"_index":1554,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.t",{"_index":1553,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:16",{"_index":1557,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:18",{"_index":1556,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:21",{"_index":1601,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:23",{"_index":1602,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:27",{"_index":1559,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:28",{"_index":1608,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:33",{"_index":1564,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:35",{"_index":1612,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:42",{"_index":1560,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:43",{"_index":1600,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:46",{"_index":1563,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:50",{"_index":1562,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:53",{"_index":1603,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:59",{"_index":1606,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:73",{"_index":1604,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:78",{"_index":1558,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:81",{"_index":1605,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area/search",{"_index":1552,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"modules/UiModule.html":{}}}],["area/select",{"_index":1599,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{},"modules/UiModule.html":{}}}],["areamaxlimit",{"_index":2509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["areaminlimit",{"_index":2511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["argmin",{"_index":610,"title":{},"body":{"injectables/DemandService.html":{}}}],["argmin(linkflow",{"_index":619,"title":{},"body":{"injectables/DemandService.html":{}}}],["argument",{"_index":623,"title":{},"body":{"injectables/DemandService.html":{}}}],["aris",{"_index":2430,"title":{},"body":{"license.html":{}}}],["array",{"_index":641,"title":{},"body":{"injectables/DemandService.html":{}}}],["arriv",{"_index":1699,"title":{},"body":{"components/SimulationComponent.html":{}}}],["arrivedvehicl",{"_index":596,"title":{},"body":{"interfaces/Counts.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{},"injectables/SimulationService.html":{}}}],["art",{"_index":1435,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["assign",{"_index":626,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{}}}],["assignmentmatrix",{"_index":636,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["assignmentmatrix[z",{"_index":662,"title":{},"body":{"injectables/DemandService.html":{}}}],["associ",{"_index":1482,"title":{},"body":{"injectables/SchedulerService.html":{},"license.html":{}}}],["attach",{"_index":761,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["attribut",{"_index":757,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["author",{"_index":2420,"title":{},"body":{"license.html":{}}}],["avail",{"_index":1530,"title":{},"body":{"injectables/SchedulerService.html":{},"modules.html":{}}}],["axi",{"_index":463,"title":{},"body":{"components/ChartsComponent.html":{},"miscellaneous/variables.html":{}}}],["b",{"_index":947,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["babdb",{"_index":2513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bachelor'",{"_index":56,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["bachelor\\'",{"_index":78,"title":{},"body":{"components/AboutComponent.html":{}}}],["backgroundcolor",{"_index":468,"title":{},"body":{"components/ChartsComponent.html":{}}}],["bar",{"_index":1371,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["bar'},{'nam",{"_index":105,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["base",{"_index":666,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{}}}],["basecolor",{"_index":2512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basecompon",{"_index":213,"title":{"classes/BaseComponent.html":{}},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["basecomponent:11",{"_index":289,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["basecomponent:13",{"_index":288,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["basecomponent:22",{"_index":292,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["basecomponent:27",{"_index":290,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["basecomponent:32",{"_index":291,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["basecomponent:9",{"_index":295,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["basictimelin",{"_index":1183,"title":{},"body":{"components/HomeComponent.html":{}}}],["becom",{"_index":1525,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["befor",{"_index":901,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["beginatzero",{"_index":2464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["belong",{"_index":645,"title":{},"body":{"injectables/DemandService.html":{}}}],["beta.17",{"_index":2302,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":675,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["bf",{"_index":897,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["blur",{"_index":2239,"title":{},"body":{"components/WizardComponent.html":{}}}],["boolean",{"_index":244,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"injectables/SimulationService.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["bordercolor",{"_index":441,"title":{},"body":{"components/ChartsComponent.html":{}}}],["borderwidth",{"_index":466,"title":{},"body":{"components/ChartsComponent.html":{}}}],["bound",{"_index":1304,"title":{},"body":{"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/TermsComponent.html":{},"components/WizardComponent.html":{}}}],["breadth",{"_index":895,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["break",{"_index":352,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["broken",{"_index":2128,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["brokencloud",{"_index":2127,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["brows",{"_index":2432,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1302,"title":{},"body":{"components/MapComponent.html":{}}}],["buildodpair",{"_index":256,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["buildodpair(odpair",{"_index":274,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["built",{"_index":65,"title":{},"body":{"components/AboutComponent.html":{}}}],["busiest",{"_index":455,"title":{},"body":{"components/ChartsComponent.html":{}}}],["busiestchart",{"_index":371,"title":{},"body":{"components/ChartsComponent.html":{}}}],["busiestchartopt",{"_index":410,"title":{},"body":{"components/ChartsComponent.html":{},"miscellaneous/variables.html":{}}}],["busiestcolor",{"_index":411,"title":{},"body":{"components/ChartsComponent.html":{},"miscellaneous/variables.html":{}}}],["busiestctx",{"_index":372,"title":{},"body":{"components/ChartsComponent.html":{}}}],["busiestedg",{"_index":1803,"title":{},"body":{"injectables/SimulationService.html":{}}}],["busiestedgecapac",{"_index":1819,"title":{},"body":{"injectables/SimulationService.html":{}}}],["busiestedgedata",{"_index":1817,"title":{},"body":{"injectables/SimulationService.html":{}}}],["busiestedgedelay",{"_index":1821,"title":{},"body":{"injectables/SimulationService.html":{}}}],["busiestedgelabel",{"_index":1815,"title":{},"body":{"injectables/SimulationService.html":{}}}],["c",{"_index":2387,"title":{},"body":{"license.html":{}}}],["calc",{"_index":1479,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["calcassignmentmatrix(odpair",{"_index":877,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["calcincidencematrix",{"_index":869,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["calclinkflow",{"_index":690,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["calcmaxflow",{"_index":691,"title":{},"body":{"classes/Edge.html":{}}}],["calcmaxflow(factor",{"_index":729,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["calcodmatrix",{"_index":611,"title":{},"body":{"injectables/DemandService.html":{}}}],["calcpathcosts(odpair",{"_index":953,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["calcshortestpath",{"_index":1545,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["calcshortestpaths(odpair",{"_index":865,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["calcshortestpathsprobabilities(odpair",{"_index":936,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["calcul",{"_index":628,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SimulationService.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{}}}],["calendar_today",{"_index":1626,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["call",{"_index":2161,"title":{},"body":{"injectables/WeatherService.html":{}}}],["cancomponentdeactiv",{"_index":237,"title":{"interfaces/CanComponentDeactivate.html":{}},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/UiComponent.html":{}}}],["candeactiv",{"_index":241,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/UiComponent.html":{},"modules/UiRoutingModule.html":{}}}],["candeactivate(compon",{"_index":246,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{}}}],["candeactivateguard",{"_index":245,"title":{"injectables/CanDeactivateGuard.html":{}},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"modules/SharedModule.html":{},"modules/UiRoutingModule.html":{}}}],["cannnot",{"_index":1520,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["capac",{"_index":477,"title":{},"body":{"components/ChartsComponent.html":{},"miscellaneous/variables.html":{}}}],["case",{"_index":347,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{}}}],["catch((error",{"_index":1574,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["catcherror",{"_index":2172,"title":{},"body":{"injectables/WeatherService.html":{}}}],["catcherror((error",{"_index":2186,"title":{},"body":{"injectables/WeatherService.html":{}}}],["categori",{"_index":1444,"title":{},"body":{"components/PrivacyComponent.html":{},"miscellaneous/variables.html":{}}}],["cd",{"_index":2383,"title":{},"body":{"index.html":{}}}],["cdr",{"_index":1972,"title":{},"body":{"components/UiComponent.html":{}}}],["center",{"_index":482,"title":{},"body":{"components/ChartsComponent.html":{},"components/GoogleMapComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["central1",{"_index":2479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["central1/networkdata",{"_index":2485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["central1/trafficdata",{"_index":2486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["centroid",{"_index":1311,"title":{},"body":{"components/MapComponent.html":{}}}],["chang",{"_index":85,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"miscellaneous/enumerations.html":{}}}],["changedemand",{"_index":612,"title":{},"body":{"injectables/DemandService.html":{}}}],["changedemand(demand",{"_index":629,"title":{},"body":{"injectables/DemandService.html":{}}}],["changedetectorref",{"_index":1973,"title":{},"body":{"components/UiComponent.html":{}}}],["changeofconditionscompon",{"_index":83,"title":{"components/ChangeOfConditionsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["changes['cent",{"_index":1126,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["changes['zoom",{"_index":1128,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["changeweath",{"_index":2144,"title":{},"body":{"injectables/WeatherService.html":{}}}],["changeweather(weath",{"_index":2155,"title":{},"body":{"injectables/WeatherService.html":{}}}],["charg",{"_index":2391,"title":{},"body":{"license.html":{}}}],["chart",{"_index":368,"title":{},"body":{"components/ChartsComponent.html":{}}}],["chart(this.busiestctx",{"_index":437,"title":{},"body":{"components/ChartsComponent.html":{}}}],["chart(this.heavytrafficctx",{"_index":429,"title":{},"body":{"components/ChartsComponent.html":{}}}],["chart(this.moderatetrafficctx",{"_index":435,"title":{},"body":{"components/ChartsComponent.html":{}}}],["chart.j",{"_index":406,"title":{},"body":{"components/ChartsComponent.html":{},"dependencies.html":{}}}],["chartj",{"_index":2324,"title":{},"body":{"dependencies.html":{}}}],["charts'},{'nam",{"_index":89,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["charts.component.html",{"_index":370,"title":{},"body":{"components/ChartsComponent.html":{}}}],["charts.component.scss",{"_index":369,"title":{},"body":{"components/ChartsComponent.html":{}}}],["charts/charts.compon",{"_index":2047,"title":{},"body":{"modules/UiModule.html":{}}}],["chartscompon",{"_index":87,"title":{"components/ChartsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["check",{"_index":644,"title":{},"body":{"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"injectables/SchedulerService.html":{},"injectables/SimulationService.html":{}}}],["circular",{"_index":860,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["claim",{"_index":2423,"title":{},"body":{"license.html":{}}}],["class",{"_index":39,"title":{"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"classes/GoOn.html":{},"classes/Heap.html":{},"classes/MapChanged.html":{},"classes/Node.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"classes/Statistics.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"overview.html":{}}}],["clear",{"_index":1315,"title":{},"body":{"components/MapComponent.html":{},"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["clearski",{"_index":2120,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["cli",{"_index":2370,"title":{},"body":{"index.html":{}}}],["click",{"_index":1097,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["clock",{"_index":1470,"title":{},"body":{"injectables/SchedulerService.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{}}}],["clock.servic",{"_index":1706,"title":{},"body":{"modules/SimulationModule.html":{}}}],["clockservic",{"_index":497,"title":{"injectables/ClockService.html":{}},"body":{"injectables/ClockService.html":{},"injectables/SchedulerService.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"components/StatisticsComponent.html":{},"overview.html":{}}}],["clockstatist",{"_index":1935,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["cloud",{"_index":2124,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["cloudfunctions.net/networkdata",{"_index":2481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cloudfunctions.net/trafficdata",{"_index":2482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_appmodul",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_demandmodul",{"_index":602,"title":{},"body":{"modules/DemandModule.html":{},"overview.html":{}}}],["cluster_demandmodule_provid",{"_index":603,"title":{},"body":{"modules/DemandModule.html":{},"overview.html":{}}}],["cluster_locationmodul",{"_index":1214,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_provid",{"_index":1215,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_networkmodul",{"_index":1377,"title":{},"body":{"modules/NetworkModule.html":{},"overview.html":{}}}],["cluster_networkmodule_import",{"_index":1378,"title":{},"body":{"modules/NetworkModule.html":{},"overview.html":{}}}],["cluster_networkmodule_provid",{"_index":1379,"title":{},"body":{"modules/NetworkModule.html":{},"overview.html":{}}}],["cluster_sharedmodul",{"_index":1632,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declar",{"_index":1633,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_export",{"_index":1635,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_import",{"_index":1634,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_simulationmodul",{"_index":1703,"title":{},"body":{"modules/SimulationModule.html":{},"overview.html":{}}}],["cluster_simulationmodule_provid",{"_index":1704,"title":{},"body":{"modules/SimulationModule.html":{},"overview.html":{}}}],["cluster_uimodul",{"_index":2020,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_uimodule_declar",{"_index":2021,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_uimodule_import",{"_index":2022,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_uimodule_provid",{"_index":2023,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_weathermodul",{"_index":2135,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["cluster_weathermodule_provid",{"_index":2136,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["code",{"_index":62,"title":{},"body":{"components/AboutComponent.html":{},"modules/MaterialModule.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{}}}],["codeaddress",{"_index":1229,"title":{},"body":{"injectables/LocationService.html":{}}}],["codeaddress(address",{"_index":1234,"title":{},"body":{"injectables/LocationService.html":{}}}],["coeffici",{"_index":2534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collect",{"_index":1445,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["color",{"_index":737,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["combin",{"_index":748,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["combine(existingnode.incomingedg",{"_index":837,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["combine(existingnode.outgoingedg",{"_index":840,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["commonmodul",{"_index":1639,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["complet",{"_index":1031,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/HomeComponent.html":{}}}],["compon",{"_index":0,"title":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiRoutingModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["component.candeactiv",{"_index":247,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{}}}],["component_templ",{"_index":74,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["comput",{"_index":58,"title":{},"body":{"components/AboutComponent.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["condit",{"_index":253,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"license.html":{}}}],["conditions'},{'nam",{"_index":86,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["conditions.compon",{"_index":2039,"title":{},"body":{"modules/UiModule.html":{}}}],["conditions.component.html",{"_index":255,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.scss",{"_index":254,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.t",{"_index":251,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:104",{"_index":284,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:108",{"_index":286,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:115",{"_index":279,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:119",{"_index":276,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:26",{"_index":272,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:28",{"_index":273,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:30",{"_index":294,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:32",{"_index":298,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:34",{"_index":271,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:49",{"_index":282,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:55",{"_index":287,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:78",{"_index":283,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions/chang",{"_index":250,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"modules/UiModule.html":{}}}],["config",{"_index":316,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"injectables/SimulationService.html":{},"interfaces/Tag.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{}}}],["config.json",{"_index":2381,"title":{},"body":{"index.html":{}}}],["config.t",{"_index":2442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configur",{"_index":2562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connect",{"_index":1448,"title":{},"body":{"components/PrivacyComponent.html":{},"injectables/SchedulerService.html":{},"injectables/SimulationService.html":{},"license.html":{}}}],["consol",{"_index":2372,"title":{},"body":{"index.html":{}}}],["const",{"_index":329,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Map.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"modules/SharedModule.html":{},"injectables/SimulationService.html":{},"interfaces/SimulationState.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"components/AboutComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["constructor(@inject(mat_snack_bar_data",{"_index":1376,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["constructor(data",{"_index":1372,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["constructor(dialogref",{"_index":1205,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["constructor(edgeid",{"_index":697,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["constructor(elementref",{"_index":384,"title":{},"body":{"components/ChartsComponent.html":{},"components/HomeComponent.html":{},"components/WeatherComponent.html":{}}}],["constructor(formbuild",{"_index":261,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SimulationComponent.html":{},"components/WizardComponent.html":{}}}],["constructor(http",{"_index":2149,"title":{},"body":{"injectables/WeatherService.html":{}}}],["constructor(map",{"_index":1088,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["constructor(maticonregistri",{"_index":1364,"title":{},"body":{"modules/MaterialModule.html":{}}}],["constructor(network",{"_index":617,"title":{},"body":{"injectables/DemandService.html":{}}}],["constructor(nodeid",{"_index":781,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["constructor(payload",{"_index":1058,"title":{},"body":{"classes/GoOn.html":{},"classes/MapChanged.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{}}}],["constructor(priv",{"_index":652,"title":{},"body":{"injectables/DemandService.html":{},"components/HomeComponent.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{}}}],["constructor(publ",{"_index":1070,"title":{},"body":{"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/MapChanged.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{}}}],["constructor(relationid",{"_index":817,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["constructor(rout",{"_index":1967,"title":{},"body":{"components/UiComponent.html":{}}}],["constructor(stor",{"_index":515,"title":{},"body":{"injectables/ClockService.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"injectables/WizardService.html":{}}}],["constructor(wizard",{"_index":1468,"title":{},"body":{"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["contain",{"_index":1142,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["content",{"_index":476,"title":{},"body":{"components/ChartsComponent.html":{}}}],["continu",{"_index":364,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{}}}],["contract",{"_index":2427,"title":{},"body":{"license.html":{}}}],["control",{"_index":349,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"components/SimulationComponent.html":{},"miscellaneous/enumerations.html":{}}}],["control.get([control.length",{"_index":1045,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["control.length",{"_index":1014,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["control.paus",{"_index":563,"title":{},"body":{"injectables/ClockService.html":{}}}],["control.push(this.formbuilder.group",{"_index":1044,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["control.quick",{"_index":571,"title":{},"body":{"injectables/ClockService.html":{}}}],["control.removeat(i",{"_index":1015,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["control.slow",{"_index":569,"title":{},"body":{"injectables/ClockService.html":{}}}],["control.start",{"_index":561,"title":{},"body":{"injectables/ClockService.html":{}}}],["control.step",{"_index":567,"title":{},"body":{"injectables/ClockService.html":{}}}],["control.stop",{"_index":565,"title":{},"body":{"injectables/ClockService.html":{}}}],["control.valu",{"_index":1020,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["convert",{"_index":1568,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"injectables/WeatherService.html":{}}}],["cooki",{"_index":1451,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["cooper",{"_index":1298,"title":{},"body":{"components/MapComponent.html":{}}}],["coordin",{"_index":1223,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["copi",{"_index":2392,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":75,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"license.html":{}}}],["copyright&nbsp;©&nbsp",{"_index":49,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{}}}],["core",{"_index":2335,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":1483,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["correctgraph",{"_index":1529,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["cost",{"_index":890,"title":{},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["count",{"_index":593,"title":{"interfaces/Counts.html":{}},"body":{"interfaces/Counts.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Simulation.html":{},"components/SimulationComponent.html":{},"injectables/SimulationService.html":{},"interfaces/Tag.html":{}}}],["counts?.arrivedvehicl",{"_index":1700,"title":{},"body":{"components/SimulationComponent.html":{}}}],["counts?.startedvehicl",{"_index":1698,"title":{},"body":{"components/SimulationComponent.html":{}}}],["creat",{"_index":914,"title":{},"body":{"classes/Edge.html":{},"components/GoogleMapComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"components/WizardComponent.html":{},"index.html":{}}}],["createchart",{"_index":378,"title":{},"body":{"components/ChartsComponent.html":{}}}],["createfeatureselector",{"_index":1857,"title":{},"body":{"interfaces/SimulationState.html":{},"interfaces/UiState.html":{}}}],["createfeatureselector('simul",{"_index":1863,"title":{},"body":{"interfaces/SimulationState.html":{},"miscellaneous/variables.html":{}}}],["createfeatureselector('ui",{"_index":2064,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["creategraph",{"_index":1519,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["createmap",{"_index":1079,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["createmap(el",{"_index":1112,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["createselector",{"_index":1858,"title":{},"body":{"interfaces/SimulationState.html":{},"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["cross",{"_index":873,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["cumul",{"_index":1761,"title":{},"body":{"injectables/SimulationService.html":{}}}],["curr",{"_index":1163,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{},"injectables/SimulationService.html":{},"classes/Statistics.html":{}}}],["curr.heavytrafficcount",{"_index":1911,"title":{},"body":{"classes/Statistics.html":{}}}],["curr.moderatetrafficcount",{"_index":1912,"title":{},"body":{"classes/Statistics.html":{}}}],["current",{"_index":712,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{},"interfaces/UiState.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["currentstep",{"_index":346,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["currentyear",{"_index":20,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{}}}],["cycl",{"_index":1745,"title":{},"body":{"injectables/SimulationService.html":{}}}],["d",{"_index":357,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["d.count",{"_index":907,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["d2191a",{"_index":2519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d27519",{"_index":2517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damag",{"_index":2424,"title":{},"body":{"license.html":{}}}],["data",{"_index":46,"title":{},"body":{"components/AboutComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"interfaces/Counts.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Map.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Simulation.html":{},"injectables/SimulationService.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["data.list.length",{"_index":2188,"title":{},"body":{"injectables/WeatherService.html":{}}}],["data.list[0",{"_index":2198,"title":{},"body":{"injectables/WeatherService.html":{}}}],["data.list[0].dt",{"_index":2195,"title":{},"body":{"injectables/WeatherService.html":{}}}],["data.push",{"_index":1845,"title":{},"body":{"injectables/SimulationService.html":{}}}],["dataset",{"_index":432,"title":{},"body":{"components/ChartsComponent.html":{}}}],["date",{"_index":1610,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{},"injectables/WeatherService.html":{}}}],["date().getfullyear",{"_index":35,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{}}}],["date.now",{"_index":589,"title":{},"body":{"injectables/ClockService.html":{}}}],["datetim",{"_index":2030,"title":{},"body":{"modules/UiModule.html":{},"dependencies.html":{}}}],["day",{"_index":1613,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["deactiv",{"_index":239,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"modules/SharedModule.html":{},"components/UiComponent.html":{},"modules/UiRoutingModule.html":{}}}],["deal",{"_index":2394,"title":{},"body":{"license.html":{}}}],["decim",{"_index":2361,"title":{},"body":{"miscellaneous/functions.html":{}}}],["declar",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["decor",{"_index":1208,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/MessageArchivedComponent.html":{},"components/WizardComponent.html":{}}}],["decre",{"_index":1438,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["deepclon",{"_index":1332,"title":{},"body":{"interfaces/MapState.html":{},"interfaces/WizardState.html":{}}}],["deepclone(initialmapst",{"_index":1338,"title":{},"body":{"interfaces/MapState.html":{}}}],["deepclone(initialwizardst",{"_index":2279,"title":{},"body":{"interfaces/WizardState.html":{}}}],["deepclone(state.map",{"_index":1342,"title":{},"body":{"interfaces/MapState.html":{}}}],["deepclone(state.step",{"_index":2282,"title":{},"body":{"interfaces/WizardState.html":{}}}],["default",{"_index":32,"title":{},"body":{"components/AboutComponent.html":{},"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":24,"title":{},"body":{"components/AboutComponent.html":{},"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"injectables/SimulationService.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["degre",{"_index":57,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["delay",{"_index":484,"title":{},"body":{"components/ChartsComponent.html":{},"interfaces/Counts.html":{},"components/HomeComponent.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{},"injectables/SimulationService.html":{}}}],["delet",{"_index":1048,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["deleteodpair",{"_index":991,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["deleteodpair(i",{"_index":1000,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand",{"_index":269,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"injectables/SchedulerService.html":{},"injectables/SimulationService.html":{},"components/WizardComponent.html":{}}}],["demand'},{'nam",{"_index":92,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["demand.compon",{"_index":2037,"title":{},"body":{"modules/UiModule.html":{}}}],["demand.component.html",{"_index":988,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.scss",{"_index":987,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.t",{"_index":986,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:142",{"_index":999,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:150",{"_index":997,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:23",{"_index":994,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:25",{"_index":995,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:27",{"_index":1008,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:29",{"_index":1009,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:31",{"_index":993,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:44",{"_index":1002,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:50",{"_index":1007,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:59",{"_index":1003,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:81",{"_index":1004,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:85",{"_index":1001,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:93",{"_index":1006,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.length",{"_index":658,"title":{},"body":{"injectables/DemandService.html":{}}}],["demand.servic",{"_index":605,"title":{},"body":{"modules/DemandModule.html":{}}}],["demand/demand.modul",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["demand/demand.servic",{"_index":305,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/SchedulerService.html":{},"injectables/SimulationService.html":{}}}],["demand/estim",{"_index":985,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"modules/UiModule.html":{}}}],["demandmodul",{"_index":144,"title":{"modules/DemandModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"modules.html":{},"overview.html":{}}}],["demandservic",{"_index":270,"title":{"injectables/DemandService.html":{}},"body":{"components/ChangeOfConditionsComponent.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"injectables/SchedulerService.html":{},"injectables/SimulationService.html":{},"overview.html":{}}}],["deni",{"_index":1590,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["denomin",{"_index":945,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["densiti",{"_index":678,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["dep",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["depend",{"_index":135,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{},"overview.html":{}}}],["describ",{"_index":756,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["descript",{"_index":215,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/Heap.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"interfaces/MapState.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SimulationService.html":{},"interfaces/SimulationState.html":{},"classes/Statistics.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{},"miscellaneous/functions.html":{}}}],["destin",{"_index":679,"title":{},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["determin",{"_index":1755,"title":{},"body":{"injectables/SimulationService.html":{}}}],["develop",{"_index":54,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["dialog",{"_index":1202,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/UiComponent.html":{}}}],["dialog'},{'nam",{"_index":101,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["dialog.compon",{"_index":1651,"title":{},"body":{"modules/SharedModule.html":{},"components/UiComponent.html":{}}}],["dialog.component.t",{"_index":1201,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:18",{"_index":1207,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:21",{"_index":1210,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:22",{"_index":1209,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialogref",{"_index":1204,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/UiComponent.html":{}}}],["dialogref.afterclos",{"_index":2018,"title":{},"body":{"components/UiComponent.html":{}}}],["dialogresult",{"_index":2007,"title":{},"body":{"components/UiComponent.html":{}}}],["differ",{"_index":913,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["direct",{"_index":72,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"index.html":{}}}],["directives/pairs.direct",{"_index":2224,"title":{},"body":{"components/WizardComponent.html":{}}}],["disabledefaultui",{"_index":1081,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["disabledoubleclickzoom",{"_index":1082,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["disagre",{"_index":1956,"title":{},"body":{"components/TermsComponent.html":{}}}],["display",{"_index":1106,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/PrivacyComponent.html":{},"miscellaneous/variables.html":{}}}],["displayedcolumn",{"_index":1396,"title":{},"body":{"components/NumericComponent.html":{}}}],["dissert",{"_index":55,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["distanc",{"_index":680,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["distribut",{"_index":2401,"title":{},"body":{"license.html":{}}}],["divid",{"_index":1772,"title":{},"body":{"injectables/SimulationService.html":{}}}],["doc",{"_index":2365,"title":{},"body":{"index.html":{}}}],["document",{"_index":64,"title":{},"body":{"components/AboutComponent.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"index.html":{},"license.html":{}}}],["doesn't",{"_index":1596,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["domsanit",{"_index":1363,"title":{},"body":{"modules/MaterialModule.html":{}}}],["domsanitizer.bypasssecuritytrustresourceurl('./assets/images/ic_code_24px.svg",{"_index":1368,"title":{},"body":{"modules/MaterialModule.html":{}}}],["domsanitizer.bypasssecuritytrustresourceurl('./assets/images/ic_more_vert_24px.svg",{"_index":1367,"title":{},"body":{"modules/MaterialModule.html":{}}}],["doubl",{"_index":1096,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["downstream",{"_index":1787,"title":{},"body":{"injectables/SimulationService.html":{}}}],["draw",{"_index":693,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["draw(color",{"_index":734,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["drawingopt",{"_index":681,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["drawtim",{"_index":2467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["durat",{"_index":682,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["durationintraff",{"_index":683,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["dynam",{"_index":2298,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":930,"title":{},"body":{"classes/Edge.html":{},"classes/EnumValues.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["e[nam",{"_index":967,"title":{},"body":{"classes/EnumValues.html":{}}}],["each",{"_index":650,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"components/GoogleMapComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"injectables/SimulationService.html":{},"interfaces/Tag.html":{}}}],["earth'",{"_index":770,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["eas",{"_index":1191,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["edg",{"_index":456,"title":{"classes/Edge.html":{}},"body":{"components/ChartsComponent.html":{},"interfaces/Counts.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Simulation.html":{},"injectables/SimulationService.html":{},"classes/Statistics.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["edge.calcmaxflow(factor",{"_index":880,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["edge.calcreceivingflow(this.timeperiod",{"_index":1828,"title":{},"body":{"injectables/SimulationService.html":{}}}],["edge.calcsendingflows(this.timeperiod",{"_index":1827,"title":{},"body":{"injectables/SimulationService.html":{}}}],["edge.delay",{"_index":1847,"title":{},"body":{"injectables/SimulationService.html":{}}}],["edge.dist",{"_index":1799,"title":{},"body":{"injectables/SimulationService.html":{}}}],["edge.downstream[i",{"_index":1921,"title":{},"body":{"classes/Statistics.html":{}}}],["edge.drawingoptions.infowindow.setcontent('edg",{"_index":932,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["edge.dur",{"_index":1801,"title":{},"body":{"injectables/SimulationService.html":{},"classes/Statistics.html":{}}}],["edge.edgeid",{"_index":845,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["edge.heavytrafficcount",{"_index":1907,"title":{},"body":{"classes/Statistics.html":{}}}],["edge.label",{"_index":867,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SimulationService.html":{},"classes/Statistics.html":{},"interfaces/Tag.html":{}}}],["edge.moderatetrafficcount",{"_index":1908,"title":{},"body":{"classes/Statistics.html":{}}}],["edge.origin.nodeid",{"_index":908,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["edge.stop",{"_index":1848,"title":{},"body":{"injectables/SimulationService.html":{}}}],["edge.trafficcount",{"_index":1846,"title":{},"body":{"injectables/SimulationService.html":{}}}],["edge.trafficvolum",{"_index":1833,"title":{},"body":{"injectables/SimulationService.html":{}}}],["edge.upstream.map((valu",{"_index":1920,"title":{},"body":{"classes/Statistics.html":{}}}],["edgeid",{"_index":684,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["edgeofa.edgeid",{"_index":926,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["edgeofb.edgeid",{"_index":925,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["edges.filt",{"_index":1832,"title":{},"body":{"injectables/SimulationService.html":{}}}],["edges.filter((edg",{"_index":1919,"title":{},"body":{"classes/Statistics.html":{}}}],["edges.push(edg",{"_index":929,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["edges.reduce((prev",{"_index":1835,"title":{},"body":{"injectables/SimulationService.html":{},"classes/Statistics.html":{}}}],["edges[m].edgeid",{"_index":872,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["el",{"_index":1115,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{}}}],["element",{"_index":71,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["element.delay",{"_index":1413,"title":{},"body":{"components/NumericComponent.html":{}}}],["element.edg",{"_index":1408,"title":{},"body":{"components/NumericComponent.html":{}}}],["element.innerhtml",{"_index":1182,"title":{},"body":{"components/HomeComponent.html":{}}}],["element.innertext",{"_index":1179,"title":{},"body":{"components/HomeComponent.html":{}}}],["element.stop",{"_index":1414,"title":{},"body":{"components/NumericComponent.html":{}}}],["element.trafficcount",{"_index":1412,"title":{},"body":{"components/NumericComponent.html":{}}}],["element.trafficvolum",{"_index":1411,"title":{},"body":{"components/NumericComponent.html":{}}}],["element.waynam",{"_index":1410,"title":{},"body":{"components/NumericComponent.html":{}}}],["elementref",{"_index":385,"title":{},"body":{"components/ChartsComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/WeatherComponent.html":{}}}],["elementtyp",{"_index":2498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["empti",{"_index":1628,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["enabl",{"_index":478,"title":{},"body":{"components/ChartsComponent.html":{},"components/GoogleMapComponent.html":{},"index.html":{}}}],["enables/dis",{"_index":1094,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["encapsul",{"_index":1274,"title":{},"body":{"components/MapComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["end",{"_index":552,"title":{},"body":{"injectables/ClockService.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"injectables/SimulationService.html":{},"interfaces/SimulationState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["endltm",{"_index":1711,"title":{},"body":{"injectables/SimulationService.html":{}}}],["endsimul",{"_index":499,"title":{},"body":{"injectables/ClockService.html":{},"components/SimulationComponent.html":{},"components/WizardComponent.html":{}}}],["endtim",{"_index":591,"title":{},"body":{"injectables/ClockService.html":{}}}],["engin",{"_index":59,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["enter",{"_index":1629,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["entrycompon",{"_index":1637,"title":{},"body":{"modules/SharedModule.html":{}}}],["enum",{"_index":549,"title":{},"body":{"injectables/ClockService.html":{},"classes/Edge.html":{},"classes/GoOn.html":{},"interfaces/LinkFlow.html":{},"classes/MapChanged.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"interfaces/WeatherConditions.html":{}}}],["enumer",{"_index":2341,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumvalu",{"_index":314,"title":{"classes/EnumValues.html":{}},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{}}}],["enumvalues.getvalues(pathtyp",{"_index":1012,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["enumvalues.getvalues(weatherdescript",{"_index":322,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["enumvaluetyp",{"_index":963,"title":{},"body":{"classes/EnumValues.html":{},"miscellaneous/typealiases.html":{}}}],["environ",{"_index":753,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["environment.test",{"_index":931,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["environments/environ",{"_index":754,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["eppstein",{"_index":882,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["error",{"_index":746,"title":{},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["error.cod",{"_index":1587,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["error.permission_deni",{"_index":1588,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["error.position_unavail",{"_index":1591,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["error.timeout",{"_index":1593,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["estim",{"_index":91,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["estimate(linkflow",{"_index":631,"title":{},"body":{"injectables/DemandService.html":{}}}],["estimateofdemandcompon",{"_index":90,"title":{"components/EstimateOfDemandComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["estimations[x",{"_index":663,"title":{},"body":{"injectables/DemandService.html":{}}}],["eu",{"_index":1440,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["evalu",{"_index":2162,"title":{},"body":{"injectables/WeatherService.html":{}}}],["event",{"_index":2212,"title":{},"body":{"components/WizardComponent.html":{},"license.html":{}}}],["event.previouslyselectedindex",{"_index":2242,"title":{},"body":{"components/WizardComponent.html":{}}}],["event.selectedindex",{"_index":2243,"title":{},"body":{"components/WizardComponent.html":{}}}],["everpol",{"_index":2321,"title":{},"body":{"dependencies.html":{}}}],["execut",{"_index":505,"title":{},"body":{"injectables/ClockService.html":{}}}],["exist",{"_index":1734,"title":{},"body":{"injectables/SimulationService.html":{}}}],["existingnod",{"_index":834,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["existingnode.incomingedg",{"_index":836,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["existingnode.outgoingedg",{"_index":839,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["exit",{"_index":1942,"title":{},"body":{"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["exp",{"_index":943,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["expect",{"_index":1784,"title":{},"body":{"injectables/SimulationService.html":{}}}],["explor",{"_index":899,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["export",{"_index":38,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"interfaces/SimulationState.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["express",{"_index":2415,"title":{},"body":{"license.html":{}}}],["extend",{"_index":252,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["extern",{"_index":1455,"title":{},"body":{"components/PrivacyComponent.html":{},"components/TermsComponent.html":{}}}],["extract",{"_index":1729,"title":{},"body":{"injectables/SimulationService.html":{},"classes/Statistics.html":{}}}],["factor",{"_index":732,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["fals",{"_index":210,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SimulationService.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["fast_forward",{"_index":1697,"title":{},"body":{"components/SimulationComponent.html":{}}}],["fast_rewind",{"_index":1695,"title":{},"body":{"components/SimulationComponent.html":{}}}],["featuresimulationst",{"_index":1862,"title":{},"body":{"interfaces/SimulationState.html":{},"miscellaneous/variables.html":{}}}],["featuretyp",{"_index":2496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["featureuist",{"_index":2063,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["few",{"_index":2123,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["fewcloud",{"_index":2122,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"interfaces/SimulationState.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"index.html":{},"license.html":{}}}],["fill",{"_index":442,"title":{},"body":{"components/ChartsComponent.html":{}}}],["filterpaths(shortestpath",{"_index":915,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["finish",{"_index":1794,"title":{},"body":{"injectables/SimulationService.html":{}}}],["firebas",{"_index":68,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["firebaserc",{"_index":2380,"title":{},"body":{"index.html":{}}}],["first",{"_index":896,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"classes/Statistics.html":{},"interfaces/Tag.html":{}}}],["fit",{"_index":2418,"title":{},"body":{"license.html":{}}}],["flexlayoutmodul",{"_index":1645,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["flow",{"_index":625,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"injectables/SimulationService.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["follow",{"_index":1477,"title":{},"body":{"injectables/SchedulerService.html":{},"license.html":{}}}],["fontcolor",{"_index":472,"title":{},"body":{"components/ChartsComponent.html":{}}}],["fontstyl",{"_index":470,"title":{},"body":{"components/ChartsComponent.html":{}}}],["footer",{"_index":1050,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'nam",{"_index":94,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["footer.component.html",{"_index":1052,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":1051,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.compon",{"_index":1649,"title":{},"body":{"modules/SharedModule.html":{}}}],["footercompon",{"_index":93,"title":{"components/FooterComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["forecast",{"_index":2140,"title":{},"body":{"injectables/WeatherService.html":{}}}],["form",{"_index":233,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/Map.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["formarray",{"_index":299,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/WizardComponent.html":{}}}],["format",{"_index":970,"title":{},"body":{"classes/EnumValues.html":{},"miscellaneous/functions.html":{}}}],["formattimefrommillisecond",{"_index":1675,"title":{},"body":{"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"miscellaneous/functions.html":{}}}],["formattimefrommilliseconds(0",{"_index":1688,"title":{},"body":{"components/SimulationComponent.html":{}}}],["formattimefrommilliseconds(clockstatistics.totalprocessingtim",{"_index":1941,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["formattimefrommilliseconds(clockstatistics.totalsimulatedtim",{"_index":1940,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["formattimefrommilliseconds(m",{"_index":979,"title":{},"body":{"classes/EnumValues.html":{},"miscellaneous/functions.html":{}}}],["formattimefrommilliseconds(periods.simulatedtimeperiod",{"_index":1687,"title":{},"body":{"components/SimulationComponent.html":{}}}],["formattimefromsecond",{"_index":408,"title":{},"body":{"components/ChartsComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"miscellaneous/functions.html":{}}}],["formattimefromseconds(",{"_index":973,"title":{},"body":{"classes/EnumValues.html":{},"miscellaneous/functions.html":{}}}],["formattimefromseconds(periods.timeperiods[periods.timeperiods.length",{"_index":1682,"title":{},"body":{"components/SimulationComponent.html":{}}}],["formattimefromseconds(simulationstatistics.totaltim",{"_index":1938,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["formattimefromseconds(this.statistics.busiestedgedelay",{"_index":481,"title":{},"body":{"components/ChartsComponent.html":{}}}],["formattimefromseconds(valu",{"_index":487,"title":{},"body":{"components/ChartsComponent.html":{}}}],["formbuild",{"_index":262,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SimulationComponent.html":{},"components/WizardComponent.html":{}}}],["formgroup",{"_index":260,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WizardComponent.html":{}}}],["formsmodul",{"_index":1643,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["formstep",{"_index":2218,"title":{},"body":{"components/WizardComponent.html":{}}}],["forroot",{"_index":1653,"title":{},"body":{"modules/SharedModule.html":{}}}],["fraction",{"_index":2553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["free",{"_index":716,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"license.html":{}}}],["freeflowveloc",{"_index":685,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["frommap",{"_index":2059,"title":{},"body":{"interfaces/UiState.html":{}}}],["frommap.getmap",{"_index":2071,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["frommap.mapreduc",{"_index":2062,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["frommap.mapst",{"_index":2055,"title":{},"body":{"interfaces/UiState.html":{}}}],["fromsimul",{"_index":545,"title":{},"body":{"injectables/ClockService.html":{},"components/NumericComponent.html":{},"components/SimulationComponent.html":{},"injectables/SimulationService.html":{},"interfaces/SimulationState.html":{}}}],["fromsimulation.getend",{"_index":1866,"title":{},"body":{"interfaces/SimulationState.html":{},"miscellaneous/variables.html":{}}}],["fromsimulation.getperiod",{"_index":1867,"title":{},"body":{"interfaces/SimulationState.html":{},"miscellaneous/variables.html":{}}}],["fromsimulation.getsimul",{"_index":1865,"title":{},"body":{"interfaces/SimulationState.html":{},"miscellaneous/variables.html":{}}}],["fromsimulation.simulationreduc",{"_index":1861,"title":{},"body":{"interfaces/SimulationState.html":{},"miscellaneous/variables.html":{}}}],["fromsimulation.simulationst",{"_index":1855,"title":{},"body":{"interfaces/SimulationState.html":{}}}],["fromui",{"_index":306,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WizardService.html":{}}}],["fromwizard",{"_index":2057,"title":{},"body":{"interfaces/UiState.html":{}}}],["fromwizard.getcurrentstep",{"_index":2068,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["fromwizard.geterror",{"_index":2069,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["fromwizard.getpend",{"_index":2070,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["fromwizard.getstep",{"_index":2067,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["fromwizard.wizardreduc",{"_index":2061,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["fromwizard.wizardst",{"_index":2056,"title":{},"body":{"interfaces/UiState.html":{}}}],["full",{"_index":207,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TermsComponent.html":{},"modules/UiRoutingModule.html":{}}}],["function",{"_index":189,"title":{"miscellaneous/functions.html":{}},"body":{"classes/AppPreloadingStrategy.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/DemandService.html":{},"classes/EnumValues.html":{},"interfaces/MapState.html":{},"interfaces/WizardState.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["functions/src/funct",{"_index":2382,"title":{},"body":{"index.html":{}}}],["furnish",{"_index":2406,"title":{},"body":{"license.html":{}}}],["g",{"_index":2369,"title":{},"body":{"index.html":{}}}],["gdpr",{"_index":1443,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["gener",{"_index":638,"title":{},"body":{"injectables/DemandService.html":{},"classes/Heap.html":{},"interfaces/Path.html":{},"components/PrivacyComponent.html":{}}}],["geocod",{"_index":1226,"title":{},"body":{"injectables/LocationService.html":{},"index.html":{}}}],["geograph",{"_index":1222,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["geoloc",{"_index":1227,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["geometri",{"_index":2499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gestur",{"_index":1099,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["gesturehandl",{"_index":1083,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["get",{"_index":654,"title":{"index.html":{},"license.html":{}},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"components/GoogleMapComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"injectables/SimulationService.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{}}}],["getbusiestedg",{"_index":1869,"title":{},"body":{"classes/Statistics.html":{}}}],["getbusiestedge(edg",{"_index":1881,"title":{},"body":{"classes/Statistics.html":{}}}],["getbusiestedgecapac",{"_index":1870,"title":{},"body":{"classes/Statistics.html":{}}}],["getbusiestedgecapacity(edg",{"_index":1883,"title":{},"body":{"classes/Statistics.html":{}}}],["getbusiestedgedata",{"_index":1871,"title":{},"body":{"classes/Statistics.html":{}}}],["getbusiestedgedata(edg",{"_index":1885,"title":{},"body":{"classes/Statistics.html":{}}}],["getbusiestedgedelay",{"_index":1872,"title":{},"body":{"classes/Statistics.html":{}}}],["getbusiestedgedelay(edg",{"_index":1887,"title":{},"body":{"classes/Statistics.html":{}}}],["getbusiestedgelabel",{"_index":1873,"title":{},"body":{"classes/Statistics.html":{}}}],["getbusiestedgelabel(edg",{"_index":1889,"title":{},"body":{"classes/Statistics.html":{}}}],["getcapac",{"_index":694,"title":{},"body":{"classes/Edge.html":{}}}],["getcapacity(timeinterv",{"_index":739,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getcount",{"_index":1712,"title":{},"body":{"injectables/SimulationService.html":{}}}],["getcurrentposit",{"_index":1230,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["getcurrentstep",{"_index":2287,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["getedg",{"_index":825,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getedge(edgeid",{"_index":843,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getend",{"_index":2447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["geterror",{"_index":2289,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["getfactor",{"_index":2145,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getformstep",{"_index":2219,"title":{},"body":{"components/WizardComponent.html":{}}}],["getheavytrafficdata",{"_index":1874,"title":{},"body":{"classes/Statistics.html":{}}}],["getheavytrafficdata(edg",{"_index":1891,"title":{},"body":{"classes/Statistics.html":{}}}],["getheavytrafficedg",{"_index":1875,"title":{},"body":{"classes/Statistics.html":{}}}],["getheavytrafficedges(edg",{"_index":1893,"title":{},"body":{"classes/Statistics.html":{}}}],["getheavytrafficlabel",{"_index":1876,"title":{},"body":{"classes/Statistics.html":{}}}],["getheavytrafficlabels(edg",{"_index":1895,"title":{},"body":{"classes/Statistics.html":{}}}],["geticon",{"_index":2076,"title":{},"body":{"components/WeatherComponent.html":{}}}],["geticon(cod",{"_index":2083,"title":{},"body":{"components/WeatherComponent.html":{}}}],["getincidencematrix",{"_index":875,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getkjam",{"_index":695,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getlatlng",{"_index":1231,"title":{},"body":{"injectables/LocationService.html":{}}}],["getmap",{"_index":1343,"title":{},"body":{"interfaces/MapState.html":{},"miscellaneous/variables.html":{}}}],["getmax",{"_index":1611,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["getmin",{"_index":1607,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["getmoderatetrafficedg",{"_index":1877,"title":{},"body":{"classes/Statistics.html":{}}}],["getmoderatetrafficedges(edg",{"_index":1897,"title":{},"body":{"classes/Statistics.html":{}}}],["getmoderatetrafficlabel",{"_index":1878,"title":{},"body":{"classes/Statistics.html":{}}}],["getmoderatetrafficlabels(edg",{"_index":1899,"title":{},"body":{"classes/Statistics.html":{}}}],["getmoderateytrafficdata",{"_index":1879,"title":{},"body":{"classes/Statistics.html":{}}}],["getmoderateytrafficdata(edg",{"_index":1901,"title":{},"body":{"classes/Statistics.html":{}}}],["getnam",{"_index":956,"title":{},"body":{"classes/EnumValues.html":{}}}],["getnames(",{"_index":958,"title":{},"body":{"classes/EnumValues.html":{}}}],["getnetwork",{"_index":1515,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["getnetworkdata",{"_index":1522,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["getnod",{"_index":823,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getnode(nodeid",{"_index":829,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getodmatrix",{"_index":613,"title":{},"body":{"injectables/DemandService.html":{}}}],["getodnod",{"_index":863,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getodnode(label",{"_index":861,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getodpair",{"_index":297,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{}}}],["getpath",{"_index":1143,"title":{},"body":{"classes/Heap.html":{}}}],["getpend",{"_index":2291,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["getperiod",{"_index":2448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getrel",{"_index":827,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getscript",{"_index":2349,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getscript(src",{"_index":2358,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getshortestpath",{"_index":1144,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["getsimul",{"_index":2449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getstatist",{"_index":507,"title":{},"body":{"injectables/ClockService.html":{},"injectables/SimulationService.html":{}}}],["getstep",{"_index":2285,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["gettrafficdata",{"_index":1546,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["gettrafficvolum",{"_index":1880,"title":{},"body":{"classes/Statistics.html":{}}}],["gettrafficvolumes(edg",{"_index":1903,"title":{},"body":{"classes/Statistics.html":{}}}],["getvalu",{"_index":957,"title":{},"body":{"classes/EnumValues.html":{}}}],["getvalues(",{"_index":960,"title":{},"body":{"classes/EnumValues.html":{}}}],["getvari",{"_index":696,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getvis",{"_index":257,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["getvisibility(pair",{"_index":277,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["getweathercondit",{"_index":2146,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getweatherdata",{"_index":1531,"title":{},"body":{"injectables/SchedulerService.html":{},"injectables/WeatherService.html":{}}}],["getweatherdata(tim",{"_index":2159,"title":{},"body":{"injectables/WeatherService.html":{}}}],["gl",{"_index":614,"title":{},"body":{"injectables/DemandService.html":{}}}],["gls(linkflow",{"_index":635,"title":{},"body":{"injectables/DemandService.html":{}}}],["go",{"_index":1068,"title":{},"body":{"classes/GoOn.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"miscellaneous/enumerations.html":{}}}],["googl",{"_index":96,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"index.html":{}}}],["google'",{"_index":1960,"title":{},"body":{"components/TermsComponent.html":{}}}],["google.maps.geocod",{"_index":1246,"title":{},"body":{"injectables/LocationService.html":{}}}],["google.maps.geocoderresult",{"_index":1253,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["google.maps.geocoderstatu",{"_index":1255,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["google.maps.geocoderstatus.ok",{"_index":1256,"title":{},"body":{"injectables/LocationService.html":{}}}],["google.maps.geocoderstatus.zero_result",{"_index":1575,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["google.maps.infowindow",{"_index":787,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["google.maps.latlng",{"_index":783,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["google.maps.latlngboundsliter",{"_index":1305,"title":{},"body":{"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["google.maps.latlngliter",{"_index":1092,"title":{},"body":{"components/GoogleMapComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{}}}],["google.maps.maptypeid",{"_index":1104,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["google.maps.maptypeid.roadmap",{"_index":1295,"title":{},"body":{"components/MapComponent.html":{}}}],["google.maps.maptypestyl",{"_index":1110,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["google.maps.mark",{"_index":780,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["google.maps.polylin",{"_index":785,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["google\\'",{"_index":1961,"title":{},"body":{"components/TermsComponent.html":{}}}],["googlemapcompon",{"_index":95,"title":{"components/GoogleMapComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["goon",{"_index":1055,"title":{"classes/GoOn.html":{}},"body":{"classes/GoOn.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["goon(data",{"_index":2258,"title":{},"body":{"injectables/WizardService.html":{}}}],["govern",{"_index":1954,"title":{},"body":{"components/TermsComponent.html":{}}}],["grant",{"_index":2390,"title":{},"body":{"license.html":{}}}],["graph",{"_index":819,"title":{},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"injectables/SimulationService.html":{},"classes/Statistics.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"modules.html":{}}}],["graph.calcassignmentmatrix(odpair",{"_index":1541,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["graph.calcincidencematrix",{"_index":1540,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["graph.calcmaxflows(factors[0]).pip",{"_index":1548,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["graph.calcshortestpaths(odpairs).pip",{"_index":1539,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["guard.servic",{"_index":1652,"title":{},"body":{"modules/SharedModule.html":{},"components/UiComponent.html":{},"modules/UiRoutingModule.html":{}}}],["guard.service.t",{"_index":240,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{}}}],["guard.service.ts:10",{"_index":248,"title":{},"body":{"injectables/CanDeactivateGuard.html":{}}}],["hammerj",{"_index":2330,"title":{},"body":{"dependencies.html":{}}}],["handl",{"_index":1100,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["hasbackdrop",{"_index":2017,"title":{},"body":{"components/UiComponent.html":{}}}],["headlin",{"_index":1186,"title":{},"body":{"components/HomeComponent.html":{}}}],["heap",{"_index":750,"title":{"classes/Heap.html":{}},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["heavi",{"_index":447,"title":{},"body":{"components/ChartsComponent.html":{},"miscellaneous/variables.html":{}}}],["heavytraff",{"_index":2556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["heavytrafficchart",{"_index":373,"title":{},"body":{"components/ChartsComponent.html":{}}}],["heavytrafficcolor",{"_index":2518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["heavytrafficctx",{"_index":374,"title":{},"body":{"components/ChartsComponent.html":{}}}],["heavytrafficdata",{"_index":1811,"title":{},"body":{"injectables/SimulationService.html":{}}}],["heavytrafficlabel",{"_index":1807,"title":{},"body":{"injectables/SimulationService.html":{}}}],["hectar",{"_index":2508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["herebi",{"_index":2389,"title":{},"body":{"license.html":{}}}],["hide",{"_index":1308,"title":{},"body":{"components/MapComponent.html":{}}}],["highli",{"_index":2527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["holder",{"_index":2421,"title":{},"body":{"license.html":{}}}],["home",{"_index":205,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{}}}],["home'},{'nam",{"_index":99,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["home.component.html",{"_index":1167,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":1166,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.transit",{"_index":1175,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.compon",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["home_transit",{"_index":1174,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["homecompon",{"_index":98,"title":{"components/HomeComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["horizont",{"_index":460,"title":{},"body":{"components/ChartsComponent.html":{}}}],["horizontalbar",{"_index":430,"title":{},"body":{"components/ChartsComponent.html":{}}}],["hour",{"_index":1631,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{},"miscellaneous/variables.html":{}}}],["hoverbackgroundcolor",{"_index":433,"title":{},"body":{"components/ChartsComponent.html":{}}}],["html",{"_index":70,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["html5",{"_index":1240,"title":{},"body":{"injectables/LocationService.html":{}}}],["htmlcanvasel",{"_index":400,"title":{},"body":{"components/ChartsComponent.html":{}}}],["htmlelement",{"_index":1113,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/WeatherComponent.html":{}}}],["htmlimageel",{"_index":2085,"title":{},"body":{"components/WeatherComponent.html":{}}}],["http",{"_index":2152,"title":{},"body":{"injectables/WeatherService.html":{}}}],["http://localhost:4201",{"_index":2484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":2150,"title":{},"body":{"injectables/WeatherService.html":{}}}],["httpclientmodul",{"_index":1641,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["httpheader",{"_index":2170,"title":{},"body":{"injectables/WeatherService.html":{}}}],["httpparam",{"_index":2171,"title":{},"body":{"injectables/WeatherService.html":{}}}],["https://cloud.google.com/map",{"_index":2375,"title":{},"body":{"index.html":{}}}],["https://developers.google.com/maps/documentation/javascript/styl",{"_index":2504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://openweathermap.org",{"_index":2378,"title":{},"body":{"index.html":{}}}],["https://u",{"_index":2478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://wiki.openstreetmap.org/wiki/key:oneway",{"_index":848,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["https://wiki.openstreetmap.org/wiki/tag:junction%3droundabout",{"_index":856,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["icon",{"_index":337,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"components/WizardComponent.html":{}}}],["icon.src",{"_index":2111,"title":{},"body":{"components/WeatherComponent.html":{}}}],["iconcontain",{"_index":2075,"title":{},"body":{"components/WeatherComponent.html":{}}}],["id",{"_index":849,"title":{},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["identifi",{"_index":1221,"title":{},"body":{"injectables/LocationService.html":{}}}],["imag",{"_index":2110,"title":{},"body":{"components/WeatherComponent.html":{}}}],["implement",{"_index":9,"title":{},"body":{"components/AboutComponent.html":{},"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["impli",{"_index":2416,"title":{},"body":{"license.html":{}}}],["import",{"_index":36,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"interfaces/SimulationState.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["incid",{"_index":868,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{}}}],["incidencematrix",{"_index":822,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["includ",{"_index":2397,"title":{},"body":{"license.html":{}}}],["incom",{"_index":1757,"title":{},"body":{"injectables/SimulationService.html":{}}}],["incomingedg",{"_index":777,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["index",{"_index":18,"title":{"index.html":{}},"body":{"components/AboutComponent.html":{},"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"injectables/SimulationService.html":{},"interfaces/SimulationState.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indic",{"_index":702,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"interfaces/SimulationState.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["infodialogcompon",{"_index":100,"title":{"components/InfoDialogComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["inform",{"_index":1433,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["infowindow",{"_index":786,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["inherit",{"_index":217,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["init",{"_index":1119,"title":{},"body":{"components/GoogleMapComponent.html":{},"injectables/SchedulerService.html":{},"injectables/SimulationService.html":{}}}],["initedg",{"_index":1713,"title":{},"body":{"injectables/SimulationService.html":{}}}],["initi",{"_index":1102,"title":{},"body":{"components/GoogleMapComponent.html":{},"interfaces/Map.html":{},"components/MapComponent.html":{},"injectables/SimulationService.html":{},"interfaces/Step.html":{},"miscellaneous/variables.html":{}}}],["initialmapst",{"_index":1335,"title":{},"body":{"interfaces/MapState.html":{},"miscellaneous/variables.html":{}}}],["initialsimulationst",{"_index":2451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["initialwizardst",{"_index":2277,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["initodnod",{"_index":1714,"title":{},"body":{"injectables/SimulationService.html":{}}}],["initpath",{"_index":1715,"title":{},"body":{"injectables/SimulationService.html":{}}}],["initpathsdemand",{"_index":1716,"title":{},"body":{"injectables/SimulationService.html":{}}}],["initpathsdemand(odmatrix",{"_index":1735,"title":{},"body":{"injectables/SimulationService.html":{}}}],["inittimeinterv",{"_index":1717,"title":{},"body":{"injectables/SimulationService.html":{}}}],["inject",{"_index":242,"title":{"injectables/CanDeactivateGuard.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"injectables/LocationService.html":{},"injectables/SchedulerService.html":{},"injectables/SimulationService.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{}},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"components/MessageArchivedComponent.html":{},"injectables/SchedulerService.html":{},"injectables/SimulationService.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{},"overview.html":{}}}],["inject(mat_dialog_data",{"_index":1213,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["input",{"_index":259,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{}}}],["insert",{"_index":889,"title":{},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{}}}],["instal",{"_index":1528,"title":{},"body":{"injectables/SchedulerService.html":{},"index.html":{}}}],["instanc",{"_index":1766,"title":{},"body":{"injectables/SimulationService.html":{}}}],["instant",{"_index":727,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["instanti",{"_index":887,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["interfac",{"_index":236,"title":{"interfaces/CanComponentDeactivate.html":{},"interfaces/Counts.html":{},"interfaces/LinkFlow.html":{},"interfaces/Map.html":{},"interfaces/MapState.html":{},"interfaces/Member.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"interfaces/Simulation.html":{},"interfaces/SimulationState.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"interfaces/UiState.html":{},"interfaces/WeatherConditions.html":{},"interfaces/WizardState.html":{}},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"interfaces/Counts.html":{},"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Map.html":{},"interfaces/MapState.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/Simulation.html":{},"interfaces/SimulationState.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"interfaces/UiState.html":{},"interfaces/WeatherConditions.html":{},"interfaces/WizardState.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["internet",{"_index":1517,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["interv",{"_index":500,"title":{},"body":{"injectables/ClockService.html":{},"components/SimulationComponent.html":{},"injectables/SimulationService.html":{},"miscellaneous/variables.html":{}}}],["interval(this.simulatedtimeinterv",{"_index":576,"title":{},"body":{"injectables/ClockService.html":{}}}],["invalid",{"_index":361,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["invalid_request",{"_index":1577,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["invers",{"_index":758,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["invok",{"_index":1251,"title":{},"body":{"injectables/LocationService.html":{}}}],["isnan(+key",{"_index":965,"title":{},"body":{"classes/EnumValues.html":{}}}],["isoneway(edgeid",{"_index":850,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["isonpath",{"_index":615,"title":{},"body":{"injectables/DemandService.html":{}}}],["isonpath(odmatrixassign",{"_index":642,"title":{},"body":{"injectables/DemandService.html":{}}}],["isroundabout(edgeid",{"_index":857,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["javascript",{"_index":2377,"title":{},"body":{"index.html":{}}}],["js",{"_index":2328,"title":{},"body":{"dependencies.html":{}}}],["junction",{"_index":858,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["k",{"_index":751,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["key",{"_index":762,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"index.html":{}}}],["kind",{"_index":2414,"title":{},"body":{"license.html":{}}}],["ksp(o",{"_index":884,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["l",{"_index":1198,"title":{},"body":{"components/HomeComponent.html":{}}}],["label",{"_index":431,"title":{},"body":{"components/ChartsComponent.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["labels.icon",{"_index":2503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["labelstr",{"_index":2462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["last",{"_index":1030,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"classes/Statistics.html":{}}}],["lat",{"_index":775,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["latitud",{"_index":772,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["latlng",{"_index":1228,"title":{},"body":{"injectables/LocationService.html":{}}}],["layout",{"_index":1647,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["leav",{"_index":1627,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["legend",{"_index":69,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"modules/DemandModule.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"modules/LocationModule.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"components/WizardComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["legisl",{"_index":1437,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["length",{"_index":1834,"title":{},"body":{"injectables/SimulationService.html":{}}}],["letter",{"_index":1177,"title":{},"body":{"components/HomeComponent.html":{}}}],["level",{"_index":904,"title":{},"body":{"classes/Edge.html":{},"components/GoogleMapComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["liabil",{"_index":2425,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":2422,"title":{},"body":{"license.html":{}}}],["licens",{"_index":52,"title":{"license.html":{}},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"components/TermsComponent.html":{},"license.html":{}}}],["limit",{"_index":1023,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"injectables/SchedulerService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["line",{"_index":438,"title":{},"body":{"components/ChartsComponent.html":{},"components/HomeComponent.html":{}}}],["linear",{"_index":1192,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["link",{"_index":60,"title":{},"body":{"components/AboutComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"injectables/SimulationService.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["linkflow",{"_index":620,"title":{"interfaces/LinkFlow.html":{}},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["linkflows[i].valu",{"_index":667,"title":{},"body":{"injectables/DemandService.html":{}}}],["linkflows[i].vari",{"_index":670,"title":{},"body":{"injectables/DemandService.html":{}}}],["liter",{"_index":704,"title":{},"body":{"classes/Edge.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/MapChanged.html":{},"classes/Node.html":{},"classes/SimulationChanged.html":{},"classes/StepChanged.html":{}}}],["lng",{"_index":1572,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":188,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["loadchildren",{"_index":208,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loadscript",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["locat",{"_index":1469,"title":{},"body":{"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"injectables/WeatherService.html":{}}}],["location.servic",{"_index":1218,"title":{},"body":{"modules/LocationModule.html":{}}}],["location/location.modul",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["location/location.servic",{"_index":1488,"title":{},"body":{"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"injectables/WeatherService.html":{}}}],["locationmodul",{"_index":145,"title":{"modules/LocationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LocationModule.html":{},"modules.html":{},"overview.html":{}}}],["locationservic",{"_index":1216,"title":{"injectables/LocationService.html":{}},"body":{"modules/LocationModule.html":{},"injectables/LocationService.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"injectables/WeatherService.html":{},"overview.html":{}}}],["login",{"_index":2374,"title":{},"body":{"index.html":{}}}],["logit",{"_index":934,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["lon",{"_index":776,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["longitud",{"_index":773,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["ltm",{"_index":1718,"title":{},"body":{"injectables/SimulationService.html":{},"classes/Statistics.html":{},"miscellaneous/variables.html":{}}}],["ltmedg",{"_index":1774,"title":{},"body":{"injectables/SimulationService.html":{},"classes/Statistics.html":{}}}],["ltmgraph",{"_index":1764,"title":{},"body":{"injectables/SimulationService.html":{}}}],["ltmgraph(graph",{"_index":1779,"title":{},"body":{"injectables/SimulationService.html":{}}}],["ltmnode",{"_index":1749,"title":{},"body":{"injectables/SimulationService.html":{}}}],["m",{"_index":362,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"miscellaneous/variables.html":{}}}],["m/",{"_index":718,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["m:ss",{"_index":971,"title":{},"body":{"classes/EnumValues.html":{},"miscellaneous/functions.html":{}}}],["m:ss.mmm",{"_index":977,"title":{},"body":{"classes/EnumValues.html":{},"miscellaneous/functions.html":{}}}],["maintainaspectratio",{"_index":2459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["make",{"_index":1452,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["manag",{"_index":1331,"title":{},"body":{"interfaces/MapState.html":{},"interfaces/SimulationState.html":{},"interfaces/UiState.html":{},"interfaces/WizardState.html":{}}}],["map",{"_index":1010,"title":{"interfaces/Map.html":{}},"body":{"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"components/PrivacyComponent.html":{},"injectables/SchedulerService.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Step.html":{},"components/TermsComponent.html":{},"interfaces/UiState.html":{},"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["map'},{'nam",{"_index":97,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["map((respons",{"_index":2185,"title":{},"body":{"injectables/WeatherService.html":{}}}],["map.compon",{"_index":2044,"title":{},"body":{"modules/UiModule.html":{}}}],["map.component.html",{"_index":1277,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.scss",{"_index":1276,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.t",{"_index":1077,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:17",{"_index":1093,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:21",{"_index":1111,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:25",{"_index":1095,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:29",{"_index":1098,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:33",{"_index":1105,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:37",{"_index":1107,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:41",{"_index":1108,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:45",{"_index":1101,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:49",{"_index":1090,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:51",{"_index":1120,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:56",{"_index":1118,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:66",{"_index":1117,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:71",{"_index":1114,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.data.bound",{"_index":1624,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["map.data.selectednod",{"_index":1017,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["map.servic",{"_index":1122,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["map.styl",{"_index":1294,"title":{},"body":{"components/MapComponent.html":{}}}],["map/googl",{"_index":2043,"title":{},"body":{"modules/UiModule.html":{}}}],["map/map.compon",{"_index":2042,"title":{},"body":{"modules/UiModule.html":{}}}],["map/map.servic",{"_index":1487,"title":{},"body":{"injectables/SchedulerService.html":{},"modules/UiModule.html":{}}}],["mapact",{"_index":1272,"title":{},"body":{"classes/MapChanged.html":{},"interfaces/MapState.html":{},"miscellaneous/typealiases.html":{}}}],["mapactiontyp",{"_index":1270,"title":{},"body":{"classes/MapChanged.html":{},"interfaces/MapState.html":{},"miscellaneous/enumerations.html":{}}}],["mapactiontypes.mapchang",{"_index":1269,"title":{},"body":{"classes/MapChanged.html":{},"interfaces/MapState.html":{}}}],["mapactiontypes.reset",{"_index":1271,"title":{},"body":{"classes/MapChanged.html":{},"interfaces/MapState.html":{}}}],["mapchang",{"_index":1265,"title":{"classes/MapChanged.html":{}},"body":{"classes/MapChanged.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["mapcompon",{"_index":102,"title":{"components/MapComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["mapreduc",{"_index":2350,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mapreducer(st",{"_index":1337,"title":{},"body":{"interfaces/MapState.html":{},"miscellaneous/functions.html":{}}}],["mapservic",{"_index":1089,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{},"injectables/SchedulerService.html":{},"modules/UiModule.html":{},"overview.html":{}}}],["mapstat",{"_index":1329,"title":{"interfaces/MapState.html":{}},"body":{"interfaces/MapState.html":{},"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["mapstyl",{"_index":1293,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["maptypeid",{"_index":1084,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["marker",{"_index":779,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["mat_dialog_data",{"_index":1211,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["mat_snack_bar_data",{"_index":1375,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["matbuttonmodul",{"_index":1350,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matcardmodul",{"_index":1348,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["match",{"_index":128,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"interfaces/SimulationState.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":1971,"title":{},"body":{"components/UiComponent.html":{}}}],["matdialogmodul",{"_index":1358,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matdialogref",{"_index":1206,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["material.modul",{"_index":1648,"title":{},"body":{"modules/SharedModule.html":{}}}],["materialmodul",{"_index":1344,"title":{"modules/MaterialModule.html":{}},"body":{"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["matexpansionmodul",{"_index":1361,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matgridlistmodul",{"_index":1359,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["math.abs(curr",{"_index":1917,"title":{},"body":{"classes/Statistics.html":{}}}],["math.exp",{"_index":944,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["math.floor(",{"_index":974,"title":{},"body":{"classes/EnumValues.html":{}}}],["math.floor((m",{"_index":981,"title":{},"body":{"classes/EnumValues.html":{}}}],["math.floor(m",{"_index":980,"title":{},"body":{"classes/EnumValues.html":{}}}],["math.pow(bas",{"_index":669,"title":{},"body":{"injectables/DemandService.html":{}}}],["maticonmodul",{"_index":1351,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["maticonregistri",{"_index":1349,"title":{},"body":{"modules/MaterialModule.html":{}}}],["maticonregistry.addsvgicon",{"_index":1365,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodul",{"_index":1354,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matmenumodul",{"_index":1352,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matprogressspinnermodul",{"_index":1356,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matrix",{"_index":608,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"injectables/SimulationService.html":{},"interfaces/Tag.html":{}}}],["matselectmodul",{"_index":1360,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matsidenavmodul",{"_index":1346,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matsnackbar",{"_index":1970,"title":{},"body":{"components/UiComponent.html":{}}}],["matsnackbarmodul",{"_index":1355,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matstepp",{"_index":2214,"title":{},"body":{"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["matsteppermodul",{"_index":1353,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattablemodul",{"_index":1362,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattoolbarmodul",{"_index":1347,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattooltipmodul",{"_index":1357,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":731,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["maxbarthick",{"_index":2470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxdemand",{"_index":2532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxflow",{"_index":686,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["maximum",{"_index":723,"title":{},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["maxodpair",{"_index":2523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxtimeinterv",{"_index":2561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxzoom",{"_index":1085,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["mean",{"_index":759,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["measur",{"_index":745,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["medium",{"_index":2528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["member",{"_index":764,"title":{"interfaces/Member.html":{}},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["memoizedselector",{"_index":1859,"title":{},"body":{"interfaces/SimulationState.html":{},"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["merchant",{"_index":2417,"title":{},"body":{"license.html":{}}}],["merg",{"_index":2399,"title":{},"body":{"license.html":{}}}],["messag",{"_index":1514,"title":{},"body":{"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/UiComponent.html":{},"injectables/WizardService.html":{}}}],["messagearchivedcompon",{"_index":103,"title":{"components/MessageArchivedComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["meter",{"_index":703,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"interfaces/WeatherConditions.html":{}}}],["method",{"_index":21,"title":{},"body":{"components/AboutComponent.html":{},"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"injectables/SimulationService.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["millimet",{"_index":2119,"title":{},"body":{"interfaces/WeatherConditions.html":{}}}],["millisecond",{"_index":978,"title":{},"body":{"classes/EnumValues.html":{},"injectables/WeatherService.html":{},"miscellaneous/functions.html":{}}}],["min",{"_index":789,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{}}}],["mindist",{"_index":2520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mindur",{"_index":2522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minimum",{"_index":624,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"components/GoogleMapComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["minzoom",{"_index":1086,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["miscellan",{"_index":2340,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mist",{"_index":2134,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["mit",{"_index":51,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"components/TermsComponent.html":{},"index.html":{},"license.html":{}}}],["mm",{"_index":363,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":459,"title":{},"body":{"components/ChartsComponent.html":{}}}],["model",{"_index":935,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Map.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SimulationService.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["models/actions/simulation.act",{"_index":547,"title":{},"body":{"injectables/ClockService.html":{},"injectables/SimulationService.html":{}}}],["models/actions/wizard.act",{"_index":2270,"title":{},"body":{"injectables/WizardService.html":{}}}],["models/base.compon",{"_index":317,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["models/reduc",{"_index":307,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"injectables/WizardService.html":{}}}],["models/reducers/wizard.reduc",{"_index":2271,"title":{},"body":{"injectables/WizardService.html":{}}}],["models/simul",{"_index":1775,"title":{},"body":{"injectables/SimulationService.html":{}}}],["models/ui",{"_index":309,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WeatherComponent.html":{}}}],["moder",{"_index":451,"title":{},"body":{"components/ChartsComponent.html":{},"miscellaneous/variables.html":{}}}],["moderatetraff",{"_index":2554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["moderatetrafficchart",{"_index":375,"title":{},"body":{"components/ChartsComponent.html":{}}}],["moderatetrafficcolor",{"_index":2516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["moderatetrafficctx",{"_index":376,"title":{},"body":{"components/ChartsComponent.html":{}}}],["moderatetrafficdata",{"_index":1813,"title":{},"body":{"injectables/SimulationService.html":{}}}],["moderatetrafficlabel",{"_index":1809,"title":{},"body":{"injectables/SimulationService.html":{}}}],["modifi",{"_index":2398,"title":{},"body":{"license.html":{}}}],["modul",{"_index":133,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/MaterialModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"modules/WeatherModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/MaterialModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithprovid",{"_index":1638,"title":{},"body":{"modules/SharedModule.html":{}}}],["moment",{"_index":1609,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["more",{"_index":815,"title":{},"body":{"classes/Edge.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SimulationService.html":{},"interfaces/Tag.html":{}}}],["more_vert",{"_index":1366,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mout",{"_index":2319,"title":{},"body":{"dependencies.html":{}}}],["mout/array/combin",{"_index":749,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["mout/lang/deepclon",{"_index":1333,"title":{},"body":{"interfaces/MapState.html":{},"interfaces/WizardState.html":{}}}],["move",{"_index":902,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["ms",{"_index":537,"title":{},"body":{"injectables/ClockService.html":{},"classes/EnumValues.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["multi",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["multinomi",{"_index":933,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["n",{"_index":672,"title":{},"body":{"injectables/DemandService.html":{}}}],["name",{"_index":79,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"classes/AppPreloadingStrategy.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"injectables/SimulationService.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"miscellaneous/functions.html":{}}}],["navigate_next",{"_index":365,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{}}}],["navigator.geoloc",{"_index":1583,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["navigator.geolocation.getcurrentposit",{"_index":1260,"title":{},"body":{"injectables/LocationService.html":{}}}],["neighbor",{"_index":900,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["network",{"_index":265,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"components/SelectionOfTheAreaComponent.html":{},"injectables/SimulationService.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{}}}],["network.servic",{"_index":1383,"title":{},"body":{"modules/NetworkModule.html":{}}}],["network/graph",{"_index":313,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"injectables/SimulationService.html":{}}}],["network/network.modul",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["network/network.servic",{"_index":303,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"injectables/SchedulerService.html":{},"components/SelectionOfTheAreaComponent.html":{},"injectables/SimulationService.html":{},"components/WeatherComponent.html":{}}}],["network/weather/weath",{"_index":312,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/WeatherComponent.html":{}}}],["network/weather/weather.servic",{"_index":304,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/SchedulerService.html":{},"components/WeatherComponent.html":{}}}],["networkdata",{"_index":2475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["networkmodul",{"_index":146,"title":{"modules/NetworkModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NetworkModule.html":{},"modules.html":{},"overview.html":{}}}],["networkservic",{"_index":266,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"modules/NetworkModule.html":{},"injectables/SchedulerService.html":{},"components/SelectionOfTheAreaComponent.html":{},"injectables/SimulationService.html":{},"components/WeatherComponent.html":{},"overview.html":{}}}],["new",{"_index":34,"title":{},"body":{"components/AboutComponent.html":{},"components/ChartsComponent.html":{},"classes/Edge.html":{},"components/FooterComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SelectionOfTheAreaComponent.html":{},"injectables/SimulationService.html":{},"interfaces/Tag.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["next",{"_index":903,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{}}}],["nextdt",{"_index":2199,"title":{},"body":{"injectables/WeatherService.html":{}}}],["nextindex",{"_index":1073,"title":{},"body":{"classes/GoOn.html":{},"injectables/SchedulerService.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["ng",{"_index":2028,"title":{},"body":{"modules/UiModule.html":{},"dependencies.html":{}}}],["ngafterviewinit",{"_index":379,"title":{},"body":{"components/ChartsComponent.html":{},"components/HomeComponent.html":{},"components/WeatherComponent.html":{}}}],["ngmodul",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/MaterialModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"modules/WeatherModule.html":{}}}],["ngonchang",{"_index":1080,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["ngonchanges(chang",{"_index":1116,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["ngondestroy",{"_index":220,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{}}}],["ngoninit",{"_index":22,"title":{},"body":{"components/AboutComponent.html":{},"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["ngrx",{"_index":1062,"title":{},"body":{"classes/GoOn.html":{},"classes/MapChanged.html":{},"interfaces/MapState.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["ngrx/store",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"interfaces/SimulationState.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"injectables/WizardService.html":{},"dependencies.html":{}}}],["node",{"_index":677,"title":{"classes/Node.html":{}},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SimulationService.html":{},"interfaces/Tag.html":{}}}],["node.calctransitionflows(this.path",{"_index":1829,"title":{},"body":{"injectables/SimulationService.html":{}}}],["node.count",{"_index":910,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.destin",{"_index":1851,"title":{},"body":{"injectables/SimulationService.html":{}}}],["node.destination.receivingflow",{"_index":1852,"title":{},"body":{"injectables/SimulationService.html":{}}}],["node.incomingedg",{"_index":838,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SimulationService.html":{},"interfaces/Tag.html":{}}}],["node.incomingedges.length",{"_index":1028,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["node.j",{"_index":2366,"title":{},"body":{"index.html":{}}}],["node.label",{"_index":862,"title":{},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.label).length",{"_index":1039,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["node.nodeid",{"_index":832,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.origin",{"_index":1849,"title":{},"body":{"injectables/SimulationService.html":{}}}],["node.origin.sendingflow",{"_index":1850,"title":{},"body":{"injectables/SimulationService.html":{}}}],["node.outgoingedg",{"_index":841,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SimulationService.html":{},"interfaces/Tag.html":{}}}],["node.outgoingedges.length",{"_index":1029,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["node.updatecumulativeflows(this.path",{"_index":1830,"title":{},"body":{"injectables/SimulationService.html":{}}}],["nodeid",{"_index":774,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["noninfring",{"_index":2419,"title":{},"body":{"license.html":{}}}],["normal",{"_index":471,"title":{},"body":{"components/ChartsComponent.html":{},"miscellaneous/variables.html":{}}}],["notic",{"_index":2409,"title":{},"body":{"license.html":{}}}],["notrafficcolor",{"_index":2514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["npm",{"_index":2367,"title":{},"body":{"index.html":{}}}],["npm@latest",{"_index":2368,"title":{},"body":{"index.html":{}}}],["null",{"_index":557,"title":{},"body":{"injectables/ClockService.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"injectables/LocationService.html":{},"interfaces/MapState.html":{},"injectables/SimulationService.html":{},"classes/Statistics.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":30,"title":{},"body":{"components/AboutComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Simulation.html":{},"components/SimulationComponent.html":{},"injectables/SimulationService.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["numer",{"_index":942,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{}}}],["numeric'},{'nam",{"_index":107,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["numeric.component.html",{"_index":1395,"title":{},"body":{"components/NumericComponent.html":{}}}],["numeric.component.scss",{"_index":1394,"title":{},"body":{"components/NumericComponent.html":{}}}],["numeric/numeric.compon",{"_index":2046,"title":{},"body":{"modules/UiModule.html":{}}}],["numericalsimul",{"_index":598,"title":{"interfaces/NumericalSimulation.html":{}},"body":{"interfaces/Counts.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{},"injectables/SimulationService.html":{}}}],["numericcompon",{"_index":106,"title":{"components/NumericComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["o",{"_index":356,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["o/d",{"_index":607,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"injectables/SimulationService.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":2457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(e).filter((key",{"_index":964,"title":{},"body":{"classes/EnumValues.html":{}}}],["observ",{"_index":193,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SimulationService.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"injectables/WeatherService.html":{}}}],["observable.create((observ",{"_index":1250,"title":{},"body":{"injectables/LocationService.html":{}}}],["observer.complet",{"_index":1258,"title":{},"body":{"injectables/LocationService.html":{}}}],["observer.error(error",{"_index":1263,"title":{},"body":{"injectables/LocationService.html":{}}}],["observer.error(statu",{"_index":1259,"title":{},"body":{"injectables/LocationService.html":{}}}],["observer.next(posit",{"_index":1261,"title":{},"body":{"injectables/LocationService.html":{}}}],["observer.next(result",{"_index":1257,"title":{},"body":{"injectables/LocationService.html":{}}}],["obtain",{"_index":2168,"title":{},"body":{"injectables/WeatherService.html":{},"license.html":{}}}],["odmatrix",{"_index":609,"title":{},"body":{"injectables/DemandService.html":{},"injectables/SimulationService.html":{}}}],["odmatrix[z",{"_index":1841,"title":{},"body":{"injectables/SimulationService.html":{}}}],["odmatrixassign",{"_index":621,"title":{},"body":{"injectables/DemandService.html":{}}}],["odmatrixassignment[n][i",{"_index":673,"title":{},"body":{"injectables/DemandService.html":{}}}],["odpair",{"_index":275,"title":{"interfaces/OdPair.html":{}},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"injectables/SimulationService.html":{},"interfaces/Tag.html":{},"components/WizardComponent.html":{}}}],["odpair.destin",{"_index":1027,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["odpair.origin",{"_index":1035,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["odpairs.filter(pair",{"_index":1036,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["odpairs.length",{"_index":1021,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["odpairs.map((pair",{"_index":330,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["odpairs[odpairs.length",{"_index":1022,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["odpairs[uiconfig.maxodpair",{"_index":1025,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["odpairscontrol",{"_index":342,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["odpairscontrol.length",{"_index":350,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["odpairscontrol.removeat(i",{"_index":351,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["of(nul",{"_index":198,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SimulationService.html":{},"interfaces/Tag.html":{}}}],["offici",{"_index":63,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["offset",{"_index":1196,"title":{},"body":{"components/HomeComponent.html":{},"injectables/WeatherService.html":{}}}],["on",{"_index":528,"title":{},"body":{"injectables/ClockService.html":{},"injectables/DemandService.html":{}}}],["onchang",{"_index":1078,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["ondestroy",{"_index":218,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChartsComponent.html":{},"components/UiComponent.html":{}}}],["oneway",{"_index":853,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["oninit",{"_index":10,"title":{},"body":{"components/AboutComponent.html":{},"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["opac",{"_index":1189,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["open",{"_index":1527,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["opendialog",{"_index":1965,"title":{},"body":{"components/UiComponent.html":{}}}],["opendialog(data",{"_index":1980,"title":{},"body":{"components/UiComponent.html":{}}}],["opensnackbar",{"_index":1966,"title":{},"body":{"components/UiComponent.html":{}}}],["opensnackbar(messag",{"_index":1982,"title":{},"body":{"components/UiComponent.html":{}}}],["openweathermap",{"_index":2169,"title":{},"body":{"injectables/WeatherService.html":{},"index.html":{}}}],["oper",{"_index":1478,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["option",{"_index":192,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"injectables/SimulationService.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"miscellaneous/functions.html":{}}}],["options).pip",{"_index":2184,"title":{},"body":{"injectables/WeatherService.html":{}}}],["origin",{"_index":687,"title":{},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["otherwis",{"_index":2429,"title":{},"body":{"license.html":{}}}],["out",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"license.html":{},"overview.html":{}}}],["outgo",{"_index":1758,"title":{},"body":{"injectables/SimulationService.html":{}}}],["outgoingedg",{"_index":778,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["over_query_limit",{"_index":1578,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["overview",{"_index":2433,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owldatetimemodul",{"_index":2026,"title":{},"body":{"modules/UiModule.html":{}}}],["owlnativedatetimemodul",{"_index":2027,"title":{},"body":{"modules/UiModule.html":{}}}],["packag",{"_index":2293,"title":{"dependencies.html":{}},"body":{}}],["paid",{"_index":1526,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["pair",{"_index":280,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["pair.demand",{"_index":331,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["pair.destin",{"_index":1038,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["pair.origin",{"_index":1037,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["pair.value.destin",{"_index":359,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{}}}],["pair.value.origin",{"_index":358,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{}}}],["pair.value.pathtyp",{"_index":360,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["pairs,paths,edg",{"_index":640,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["pairsvalid",{"_index":2223,"title":{},"body":{"components/WizardComponent.html":{},"miscellaneous/functions.html":{}}}],["panel",{"_index":1998,"title":{},"body":{"components/UiComponent.html":{}}}],["panelclass",{"_index":2013,"title":{},"body":{"components/UiComponent.html":{}}}],["param",{"_index":659,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SimulationService.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{}}}],["paramet",{"_index":191,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"injectables/SimulationService.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["part",{"_index":1957,"title":{},"body":{"components/TermsComponent.html":{}}}],["particular",{"_index":760,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"license.html":{}}}],["past",{"_index":1523,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["path",{"_index":203,"title":{"interfaces/Path.html":{}},"body":{"modules/AppRoutingModule.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"injectables/SimulationService.html":{},"interfaces/Tag.html":{},"modules/UiRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["path.cost",{"_index":1159,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["path.edg",{"_index":1158,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["path.nod",{"_index":1157,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["path.pathid",{"_index":1156,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["path.t",{"_index":1141,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["path.ts:23",{"_index":1147,"title":{},"body":{"classes/Heap.html":{}}}],["path.ts:29",{"_index":1154,"title":{},"body":{"classes/Heap.html":{}}}],["path.ts:37",{"_index":1152,"title":{},"body":{"classes/Heap.html":{}}}],["path.ts:45",{"_index":1150,"title":{},"body":{"classes/Heap.html":{}}}],["path.ts:49",{"_index":1149,"title":{},"body":{"classes/Heap.html":{}}}],["path][link][destin",{"_index":1770,"title":{},"body":{"injectables/SimulationService.html":{}}}],["path][link][link",{"_index":1769,"title":{},"body":{"injectables/SimulationService.html":{}}}],["path][origin][link",{"_index":1768,"title":{},"body":{"injectables/SimulationService.html":{}}}],["patha",{"_index":917,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["patha.filter((edgeofa",{"_index":923,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["patha.length",{"_index":927,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["pathb",{"_index":919,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["pathb.find((edgeofb",{"_index":924,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["pathcost",{"_index":937,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["pathid",{"_index":892,"title":{},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["pathmatch",{"_index":206,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/UiRoutingModule.html":{}}}],["pathsdemand",{"_index":1710,"title":{},"body":{"injectables/SimulationService.html":{}}}],["pathtyp",{"_index":755,"title":{},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/enumerations.html":{}}}],["pathtype.dist",{"_index":1047,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["paus",{"_index":508,"title":{},"body":{"injectables/ClockService.html":{},"components/SimulationComponent.html":{},"miscellaneous/enumerations.html":{}}}],["payload",{"_index":584,"title":{},"body":{"injectables/ClockService.html":{},"classes/GoOn.html":{},"classes/MapChanged.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"injectables/SimulationService.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{}}}],["pend",{"_index":1067,"title":{},"body":{"classes/GoOn.html":{},"components/SearchForTheAreaComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["perform",{"_index":527,"title":{},"body":{"injectables/ClockService.html":{},"injectables/SchedulerService.html":{},"injectables/SimulationService.html":{}}}],["period",{"_index":1421,"title":{},"body":{"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"injectables/SimulationService.html":{},"interfaces/SimulationState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["periods.simulatedtimeinterv",{"_index":1683,"title":{},"body":{"components/SimulationComponent.html":{}}}],["periods.simulatedtimeperiod",{"_index":1686,"title":{},"body":{"components/SimulationComponent.html":{}}}],["periods.timeinterv",{"_index":1678,"title":{},"body":{"components/SimulationComponent.html":{}}}],["periods.timeperiod",{"_index":1680,"title":{},"body":{"components/SimulationComponent.html":{}}}],["periodschang",{"_index":1415,"title":{"classes/PeriodsChanged.html":{}},"body":{"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["permiss",{"_index":1589,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"license.html":{}}}],["permit",{"_index":2405,"title":{},"body":{"license.html":{}}}],["person",{"_index":1431,"title":{},"body":{"components/PrivacyComponent.html":{},"license.html":{}}}],["pick",{"_index":2029,"title":{},"body":{"modules/UiModule.html":{},"dependencies.html":{}}}],["platform",{"_index":2376,"title":{},"body":{"index.html":{}}}],["play_arrow",{"_index":1694,"title":{},"body":{"components/SimulationComponent.html":{}}}],["pleas",{"_index":1456,"title":{},"body":{"components/PrivacyComponent.html":{},"injectables/SchedulerService.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["plugin",{"_index":2325,"title":{},"body":{"dependencies.html":{}}}],["png",{"_index":2113,"title":{},"body":{"components/WeatherComponent.html":{}}}],["poi",{"_index":2501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["point",{"_index":769,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["polici",{"_index":1430,"title":{},"body":{"components/PrivacyComponent.html":{},"components/TermsComponent.html":{}}}],["polylin",{"_index":784,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["poorli",{"_index":2529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pop",{"_index":1145,"title":{},"body":{"classes/Heap.html":{}}}],["pop(pathid",{"_index":1151,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["populatechart",{"_index":380,"title":{},"body":{"components/ChartsComponent.html":{}}}],["portion",{"_index":2412,"title":{},"body":{"license.html":{}}}],["posit",{"_index":473,"title":{},"body":{"components/ChartsComponent.html":{},"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["position.coords.latitud",{"_index":1585,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["position.coords.longitud",{"_index":1586,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["positionerror",{"_index":1262,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["predt",{"_index":2194,"title":{},"body":{"injectables/WeatherService.html":{}}}],["preload",{"_index":183,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{}}}],["preload(rout",{"_index":186,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["preloadingstrategi",{"_index":185,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{}}}],["prerequisit",{"_index":2379,"title":{},"body":{"index.html":{}}}],["presscontrol",{"_index":509,"title":{},"body":{"injectables/ClockService.html":{},"components/SimulationComponent.html":{}}}],["presscontrol(control",{"_index":520,"title":{},"body":{"injectables/ClockService.html":{},"components/SimulationComponent.html":{}}}],["prev",{"_index":1913,"title":{},"body":{"classes/Statistics.html":{}}}],["prev.cost",{"_index":1164,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["prev.dur",{"_index":1836,"title":{},"body":{"injectables/SimulationService.html":{}}}],["prev.heavytrafficcount",{"_index":1909,"title":{},"body":{"classes/Statistics.html":{}}}],["prev.moderatetrafficcount",{"_index":1910,"title":{},"body":{"classes/Statistics.html":{}}}],["privaci",{"_index":211,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/PrivacyComponent.html":{},"components/TermsComponent.html":{}}}],["privacy'},{'nam",{"_index":109,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["privacy.component.html",{"_index":1427,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["privacy.component.scss",{"_index":1426,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["privacy/privacy.compon",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["privacycompon",{"_index":108,"title":{"components/PrivacyComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["privat",{"_index":319,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"injectables/SimulationService.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{}}}],["probabl",{"_index":649,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["process",{"_index":536,"title":{},"body":{"injectables/ClockService.html":{},"components/PrivacyComponent.html":{},"components/StatisticsComponent.html":{}}}],["processingtim",{"_index":501,"title":{},"body":{"injectables/ClockService.html":{}}}],["product",{"_index":2473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profil",{"_index":1453,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["project",{"_index":53,"title":{},"body":{"components/AboutComponent.html":{},"injectables/SchedulerService.html":{},"index.html":{}}}],["promis",{"_index":243,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{}}}],["propag",{"_index":1709,"title":{},"body":{"injectables/SimulationService.html":{}}}],["propagateflow",{"_index":535,"title":{},"body":{"injectables/ClockService.html":{},"injectables/SimulationService.html":{}}}],["properti",{"_index":19,"title":{},"body":{"components/AboutComponent.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"injectables/SimulationService.html":{},"interfaces/SimulationState.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["propertynam",{"_index":1125,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["protect",{"_index":692,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["provid",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/NetworkModule.html":{},"components/PrivacyComponent.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"interfaces/WizardState.html":{},"license.html":{},"overview.html":{}}}],["public",{"_index":506,"title":{},"body":{"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"modules/SharedModule.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"injectables/SimulationService.html":{},"classes/Statistics.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{}}}],["publish",{"_index":2400,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":812,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"license.html":{}}}],["pursuant",{"_index":1434,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["push",{"_index":1146,"title":{},"body":{"classes/Heap.html":{}}}],["push(path",{"_index":1153,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["putinerror",{"_index":2252,"title":{},"body":{"injectables/WizardService.html":{}}}],["putinerror(error",{"_index":2260,"title":{},"body":{"injectables/WizardService.html":{}}}],["putonhold",{"_index":2253,"title":{},"body":{"injectables/WizardService.html":{}}}],["putonhold(messag",{"_index":2262,"title":{},"body":{"injectables/WizardService.html":{}}}],["qs",{"_index":2333,"title":{},"body":{"dependencies.html":{}}}],["queue",{"_index":1148,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["quick",{"_index":510,"title":{},"body":{"injectables/ClockService.html":{},"miscellaneous/enumerations.html":{}}}],["quota",{"_index":1524,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["rain",{"_index":2131,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["rainintens",{"_index":2116,"title":{},"body":{"interfaces/WeatherConditions.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["rate",{"_index":1737,"title":{},"body":{"injectables/SimulationService.html":{},"miscellaneous/variables.html":{}}}],["reactiveformsmodul",{"_index":1644,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["readonli",{"_index":1057,"title":{},"body":{"classes/GoOn.html":{},"classes/MapChanged.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{}}}],["real",{"_index":47,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["receiv",{"_index":1752,"title":{},"body":{"injectables/SimulationService.html":{}}}],["receiveact",{"_index":221,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["rectangl",{"_index":1303,"title":{},"body":{"components/MapComponent.html":{}}}],["redirectto",{"_index":204,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reduc",{"_index":1336,"title":{},"body":{"interfaces/MapState.html":{},"modules/SimulationModule.html":{},"interfaces/SimulationState.html":{},"modules/UiModule.html":{},"interfaces/UiState.html":{},"interfaces/WizardState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["reducers/map.reduc",{"_index":2060,"title":{},"body":{"interfaces/UiState.html":{}}}],["reducers/simulation.reduc",{"_index":1860,"title":{},"body":{"interfaces/SimulationState.html":{}}}],["reducers/wizard.reduc",{"_index":2058,"title":{},"body":{"interfaces/UiState.html":{}}}],["reduct",{"_index":2142,"title":{},"body":{"injectables/WeatherService.html":{}}}],["ref",{"_index":765,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["refer",{"_index":1457,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["regul",{"_index":1441,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["reiniti",{"_index":1797,"title":{},"body":{"injectables/SimulationService.html":{}}}],["relat",{"_index":811,"title":{"classes/Relation.html":{}},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["relation'",{"_index":763,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["relationid",{"_index":816,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["relationship",{"_index":814,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["releas",{"_index":1958,"title":{},"body":{"components/TermsComponent.html":{}}}],["remain",{"_index":1447,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["remov",{"_index":911,"title":{},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{}}}],["removefromerror",{"_index":2254,"title":{},"body":{"injectables/WizardService.html":{}}}],["removefromwait",{"_index":2255,"title":{},"body":{"injectables/WizardService.html":{}}}],["render",{"_index":2079,"title":{},"body":{"components/WeatherComponent.html":{}}}],["renderer2",{"_index":2082,"title":{},"body":{"components/WeatherComponent.html":{}}}],["repositori",{"_index":61,"title":{},"body":{"components/AboutComponent.html":{}}}],["repres",{"_index":767,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["request",{"_index":1582,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["request_deni",{"_index":1579,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["requir",{"_index":1091,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{},"index.html":{}}}],["reset",{"_index":150,"title":{"classes/Reset.html":{}},"body":{"modules/AppModule.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/ClockService.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"modules/NetworkModule.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"modules/SharedModule.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["resetcondit",{"_index":2077,"title":{},"body":{"components/WeatherComponent.html":{}}}],["resetcount",{"_index":909,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["resetflow",{"_index":1719,"title":{},"body":{"injectables/SimulationService.html":{}}}],["resourc",{"_index":2141,"title":{},"body":{"injectables/WeatherService.html":{}}}],["respons",{"_index":1220,"title":{},"body":{"injectables/LocationService.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["restrict",{"_index":2396,"title":{},"body":{"license.html":{}}}],["result",{"_index":127,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"interfaces/SimulationState.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results[0].geometry.location.lat",{"_index":1571,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["results[0].geometry.location.lng",{"_index":1573,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["retriev",{"_index":1516,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["return",{"_index":27,"title":{},"body":{"components/AboutComponent.html":{},"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"injectables/SimulationService.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["rgba(255,255,255,1.0",{"_index":469,"title":{},"body":{"components/ChartsComponent.html":{}}}],["right",{"_index":474,"title":{},"body":{"components/ChartsComponent.html":{},"license.html":{}}}],["road",{"_index":2502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roadmap",{"_index":1103,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["roberto",{"_index":76,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"license.html":{}}}],["roberto&nbsp;simonetti",{"_index":50,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{}}}],["role",{"_index":766,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["root",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'nam",{"_index":82,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["round",{"_index":651,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SimulationService.html":{},"classes/Statistics.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"miscellaneous/functions.html":{}}}],["round(1",{"_index":806,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["round(edge.maxflow",{"_index":1915,"title":{},"body":{"classes/Statistics.html":{}}}],["round(exps[z][n",{"_index":949,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["round(maxflow",{"_index":805,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["round(p",{"_index":1840,"title":{},"body":{"injectables/SimulationService.html":{}}}],["round(sum",{"_index":671,"title":{},"body":{"injectables/DemandService.html":{}}}],["round(this.dens",{"_index":801,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["round(this.dist",{"_index":792,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["round(this.getkjam",{"_index":799,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["round(valu",{"_index":2360,"title":{},"body":{"miscellaneous/functions.html":{}}}],["roundabout",{"_index":859,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["rout",{"_index":187,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{}}}],["route.data",{"_index":196,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["route.data.preload",{"_index":197,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["router",{"_index":1968,"title":{},"body":{"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["routermodul",{"_index":200,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UiRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["routermodule.forchild",{"_index":2051,"title":{},"body":{"modules/UiRoutingModule.html":{}}}],["routermodule.forroot",{"_index":202,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.modul",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"modules/UiModule.html":{}}}],["routing.module.t",{"_index":199,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/UiRoutingModule.html":{}}}],["run",{"_index":540,"title":{},"body":{"injectables/ClockService.html":{},"index.html":{}}}],["rxj",{"_index":195,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SimulationService.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"injectables/WeatherService.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":543,"title":{},"body":{"injectables/ClockService.html":{},"injectables/SchedulerService.html":{},"components/UiComponent.html":{},"injectables/WeatherService.html":{}}}],["s",{"_index":972,"title":{},"body":{"classes/EnumValues.html":{},"components/NumericComponent.html":{},"components/SimulationComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["s/end.html\">renderer2",{"_index":2080,"title":{},"body":{"components/WeatherComponent.html":{}}}],["s/map.html\">google.maps.latlngliter",{"_index":1244,"title":{},"body":{"injectables/LocationService.html":{}}}],["same",{"_index":1034,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["save",{"_index":1450,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["scale",{"_index":1187,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["scaleid",{"_index":461,"title":{},"body":{"components/ChartsComponent.html":{}}}],["scalelabel",{"_index":2461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scalex",{"_index":1194,"title":{},"body":{"components/HomeComponent.html":{}}}],["scatter",{"_index":2126,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["scatteredcloud",{"_index":2125,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["schedul",{"_index":1974,"title":{},"body":{"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["scheduledemand",{"_index":1465,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["scheduledemand(data",{"_index":1474,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["schedulenetwork",{"_index":1466,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["schedulenetwork(data",{"_index":1480,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["scheduler.servic",{"_index":2222,"title":{},"body":{"components/WizardComponent.html":{}}}],["schedulerservic",{"_index":1463,"title":{"injectables/SchedulerService.html":{}},"body":{"injectables/SchedulerService.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["schedulesimul",{"_index":1467,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["schedulesimulation(data",{"_index":1484,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["search",{"_index":111,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["search(address",{"_index":1561,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["searchfortheareacompon",{"_index":110,"title":{"components/SearchForTheAreaComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["second",{"_index":707,"title":{},"body":{"classes/Edge.html":{},"classes/EnumValues.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["select",{"_index":114,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"miscellaneous/variables.html":{}}}],["selectionchang",{"_index":2213,"title":{},"body":{"components/WizardComponent.html":{}}}],["selectionoftheareacompon",{"_index":113,"title":{"components/SelectionOfTheAreaComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["sell",{"_index":2404,"title":{},"body":{"license.html":{}}}],["send",{"_index":1751,"title":{},"body":{"injectables/SimulationService.html":{}}}],["sendact",{"_index":222,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["sent",{"_index":230,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["sequenc",{"_index":1476,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["serve:devapp",{"_index":2384,"title":{},"body":{"index.html":{}}}],["servic",{"_index":327,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"injectables/LocationService.html":{},"components/PrivacyComponent.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/TermsComponent.html":{}}}],["set",{"_index":575,"title":{},"body":{"injectables/ClockService.html":{},"classes/Edge.html":{},"components/GoogleMapComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SimulationService.html":{},"interfaces/Tag.html":{}}}],["set('appid",{"_index":2181,"title":{},"body":{"injectables/WeatherService.html":{}}}],["set('lat",{"_index":2177,"title":{},"body":{"injectables/WeatherService.html":{}}}],["set('lon",{"_index":2179,"title":{},"body":{"injectables/WeatherService.html":{}}}],["setcondit",{"_index":2078,"title":{},"body":{"components/WeatherComponent.html":{}}}],["setconditions(weath",{"_index":2091,"title":{},"body":{"components/WeatherComponent.html":{}}}],["setlatlng",{"_index":1232,"title":{},"body":{"injectables/LocationService.html":{}}}],["setlatlng(latlng",{"_index":1243,"title":{},"body":{"injectables/LocationService.html":{}}}],["settimeout",{"_index":1490,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["shall",{"_index":2410,"title":{},"body":{"license.html":{}}}],["shared/can",{"_index":1990,"title":{},"body":{"components/UiComponent.html":{},"modules/UiRoutingModule.html":{}}}],["shared/info",{"_index":1993,"title":{},"body":{"components/UiComponent.html":{}}}],["shared/messag",{"_index":1992,"title":{},"body":{"components/UiComponent.html":{}}}],["shared/shared.modul",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"modules/UiModule.html":{}}}],["sharededg",{"_index":922,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["sharededges.length",{"_index":928,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["sharedmodul",{"_index":147,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["sharedmodule.forroot",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["shortest",{"_index":752,"title":{},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["shortestpath",{"_index":821,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SimulationService.html":{},"interfaces/Tag.html":{}}}],["shortestpaths.length",{"_index":916,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["shortestpaths[i",{"_index":920,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["shortestpaths[i].edg",{"_index":918,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["shortestpathsprob",{"_index":878,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["shortestpathsprobabilities[z].push(p",{"_index":952,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["show",{"_index":1168,"title":{},"body":{"components/HomeComponent.html":{},"components/MapComponent.html":{}}}],["shower",{"_index":2130,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["showerrain",{"_index":2129,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["shows/hid",{"_index":1323,"title":{},"body":{"components/MapComponent.html":{}}}],["simonetti",{"_index":77,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"license.html":{}}}],["simplechang",{"_index":1121,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["simul",{"_index":44,"title":{"interfaces/Simulation.html":{}},"body":{"components/AboutComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"components/HomeComponent.html":{},"injectables/LocationService.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"injectables/SimulationService.html":{},"interfaces/SimulationState.html":{},"components/StatisticsComponent.html":{},"components/WizardComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["simulatedtimeinterv",{"_index":502,"title":{},"body":{"injectables/ClockService.html":{},"components/SimulationComponent.html":{},"miscellaneous/variables.html":{}}}],["simulatedtimeperiod",{"_index":503,"title":{},"body":{"injectables/ClockService.html":{},"components/SimulationComponent.html":{}}}],["simulation'},{'nam",{"_index":116,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["simulation.component.html",{"_index":1658,"title":{},"body":{"components/SimulationComponent.html":{}}}],["simulation.component.scss",{"_index":1657,"title":{},"body":{"components/SimulationComponent.html":{}}}],["simulation.count",{"_index":1689,"title":{},"body":{"components/SimulationComponent.html":{}}}],["simulation.data",{"_index":1406,"title":{},"body":{"components/NumericComponent.html":{}}}],["simulation.servic",{"_index":544,"title":{},"body":{"injectables/ClockService.html":{},"modules/SimulationModule.html":{}}}],["simulation/clock.servic",{"_index":1489,"title":{},"body":{"injectables/SchedulerService.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{}}}],["simulation/models/reduc",{"_index":1403,"title":{},"body":{"components/NumericComponent.html":{},"components/SimulationComponent.html":{}}}],["simulation/models/simul",{"_index":1404,"title":{},"body":{"components/NumericComponent.html":{},"components/SimulationComponent.html":{}}}],["simulation/simulation.modul",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["simulation/simulation.servic",{"_index":407,"title":{},"body":{"components/ChartsComponent.html":{},"injectables/SchedulerService.html":{},"components/StatisticsComponent.html":{}}}],["simulation?').pip",{"_index":2005,"title":{},"body":{"components/UiComponent.html":{}}}],["simulation?').subscrib",{"_index":2009,"title":{},"body":{"components/UiComponent.html":{}}}],["simulationact",{"_index":1424,"title":{},"body":{"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"miscellaneous/typealiases.html":{}}}],["simulationactiontyp",{"_index":546,"title":{},"body":{"injectables/ClockService.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"injectables/SimulationService.html":{},"miscellaneous/enumerations.html":{}}}],["simulationactiontypes.periodschang",{"_index":583,"title":{},"body":{"injectables/ClockService.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"injectables/SimulationService.html":{}}}],["simulationactiontypes.reset",{"_index":1423,"title":{},"body":{"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"injectables/SimulationService.html":{}}}],["simulationactiontypes.simulationchang",{"_index":1422,"title":{},"body":{"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"injectables/SimulationService.html":{}}}],["simulationactiontypes.simulationend",{"_index":585,"title":{},"body":{"injectables/ClockService.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"injectables/SimulationService.html":{}}}],["simulationchang",{"_index":1419,"title":{"classes/SimulationChanged.html":{}},"body":{"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["simulationcompon",{"_index":115,"title":{"components/SimulationComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["simulationend",{"_index":1420,"title":{"classes/SimulationEnded.html":{}},"body":{"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["simulationmodul",{"_index":148,"title":{"modules/SimulationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SimulationModule.html":{},"modules.html":{},"overview.html":{}}}],["simulationreduc",{"_index":2353,"title":{},"body":{"miscellaneous/functions.html":{}}}],["simulationreducer(st",{"_index":2364,"title":{},"body":{"miscellaneous/functions.html":{}}}],["simulationservic",{"_index":386,"title":{"injectables/SimulationService.html":{}},"body":{"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/SchedulerService.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"overview.html":{}}}],["simulationst",{"_index":1853,"title":{"interfaces/SimulationState.html":{}},"body":{"interfaces/SimulationState.html":{},"miscellaneous/variables.html":{}}}],["simulationstatist",{"_index":1934,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["ski",{"_index":2121,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["skip_next",{"_index":1696,"title":{},"body":{"components/SimulationComponent.html":{}}}],["slow",{"_index":511,"title":{},"body":{"injectables/ClockService.html":{},"miscellaneous/enumerations.html":{}}}],["smallest",{"_index":1739,"title":{},"body":{"injectables/SimulationService.html":{}}}],["snack",{"_index":104,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["snackbar",{"_index":1969,"title":{},"body":{"components/UiComponent.html":{}}}],["snow",{"_index":2133,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["snowintens",{"_index":2117,"title":{},"body":{"interfaces/WeatherConditions.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["softwar",{"_index":2393,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"interfaces/SimulationState.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["sp",{"_index":2526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["space",{"_index":2524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specif",{"_index":768,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["speed",{"_index":717,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["squar",{"_index":639,"title":{},"body":{"injectables/DemandService.html":{}}}],["src",{"_index":2359,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../chart",{"_index":2441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../clock.service.t",{"_index":2342,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.prod.t",{"_index":2445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":2446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.test.t",{"_index":2444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../graph.t",{"_index":2344,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../home.transition.t",{"_index":2450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../map.actions.t",{"_index":2343,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../map.reducer.t",{"_index":2351,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../map.style.t",{"_index":2452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../material.module.t",{"_index":2453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../pairs.directive.t",{"_index":2352,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../reducers.t",{"_index":2443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../shared.module.t",{"_index":2454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../simulation.actions.t",{"_index":2345,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../simulation.reducer.t",{"_index":2354,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../ui",{"_index":2455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../utils.t",{"_index":2348,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../weather.t",{"_index":2346,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../wizard.actions.t",{"_index":2347,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../wizard.reducer.t",{"_index":2356,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/about/about.component.t",{"_index":8,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/about/about.component.ts:10",{"_index":25,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/about/about.component.ts:14",{"_index":26,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/app",{"_index":182,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"index.html":{}}}],["src/app/app.component.t",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/demand/demand.module.t",{"_index":604,"title":{},"body":{"modules/DemandModule.html":{}}}],["src/app/demand/demand.service.t",{"_index":606,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:104",{"_index":648,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:119",{"_index":643,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:17",{"_index":618,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:21",{"_index":646,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:28",{"_index":627,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:38",{"_index":634,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:42",{"_index":630,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:54",{"_index":637,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:68",{"_index":622,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:87",{"_index":632,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/home/home.component.t",{"_index":1165,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:15",{"_index":1169,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:19",{"_index":1171,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:23",{"_index":1170,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.transition.t",{"_index":2489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/location/location.module.t",{"_index":1217,"title":{},"body":{"modules/LocationModule.html":{}}}],["src/app/location/location.service.t",{"_index":1219,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:15",{"_index":1247,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:17",{"_index":1233,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:25",{"_index":1242,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:33",{"_index":1235,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:53",{"_index":1239,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:68",{"_index":1241,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:72",{"_index":1245,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/network/graph.t",{"_index":674,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/network/graph.ts:101",{"_index":724,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:103",{"_index":700,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:105",{"_index":725,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:110",{"_index":701,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:115",{"_index":706,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:120",{"_index":708,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:125",{"_index":715,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:130",{"_index":726,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:132",{"_index":699,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:134",{"_index":714,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:139",{"_index":720,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:144",{"_index":722,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:146",{"_index":705,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:151",{"_index":698,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:160",{"_index":728,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:191",{"_index":730,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:199",{"_index":743,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:203",{"_index":742,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:207",{"_index":740,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:211",{"_index":736,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:224",{"_index":1460,"title":{},"body":{"classes/Relation.html":{}}}],["src/app/network/graph.ts:226",{"_index":1459,"title":{},"body":{"classes/Relation.html":{}}}],["src/app/network/graph.ts:228",{"_index":1458,"title":{},"body":{"classes/Relation.html":{}}}],["src/app/network/graph.ts:65",{"_index":1390,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:67",{"_index":1387,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:69",{"_index":1388,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:71",{"_index":1389,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:73",{"_index":1392,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:75",{"_index":1386,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:77",{"_index":1391,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:79",{"_index":1385,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:84",{"_index":1384,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:97",{"_index":713,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:99",{"_index":719,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/k",{"_index":1140,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["src/app/network/network.module.t",{"_index":1381,"title":{},"body":{"modules/NetworkModule.html":{}}}],["src/app/network/weather/weather.module.t",{"_index":2137,"title":{},"body":{"modules/WeatherModule.html":{}}}],["src/app/network/weather/weather.service.t",{"_index":2139,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:110",{"_index":2154,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:120",{"_index":2165,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:18",{"_index":2151,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:22",{"_index":2163,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:26",{"_index":2158,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:34",{"_index":2160,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:54",{"_index":2167,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:81",{"_index":2156,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:95",{"_index":2157,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.t",{"_index":2115,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/privacy/privacy.component.t",{"_index":1425,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["src/app/privacy/privacy.component.ts:12",{"_index":1429,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["src/app/privacy/privacy.component.ts:8",{"_index":1428,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["src/app/shared/can",{"_index":238,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{}}}],["src/app/shared/footer/footer.component.t",{"_index":1049,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/footer/footer.component.ts:10",{"_index":1054,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/footer/footer.component.ts:12",{"_index":1053,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/info",{"_index":1200,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["src/app/shared/material.module.t",{"_index":1345,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/messag",{"_index":1369,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["src/app/shared/shared.module.t",{"_index":1636,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["src/app/simulation/clock.service.t",{"_index":498,"title":{},"body":{"injectables/ClockService.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/simulation/clock.service.ts:103",{"_index":525,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:115",{"_index":519,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:121",{"_index":529,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:141",{"_index":526,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:148",{"_index":524,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:163",{"_index":522,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:180",{"_index":517,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:195",{"_index":530,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:26",{"_index":539,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:31",{"_index":538,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:36",{"_index":532,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:41",{"_index":534,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:43",{"_index":541,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:45",{"_index":531,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:47",{"_index":516,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:60",{"_index":523,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:70",{"_index":521,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:93",{"_index":518,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/models/actions/simulation.actions.t",{"_index":1416,"title":{},"body":{"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/simulation/models/actions/simulation.actions.ts:19",{"_index":1654,"title":{},"body":{"classes/SimulationChanged.html":{}}}],["src/app/simulation/models/actions/simulation.actions.ts:21",{"_index":1655,"title":{},"body":{"classes/SimulationChanged.html":{}}}],["src/app/simulation/models/actions/simulation.actions.ts:27",{"_index":1701,"title":{},"body":{"classes/SimulationEnded.html":{}}}],["src/app/simulation/models/actions/simulation.actions.ts:29",{"_index":1702,"title":{},"body":{"classes/SimulationEnded.html":{}}}],["src/app/simulation/models/actions/simulation.actions.ts:35",{"_index":1417,"title":{},"body":{"classes/PeriodsChanged.html":{}}}],["src/app/simulation/models/actions/simulation.actions.ts:37",{"_index":1418,"title":{},"body":{"classes/PeriodsChanged.html":{}}}],["src/app/simulation/models/actions/simulation.actions.ts:43",{"_index":1461,"title":{},"body":{"classes/Reset.html":{}}}],["src/app/simulation/models/actions/simulation.actions.ts:45",{"_index":1462,"title":{},"body":{"classes/Reset.html":{}}}],["src/app/simulation/models/reducers.t",{"_index":1854,"title":{},"body":{"interfaces/SimulationState.html":{},"miscellaneous/variables.html":{}}}],["src/app/simulation/models/reducers/simulation.reducer.t",{"_index":2363,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/simulation/models/simul",{"_index":594,"title":{},"body":{"interfaces/Counts.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{}}}],["src/app/simulation/simulation.module.t",{"_index":1705,"title":{},"body":{"modules/SimulationModule.html":{}}}],["src/app/simulation/simulation.service.t",{"_index":1708,"title":{},"body":{"injectables/SimulationService.html":{}}}],["src/app/simulation/simulation.service.ts:101",{"_index":1744,"title":{},"body":{"injectables/SimulationService.html":{}}}],["src/app/simulation/simulation.service.ts:130",{"_index":1747,"title":{},"body":{"injectables/SimulationService.html":{}}}],["src/app/simulation/simulation.service.ts:152",{"_index":1728,"title":{},"body":{"injectables/SimulationService.html":{}}}],["src/app/simulation/simulation.service.ts:175",{"_index":1741,"title":{},"body":{"injectables/SimulationService.html":{}}}],["src/app/simulation/simulation.service.ts:189",{"_index":1750,"title":{},"body":{"injectables/SimulationService.html":{}}}],["src/app/simulation/simulation.service.ts:204",{"_index":1754,"title":{},"body":{"injectables/SimulationService.html":{}}}],["src/app/simulation/simulation.service.ts:212",{"_index":1760,"title":{},"body":{"injectables/SimulationService.html":{}}}],["src/app/simulation/simulation.service.ts:219",{"_index":1726,"title":{},"body":{"injectables/SimulationService.html":{}}}],["src/app/simulation/simulation.service.ts:230",{"_index":1738,"title":{},"body":{"injectables/SimulationService.html":{}}}],["src/app/simulation/simulation.service.ts:243",{"_index":1733,"title":{},"body":{"injectables/SimulationService.html":{}}}],["src/app/simulation/simulation.service.ts:25",{"_index":1765,"title":{},"body":{"injectables/SimulationService.html":{}}}],["src/app/simulation/simulation.service.ts:271",{"_index":1736,"title":{},"body":{"injectables/SimulationService.html":{}}}],["src/app/simulation/simulation.service.ts:291",{"_index":1732,"title":{},"body":{"injectables/SimulationService.html":{}}}],["src/app/simulation/simulation.service.ts:30",{"_index":1773,"title":{},"body":{"injectables/SimulationService.html":{}}}],["src/app/simulation/simulation.service.ts:320",{"_index":1731,"title":{},"body":{"injectables/SimulationService.html":{}}}],["src/app/simulation/simulation.service.ts:334",{"_index":1762,"title":{},"body":{"injectables/SimulationService.html":{}}}],["src/app/simulation/simulation.service.ts:343",{"_index":1763,"title":{},"body":{"injectables/SimulationService.html":{}}}],["src/app/simulation/simulation.service.ts:347",{"_index":1743,"title":{},"body":{"injectables/SimulationService.html":{}}}],["src/app/simulation/simulation.service.ts:35",{"_index":1771,"title":{},"body":{"injectables/SimulationService.html":{}}}],["src/app/simulation/simulation.service.ts:368",{"_index":1727,"title":{},"body":{"injectables/SimulationService.html":{}}}],["src/app/simulation/simulation.service.ts:43",{"_index":1767,"title":{},"body":{"injectables/SimulationService.html":{}}}],["src/app/simulation/simulation.service.ts:48",{"_index":1725,"title":{},"body":{"injectables/SimulationService.html":{}}}],["src/app/simulation/simulation.service.ts:56",{"_index":1746,"title":{},"body":{"injectables/SimulationService.html":{}}}],["src/app/simulation/simulation.service.ts:71",{"_index":1730,"title":{},"body":{"injectables/SimulationService.html":{}}}],["src/app/simulation/statistics.t",{"_index":1868,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:13",{"_index":1900,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:17",{"_index":1892,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:21",{"_index":1902,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:25",{"_index":1882,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:31",{"_index":1890,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:35",{"_index":1886,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:39",{"_index":1884,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:45",{"_index":1888,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:69",{"_index":1894,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:73",{"_index":1898,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:77",{"_index":1904,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:9",{"_index":1896,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/terms/terms.component.t",{"_index":1949,"title":{},"body":{"components/TermsComponent.html":{}}}],["src/app/terms/terms.component.ts:12",{"_index":1953,"title":{},"body":{"components/TermsComponent.html":{}}}],["src/app/terms/terms.component.ts:8",{"_index":1952,"title":{},"body":{"components/TermsComponent.html":{}}}],["src/app/ui/charts/chart",{"_index":2456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/ui/charts/charts.component.t",{"_index":366,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:131",{"_index":392,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:137",{"_index":397,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:180",{"_index":396,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:186",{"_index":395,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:22",{"_index":403,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:24",{"_index":405,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:26",{"_index":401,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:28",{"_index":402,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:30",{"_index":404,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:32",{"_index":399,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:34",{"_index":387,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:44",{"_index":391,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:48",{"_index":389,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:54",{"_index":390,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:63",{"_index":398,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:67",{"_index":393,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:78",{"_index":394,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:82",{"_index":388,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/directives/pairs.directive.t",{"_index":2362,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/ui/map/googl",{"_index":1076,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["src/app/ui/map/map.component.t",{"_index":1273,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:128",{"_index":1281,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:24",{"_index":1283,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:27",{"_index":1291,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:29",{"_index":1284,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:30",{"_index":1285,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:31",{"_index":1287,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:32",{"_index":1288,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:33",{"_index":1289,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:34",{"_index":1286,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:35",{"_index":1290,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:37",{"_index":1278,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:55",{"_index":1279,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:60",{"_index":1282,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:64",{"_index":1280,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.style.t",{"_index":2495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/ui/models/actions/map.actions.t",{"_index":1266,"title":{},"body":{"classes/MapChanged.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/ui/models/actions/map.actions.ts:17",{"_index":1267,"title":{},"body":{"classes/MapChanged.html":{}}}],["src/app/ui/models/actions/map.actions.ts:19",{"_index":1268,"title":{},"body":{"classes/MapChanged.html":{}}}],["src/app/ui/models/actions/wizard.actions.t",{"_index":1056,"title":{},"body":{"classes/GoOn.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:20",{"_index":1943,"title":{},"body":{"classes/StepChanged.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:22",{"_index":1944,"title":{},"body":{"classes/StepChanged.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:28",{"_index":1945,"title":{},"body":{"classes/StepError.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:30",{"_index":1946,"title":{},"body":{"classes/StepError.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:36",{"_index":1947,"title":{},"body":{"classes/StepPending.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:38",{"_index":1948,"title":{},"body":{"classes/StepPending.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:44",{"_index":1059,"title":{},"body":{"classes/GoOn.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:46",{"_index":1060,"title":{},"body":{"classes/GoOn.html":{}}}],["src/app/ui/models/base.component.t",{"_index":214,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/base.component.ts:11",{"_index":226,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/base.component.ts:13",{"_index":225,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/base.component.ts:22",{"_index":232,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/base.component.ts:27",{"_index":227,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/base.component.ts:32",{"_index":231,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/base.component.ts:9",{"_index":224,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/reducers.t",{"_index":2053,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["src/app/ui/models/reducers/map.reducer.t",{"_index":1330,"title":{},"body":{"interfaces/MapState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/ui/models/reducers/wizard.reducer.t",{"_index":2275,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/ui/models/ui",{"_index":1264,"title":{},"body":{"interfaces/Map.html":{},"interfaces/Step.html":{},"miscellaneous/variables.html":{}}}],["src/app/ui/numeric/numeric.component.t",{"_index":1393,"title":{},"body":{"components/NumericComponent.html":{}}}],["src/app/ui/numeric/numeric.component.ts:17",{"_index":1402,"title":{},"body":{"components/NumericComponent.html":{}}}],["src/app/ui/numeric/numeric.component.ts:19",{"_index":1397,"title":{},"body":{"components/NumericComponent.html":{}}}],["src/app/ui/numeric/numeric.component.ts:27",{"_index":1398,"title":{},"body":{"components/NumericComponent.html":{}}}],["src/app/ui/numeric/numeric.component.ts:32",{"_index":1401,"title":{},"body":{"components/NumericComponent.html":{}}}],["src/app/ui/numeric/numeric.component.ts:36",{"_index":1399,"title":{},"body":{"components/NumericComponent.html":{}}}],["src/app/ui/numeric/numeric.component.ts:44",{"_index":1400,"title":{},"body":{"components/NumericComponent.html":{}}}],["src/app/ui/ui",{"_index":2050,"title":{},"body":{"modules/UiRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["src/app/ui/ui.component.t",{"_index":1962,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:102",{"_index":1977,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:106",{"_index":1983,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:114",{"_index":1981,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:24",{"_index":1987,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:26",{"_index":1985,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:28",{"_index":1986,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:30",{"_index":1988,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:32",{"_index":1975,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:43",{"_index":1979,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:77",{"_index":1978,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:83",{"_index":1976,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:93",{"_index":1984,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.module.t",{"_index":2025,"title":{},"body":{"modules/UiModule.html":{}}}],["src/app/ui/utils.t",{"_index":954,"title":{},"body":{"classes/EnumValues.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/ui/utils.ts:5",{"_index":959,"title":{},"body":{"classes/EnumValues.html":{}}}],["src/app/ui/utils.ts:9",{"_index":961,"title":{},"body":{"classes/EnumValues.html":{}}}],["src/app/ui/weather/weather.component.t",{"_index":2072,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:21",{"_index":2094,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:23",{"_index":2096,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:25",{"_index":2095,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:27",{"_index":2081,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:39",{"_index":2087,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:44",{"_index":2086,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:48",{"_index":2093,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:52",{"_index":2088,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:70",{"_index":2090,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:74",{"_index":2092,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:81",{"_index":2089,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:90",{"_index":2084,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/wizard/chang",{"_index":249,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["src/app/ui/wizard/estim",{"_index":984,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["src/app/ui/wizard/scheduler.service.t",{"_index":1464,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["src/app/ui/wizard/scheduler.service.ts:125",{"_index":1475,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["src/app/ui/wizard/scheduler.service.ts:13",{"_index":1471,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["src/app/ui/wizard/scheduler.service.ts:181",{"_index":1485,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["src/app/ui/wizard/scheduler.service.ts:29",{"_index":1472,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["src/app/ui/wizard/scheduler.service.ts:53",{"_index":1481,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["src/app/ui/wizard/search",{"_index":1551,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["src/app/ui/wizard/select",{"_index":1598,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.t",{"_index":1656,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:22",{"_index":1661,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:24",{"_index":1662,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:26",{"_index":1672,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:28",{"_index":1673,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:30",{"_index":1670,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:32",{"_index":1671,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:34",{"_index":1668,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:36",{"_index":1669,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:38",{"_index":1660,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:49",{"_index":1663,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:55",{"_index":1667,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:59",{"_index":1665,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:91",{"_index":1666,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:95",{"_index":1664,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.t",{"_index":1922,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:21",{"_index":1926,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:23",{"_index":1927,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:25",{"_index":1933,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:27",{"_index":1932,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:29",{"_index":1925,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:40",{"_index":1928,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:46",{"_index":1931,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:50",{"_index":1929,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:64",{"_index":1930,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/wizard.component.t",{"_index":2200,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:119",{"_index":2207,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:20",{"_index":2216,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:22",{"_index":2217,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:24",{"_index":2220,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:26",{"_index":2206,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:35",{"_index":2208,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:92",{"_index":2211,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.service.t",{"_index":2251,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:12",{"_index":2269,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:14",{"_index":2257,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:22",{"_index":2266,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:31",{"_index":2268,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:38",{"_index":2261,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:45",{"_index":2263,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:52",{"_index":2264,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:59",{"_index":2265,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:66",{"_index":2259,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/utils.t",{"_index":2357,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/environments/environment.prod.t",{"_index":2477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":2483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/environments/environment.test.t",{"_index":2472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start",{"_index":512,"title":{"index.html":{},"license.html":{}},"body":{"injectables/ClockService.html":{},"components/HomeComponent.html":{},"components/SimulationComponent.html":{},"miscellaneous/enumerations.html":{}}}],["startedvehicl",{"_index":597,"title":{},"body":{"interfaces/Counts.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{},"injectables/SimulationService.html":{}}}],["starttest",{"_index":2385,"title":{},"body":{"index.html":{}}}],["starttim",{"_index":588,"title":{},"body":{"injectables/ClockService.html":{}}}],["state",{"_index":310,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"components/NumericComponent.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"injectables/SimulationService.html":{},"interfaces/SimulationState.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["state.currentstep",{"_index":2288,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["state.end",{"_index":2487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.error",{"_index":2290,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["state.map",{"_index":1340,"title":{},"body":{"interfaces/MapState.html":{},"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["state.pend",{"_index":2292,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["state.period",{"_index":2488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.simul",{"_index":1864,"title":{},"body":{"interfaces/SimulationState.html":{},"miscellaneous/variables.html":{}}}],["state.step",{"_index":2286,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["state.steps[action.payload.index",{"_index":2280,"title":{},"body":{"interfaces/WizardState.html":{}}}],["state.t",{"_index":595,"title":{},"body":{"interfaces/Counts.html":{},"interfaces/Map.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{},"interfaces/Step.html":{},"miscellaneous/variables.html":{}}}],["state.wizard",{"_index":2066,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["static",{"_index":955,"title":{},"body":{"classes/EnumValues.html":{},"modules/SharedModule.html":{},"classes/Statistics.html":{}}}],["statist",{"_index":377,"title":{"classes/Statistics.html":{}},"body":{"components/ChartsComponent.html":{},"injectables/SimulationService.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["statistics'},{'nam",{"_index":118,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["statistics.component.html",{"_index":1924,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["statistics.component.scss",{"_index":1923,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["statistics.getbusiestedge(edg",{"_index":1804,"title":{},"body":{"injectables/SimulationService.html":{}}}],["statistics.getbusiestedgecapacity(busiestedg",{"_index":1820,"title":{},"body":{"injectables/SimulationService.html":{}}}],["statistics.getbusiestedgedata(busiestedg",{"_index":1818,"title":{},"body":{"injectables/SimulationService.html":{}}}],["statistics.getbusiestedgedelay(busiestedg",{"_index":1822,"title":{},"body":{"injectables/SimulationService.html":{}}}],["statistics.getbusiestedgelabel(busiestedg",{"_index":1816,"title":{},"body":{"injectables/SimulationService.html":{}}}],["statistics.getheavytrafficdata(edg",{"_index":1812,"title":{},"body":{"injectables/SimulationService.html":{}}}],["statistics.getheavytrafficlabels(edg",{"_index":1808,"title":{},"body":{"injectables/SimulationService.html":{}}}],["statistics.getmoderatetrafficlabels(edg",{"_index":1810,"title":{},"body":{"injectables/SimulationService.html":{}}}],["statistics.getmoderateytrafficdata(edg",{"_index":1814,"title":{},"body":{"injectables/SimulationService.html":{}}}],["statisticscompon",{"_index":117,"title":{"components/StatisticsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["statu",{"_index":1254,"title":{},"body":{"injectables/LocationService.html":{}}}],["step",{"_index":308,"title":{"interfaces/Step.html":{}},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"interfaces/Map.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["stepchang",{"_index":1064,"title":{"classes/StepChanged.html":{}},"body":{"classes/GoOn.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["stepclick",{"_index":2205,"title":{},"body":{"components/WizardComponent.html":{}}}],["stepclick(ev",{"_index":2209,"title":{},"body":{"components/WizardComponent.html":{}}}],["steperror",{"_index":1065,"title":{"classes/StepError.html":{}},"body":{"classes/GoOn.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["steppedlin",{"_index":440,"title":{},"body":{"components/ChartsComponent.html":{}}}],["steppend",{"_index":1066,"title":{"classes/StepPending.html":{}},"body":{"classes/GoOn.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["stepper",{"_index":2203,"title":{},"body":{"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["stepperselectionev",{"_index":2210,"title":{},"body":{"components/WizardComponent.html":{}}}],["steps[0",{"_index":1319,"title":{},"body":{"components/MapComponent.html":{}}}],["steps[0].data.cent",{"_index":1320,"title":{},"body":{"components/MapComponent.html":{}}}],["steps[2",{"_index":1322,"title":{},"body":{"components/MapComponent.html":{}}}],["steps[2].data.odpair",{"_index":1324,"title":{},"body":{"components/MapComponent.html":{}}}],["steps[3",{"_index":1326,"title":{},"body":{"components/MapComponent.html":{}}}],["steps[3].data.odpair",{"_index":1327,"title":{},"body":{"components/MapComponent.html":{}}}],["stepsiz",{"_index":2466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stop",{"_index":513,"title":{},"body":{"injectables/ClockService.html":{},"interfaces/Counts.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{},"components/SimulationComponent.html":{},"injectables/SimulationService.html":{},"miscellaneous/enumerations.html":{}}}],["store",{"_index":263,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WizardService.html":{}}}],["storemodul",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{}}}],["storemodule.forfeature('simul",{"_index":1707,"title":{},"body":{"modules/SimulationModule.html":{}}}],["storemodule.forfeature('ui",{"_index":2049,"title":{},"body":{"modules/UiModule.html":{}}}],["storemodule.forroot",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["strada",{"_index":40,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/PrivacyComponent.html":{},"components/TermsComponent.html":{},"index.html":{}}}],["strategi",{"_index":201,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["strategy.t",{"_index":184,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["strategy.ts:6",{"_index":190,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["stream",{"_index":1500,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["stream.subscrib",{"_index":1513,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["string",{"_index":281,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"interfaces/Counts.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["structur",{"_index":813,"title":{},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["style",{"_index":1087,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"miscellaneous/variables.html":{}}}],["styler",{"_index":2500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["styleurl",{"_index":14,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["subject",{"_index":2407,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":2402,"title":{},"body":{"license.html":{}}}],["subscrib",{"_index":228,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["subscript",{"_index":219,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{}}}],["subscription.unsubscrib",{"_index":235,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChartsComponent.html":{},"components/UiComponent.html":{}}}],["subsequ",{"_index":2525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["substanti",{"_index":2411,"title":{},"body":{"license.html":{}}}],["sum",{"_index":616,"title":{},"body":{"injectables/DemandService.html":{},"injectables/SimulationService.html":{}}}],["sum(odmatrixassign",{"_index":647,"title":{},"body":{"injectables/DemandService.html":{}}}],["sumexp",{"_index":946,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["sumexps.push(sum",{"_index":948,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["sumexps[z",{"_index":950,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["super",{"_index":320,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["support",{"_index":1597,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"modules.html":{}}}],["sure",{"_index":2003,"title":{},"body":{"components/UiComponent.html":{}}}],["surfac",{"_index":771,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["svg",{"_index":2431,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":345,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{}}}],["switchmap",{"_index":1486,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["switchmap((respons",{"_index":1502,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["t",{"_index":962,"title":{},"body":{"classes/EnumValues.html":{}}}],["tag",{"_index":688,"title":{"interfaces/Tag.html":{}},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SimulationService.html":{},"interfaces/Tag.html":{}}}],["tag.key",{"_index":852,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SimulationService.html":{},"interfaces/Tag.html":{}}}],["tag.valu",{"_index":854,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["take",{"_index":710,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["takefirststep",{"_index":1720,"title":{},"body":{"injectables/SimulationService.html":{}}}],["takefirststep(nod",{"_index":1748,"title":{},"body":{"injectables/SimulationService.html":{}}}],["takesecondstep",{"_index":1721,"title":{},"body":{"injectables/SimulationService.html":{}}}],["takesecondstep(nod",{"_index":1753,"title":{},"body":{"injectables/SimulationService.html":{}}}],["takethirdstep",{"_index":1722,"title":{},"body":{"injectables/SimulationService.html":{}}}],["takethirdstep(nod",{"_index":1759,"title":{},"body":{"injectables/SimulationService.html":{}}}],["takewhil",{"_index":542,"title":{},"body":{"injectables/ClockService.html":{}}}],["tap",{"_index":1989,"title":{},"body":{"components/UiComponent.html":{}}}],["tap((dialogresult",{"_index":2006,"title":{},"body":{"components/UiComponent.html":{}}}],["target",{"_index":1185,"title":{},"body":{"components/HomeComponent.html":{}}}],["targettim",{"_index":1918,"title":{},"body":{"classes/Statistics.html":{}}}],["technic",{"_index":1454,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["templateurl",{"_index":16,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["term",{"_index":212,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/TermsComponent.html":{}}}],["terms'},{'nam",{"_index":120,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["terms.component.html",{"_index":1951,"title":{},"body":{"components/TermsComponent.html":{}}}],["terms.component.scss",{"_index":1950,"title":{},"body":{"components/TermsComponent.html":{}}}],["terms/terms.compon",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["termscompon",{"_index":119,"title":{"components/TermsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["test",{"_index":2474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testlicens",{"_index":2386,"title":{},"body":{"index.html":{}}}],["text",{"_index":1178,"title":{},"body":{"components/HomeComponent.html":{}}}],["text.split",{"_index":1180,"title":{},"body":{"components/HomeComponent.html":{}}}],["theta",{"_index":939,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["this.adddestination(control",{"_index":1041,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.addorigin(control",{"_index":1033,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.argmin(linkflow",{"_index":661,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.busiestchart",{"_index":417,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.busiestchart.data.datasets[0].data",{"_index":492,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.busiestchart.data.label",{"_index":485,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.busiestchart.destroy",{"_index":418,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.busiestchart.options.annotation.annotations.push",{"_index":458,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.busiestchart.options.title.text",{"_index":454,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.busiestchart.upd",{"_index":496,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.busiestctx",{"_index":427,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.calcpathcosts(odpair",{"_index":938,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.calcshortestpathsprobabilities(odpair",{"_index":879,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.cdr.detectchang",{"_index":2001,"title":{},"body":{"components/UiComponent.html":{}}}],["this.cent",{"_index":1131,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.clock.getstatist",{"_index":1936,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.clock.presscontrol(control",{"_index":1693,"title":{},"body":{"components/SimulationComponent.html":{}}}],["this.clock.reset",{"_index":1498,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.count",{"_index":1690,"title":{},"body":{"components/SimulationComponent.html":{}}}],["this.createchart",{"_index":412,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.createmap(el",{"_index":1124,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["this.currentstep",{"_index":1299,"title":{},"body":{"components/MapComponent.html":{}}}],["this.data",{"_index":1407,"title":{},"body":{"components/NumericComponent.html":{}}}],["this.demand.calcodmatrix",{"_index":1544,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.demand.changedemand(demand",{"_index":332,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["this.demand.getodmatrix",{"_index":355,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/SimulationService.html":{}}}],["this.demand.reset",{"_index":1496,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.dens",{"_index":798,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.descript",{"_index":321,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/WeatherComponent.html":{}}}],["this.descriptions.findindex(descript",{"_index":334,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["this.dialog.open(infodialogcompon",{"_index":2014,"title":{},"body":{"components/UiComponent.html":{}}}],["this.disabledefaultui",{"_index":1132,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.disabledoubleclickzoom",{"_index":1133,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.dist",{"_index":790,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.drawingoptions.marker.set('vis",{"_index":810,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.drawingoptions.polyline.set('strokecolor",{"_index":808,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.drawingoptions.polyline.set('zindex",{"_index":809,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.dur",{"_index":791,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.durationintraff",{"_index":796,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.edg",{"_index":826,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.edgeid",{"_index":788,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.edges.find((edg",{"_index":844,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.edges.push(edg",{"_index":847,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.elementref.nativeelement.queryselector('#busiestchart",{"_index":428,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.elementref.nativeelement.queryselector('#heavytrafficchart",{"_index":424,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.elementref.nativeelement.queryselector('#iconcontain",{"_index":2099,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.elementref.nativeelement.queryselector('#map",{"_index":1123,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["this.elementref.nativeelement.queryselector('#moderatetrafficchart",{"_index":426,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.elementref.nativeelement.queryselector('.headlin",{"_index":1176,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.endltm",{"_index":1795,"title":{},"body":{"injectables/SimulationService.html":{}}}],["this.endsimul",{"_index":551,"title":{},"body":{"injectables/ClockService.html":{},"components/SimulationComponent.html":{}}}],["this.estimate(linkflow",{"_index":664,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.execut",{"_index":578,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.flow",{"_index":800,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.formbuilder.array",{"_index":2229,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.formbuilder.group",{"_index":2228,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.formgroup.get('bounds').setvalue(map.data.bound",{"_index":1625,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.formgroup.get('center').setvalu",{"_index":1570,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.formgroup.get('endsimulation').setvalue(end",{"_index":1692,"title":{},"body":{"components/SimulationComponent.html":{}}}],["this.formgroup.get('odpair",{"_index":318,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{}}}],["this.formgroup.get('weathercondit",{"_index":344,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["this.freeflowveloc",{"_index":795,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.geocod",{"_index":1248,"title":{},"body":{"injectables/LocationService.html":{}}}],["this.geocoder.geocod",{"_index":1252,"title":{},"body":{"injectables/LocationService.html":{}}}],["this.gesturehandl",{"_index":1137,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.getcount",{"_index":1793,"title":{},"body":{"injectables/SimulationService.html":{}}}],["this.getedge(edgeid).tags.find(tag",{"_index":851,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.getheavytrafficedges(edges).map((edg",{"_index":1905,"title":{},"body":{"classes/Statistics.html":{}}}],["this.geticon(weather.icon",{"_index":2105,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.getkjam",{"_index":803,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.getmoderatetrafficedges(edges).map((edg",{"_index":1906,"title":{},"body":{"classes/Statistics.html":{}}}],["this.getnames(e).map((nam",{"_index":966,"title":{},"body":{"classes/EnumValues.html":{}}}],["this.getnode(node.nodeid",{"_index":835,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.getpathsedg",{"_index":870,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.gettrafficvolumes(edg",{"_index":1914,"title":{},"body":{"classes/Statistics.html":{}}}],["this.gls(linkflow",{"_index":657,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.graph",{"_index":1776,"title":{},"body":{"injectables/SimulationService.html":{}}}],["this.graph.getedg",{"_index":1831,"title":{},"body":{"injectables/SimulationService.html":{}}}],["this.graph.getedges().filter((edg",{"_index":1798,"title":{},"body":{"injectables/SimulationService.html":{}}}],["this.graph.getnod",{"_index":1823,"title":{},"body":{"injectables/SimulationService.html":{}}}],["this.graph.getshortestpath",{"_index":1838,"title":{},"body":{"injectables/SimulationService.html":{}}}],["this.graph.reset",{"_index":1796,"title":{},"body":{"injectables/SimulationService.html":{}}}],["this.heap",{"_index":888,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.heap.getpaths().length",{"_index":906,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.heap.push",{"_index":891,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.heavytrafficchart",{"_index":413,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.heavytrafficchart.data.datasets[0].data",{"_index":488,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.heavytrafficchart.data.label",{"_index":448,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.heavytrafficchart.destroy",{"_index":414,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.heavytrafficchart.options.title.text",{"_index":446,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.heavytrafficchart.upd",{"_index":494,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.heavytrafficctx",{"_index":423,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.http.get(url",{"_index":2183,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.icon",{"_index":2104,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.iconcontain",{"_index":2098,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.incidencematrix",{"_index":876,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.incidencematrix[z][n][m",{"_index":874,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.index",{"_index":353,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/StatisticsComponent.html":{}}}],["this.initedg",{"_index":1788,"title":{},"body":{"injectables/SimulationService.html":{}}}],["this.initodnod",{"_index":1785,"title":{},"body":{"injectables/SimulationService.html":{}}}],["this.initpath",{"_index":1782,"title":{},"body":{"injectables/SimulationService.html":{}}}],["this.initpathsdemand(demand",{"_index":1783,"title":{},"body":{"injectables/SimulationService.html":{}}}],["this.inittimeinterv",{"_index":1781,"title":{},"body":{"injectables/SimulationService.html":{}}}],["this.interv",{"_index":556,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.interval.pip",{"_index":577,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.isonpath(odmatrixassign",{"_index":665,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.isroundabout(edgeid",{"_index":855,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.latlng",{"_index":1249,"title":{},"body":{"injectables/LocationService.html":{}}}],["this.linkflow",{"_index":802,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.location.codeaddress(address).foreach",{"_index":1569,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.location.getcurrentposition().subscrib",{"_index":1584,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.location.getlatlng().lat.tostr",{"_index":2178,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.location.getlatlng().lng.tostr",{"_index":2180,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.location.reset",{"_index":1493,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.location.setlatlng(cent",{"_index":1566,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.ltm",{"_index":1789,"title":{},"body":{"injectables/SimulationService.html":{}}}],["this.map.buildbounds(this.cent",{"_index":1306,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.clearnodesact",{"_index":1316,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.hidepath",{"_index":1317,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.hiderect",{"_index":1309,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.initmap(el",{"_index":1130,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["this.map.reset",{"_index":1492,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.map.setcenter(this.cent",{"_index":1127,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["this.map.setcenter(this.map.getcentroid",{"_index":1313,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.setcentroid",{"_index":1312,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.setzoom(17",{"_index":1314,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.setzoom(this.zoom",{"_index":1129,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["this.map.showgraph",{"_index":1310,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.shownodes(odpair",{"_index":1325,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.showpaths(odpair",{"_index":1328,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.showrect(bound",{"_index":1307,"title":{},"body":{"components/MapComponent.html":{}}}],["this.maptypeid",{"_index":1134,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.maxflow",{"_index":804,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.maxzoom",{"_index":1135,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.min.getd",{"_index":1616,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.min.getfullyear",{"_index":1614,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.min.gethour",{"_index":1617,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.min.getminut",{"_index":1619,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.min.getmonth",{"_index":1615,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.minzoom",{"_index":1136,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.moderatetrafficchart",{"_index":415,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.moderatetrafficchart.data.datasets[0].data",{"_index":490,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.moderatetrafficchart.data.label",{"_index":452,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.moderatetrafficchart.destroy",{"_index":416,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.moderatetrafficchart.options.title.text",{"_index":450,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.moderatetrafficchart.upd",{"_index":495,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.moderatetrafficctx",{"_index":425,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.network",{"_index":1999,"title":{},"body":{"components/UiComponent.html":{}}}],["this.network.calclinkflows(respons",{"_index":1543,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.correctgraph",{"_index":1509,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.creategraph(respons",{"_index":1504,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.getassignmentmatrix",{"_index":656,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.network.getgraph",{"_index":1537,"title":{},"body":{"injectables/SchedulerService.html":{},"injectables/SimulationService.html":{}}}],["this.network.getlinkflow",{"_index":655,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.network.getnetwork().pip",{"_index":1501,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.getnetworkdata",{"_index":1505,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.getodpair",{"_index":354,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/SchedulerService.html":{}}}],["this.network.gettim",{"_index":1512,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.gettimestr",{"_index":2108,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.network.gettrafficdata",{"_index":1542,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.reset",{"_index":1494,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.setbounds(bound",{"_index":1621,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.network.setodpairs(odpair",{"_index":1013,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.network.settime(tim",{"_index":1623,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.network.updategraph(respons",{"_index":1507,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.nod",{"_index":824,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.nodeid",{"_index":782,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.nodes.filter((nod",{"_index":864,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.nodes.find((nod",{"_index":831,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.nodes.push(nod",{"_index":842,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.numer",{"_index":2000,"title":{},"body":{"components/UiComponent.html":{}}}],["this.numericalsimul",{"_index":1792,"title":{},"body":{"injectables/SimulationService.html":{}}}],["this.odmatrix",{"_index":653,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.opendialog('ar",{"_index":2002,"title":{},"body":{"components/UiComponent.html":{}}}],["this.opensnackbar(error",{"_index":1997,"title":{},"body":{"components/UiComponent.html":{}}}],["this.path",{"_index":1777,"title":{},"body":{"injectables/SimulationService.html":{}}}],["this.paths.findindex((path",{"_index":1160,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["this.paths.push",{"_index":1155,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["this.paths.reduce((prev",{"_index":1162,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["this.paths.splice(index",{"_index":1161,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["this.pathsdemand",{"_index":1778,"title":{},"body":{"injectables/SimulationService.html":{}}}],["this.pathsdemand[i",{"_index":1839,"title":{},"body":{"injectables/SimulationService.html":{}}}],["this.pathsdemand[po",{"_index":1842,"title":{},"body":{"injectables/SimulationService.html":{}}}],["this.pathtyp",{"_index":1011,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.paus",{"_index":564,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.pend",{"_index":1995,"title":{},"body":{"components/UiComponent.html":{}}}],["this.populatechart",{"_index":422,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.processingtim",{"_index":558,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.quick",{"_index":572,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.receiveact",{"_index":324,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["this.rel",{"_index":828,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.relationid",{"_index":818,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.renderer.appendchild(this.iconcontain",{"_index":2106,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.renderer.removechild(this.iconcontain",{"_index":2109,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.reset",{"_index":581,"title":{},"body":{"injectables/ClockService.html":{},"injectables/SchedulerService.html":{}}}],["this.resetcondit",{"_index":2101,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.resetcount",{"_index":886,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.router.navigate(['/hom",{"_index":2010,"title":{},"body":{"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["this.scheduler.reset",{"_index":2008,"title":{},"body":{"components/UiComponent.html":{}}}],["this.scheduler.scheduledemand(data",{"_index":2247,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.scheduler.schedulenetwork(data",{"_index":2246,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.scheduler.schedulesimulation(data",{"_index":2248,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.sendact",{"_index":325,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["this.setconditions(weathercondit",{"_index":2102,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.show",{"_index":1199,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.simulatedtimeinterv",{"_index":554,"title":{},"body":{"injectables/ClockService.html":{},"components/SimulationComponent.html":{}}}],["this.simulatedtimeperiod",{"_index":553,"title":{},"body":{"injectables/ClockService.html":{},"components/SimulationComponent.html":{}}}],["this.simulation.getstatist",{"_index":421,"title":{},"body":{"components/ChartsComponent.html":{},"components/StatisticsComponent.html":{}}}],["this.simulation.init",{"_index":1550,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.simulation.propagateflow",{"_index":590,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.simulation.reset",{"_index":1497,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.simulation.resetflow",{"_index":580,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.slow",{"_index":570,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.snackbar.openfromcomponent(messagearchivedcompon",{"_index":2011,"title":{},"body":{"components/UiComponent.html":{}}}],["this.start",{"_index":562,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.stat",{"_index":2273,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.statist",{"_index":420,"title":{},"body":{"components/ChartsComponent.html":{},"components/UiComponent.html":{}}}],["this.statistics.busiestedgecapac",{"_index":464,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.statistics.busiestedgedata",{"_index":493,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.statistics.busiestedgelabel",{"_index":457,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.statistics.heavytrafficdata",{"_index":489,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.statistics.heavytrafficlabel",{"_index":449,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.statistics.moderatetrafficdata",{"_index":491,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.statistics.moderatetrafficlabel",{"_index":453,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.statistics.periods.map((valu",{"_index":486,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.step",{"_index":568,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.stepp",{"_index":2241,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.stepper.reset",{"_index":2274,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.stepper.selected.complet",{"_index":2245,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.stepper.selectedindex",{"_index":2250,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.stop",{"_index":566,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.store.dispatch",{"_index":582,"title":{},"body":{"injectables/ClockService.html":{},"injectables/SimulationService.html":{},"injectables/WizardService.html":{}}}],["this.store.pipe(select(fromsimulation.end)).subscribe((end",{"_index":550,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.store.pipe(select(fromui.wizardstate)).subscribe((st",{"_index":2272,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.styl",{"_index":1138,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.subscript",{"_index":560,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.subscription.clos",{"_index":574,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.subscription.unsubscrib",{"_index":579,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.subscriptions.foreach((subscript",{"_index":234,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChartsComponent.html":{},"components/UiComponent.html":{}}}],["this.subscriptions.push(this.formgroup.get('bounds').valuechanges.subscrib",{"_index":1620,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.subscriptions.push(this.formgroup.get('center').valuechanges.subscrib",{"_index":1565,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.subscriptions.push(this.formgroup.get('odpairs').valuechanges.subscrib",{"_index":328,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{}}}],["this.subscriptions.push(this.formgroup.get('time').valuechanges.subscrib",{"_index":1622,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.subscriptions.push(this.formgroup.get('weatherconditions').valuechanges.subscrib",{"_index":333,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromsimulation.end)).subscribe((end",{"_index":1691,"title":{},"body":{"components/SimulationComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromsimulation.periods)).subscribe((period",{"_index":1677,"title":{},"body":{"components/SimulationComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromsimulation.simulation)).subscribe((simul",{"_index":1405,"title":{},"body":{"components/NumericComponent.html":{},"components/SimulationComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromui.currentstep)).subscribe((currentstep",{"_index":341,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromui.error)).subscribe((error",{"_index":1996,"title":{},"body":{"components/UiComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromui.map)).subscribe((map",{"_index":1016,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromui.pending)).subscribe((pend",{"_index":1994,"title":{},"body":{"components/UiComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromui.steps)).subscribe((step",{"_index":1318,"title":{},"body":{"components/MapComponent.html":{}}}],["this.sum(odmatrixassign",{"_index":668,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.takefirststep(nod",{"_index":1824,"title":{},"body":{"injectables/SimulationService.html":{}}}],["this.takesecondstep(nod",{"_index":1825,"title":{},"body":{"injectables/SimulationService.html":{}}}],["this.takethirdstep(nod",{"_index":1826,"title":{},"body":{"injectables/SimulationService.html":{}}}],["this.tim",{"_index":2107,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.timeinterv",{"_index":1679,"title":{},"body":{"components/SimulationComponent.html":{},"injectables/SimulationService.html":{}}}],["this.timeperiod",{"_index":1681,"title":{},"body":{"components/SimulationComponent.html":{},"injectables/SimulationService.html":{}}}],["this.timeperiods[0",{"_index":1780,"title":{},"body":{"injectables/SimulationService.html":{}}}],["this.timeperiods[this.timeperiods.length",{"_index":1806,"title":{},"body":{"injectables/SimulationService.html":{}}}],["this.totalprocessingtim",{"_index":559,"title":{},"body":{"injectables/ClockService.html":{},"components/StatisticsComponent.html":{}}}],["this.totalsimulatedtim",{"_index":1939,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.totaltim",{"_index":1937,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.updatechart",{"_index":445,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.updatedata",{"_index":444,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.updateodpairs(map.data.selectednod",{"_index":1018,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.updateopt",{"_index":443,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.updatesimulatedtimeperiod",{"_index":592,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.updatestatist",{"_index":1790,"title":{},"body":{"injectables/SimulationService.html":{}}}],["this.updatetimeperiod",{"_index":1791,"title":{},"body":{"injectables/SimulationService.html":{}}}],["this.valuechang",{"_index":323,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{}}}],["this.veloc",{"_index":797,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.walk(o",{"_index":894,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.weather.changeweather(weathercondit",{"_index":340,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["this.weather.getfactor",{"_index":1547,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.weather.getweathercondit",{"_index":2100,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.weather.getweatherdata(this.network.gettim",{"_index":1510,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.weather.reset",{"_index":1495,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.weather.updateweatherdata(respons",{"_index":1511,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.weathercondit",{"_index":2173,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.wizard.goon",{"_index":2249,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.wizard.goon(data",{"_index":1536,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.wizard.putinerror(\"brows",{"_index":1595,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.putinerror('invalid",{"_index":1581,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.putinerror('zero",{"_index":1576,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.putinerror(error",{"_index":1042,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.wizard.putinerror(messag",{"_index":1533,"title":{},"body":{"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.putonhold('check",{"_index":1508,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.wizard.putonhold('comput",{"_index":1538,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.wizard.putonhold('cr",{"_index":1503,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.wizard.putonhold('get",{"_index":1499,"title":{},"body":{"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.putonhold('initi",{"_index":1549,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.wizard.putonhold('search",{"_index":1567,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.putonhold('upd",{"_index":1506,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.wizard.removefromwait",{"_index":1535,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.wizard.reset",{"_index":1491,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.wizard.stepp",{"_index":2240,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.wizard.updatestep",{"_index":1043,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.wizard.updatestep(this.formgroup.valu",{"_index":1019,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{}}}],["this.wizardform",{"_index":2227,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.wizardform.get('formstep",{"_index":2226,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.wizardform.get('formsteps').get([index]).valu",{"_index":2244,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.zoom",{"_index":1139,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["through",{"_index":1225,"title":{},"body":{"injectables/LocationService.html":{}}}],["throwerror",{"_index":747,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{}}}],["throwerror('getweatherdata",{"_index":2187,"title":{},"body":{"injectables/WeatherService.html":{}}}],["thunderstorm",{"_index":2132,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["tick",{"_index":2463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["time",{"_index":48,"title":{},"body":{"components/AboutComponent.html":{},"injectables/ClockService.html":{},"classes/EnumValues.html":{},"components/HomeComponent.html":{},"components/PrivacyComponent.html":{},"injectables/SchedulerService.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["time.gettim",{"_index":2193,"title":{},"body":{"injectables/WeatherService.html":{}}}],["time.gettimezoneoffset",{"_index":2190,"title":{},"body":{"injectables/WeatherService.html":{}}}],["timeinterv",{"_index":741,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SimulationComponent.html":{},"injectables/SimulationService.html":{},"classes/Statistics.html":{},"interfaces/Tag.html":{}}}],["timeintervaldecr",{"_index":2560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["timeintervalincr",{"_index":2559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["timelimit",{"_index":2507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["timeout",{"_index":1594,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["timeperiod",{"_index":1659,"title":{},"body":{"components/SimulationComponent.html":{},"injectables/SimulationService.html":{},"classes/Statistics.html":{}}}],["timer",{"_index":533,"title":{},"body":{"injectables/ClockService.html":{}}}],["timezon",{"_index":2191,"title":{},"body":{"injectables/WeatherService.html":{}}}],["timezoneoffset",{"_index":2189,"title":{},"body":{"injectables/WeatherService.html":{}}}],["titl",{"_index":2458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["togglevalu",{"_index":258,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["togglevalue(pair",{"_index":285,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["toinch",{"_index":2147,"title":{},"body":{"injectables/WeatherService.html":{}}}],["toinches(valu",{"_index":2164,"title":{},"body":{"injectables/WeatherService.html":{}}}],["tool",{"_index":2373,"title":{},"body":{"index.html":{}}}],["toolbox",{"_index":2536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tort",{"_index":2428,"title":{},"body":{"license.html":{}}}],["tosecond",{"_index":1674,"title":{},"body":{"components/SimulationComponent.html":{},"miscellaneous/functions.html":{}}}],["toseconds(periods.simulatedtimeinterv",{"_index":1684,"title":{},"body":{"components/SimulationComponent.html":{}}}],["toseconds(uiconfig.simulatedtimeinterv",{"_index":1685,"title":{},"body":{"components/SimulationComponent.html":{}}}],["toseconds(valu",{"_index":968,"title":{},"body":{"classes/EnumValues.html":{},"miscellaneous/functions.html":{}}}],["total",{"_index":709,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{}}}],["totalprocessingtim",{"_index":504,"title":{},"body":{"injectables/ClockService.html":{},"components/StatisticsComponent.html":{}}}],["totalsimulatedtim",{"_index":573,"title":{},"body":{"injectables/ClockService.html":{},"components/StatisticsComponent.html":{}}}],["totaltim",{"_index":1805,"title":{},"body":{"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{}}}],["traffic",{"_index":42,"title":{},"body":{"components/AboutComponent.html":{},"components/ChartsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"injectables/SimulationService.html":{},"interfaces/Tag.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["trafficchartopt",{"_index":409,"title":{},"body":{"components/ChartsComponent.html":{},"miscellaneous/variables.html":{}}}],["trafficcount",{"_index":601,"title":{},"body":{"interfaces/Counts.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{},"injectables/SimulationService.html":{}}}],["trafficdata",{"_index":2476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trafficvolum",{"_index":600,"title":{},"body":{"interfaces/Counts.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{},"injectables/SimulationService.html":{},"classes/Statistics.html":{}}}],["trafficvolumes[i",{"_index":1916,"title":{},"body":{"classes/Statistics.html":{}}}],["transit",{"_index":1756,"title":{},"body":{"injectables/SimulationService.html":{},"miscellaneous/variables.html":{}}}],["transition('void",{"_index":2492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translat",{"_index":2313,"title":{},"body":{"dependencies.html":{}}}],["translatez",{"_index":1190,"title":{},"body":{"components/HomeComponent.html":{}}}],["transmiss",{"_index":1742,"title":{},"body":{"injectables/SimulationService.html":{}}}],["transport",{"_index":820,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["travel",{"_index":1740,"title":{},"body":{"injectables/SimulationService.html":{}}}],["travers",{"_index":898,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["tri",{"_index":866,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{}}}],["trigger('hometransit",{"_index":2491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChartsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SimulationService.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"miscellaneous/variables.html":{}}}],["turf/area",{"_index":2304,"title":{},"body":{"dependencies.html":{}}}],["turf/bear",{"_index":2310,"title":{},"body":{"dependencies.html":{}}}],["turf/cent",{"_index":2317,"title":{},"body":{"dependencies.html":{}}}],["turf/centroid",{"_index":2315,"title":{},"body":{"dependencies.html":{}}}],["turf/dist",{"_index":2311,"title":{},"body":{"dependencies.html":{}}}],["turf/help",{"_index":2306,"title":{},"body":{"dependencies.html":{}}}],["turf/invari",{"_index":2308,"title":{},"body":{"dependencies.html":{}}}],["turf/transform",{"_index":2312,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":676,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["type",{"_index":31,"title":{},"body":{"components/AboutComponent.html":{},"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"injectables/SimulationService.html":{},"interfaces/SimulationState.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealias",{"_index":2438,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1676,"title":{},"body":{"components/SimulationComponent.html":{}}}],["typescript",{"_index":67,"title":{},"body":{"components/AboutComponent.html":{}}}],["ui",{"_index":88,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["ui'},{'nam",{"_index":122,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["ui.compon",{"_index":2031,"title":{},"body":{"modules/UiModule.html":{},"modules/UiRoutingModule.html":{}}}],["ui.component.html",{"_index":1964,"title":{},"body":{"components/UiComponent.html":{}}}],["ui.component.scss",{"_index":1963,"title":{},"body":{"components/UiComponent.html":{}}}],["ui/ui",{"_index":548,"title":{},"body":{"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SimulationService.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{}}}],["ui/ui.module#uimodul",{"_index":209,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["uicompon",{"_index":121,"title":{"components/UiComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["uiconfig",{"_index":315,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"injectables/SimulationService.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["uiconfig.links.heavytrafficcolor",{"_index":434,"title":{},"body":{"components/ChartsComponent.html":{}}}],["uiconfig.links.moderatetrafficcolor",{"_index":436,"title":{},"body":{"components/ChartsComponent.html":{}}}],["uiconfig.map.cent",{"_index":1300,"title":{},"body":{"components/MapComponent.html":{}}}],["uiconfig.map.zoom",{"_index":1301,"title":{},"body":{"components/MapComponent.html":{}}}],["uiconfig.maxodpair",{"_index":1024,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["uiconfig.maxtimeinterv",{"_index":1837,"title":{},"body":{"injectables/SimulationService.html":{}}}],["uiconfig.mindist",{"_index":1800,"title":{},"body":{"injectables/SimulationService.html":{}}}],["uiconfig.mindur",{"_index":1802,"title":{},"body":{"injectables/SimulationService.html":{}}}],["uiconfig.simulatedtimeinterv",{"_index":555,"title":{},"body":{"injectables/ClockService.html":{}}}],["uiconfig.sp",{"_index":807,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["uiconfig.theta",{"_index":940,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["uiconfig.timeintervaldecr",{"_index":587,"title":{},"body":{"injectables/ClockService.html":{}}}],["uiconfig.timeintervalincr",{"_index":586,"title":{},"body":{"injectables/ClockService.html":{}}}],["uiconfig.timelimit",{"_index":1618,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["uiconfig.weathericons[index",{"_index":338,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["uimodul",{"_index":2019,"title":{"modules/UiModule.html":{}},"body":{"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["uiroutingmodul",{"_index":2024,"title":{"modules/UiRoutingModule.html":{}},"body":{"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["uistat",{"_index":2052,"title":{"interfaces/UiState.html":{}},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["unavail",{"_index":1592,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["undefin",{"_index":830,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SimulationComponent.html":{},"interfaces/Tag.html":{},"miscellaneous/functions.html":{}}}],["under",{"_index":1959,"title":{},"body":{"components/TermsComponent.html":{}}}],["unexpect",{"_index":1532,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["unix",{"_index":2196,"title":{},"body":{"injectables/WeatherService.html":{}}}],["unknown",{"_index":633,"title":{},"body":{"injectables/DemandService.html":{}}}],["unknown_error",{"_index":1580,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["updat",{"_index":326,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"components/MapComponent.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"injectables/SimulationService.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{},"index.html":{}}}],["updatechart",{"_index":381,"title":{},"body":{"components/ChartsComponent.html":{}}}],["updatedata",{"_index":382,"title":{},"body":{"components/ChartsComponent.html":{}}}],["updateodpair",{"_index":992,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["updateodpairs(nod",{"_index":1005,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["updateon",{"_index":2238,"title":{},"body":{"components/WizardComponent.html":{}}}],["updateopt",{"_index":383,"title":{},"body":{"components/ChartsComponent.html":{}}}],["updatesimulatedtimeperiod",{"_index":514,"title":{},"body":{"injectables/ClockService.html":{}}}],["updatestatist",{"_index":1723,"title":{},"body":{"injectables/SimulationService.html":{}}}],["updatestep",{"_index":2256,"title":{},"body":{"injectables/WizardService.html":{}}}],["updatestep(data",{"_index":2267,"title":{},"body":{"injectables/WizardService.html":{}}}],["updatetimeperiod",{"_index":1724,"title":{},"body":{"injectables/SimulationService.html":{}}}],["updateweatherdata",{"_index":2148,"title":{},"body":{"injectables/WeatherService.html":{}}}],["updateweatherdata(data",{"_index":2166,"title":{},"body":{"injectables/WeatherService.html":{}}}],["uppercas",{"_index":2114,"title":{},"body":{"components/WeatherComponent.html":{}}}],["upstream",{"_index":1786,"title":{},"body":{"injectables/SimulationService.html":{}}}],["urban",{"_index":41,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["url",{"_index":2174,"title":{},"body":{"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["us",{"_index":45,"title":{},"body":{"components/AboutComponent.html":{},"classes/Edge.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"index.html":{},"license.html":{}}}],["usefactori",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":2054,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["utc",{"_index":2197,"title":{},"body":{"injectables/WeatherService.html":{}}}],["utctim",{"_index":2192,"title":{},"body":{"injectables/WeatherService.html":{}}}],["util",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SimulationComponent.html":{},"injectables/SimulationService.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{}}}],["valid",{"_index":300,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WizardComponent.html":{}}}],["validators.max(uiconfig.rainintensity.max",{"_index":2235,"title":{},"body":{"components/WizardComponent.html":{}}}],["validators.max(uiconfig.snowintensity.max",{"_index":2236,"title":{},"body":{"components/WizardComponent.html":{}}}],["validators.max(uiconfig.visibility.max",{"_index":2232,"title":{},"body":{"components/WizardComponent.html":{}}}],["validators.min(0",{"_index":2231,"title":{},"body":{"components/WizardComponent.html":{}}}],["validators.pattern('^[0",{"_index":2233,"title":{},"body":{"components/WizardComponent.html":{}}}],["validators.requir",{"_index":2230,"title":{},"body":{"components/WizardComponent.html":{}}}],["validators.requiredtru",{"_index":2237,"title":{},"body":{"components/WizardComponent.html":{}}}],["valu",{"_index":33,"title":{},"body":{"components/AboutComponent.html":{},"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"injectables/SimulationService.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.edgeid",{"_index":871,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["valuechang",{"_index":223,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["var",{"_index":73,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["variabl",{"_index":2440,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["varianc",{"_index":744,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["vehicl",{"_index":721,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SimulationComponent.html":{},"injectables/SimulationService.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["veloc",{"_index":689,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["version",{"_index":883,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{}}}],["vertic",{"_index":479,"title":{},"body":{"components/ChartsComponent.html":{}}}],["viewchild",{"_index":2215,"title":{},"body":{"components/WizardComponent.html":{}}}],["viewchild('stepp",{"_index":2225,"title":{},"body":{"components/WizardComponent.html":{}}}],["viewencapsul",{"_index":1292,"title":{},"body":{"components/MapComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["viewencapsulation.non",{"_index":1275,"title":{},"body":{"components/MapComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["visibl",{"_index":2118,"title":{},"body":{"interfaces/WeatherConditions.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":29,"title":{},"body":{"components/AboutComponent.html":{},"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["volum",{"_index":439,"title":{},"body":{"components/ChartsComponent.html":{},"components/NumericComponent.html":{},"injectables/SimulationService.html":{},"miscellaneous/variables.html":{}}}],["voluntarili",{"_index":1446,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["wait",{"_index":1534,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["walk",{"_index":893,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["walk(o",{"_index":905,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["want",{"_index":2004,"title":{},"body":{"components/UiComponent.html":{}}}],["warranti",{"_index":2413,"title":{},"body":{"license.html":{}}}],["way",{"_index":1409,"title":{},"body":{"components/NumericComponent.html":{},"components/PrivacyComponent.html":{}}}],["waynam",{"_index":599,"title":{},"body":{"interfaces/Counts.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{},"injectables/SimulationService.html":{}}}],["waytag",{"_index":1843,"title":{},"body":{"injectables/SimulationService.html":{}}}],["waytag.valu",{"_index":1844,"title":{},"body":{"injectables/SimulationService.html":{}}}],["weather",{"_index":267,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["weather'},{'nam",{"_index":124,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["weather.component.html",{"_index":2074,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.component.scss",{"_index":2073,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.descript",{"_index":2103,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.servic",{"_index":2138,"title":{},"body":{"modules/WeatherModule.html":{}}}],["weather/weather.compon",{"_index":2045,"title":{},"body":{"modules/UiModule.html":{}}}],["weather/weather.modul",{"_index":1382,"title":{},"body":{"modules/NetworkModule.html":{}}}],["weathercompon",{"_index":123,"title":{"components/WeatherComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["weathercondit",{"_index":311,"title":{"interfaces/WeatherConditions.html":{}},"body":{"components/ChangeOfConditionsComponent.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{}}}],["weatherconditions.descript",{"_index":335,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["weatherconditions.icon",{"_index":339,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["weatherconditionscontrol",{"_index":343,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["weatherdescript",{"_index":293,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["weathericon",{"_index":2543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weathermodul",{"_index":1380,"title":{"modules/WeatherModule.html":{}},"body":{"modules/NetworkModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["weatherservic",{"_index":268,"title":{"injectables/WeatherService.html":{}},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/SchedulerService.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"overview.html":{}}}],["web",{"_index":43,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{},"dependencies.html":{},"index.html":{}}}],["whether",{"_index":2426,"title":{},"body":{"license.html":{}}}],["whole",{"_index":1473,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["width",{"_index":2015,"title":{},"body":{"components/UiComponent.html":{}}}],["without",{"_index":2395,"title":{},"body":{"license.html":{}}}],["wizard",{"_index":84,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["wizard.component.html",{"_index":2202,"title":{},"body":{"components/WizardComponent.html":{}}}],["wizard.component.scss",{"_index":2201,"title":{},"body":{"components/WizardComponent.html":{}}}],["wizard.servic",{"_index":302,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WizardComponent.html":{}}}],["wizard/chang",{"_index":2038,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/estim",{"_index":2036,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/scheduler.servic",{"_index":1991,"title":{},"body":{"components/UiComponent.html":{},"modules/UiModule.html":{}}}],["wizard/search",{"_index":2033,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/select",{"_index":2035,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/simulation/simulation.compon",{"_index":2040,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/statistics/statistics.compon",{"_index":2041,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/wizard.compon",{"_index":2032,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/wizard.servic",{"_index":2048,"title":{},"body":{"modules/UiModule.html":{}}}],["wizardact",{"_index":1075,"title":{},"body":{"classes/GoOn.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/WizardState.html":{},"miscellaneous/typealiases.html":{}}}],["wizardactiontyp",{"_index":1063,"title":{},"body":{"classes/GoOn.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{}}}],["wizardactiontypes.goon",{"_index":1061,"title":{},"body":{"classes/GoOn.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["wizardactiontypes.reset",{"_index":1074,"title":{},"body":{"classes/GoOn.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["wizardactiontypes.stepchang",{"_index":1069,"title":{},"body":{"classes/GoOn.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["wizardactiontypes.steperror",{"_index":1071,"title":{},"body":{"classes/GoOn.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["wizardactiontypes.steppend",{"_index":1072,"title":{},"body":{"classes/GoOn.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["wizardcompon",{"_index":125,"title":{"components/WizardComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["wizardform",{"_index":2204,"title":{},"body":{"components/WizardComponent.html":{}}}],["wizardreduc",{"_index":2355,"title":{},"body":{"miscellaneous/functions.html":{}}}],["wizardreducer(st",{"_index":2278,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/functions.html":{}}}],["wizardservic",{"_index":264,"title":{"injectables/WizardService.html":{}},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"modules/UiModule.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"overview.html":{}}}],["wizardst",{"_index":2065,"title":{"interfaces/WizardState.html":{}},"body":{"interfaces/UiState.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["wrap",{"_index":1236,"title":{},"body":{"injectables/LocationService.html":{}}}],["wrappedtext",{"_index":1181,"title":{},"body":{"components/HomeComponent.html":{}}}],["x",{"_index":480,"title":{},"body":{"components/ChartsComponent.html":{},"injectables/DemandService.html":{},"miscellaneous/variables.html":{}}}],["xadjust",{"_index":483,"title":{},"body":{"components/ChartsComponent.html":{}}}],["xax",{"_index":2460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xi",{"_index":2537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["y",{"_index":462,"title":{},"body":{"components/ChartsComponent.html":{},"miscellaneous/variables.html":{}}}],["yadjust",{"_index":475,"title":{},"body":{"components/ChartsComponent.html":{}}}],["yax",{"_index":2465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ye",{"_index":1203,"title":{},"body":{"components/InfoDialogComponent.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{},"miscellaneous/functions.html":{}}}],["z",{"_index":660,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SimulationService.html":{},"interfaces/Tag.html":{}}}],["zero",{"_index":885,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["zindex",{"_index":735,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["zone.j",{"_index":2338,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"components/GoogleMapComponent.html":{},"modules/LocationModule.html":{},"components/MapComponent.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutComponent.html":{"url":"components/AboutComponent.html","title":"component - AboutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AboutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/about/about.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n            \n                styleUrls\n                about.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./about.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentYear\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/about/about.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/about/about.component.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentYear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentYear:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : new Date().getFullYear()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/about/about.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-about',\n    templateUrl: './about.component.html',\n    styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n\n    currentYear: number = new Date().getFullYear();\n\n    constructor() { }\n\n    ngOnInit(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    STRADA\n    An urban traffic web simulator that uses data in real time\n    Copyright&nbsp;©&nbsp;{{ currentYear }} Roberto&nbsp;Simonetti - MIT license\n    Project developed for the dissertation of my bachelor's degree in computer engineering\n    Links\n    \n        \n            \n                Repository:\n                STRADA source code\n            \n        \n        \n            \n                Official documentation:\n                STRADA documentation\n            \n        \n    \n    Built with\n    \n        \n            \n                Angular, TypeScript & Firebase\n            \n        \n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    STRADA    An urban traffic web simulator that uses data in real time    Copyright © {{ currentYear }} Roberto Simonetti - MIT license    Project developed for the dissertation of my bachelor\\'s degree in computer engineering    Links                                        Repository:                STRADA source code                                                        Official documentation:                STRADA documentation                            Built with                                        Angular, TypeScript & Firebase                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent { }\n\n    \n\n    \n        \n\n    \n        \n            \n            \n                STRADA\n            \n\n            \n\n            \n                \n            \n            \n                \n                    About\n                \n            \n        \n    \n\n    \n\n        \n            \n        \n\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    STRADA                                                                                                                About                                                                            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nPrivacyComponent\n\nPrivacyComponent\n\nAppModule -->\n\nPrivacyComponent->AppModule\n\n\n\n\n\nTermsComponent\n\nTermsComponent\n\nAppModule -->\n\nTermsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nDemandModule\n\nDemandModule\n\nAppModule -->\n\nDemandModule->AppModule\n\n\n\n\n\nLocationModule\n\nLocationModule\n\nAppModule -->\n\nLocationModule->AppModule\n\n\n\n\n\nNetworkModule\n\nNetworkModule\n\nAppModule -->\n\nNetworkModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nSimulationModule\n\nSimulationModule\n\nAppModule -->\n\nSimulationModule->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AboutComponent\n                            \n                            \n                                AppComponent\n                            \n                            \n                                HomeComponent\n                            \n                            \n                                PrivacyComponent\n                            \n                            \n                                TermsComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                            \n                                    DemandModule\n                            \n                            \n                                    LocationModule\n                            \n                            \n                                    NetworkModule\n                            \n                            \n                                    SharedModule\n                            \n                            \n                                    SimulationModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule, APP_INITIALIZER } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { StoreModule } from '@ngrx/store';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { SharedModule } from './shared/shared.module';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { AboutComponent } from './about/about.component';\nimport { PrivacyComponent } from './privacy/privacy.component';\nimport { TermsComponent } from './terms/terms.component';\nimport { LocationModule } from './location/location.module';\nimport { NetworkModule } from './network/network.module';\nimport { DemandModule } from './demand/demand.module';\nimport { SimulationModule } from './simulation/simulation.module';\n\nimport { loadScripts } from './utils';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        HomeComponent,\n        AboutComponent,\n        PrivacyComponent,\n        TermsComponent\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        SharedModule.forRoot(),\n        StoreModule.forRoot({}),\n        LocationModule,\n        NetworkModule,\n        DemandModule,\n        SimulationModule\n    ],\n    providers: [\n        {\n            provide: APP_INITIALIZER,\n            useFactory: loadScripts,\n            deps: [],\n            multi: true\n        }\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPreloadingStrategy.html":{"url":"classes/AppPreloadingStrategy.html","title":"class - AppPreloadingStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPreloadingStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app-preloading-strategy.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        PreloadingStrategy\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                preload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            preload\n                            \n                            \n                        \n                    \n                \n                \n                    \npreload(route: Route, load: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app-preloading-strategy.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    Route\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        load\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { PreloadingStrategy, Route } from \"@angular/router\";\nimport { Observable, of } from \"rxjs\";\n\nexport class AppPreloadingStrategy implements PreloadingStrategy {\n\n    preload(route: Route, load: Function): Observable {\n        return route.data && route.data.preload ? load() : of(null);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { AppPreloadingStrategy } from './app-preloading-strategy';\n\nimport { HomeComponent } from './home/home.component';\nimport { AboutComponent } from './about/about.component';\nimport { PrivacyComponent } from './privacy/privacy.component';\nimport { TermsComponent } from './terms/terms.component';\n\n@NgModule({\n    providers: [AppPreloadingStrategy],\n    imports: [\n        RouterModule.forRoot([\n            { path: '', redirectTo: 'home', pathMatch: 'full' },\n            { path: 'home', component: HomeComponent },\n            { path: 'about', component: AboutComponent },\n            {\n                path: 'simulation',\n                loadChildren: './ui/ui.module#UiModule',\n                data: { preload: false }\n            },\n            { path: 'privacy', component: PrivacyComponent },\n            { path: 'terms', component: TermsComponent },\n            { path: '**', redirectTo: 'home' }\n        ], { preloadingStrategy: AppPreloadingStrategy })\n    ],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseComponent.html":{"url":"classes/BaseComponent.html","title":"class - BaseComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/base.component.ts\n        \n\n            \n                Description\n            \n            \n                Abstract class inherited from UI components.\n\n            \n\n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { OnInit, OnDestroy } from \"@angular/core\";\nimport { Subscription } from \"rxjs\";\n\n/**\n * Abstract class inherited from UI components.\n */\nexport abstract class BaseComponent implements OnInit, OnDestroy {\n\n    subscriptions: Subscription[] = [];\n\n    abstract ngOnInit(): void;\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach((subscription: Subscription) => {\n            if (subscription) { subscription.unsubscribe(); }\n        });\n    }\n\n    /**\n     * Subscribes to the form changes.\n     */\n    abstract valueChanges(): void;\n\n    /**\n     * Subscribes to the actions sent by other components.\n     */\n    abstract receiveActions(): void;\n\n    /**\n     * Subscribes to the actions sent to other components.\n     */\n    abstract sendActions(): void;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CanComponentDeactivate.html":{"url":"interfaces/CanComponentDeactivate.html","title":"interface - CanComponentDeactivate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CanComponentDeactivate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/can-deactivate-guard.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        canDeactivate\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canDeactivate\n                                    \n                                \n                                \n                                    \n                                        canDeactivate:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nexport interface CanComponentDeactivate {\n    canDeactivate: () => Observable | Promise | boolean;\n}\n\n@Injectable() export class CanDeactivateGuard implements CanDeactivate {\n    canDeactivate(component: CanComponentDeactivate): boolean | Observable | Promise {\n        return component.canDeactivate ? component.canDeactivate() : true;\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CanDeactivateGuard.html":{"url":"injectables/CanDeactivateGuard.html","title":"injectable - CanDeactivateGuard","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  CanDeactivateGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/can-deactivate-guard.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canDeactivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canDeactivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanDeactivate(component: CanComponentDeactivate)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/can-deactivate-guard.service.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        component\n                                                        \n                                                                    CanComponentDeactivate\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean | Observable | Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nexport interface CanComponentDeactivate {\n    canDeactivate: () => Observable | Promise | boolean;\n}\n\n@Injectable() export class CanDeactivateGuard implements CanDeactivate {\n    canDeactivate(component: CanComponentDeactivate): boolean | Observable | Promise {\n        return component.canDeactivate ? component.canDeactivate() : true;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangeOfConditionsComponent.html":{"url":"components/ChangeOfConditionsComponent.html","title":"component - ChangeOfConditionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChangeOfConditionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-change-of-conditions\n            \n\n            \n                styleUrls\n                change-of-conditions.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./change-of-conditions.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                descriptions\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildOdPair\n                            \n                            \n                                getVisibility\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                toggleValue\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, wizard: WizardService, network: NetworkService, weather: WeatherService, demand: DemandService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        weather\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        demand\n                                                  \n                                                        \n                                                                    DemandService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:28\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buildOdPair\n                            \n                            \n                        \n                    \n                \n                \n                    \nbuildOdPair(odPair: OdPair, demand: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:119\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        odPair\n                                                        \n                                                                    OdPair\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        demand\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FormGroup\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getVisibility\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetVisibility(pair: AbstractControl)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:115\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pair\n                                                        \n                                                                    AbstractControl\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:104\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleValue\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleValue(pair: AbstractControl)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:108\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pair\n                                                        \n                                                                    AbstractControl\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            descriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        descriptions:     WeatherDescription[]\n\n                    \n                \n                    \n                        \n                            Type :     WeatherDescription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        odPairs\n                    \n                \n\n                \n                    \n                        getodPairs()\n                    \n                \n                            \n                                \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:32\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, FormArray, AbstractControl, Validators } from '@angular/forms';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { WizardService } from '../wizard.service';\nimport { NetworkService } from '../../../network/network.service';\nimport { WeatherService } from '../../../network/weather/weather.service';\nimport { DemandService } from '../../../demand/demand.service';\nimport * as fromUi from '../../models/reducers';\nimport { Step } from '../../models/ui-state';\nimport { WeatherDescription, WeatherConditions } from '../../../network/weather/weather';\nimport { OdPair } from '../../../network/graph';\nimport { EnumValues } from '../../utils';\nimport { uiConfig } from '../../ui-config';\n\nimport { BaseComponent } from '../../models/base.component';\n\n@Component({\n    selector: 'wizard-change-of-conditions',\n    templateUrl: './change-of-conditions.component.html',\n    styleUrls: ['./change-of-conditions.component.scss']\n})\nexport class ChangeOfConditionsComponent extends BaseComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    descriptions: WeatherDescription[] = [];\n\n    get odPairs(): FormArray {\n        return this.formGroup.get('odPairs') as FormArray;\n    }\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private store: Store,\n        private wizard: WizardService,\n        private network: NetworkService,\n        private weather: WeatherService,\n        private demand: DemandService\n    ) {\n        super();\n\n        this.descriptions = EnumValues.getValues(WeatherDescription);\n    }\n\n    ngOnInit(): void {\n        this.valueChanges();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        // Updates demand service data on value changes.\n        this.subscriptions.push(this.formGroup.get('odPairs').valueChanges.subscribe(\n            (odPairs: any[]) => {\n                const demand = odPairs.map((pair: any) => {\n                    return pair.demand;\n                });\n                this.demand.changeDemand(demand);\n            }\n        ));\n        // Updates weather service data on value changes.\n        this.subscriptions.push(this.formGroup.get('weatherConditions').valueChanges.subscribe(\n            (weatherConditions: WeatherConditions) => {\n                const index = this.descriptions.findIndex(description => description == weatherConditions.description);\n                if (index != -1) {\n                    const icon = uiConfig.weatherIcons[index];\n                    weatherConditions.icon = icon;\n                }\n                this.weather.changeWeather(weatherConditions);\n            }\n        ));\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.currentStep)).subscribe((currentStep: number) => {\n            const odPairsControl = this.formGroup.get('odPairs') as FormArray;\n            const weatherConditionsControl = this.formGroup.get('weatherConditions');\n            switch (currentStep) {\n                case 0:\n                    // Resets control.\n                    if (odPairsControl.length > 0) {\n                        for (let i = odPairsControl.length - 1; i >= 0; i--) {\n                            odPairsControl.removeAt(i);\n                        }\n                    }\n                    break;\n                case this.index:\n                    const odPairs = this.network.getOdPairs();\n                    const demand = this.demand.getOdMatrix();\n                    for (let i = 0; i \n    \n\n    \n        \n    \n        \n            \n                \n                    O\n                    D\n                    Path\n                    Demand\n                    \n                \n                \n                    \n                        {{ pair.value.origin }}\n                    \n                    \n                        {{ pair.value.destination }}\n                    \n                    \n                        {{ pair.value.pathType }}\n                    \n                    \n                        \n                            \n                            \n                                Invalid value\n                            \n                        \n                    \n                    \n                        \n                            {{ getVisibility(pair) }}\n                        \n                    \n                \n            \n        \n        \n        \n            \n                \n                    \n                        {{ description }}\n                    \n                \n            \n            \n                \n                m\n                \n                    Invalid value\n                \n            \n            \n                \n                mm\n                \n                    Invalid value\n                \n            \n            \n                \n                mm\n                \n                    Invalid value\n                \n            \n        \n    \n\n    \n        Continue\n            navigate_next\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            O                    D                    Path                    Demand                                                                                                {{ pair.value.origin }}                                                                {{ pair.value.destination }}                                                                {{ pair.value.pathType }}                                                                                                                                                        Invalid value                                                                                                                                                {{ getVisibility(pair) }}                                                                                                                                                                        {{ description }}                                                                                            m                                    Invalid value                                                                        mm                                    Invalid value                                                                        mm                                    Invalid value                                                    Continue            navigate_next            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChangeOfConditionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChartsComponent.html":{"url":"components/ChartsComponent.html","title":"component - ChartsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChartsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/charts/charts.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ui-charts\n            \n\n            \n                styleUrls\n                charts.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./charts.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                busiestChart\n                            \n                            \n                                busiestCtx\n                            \n                            \n                                heavyTrafficChart\n                            \n                            \n                                heavyTrafficCtx\n                            \n                            \n                                moderateTrafficChart\n                            \n                            \n                                moderateTrafficCtx\n                            \n                            \n                                statistics\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createCharts\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                populateCharts\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                updateCharts\n                            \n                            \n                                updateData\n                            \n                            \n                                updateOptions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, store: Store, simulation: SimulationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/charts/charts.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        simulation\n                                                  \n                                                        \n                                                                    SimulationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createCharts\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateCharts()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:82\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            populateCharts\n                            \n                            \n                        \n                    \n                \n                \n                    \npopulateCharts()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:131\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateCharts\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateCharts()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:186\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateData\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:180\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateOptions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:137\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            busiestChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        busiestChart:     Chart\n\n                    \n                \n                    \n                        \n                            Type :     Chart\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            busiestCtx\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        busiestCtx:     HTMLCanvasElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLCanvasElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heavyTrafficChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heavyTrafficChart:     Chart\n\n                    \n                \n                    \n                        \n                            Type :     Chart\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heavyTrafficCtx\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heavyTrafficCtx:     HTMLCanvasElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLCanvasElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moderateTrafficChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        moderateTrafficChart:     Chart\n\n                    \n                \n                    \n                        \n                            Type :     Chart\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moderateTrafficCtx\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        moderateTrafficCtx:     HTMLCanvasElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLCanvasElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            statistics\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        statistics:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, OnDestroy, ElementRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { Store, select } from '@ngrx/store';\nimport { Chart } from 'chart.js';\n\nimport { SimulationService } from '../../simulation/simulation.service';\nimport * as fromUi from '../models/reducers';\nimport { formatTimeFromSeconds } from '../utils';\nimport { trafficChartOptions, busiestChartOptions, busiestColor } from './charts-config';\nimport { uiConfig } from '../ui-config';\n\nimport { BaseComponent } from '../models/base.component';\n\n@Component({\n    selector: 'ui-charts',\n    templateUrl: './charts.component.html',\n    styleUrls: ['./charts.component.scss']\n})\nexport class ChartsComponent extends BaseComponent implements OnInit, AfterViewInit, OnDestroy {\n\n    heavyTrafficCtx: HTMLCanvasElement;\n\n    moderateTrafficCtx: HTMLCanvasElement;\n\n    busiestCtx: HTMLCanvasElement;\n\n    heavyTrafficChart: Chart;\n\n    moderateTrafficChart: Chart;\n\n    busiestChart: Chart;\n\n    statistics: any;\n\n    constructor(\n        private elementRef: ElementRef,\n        private store: Store,\n        private simulation: SimulationService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        //\n    }\n\n    ngAfterViewInit(): void {\n        this.createCharts();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach((subscription: Subscription) => {\n            if (subscription) { subscription.unsubscribe(); }\n        });\n        if (this.heavyTrafficChart) { this.heavyTrafficChart.destroy(); }\n        if (this.moderateTrafficChart) { this.moderateTrafficChart.destroy(); }\n        if (this.busiestChart) { this.busiestChart.destroy(); }\n    }\n\n    valueChanges(): void {\n        //\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.currentStep)).subscribe((currentStep: number) => {\n            switch (currentStep) {\n                case 5:\n                    this.statistics = this.simulation.getStatistics();\n                    this.populateCharts();\n                    break;\n            }\n        }));\n    }\n\n    sendActions(): void {\n        //\n    }\n\n    createCharts(): void {\n        this.heavyTrafficCtx = this.elementRef.nativeElement.querySelector('#heavyTrafficChart');\n        this.moderateTrafficCtx = this.elementRef.nativeElement.querySelector('#moderateTrafficChart');\n        this.busiestCtx = this.elementRef.nativeElement.querySelector('#busiestChart');\n\n        this.heavyTrafficChart = new Chart(this.heavyTrafficCtx, {\n            type: 'horizontalBar',\n            data: {\n                labels: [],\n                datasets: [\n                    {\n                        data: [],\n                        hoverBackgroundColor: uiConfig.links.heavyTrafficColor\n                    }\n                ]\n            },\n            options: trafficChartOptions\n        });\n        this.moderateTrafficChart = new Chart(this.moderateTrafficCtx, {\n            type: 'horizontalBar',\n            data: {\n                labels: [],\n                datasets: [\n                    {\n                        data: [],\n                        hoverBackgroundColor: uiConfig.links.moderateTrafficColor\n                    }\n                ]\n            },\n            options: trafficChartOptions\n        });\n        this.busiestChart = new Chart(this.busiestCtx, {\n            type: 'line',\n            data: {\n                labels: [],\n                datasets: [\n                    {\n                        label: 'Traffic volume',\n                        steppedLine: true,\n                        data: [],\n                        borderColor: busiestColor,\n                        fill: false\n                    }\n                ]\n            },\n            options: busiestChartOptions\n        });\n    }\n\n    populateCharts(): void {\n        this.updateOptions();\n        this.updateData();\n        this.updateCharts();\n    }\n\n    updateOptions(): void {\n        this.heavyTrafficChart.options.title.text = 'Heavy traffic';\n        this.heavyTrafficChart.data.labels = this.statistics.heavyTrafficLabels;\n        this.moderateTrafficChart.options.title.text = 'Moderate traffic';\n        this.moderateTrafficChart.data.labels = this.statistics.moderateTrafficLabels;\n        this.busiestChart.options.title.text = 'Busiest edge ' + this.statistics.busiestEdgeLabel;\n        this.busiestChart.options.annotation.annotations.push({\n            type: 'line',\n            mode: 'horizontal',\n            scaleID: \"y-axis-0\",\n            value: this.statistics.busiestEdgeCapacity,\n            borderColor: '#666',\n            borderWidth: 2,\n            label: {\n                backgroundColor: 'rgba(255,255,255,1.0)',\n                fontStyle: \"normal\",\n                fontColor: \"#666\",\n                position: \"right\",\n                yAdjust: 0,\n                content: \"Capacity\",\n                enabled: true\n            }\n        });\n        this.busiestChart.options.annotation.annotations.push({\n            type: 'line',\n            mode: 'vertical',\n            scaleID: \"x-axis-0\",\n            value: formatTimeFromSeconds(this.statistics.busiestEdgeDelay),\n            borderColor: '#666',\n            borderWidth: 2,\n            label: {\n                backgroundColor: 'rgba(255,255,255,1.0)',\n                fontStyle: \"normal\",\n                fontColor: \"#666\",\n                position: \"center\",\n                xAdjust: 0,\n                content: \"Delay\",\n                enabled: true\n            }\n        });\n        this.busiestChart.data.labels = this.statistics.periods.map((value: number) => formatTimeFromSeconds(value));\n    }\n\n    updateData(): void {\n        this.heavyTrafficChart.data.datasets[0].data = this.statistics.heavyTrafficData;\n        this.moderateTrafficChart.data.datasets[0].data = this.statistics.moderateTrafficData;\n        this.busiestChart.data.datasets[0].data = this.statistics.busiestEdgeData;\n    }\n\n    updateCharts(): void {\n        this.heavyTrafficChart.update();\n        this.moderateTrafficChart.update();\n        this.busiestChart.update();\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        \n    \n\n\n    \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChartsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClockService.html":{"url":"injectables/ClockService.html","title":"injectable - ClockService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ClockService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/clock.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                endSimulation\n                            \n                            \n                                    Private\n                                interval\n                            \n                            \n                                    Private\n                                processingTime\n                            \n                            \n                                    Private\n                                simulatedTimeInterval\n                            \n                            \n                                    Private\n                                simulatedTimePeriod\n                            \n                            \n                                    Private\n                                subscription\n                            \n                            \n                                    Private\n                                totalProcessingTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                execute\n                            \n                            \n                                    Public\n                                getStatistics\n                            \n                            \n                                    Private\n                                pause\n                            \n                            \n                                    Public\n                                pressControl\n                            \n                            \n                                    Private\n                                quick\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Private\n                                slow\n                            \n                            \n                                    Private\n                                start\n                            \n                            \n                                    Private\n                                step\n                            \n                            \n                                    Private\n                                stop\n                            \n                            \n                                    Private\n                                updateSimulatedTimePeriod\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, simulation: SimulationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/simulation/clock.service.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        simulation\n                                                  \n                                                        \n                                                                    SimulationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            execute\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        execute()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:180\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getStatistics\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getStatistics()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:93\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pause\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        pause()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:115\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pressControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        pressControl(control: Control)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        control\n                                                        \n                                                                    Control\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            quick\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        quick()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:163\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            slow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        slow()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:148\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            start\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        start()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:103\n                            \n                        \n\n\n                \n                    \n                            Starts simulation.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            step\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        step()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:141\n                            \n                        \n\n\n                \n                    \n                            Performs one step.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stop\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        stop()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:121\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateSimulatedTimePeriod\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateSimulatedTimePeriod()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:195\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            endSimulation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        endSimulation:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            interval\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        interval:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:36\n                            \n                        \n\n                \n                    \n                        Simulation timer.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            processingTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        processingTime:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:41\n                            \n                        \n\n                \n                    \n                        PropagateFlow processing time (ms).\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            simulatedTimeInterval\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        simulatedTimeInterval:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:31\n                            \n                        \n\n                \n                    \n                        Simulated time interval.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            simulatedTimePeriod\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        simulatedTimePeriod:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:26\n                            \n                        \n\n                \n                    \n                        Simulated running time.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            totalProcessingTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        totalProcessingTime:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:43\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Observable, interval, Subscription } from \"rxjs\";\nimport { takeWhile } from \"rxjs/operators\";\n\nimport { Store, select } from '@ngrx/store';\n\nimport { SimulationService } from \"./simulation.service\";\nimport * as fromSimulation from './models/reducers';\nimport { SimulationActionTypes } from './models/actions/simulation.actions';\nimport { uiConfig } from \"../ui/ui-config\";\n\nexport enum Control {\n    start = 'start',\n    pause = 'pause',\n    stop = 'stop',\n    step = 'step',\n    slow = 'slow',\n    quick = 'quick'\n}\n\n@Injectable() export class ClockService {\n\n    /**\n     * Simulated running time.\n     */\n    private simulatedTimePeriod: number;\n\n    /**\n     * Simulated time interval.\n     */\n    private simulatedTimeInterval: number;\n\n    /**\n     * Simulation timer.\n     */\n    private interval: Observable;\n\n    /**\n     * PropagateFlow processing time (ms).\n     */\n    private processingTime: number = 0;\n\n    private totalProcessingTime: number = 0;\n\n    private endSimulation: boolean = false;\n\n    private subscription: Subscription;\n\n    constructor(\n        private store: Store,\n        private simulation: SimulationService\n    ) {\n        this.store.pipe(select(fromSimulation.end)).subscribe((end: boolean) => {\n            this.endSimulation = end;\n        });\n        this.simulatedTimePeriod = 0;\n        this.simulatedTimeInterval = uiConfig.simulatedTimeInterval;\n    }\n\n    public reset(): void {\n        this.simulatedTimePeriod = 0;\n        this.simulatedTimeInterval = uiConfig.simulatedTimeInterval;\n        this.interval = null;\n        this.processingTime = 0;\n        this.totalProcessingTime = 0;\n        this.endSimulation = false;\n        this.subscription = null;\n    }\n\n    public pressControl(control: Control): void {\n        switch (control) {\n            case Control.start:\n                this.start();\n                break;\n            case Control.pause:\n                this.pause();\n                break;\n            case Control.stop:\n                this.stop();\n                break;\n            case Control.step:\n                this.step();\n                break;\n            case Control.slow:\n                this.slow();\n                break;\n            case Control.quick:\n                this.quick();\n                break;\n        }\n    }\n\n    public getStatistics(): any {\n        return {\n            totalSimulatedTime: this.simulatedTimePeriod,\n            totalProcessingTime: this.totalProcessingTime\n        };\n    }\n\n    /**\n     * Starts simulation.\n     */\n    private start(): void {\n        if (!this.subscription || this.subscription.closed) {\n            // Sets interval.\n            this.interval = interval(this.simulatedTimeInterval);\n            this.subscription = this.interval.pipe(\n                takeWhile(() => !this.endSimulation)\n            ).subscribe(() => {\n                this.execute();\n            });\n        }\n    }\n\n    private pause(): void {\n        if (this.subscription && !this.subscription.closed) {\n            this.subscription.unsubscribe();\n        }\n    }\n\n    private stop(): void {\n        if (this.subscription && !this.subscription.closed) {\n            this.subscription.unsubscribe();\n        }\n        this.simulation.resetFlows();\n        this.reset();\n        // Updates simulation state.\n        this.store.dispatch({\n            type: SimulationActionTypes.PeriodsChanged,\n            payload: { simulatedTimeInterval: this.simulatedTimeInterval, simulatedTimePeriod: this.simulatedTimePeriod }\n        });\n        this.store.dispatch({\n            type: SimulationActionTypes.SimulationEnded,\n            payload: false\n        });\n    }\n\n    /**\n     * Performs one step.\n     */\n    private step(): void {\n        if (this.subscription && !this.subscription.closed) {\n            this.subscription.unsubscribe();\n        }\n        this.execute();\n    }\n\n    private slow(): void {\n        if (this.subscription && !this.subscription.closed) {\n            this.subscription.unsubscribe();\n            this.simulatedTimeInterval += uiConfig.timeIntervalIncrement;\n            this.start();\n        } else {\n            this.simulatedTimeInterval += uiConfig.timeIntervalIncrement;\n        }\n        // Updates simulation state.\n        this.store.dispatch({\n            type: SimulationActionTypes.PeriodsChanged,\n            payload: { simulatedTimeInterval: this.simulatedTimeInterval, simulatedTimePeriod: this.simulatedTimePeriod }\n        });\n    }\n\n    private quick(): void {\n        if (this.simulatedTimeInterval - uiConfig.timeIntervalDecrement > this.processingTime) {\n            if (this.subscription && !this.subscription.closed) {\n                this.subscription.unsubscribe();\n                this.simulatedTimeInterval -= uiConfig.timeIntervalDecrement;\n                this.start();\n            } else {\n                this.simulatedTimeInterval -= uiConfig.timeIntervalDecrement;\n            }\n            // Updates simulation state.\n            this.store.dispatch({\n                type: SimulationActionTypes.PeriodsChanged,\n                payload: { simulatedTimeInterval: this.simulatedTimeInterval, simulatedTimePeriod: this.simulatedTimePeriod }\n            });\n        }\n    }\n\n    private execute(): void {\n        const startTime = Date.now();\n        this.simulation.propagateFlows();\n        const endTime = Date.now();\n        // Updates processing time.\n        this.processingTime = endTime - startTime;\n        this.totalProcessingTime += this.processingTime;\n        this.updateSimulatedTimePeriod();\n        // Updates simulation state.\n        this.store.dispatch({\n            type: SimulationActionTypes.PeriodsChanged,\n            payload: { simulatedTimeInterval: this.simulatedTimeInterval, simulatedTimePeriod: this.simulatedTimePeriod }\n        });\n    }\n\n    private updateSimulatedTimePeriod(): void {\n        this.simulatedTimePeriod += this.simulatedTimeInterval;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Counts.html":{"url":"interfaces/Counts.html","title":"interface - Counts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Counts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/models/simulation-state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        arrivedVehicles\n                                \n                                \n                                        startedVehicles\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        arrivedVehicles\n                                    \n                                \n                                \n                                    \n                                        arrivedVehicles:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startedVehicles\n                                    \n                                \n                                \n                                    \n                                        startedVehicles:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface NumericalSimulation {\n\n    edge: string;\n    wayName: string;\n    trafficVolume: number;\n    trafficCount: number;\n    delay: number | string;\n    stops: number;\n\n}\n\nexport interface Counts {\n\n    startedVehicles: number;\n    arrivedVehicles: number;\n\n}\n\nexport interface Simulation {\n\n    /**\n     * Simulation data.\n     */\n    data: NumericalSimulation[];\n    /**\n     * Simulation counts.\n     */\n    counts: Counts;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DemandModule.html":{"url":"modules/DemandModule.html","title":"module - DemandModule","body":"\n                   \n\n\n\n\n  Modules\n  DemandModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DemandModule\n\n\n\ncluster_DemandModule_providers\n\n\n\n\nDemandService\n\nDemandService\n\n\n\nDemandModule\n\nDemandModule\n\nDemandModule -->\n\nDemandService->DemandModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/demand/demand.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     DemandService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { DemandService } from './demand.service';\n\n@NgModule({\n    imports: [],\n    declarations: [],\n    providers: [DemandService]\n})\nexport class DemandModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DemandService.html":{"url":"injectables/DemandService.html","title":"injectable - DemandService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  DemandService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/demand/demand.service.ts\n        \n\n            \n                Description\n            \n            \n                Estimates the O/D matrix of the traffic demand.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                odMatrix\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                argmin\n                            \n                            \n                                    Public\n                                calcOdMatrix\n                            \n                            \n                                    Public\n                                changeDemand\n                            \n                            \n                                    Private\n                                estimate\n                            \n                            \n                                    Public\n                                getOdMatrix\n                            \n                            \n                                    Public\n                                gls\n                            \n                            \n                                    Private\n                                isOnPath\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Private\n                                sum\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(network: NetworkService)\n                    \n                \n                        \n                            \n                                Defined in src/app/demand/demand.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            argmin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        argmin(linkFlows: LinkFlow[], odMatrixAssignment: number[][])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:68\n                            \n                        \n\n\n                \n                    \n                            Argument of the minimum function.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        linkFlows\n                                                        \n                                                                    LinkFlow[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The link flows\n\n                                                        \n                                                \n                                                \n                                                        odMatrixAssignment\n                                                        \n                                                                    number[][]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Assignment matrix of the O/D pair\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            calcOdMatrix\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        calcOdMatrix()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:28\n                            \n                        \n\n\n                \n                    \n                            Calculates O/D matrix.\n\n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            changeDemand\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        changeDemand(demand: number[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        demand\n                                                        \n                                                                    number[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            estimate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        estimate(linkFlows: LinkFlow[], odMatrixAssignment: number[][], x: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:87\n                            \n                        \n\n\n                \n                    \n                            Estimates the sum for the unknown demand.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        linkFlows\n                                                        \n                                                                    LinkFlow[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The link flows\n\n                                                        \n                                                \n                                                \n                                                        odMatrixAssignment\n                                                        \n                                                                    number[][]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Assignment matrix of the O/D pair\n\n                                                        \n                                                \n                                                \n                                                        x\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The unknown demand\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getOdMatrix\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getOdMatrix()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     number[]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gls\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        gls(linkFlows: LinkFlow[], assignmentMatrix: [][][])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:54\n                            \n                        \n\n\n                \n                    \n                            Generalized Least Squares (GLS).\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        linkFlows\n                                                        \n                                                                    LinkFlow[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The link flows\n\n                                                        \n                                                \n                                                \n                                                        assignmentMatrix\n                                                        \n                                                                    [][][]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Assignment matrix [pairs,paths,edges]\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number[]\n\n                            \n                                \n                                    The array of the demand\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isOnPath\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isOnPath(odMatrixAssignment: number[][], i: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:119\n                            \n                        \n\n\n                \n                    \n                            Checks that the edge belongs to one of the paths of the O/D pair.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        odMatrixAssignment\n                                                        \n                                                                    number[][]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Assignment matrix of the O/D pair\n\n                                                        \n                                                \n                                                \n                                                        i\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The index of the edge\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sum\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sum(odMatrixAssignment: number[][], i: number, x: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:104\n                            \n                        \n\n\n                \n                    \n                            Sums the unknown demand probability for each path.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        odMatrixAssignment\n                                                        \n                                                                    number[][]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Assignment matrix of the O/D pair\n\n                                                        \n                                                \n                                                \n                                                        i\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The index of the edge\n\n                                                        \n                                                \n                                                \n                                                        x\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The unknown demand\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            odMatrix\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        odMatrix:     number[]\n\n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:17\n                            \n                        \n\n                \n                    \n                        The array of the demand.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\nimport { NetworkService } from '../network/network.service';\nimport { LinkFlow } from '../network/graph';\nimport { round } from '../utils';\nimport { uiConfig } from '../ui/ui-config';\n\n/**\n * Estimates the O/D matrix of the traffic demand.\n */\n@Injectable() export class DemandService {\n\n    /**\n     * The array of the demand.\n     */\n    private odMatrix: number[] = [];\n\n    constructor(private network: NetworkService) { }\n\n    public reset(): void {\n        this.odMatrix = [];\n    }\n\n    /**\n     * Calculates O/D matrix.\n     */\n    public calcOdMatrix(): Observable {\n        // Gets link flows from network.\n        const linkFlows = this.network.getLinkFlows();\n        // Gets assignment matrix from network.\n        const assignmentMatrix = this.network.getAssignmentMatrix();\n        // Calculates demand.\n        this.odMatrix = this.gls(linkFlows, assignmentMatrix);\n        return of(null);\n    }\n\n    public getOdMatrix(): number[] {\n        return this.odMatrix;\n    }\n\n    public changeDemand(demand: number[]): void {\n        if (demand.length > 0) {\n            this.odMatrix = demand;\n        }\n    }\n\n    /**\n     * Generalized Least Squares (GLS).\n     * @param linkFlows The link flows\n     * @param assignmentMatrix Assignment matrix [pairs,paths,edges]\n     * @returns The array of the demand\n     */\n    public gls(linkFlows: LinkFlow[], assignmentMatrix: number[][][]): number[] {\n        const demand: number[] = [];\n        // Calculates argument of the minimum for each O/D pair.\n        for (let z = 0; z  0 ? this.argmin(linkFlows, assignmentMatrix[z]) : null;\n        }\n        return demand;\n    }\n\n    /**\n     * Argument of the minimum function.\n     * @param linkFlows The link flows\n     * @param odMatrixAssignment Assignment matrix of the O/D pair\n     */\n    private argmin(linkFlows: LinkFlow[], odMatrixAssignment: number[][]): number {\n        const estimations: number[] = [];\n        // The unknown demand.\n        let x = 0;\n        estimations[x] = this.estimate(linkFlows, odMatrixAssignment, x);\n        if (estimations[x] == 0) { return 0; }\n        do {\n            x++;\n            estimations[x] = this.estimate(linkFlows, odMatrixAssignment, x);\n        } while (estimations[x]  0 && this.isOnPath(odMatrixAssignment, i)) {\n                const base = linkFlows[i].value - this.sum(odMatrixAssignment, i, x);\n                sum += Math.pow(base, 2) / linkFlows[i].variance;\n            }\n        }\n        return round(sum, 2);\n    }\n\n    /**\n     * Sums the unknown demand probability for each path.\n     * @param odMatrixAssignment Assignment matrix of the O/D pair\n     * @param i The index of the edge\n     * @param x The unknown demand\n     */\n    private sum(odMatrixAssignment: number[][], i: number, x: number): number {\n        let sum = 0;\n        for (let n = 0; n  0) {\n                sum += odMatrixAssignment[n][i] * x;\n            }\n        }\n        return round(sum, 2);\n    }\n\n    /**\n     * Checks that the edge belongs to one of the paths of the O/D pair.\n     * @param odMatrixAssignment Assignment matrix of the O/D pair\n     * @param i The index of the edge\n     */\n    private isOnPath(odMatrixAssignment: number[][], i: number): boolean {\n        for (let n = 0; n  0) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Edge.html":{"url":"classes/Edge.html","title":"class - Edge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Edge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                Link between two nodes.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                density\n                            \n                            \n                                    Public\n                                destination\n                            \n                            \n                                    Public\n                                distance\n                            \n                            \n                                    Public\n                                drawingOptions\n                            \n                            \n                                    Public\n                                duration\n                            \n                            \n                                    Public\n                                durationInTraffic\n                            \n                            \n                                    Public\n                                edgeId\n                            \n                            \n                                    Public\n                                flow\n                            \n                            \n                                    Public\n                                freeFlowVelocity\n                            \n                            \n                                    Public\n                                label\n                            \n                            \n                                    Public\n                                linkFlow\n                            \n                            \n                                    Public\n                                maxFlow\n                            \n                            \n                                    Public\n                                origin\n                            \n                            \n                                    Public\n                                tags\n                            \n                            \n                                    Public\n                                velocity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                calcLinkFlow\n                            \n                            \n                                    Public\n                                calcMaxFlow\n                            \n                            \n                                    Protected\n                                draw\n                            \n                            \n                                    Protected\n                                getCapacity\n                            \n                            \n                                    Protected\n                                getKjam\n                            \n                            \n                                    Public\n                                getVariance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(edgeId: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/graph.ts:151\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edgeId\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            density\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        density:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:132\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            destination\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        destination:     Node\n\n                    \n                \n                    \n                        \n                            Type :     Node\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:103\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            distance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        distance:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:110\n                            \n                        \n\n                \n                    \n                        Indicates the distance in meters.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            drawingOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        drawingOptions:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:146\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            duration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        duration:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:115\n                            \n                        \n\n                \n                    \n                        Indicates the duration in seconds.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            durationInTraffic\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        durationInTraffic:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:120\n                            \n                        \n\n                \n                    \n                        Indicates the total duration of the edge, taking into account current traffic conditions.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            edgeId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        edgeId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:97\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            flow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        flow:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:134\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            freeFlowVelocity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        freeFlowVelocity:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:125\n                            \n                        \n\n                \n                    \n                        Free flow speed (m/s).\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            label\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        label:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:99\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            linkFlow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        linkFlow:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:139\n                            \n                        \n\n                \n                    \n                        Number of vehicles calculated from traffic data.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            maxFlow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maxFlow:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:144\n                            \n                        \n\n                \n                    \n                        Maximum flow of the link.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            origin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        origin:     Node\n\n                    \n                \n                    \n                        \n                            Type :     Node\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:101\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tags:     Tag[]\n\n                    \n                \n                    \n                        \n                            Type :     Tag[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:105\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            velocity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        velocity:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:130\n                            \n                        \n\n                \n                    \n                        Instant speed (m/s).\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            calcLinkFlow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        calcLinkFlow()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:160\n                            \n                        \n\n\n                \n                    \n                            Calculates the value of the link flow.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            calcMaxFlow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        calcMaxFlow(factor: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:191\n                            \n                        \n\n\n                \n                    \n                            Calculates the max flow of the edge.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        factor\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Weather Adjustment Factor\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            draw\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        draw(color: string, zIndex: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:211\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        color\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        zIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                10\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            getCapacity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getCapacity(timeInterval: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:207\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timeInterval\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            getKjam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getKjam()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:203\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getVariance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getVariance()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:199\n                            \n                        \n\n\n                \n                    \n                            Gets the variance of measurement error of link flow.\n\n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\n\nimport * as combine from 'mout/array/combine';\n\nimport { Heap, Path } from './k-shortest-path';\nimport { round } from '../utils';\nimport { environment } from '../../environments/environment';\nimport { uiConfig } from '../ui/ui-config';\n\nexport enum PathType {\n    distance = 'distance',\n    duration = 'duration'\n}\n\n/**\n * An O/D pair is described by the origin and destination nodes, and the type of path.\n */\nexport interface OdPair {\n\n    origin: string;\n    destination: string;\n    pathType: PathType;\n\n}\n\nexport interface LinkFlow {\n\n    /**\n     * linkFlow attribute.\n     */\n    value: number;\n    /**\n     * Variance is the inverse of density.\n     */\n    variance: number;\n\n}\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public label: string;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    public drawingOptions: { marker?: google.maps.Marker } = {};\n\n    /**\n     * Used by the k shortest path routing.\n     */\n    public count: number = 0;\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public label: string;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    /**\n     * Free flow speed (m/s).\n     */\n    public freeFlowVelocity: number;\n\n    /**\n     * Instant speed (m/s).\n     */\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    /**\n     * Number of vehicles calculated from traffic data.\n     */\n    public linkFlow: number;\n\n    /**\n     * Maximum flow of the link.\n     */\n    public maxFlow: number;\n\n    public drawingOptions: {\n        path?: google.maps.LatLng[],\n        polyline?: google.maps.Polyline,\n        marker?: google.maps.Marker,\n        infowindow?: google.maps.InfoWindow\n    } = {};\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the link flow.\n     */\n    public calcLinkFlow(): void {\n        // Min distance is 1 meter.\n        if (this.distance == 0) { this.distance = 1; }\n        // Min duration is 1 second.\n        if (this.duration == 0) {\n            this.duration = round(this.distance / (50 / 3.6)) > 1 ? round(this.distance / (50 / 3.6)) : 1;\n        }\n        // Calculates free flow velocity (m/s).\n        this.freeFlowVelocity = round(this.distance / this.duration, 2);\n        // Calculates link flow.\n        if (this.durationInTraffic > 0 && this.durationInTraffic >= this.duration) {\n            // Calculates velocity (m/s).\n            this.velocity = round(this.distance / this.durationInTraffic, 2);\n            // Calculates density.\n            this.density = round(this.getKjam() * (this.freeFlowVelocity - this.velocity) / this.freeFlowVelocity, 2);\n            // Calculates flow.\n            this.flow = round(this.density * this.velocity, 2);\n            // Calculates link flow.\n            this.linkFlow = round(this.density * this.distance);\n        } else {\n            this.velocity = 0;\n            this.density = 0;\n            this.flow = 0;\n            this.linkFlow = 0;\n        }\n    }\n\n    /**\n     * Calculates the max flow of the edge.\n     * @param factor Weather Adjustment Factor\n     */\n    public calcMaxFlow(factor: number): void {\n        const maxFlow = this.getKjam() * this.freeFlowVelocity;\n        this.maxFlow = round(maxFlow * factor, 2);\n    }\n\n    /**\n     * Gets the variance of measurement error of link flow.\n     */\n    public getVariance(): number {\n        return this.density > 0 ? round(1 / this.density, 2) : 1;\n    }\n\n    protected getKjam(): number {\n        return round(1 / uiConfig.sp, 2);\n    }\n\n    protected getCapacity(timeInterval: number): number {\n        return this.maxFlow * timeInterval;\n    }\n\n    protected draw(color: string, zIndex: number = 10): void {\n        this.drawingOptions.polyline.set('strokeColor', color);\n        this.drawingOptions.polyline.set('zIndex', zIndex);\n        this.drawingOptions.marker.set('visible', true);\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    protected nodes: Node[] = [];\n\n    protected edges: Edge[] = [];\n\n    protected relations: Relation[] = [];\n\n    /**\n     * Paths for each O/D pair [pairs,paths,edges].\n     */\n    protected shortestPaths: Edge[][][] = [];\n\n    protected incidenceMatrix: boolean[][][] = [];\n\n    protected assignmentMatrix: number[][][] = [];\n\n    private heap: Heap;\n\n    /**\n     * Shortest paths drawing options.\n     */\n    private drawingOptions: {\n        polylines?: google.maps.Polyline[][];\n    } = {};\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public getEdge(edgeId: number): Edge {\n        return this.edges.find((edge: Edge) => edge.edgeId == edgeId);\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Key:oneway\n     * @param edgeId Id of the edge\n     */\n    public isOneway(edgeId: number): boolean {\n        return !!this.getEdge(edgeId).tags.find(tag => tag.key == 'oneway' && tag.value != 'no') ||\n            this.isRoundabout(edgeId);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Tag:junction%3Droundabout\n     * @param edgeId Id of the edge\n     */\n    public isRoundabout(edgeId: number): boolean {\n        return this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'roundabout') ||\n            this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'circular') ?\n            true : false;\n    }\n\n    public getOdNode(label: string): Node {\n        return this.nodes.find((node: Node) => node.label == label);\n    }\n\n    public getOdNodes(): Node[] {\n        return this.nodes.filter((node: Node) => node.label);\n    }\n\n    /**\n     * Calculates the set of minimum paths.\n     * @param odPairs The O/D pairs\n     */\n    public calcShortestPaths(odPairs: OdPair[]): Observable {\n        try {\n            for (let i = 0; i  edge.label);\n    }\n\n    /**\n     * Calculates the incidence matrix of paths for O/D pairs.\n     */\n    public calcIncidenceMatrix(): Observable {\n        const edges = this.getPathsEdges();\n        for (let z = 0; z  value.edgeId == edges[m].edgeId)) {\n                        // The path crosses the edge.\n                        this.incidenceMatrix[z][n][m] = true;\n                    } else {\n                        // The path does not cross the edge.\n                        this.incidenceMatrix[z][n][m] = false;\n                    }\n                }\n            }\n        }\n        return of(null);\n    }\n\n    public getIncidenceMatrix(): boolean[][][] {\n        return this.incidenceMatrix;\n    }\n\n    /**\n     * Calculates the assignment matrix.\n     * @param odPairs The O/D pairs\n     */\n    public calcAssignmentMatrix(odPairs: OdPair[]): Observable {\n        // Calculates the probabilities of shortest paths.\n        const shortestPathsProbabilities = this.calcShortestPathsProbabilities(odPairs);\n\n        // Assignment matrix.\n        for (let z = 0; z  {\n        for (const edge of this.edges) {\n            edge.calcMaxFlow(factor);\n        }\n        return of(null);\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link distance or duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param o Source node\n     * @param d Destination node\n     * @param pathType Distance or duration\n     * @param k The number of shortest paths to compute\n     * @returns The set of shortest paths\n     */\n    private ksp(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Sets to zero the count property of the nodes.\n        this.resetCount();\n        // Instantiates the heap.\n        this.heap = new Heap();\n        // Inserts the path of origin into heap with cost 0.\n        this.heap.push({ pathId: 0, node: o, edges: [], cost: 0 });\n        // Walks the graph.\n        return this.walk(o, d, pathType, k);\n    }\n\n    /**\n     * Breadth First Search (BFS) algorithm for traversing and searching tree data\n     * explores the neighbor nodes first, before moving to the next level neighbors.\n     */\n    private walk(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Set of shortest paths from origin to destination.\n        const shortestPaths: Path[] = [];\n\n        let pathId = 1;\n        let node: Node;\n        while (this.heap.getPaths().length > 0 && d.count  edge.origin.nodeId == node.nodeId) ? false : true;\n    }\n\n    private resetCount(): void {\n        for (const node of this.nodes) {\n            node.count = 0;\n        }\n    }\n\n    /**\n     * Removes the alternative paths that differ only for two links.\n     * @param shortestPaths The shortest paths as created by the algorithm\n     */\n    private filterPaths(shortestPaths: Path[]): void {\n        if (shortestPaths.length > 1) {\n            let i = 0;\n            do {\n                const pathA = shortestPaths[i].edges;\n                const pathB = shortestPaths[i + 1].edges;\n                const sharedEdges = pathA.filter((edgeOfA: Edge) =>\n                    pathB.find((edgeOfB: Edge) =>\n                        edgeOfB.edgeId == edgeOfA.edgeId));\n                if (pathA.length - sharedEdges.length  value.edgeId == edge.edgeId)) {\n                        edges.push(edge);\n                        edge.label = 'E' + count++;\n                        if (!environment.testing) {\n                            edge.drawingOptions.infowindow.setContent('Edge: ' + edge.label);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Multinomial logit model.\n     * @param odPairs The O/D pairs\n     */\n    private calcShortestPathsProbabilities(odPairs: OdPair[]): number[][] {\n        // Gets the total cost of paths.\n        const pathCosts = this.calcPathCosts(odPairs);\n        const shortestPathsProbabilities: number[][] = [];\n        // Theta parameter adjustment.\n        const parameter = uiConfig.theta * 100;\n        // Calculates numerator.\n        const exps: number[][] = [];\n        for (let z = 0; z  {\n                return value > 0 ? Math.exp(-value / parameter) : 0;\n            });\n        }\n        // Calculates denominator.\n        const sumExps: number[] = [];\n        for (let z = 0; z  a + b, 0);\n            sumExps.push(sum);\n        }\n        // Probabilities.\n        for (let z = 0; z  0 ? round(exps[z][n] / sumExps[z], 3) : 0;\n                shortestPathsProbabilities[z].push(p);\n            }\n        }\n        return shortestPathsProbabilities;\n    }\n\n    private calcPathCosts(odPairs: OdPair[]): number[][] {\n        const pathCosts: number[][] = [];\n        for (let z = 0; z \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnumValues.html":{"url":"classes/EnumValues.html","title":"class - EnumValues","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnumValues\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/utils.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getNames\n                            \n                            \n                                    Static\n                                getValues\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getNames\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getNames(e: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/utils.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getValues\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getValues(e: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/utils.ts:9\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     T[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export type EnumValueType = string | number;\n\nexport class EnumValues {\n\n    public static getNames(e: any): string[] {\n        return Object.keys(e).filter((key: string) => isNaN(+key));\n    }\n\n    public static getValues(e: any): T[] {\n        return this.getNames(e).map((name: string) => e[name]) as T[];\n    }\n\n}\n\nexport function toSeconds(value: number): number {\n    return value / 1000;\n}\n\n/**\n * Format time to M:SS\n * @param s Seconds\n * @returns M:SS\n */\nexport function formatTimeFromSeconds(s: number): string {\n    return Math.floor(s / 60) + ':' + ('0' + Math.floor(s % 60)).slice(-2);\n}\n\n/**\n * Format time to M:SS.mmm\n * @param ms Milliseconds\n * @returns M:SS.mmm\n */\nexport function formatTimeFromMilliseconds(ms: number): string {\n    return Math.floor(ms / 1000 / 60) + ':' +\n        ('0' + Math.floor((ms / 1000) % 60)).slice(-2) + '.' +\n        ('00' + (ms - Math.floor(ms / 1000) * 1000)).slice(-3);\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EstimateOfDemandComponent.html":{"url":"components/EstimateOfDemandComponent.html","title":"component - EstimateOfDemandComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EstimateOfDemandComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-estimate-of-demand\n            \n\n            \n                styleUrls\n                estimate-of-demand.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./estimate-of-demand.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pathTypes\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addDestination\n                            \n                            \n                                addOrigin\n                            \n                            \n                                deleteOdPair\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                updateOdPairs\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, wizard: WizardService, network: NetworkService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addDestination\n                            \n                            \n                        \n                    \n                \n                \n                    \naddDestination(control: FormArray, origin: string, destination: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:150\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        control\n                                                        \n                                                                    FormArray\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        origin\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        destination\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addOrigin\n                            \n                            \n                        \n                    \n                \n                \n                    \naddOrigin(control: FormArray, origin: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:142\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        control\n                                                        \n                                                                    FormArray\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        origin\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteOdPair\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteOdPair(i: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:85\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        i\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateOdPairs\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateOdPairs(node: Node)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:93\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                                    Node\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pathTypes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pathTypes:     PathType[]\n\n                    \n                \n                    \n                        \n                            Type :     PathType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        odPairs\n                    \n                \n\n                \n                    \n                        getodPairs()\n                    \n                \n                            \n                                \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:29\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, FormArray } from '@angular/forms';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { WizardService } from '../wizard.service';\nimport { NetworkService } from '../../../network/network.service';\nimport * as fromUi from '../../models/reducers';\nimport { Map } from '../../models/ui-state';\nimport { PathType, OdPair, Node } from '../../../network/graph';\nimport { EnumValues } from '../../utils';\nimport { uiConfig } from '../../ui-config';\n\nimport { BaseComponent } from '../../models/base.component';\n\n@Component({\n    selector: 'wizard-estimate-of-demand',\n    templateUrl: './estimate-of-demand.component.html',\n    styleUrls: ['./estimate-of-demand.component.scss']\n})\nexport class EstimateOfDemandComponent extends BaseComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    pathTypes: PathType[];\n\n    get odPairs(): FormArray {\n        return this.formGroup.get('odPairs') as FormArray;\n    }\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private store: Store,\n        private wizard: WizardService,\n        private network: NetworkService\n    ) {\n        super();\n\n        this.pathTypes = EnumValues.getValues(PathType);\n    }\n\n    ngOnInit(): void {\n        this.valueChanges();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        // Updates network service data on value changes.\n        this.subscriptions.push(this.formGroup.get('odPairs').valueChanges.subscribe(\n            (odPairs: OdPair[]) => {\n                this.network.setOdPairs(odPairs);\n            }\n        ));\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.currentStep)).subscribe((currentStep: number) => {\n            switch (currentStep) {\n                case 0:\n                    // Resets control.\n                    const control = this.formGroup.get('odPairs') as FormArray;\n                    if (control.length > 0) {\n                        for (let i = control.length - 1; i >= 0; i--) {\n                            control.removeAt(i);\n                        }\n                    }\n                    break;\n            }\n        }));\n        this.subscriptions.push(this.store.pipe(select(fromUi.map)).subscribe((map: Map) => {\n            if (map && map.data.selectedNode) {\n                this.updateOdPairs(map.data.selectedNode);\n\n            }\n        }));\n    }\n\n    sendActions(): void {\n        //\n    }\n\n    deleteOdPair(i: number): void {\n        // Updates control.\n        const control = this.formGroup.get('odPairs') as FormArray;\n        control.removeAt(i);\n        // Updates step state.\n        this.wizard.updateStep(this.formGroup.value, this.index);\n    }\n\n    updateOdPairs(node: Node): void {\n        const control = this.formGroup.get('odPairs') as FormArray;\n        const odPairs = control.value;\n\n        let error = null;\n\n        if (odPairs.length > 0) {\n            const odPair = odPairs[odPairs.length - 1];\n            // Checks limit.\n            if (odPairs.length == uiConfig.maxOdPairs && odPairs[uiConfig.maxOdPairs - 1].destination) {\n                error = `The maximum number of O/D pairs is ${uiConfig.maxOdPairs}`;\n                // Checks if valid node.\n            } else if (odPair.destination == null && node.incomingEdges.length == 0) {\n                error = `The node cannot be a destination`;\n            } else if (odPair.destination && node.outgoingEdges.length == 0) {\n                error = `The node cannot be an origin`;\n                // Checks if last O/D pair is completed.\n            } else if (odPair.destination) {\n                // Adds origin.\n                this.addOrigin(control, node.label);\n                // Checks if same node.\n            } else if (odPair.origin == node.label) {\n                error = `The origin and destination nodes cannot be the same`;\n            } else {\n                // Checks if the pair is valid.\n                if (odPairs.filter(pair => pair.origin == odPair.origin && pair.destination == node.label).length > 0) {\n                    error = `O/D pair already selected`;\n                } else {\n                    // Adds destination.\n                    this.addDestination(control, odPair.origin, node.label);\n                }\n            }\n        } else {\n            if (node.outgoingEdges.length == 0) {\n                error = `The node cannot be an origin`;\n            } else {\n                // Adds origin.\n                this.addOrigin(control, node.label);\n            }\n        }\n\n        if (error) {\n            this.wizard.putInError(error);\n        } else {\n            // Updates step state.\n            this.wizard.updateStep({ odPairs: control.value }, 2);\n        }\n    }\n\n    addOrigin(control: FormArray, origin: string): void {\n        control.push(this.formBuilder.group({\n            origin: origin,\n            destination: null,\n            pathType: null\n        }));\n    }\n\n    addDestination(control: FormArray, origin: string, destination: string): void {\n        control.get([control.length - 1]).patchValue({\n            origin: origin,\n            destination: destination,\n            pathType: PathType.distance\n        });\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                O\n                D\n                Path\n                \n            \n            \n                \n                    {{ pair.value.origin }}\n                \n                \n                    {{ pair.value.destination }}\n                \n                \n                    \n                        \n                            {{ path }}\n                        \n                    \n                \n                \n                    \n                        delete\n                    \n                \n            \n        \n    \n\n    \n        Continue\n            navigate_next\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        O                D                Path                                                                            {{ pair.value.origin }}                                                    {{ pair.value.destination }}                                                                                                        {{ path }}                                                                                                                        delete                                                                        Continue            navigate_next            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EstimateOfDemandComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/footer/footer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentYear\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/footer/footer.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentYear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentYear:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : new Date().getFullYear()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/footer/footer.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-footer',\n    templateUrl: './footer.component.html',\n    styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n    currentYear: number = new Date().getFullYear();\n\n    ngOnInit(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n        \n            \n                \n                    \n                        Privacy\n                    \n                \n                \n                    \n                        Terms of service\n                    \n                \n            \n        \n    \n\n    \n\n    \n        \n            Copyright&nbsp;©&nbsp;{{ currentYear }} Roberto&nbsp;Simonetti - MIT license\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                Privacy                                                                                                Terms of service                                                                                        Copyright © {{ currentYear }} Roberto Simonetti - MIT license            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GoOn.html":{"url":"classes/GoOn.html","title":"class - GoOn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  GoOn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/actions/wizard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/models/actions/wizard.actions.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : WizardActionTypes.GoOn\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Step } from '../ui-state';\n\n/**\n * ngrx: wizard Actions.\n */\nexport enum WizardActionTypes {\n\n    StepChanged = '[Wizard] Step Changed',\n    StepError = '[Wizard] Step Error',\n    StepPending = '[Wizard] Step Pending',\n    GoOn = '[Wizard] Go On',\n    Reset = '[Wizard] Reset'\n\n}\n\nexport class StepChanged implements Action {\n\n    public readonly type: string = WizardActionTypes.StepChanged;\n\n    constructor(public payload: { step: Step, index: number }) { }\n\n}\n\nexport class StepError implements Action {\n\n    public readonly type: string = WizardActionTypes.StepError;\n\n    constructor(public payload: string) { }\n\n}\n\nexport class StepPending implements Action {\n\n    public readonly type: string = WizardActionTypes.StepPending;\n\n    constructor(public payload: string | boolean) { }\n\n}\n\nexport class GoOn implements Action {\n\n    public readonly type: string = WizardActionTypes.GoOn;\n\n    constructor(public payload: { step: Step, index: number, nextIndex: number }) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = WizardActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type WizardActions = StepChanged | StepError | StepPending | GoOn | Reset;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GoogleMapComponent.html":{"url":"components/GoogleMapComponent.html","title":"component - GoogleMapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GoogleMapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/map/google-map.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                google-map\n            \n\n\n\n            \n                template\n                \n\n\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                map\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createMap\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                center\n                            \n                            \n                                disableDefaultUI\n                            \n                            \n                                disableDoubleClickZoom\n                            \n                            \n                                gestureHandling\n                            \n                            \n                                mapTypeId\n                            \n                            \n                                maxZoom\n                            \n                            \n                                minZoom\n                            \n                            \n                                styles\n                            \n                            \n                                zoom\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(map: MapService, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/map/google-map.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                    MapService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        center\n                    \n                    \n                        Center map. Required.\n\n                            \n                            Type:    google.maps.LatLngLiteral\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableDefaultUI\n                    \n                    \n                        Enables/disables all default UI.\n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableDoubleClickZoom\n                    \n                    \n                        Enables/disables zoom and center on double click. Enabled by default.\n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        gestureHandling\n                    \n                    \n                        This setting controls how gestures on the map are handled.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapTypeId\n                    \n                    \n                        The initial map mapTypeId. Defaults to ROADMAP.\n\n                            \n                            Type:    google.maps.MapTypeId\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxZoom\n                    \n                    \n                        The maximum zoom level which will be displayed on the map.\n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minZoom\n                    \n                    \n                        The minimum zoom level which will be displayed on the map.\n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        styles\n                    \n                    \n                        Styles to apply to each of the default map types.\n\n                            \n                            Type:    google.maps.MapTypeStyle[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zoom\n                    \n                    \n                        The initial map zoom level. Required.\n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createMap(el: HTMLElement)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                        \n                                                                    HTMLElement\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:66\n                            \n                        \n\n\n                \n                    \n                            On changes, updates center map & zoom.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            On init, creates map.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            map\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        map:     MapService\n\n                    \n                \n                    \n                        \n                            Type :     MapService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:51\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit, OnChanges, SimpleChange, ElementRef } from '@angular/core';\n\nimport { MapService } from './/map.service';\n\n@Component({\n    selector: 'google-map',\n    template: `\n        \n        \n        `\n})\nexport class GoogleMapComponent implements OnInit, OnChanges {\n\n    /**\n     * Center map. Required.\n     */\n    @Input() center: google.maps.LatLngLiteral;\n    /**\n     * The initial map zoom level. Required.\n     */\n    @Input() zoom: number;\n    /**\n     * Enables/disables all default UI.\n     */\n    @Input() disableDefaultUI: boolean;\n    /**\n     * Enables/disables zoom and center on double click. Enabled by default.\n     */\n    @Input() disableDoubleClickZoom: boolean;\n    /**\n     * The initial map mapTypeId. Defaults to ROADMAP.\n     */\n    @Input() mapTypeId: google.maps.MapTypeId;\n    /**\n     * The maximum zoom level which will be displayed on the map.\n     */\n    @Input() maxZoom: number;\n    /**\n     * The minimum zoom level which will be displayed on the map.\n     */\n    @Input() minZoom: number;\n    /**\n     * This setting controls how gestures on the map are handled.\n     */\n    @Input() gestureHandling: string;\n    /**\n     * Styles to apply to each of the default map types.\n     */\n    @Input() styles: google.maps.MapTypeStyle[];\n\n    constructor(public map: MapService, private elementRef: ElementRef) { }\n\n    /**\n     * On init, creates map.\n     */\n    ngOnInit(): void {\n        // Gets the map element.\n        const el: HTMLElement = this.elementRef.nativeElement.querySelector('#map');\n\n        this.createMap(el);\n    }\n\n    /**\n     * On changes, updates center map & zoom.\n     */\n    ngOnChanges(changes: { [propertyName: string]: SimpleChange }): void {\n        if (changes['center']) { this.map.setCenter(this.center); }\n        if (changes['zoom']) { this.map.setZoom(this.zoom); }\n    }\n\n    private createMap(el: HTMLElement): void {\n        this.map.initMap(el, {\n            center: this.center,\n            disableDefaultUI: this.disableDefaultUI,\n            disableDoubleClickZoom: this.disableDoubleClickZoom,\n            mapTypeId: this.mapTypeId,\n            maxZoom: this.maxZoom as number,\n            minZoom: this.minZoom as number,\n            gestureHandling: this.gestureHandling as string,\n            styles: this.styles,\n            zoom: this.zoom as number\n        });\n    }\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GoogleMapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Heap.html":{"url":"classes/Heap.html","title":"class - Heap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Heap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/k-shortest-path.ts\n        \n\n            \n                Description\n            \n            \n                Heap data structure containing paths.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                paths\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getPaths\n                            \n                            \n                                    Public\n                                getShortestPath\n                            \n                            \n                                    Public\n                                pop\n                            \n                            \n                                    Public\n                                push\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            paths\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paths:     Path[]\n\n                    \n                \n                    \n                        \n                            Type :     Path[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/k-shortest-path.ts:23\n                            \n                        \n\n                \n                    \n                        The queue of paths.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getPaths\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getPaths()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/k-shortest-path.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Path[]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getShortestPath\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getShortestPath()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/k-shortest-path.ts:45\n                            \n                        \n\n\n                \n                    \n                            Returns the shortest path in the heap by cost.\n\n\n                            \n                                Returns :     Path\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pop\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        pop(pathId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/k-shortest-path.ts:37\n                            \n                        \n\n\n                \n                    \n                            Removes a path from the heap.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pathId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The id of the path\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            push\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        push(path: Path)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/k-shortest-path.ts:29\n                            \n                        \n\n\n                \n                    \n                            Inserts a path into the heap.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                        \n                                                                    Path\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The path to insert\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Edge, Node } from \"./graph\";\n\n/**\n * Path to generic node.\n */\nexport interface Path {\n\n    pathId: number;\n    node: Node;\n    edges: Edge[];\n    cost: number;\n\n}\n\n/**\n * Heap data structure containing paths.\n */\nexport class Heap {\n\n    /**\n     * The queue of paths.\n     */\n    private paths: Path[] = [];\n\n    /**\n     * Inserts a path into the heap.\n     * @param path The path to insert\n     */\n    public push(path: Path): void {\n        this.paths.push({ pathId: path.pathId, node: path.node, edges: path.edges, cost: path.cost });\n    }\n\n    /**\n     * Removes a path from the heap.\n     * @param pathId The id of the path\n     */\n    public pop(pathId: number): void {\n        const index = this.paths.findIndex((path: Path) => path.pathId == pathId);\n        this.paths.splice(index, 1);\n    }\n\n    /**\n     * Returns the shortest path in the heap by cost.\n     */\n    public getShortestPath(): Path {\n        return this.paths.reduce((prev: Path, curr: Path) => prev.cost \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home/home.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home/home.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        show:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, ElementRef } from '@angular/core';\n\nimport * as anime from 'animejs';\n\nimport { HOME_TRANSITION } from './home.transition';\n\n@Component({\n    selector: 'app-home',\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.scss'],\n    animations: [HOME_TRANSITION]\n})\nexport class HomeComponent implements OnInit, AfterViewInit {\n\n    show: boolean = false;\n\n    constructor(private elementRef: ElementRef) { }\n\n    ngOnInit(): void {\n        //\n    }\n\n    ngAfterViewInit(): void {\n        const element: HTMLElement = this.elementRef.nativeElement.querySelector('.headline .letters');\n        const text: string = element.innerText;\n        const letters: string[] = text.split('');\n\n        let wrappedText = '';\n        for (const letter of letters) {\n            wrappedText += `${letter}`;\n        }\n\n        element.innerHTML = wrappedText;\n\n        // Anime.\n        const basicTimeline = anime.timeline();\n        basicTimeline\n            .add({\n                targets: '.headline .letter',\n                scale: [0.3, 1],\n                opacity: [0, 1],\n                translateZ: 0,\n                easing: 'linear',\n                delay: (el, i) => {\n                    return 70 * (i + 1);\n                }\n            }).add({\n                targets: '.headline .line',\n                scaleX: [0, 1],\n                opacity: [0.5, 1],\n                easing: 'linear',\n                offset: '-=840',\n                delay: (el, i, l) => {\n                    return 70 * (l - i);\n                },\n                complete: (anim) => {\n                    this.show = true;\n                }\n            });\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                STRADA\n                \n            \n        \n        \n            \n                Simulation of TRAffic DAta\n                An urban traffic web simulator that uses data in real time\n                GET STARTED\n                \n                \n                More info\n            \n        \n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        STRADA                                                                        Simulation of TRAffic DAta                An urban traffic web simulator that uses data in real time                GET STARTED                                                More info                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoDialogComponent.html":{"url":"components/InfoDialogComponent.html","title":"component - InfoDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InfoDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/info-dialog.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                info-dialog\n            \n\n\n\n            \n                template\n                Info\n\n    {{ data }}\n\n\n    No\n    Yes\n\n\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/info-dialog.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/info-dialog.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/info-dialog.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n    selector: 'info-dialog',\n    template: `\n        Info\n        \n            {{ data }}\n        \n        \n            No\n            Yes\n        \n    `,\n    styles: []\n})\nexport class InfoDialogComponent {\n\n    constructor(\n        public dialogRef: MatDialogRef,\n        @Inject(MAT_DIALOG_DATA) public data: any\n    ) { }\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Info    {{ data }}    No    Yes'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InfoDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LinkFlow.html":{"url":"interfaces/LinkFlow.html","title":"interface - LinkFlow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LinkFlow\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        value\n                                \n                                \n                                        variance\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    linkFlow attribute.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        variance\n                                    \n                                \n                                \n                                    \n                                        variance:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Variance is the inverse of density.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\n\nimport * as combine from 'mout/array/combine';\n\nimport { Heap, Path } from './k-shortest-path';\nimport { round } from '../utils';\nimport { environment } from '../../environments/environment';\nimport { uiConfig } from '../ui/ui-config';\n\nexport enum PathType {\n    distance = 'distance',\n    duration = 'duration'\n}\n\n/**\n * An O/D pair is described by the origin and destination nodes, and the type of path.\n */\nexport interface OdPair {\n\n    origin: string;\n    destination: string;\n    pathType: PathType;\n\n}\n\nexport interface LinkFlow {\n\n    /**\n     * linkFlow attribute.\n     */\n    value: number;\n    /**\n     * Variance is the inverse of density.\n     */\n    variance: number;\n\n}\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public label: string;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    public drawingOptions: { marker?: google.maps.Marker } = {};\n\n    /**\n     * Used by the k shortest path routing.\n     */\n    public count: number = 0;\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public label: string;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    /**\n     * Free flow speed (m/s).\n     */\n    public freeFlowVelocity: number;\n\n    /**\n     * Instant speed (m/s).\n     */\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    /**\n     * Number of vehicles calculated from traffic data.\n     */\n    public linkFlow: number;\n\n    /**\n     * Maximum flow of the link.\n     */\n    public maxFlow: number;\n\n    public drawingOptions: {\n        path?: google.maps.LatLng[],\n        polyline?: google.maps.Polyline,\n        marker?: google.maps.Marker,\n        infowindow?: google.maps.InfoWindow\n    } = {};\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the link flow.\n     */\n    public calcLinkFlow(): void {\n        // Min distance is 1 meter.\n        if (this.distance == 0) { this.distance = 1; }\n        // Min duration is 1 second.\n        if (this.duration == 0) {\n            this.duration = round(this.distance / (50 / 3.6)) > 1 ? round(this.distance / (50 / 3.6)) : 1;\n        }\n        // Calculates free flow velocity (m/s).\n        this.freeFlowVelocity = round(this.distance / this.duration, 2);\n        // Calculates link flow.\n        if (this.durationInTraffic > 0 && this.durationInTraffic >= this.duration) {\n            // Calculates velocity (m/s).\n            this.velocity = round(this.distance / this.durationInTraffic, 2);\n            // Calculates density.\n            this.density = round(this.getKjam() * (this.freeFlowVelocity - this.velocity) / this.freeFlowVelocity, 2);\n            // Calculates flow.\n            this.flow = round(this.density * this.velocity, 2);\n            // Calculates link flow.\n            this.linkFlow = round(this.density * this.distance);\n        } else {\n            this.velocity = 0;\n            this.density = 0;\n            this.flow = 0;\n            this.linkFlow = 0;\n        }\n    }\n\n    /**\n     * Calculates the max flow of the edge.\n     * @param factor Weather Adjustment Factor\n     */\n    public calcMaxFlow(factor: number): void {\n        const maxFlow = this.getKjam() * this.freeFlowVelocity;\n        this.maxFlow = round(maxFlow * factor, 2);\n    }\n\n    /**\n     * Gets the variance of measurement error of link flow.\n     */\n    public getVariance(): number {\n        return this.density > 0 ? round(1 / this.density, 2) : 1;\n    }\n\n    protected getKjam(): number {\n        return round(1 / uiConfig.sp, 2);\n    }\n\n    protected getCapacity(timeInterval: number): number {\n        return this.maxFlow * timeInterval;\n    }\n\n    protected draw(color: string, zIndex: number = 10): void {\n        this.drawingOptions.polyline.set('strokeColor', color);\n        this.drawingOptions.polyline.set('zIndex', zIndex);\n        this.drawingOptions.marker.set('visible', true);\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    protected nodes: Node[] = [];\n\n    protected edges: Edge[] = [];\n\n    protected relations: Relation[] = [];\n\n    /**\n     * Paths for each O/D pair [pairs,paths,edges].\n     */\n    protected shortestPaths: Edge[][][] = [];\n\n    protected incidenceMatrix: boolean[][][] = [];\n\n    protected assignmentMatrix: number[][][] = [];\n\n    private heap: Heap;\n\n    /**\n     * Shortest paths drawing options.\n     */\n    private drawingOptions: {\n        polylines?: google.maps.Polyline[][];\n    } = {};\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public getEdge(edgeId: number): Edge {\n        return this.edges.find((edge: Edge) => edge.edgeId == edgeId);\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Key:oneway\n     * @param edgeId Id of the edge\n     */\n    public isOneway(edgeId: number): boolean {\n        return !!this.getEdge(edgeId).tags.find(tag => tag.key == 'oneway' && tag.value != 'no') ||\n            this.isRoundabout(edgeId);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Tag:junction%3Droundabout\n     * @param edgeId Id of the edge\n     */\n    public isRoundabout(edgeId: number): boolean {\n        return this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'roundabout') ||\n            this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'circular') ?\n            true : false;\n    }\n\n    public getOdNode(label: string): Node {\n        return this.nodes.find((node: Node) => node.label == label);\n    }\n\n    public getOdNodes(): Node[] {\n        return this.nodes.filter((node: Node) => node.label);\n    }\n\n    /**\n     * Calculates the set of minimum paths.\n     * @param odPairs The O/D pairs\n     */\n    public calcShortestPaths(odPairs: OdPair[]): Observable {\n        try {\n            for (let i = 0; i  edge.label);\n    }\n\n    /**\n     * Calculates the incidence matrix of paths for O/D pairs.\n     */\n    public calcIncidenceMatrix(): Observable {\n        const edges = this.getPathsEdges();\n        for (let z = 0; z  value.edgeId == edges[m].edgeId)) {\n                        // The path crosses the edge.\n                        this.incidenceMatrix[z][n][m] = true;\n                    } else {\n                        // The path does not cross the edge.\n                        this.incidenceMatrix[z][n][m] = false;\n                    }\n                }\n            }\n        }\n        return of(null);\n    }\n\n    public getIncidenceMatrix(): boolean[][][] {\n        return this.incidenceMatrix;\n    }\n\n    /**\n     * Calculates the assignment matrix.\n     * @param odPairs The O/D pairs\n     */\n    public calcAssignmentMatrix(odPairs: OdPair[]): Observable {\n        // Calculates the probabilities of shortest paths.\n        const shortestPathsProbabilities = this.calcShortestPathsProbabilities(odPairs);\n\n        // Assignment matrix.\n        for (let z = 0; z  {\n        for (const edge of this.edges) {\n            edge.calcMaxFlow(factor);\n        }\n        return of(null);\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link distance or duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param o Source node\n     * @param d Destination node\n     * @param pathType Distance or duration\n     * @param k The number of shortest paths to compute\n     * @returns The set of shortest paths\n     */\n    private ksp(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Sets to zero the count property of the nodes.\n        this.resetCount();\n        // Instantiates the heap.\n        this.heap = new Heap();\n        // Inserts the path of origin into heap with cost 0.\n        this.heap.push({ pathId: 0, node: o, edges: [], cost: 0 });\n        // Walks the graph.\n        return this.walk(o, d, pathType, k);\n    }\n\n    /**\n     * Breadth First Search (BFS) algorithm for traversing and searching tree data\n     * explores the neighbor nodes first, before moving to the next level neighbors.\n     */\n    private walk(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Set of shortest paths from origin to destination.\n        const shortestPaths: Path[] = [];\n\n        let pathId = 1;\n        let node: Node;\n        while (this.heap.getPaths().length > 0 && d.count  edge.origin.nodeId == node.nodeId) ? false : true;\n    }\n\n    private resetCount(): void {\n        for (const node of this.nodes) {\n            node.count = 0;\n        }\n    }\n\n    /**\n     * Removes the alternative paths that differ only for two links.\n     * @param shortestPaths The shortest paths as created by the algorithm\n     */\n    private filterPaths(shortestPaths: Path[]): void {\n        if (shortestPaths.length > 1) {\n            let i = 0;\n            do {\n                const pathA = shortestPaths[i].edges;\n                const pathB = shortestPaths[i + 1].edges;\n                const sharedEdges = pathA.filter((edgeOfA: Edge) =>\n                    pathB.find((edgeOfB: Edge) =>\n                        edgeOfB.edgeId == edgeOfA.edgeId));\n                if (pathA.length - sharedEdges.length  value.edgeId == edge.edgeId)) {\n                        edges.push(edge);\n                        edge.label = 'E' + count++;\n                        if (!environment.testing) {\n                            edge.drawingOptions.infowindow.setContent('Edge: ' + edge.label);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Multinomial logit model.\n     * @param odPairs The O/D pairs\n     */\n    private calcShortestPathsProbabilities(odPairs: OdPair[]): number[][] {\n        // Gets the total cost of paths.\n        const pathCosts = this.calcPathCosts(odPairs);\n        const shortestPathsProbabilities: number[][] = [];\n        // Theta parameter adjustment.\n        const parameter = uiConfig.theta * 100;\n        // Calculates numerator.\n        const exps: number[][] = [];\n        for (let z = 0; z  {\n                return value > 0 ? Math.exp(-value / parameter) : 0;\n            });\n        }\n        // Calculates denominator.\n        const sumExps: number[] = [];\n        for (let z = 0; z  a + b, 0);\n            sumExps.push(sum);\n        }\n        // Probabilities.\n        for (let z = 0; z  0 ? round(exps[z][n] / sumExps[z], 3) : 0;\n                shortestPathsProbabilities[z].push(p);\n            }\n        }\n        return shortestPathsProbabilities;\n    }\n\n    private calcPathCosts(odPairs: OdPair[]): number[][] {\n        const pathCosts: number[][] = [];\n        for (let z = 0; z \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LocationModule.html":{"url":"modules/LocationModule.html","title":"module - LocationModule","body":"\n                   \n\n\n\n\n  Modules\n  LocationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_providers\n\n\n\n\nLocationService\n\nLocationService\n\n\n\nLocationModule\n\nLocationModule\n\nLocationModule -->\n\nLocationService->LocationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/location/location.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     LocationService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { LocationService } from './location.service';\n\n@NgModule({\n    imports: [],\n    declarations: [],\n    providers: [LocationService]\n})\nexport class LocationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocationService.html":{"url":"injectables/LocationService.html","title":"injectable - LocationService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  LocationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/location/location.service.ts\n        \n\n            \n                Description\n            \n            \n                Responsible for identifying the geographic coordinates of the simulation area,\nthrough geocoding or geolocation.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                geocoder\n                            \n                            \n                                    Private\n                                latLng\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                codeAddress\n                            \n                            \n                                    Public\n                                getCurrentPosition\n                            \n                            \n                                    Public\n                                getLatLng\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Public\n                                setLatLng\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/location/location.service.ts:17\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            codeAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        codeAddress(address: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/location/location.service.ts:33\n                            \n                        \n\n\n                \n                    \n                            Geocoding service.\nWraps the Google Maps API geocoding service into an observable.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        address\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getCurrentPosition\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getCurrentPosition()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/location/location.service.ts:53\n                            \n                        \n\n\n                \n                    \n                            Tries HTML5 geolocation.\nWraps the Geolocation API into an observable.\n\n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getLatLng\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getLatLng()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/location/location.service.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     google.maps.LatLngLiteral\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/location/location.service.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setLatLng\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setLatLng(latLng: s/map.html\">google.maps.LatLngLiteral)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/location/location.service.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        latLng\n                                                        \n                                                                    google.maps.LatLngLiteral\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            geocoder\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        geocoder:     google.maps.Geocoder\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.Geocoder\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/location/location.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            latLng\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        latLng:     google.maps.LatLngLiteral\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.LatLngLiteral\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/location/location.service.ts:15\n                            \n                        \n\n                \n                    \n                        Center of the area (latitude, longitude).\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\nimport { environment } from '../../environments/environment';\n\n/**\n * Responsible for identifying the geographic coordinates of the simulation area,\n * through geocoding or geolocation.\n */\n@Injectable() export class LocationService {\n\n    /**\n     * Center of the area (latitude, longitude).\n     */\n    private latLng: google.maps.LatLngLiteral;\n\n    private geocoder: google.maps.Geocoder;\n\n    constructor() {\n        if (!environment.testing) {\n            this.geocoder = new google.maps.Geocoder();\n        }\n    }\n\n    public reset(): void {\n        this.latLng = null;\n    }\n\n    /**\n     * Geocoding service.\n     * Wraps the Google Maps API geocoding service into an observable.\n     */\n    public codeAddress(address: string): Observable {\n        return Observable.create((observer: Observer) => {\n            // Invokes geocode method of Google Maps API geocoding.\n            this.geocoder.geocode({ address: address }, (\n                (results: google.maps.GeocoderResult[], status: google.maps.GeocoderStatus) => {\n                    if (status === google.maps.GeocoderStatus.OK) {\n                        observer.next(results);\n                        observer.complete();\n                    } else {\n                        observer.error(status);\n                    }\n                })\n            );\n        });\n    }\n\n    /**\n     * Tries HTML5 geolocation.\n     * Wraps the Geolocation API into an observable.\n     */\n    public getCurrentPosition(): Observable {\n        return Observable.create((observer: Observer) => {\n            // Invokes getCurrentPosition method of Geolocation API.\n            navigator.geolocation.getCurrentPosition(\n                (position: Position) => {\n                    observer.next(position);\n                    observer.complete();\n                },\n                (error: PositionError) => {\n                    observer.error(error);\n                }\n            );\n        });\n    }\n\n    public getLatLng(): google.maps.LatLngLiteral {\n        return this.latLng;\n    }\n\n    public setLatLng(latLng: google.maps.LatLngLiteral): void {\n        this.latLng = latLng;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Map.html":{"url":"interfaces/Map.html","title":"interface - Map","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Map\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/ui-state.ts\n        \n\n            \n                Description\n            \n            \n                Map model.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Map data.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Step {\n\n    /**\n     * Form model data.\n     */\n    data: any;\n\n}\n\n/**\n * Map model.\n */\nexport interface Map {\n\n    /**\n     * Map data.\n     */\n    data: any;\n\n}\n\n/**\n * Initial steps.\n */\nexport const STEPS: Step[] = [];\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MapChanged.html":{"url":"classes/MapChanged.html","title":"class - MapChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  MapChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/actions/map.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/models/actions/map.actions.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/map.actions.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : MapActionTypes.MapChanged\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/map.actions.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Map } from '../ui-state';\n\n/**\n * ngrx: map Actions.\n */\nexport enum MapActionTypes {\n\n    MapChanged = '[Map] Map Changed',\n    Reset = '[Map] Reset'\n\n}\n\nexport class MapChanged implements Action {\n\n    public readonly type: string = MapActionTypes.MapChanged;\n\n    constructor(public payload: { map: Map }) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = MapActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type MapActions = MapChanged | Reset;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapComponent.html":{"url":"components/MapComponent.html","title":"component - MapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/map/map.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                ui-map\n            \n\n            \n                styleUrls\n                map.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./map.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                center\n                            \n                            \n                                currentStep\n                            \n                            \n                                disableDefaultUI\n                            \n                            \n                                disableDoubleClickZoom\n                            \n                            \n                                gestureHandling\n                            \n                            \n                                mapTypeId\n                            \n                            \n                                maxZoom\n                            \n                            \n                                minZoom\n                            \n                            \n                                styles\n                            \n                            \n                                zoom\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, map: MapService, network: NetworkService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/map/map.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                    MapService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:128\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            center\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        center:     google.maps.LatLngLiteral\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.LatLngLiteral\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentStep\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentStep:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableDefaultUI\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        disableDefaultUI:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableDoubleClickZoom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        disableDoubleClickZoom:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gestureHandling\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gestureHandling:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapTypeId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mapTypeId:     google.maps.MapTypeId\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.MapTypeId\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxZoom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maxZoom:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minZoom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        minZoom:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            styles\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        styles:     google.maps.MapTypeStyle[]\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.MapTypeStyle[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            zoom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zoom:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { MapService } from './map.service';\nimport { NetworkService } from '../../network/network.service';\nimport * as fromUi from '../models/reducers';\nimport { Step } from '../models/ui-state';\nimport { mapStyle } from './map.style';\nimport { OdPair } from '../../network/graph';\nimport { uiConfig } from '../ui-config';\n\nimport { BaseComponent } from '../models/base.component';\n\n@Component({\n    selector: 'ui-map',\n    templateUrl: './map.component.html',\n    styleUrls: ['./map.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class MapComponent extends BaseComponent implements OnInit {\n\n    // Center map. Required.\n    center: google.maps.LatLngLiteral;\n\n    // The initial map zoom level. Required.\n    zoom: number;\n\n    disableDefaultUI: boolean;\n    disableDoubleClickZoom: boolean;\n    mapTypeId: google.maps.MapTypeId;\n    maxZoom: number;\n    minZoom: number;\n    gestureHandling: string;\n    styles: google.maps.MapTypeStyle[];\n\n    currentStep: number;\n\n    constructor(\n        private store: Store,\n        private map: MapService,\n        private network: NetworkService\n    ) {\n        super();\n        // Map options.\n        this.disableDefaultUI = true;\n        this.disableDoubleClickZoom = false;\n        this.mapTypeId = google.maps.MapTypeId.ROADMAP;\n        this.maxZoom = 18;\n        this.minZoom = 4;\n        this.gestureHandling = 'cooperative';\n        this.styles = mapStyle;\n    }\n\n    ngOnInit(): void {\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        //\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.currentStep)).subscribe((currentStep: number) => {\n            this.currentStep = currentStep;\n            switch (currentStep) {\n                case 0:\n                    this.center = uiConfig.map.center;\n                    this.zoom = uiConfig.map.zoom;\n                    break;\n                case 1:\n                    // Builds & shows initial rectangle.\n                    const bounds: google.maps.LatLngBoundsLiteral = this.map.buildBounds(this.center);\n                    this.map.showRect(bounds);\n                    break;\n                case 2:\n                    // Hides the rectangle.\n                    this.map.hideRect();\n                    // Shows graph.\n                    this.map.showGraph();\n                    // Sets centroid.\n                    this.map.setCentroid();\n                    // Sets map.\n                    this.map.setCenter(this.map.getCentroid());\n                    this.map.setZoom(17);\n                    break;\n                case 3:\n                    // Clears nodes actions.\n                    this.map.clearNodesActions();\n                    break;\n                case 4:\n                    // Hides paths.\n                    this.map.hidePaths();\n                    break;\n            }\n        }));\n        this.subscriptions.push(this.store.pipe(select(fromUi.steps)).subscribe((steps: Step[]) => {\n            switch (this.currentStep) {\n                case 0:\n                    if (steps[0]) {\n                        // Updates center map.\n                        this.center = steps[0].data.center;\n                        this.zoom = 16;\n                    } else {\n                        this.center = uiConfig.map.center;\n                        this.zoom = uiConfig.map.zoom;\n                    }\n                    break;\n                case 2:\n                    if (steps[2]) {\n                        // Shows/hides O/D nodes.\n                        const odPairs: OdPair[] = steps[2].data.odPairs;\n                        this.map.showNodes(odPairs);\n                    }\n                    break;\n                case 3:\n                    if (steps[3] && steps[3].data.odPairs) {\n                        // Shows/hides O/D paths.\n                        const odPairs = steps[3].data.odPairs;\n                        this.map.showPaths(odPairs);\n                    }\n                    break;\n            }\n        }));\n    }\n\n    sendActions(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MapState.html":{"url":"interfaces/MapState.html","title":"interface - MapState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MapState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/reducers/map.reducer.ts\n        \n\n            \n                Description\n            \n            \n                Map state management.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        map\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        map\n                                    \n                                \n                                \n                                    \n                                        map:     Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import deepClone from 'mout/lang/deepClone';\n\nimport { Map } from \"../ui-state\";\nimport { MapActions, MapActionTypes } from '../actions/map.actions';\n\n/**\n * Map state management.\n */\nexport interface MapState {\n\n    map: Map;\n\n}\n\nexport const initialMapState: MapState = {\n    map: null\n};\n\n/**\n * ngrx: map Reducer.\n */\nexport function mapReducer(state: MapState = deepClone(initialMapState), action: MapActions): MapState {\n    switch (action.type) {\n        case MapActionTypes.MapChanged: {\n            state.map = action.payload.map;\n            return {\n                ...state,\n                map: deepClone(state.map)\n            };\n        }\n        case MapActionTypes.Reset: {\n            return deepClone(initialMapState);\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\nexport const getMap: (state: MapState) => Map = (state: MapState) => state.map;\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n  Modules\n  MaterialModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/material.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport {\n    MatSidenavModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatIconRegistry,\n    MatButtonModule,\n    MatIconModule,\n    MatMenuModule,\n    MatStepperModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule,\n    MatDialogModule,\n    MatGridListModule,\n    MatSelectModule,\n    MatExpansionModule,\n    MatTableModule\n} from '@angular/material';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nconst materialModules: any[] = [\n    MatSidenavModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    MatMenuModule,\n    MatStepperModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule,\n    MatDialogModule,\n    MatGridListModule,\n    MatSelectModule,\n    MatExpansionModule,\n    MatTableModule\n];\n\n@NgModule({\n    imports: materialModules,\n    exports: materialModules\n})\nexport class MaterialModule {\n\n    constructor(matIconRegistry: MatIconRegistry, domSanitizer: DomSanitizer) {\n        matIconRegistry.addSvgIcon(\n            'more_vert', domSanitizer.bypassSecurityTrustResourceUrl('./assets/images/ic_more_vert_24px.svg')\n        );\n        matIconRegistry.addSvgIcon(\n            'code', domSanitizer.bypassSecurityTrustResourceUrl('./assets/images/ic_code_24px.svg')\n        );\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Member.html":{"url":"interfaces/Member.html","title":"interface - Member","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Member\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                Relation's member.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ref\n                                \n                                \n                                        role\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ref\n                                    \n                                \n                                \n                                    \n                                        ref:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\n\nimport * as combine from 'mout/array/combine';\n\nimport { Heap, Path } from './k-shortest-path';\nimport { round } from '../utils';\nimport { environment } from '../../environments/environment';\nimport { uiConfig } from '../ui/ui-config';\n\nexport enum PathType {\n    distance = 'distance',\n    duration = 'duration'\n}\n\n/**\n * An O/D pair is described by the origin and destination nodes, and the type of path.\n */\nexport interface OdPair {\n\n    origin: string;\n    destination: string;\n    pathType: PathType;\n\n}\n\nexport interface LinkFlow {\n\n    /**\n     * linkFlow attribute.\n     */\n    value: number;\n    /**\n     * Variance is the inverse of density.\n     */\n    variance: number;\n\n}\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public label: string;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    public drawingOptions: { marker?: google.maps.Marker } = {};\n\n    /**\n     * Used by the k shortest path routing.\n     */\n    public count: number = 0;\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public label: string;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    /**\n     * Free flow speed (m/s).\n     */\n    public freeFlowVelocity: number;\n\n    /**\n     * Instant speed (m/s).\n     */\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    /**\n     * Number of vehicles calculated from traffic data.\n     */\n    public linkFlow: number;\n\n    /**\n     * Maximum flow of the link.\n     */\n    public maxFlow: number;\n\n    public drawingOptions: {\n        path?: google.maps.LatLng[],\n        polyline?: google.maps.Polyline,\n        marker?: google.maps.Marker,\n        infowindow?: google.maps.InfoWindow\n    } = {};\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the link flow.\n     */\n    public calcLinkFlow(): void {\n        // Min distance is 1 meter.\n        if (this.distance == 0) { this.distance = 1; }\n        // Min duration is 1 second.\n        if (this.duration == 0) {\n            this.duration = round(this.distance / (50 / 3.6)) > 1 ? round(this.distance / (50 / 3.6)) : 1;\n        }\n        // Calculates free flow velocity (m/s).\n        this.freeFlowVelocity = round(this.distance / this.duration, 2);\n        // Calculates link flow.\n        if (this.durationInTraffic > 0 && this.durationInTraffic >= this.duration) {\n            // Calculates velocity (m/s).\n            this.velocity = round(this.distance / this.durationInTraffic, 2);\n            // Calculates density.\n            this.density = round(this.getKjam() * (this.freeFlowVelocity - this.velocity) / this.freeFlowVelocity, 2);\n            // Calculates flow.\n            this.flow = round(this.density * this.velocity, 2);\n            // Calculates link flow.\n            this.linkFlow = round(this.density * this.distance);\n        } else {\n            this.velocity = 0;\n            this.density = 0;\n            this.flow = 0;\n            this.linkFlow = 0;\n        }\n    }\n\n    /**\n     * Calculates the max flow of the edge.\n     * @param factor Weather Adjustment Factor\n     */\n    public calcMaxFlow(factor: number): void {\n        const maxFlow = this.getKjam() * this.freeFlowVelocity;\n        this.maxFlow = round(maxFlow * factor, 2);\n    }\n\n    /**\n     * Gets the variance of measurement error of link flow.\n     */\n    public getVariance(): number {\n        return this.density > 0 ? round(1 / this.density, 2) : 1;\n    }\n\n    protected getKjam(): number {\n        return round(1 / uiConfig.sp, 2);\n    }\n\n    protected getCapacity(timeInterval: number): number {\n        return this.maxFlow * timeInterval;\n    }\n\n    protected draw(color: string, zIndex: number = 10): void {\n        this.drawingOptions.polyline.set('strokeColor', color);\n        this.drawingOptions.polyline.set('zIndex', zIndex);\n        this.drawingOptions.marker.set('visible', true);\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    protected nodes: Node[] = [];\n\n    protected edges: Edge[] = [];\n\n    protected relations: Relation[] = [];\n\n    /**\n     * Paths for each O/D pair [pairs,paths,edges].\n     */\n    protected shortestPaths: Edge[][][] = [];\n\n    protected incidenceMatrix: boolean[][][] = [];\n\n    protected assignmentMatrix: number[][][] = [];\n\n    private heap: Heap;\n\n    /**\n     * Shortest paths drawing options.\n     */\n    private drawingOptions: {\n        polylines?: google.maps.Polyline[][];\n    } = {};\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public getEdge(edgeId: number): Edge {\n        return this.edges.find((edge: Edge) => edge.edgeId == edgeId);\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Key:oneway\n     * @param edgeId Id of the edge\n     */\n    public isOneway(edgeId: number): boolean {\n        return !!this.getEdge(edgeId).tags.find(tag => tag.key == 'oneway' && tag.value != 'no') ||\n            this.isRoundabout(edgeId);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Tag:junction%3Droundabout\n     * @param edgeId Id of the edge\n     */\n    public isRoundabout(edgeId: number): boolean {\n        return this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'roundabout') ||\n            this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'circular') ?\n            true : false;\n    }\n\n    public getOdNode(label: string): Node {\n        return this.nodes.find((node: Node) => node.label == label);\n    }\n\n    public getOdNodes(): Node[] {\n        return this.nodes.filter((node: Node) => node.label);\n    }\n\n    /**\n     * Calculates the set of minimum paths.\n     * @param odPairs The O/D pairs\n     */\n    public calcShortestPaths(odPairs: OdPair[]): Observable {\n        try {\n            for (let i = 0; i  edge.label);\n    }\n\n    /**\n     * Calculates the incidence matrix of paths for O/D pairs.\n     */\n    public calcIncidenceMatrix(): Observable {\n        const edges = this.getPathsEdges();\n        for (let z = 0; z  value.edgeId == edges[m].edgeId)) {\n                        // The path crosses the edge.\n                        this.incidenceMatrix[z][n][m] = true;\n                    } else {\n                        // The path does not cross the edge.\n                        this.incidenceMatrix[z][n][m] = false;\n                    }\n                }\n            }\n        }\n        return of(null);\n    }\n\n    public getIncidenceMatrix(): boolean[][][] {\n        return this.incidenceMatrix;\n    }\n\n    /**\n     * Calculates the assignment matrix.\n     * @param odPairs The O/D pairs\n     */\n    public calcAssignmentMatrix(odPairs: OdPair[]): Observable {\n        // Calculates the probabilities of shortest paths.\n        const shortestPathsProbabilities = this.calcShortestPathsProbabilities(odPairs);\n\n        // Assignment matrix.\n        for (let z = 0; z  {\n        for (const edge of this.edges) {\n            edge.calcMaxFlow(factor);\n        }\n        return of(null);\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link distance or duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param o Source node\n     * @param d Destination node\n     * @param pathType Distance or duration\n     * @param k The number of shortest paths to compute\n     * @returns The set of shortest paths\n     */\n    private ksp(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Sets to zero the count property of the nodes.\n        this.resetCount();\n        // Instantiates the heap.\n        this.heap = new Heap();\n        // Inserts the path of origin into heap with cost 0.\n        this.heap.push({ pathId: 0, node: o, edges: [], cost: 0 });\n        // Walks the graph.\n        return this.walk(o, d, pathType, k);\n    }\n\n    /**\n     * Breadth First Search (BFS) algorithm for traversing and searching tree data\n     * explores the neighbor nodes first, before moving to the next level neighbors.\n     */\n    private walk(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Set of shortest paths from origin to destination.\n        const shortestPaths: Path[] = [];\n\n        let pathId = 1;\n        let node: Node;\n        while (this.heap.getPaths().length > 0 && d.count  edge.origin.nodeId == node.nodeId) ? false : true;\n    }\n\n    private resetCount(): void {\n        for (const node of this.nodes) {\n            node.count = 0;\n        }\n    }\n\n    /**\n     * Removes the alternative paths that differ only for two links.\n     * @param shortestPaths The shortest paths as created by the algorithm\n     */\n    private filterPaths(shortestPaths: Path[]): void {\n        if (shortestPaths.length > 1) {\n            let i = 0;\n            do {\n                const pathA = shortestPaths[i].edges;\n                const pathB = shortestPaths[i + 1].edges;\n                const sharedEdges = pathA.filter((edgeOfA: Edge) =>\n                    pathB.find((edgeOfB: Edge) =>\n                        edgeOfB.edgeId == edgeOfA.edgeId));\n                if (pathA.length - sharedEdges.length  value.edgeId == edge.edgeId)) {\n                        edges.push(edge);\n                        edge.label = 'E' + count++;\n                        if (!environment.testing) {\n                            edge.drawingOptions.infowindow.setContent('Edge: ' + edge.label);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Multinomial logit model.\n     * @param odPairs The O/D pairs\n     */\n    private calcShortestPathsProbabilities(odPairs: OdPair[]): number[][] {\n        // Gets the total cost of paths.\n        const pathCosts = this.calcPathCosts(odPairs);\n        const shortestPathsProbabilities: number[][] = [];\n        // Theta parameter adjustment.\n        const parameter = uiConfig.theta * 100;\n        // Calculates numerator.\n        const exps: number[][] = [];\n        for (let z = 0; z  {\n                return value > 0 ? Math.exp(-value / parameter) : 0;\n            });\n        }\n        // Calculates denominator.\n        const sumExps: number[] = [];\n        for (let z = 0; z  a + b, 0);\n            sumExps.push(sum);\n        }\n        // Probabilities.\n        for (let z = 0; z  0 ? round(exps[z][n] / sumExps[z], 3) : 0;\n                shortestPathsProbabilities[z].push(p);\n            }\n        }\n        return shortestPathsProbabilities;\n    }\n\n    private calcPathCosts(odPairs: OdPair[]): number[][] {\n        const pathCosts: number[][] = [];\n        for (let z = 0; z \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MessageArchivedComponent.html":{"url":"components/MessageArchivedComponent.html","title":"component - MessageArchivedComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MessageArchivedComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/message-archived.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snack-bar\n            \n\n\n\n            \n                template\n                {{ data }}\n\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/message-archived.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/message-archived.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material';\n\n@Component({\n    selector: 'snack-bar',\n    template: `\n        {{ data }}\n    `,\n    styles: []\n})\nexport class MessageArchivedComponent {\n\n    constructor(@Inject(MAT_SNACK_BAR_DATA) public data: any) { }\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ data }}'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MessageArchivedComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NetworkModule.html":{"url":"modules/NetworkModule.html","title":"module - NetworkModule","body":"\n                   \n\n\n\n\n  Modules\n  NetworkModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NetworkModule\n\n\n\ncluster_NetworkModule_imports\n\n\n\ncluster_NetworkModule_providers\n\n\n\n\nWeatherModule\n\nWeatherModule\n\n\n\nNetworkModule\n\nNetworkModule\n\nNetworkModule -->\n\nWeatherModule->NetworkModule\n\n\n\n\n\nNetworkService\n\nNetworkService\n\nNetworkModule -->\n\nNetworkService->NetworkModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/network/network.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     NetworkService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    WeatherModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { WeatherModule } from './weather/weather.module';\n\nimport { NetworkService } from './network.service';\n\n@NgModule({\n    imports: [WeatherModule],\n    declarations: [],\n    providers: [NetworkService]\n})\nexport class NetworkModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Node.html":{"url":"classes/Node.html","title":"class - Node","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Node\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                Node represents a specific point on the earth's surface defined by its latitude and longitude.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                count\n                            \n                            \n                                    Public\n                                drawingOptions\n                            \n                            \n                                    Public\n                                incomingEdges\n                            \n                            \n                                    Public\n                                label\n                            \n                            \n                                    Public\n                                lat\n                            \n                            \n                                    Public\n                                lon\n                            \n                            \n                                    Public\n                                nodeId\n                            \n                            \n                                    Public\n                                outgoingEdges\n                            \n                            \n                                    Public\n                                tags\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(nodeId: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/graph.ts:84\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        nodeId\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            count\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        count:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:84\n                            \n                        \n\n                \n                    \n                        Used by the k shortest path routing.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            drawingOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        drawingOptions:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            incomingEdges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        incomingEdges:     Edge[]\n\n                    \n                \n                    \n                        \n                            Type :     Edge[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            label\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        label:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lat\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lat:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:69\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lon:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nodeId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nodeId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            outgoingEdges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        outgoingEdges:     Edge[]\n\n                    \n                \n                    \n                        \n                            Type :     Edge[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tags:     Tag[]\n\n                    \n                \n                    \n                        \n                            Type :     Tag[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:73\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\n\nimport * as combine from 'mout/array/combine';\n\nimport { Heap, Path } from './k-shortest-path';\nimport { round } from '../utils';\nimport { environment } from '../../environments/environment';\nimport { uiConfig } from '../ui/ui-config';\n\nexport enum PathType {\n    distance = 'distance',\n    duration = 'duration'\n}\n\n/**\n * An O/D pair is described by the origin and destination nodes, and the type of path.\n */\nexport interface OdPair {\n\n    origin: string;\n    destination: string;\n    pathType: PathType;\n\n}\n\nexport interface LinkFlow {\n\n    /**\n     * linkFlow attribute.\n     */\n    value: number;\n    /**\n     * Variance is the inverse of density.\n     */\n    variance: number;\n\n}\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public label: string;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    public drawingOptions: { marker?: google.maps.Marker } = {};\n\n    /**\n     * Used by the k shortest path routing.\n     */\n    public count: number = 0;\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public label: string;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    /**\n     * Free flow speed (m/s).\n     */\n    public freeFlowVelocity: number;\n\n    /**\n     * Instant speed (m/s).\n     */\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    /**\n     * Number of vehicles calculated from traffic data.\n     */\n    public linkFlow: number;\n\n    /**\n     * Maximum flow of the link.\n     */\n    public maxFlow: number;\n\n    public drawingOptions: {\n        path?: google.maps.LatLng[],\n        polyline?: google.maps.Polyline,\n        marker?: google.maps.Marker,\n        infowindow?: google.maps.InfoWindow\n    } = {};\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the link flow.\n     */\n    public calcLinkFlow(): void {\n        // Min distance is 1 meter.\n        if (this.distance == 0) { this.distance = 1; }\n        // Min duration is 1 second.\n        if (this.duration == 0) {\n            this.duration = round(this.distance / (50 / 3.6)) > 1 ? round(this.distance / (50 / 3.6)) : 1;\n        }\n        // Calculates free flow velocity (m/s).\n        this.freeFlowVelocity = round(this.distance / this.duration, 2);\n        // Calculates link flow.\n        if (this.durationInTraffic > 0 && this.durationInTraffic >= this.duration) {\n            // Calculates velocity (m/s).\n            this.velocity = round(this.distance / this.durationInTraffic, 2);\n            // Calculates density.\n            this.density = round(this.getKjam() * (this.freeFlowVelocity - this.velocity) / this.freeFlowVelocity, 2);\n            // Calculates flow.\n            this.flow = round(this.density * this.velocity, 2);\n            // Calculates link flow.\n            this.linkFlow = round(this.density * this.distance);\n        } else {\n            this.velocity = 0;\n            this.density = 0;\n            this.flow = 0;\n            this.linkFlow = 0;\n        }\n    }\n\n    /**\n     * Calculates the max flow of the edge.\n     * @param factor Weather Adjustment Factor\n     */\n    public calcMaxFlow(factor: number): void {\n        const maxFlow = this.getKjam() * this.freeFlowVelocity;\n        this.maxFlow = round(maxFlow * factor, 2);\n    }\n\n    /**\n     * Gets the variance of measurement error of link flow.\n     */\n    public getVariance(): number {\n        return this.density > 0 ? round(1 / this.density, 2) : 1;\n    }\n\n    protected getKjam(): number {\n        return round(1 / uiConfig.sp, 2);\n    }\n\n    protected getCapacity(timeInterval: number): number {\n        return this.maxFlow * timeInterval;\n    }\n\n    protected draw(color: string, zIndex: number = 10): void {\n        this.drawingOptions.polyline.set('strokeColor', color);\n        this.drawingOptions.polyline.set('zIndex', zIndex);\n        this.drawingOptions.marker.set('visible', true);\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    protected nodes: Node[] = [];\n\n    protected edges: Edge[] = [];\n\n    protected relations: Relation[] = [];\n\n    /**\n     * Paths for each O/D pair [pairs,paths,edges].\n     */\n    protected shortestPaths: Edge[][][] = [];\n\n    protected incidenceMatrix: boolean[][][] = [];\n\n    protected assignmentMatrix: number[][][] = [];\n\n    private heap: Heap;\n\n    /**\n     * Shortest paths drawing options.\n     */\n    private drawingOptions: {\n        polylines?: google.maps.Polyline[][];\n    } = {};\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public getEdge(edgeId: number): Edge {\n        return this.edges.find((edge: Edge) => edge.edgeId == edgeId);\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Key:oneway\n     * @param edgeId Id of the edge\n     */\n    public isOneway(edgeId: number): boolean {\n        return !!this.getEdge(edgeId).tags.find(tag => tag.key == 'oneway' && tag.value != 'no') ||\n            this.isRoundabout(edgeId);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Tag:junction%3Droundabout\n     * @param edgeId Id of the edge\n     */\n    public isRoundabout(edgeId: number): boolean {\n        return this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'roundabout') ||\n            this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'circular') ?\n            true : false;\n    }\n\n    public getOdNode(label: string): Node {\n        return this.nodes.find((node: Node) => node.label == label);\n    }\n\n    public getOdNodes(): Node[] {\n        return this.nodes.filter((node: Node) => node.label);\n    }\n\n    /**\n     * Calculates the set of minimum paths.\n     * @param odPairs The O/D pairs\n     */\n    public calcShortestPaths(odPairs: OdPair[]): Observable {\n        try {\n            for (let i = 0; i  edge.label);\n    }\n\n    /**\n     * Calculates the incidence matrix of paths for O/D pairs.\n     */\n    public calcIncidenceMatrix(): Observable {\n        const edges = this.getPathsEdges();\n        for (let z = 0; z  value.edgeId == edges[m].edgeId)) {\n                        // The path crosses the edge.\n                        this.incidenceMatrix[z][n][m] = true;\n                    } else {\n                        // The path does not cross the edge.\n                        this.incidenceMatrix[z][n][m] = false;\n                    }\n                }\n            }\n        }\n        return of(null);\n    }\n\n    public getIncidenceMatrix(): boolean[][][] {\n        return this.incidenceMatrix;\n    }\n\n    /**\n     * Calculates the assignment matrix.\n     * @param odPairs The O/D pairs\n     */\n    public calcAssignmentMatrix(odPairs: OdPair[]): Observable {\n        // Calculates the probabilities of shortest paths.\n        const shortestPathsProbabilities = this.calcShortestPathsProbabilities(odPairs);\n\n        // Assignment matrix.\n        for (let z = 0; z  {\n        for (const edge of this.edges) {\n            edge.calcMaxFlow(factor);\n        }\n        return of(null);\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link distance or duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param o Source node\n     * @param d Destination node\n     * @param pathType Distance or duration\n     * @param k The number of shortest paths to compute\n     * @returns The set of shortest paths\n     */\n    private ksp(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Sets to zero the count property of the nodes.\n        this.resetCount();\n        // Instantiates the heap.\n        this.heap = new Heap();\n        // Inserts the path of origin into heap with cost 0.\n        this.heap.push({ pathId: 0, node: o, edges: [], cost: 0 });\n        // Walks the graph.\n        return this.walk(o, d, pathType, k);\n    }\n\n    /**\n     * Breadth First Search (BFS) algorithm for traversing and searching tree data\n     * explores the neighbor nodes first, before moving to the next level neighbors.\n     */\n    private walk(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Set of shortest paths from origin to destination.\n        const shortestPaths: Path[] = [];\n\n        let pathId = 1;\n        let node: Node;\n        while (this.heap.getPaths().length > 0 && d.count  edge.origin.nodeId == node.nodeId) ? false : true;\n    }\n\n    private resetCount(): void {\n        for (const node of this.nodes) {\n            node.count = 0;\n        }\n    }\n\n    /**\n     * Removes the alternative paths that differ only for two links.\n     * @param shortestPaths The shortest paths as created by the algorithm\n     */\n    private filterPaths(shortestPaths: Path[]): void {\n        if (shortestPaths.length > 1) {\n            let i = 0;\n            do {\n                const pathA = shortestPaths[i].edges;\n                const pathB = shortestPaths[i + 1].edges;\n                const sharedEdges = pathA.filter((edgeOfA: Edge) =>\n                    pathB.find((edgeOfB: Edge) =>\n                        edgeOfB.edgeId == edgeOfA.edgeId));\n                if (pathA.length - sharedEdges.length  value.edgeId == edge.edgeId)) {\n                        edges.push(edge);\n                        edge.label = 'E' + count++;\n                        if (!environment.testing) {\n                            edge.drawingOptions.infowindow.setContent('Edge: ' + edge.label);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Multinomial logit model.\n     * @param odPairs The O/D pairs\n     */\n    private calcShortestPathsProbabilities(odPairs: OdPair[]): number[][] {\n        // Gets the total cost of paths.\n        const pathCosts = this.calcPathCosts(odPairs);\n        const shortestPathsProbabilities: number[][] = [];\n        // Theta parameter adjustment.\n        const parameter = uiConfig.theta * 100;\n        // Calculates numerator.\n        const exps: number[][] = [];\n        for (let z = 0; z  {\n                return value > 0 ? Math.exp(-value / parameter) : 0;\n            });\n        }\n        // Calculates denominator.\n        const sumExps: number[] = [];\n        for (let z = 0; z  a + b, 0);\n            sumExps.push(sum);\n        }\n        // Probabilities.\n        for (let z = 0; z  0 ? round(exps[z][n] / sumExps[z], 3) : 0;\n                shortestPathsProbabilities[z].push(p);\n            }\n        }\n        return shortestPathsProbabilities;\n    }\n\n    private calcPathCosts(odPairs: OdPair[]): number[][] {\n        const pathCosts: number[][] = [];\n        for (let z = 0; z \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NumericComponent.html":{"url":"components/NumericComponent.html","title":"component - NumericComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NumericComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/numeric/numeric.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ui-numeric\n            \n\n            \n                styleUrls\n                numeric.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./numeric.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/numeric/numeric.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/numeric/numeric.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/numeric/numeric.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/numeric/numeric.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/numeric/numeric.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     NumericalSimulation[]\n\n                    \n                \n                    \n                        \n                            Type :     NumericalSimulation[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/numeric/numeric.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        displayedColumns:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['edge', 'wayName', 'trafficVolume', 'trafficCount', 'delay', 'stops']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/numeric/numeric.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { Store, select } from '@ngrx/store';\n\nimport * as fromSimulation from '../../simulation/models/reducers';\nimport { Simulation, NumericalSimulation } from '../../simulation/models/simulation-state';\n\nimport { BaseComponent } from '../models/base.component';\n\n@Component({\n    selector: 'ui-numeric',\n    templateUrl: './numeric.component.html',\n    styleUrls: ['./numeric.component.scss']\n})\nexport class NumericComponent extends BaseComponent implements OnInit {\n\n    data: NumericalSimulation[] = [];\n\n    displayedColumns: string[] = ['edge', 'wayName', 'trafficVolume', 'trafficCount', 'delay', 'stops'];\n\n    constructor(\n        private store: Store\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        //\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromSimulation.simulation)).subscribe((simulation: Simulation) => {\n            if (simulation && simulation.data) {\n                this.data = simulation.data;\n            }\n        }));\n    }\n\n    sendActions(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    \n         Edge \n         {{ element.edge }} \n    \n    \n         Way name \n         {{ element.wayName }} \n    \n    \n         Traffic volume \n         {{ element.trafficVolume }} \n    \n    \n         Traffic count \n         {{ element.trafficCount }} \n    \n    \n         Delay (s) \n         {{ element.delay }} \n    \n    \n         Stops (s) \n         {{ element.stops }} \n    \n    \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             Edge          {{ element.edge }}                  Way name          {{ element.wayName }}                  Traffic volume          {{ element.trafficVolume }}                  Traffic count          {{ element.trafficCount }}                  Delay (s)          {{ element.delay }}                  Stops (s)          {{ element.stops }}             '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NumericComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NumericalSimulation.html":{"url":"interfaces/NumericalSimulation.html","title":"interface - NumericalSimulation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NumericalSimulation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/models/simulation-state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        delay\n                                \n                                \n                                        edge\n                                \n                                \n                                        stops\n                                \n                                \n                                        trafficCount\n                                \n                                \n                                        trafficVolume\n                                \n                                \n                                        wayName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        delay\n                                    \n                                \n                                \n                                    \n                                        delay:     number | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        edge\n                                    \n                                \n                                \n                                    \n                                        edge:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stops\n                                    \n                                \n                                \n                                    \n                                        stops:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trafficCount\n                                    \n                                \n                                \n                                    \n                                        trafficCount:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trafficVolume\n                                    \n                                \n                                \n                                    \n                                        trafficVolume:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wayName\n                                    \n                                \n                                \n                                    \n                                        wayName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface NumericalSimulation {\n\n    edge: string;\n    wayName: string;\n    trafficVolume: number;\n    trafficCount: number;\n    delay: number | string;\n    stops: number;\n\n}\n\nexport interface Counts {\n\n    startedVehicles: number;\n    arrivedVehicles: number;\n\n}\n\nexport interface Simulation {\n\n    /**\n     * Simulation data.\n     */\n    data: NumericalSimulation[];\n    /**\n     * Simulation counts.\n     */\n    counts: Counts;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OdPair.html":{"url":"interfaces/OdPair.html","title":"interface - OdPair","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OdPair\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                An O/D pair is described by the origin and destination nodes, and the type of path.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        destination\n                                \n                                \n                                        origin\n                                \n                                \n                                        pathType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                    \n                                \n                                \n                                    \n                                        destination:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        origin\n                                    \n                                \n                                \n                                    \n                                        origin:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pathType\n                                    \n                                \n                                \n                                    \n                                        pathType:     PathType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PathType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\n\nimport * as combine from 'mout/array/combine';\n\nimport { Heap, Path } from './k-shortest-path';\nimport { round } from '../utils';\nimport { environment } from '../../environments/environment';\nimport { uiConfig } from '../ui/ui-config';\n\nexport enum PathType {\n    distance = 'distance',\n    duration = 'duration'\n}\n\n/**\n * An O/D pair is described by the origin and destination nodes, and the type of path.\n */\nexport interface OdPair {\n\n    origin: string;\n    destination: string;\n    pathType: PathType;\n\n}\n\nexport interface LinkFlow {\n\n    /**\n     * linkFlow attribute.\n     */\n    value: number;\n    /**\n     * Variance is the inverse of density.\n     */\n    variance: number;\n\n}\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public label: string;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    public drawingOptions: { marker?: google.maps.Marker } = {};\n\n    /**\n     * Used by the k shortest path routing.\n     */\n    public count: number = 0;\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public label: string;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    /**\n     * Free flow speed (m/s).\n     */\n    public freeFlowVelocity: number;\n\n    /**\n     * Instant speed (m/s).\n     */\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    /**\n     * Number of vehicles calculated from traffic data.\n     */\n    public linkFlow: number;\n\n    /**\n     * Maximum flow of the link.\n     */\n    public maxFlow: number;\n\n    public drawingOptions: {\n        path?: google.maps.LatLng[],\n        polyline?: google.maps.Polyline,\n        marker?: google.maps.Marker,\n        infowindow?: google.maps.InfoWindow\n    } = {};\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the link flow.\n     */\n    public calcLinkFlow(): void {\n        // Min distance is 1 meter.\n        if (this.distance == 0) { this.distance = 1; }\n        // Min duration is 1 second.\n        if (this.duration == 0) {\n            this.duration = round(this.distance / (50 / 3.6)) > 1 ? round(this.distance / (50 / 3.6)) : 1;\n        }\n        // Calculates free flow velocity (m/s).\n        this.freeFlowVelocity = round(this.distance / this.duration, 2);\n        // Calculates link flow.\n        if (this.durationInTraffic > 0 && this.durationInTraffic >= this.duration) {\n            // Calculates velocity (m/s).\n            this.velocity = round(this.distance / this.durationInTraffic, 2);\n            // Calculates density.\n            this.density = round(this.getKjam() * (this.freeFlowVelocity - this.velocity) / this.freeFlowVelocity, 2);\n            // Calculates flow.\n            this.flow = round(this.density * this.velocity, 2);\n            // Calculates link flow.\n            this.linkFlow = round(this.density * this.distance);\n        } else {\n            this.velocity = 0;\n            this.density = 0;\n            this.flow = 0;\n            this.linkFlow = 0;\n        }\n    }\n\n    /**\n     * Calculates the max flow of the edge.\n     * @param factor Weather Adjustment Factor\n     */\n    public calcMaxFlow(factor: number): void {\n        const maxFlow = this.getKjam() * this.freeFlowVelocity;\n        this.maxFlow = round(maxFlow * factor, 2);\n    }\n\n    /**\n     * Gets the variance of measurement error of link flow.\n     */\n    public getVariance(): number {\n        return this.density > 0 ? round(1 / this.density, 2) : 1;\n    }\n\n    protected getKjam(): number {\n        return round(1 / uiConfig.sp, 2);\n    }\n\n    protected getCapacity(timeInterval: number): number {\n        return this.maxFlow * timeInterval;\n    }\n\n    protected draw(color: string, zIndex: number = 10): void {\n        this.drawingOptions.polyline.set('strokeColor', color);\n        this.drawingOptions.polyline.set('zIndex', zIndex);\n        this.drawingOptions.marker.set('visible', true);\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    protected nodes: Node[] = [];\n\n    protected edges: Edge[] = [];\n\n    protected relations: Relation[] = [];\n\n    /**\n     * Paths for each O/D pair [pairs,paths,edges].\n     */\n    protected shortestPaths: Edge[][][] = [];\n\n    protected incidenceMatrix: boolean[][][] = [];\n\n    protected assignmentMatrix: number[][][] = [];\n\n    private heap: Heap;\n\n    /**\n     * Shortest paths drawing options.\n     */\n    private drawingOptions: {\n        polylines?: google.maps.Polyline[][];\n    } = {};\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public getEdge(edgeId: number): Edge {\n        return this.edges.find((edge: Edge) => edge.edgeId == edgeId);\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Key:oneway\n     * @param edgeId Id of the edge\n     */\n    public isOneway(edgeId: number): boolean {\n        return !!this.getEdge(edgeId).tags.find(tag => tag.key == 'oneway' && tag.value != 'no') ||\n            this.isRoundabout(edgeId);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Tag:junction%3Droundabout\n     * @param edgeId Id of the edge\n     */\n    public isRoundabout(edgeId: number): boolean {\n        return this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'roundabout') ||\n            this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'circular') ?\n            true : false;\n    }\n\n    public getOdNode(label: string): Node {\n        return this.nodes.find((node: Node) => node.label == label);\n    }\n\n    public getOdNodes(): Node[] {\n        return this.nodes.filter((node: Node) => node.label);\n    }\n\n    /**\n     * Calculates the set of minimum paths.\n     * @param odPairs The O/D pairs\n     */\n    public calcShortestPaths(odPairs: OdPair[]): Observable {\n        try {\n            for (let i = 0; i  edge.label);\n    }\n\n    /**\n     * Calculates the incidence matrix of paths for O/D pairs.\n     */\n    public calcIncidenceMatrix(): Observable {\n        const edges = this.getPathsEdges();\n        for (let z = 0; z  value.edgeId == edges[m].edgeId)) {\n                        // The path crosses the edge.\n                        this.incidenceMatrix[z][n][m] = true;\n                    } else {\n                        // The path does not cross the edge.\n                        this.incidenceMatrix[z][n][m] = false;\n                    }\n                }\n            }\n        }\n        return of(null);\n    }\n\n    public getIncidenceMatrix(): boolean[][][] {\n        return this.incidenceMatrix;\n    }\n\n    /**\n     * Calculates the assignment matrix.\n     * @param odPairs The O/D pairs\n     */\n    public calcAssignmentMatrix(odPairs: OdPair[]): Observable {\n        // Calculates the probabilities of shortest paths.\n        const shortestPathsProbabilities = this.calcShortestPathsProbabilities(odPairs);\n\n        // Assignment matrix.\n        for (let z = 0; z  {\n        for (const edge of this.edges) {\n            edge.calcMaxFlow(factor);\n        }\n        return of(null);\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link distance or duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param o Source node\n     * @param d Destination node\n     * @param pathType Distance or duration\n     * @param k The number of shortest paths to compute\n     * @returns The set of shortest paths\n     */\n    private ksp(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Sets to zero the count property of the nodes.\n        this.resetCount();\n        // Instantiates the heap.\n        this.heap = new Heap();\n        // Inserts the path of origin into heap with cost 0.\n        this.heap.push({ pathId: 0, node: o, edges: [], cost: 0 });\n        // Walks the graph.\n        return this.walk(o, d, pathType, k);\n    }\n\n    /**\n     * Breadth First Search (BFS) algorithm for traversing and searching tree data\n     * explores the neighbor nodes first, before moving to the next level neighbors.\n     */\n    private walk(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Set of shortest paths from origin to destination.\n        const shortestPaths: Path[] = [];\n\n        let pathId = 1;\n        let node: Node;\n        while (this.heap.getPaths().length > 0 && d.count  edge.origin.nodeId == node.nodeId) ? false : true;\n    }\n\n    private resetCount(): void {\n        for (const node of this.nodes) {\n            node.count = 0;\n        }\n    }\n\n    /**\n     * Removes the alternative paths that differ only for two links.\n     * @param shortestPaths The shortest paths as created by the algorithm\n     */\n    private filterPaths(shortestPaths: Path[]): void {\n        if (shortestPaths.length > 1) {\n            let i = 0;\n            do {\n                const pathA = shortestPaths[i].edges;\n                const pathB = shortestPaths[i + 1].edges;\n                const sharedEdges = pathA.filter((edgeOfA: Edge) =>\n                    pathB.find((edgeOfB: Edge) =>\n                        edgeOfB.edgeId == edgeOfA.edgeId));\n                if (pathA.length - sharedEdges.length  value.edgeId == edge.edgeId)) {\n                        edges.push(edge);\n                        edge.label = 'E' + count++;\n                        if (!environment.testing) {\n                            edge.drawingOptions.infowindow.setContent('Edge: ' + edge.label);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Multinomial logit model.\n     * @param odPairs The O/D pairs\n     */\n    private calcShortestPathsProbabilities(odPairs: OdPair[]): number[][] {\n        // Gets the total cost of paths.\n        const pathCosts = this.calcPathCosts(odPairs);\n        const shortestPathsProbabilities: number[][] = [];\n        // Theta parameter adjustment.\n        const parameter = uiConfig.theta * 100;\n        // Calculates numerator.\n        const exps: number[][] = [];\n        for (let z = 0; z  {\n                return value > 0 ? Math.exp(-value / parameter) : 0;\n            });\n        }\n        // Calculates denominator.\n        const sumExps: number[] = [];\n        for (let z = 0; z  a + b, 0);\n            sumExps.push(sum);\n        }\n        // Probabilities.\n        for (let z = 0; z  0 ? round(exps[z][n] / sumExps[z], 3) : 0;\n                shortestPathsProbabilities[z].push(p);\n            }\n        }\n        return shortestPathsProbabilities;\n    }\n\n    private calcPathCosts(odPairs: OdPair[]): number[][] {\n        const pathCosts: number[][] = [];\n        for (let z = 0; z \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Path.html":{"url":"interfaces/Path.html","title":"interface - Path","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Path\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/k-shortest-path.ts\n        \n\n            \n                Description\n            \n            \n                Path to generic node.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        cost\n                                \n                                \n                                        edges\n                                \n                                \n                                        node\n                                \n                                \n                                        pathId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cost\n                                    \n                                \n                                \n                                    \n                                        cost:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        edges\n                                    \n                                \n                                \n                                    \n                                        edges:     Edge[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Edge[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        node\n                                    \n                                \n                                \n                                    \n                                        node:     Node\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Node\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pathId\n                                    \n                                \n                                \n                                    \n                                        pathId:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Edge, Node } from \"./graph\";\n\n/**\n * Path to generic node.\n */\nexport interface Path {\n\n    pathId: number;\n    node: Node;\n    edges: Edge[];\n    cost: number;\n\n}\n\n/**\n * Heap data structure containing paths.\n */\nexport class Heap {\n\n    /**\n     * The queue of paths.\n     */\n    private paths: Path[] = [];\n\n    /**\n     * Inserts a path into the heap.\n     * @param path The path to insert\n     */\n    public push(path: Path): void {\n        this.paths.push({ pathId: path.pathId, node: path.node, edges: path.edges, cost: path.cost });\n    }\n\n    /**\n     * Removes a path from the heap.\n     * @param pathId The id of the path\n     */\n    public pop(pathId: number): void {\n        const index = this.paths.findIndex((path: Path) => path.pathId == pathId);\n        this.paths.splice(index, 1);\n    }\n\n    /**\n     * Returns the shortest path in the heap by cost.\n     */\n    public getShortestPath(): Path {\n        return this.paths.reduce((prev: Path, curr: Path) => prev.cost \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PeriodsChanged.html":{"url":"classes/PeriodsChanged.html","title":"class - PeriodsChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  PeriodsChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/models/actions/simulation.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/simulation/models/actions/simulation.actions.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/models/actions/simulation.actions.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : SimulationActionTypes.PeriodsChanged\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/models/actions/simulation.actions.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Simulation } from '../simulation-state';\n\n/**\n * ngrx: simulation Actions.\n */\nexport enum SimulationActionTypes {\n\n    SimulationChanged = '[Simulation] Simulation Changed',\n    SimulationEnded = '[Simulation] Simulation Ended',\n    PeriodsChanged = '[Simulation] Periods Changed',\n    Reset = '[Simulation] Reset'\n\n}\n\nexport class SimulationChanged implements Action {\n\n    public readonly type: string = SimulationActionTypes.SimulationChanged;\n\n    constructor(public payload: { simulation: Simulation }) { }\n\n}\n\nexport class SimulationEnded implements Action {\n\n    public readonly type: string = SimulationActionTypes.SimulationEnded;\n\n    constructor(public payload: boolean) { }\n\n}\n\nexport class PeriodsChanged implements Action {\n\n    public readonly type: string = SimulationActionTypes.PeriodsChanged;\n\n    constructor(public payload: any) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = SimulationActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type SimulationActions = SimulationChanged | SimulationEnded | PeriodsChanged | Reset;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PrivacyComponent.html":{"url":"components/PrivacyComponent.html","title":"component - PrivacyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PrivacyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/privacy/privacy.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-privacy\n            \n\n            \n                styleUrls\n                privacy.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./privacy.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/privacy/privacy.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/privacy/privacy.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-privacy',\n    templateUrl: './privacy.component.html',\n    styleUrls: ['./privacy.component.scss']\n})\nexport class PrivacyComponent implements OnInit {\n\n    constructor() { }\n\n    ngOnInit(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            Privacy Policy of STRADA\n        \n        \n            This privacy policy describes how your personal data are used and protected by the application\n                STRADA\n            \n            The information is provided pursuant to art. 13 of Legislative Decree no. 196/2003 and EU Regulation 2016/679\n                General Data Protection Regulation (GDPR).\n            \n            Categories of processed data\n            The app does not collect any personal data.\n            Data you provide voluntarily\n            The data and the results are displayed by the app for the time in which you remain connected, and no data is\n                in any way acquired or saved.\n            Cookies\n            The app makes no use of cookies, neither profiling nor technical.\n            External services\n            The app uses Google Maps APIs, for which please refer to its privacy policy:\n                Google Privacy Policy\n            \n        \n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Privacy Policy of STRADA                            This privacy policy describes how your personal data are used and protected by the application                STRADA                        The information is provided pursuant to art. 13 of Legislative Decree no. 196/2003 and EU Regulation 2016/679                General Data Protection Regulation (GDPR).                        Categories of processed data            The app does not collect any personal data.            Data you provide voluntarily            The data and the results are displayed by the app for the time in which you remain connected, and no data is                in any way acquired or saved.            Cookies            The app makes no use of cookies, neither profiling nor technical.            External services            The app uses Google Maps APIs, for which please refer to its privacy policy:                Google Privacy Policy                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PrivacyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Relation.html":{"url":"classes/Relation.html","title":"class - Relation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Relation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                members\n                            \n                            \n                                    Public\n                                relationId\n                            \n                            \n                                    Public\n                                tags\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(relationId: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/graph.ts:228\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        relationId\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            members\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        members:     Member[]\n\n                    \n                \n                    \n                        \n                            Type :     Member[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:226\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            relationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        relationId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:224\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tags:     Tag[]\n\n                    \n                \n                    \n                        \n                            Type :     Tag[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:228\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\n\nimport * as combine from 'mout/array/combine';\n\nimport { Heap, Path } from './k-shortest-path';\nimport { round } from '../utils';\nimport { environment } from '../../environments/environment';\nimport { uiConfig } from '../ui/ui-config';\n\nexport enum PathType {\n    distance = 'distance',\n    duration = 'duration'\n}\n\n/**\n * An O/D pair is described by the origin and destination nodes, and the type of path.\n */\nexport interface OdPair {\n\n    origin: string;\n    destination: string;\n    pathType: PathType;\n\n}\n\nexport interface LinkFlow {\n\n    /**\n     * linkFlow attribute.\n     */\n    value: number;\n    /**\n     * Variance is the inverse of density.\n     */\n    variance: number;\n\n}\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public label: string;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    public drawingOptions: { marker?: google.maps.Marker } = {};\n\n    /**\n     * Used by the k shortest path routing.\n     */\n    public count: number = 0;\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public label: string;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    /**\n     * Free flow speed (m/s).\n     */\n    public freeFlowVelocity: number;\n\n    /**\n     * Instant speed (m/s).\n     */\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    /**\n     * Number of vehicles calculated from traffic data.\n     */\n    public linkFlow: number;\n\n    /**\n     * Maximum flow of the link.\n     */\n    public maxFlow: number;\n\n    public drawingOptions: {\n        path?: google.maps.LatLng[],\n        polyline?: google.maps.Polyline,\n        marker?: google.maps.Marker,\n        infowindow?: google.maps.InfoWindow\n    } = {};\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the link flow.\n     */\n    public calcLinkFlow(): void {\n        // Min distance is 1 meter.\n        if (this.distance == 0) { this.distance = 1; }\n        // Min duration is 1 second.\n        if (this.duration == 0) {\n            this.duration = round(this.distance / (50 / 3.6)) > 1 ? round(this.distance / (50 / 3.6)) : 1;\n        }\n        // Calculates free flow velocity (m/s).\n        this.freeFlowVelocity = round(this.distance / this.duration, 2);\n        // Calculates link flow.\n        if (this.durationInTraffic > 0 && this.durationInTraffic >= this.duration) {\n            // Calculates velocity (m/s).\n            this.velocity = round(this.distance / this.durationInTraffic, 2);\n            // Calculates density.\n            this.density = round(this.getKjam() * (this.freeFlowVelocity - this.velocity) / this.freeFlowVelocity, 2);\n            // Calculates flow.\n            this.flow = round(this.density * this.velocity, 2);\n            // Calculates link flow.\n            this.linkFlow = round(this.density * this.distance);\n        } else {\n            this.velocity = 0;\n            this.density = 0;\n            this.flow = 0;\n            this.linkFlow = 0;\n        }\n    }\n\n    /**\n     * Calculates the max flow of the edge.\n     * @param factor Weather Adjustment Factor\n     */\n    public calcMaxFlow(factor: number): void {\n        const maxFlow = this.getKjam() * this.freeFlowVelocity;\n        this.maxFlow = round(maxFlow * factor, 2);\n    }\n\n    /**\n     * Gets the variance of measurement error of link flow.\n     */\n    public getVariance(): number {\n        return this.density > 0 ? round(1 / this.density, 2) : 1;\n    }\n\n    protected getKjam(): number {\n        return round(1 / uiConfig.sp, 2);\n    }\n\n    protected getCapacity(timeInterval: number): number {\n        return this.maxFlow * timeInterval;\n    }\n\n    protected draw(color: string, zIndex: number = 10): void {\n        this.drawingOptions.polyline.set('strokeColor', color);\n        this.drawingOptions.polyline.set('zIndex', zIndex);\n        this.drawingOptions.marker.set('visible', true);\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    protected nodes: Node[] = [];\n\n    protected edges: Edge[] = [];\n\n    protected relations: Relation[] = [];\n\n    /**\n     * Paths for each O/D pair [pairs,paths,edges].\n     */\n    protected shortestPaths: Edge[][][] = [];\n\n    protected incidenceMatrix: boolean[][][] = [];\n\n    protected assignmentMatrix: number[][][] = [];\n\n    private heap: Heap;\n\n    /**\n     * Shortest paths drawing options.\n     */\n    private drawingOptions: {\n        polylines?: google.maps.Polyline[][];\n    } = {};\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public getEdge(edgeId: number): Edge {\n        return this.edges.find((edge: Edge) => edge.edgeId == edgeId);\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Key:oneway\n     * @param edgeId Id of the edge\n     */\n    public isOneway(edgeId: number): boolean {\n        return !!this.getEdge(edgeId).tags.find(tag => tag.key == 'oneway' && tag.value != 'no') ||\n            this.isRoundabout(edgeId);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Tag:junction%3Droundabout\n     * @param edgeId Id of the edge\n     */\n    public isRoundabout(edgeId: number): boolean {\n        return this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'roundabout') ||\n            this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'circular') ?\n            true : false;\n    }\n\n    public getOdNode(label: string): Node {\n        return this.nodes.find((node: Node) => node.label == label);\n    }\n\n    public getOdNodes(): Node[] {\n        return this.nodes.filter((node: Node) => node.label);\n    }\n\n    /**\n     * Calculates the set of minimum paths.\n     * @param odPairs The O/D pairs\n     */\n    public calcShortestPaths(odPairs: OdPair[]): Observable {\n        try {\n            for (let i = 0; i  edge.label);\n    }\n\n    /**\n     * Calculates the incidence matrix of paths for O/D pairs.\n     */\n    public calcIncidenceMatrix(): Observable {\n        const edges = this.getPathsEdges();\n        for (let z = 0; z  value.edgeId == edges[m].edgeId)) {\n                        // The path crosses the edge.\n                        this.incidenceMatrix[z][n][m] = true;\n                    } else {\n                        // The path does not cross the edge.\n                        this.incidenceMatrix[z][n][m] = false;\n                    }\n                }\n            }\n        }\n        return of(null);\n    }\n\n    public getIncidenceMatrix(): boolean[][][] {\n        return this.incidenceMatrix;\n    }\n\n    /**\n     * Calculates the assignment matrix.\n     * @param odPairs The O/D pairs\n     */\n    public calcAssignmentMatrix(odPairs: OdPair[]): Observable {\n        // Calculates the probabilities of shortest paths.\n        const shortestPathsProbabilities = this.calcShortestPathsProbabilities(odPairs);\n\n        // Assignment matrix.\n        for (let z = 0; z  {\n        for (const edge of this.edges) {\n            edge.calcMaxFlow(factor);\n        }\n        return of(null);\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link distance or duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param o Source node\n     * @param d Destination node\n     * @param pathType Distance or duration\n     * @param k The number of shortest paths to compute\n     * @returns The set of shortest paths\n     */\n    private ksp(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Sets to zero the count property of the nodes.\n        this.resetCount();\n        // Instantiates the heap.\n        this.heap = new Heap();\n        // Inserts the path of origin into heap with cost 0.\n        this.heap.push({ pathId: 0, node: o, edges: [], cost: 0 });\n        // Walks the graph.\n        return this.walk(o, d, pathType, k);\n    }\n\n    /**\n     * Breadth First Search (BFS) algorithm for traversing and searching tree data\n     * explores the neighbor nodes first, before moving to the next level neighbors.\n     */\n    private walk(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Set of shortest paths from origin to destination.\n        const shortestPaths: Path[] = [];\n\n        let pathId = 1;\n        let node: Node;\n        while (this.heap.getPaths().length > 0 && d.count  edge.origin.nodeId == node.nodeId) ? false : true;\n    }\n\n    private resetCount(): void {\n        for (const node of this.nodes) {\n            node.count = 0;\n        }\n    }\n\n    /**\n     * Removes the alternative paths that differ only for two links.\n     * @param shortestPaths The shortest paths as created by the algorithm\n     */\n    private filterPaths(shortestPaths: Path[]): void {\n        if (shortestPaths.length > 1) {\n            let i = 0;\n            do {\n                const pathA = shortestPaths[i].edges;\n                const pathB = shortestPaths[i + 1].edges;\n                const sharedEdges = pathA.filter((edgeOfA: Edge) =>\n                    pathB.find((edgeOfB: Edge) =>\n                        edgeOfB.edgeId == edgeOfA.edgeId));\n                if (pathA.length - sharedEdges.length  value.edgeId == edge.edgeId)) {\n                        edges.push(edge);\n                        edge.label = 'E' + count++;\n                        if (!environment.testing) {\n                            edge.drawingOptions.infowindow.setContent('Edge: ' + edge.label);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Multinomial logit model.\n     * @param odPairs The O/D pairs\n     */\n    private calcShortestPathsProbabilities(odPairs: OdPair[]): number[][] {\n        // Gets the total cost of paths.\n        const pathCosts = this.calcPathCosts(odPairs);\n        const shortestPathsProbabilities: number[][] = [];\n        // Theta parameter adjustment.\n        const parameter = uiConfig.theta * 100;\n        // Calculates numerator.\n        const exps: number[][] = [];\n        for (let z = 0; z  {\n                return value > 0 ? Math.exp(-value / parameter) : 0;\n            });\n        }\n        // Calculates denominator.\n        const sumExps: number[] = [];\n        for (let z = 0; z  a + b, 0);\n            sumExps.push(sum);\n        }\n        // Probabilities.\n        for (let z = 0; z  0 ? round(exps[z][n] / sumExps[z], 3) : 0;\n                shortestPathsProbabilities[z].push(p);\n            }\n        }\n        return shortestPathsProbabilities;\n    }\n\n    private calcPathCosts(odPairs: OdPair[]): number[][] {\n        const pathCosts: number[][] = [];\n        for (let z = 0; z \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reset.html":{"url":"classes/Reset.html","title":"class - Reset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/models/actions/simulation.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/simulation/models/actions/simulation.actions.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/models/actions/simulation.actions.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : SimulationActionTypes.Reset\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/models/actions/simulation.actions.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Simulation } from '../simulation-state';\n\n/**\n * ngrx: simulation Actions.\n */\nexport enum SimulationActionTypes {\n\n    SimulationChanged = '[Simulation] Simulation Changed',\n    SimulationEnded = '[Simulation] Simulation Ended',\n    PeriodsChanged = '[Simulation] Periods Changed',\n    Reset = '[Simulation] Reset'\n\n}\n\nexport class SimulationChanged implements Action {\n\n    public readonly type: string = SimulationActionTypes.SimulationChanged;\n\n    constructor(public payload: { simulation: Simulation }) { }\n\n}\n\nexport class SimulationEnded implements Action {\n\n    public readonly type: string = SimulationActionTypes.SimulationEnded;\n\n    constructor(public payload: boolean) { }\n\n}\n\nexport class PeriodsChanged implements Action {\n\n    public readonly type: string = SimulationActionTypes.PeriodsChanged;\n\n    constructor(public payload: any) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = SimulationActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type SimulationActions = SimulationChanged | SimulationEnded | PeriodsChanged | Reset;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SchedulerService.html":{"url":"injectables/SchedulerService.html","title":"injectable - SchedulerService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SchedulerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/wizard/scheduler.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                reset\n                            \n                            \n                                scheduleDemand\n                            \n                            \n                                scheduleNetwork\n                            \n                            \n                                scheduleSimulation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(wizard: WizardService, map: MapService, location: LocationService, network: NetworkService, weather: WeatherService, demand: DemandService, simulation: SimulationService, clock: ClockService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/scheduler.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                    MapService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    LocationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        weather\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        demand\n                                                  \n                                                        \n                                                                    DemandService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        simulation\n                                                  \n                                                        \n                                                                    SimulationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        clock\n                                                  \n                                                        \n                                                                    ClockService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/scheduler.service.ts:29\n                            \n                        \n\n\n                \n                    \n                            Resets the whole application.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scheduleDemand\n                            \n                            \n                        \n                    \n                \n                \n                    \nscheduleDemand(data: any, index: number, nextIndex: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/scheduler.service.ts:125\n                            \n                        \n\n\n                \n                    \n                            Performs in sequence the following operations:\n\nCalcs shortest paths\nCalcs incidence matrix\nCalcs assignment matrix\nGets traffic data\nCalcs link flows\nCalcs O/D matrix\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        nextIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scheduleNetwork\n                            \n                            \n                        \n                    \n                \n                \n                    \nscheduleNetwork(data: any, index: number, nextIndex: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/scheduler.service.ts:53\n                            \n                        \n\n\n                \n                    \n                            Performs in sequence the following operations:\n\nGets network\nCreates the graph\nGets network data\nAssociates data to the graph\nCorrects graph data\nGets and updates weather data\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        nextIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scheduleSimulation\n                            \n                            \n                        \n                    \n                \n                \n                    \nscheduleSimulation(data: any, index: number, nextIndex: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/scheduler.service.ts:181\n                            \n                        \n\n\n                \n                    \n                            Performs in sequence the following operations:\n\nCalcs max flow for each edge.\nInits the simulation.\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        nextIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { switchMap } from \"rxjs/operators\";\n\nimport { WizardService } from \"./wizard.service\";\nimport { MapService } from \"../map/map.service\";\nimport { LocationService } from \"../../location/location.service\";\nimport { NetworkService } from \"../../network/network.service\";\nimport { WeatherService } from \"../../network/weather/weather.service\";\nimport { DemandService } from \"../../demand/demand.service\";\nimport { SimulationService } from \"../../simulation/simulation.service\";\nimport { ClockService } from \"../../simulation/clock.service\";\n\n@Injectable() export class SchedulerService {\n\n    constructor(\n        private wizard: WizardService,\n        private map: MapService,\n        private location: LocationService,\n        private network: NetworkService,\n        private weather: WeatherService,\n        private demand: DemandService,\n        private simulation: SimulationService,\n        private clock: ClockService\n    ) { }\n\n    /**\n     * Resets the whole application.\n     */\n    public reset(): void {\n        setTimeout(() => {\n            // Wizard.\n            this.wizard.reset();\n            // Services.\n            this.map.reset();\n            this.location.reset();\n            this.network.reset();\n            this.weather.reset();\n            this.demand.reset();\n            this.simulation.reset();\n            this.clock.reset();\n        });\n    }\n\n    /**\n     * Performs in sequence the following operations:\n     * - Gets network\n     * - Creates the graph\n     * - Gets network data\n     * - Associates data to the graph\n     * - Corrects graph data\n     * - Gets and updates weather data\n     */\n    scheduleNetwork(data: any, index: number, nextIndex: number): void {\n        this.wizard.putOnHold('Getting the network');\n        const stream = this.network.getNetwork().pipe(\n            switchMap((response: any) => {\n                this.wizard.putOnHold('Creating the graph');\n                return this.network.createGraph(response);\n            }),\n            switchMap(() => {\n                this.wizard.putOnHold('Getting network data');\n                return this.network.getNetworkData();\n            }),\n            switchMap((response: any) => {\n                this.wizard.putOnHold('Updating the graph');\n                return this.network.updateGraph(response);\n            }),\n            switchMap(() => {\n                this.wizard.putOnHold('Checking the data');\n                return this.network.correctGraph();\n            }),\n            switchMap(() => {\n                this.wizard.putOnHold('Getting weather data');\n                return this.weather.getWeatherData(this.network.getTime());\n            }),\n            switchMap((response: any) => {\n                return this.weather.updateWeatherData(response, this.network.getTime());\n            })\n        );\n\n        stream.subscribe(\n            () => { },\n            (error: any) => {\n                let message: string;\n                switch (error) {\n                    case 'getNetwork':\n                        message = 'Network cannot be retrieved. Check your Internet connection and try again';\n                        break;\n                    case 'createGraph':\n                        message = 'Graph cannnot be created. Please, try with another area';\n                        break;\n                    case 'getNetworkData':\n                        message = 'Network data cannot be retrieved. Past the quota limits traffic data become paid.' +\n                            'This is an open source project: install your own version of it';\n                        break;\n                    case 'correctGraph':\n                        message = 'Graph data are not available. Please, try with another area';\n                        break;\n                    case 'getWeatherData':\n                        message = 'Weather data cannot be retrieved. Please, try at another time';\n                        break;\n                    default:\n                        message = 'Unexpected error';\n                }\n                this.wizard.putInError(message);\n                this.reset();\n            },\n            () => {\n                // Removes from waiting.\n                this.wizard.removeFromWaiting();\n                this.wizard.goOn(data, index, nextIndex);\n            }\n        );\n    }\n\n    /**\n     * Performs in sequence the following operations:\n     * - Calcs shortest paths\n     * - Calcs incidence matrix\n     * - Calcs assignment matrix\n     * - Gets traffic data\n     * - Calcs link flows\n     * - Calcs O/D matrix\n     */\n    scheduleDemand(data: any, index: number, nextIndex: number): void {\n        const graph = this.network.getGraph();\n        const odPairs = this.network.getOdPairs();\n\n        this.wizard.putOnHold('Computing shortest paths');\n        const stream = graph.calcShortestPaths(odPairs).pipe(\n            switchMap(() => {\n                return graph.calcIncidenceMatrix();\n            }),\n            switchMap(() => {\n                return graph.calcAssignmentMatrix(odPairs);\n            }),\n            switchMap(() => {\n                this.wizard.putOnHold('Getting traffic data');\n                return this.network.getTrafficData();\n            }),\n            switchMap((response: any) => {\n                return this.network.calcLinkFlows(response);\n            }),\n            switchMap(() => {\n                this.wizard.putOnHold('Computing demand');\n                return this.demand.calcOdMatrix();\n            })\n        );\n\n        stream.subscribe(\n            () => { },\n            (error: any) => {\n                let message: string;\n                switch (error) {\n                    case 'calcShortestPaths':\n                        message = 'There are no routes. Please, try with another area';\n                        break;\n                    case 'getTrafficData':\n                        message = 'Traffic data cannot be retrieved. Past the quota limits traffic data become paid.' +\n                            'This is an open source project: install your own version of it';\n                        break;\n                    default:\n                        message = 'Unexpected error';\n                }\n                this.wizard.putInError(message);\n                this.reset();\n            },\n            () => {\n                // Removes from waiting.\n                this.wizard.removeFromWaiting();\n                this.wizard.goOn(data, index, nextIndex);\n            }\n        );\n    }\n\n    /**\n     * Performs in sequence the following operations:\n     * - Calcs max flow for each edge.\n     * - Inits the simulation.\n     */\n    scheduleSimulation(data: any, index: number, nextIndex: number): void {\n        const graph = this.network.getGraph();\n        const factors = this.weather.getFactors();\n\n        this.wizard.putOnHold('Computing max flows');\n        const stream = graph.calcMaxflows(factors[0]).pipe(\n            switchMap(() => {\n                this.wizard.putOnHold('Initializing simulation');\n                return this.simulation.init();\n            })\n        );\n\n        stream.subscribe(\n            () => { },\n            (error: any) => {\n                let message: string;\n                switch (error) {\n                    default:\n                        message = 'Unexpected error';\n                }\n                this.wizard.putInError(message);\n                this.reset();\n            },\n            () => {\n                // Removes from waiting.\n                this.wizard.removeFromWaiting();\n                this.wizard.goOn(data, index, nextIndex);\n            }\n        );\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchForTheAreaComponent.html":{"url":"components/SearchForTheAreaComponent.html","title":"component - SearchForTheAreaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SearchForTheAreaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-search-for-the-area\n            \n\n            \n                styleUrls\n                search-for-the-area.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./search-for-the-area.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentPosition\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                search\n                            \n                            \n                                sendActions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(wizard: WizardService, location: LocationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    LocationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCurrentPosition\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCurrentPosition()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            search\n                            \n                            \n                        \n                    \n                \n                \n                    \nsearch(address: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        address\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { WizardService } from '../wizard.service';\nimport { LocationService } from '../../../location/location.service';\n\nimport { BaseComponent } from '../../models/base.component';\n\n@Component({\n    selector: 'wizard-search-for-the-area',\n    templateUrl: './search-for-the-area.component.html',\n    styleUrls: ['./search-for-the-area.component.scss']\n})\nexport class SearchForTheAreaComponent extends BaseComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    constructor(\n        private wizard: WizardService,\n        private location: LocationService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.valueChanges();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        // Updates location service data on value changes.\n        this.subscriptions.push(this.formGroup.get('center').valueChanges.subscribe(\n            (center: google.maps.LatLngLiteral) => {\n                this.location.setLatLng(center);\n            }\n        ));\n    }\n\n    receiveActions(): void {\n        //\n    }\n\n    sendActions(): void {\n        //\n    }\n\n    search(address: string): void {\n        if (!!address) {\n            // Updates pending state.\n            this.wizard.putOnHold('Searching address');\n            // Converts the address into geographic coordinates.\n            this.location.codeAddress(address).forEach(\n                (results: google.maps.GeocoderResult[]) => {\n                    this.formGroup.get('center').setValue({\n                        lat: results[0].geometry.location.lat(),\n                        lng: results[0].geometry.location.lng()\n                    });\n                    // Updates step state.\n                    this.wizard.updateStep(this.formGroup.value, this.index);\n                })\n                .then()\n                .catch((error: google.maps.GeocoderStatus) => {\n                    if (error === google.maps.GeocoderStatus.ZERO_RESULTS) {\n                        // Updates error state.\n                        this.wizard.putInError('Zero results');\n                    } else {\n                        // INVALID_REQUEST, OVER_QUERY_LIMIT, REQUEST_DENIED, UNKNOWN_ERROR\n                        // Updates error state.\n                        this.wizard.putInError('Invalid request');\n                    }\n                });\n        }\n    }\n\n    getCurrentPosition(): void {\n        if (navigator.geolocation) {\n            // Updates pending state.\n            this.wizard.putOnHold('Getting position');\n            this.location.getCurrentPosition().subscribe(\n                (position: Position) => {\n                    this.formGroup.get('center').setValue({ lat: position.coords.latitude, lng: position.coords.longitude });\n                    // Updates step state.\n                    this.wizard.updateStep(this.formGroup.value, this.index);\n                },\n                (error: PositionError) => {\n                    if (error.code > 0) {\n                        let message: string;\n                        switch (error.code) {\n                            case error.PERMISSION_DENIED:\n                                message = 'Permission denied';\n                                break;\n                            case error.POSITION_UNAVAILABLE:\n                                message = 'Position unavailable';\n                                break;\n                            case error.TIMEOUT:\n                                message = 'Position timeout';\n                                break;\n                        }\n                        // Updates error state.\n                        this.wizard.putInError(message);\n                    }\n                });\n\n        } else {\n            // Updates error state.\n            this.wizard.putInError(\"Browser doesn't support geolocation\");\n        }\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n            \n                search\n            \n        \n        Get current position\n    \n\n    \n        Continue\n            navigate_next\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    search                            Get current position                Continue            navigate_next            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchForTheAreaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectionOfTheAreaComponent.html":{"url":"components/SelectionOfTheAreaComponent.html","title":"component - SelectionOfTheAreaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SelectionOfTheAreaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-selection-of-the-area\n            \n\n            \n                styleUrls\n                selection-of-the-area.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./selection-of-the-area.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, wizard: WizardService, network: NetworkService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n\n                \n                    \n                        getmin()\n                    \n                \n                            \n                                \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:28\n                                \n                            \n                    \n                        \n                                Min moment: current time.\n\n\n                                \n                                    Returns :     Date\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n\n                \n                    \n                        getmax()\n                    \n                \n                            \n                                \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:35\n                                \n                            \n                    \n                        \n                                Max moment: current day.\n\n\n                                \n                                    Returns :     Date\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { WizardService } from '../wizard.service';\nimport { NetworkService } from '../../../network/network.service';\nimport * as fromUi from '../../models/reducers';\nimport { Map } from '../../models/ui-state';\nimport { uiConfig } from '../../ui-config';\n\nimport { BaseComponent } from '../../models/base.component';\n\n@Component({\n    selector: 'wizard-selection-of-the-area',\n    templateUrl: './selection-of-the-area.component.html',\n    styleUrls: ['./selection-of-the-area.component.scss']\n})\nexport class SelectionOfTheAreaComponent extends BaseComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    /**\n     * Min moment: current time.\n     */\n    get min(): Date {\n        return new Date();\n    }\n\n    /**\n     * Max moment: current day.\n     */\n    get max(): Date {\n        return new Date(\n            this.min.getFullYear(),\n            this.min.getMonth(),\n            this.min.getDate(),\n            this.min.getHours() + uiConfig.timeLimit,\n            this.min.getMinutes()\n        );\n    }\n\n    constructor(\n        private store: Store,\n        private wizard: WizardService,\n        private network: NetworkService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.valueChanges();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        // Updates network service data on value changes.\n        this.subscriptions.push(this.formGroup.get('bounds').valueChanges.subscribe(\n            (bounds: google.maps.LatLngBoundsLiteral) => {\n                this.network.setBounds(bounds);\n            }\n        ));\n        this.subscriptions.push(this.formGroup.get('time').valueChanges.subscribe(\n            (time: Date) => {\n                this.network.setTime(time);\n            }\n        ));\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.map)).subscribe((map: Map) => {\n            if (map && map.data.bounds) {\n                this.formGroup.get('bounds').setValue(map.data.bounds);\n            }\n        }));\n    }\n\n    sendActions(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n            \n                calendar_today\n            \n            Optional. Leave it empty for the current time\n            \n                \n                \n                    Please, enter a time between the current time and the next 24 hours\n                \n                \n                    Please, insert a valid time or select it\n                \n            \n        \n        \n    \n\n    \n        Continue\n            navigate_next\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    calendar_today                        Optional. Leave it empty for the current time                                                                Please, enter a time between the current time and the next 24 hours                                                    Please, insert a valid time or select it                                                            Continue            navigate_next            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SelectionOfTheAreaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n  Modules\n  SharedModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nFooterComponent\n\nFooterComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nFooterComponent->SharedModule\n\n\n\n\n\nInfoDialogComponent\n\nInfoDialogComponent\n\nSharedModule -->\n\nInfoDialogComponent->SharedModule\n\n\n\n\n\nMessageArchivedComponent\n\nMessageArchivedComponent\n\nSharedModule -->\n\nMessageArchivedComponent->SharedModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nSharedModule->FooterComponent \n\n\n\n\n\nInfoDialogComponent \n\nInfoDialogComponent \n\nInfoDialogComponent  -->\n\nSharedModule->InfoDialogComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nMessageArchivedComponent \n\nMessageArchivedComponent \n\nMessageArchivedComponent  -->\n\nSharedModule->MessageArchivedComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                FooterComponent\n                            \n                            \n                                InfoDialogComponent\n                            \n                            \n                                MessageArchivedComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                InfoDialogComponent\n                            \n                            \n                                MessageArchivedComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    MaterialModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    FooterComponent\n                            \n                            \n                                    InfoDialogComponent\n                            \n                            \n                                    MaterialModule\n                            \n                            \n                                    MessageArchivedComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { MaterialModule } from './material.module';\n\nimport { FooterComponent } from './footer/footer.component';\nimport { MessageArchivedComponent } from './message-archived.component';\nimport { InfoDialogComponent } from './info-dialog.component';\n\nimport { CanDeactivateGuard } from './can-deactivate-guard.service';\n\nconst sharedModules: any[] = [\n    CommonModule,\n    RouterModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    FlexLayoutModule\n];\n\n@NgModule({\n    entryComponents: [\n        MessageArchivedComponent,\n        InfoDialogComponent\n    ],\n    declarations: [\n        FooterComponent,\n        MessageArchivedComponent,\n        InfoDialogComponent\n    ],\n    imports: sharedModules,\n    exports: [\n        sharedModules,\n        FooterComponent,\n        MessageArchivedComponent,\n        InfoDialogComponent\n    ]\n})\nexport class SharedModule {\n    public static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: SharedModule,\n            providers: [\n                CanDeactivateGuard\n            ]\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Simulation.html":{"url":"interfaces/Simulation.html","title":"interface - Simulation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Simulation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/models/simulation-state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        counts\n                                \n                                \n                                        data\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        counts\n                                    \n                                \n                                \n                                    \n                                        counts:     Counts\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Counts\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Simulation counts.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     NumericalSimulation[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     NumericalSimulation[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Simulation data.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface NumericalSimulation {\n\n    edge: string;\n    wayName: string;\n    trafficVolume: number;\n    trafficCount: number;\n    delay: number | string;\n    stops: number;\n\n}\n\nexport interface Counts {\n\n    startedVehicles: number;\n    arrivedVehicles: number;\n\n}\n\nexport interface Simulation {\n\n    /**\n     * Simulation data.\n     */\n    data: NumericalSimulation[];\n    /**\n     * Simulation counts.\n     */\n    counts: Counts;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SimulationChanged.html":{"url":"classes/SimulationChanged.html","title":"class - SimulationChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SimulationChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/models/actions/simulation.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/simulation/models/actions/simulation.actions.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/models/actions/simulation.actions.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : SimulationActionTypes.SimulationChanged\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/models/actions/simulation.actions.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Simulation } from '../simulation-state';\n\n/**\n * ngrx: simulation Actions.\n */\nexport enum SimulationActionTypes {\n\n    SimulationChanged = '[Simulation] Simulation Changed',\n    SimulationEnded = '[Simulation] Simulation Ended',\n    PeriodsChanged = '[Simulation] Periods Changed',\n    Reset = '[Simulation] Reset'\n\n}\n\nexport class SimulationChanged implements Action {\n\n    public readonly type: string = SimulationActionTypes.SimulationChanged;\n\n    constructor(public payload: { simulation: Simulation }) { }\n\n}\n\nexport class SimulationEnded implements Action {\n\n    public readonly type: string = SimulationActionTypes.SimulationEnded;\n\n    constructor(public payload: boolean) { }\n\n}\n\nexport class PeriodsChanged implements Action {\n\n    public readonly type: string = SimulationActionTypes.PeriodsChanged;\n\n    constructor(public payload: any) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = SimulationActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type SimulationActions = SimulationChanged | SimulationEnded | PeriodsChanged | Reset;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SimulationComponent.html":{"url":"components/SimulationComponent.html","title":"component - SimulationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SimulationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/simulation/simulation.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-simulation\n            \n\n            \n                styleUrls\n                simulation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./simulation.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                control\n                            \n                            \n                                counts\n                            \n                            \n                                endSimulation\n                            \n                            \n                                simulatedTimeInterval\n                            \n                            \n                                simulatedTimePeriod\n                            \n                            \n                                timeInterval\n                            \n                            \n                                timePeriod\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                pressControl\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, wizard: WizardService, clock: ClockService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/simulation/simulation.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        clock\n                                                  \n                                                        \n                                                                    ClockService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:24\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pressControl\n                            \n                            \n                        \n                    \n                \n                \n                    \npressControl(control: Control)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:95\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        control\n                                                        \n                                                                    Control\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:91\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            control\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        control:     \n\n                    \n                \n                    \n                        \n                            Default value : Control\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            counts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        counts:     Counts\n\n                    \n                \n                    \n                        \n                            Type :     Counts\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            endSimulation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        endSimulation:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            simulatedTimeInterval\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        simulatedTimeInterval:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            simulatedTimePeriod\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        simulatedTimePeriod:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeInterval\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timeInterval:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timePeriod\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timePeriod:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { WizardService } from '../wizard.service';\nimport { ClockService, Control } from '../../../simulation/clock.service';\nimport * as fromSimulation from '../../../simulation/models/reducers';\nimport { Simulation, Counts } from '../../../simulation/models/simulation-state';\nimport { toSeconds, formatTimeFromSeconds, formatTimeFromMilliseconds } from '../../utils';\nimport { uiConfig } from '../../ui-config';\n\nimport { BaseComponent } from '../../models/base.component';\n\n@Component({\n    selector: 'wizard-simulation',\n    templateUrl: './simulation.component.html',\n    styleUrls: ['./simulation.component.scss']\n})\nexport class SimulationComponent extends BaseComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    timeInterval: number;\n\n    timePeriod: string;\n\n    simulatedTimeInterval: number;\n\n    simulatedTimePeriod: string;\n\n    counts: Counts;\n\n    endSimulation: boolean;\n\n    control: typeof Control = Control;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private store: Store,\n        private wizard: WizardService,\n        private clock: ClockService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.valueChanges();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        //\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromSimulation.periods)).subscribe((periods: any) => {\n            if (periods) {\n                if (typeof periods.timeInterval !== \"undefined\") {\n                    this.timeInterval = periods.timeInterval;\n                }\n                if (typeof periods.timePeriods !== \"undefined\") {\n                    this.timePeriod = formatTimeFromSeconds(periods.timePeriods[periods.timePeriods.length - 1]);\n                }\n                if (typeof periods.simulatedTimeInterval !== \"undefined\") {\n                    this.simulatedTimeInterval = toSeconds(periods.simulatedTimeInterval);\n                } else {\n                    this.simulatedTimeInterval = toSeconds(uiConfig.simulatedTimeInterval);\n                }\n                if (typeof periods.simulatedTimePeriod !== \"undefined\") {\n                    this.simulatedTimePeriod = formatTimeFromMilliseconds(periods.simulatedTimePeriod);\n                } else {\n                    this.simulatedTimePeriod = formatTimeFromMilliseconds(0);\n                }\n            }\n        }));\n        this.subscriptions.push(this.store.pipe(select(fromSimulation.simulation)).subscribe((simulation: Simulation) => {\n            if (simulation && simulation.counts) {\n                this.counts = simulation.counts;\n            }\n        }));\n        this.subscriptions.push(this.store.pipe(select(fromSimulation.end)).subscribe((end: boolean) => {\n            this.endSimulation = end;\n            this.formGroup.get('endSimulation').setValue(end);\n        }));\n    }\n\n    sendActions(): void {\n        //\n    }\n\n    pressControl(control: Control): void {\n        this.clock.pressControl(control);\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    \n                        stop\n                    \n                \n                \n                    \n                        play_arrow\n                    \n                \n                \n                    \n                        pause\n                    \n                \n            \n            \n                \n                    \n                        fast_rewind\n                    \n                \n                \n                    \n                        skip_next\n                    \n                \n                \n                    \n                        fast_forward\n                    \n                \n            \n        \n        \n        \n            Time interval: {{ timeInterval }} s\n            Time period: {{ timePeriod }}\n            Simulated time interval: {{ simulatedTimeInterval }} s\n            Simulated time period: {{ simulatedTimePeriod }}\n        \n        \n        \n            Started vehicles: {{ counts?.startedVehicles || 0 }}\n            Arrived vehicles: {{ counts?.arrivedVehicles || 0 }}\n        \n    \n\n    \n        Continue\n            navigate_next\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    stop                                                                                                play_arrow                                                                                                pause                                                                                                                        fast_rewind                                                                                                skip_next                                                                                                fast_forward                                                                                    Time interval: {{ timeInterval }} s            Time period: {{ timePeriod }}            Simulated time interval: {{ simulatedTimeInterval }} s            Simulated time period: {{ simulatedTimePeriod }}                                    Started vehicles: {{ counts?.startedVehicles || 0 }}            Arrived vehicles: {{ counts?.arrivedVehicles || 0 }}                        Continue            navigate_next            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SimulationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SimulationEnded.html":{"url":"classes/SimulationEnded.html","title":"class - SimulationEnded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SimulationEnded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/models/actions/simulation.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/simulation/models/actions/simulation.actions.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/models/actions/simulation.actions.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : SimulationActionTypes.SimulationEnded\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/models/actions/simulation.actions.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Simulation } from '../simulation-state';\n\n/**\n * ngrx: simulation Actions.\n */\nexport enum SimulationActionTypes {\n\n    SimulationChanged = '[Simulation] Simulation Changed',\n    SimulationEnded = '[Simulation] Simulation Ended',\n    PeriodsChanged = '[Simulation] Periods Changed',\n    Reset = '[Simulation] Reset'\n\n}\n\nexport class SimulationChanged implements Action {\n\n    public readonly type: string = SimulationActionTypes.SimulationChanged;\n\n    constructor(public payload: { simulation: Simulation }) { }\n\n}\n\nexport class SimulationEnded implements Action {\n\n    public readonly type: string = SimulationActionTypes.SimulationEnded;\n\n    constructor(public payload: boolean) { }\n\n}\n\nexport class PeriodsChanged implements Action {\n\n    public readonly type: string = SimulationActionTypes.PeriodsChanged;\n\n    constructor(public payload: any) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = SimulationActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type SimulationActions = SimulationChanged | SimulationEnded | PeriodsChanged | Reset;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SimulationModule.html":{"url":"modules/SimulationModule.html","title":"module - SimulationModule","body":"\n                   \n\n\n\n\n  Modules\n  SimulationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SimulationModule\n\n\n\ncluster_SimulationModule_providers\n\n\n\n\nClockService\n\nClockService\n\n\n\nSimulationModule\n\nSimulationModule\n\nSimulationModule -->\n\nClockService->SimulationModule\n\n\n\n\n\nSimulationService\n\nSimulationService\n\nSimulationModule -->\n\nSimulationService->SimulationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/simulation/simulation.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     ClockService\n                            \n                            \n                                     SimulationService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { StoreModule } from \"@ngrx/store\";\n\nimport { SimulationService } from './simulation.service';\nimport { ClockService } from './clock.service';\nimport { reducers } from './models/reducers';\n\n@NgModule({\n    imports: [\n        StoreModule.forFeature('simulation', reducers)\n    ],\n    declarations: [],\n    providers: [SimulationService, ClockService]\n})\nexport class SimulationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SimulationService.html":{"url":"injectables/SimulationService.html","title":"injectable - SimulationService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SimulationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/simulation.service.ts\n        \n\n            \n                Description\n            \n            \n                Applies the traffic flow propagation algorithm.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                graph\n                            \n                            \n                                    Private\n                                paths\n                            \n                            \n                                    Private\n                                pathsDemand\n                            \n                            \n                                    Private\n                                timeInterval\n                            \n                            \n                                    Private\n                                timePeriods\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                endLtm\n                            \n                            \n                                    Private\n                                getCounts\n                            \n                            \n                                    Public\n                                getStatistics\n                            \n                            \n                                    Public\n                                init\n                            \n                            \n                                    Private\n                                initEdges\n                            \n                            \n                                    Private\n                                initOdNodes\n                            \n                            \n                                    Private\n                                initPaths\n                            \n                            \n                                    Private\n                                initPathsDemand\n                            \n                            \n                                    Private\n                                initTimeInterval\n                            \n                            \n                                    Private\n                                ltm\n                            \n                            \n                                    Private\n                                numericalSimulation\n                            \n                            \n                                    Public\n                                propagateFlows\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Public\n                                resetFlows\n                            \n                            \n                                    Private\n                                takeFirstStep\n                            \n                            \n                                    Private\n                                takeSecondStep\n                            \n                            \n                                    Private\n                                takeThirdStep\n                            \n                            \n                                    Private\n                                updateStatistics\n                            \n                            \n                                    Private\n                                updateTimePeriods\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, network: NetworkService, demand: DemandService)\n                    \n                \n                        \n                            \n                                Defined in src/app/simulation/simulation.service.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        demand\n                                                  \n                                                        \n                                                                    DemandService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            endLtm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        endLtm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/simulation.service.ts:219\n                            \n                        \n\n\n                \n                    \n                            The algorithm ends when there is no more traffic volume on the links.\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getCounts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getCounts()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/simulation.service.ts:368\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Counts\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getStatistics\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getStatistics()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/simulation.service.ts:152\n                            \n                        \n\n\n                \n                    \n                            Extracts the network statistics.\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        init()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/simulation.service.ts:71\n                            \n                        \n\n\n                \n                    \n                            Initializes the simulation.\n\n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initEdges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initEdges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/simulation.service.ts:320\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initOdNodes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initOdNodes()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/simulation.service.ts:291\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initPaths\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initPaths()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/simulation.service.ts:243\n                            \n                        \n\n\n                \n                    \n                            Initializes existing paths.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initPathsDemand\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initPathsDemand(odMatrix: number[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/simulation.service.ts:271\n                            \n                        \n\n\n                \n                    \n                            Initializes the demand for paths as the rate of the total demand.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        odMatrix\n                                                        \n                                                                    number[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The O/D matrix\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initTimeInterval\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initTimeInterval()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/simulation.service.ts:230\n                            \n                        \n\n\n                \n                    \n                            Initializes the time interval as the smallest connection travel time.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ltm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ltm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/simulation.service.ts:175\n                            \n                        \n\n\n                \n                    \n                            Link Transmission Model algorithm.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            numericalSimulation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        numericalSimulation()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/simulation.service.ts:347\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     NumericalSimulation[]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            propagateFlows\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        propagateFlows()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/simulation.service.ts:101\n                            \n                        \n\n\n                \n                    \n                            Performs a flows propagation cycle.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/simulation.service.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resetFlows\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        resetFlows()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/simulation.service.ts:130\n                            \n                        \n\n\n                \n                    \n                            Resets the initial values.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            takeFirstStep\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        takeFirstStep(node: LtmNode)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/simulation.service.ts:189\n                            \n                        \n\n\n                \n                    \n                            Calculates sending and receiving flows.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                                    LtmNode\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The node on the paths\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            takeSecondStep\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        takeSecondStep(node: LtmNode)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/simulation.service.ts:204\n                            \n                        \n\n\n                \n                    \n                            Determines the transition flows from incoming links to outgoing links.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                                    LtmNode\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The node on the paths\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            takeThirdStep\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        takeThirdStep(node: LtmNode)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/simulation.service.ts:212\n                            \n                        \n\n\n                \n                    \n                            Updates the cumulative vehicles number.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                                    LtmNode\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The node on the paths\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateStatistics\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateStatistics()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/simulation.service.ts:334\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateTimePeriods\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateTimePeriods()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/simulation.service.ts:343\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            graph\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        graph:     LtmGraph\n\n                    \n                \n                    \n                        \n                            Type :     LtmGraph\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/simulation.service.ts:25\n                            \n                        \n\n                \n                    \n                        Ltm graph instance.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            paths\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paths:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/simulation.service.ts:43\n                            \n                        \n\n                \n                    \n                        Existing paths for each:\n\n[path][origin][link]\n[path][link][link]\n[path][link][destination]\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pathsDemand\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pathsDemand:     number[]\n\n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/simulation.service.ts:48\n                            \n                        \n\n                \n                    \n                        Demand of each path.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timeInterval\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timeInterval:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/simulation.service.ts:35\n                            \n                        \n\n                \n                    \n                        The time period is divided into time intervals.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timePeriods\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timePeriods:     number[]\n\n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/simulation.service.ts:30\n                            \n                        \n\n                \n                    \n                        The cumulated time period.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\nimport { Store } from '@ngrx/store';\n\nimport { NetworkService } from '../network/network.service';\nimport { DemandService } from '../demand/demand.service';\nimport * as fromSimulation from './models/reducers';\nimport { SimulationActionTypes } from './models/actions/simulation.actions';\nimport { Graph, OdPair, Tag } from '../network/graph';\nimport { LtmGraph, LtmEdge, LtmNode } from './ltm-graph';\nimport { NumericalSimulation, Counts } from './models/simulation-state';\nimport { Statistics } from './statistics';\nimport { round } from '../utils';\nimport { uiConfig } from '../ui/ui-config';\n\n/**\n * Applies the traffic flow propagation algorithm.\n */\n@Injectable() export class SimulationService {\n\n    /**\n     * Ltm graph instance.\n     */\n    private graph: LtmGraph;\n\n    /**\n     * The cumulated time period.\n     */\n    private timePeriods: number[] = [];\n\n    /**\n     * The time period is divided into time intervals.\n     */\n    private timeInterval: number;\n\n    /**\n     * Existing paths for each:\n     * - [path][origin][link]\n     * - [path][link][link]\n     * - [path][link][destination]\n     */\n    private paths: any[] = [];\n\n    /**\n     * Demand of each path.\n     */\n    private pathsDemand: number[] = [];\n\n    constructor(\n        private store: Store,\n        private network: NetworkService,\n        private demand: DemandService\n    ) { }\n\n    public reset(): void {\n        this.graph = null;\n        this.timePeriods = [];\n        this.timeInterval = 0;\n        this.paths = [];\n        this.pathsDemand = [];\n        // Simulation state.\n        this.store.dispatch({\n            type: SimulationActionTypes.Reset\n        });\n    }\n\n    /**\n     * Initializes the simulation.\n     */\n    public init(): Observable {\n        // Gets graph from network.\n        const graph = this.network.getGraph();\n        // Gets O/D matrix from demand.\n        const demand = this.demand.getOdMatrix();\n        // Instances LTM graph from graph.\n        this.graph = new LtmGraph(graph);\n        // Sets the time period.\n        this.timePeriods[0] = 0;\n        // Initializes time interval.\n        this.initTimeInterval();\n        // Initializes existing paths.\n        this.initPaths();\n        // Initializes paths demand.\n        this.initPathsDemand(demand);\n        // Initializes O/D nodes expected flows.\n        this.initOdNodes();\n        // Initializes edges upstream and downstream.\n        this.initEdges();\n        // Updates simulation state.\n        this.store.dispatch({\n            type: SimulationActionTypes.PeriodsChanged,\n            payload: { timeInterval: this.timeInterval, timePeriods: this.timePeriods }\n        });\n        return of(null);\n    }\n\n    /**\n     * Performs a flows propagation cycle.\n     */\n    public propagateFlows(): void {\n        // Performs a LTM algorithm cycle.\n        this.ltm();\n        // Updates statistics.\n        this.updateStatistics();\n        // Updates time period.\n        this.updateTimePeriods();\n        // Updates simulation state.\n        this.store.dispatch({\n            type: SimulationActionTypes.PeriodsChanged,\n            payload: { timeInterval: this.timeInterval, timePeriods: this.timePeriods }\n        });\n        this.store.dispatch({\n            type: SimulationActionTypes.SimulationChanged,\n            payload: { simulation: { data: this.numericalSimulation(), counts: this.getCounts() } }\n        });\n        // Checks if the simulation is finished.\n        if (this.endLtm()) {\n            // Updates simulation state.\n            this.store.dispatch({\n                type: SimulationActionTypes.SimulationEnded,\n                payload: true\n            });\n        }\n    }\n\n    /**\n     * Resets the initial values.\n     */\n    public resetFlows(): void {\n        // Resets.\n        this.graph.reset();\n        this.timePeriods = [];\n        // Reinitializes.\n        this.timePeriods[0] = 0;\n        this.initOdNodes();\n        this.initEdges();\n        // Updates simulation state.\n        this.store.dispatch({\n            type: SimulationActionTypes.PeriodsChanged,\n            payload: { timeInterval: this.timeInterval, timePeriods: this.timePeriods }\n        });\n        this.store.dispatch({\n            type: SimulationActionTypes.SimulationChanged,\n            payload: { simulation: { data: [], counts: {} } }\n        });\n    }\n\n    /**\n     * Extracts the network statistics.\n     */\n    public getStatistics(): any {\n        const edges = this.graph.getEdges().filter((edge: LtmEdge) =>\n            edge.distance > uiConfig.minDistance && edge.duration > uiConfig.minDuration\n        );\n        const busiestEdge = Statistics.getBusiestEdge(edges);\n\n        return {\n            totalTime: this.timePeriods[this.timePeriods.length - 1],\n            heavyTrafficLabels: Statistics.getHeavyTrafficLabels(edges),\n            moderateTrafficLabels: Statistics.getModerateTrafficLabels(edges),\n            heavyTrafficData: Statistics.getHeavyTrafficData(edges, this.timeInterval),\n            moderateTrafficData: Statistics.getModerateyTrafficData(edges, this.timeInterval),\n            busiestEdgeLabel: Statistics.getBusiestEdgeLabel(busiestEdge),\n            busiestEdgeData: Statistics.getBusiestEdgeData(busiestEdge),\n            busiestEdgeCapacity: Statistics.getBusiestEdgeCapacity(busiestEdge),\n            busiestEdgeDelay: Statistics.getBusiestEdgeDelay(busiestEdge, this.timePeriods),\n            periods: this.timePeriods\n        };\n    }\n\n    /**\n     * Link Transmission Model algorithm.\n     */\n    private ltm(): void {\n        const nodes = this.graph.getNodes();\n        // For each node on the paths.\n        for (const node of nodes) {\n            this.takeFirstStep(node);\n            this.takeSecondStep(node);\n            this.takeThirdStep(node);\n        }\n    }\n\n    /**\n     * Calculates sending and receiving flows.\n     * @param node The node on the paths\n     */\n    private takeFirstStep(node: LtmNode): void {\n        // Sending flows.\n        for (const edge of node.incomingEdges) {\n            edge.calcSendingFlows(this.timePeriods, this.timeInterval, this.paths);\n        }\n        // Receiving flows.\n        for (const edge of node.outgoingEdges) {\n            edge.calcReceivingFlow(this.timePeriods, this.timeInterval);\n        }\n    }\n\n    /**\n     * Determines the transition flows from incoming links to outgoing links.\n     * @param node The node on the paths\n     */\n    private takeSecondStep(node: LtmNode): void {\n        node.calcTransitionFlows(this.paths);\n    }\n\n    /**\n     * Updates the cumulative vehicles number.\n     * @param node The node on the paths\n     */\n    private takeThirdStep(node: LtmNode): void {\n        node.updateCumulativeFlows(this.paths);\n    }\n\n    /**\n     * The algorithm ends when there is no more traffic volume on the links.\n     */\n    private endLtm(): boolean {\n        const edges = this.graph.getEdges();\n        return edges.filter(\n            (edge: LtmEdge) =>\n                edge.trafficVolume > 0\n        ).length > 0 ? false : true;\n    }\n\n    /**\n     * Initializes the time interval as the smallest connection travel time.\n     */\n    private initTimeInterval(): void {\n        const edges = this.graph.getEdges();\n        const edge = edges.reduce((prev: LtmEdge, curr: LtmEdge) => prev.duration  uiConfig.maxTimeInterval) {\n            this.timeInterval = uiConfig.maxTimeInterval;\n        } else {\n            this.timeInterval = edge.duration;\n        }\n    }\n\n    /**\n     * Initializes existing paths.\n     */\n    private initPaths(): void {\n        const shortestPaths = this.graph.getShortestPaths();\n\n        let i = 0;\n        for (let z = 0; z  value > 0) || 0;\n                    this.pathsDemand[i] = round(p * odMatrix[z]);\n                    sum += this.pathsDemand[i];\n                    i++;\n                }\n                if (odMatrix[z] - sum > 0) { this.pathsDemand[pos] = odMatrix[z] - sum; }\n            }\n        }\n    }\n\n    private initOdNodes(): void {\n        const shortestPaths = this.graph.getShortestPaths();\n\n        let i = 0;\n        for (let z = 0; z  tag.key == 'name');\n            const wayName = wayTag ? wayTag.value : '';\n            data.push(\n                {\n                    edge: edge.label,\n                    wayName: wayName,\n                    trafficVolume: edge.trafficVolume,\n                    trafficCount: edge.trafficCount,\n                    delay: edge.delay,\n                    stops: edge.stops\n                }\n            );\n        }\n        return data;\n    }\n\n    private getCounts(): Counts {\n        let startedVehicles = 0;\n        let arrivedVehicles = 0;\n\n        const nodes = this.graph.getNodes();\n        for (const node of nodes) {\n            if (node.origin) {\n                startedVehicles += node.origin.sendingFlow;\n            }\n            if (node.destination) {\n                arrivedVehicles += node.destination.receivingFlow;\n            }\n        }\n        return {\n            startedVehicles: startedVehicles,\n            arrivedVehicles: arrivedVehicles\n        };\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SimulationState.html":{"url":"interfaces/SimulationState.html","title":"interface - SimulationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SimulationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/models/reducers.ts\n        \n\n            \n                Description\n            \n            \n                Simulation state management.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        simulation\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        simulation\n                                    \n                                \n                                \n                                    \n                                        simulation:     fromSimulation.SimulationState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromSimulation.SimulationState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, createFeatureSelector, createSelector, MemoizedSelector } from \"@ngrx/store\";\n\nimport * as fromSimulation from './reducers/simulation.reducer';\nimport { Simulation } from \"./simulation-state\";\n\n/**\n * Simulation state management.\n */\nexport interface SimulationState {\n\n    simulation: fromSimulation.SimulationState;\n\n}\n\nexport const reducers: ActionReducerMap = {\n    simulation: fromSimulation.simulationReducer\n};\n\nexport const featureSimulationState: MemoizedSelector = createFeatureSelector('simulation');\n\n/**\n * Exports the simulation state.\n */\nexport const simulationState: MemoizedSelector = createSelector(\n    featureSimulationState,\n    (state: SimulationState) => state.simulation\n);\n\nexport const simulation: MemoizedSelector = createSelector(\n    simulationState,\n    fromSimulation.getSimulation\n);\n\n/**\n * Exports the end state.\n */\nexport const end: MemoizedSelector = createSelector(\n    simulationState,\n    fromSimulation.getEnd\n);\n\n/**\n * Exports the periods state.\n */\nexport const periods: MemoizedSelector = createSelector(\n    simulationState,\n    fromSimulation.getPeriods\n);\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Statistics.html":{"url":"classes/Statistics.html","title":"class - Statistics","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Statistics\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/statistics.ts\n        \n\n            \n                Description\n            \n            \n                Extracts statistics from the graph.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getBusiestEdge\n                            \n                            \n                                    Static\n                                getBusiestEdgeCapacity\n                            \n                            \n                                    Static\n                                getBusiestEdgeData\n                            \n                            \n                                    Static\n                                getBusiestEdgeDelay\n                            \n                            \n                                    Static\n                                getBusiestEdgeLabel\n                            \n                            \n                                    Static\n                                getHeavyTrafficData\n                            \n                            \n                                    Private\n                                    Static\n                                getHeavyTrafficEdges\n                            \n                            \n                                    Static\n                                getHeavyTrafficLabels\n                            \n                            \n                                    Private\n                                    Static\n                                getModerateTrafficEdges\n                            \n                            \n                                    Static\n                                getModerateTrafficLabels\n                            \n                            \n                                    Static\n                                getModerateyTrafficData\n                            \n                            \n                                    Private\n                                    Static\n                                getTrafficVolumes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getBusiestEdge\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBusiestEdge(edges: LtmEdge[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edges\n                                                        \n                                                                    LtmEdge[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     LtmEdge\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getBusiestEdgeCapacity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBusiestEdgeCapacity(edge: LtmEdge)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edge\n                                                        \n                                                                    LtmEdge\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getBusiestEdgeData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBusiestEdgeData(edge: LtmEdge)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edge\n                                                        \n                                                                    LtmEdge\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getBusiestEdgeDelay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBusiestEdgeDelay(edge: LtmEdge, timePeriods: number[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edge\n                                                        \n                                                                    LtmEdge\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        timePeriods\n                                                        \n                                                                    number[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getBusiestEdgeLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBusiestEdgeLabel(edge: LtmEdge)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edge\n                                                        \n                                                                    LtmEdge\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getHeavyTrafficData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getHeavyTrafficData(edges: LtmEdge[], timeInterval: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edges\n                                                        \n                                                                    LtmEdge[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        timeInterval\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            getHeavyTrafficEdges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getHeavyTrafficEdges(edges: LtmEdge[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edges\n                                                        \n                                                                    LtmEdge[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     LtmEdge[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getHeavyTrafficLabels\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getHeavyTrafficLabels(edges: LtmEdge[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edges\n                                                        \n                                                                    LtmEdge[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            getModerateTrafficEdges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getModerateTrafficEdges(edges: LtmEdge[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edges\n                                                        \n                                                                    LtmEdge[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     LtmEdge[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getModerateTrafficLabels\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getModerateTrafficLabels(edges: LtmEdge[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edges\n                                                        \n                                                                    LtmEdge[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getModerateyTrafficData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getModerateyTrafficData(edges: LtmEdge[], timeInterval: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edges\n                                                        \n                                                                    LtmEdge[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        timeInterval\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            getTrafficVolumes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getTrafficVolumes(edge: LtmEdge)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edge\n                                                        \n                                                                    LtmEdge\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { LtmEdge } from \"./ltm-graph\";\nimport { round } from \"../utils\";\n\n/**\n * Extracts statistics from the graph.\n */\nexport class Statistics {\n\n    public static getHeavyTrafficLabels(edges: LtmEdge[]): string[] {\n        return this.getHeavyTrafficEdges(edges).map((edge: LtmEdge) => edge.label);\n    }\n\n    public static getModerateTrafficLabels(edges: LtmEdge[]): string[] {\n        return this.getModerateTrafficEdges(edges).map((edge: LtmEdge) => edge.label);\n    }\n\n    public static getHeavyTrafficData(edges: LtmEdge[], timeInterval: number): number[] {\n        return this.getHeavyTrafficEdges(edges).map((edge: LtmEdge) => edge.heavyTrafficCount * timeInterval);\n    }\n\n    public static getModerateyTrafficData(edges: LtmEdge[], timeInterval: number): number[] {\n        return this.getModerateTrafficEdges(edges).map((edge: LtmEdge) => edge.moderateTrafficCount * timeInterval);\n    }\n\n    public static getBusiestEdge(edges: LtmEdge[]): LtmEdge {\n        return edges.reduce((prev: LtmEdge, curr: LtmEdge) =>\n            prev.heavyTrafficCount + prev.moderateTrafficCount > curr.heavyTrafficCount + curr.moderateTrafficCount ? prev : curr\n        );\n    }\n\n    public static getBusiestEdgeLabel(edge: LtmEdge): string {\n        return edge.label;\n    }\n\n    public static getBusiestEdgeData(edge: LtmEdge): number[] {\n        return this.getTrafficVolumes(edge);\n    }\n\n    public static getBusiestEdgeCapacity(edge: LtmEdge): number {\n        return round(edge.maxFlow * edge.duration) > 1 ?\n            round(edge.maxFlow * edge.duration) :\n            1;\n    }\n\n    public static getBusiestEdgeDelay(edge: LtmEdge, timePeriods: number[]): number {\n        const trafficVolumes = this.getTrafficVolumes(edge);\n\n        let i = 0;\n        let first: number;\n        let last: number;\n        do {\n            if (trafficVolumes[i] > 0 && first == null) {\n                first = i;\n            }\n            if (trafficVolumes[i] > 0) {\n                last = i + 1;\n            }\n            i++;\n        } while (i  Math.abs(curr - targetTime)  edge.heavyTrafficCount > 0);\n    }\n\n    private static getModerateTrafficEdges(edges: LtmEdge[]): LtmEdge[] {\n        return edges.filter((edge: LtmEdge) => edge.moderateTrafficCount > 0);\n    }\n\n    private static getTrafficVolumes(edge: LtmEdge): number[] {\n        return edge.upstream.map((value: number, i: number) => value - edge.downstream[i]);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatisticsComponent.html":{"url":"components/StatisticsComponent.html","title":"component - StatisticsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StatisticsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/statistics/statistics.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-statistics\n            \n\n            \n                styleUrls\n                statistics.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./statistics.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                totalProcessingTime\n                            \n                            \n                                totalSimulatedTime\n                            \n                            \n                                totalTime\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, wizard: WizardService, simulation: SimulationService, clock: ClockService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/statistics/statistics.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        simulation\n                                                  \n                                                        \n                                                                    SimulationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        clock\n                                                  \n                                                        \n                                                                    ClockService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalProcessingTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        totalProcessingTime:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalSimulatedTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        totalSimulatedTime:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        totalTime:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { WizardService } from '../wizard.service';\nimport { SimulationService } from '../../../simulation/simulation.service';\nimport { ClockService } from '../../../simulation/clock.service';\nimport * as fromUi from '../../models/reducers';\nimport { formatTimeFromSeconds, formatTimeFromMilliseconds } from '../../utils';\n\nimport { BaseComponent } from '../../models/base.component';\n\n@Component({\n    selector: 'wizard-statistics',\n    templateUrl: './statistics.component.html',\n    styleUrls: ['./statistics.component.scss']\n})\nexport class StatisticsComponent extends BaseComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    totalTime: string;\n\n    totalSimulatedTime: string;\n\n    totalProcessingTime: string;\n\n    constructor(\n        private store: Store,\n        private wizard: WizardService,\n        private simulation: SimulationService,\n        private clock: ClockService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.valueChanges();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        //\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.currentStep)).subscribe((currentStep: number) => {\n            switch (currentStep) {\n                case this.index:\n                    const simulationStatistics = this.simulation.getStatistics();\n                    const clockStatistics = this.clock.getStatistics();\n                    this.totalTime = formatTimeFromSeconds(simulationStatistics.totalTime);\n                    this.totalSimulatedTime = formatTimeFromMilliseconds(clockStatistics.totalSimulatedTime);\n                    this.totalProcessingTime = formatTimeFromMilliseconds(clockStatistics.totalProcessingTime);\n                    break;\n            }\n        }));\n    }\n\n    sendActions(): void {\n        //\n    }\n}\n\n    \n\n    \n        \n    \n        Total time: {{ totalTime }}\n        Total simulated time: {{ totalSimulatedTime }}\n        Total processing time: {{ totalProcessingTime }}\n    \n\n    \n        Exit\n            navigate_next\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Total time: {{ totalTime }}        Total simulated time: {{ totalSimulatedTime }}        Total processing time: {{ totalProcessingTime }}                Exit            navigate_next            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatisticsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Step.html":{"url":"interfaces/Step.html","title":"interface - Step","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Step\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/ui-state.ts\n        \n\n            \n                Description\n            \n            \n                Step model.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Form model data.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Step {\n\n    /**\n     * Form model data.\n     */\n    data: any;\n\n}\n\n/**\n * Map model.\n */\nexport interface Map {\n\n    /**\n     * Map data.\n     */\n    data: any;\n\n}\n\n/**\n * Initial steps.\n */\nexport const STEPS: Step[] = [];\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StepChanged.html":{"url":"classes/StepChanged.html","title":"class - StepChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  StepChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/actions/wizard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/models/actions/wizard.actions.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : WizardActionTypes.StepChanged\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Step } from '../ui-state';\n\n/**\n * ngrx: wizard Actions.\n */\nexport enum WizardActionTypes {\n\n    StepChanged = '[Wizard] Step Changed',\n    StepError = '[Wizard] Step Error',\n    StepPending = '[Wizard] Step Pending',\n    GoOn = '[Wizard] Go On',\n    Reset = '[Wizard] Reset'\n\n}\n\nexport class StepChanged implements Action {\n\n    public readonly type: string = WizardActionTypes.StepChanged;\n\n    constructor(public payload: { step: Step, index: number }) { }\n\n}\n\nexport class StepError implements Action {\n\n    public readonly type: string = WizardActionTypes.StepError;\n\n    constructor(public payload: string) { }\n\n}\n\nexport class StepPending implements Action {\n\n    public readonly type: string = WizardActionTypes.StepPending;\n\n    constructor(public payload: string | boolean) { }\n\n}\n\nexport class GoOn implements Action {\n\n    public readonly type: string = WizardActionTypes.GoOn;\n\n    constructor(public payload: { step: Step, index: number, nextIndex: number }) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = WizardActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type WizardActions = StepChanged | StepError | StepPending | GoOn | Reset;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StepError.html":{"url":"classes/StepError.html","title":"class - StepError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  StepError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/actions/wizard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/models/actions/wizard.actions.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : WizardActionTypes.StepError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Step } from '../ui-state';\n\n/**\n * ngrx: wizard Actions.\n */\nexport enum WizardActionTypes {\n\n    StepChanged = '[Wizard] Step Changed',\n    StepError = '[Wizard] Step Error',\n    StepPending = '[Wizard] Step Pending',\n    GoOn = '[Wizard] Go On',\n    Reset = '[Wizard] Reset'\n\n}\n\nexport class StepChanged implements Action {\n\n    public readonly type: string = WizardActionTypes.StepChanged;\n\n    constructor(public payload: { step: Step, index: number }) { }\n\n}\n\nexport class StepError implements Action {\n\n    public readonly type: string = WizardActionTypes.StepError;\n\n    constructor(public payload: string) { }\n\n}\n\nexport class StepPending implements Action {\n\n    public readonly type: string = WizardActionTypes.StepPending;\n\n    constructor(public payload: string | boolean) { }\n\n}\n\nexport class GoOn implements Action {\n\n    public readonly type: string = WizardActionTypes.GoOn;\n\n    constructor(public payload: { step: Step, index: number, nextIndex: number }) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = WizardActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type WizardActions = StepChanged | StepError | StepPending | GoOn | Reset;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StepPending.html":{"url":"classes/StepPending.html","title":"class - StepPending","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  StepPending\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/actions/wizard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string | boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/models/actions/wizard.actions.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string | boolean\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     string | boolean\n\n                    \n                \n                    \n                        \n                            Type :     string | boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : WizardActionTypes.StepPending\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Step } from '../ui-state';\n\n/**\n * ngrx: wizard Actions.\n */\nexport enum WizardActionTypes {\n\n    StepChanged = '[Wizard] Step Changed',\n    StepError = '[Wizard] Step Error',\n    StepPending = '[Wizard] Step Pending',\n    GoOn = '[Wizard] Go On',\n    Reset = '[Wizard] Reset'\n\n}\n\nexport class StepChanged implements Action {\n\n    public readonly type: string = WizardActionTypes.StepChanged;\n\n    constructor(public payload: { step: Step, index: number }) { }\n\n}\n\nexport class StepError implements Action {\n\n    public readonly type: string = WizardActionTypes.StepError;\n\n    constructor(public payload: string) { }\n\n}\n\nexport class StepPending implements Action {\n\n    public readonly type: string = WizardActionTypes.StepPending;\n\n    constructor(public payload: string | boolean) { }\n\n}\n\nexport class GoOn implements Action {\n\n    public readonly type: string = WizardActionTypes.GoOn;\n\n    constructor(public payload: { step: Step, index: number, nextIndex: number }) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = WizardActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type WizardActions = StepChanged | StepError | StepPending | GoOn | Reset;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tag.html":{"url":"interfaces/Tag.html","title":"interface - Tag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Tag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                Tag describes the meaning of the particular element to which it is attached.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        key\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\n\nimport * as combine from 'mout/array/combine';\n\nimport { Heap, Path } from './k-shortest-path';\nimport { round } from '../utils';\nimport { environment } from '../../environments/environment';\nimport { uiConfig } from '../ui/ui-config';\n\nexport enum PathType {\n    distance = 'distance',\n    duration = 'duration'\n}\n\n/**\n * An O/D pair is described by the origin and destination nodes, and the type of path.\n */\nexport interface OdPair {\n\n    origin: string;\n    destination: string;\n    pathType: PathType;\n\n}\n\nexport interface LinkFlow {\n\n    /**\n     * linkFlow attribute.\n     */\n    value: number;\n    /**\n     * Variance is the inverse of density.\n     */\n    variance: number;\n\n}\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public label: string;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    public drawingOptions: { marker?: google.maps.Marker } = {};\n\n    /**\n     * Used by the k shortest path routing.\n     */\n    public count: number = 0;\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public label: string;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    /**\n     * Free flow speed (m/s).\n     */\n    public freeFlowVelocity: number;\n\n    /**\n     * Instant speed (m/s).\n     */\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    /**\n     * Number of vehicles calculated from traffic data.\n     */\n    public linkFlow: number;\n\n    /**\n     * Maximum flow of the link.\n     */\n    public maxFlow: number;\n\n    public drawingOptions: {\n        path?: google.maps.LatLng[],\n        polyline?: google.maps.Polyline,\n        marker?: google.maps.Marker,\n        infowindow?: google.maps.InfoWindow\n    } = {};\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the link flow.\n     */\n    public calcLinkFlow(): void {\n        // Min distance is 1 meter.\n        if (this.distance == 0) { this.distance = 1; }\n        // Min duration is 1 second.\n        if (this.duration == 0) {\n            this.duration = round(this.distance / (50 / 3.6)) > 1 ? round(this.distance / (50 / 3.6)) : 1;\n        }\n        // Calculates free flow velocity (m/s).\n        this.freeFlowVelocity = round(this.distance / this.duration, 2);\n        // Calculates link flow.\n        if (this.durationInTraffic > 0 && this.durationInTraffic >= this.duration) {\n            // Calculates velocity (m/s).\n            this.velocity = round(this.distance / this.durationInTraffic, 2);\n            // Calculates density.\n            this.density = round(this.getKjam() * (this.freeFlowVelocity - this.velocity) / this.freeFlowVelocity, 2);\n            // Calculates flow.\n            this.flow = round(this.density * this.velocity, 2);\n            // Calculates link flow.\n            this.linkFlow = round(this.density * this.distance);\n        } else {\n            this.velocity = 0;\n            this.density = 0;\n            this.flow = 0;\n            this.linkFlow = 0;\n        }\n    }\n\n    /**\n     * Calculates the max flow of the edge.\n     * @param factor Weather Adjustment Factor\n     */\n    public calcMaxFlow(factor: number): void {\n        const maxFlow = this.getKjam() * this.freeFlowVelocity;\n        this.maxFlow = round(maxFlow * factor, 2);\n    }\n\n    /**\n     * Gets the variance of measurement error of link flow.\n     */\n    public getVariance(): number {\n        return this.density > 0 ? round(1 / this.density, 2) : 1;\n    }\n\n    protected getKjam(): number {\n        return round(1 / uiConfig.sp, 2);\n    }\n\n    protected getCapacity(timeInterval: number): number {\n        return this.maxFlow * timeInterval;\n    }\n\n    protected draw(color: string, zIndex: number = 10): void {\n        this.drawingOptions.polyline.set('strokeColor', color);\n        this.drawingOptions.polyline.set('zIndex', zIndex);\n        this.drawingOptions.marker.set('visible', true);\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    protected nodes: Node[] = [];\n\n    protected edges: Edge[] = [];\n\n    protected relations: Relation[] = [];\n\n    /**\n     * Paths for each O/D pair [pairs,paths,edges].\n     */\n    protected shortestPaths: Edge[][][] = [];\n\n    protected incidenceMatrix: boolean[][][] = [];\n\n    protected assignmentMatrix: number[][][] = [];\n\n    private heap: Heap;\n\n    /**\n     * Shortest paths drawing options.\n     */\n    private drawingOptions: {\n        polylines?: google.maps.Polyline[][];\n    } = {};\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public getEdge(edgeId: number): Edge {\n        return this.edges.find((edge: Edge) => edge.edgeId == edgeId);\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Key:oneway\n     * @param edgeId Id of the edge\n     */\n    public isOneway(edgeId: number): boolean {\n        return !!this.getEdge(edgeId).tags.find(tag => tag.key == 'oneway' && tag.value != 'no') ||\n            this.isRoundabout(edgeId);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Tag:junction%3Droundabout\n     * @param edgeId Id of the edge\n     */\n    public isRoundabout(edgeId: number): boolean {\n        return this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'roundabout') ||\n            this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'circular') ?\n            true : false;\n    }\n\n    public getOdNode(label: string): Node {\n        return this.nodes.find((node: Node) => node.label == label);\n    }\n\n    public getOdNodes(): Node[] {\n        return this.nodes.filter((node: Node) => node.label);\n    }\n\n    /**\n     * Calculates the set of minimum paths.\n     * @param odPairs The O/D pairs\n     */\n    public calcShortestPaths(odPairs: OdPair[]): Observable {\n        try {\n            for (let i = 0; i  edge.label);\n    }\n\n    /**\n     * Calculates the incidence matrix of paths for O/D pairs.\n     */\n    public calcIncidenceMatrix(): Observable {\n        const edges = this.getPathsEdges();\n        for (let z = 0; z  value.edgeId == edges[m].edgeId)) {\n                        // The path crosses the edge.\n                        this.incidenceMatrix[z][n][m] = true;\n                    } else {\n                        // The path does not cross the edge.\n                        this.incidenceMatrix[z][n][m] = false;\n                    }\n                }\n            }\n        }\n        return of(null);\n    }\n\n    public getIncidenceMatrix(): boolean[][][] {\n        return this.incidenceMatrix;\n    }\n\n    /**\n     * Calculates the assignment matrix.\n     * @param odPairs The O/D pairs\n     */\n    public calcAssignmentMatrix(odPairs: OdPair[]): Observable {\n        // Calculates the probabilities of shortest paths.\n        const shortestPathsProbabilities = this.calcShortestPathsProbabilities(odPairs);\n\n        // Assignment matrix.\n        for (let z = 0; z  {\n        for (const edge of this.edges) {\n            edge.calcMaxFlow(factor);\n        }\n        return of(null);\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link distance or duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param o Source node\n     * @param d Destination node\n     * @param pathType Distance or duration\n     * @param k The number of shortest paths to compute\n     * @returns The set of shortest paths\n     */\n    private ksp(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Sets to zero the count property of the nodes.\n        this.resetCount();\n        // Instantiates the heap.\n        this.heap = new Heap();\n        // Inserts the path of origin into heap with cost 0.\n        this.heap.push({ pathId: 0, node: o, edges: [], cost: 0 });\n        // Walks the graph.\n        return this.walk(o, d, pathType, k);\n    }\n\n    /**\n     * Breadth First Search (BFS) algorithm for traversing and searching tree data\n     * explores the neighbor nodes first, before moving to the next level neighbors.\n     */\n    private walk(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Set of shortest paths from origin to destination.\n        const shortestPaths: Path[] = [];\n\n        let pathId = 1;\n        let node: Node;\n        while (this.heap.getPaths().length > 0 && d.count  edge.origin.nodeId == node.nodeId) ? false : true;\n    }\n\n    private resetCount(): void {\n        for (const node of this.nodes) {\n            node.count = 0;\n        }\n    }\n\n    /**\n     * Removes the alternative paths that differ only for two links.\n     * @param shortestPaths The shortest paths as created by the algorithm\n     */\n    private filterPaths(shortestPaths: Path[]): void {\n        if (shortestPaths.length > 1) {\n            let i = 0;\n            do {\n                const pathA = shortestPaths[i].edges;\n                const pathB = shortestPaths[i + 1].edges;\n                const sharedEdges = pathA.filter((edgeOfA: Edge) =>\n                    pathB.find((edgeOfB: Edge) =>\n                        edgeOfB.edgeId == edgeOfA.edgeId));\n                if (pathA.length - sharedEdges.length  value.edgeId == edge.edgeId)) {\n                        edges.push(edge);\n                        edge.label = 'E' + count++;\n                        if (!environment.testing) {\n                            edge.drawingOptions.infowindow.setContent('Edge: ' + edge.label);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Multinomial logit model.\n     * @param odPairs The O/D pairs\n     */\n    private calcShortestPathsProbabilities(odPairs: OdPair[]): number[][] {\n        // Gets the total cost of paths.\n        const pathCosts = this.calcPathCosts(odPairs);\n        const shortestPathsProbabilities: number[][] = [];\n        // Theta parameter adjustment.\n        const parameter = uiConfig.theta * 100;\n        // Calculates numerator.\n        const exps: number[][] = [];\n        for (let z = 0; z  {\n                return value > 0 ? Math.exp(-value / parameter) : 0;\n            });\n        }\n        // Calculates denominator.\n        const sumExps: number[] = [];\n        for (let z = 0; z  a + b, 0);\n            sumExps.push(sum);\n        }\n        // Probabilities.\n        for (let z = 0; z  0 ? round(exps[z][n] / sumExps[z], 3) : 0;\n                shortestPathsProbabilities[z].push(p);\n            }\n        }\n        return shortestPathsProbabilities;\n    }\n\n    private calcPathCosts(odPairs: OdPair[]): number[][] {\n        const pathCosts: number[][] = [];\n        for (let z = 0; z \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TermsComponent.html":{"url":"components/TermsComponent.html","title":"component - TermsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TermsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/terms/terms.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-terms\n            \n\n            \n                styleUrls\n                terms.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./terms.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/terms/terms.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/terms/terms.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-terms',\n    templateUrl: './terms.component.html',\n    styleUrls: ['./terms.component.scss']\n})\nexport class TermsComponent implements OnInit {\n\n    constructor() { }\n\n    ngOnInit(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            Terms of service of STRADA\n        \n        \n            These Terms of service govern your use of the application\n                STRADA\n            \n            By using the app, you accept these Terms in full. If you disagree with these Terms or any part of these Terms,\n                you must not use the app.\n            \n            Privacy Policy of the app\n            \n                Privacy Policy\n            \n            License to use\n            The app is released under the MIT license.\n            External services\n            The app uses Google Maps APIs. By using the app, you are bound by Google's Terms of Service:\n                Google Terms of Service\n            \n        \n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Terms of service of STRADA                            These Terms of service govern your use of the application                STRADA                        By using the app, you accept these Terms in full. If you disagree with these Terms or any part of these Terms,                you must not use the app.                        Privacy Policy of the app                            Privacy Policy                        License to use            The app is released under the MIT license.            External services            The app uses Google Maps APIs. By using the app, you are bound by Google\\'s Terms of Service:                Google Terms of Service                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TermsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UiComponent.html":{"url":"components/UiComponent.html","title":"component - UiComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UiComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/ui.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                CanComponentDeactivate\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ui\n            \n\n            \n                styleUrls\n                ui.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ui.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                network\n                            \n                            \n                                numerical\n                            \n                            \n                                pending\n                            \n                            \n                                statistics\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canDeactivate\n                            \n                            \n                                exit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDialog\n                            \n                            \n                                openSnackBar\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, snackBar: MatSnackBar, dialog: MatDialog, cdr: ChangeDetectorRef, store: Store, scheduler: SchedulerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/ui.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        scheduler\n                                                  \n                                                        \n                                                                    SchedulerService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canDeactivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanDeactivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:83\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable | boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            exit\n                            \n                            \n                        \n                    \n                \n                \n                    \nexit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:102\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenDialog(data: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:114\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openSnackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenSnackBar(message: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:106\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:93\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            network\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        network:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numerical\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        numerical:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pending\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pending:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            statistics\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        statistics:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy, ViewEncapsulation, ChangeDetectorRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatSnackBar, MatDialog } from '@angular/material';\nimport { Subscription, Observable, of } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { CanComponentDeactivate } from '../shared/can-deactivate-guard.service';\nimport { SchedulerService } from './wizard/scheduler.service';\nimport * as fromUi from './models/reducers';\n\nimport { MessageArchivedComponent } from '../shared/message-archived.component';\nimport { InfoDialogComponent } from '../shared/info-dialog.component';\n\n@Component({\n    selector: 'app-ui',\n    templateUrl: './ui.component.html',\n    styleUrls: ['./ui.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class UiComponent implements OnInit, OnDestroy, CanComponentDeactivate {\n\n    pending: boolean = false;\n\n    network: boolean = true;\n\n    numerical: boolean = false;\n\n    statistics: boolean = false;\n\n    subscriptions: Subscription[] = [];\n\n    constructor(\n        private router: Router,\n        private snackBar: MatSnackBar,\n        private dialog: MatDialog,\n        private cdr: ChangeDetectorRef,\n        private store: Store,\n        private scheduler: SchedulerService\n    ) { }\n\n    ngOnInit(): void {\n        // Pending state.\n        this.subscriptions.push(this.store.pipe(select(fromUi.pending)).subscribe((pending: boolean) => {\n            this.pending = pending;\n        }));\n        // Error state.\n        this.subscriptions.push(this.store.pipe(select(fromUi.error)).subscribe((error: string) => {\n            if (error) {\n                this.openSnackBar(error);\n            }\n        }));\n        // Panels.\n        this.subscriptions.push(this.store.pipe(select(fromUi.currentStep)).subscribe((currentStep: number) => {\n            switch (currentStep) {\n                case 0:\n                    this.network = true;\n                    this.numerical = false;\n                    this.statistics = false;\n                    this.cdr.detectChanges();\n                    break;\n                case 4:\n                    this.numerical = true;\n                    this.statistics = false;\n                    this.cdr.detectChanges();\n                    break;\n                case 5:\n                    this.numerical = true;\n                    this.statistics = true;\n                    this.cdr.detectChanges();\n                    break;\n            }\n        }));\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach((subscription: Subscription) => {\n            if (subscription) { subscription.unsubscribe(); }\n        });\n    }\n\n    canDeactivate(): Observable | boolean {\n        return this.openDialog('Are you sure you want to exit the simulation?').pipe(\n            tap((dialogResult: boolean) => {\n                if (dialogResult) {\n                    this.scheduler.reset();\n                }\n            })\n        );\n    }\n\n    reset(): void {\n        this.openDialog('Are you sure you want to reset the simulation?').subscribe(\n            (dialogResult: boolean) => {\n                if (dialogResult) {\n                    this.scheduler.reset();\n                }\n            });\n    }\n\n    exit(): void {\n        this.router.navigate(['/home']);\n    }\n\n    openSnackBar(message: string): void {\n        this.snackBar.openFromComponent(MessageArchivedComponent, {\n            data: message,\n            duration: 5000,\n            panelClass: ['error-snackbar']\n        });\n    }\n\n    openDialog(data: string): Observable {\n        const dialogRef = this.dialog.open(InfoDialogComponent, {\n            width: '250px',\n            data: data,\n            hasBackdrop: true,\n            panelClass: 'info-dialog'\n        });\n\n        return dialogRef.afterClosed();\n    }\n\n}\n\n    \n\n    \n        \n    \n    \n    \n        {{ pending }}\n    \n\n\n\n    \n        \n            \n        \n        \n            \n                \n                    \n                        \n                            Network\n                        \n                    \n                    \n                \n                \n                    \n                        \n                            Numerical\n                        \n                    \n                    \n                \n                \n                    \n                        \n                            Statistics\n                        \n                    \n                    \n                \n            \n        \n    \n    \n        \n        \n            Reset\n            Exit\n        \n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ pending }}                                                                                                                                                Network                                                                                                                                                                        Numerical                                                                                                                                                                        Statistics                                                                                                                                        Reset            Exit            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UiComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiModule.html":{"url":"modules/UiModule.html","title":"module - UiModule","body":"\n                   \n\n\n\n\n  Modules\n  UiModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UiModule\n\n\n\ncluster_UiModule_declarations\n\n\n\ncluster_UiModule_imports\n\n\n\ncluster_UiModule_providers\n\n\n\n\nChangeOfConditionsComponent\n\nChangeOfConditionsComponent\n\n\n\nUiModule\n\nUiModule\n\nUiModule -->\n\nChangeOfConditionsComponent->UiModule\n\n\n\n\n\nChartsComponent\n\nChartsComponent\n\nUiModule -->\n\nChartsComponent->UiModule\n\n\n\n\n\nEstimateOfDemandComponent\n\nEstimateOfDemandComponent\n\nUiModule -->\n\nEstimateOfDemandComponent->UiModule\n\n\n\n\n\nGoogleMapComponent\n\nGoogleMapComponent\n\nUiModule -->\n\nGoogleMapComponent->UiModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nUiModule -->\n\nMapComponent->UiModule\n\n\n\n\n\nNumericComponent\n\nNumericComponent\n\nUiModule -->\n\nNumericComponent->UiModule\n\n\n\n\n\nSearchForTheAreaComponent\n\nSearchForTheAreaComponent\n\nUiModule -->\n\nSearchForTheAreaComponent->UiModule\n\n\n\n\n\nSelectionOfTheAreaComponent\n\nSelectionOfTheAreaComponent\n\nUiModule -->\n\nSelectionOfTheAreaComponent->UiModule\n\n\n\n\n\nSimulationComponent\n\nSimulationComponent\n\nUiModule -->\n\nSimulationComponent->UiModule\n\n\n\n\n\nStatisticsComponent\n\nStatisticsComponent\n\nUiModule -->\n\nStatisticsComponent->UiModule\n\n\n\n\n\nUiComponent\n\nUiComponent\n\nUiModule -->\n\nUiComponent->UiModule\n\n\n\n\n\nWeatherComponent\n\nWeatherComponent\n\nUiModule -->\n\nWeatherComponent->UiModule\n\n\n\n\n\nWizardComponent\n\nWizardComponent\n\nUiModule -->\n\nWizardComponent->UiModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nUiModule -->\n\nSharedModule->UiModule\n\n\n\n\n\nUiRoutingModule\n\nUiRoutingModule\n\nUiModule -->\n\nUiRoutingModule->UiModule\n\n\n\n\n\nMapService\n\nMapService\n\nUiModule -->\n\nMapService->UiModule\n\n\n\n\n\nSchedulerService\n\nSchedulerService\n\nUiModule -->\n\nSchedulerService->UiModule\n\n\n\n\n\nWizardService\n\nWizardService\n\nUiModule -->\n\nWizardService->UiModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/ui/ui.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ChangeOfConditionsComponent\n                            \n                            \n                                ChartsComponent\n                            \n                            \n                                EstimateOfDemandComponent\n                            \n                            \n                                GoogleMapComponent\n                            \n                            \n                                MapComponent\n                            \n                            \n                                NumericComponent\n                            \n                            \n                                SearchForTheAreaComponent\n                            \n                            \n                                SelectionOfTheAreaComponent\n                            \n                            \n                                SimulationComponent\n                            \n                            \n                                StatisticsComponent\n                            \n                            \n                                UiComponent\n                            \n                            \n                                WeatherComponent\n                            \n                            \n                                WizardComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     MapService\n                            \n                            \n                                     SchedulerService\n                            \n                            \n                                     WizardService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                            \n                                    UiRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { UiRoutingModule } from './ui-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { StoreModule } from \"@ngrx/store\";\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\n\nimport { UiComponent } from './ui.component';\nimport { WizardComponent } from './wizard/wizard.component';\nimport { SearchForTheAreaComponent } from './wizard/search-for-the-area/search-for-the-area.component';\nimport { SelectionOfTheAreaComponent } from './wizard/selection-of-the-area/selection-of-the-area.component';\nimport { EstimateOfDemandComponent } from './wizard/estimate-of-demand/estimate-of-demand.component';\nimport { ChangeOfConditionsComponent } from './wizard/change-of-conditions/change-of-conditions.component';\nimport { SimulationComponent } from './wizard/simulation/simulation.component';\nimport { StatisticsComponent } from './wizard/statistics/statistics.component';\nimport { MapComponent } from './map/map.component';\nimport { GoogleMapComponent } from './map/google-map.component';\nimport { WeatherComponent } from './weather/weather.component';\nimport { NumericComponent } from './numeric/numeric.component';\nimport { ChartsComponent } from './charts/charts.component';\n\nimport { WizardService } from './wizard/wizard.service';\nimport { SchedulerService } from './wizard/scheduler.service';\nimport { MapService } from './map/map.service';\nimport { reducers } from './models/reducers';\n\n@NgModule({\n    imports: [\n        UiRoutingModule,\n        SharedModule,\n        StoreModule.forFeature('ui', reducers),\n        OwlDateTimeModule,\n        OwlNativeDateTimeModule\n    ],\n    declarations: [\n        UiComponent,\n        WizardComponent,\n        SearchForTheAreaComponent,\n        SelectionOfTheAreaComponent,\n        EstimateOfDemandComponent,\n        ChangeOfConditionsComponent,\n        SimulationComponent,\n        StatisticsComponent,\n        MapComponent,\n        GoogleMapComponent,\n        WeatherComponent,\n        NumericComponent,\n        ChartsComponent\n    ],\n    providers: [\n        WizardService,\n        SchedulerService,\n        MapService\n    ]\n})\nexport class UiModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiRoutingModule.html":{"url":"modules/UiRoutingModule.html","title":"module - UiRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  UiRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/ui/ui-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { CanDeactivateGuard } from '../shared/can-deactivate-guard.service';\n\nimport { UiComponent } from './ui.component';\n\n@NgModule({\n    imports: [\n        RouterModule.forChild([\n            { path: '', component: UiComponent, pathMatch: 'full', canDeactivate: [CanDeactivateGuard] }\n        ])\n    ],\n    exports: [RouterModule]\n})\nexport class UiRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UiState.html":{"url":"interfaces/UiState.html","title":"interface - UiState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UiState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/reducers.ts\n        \n\n            \n                Description\n            \n            \n                User interface state management.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        map\n                                \n                                \n                                        wizard\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        map\n                                    \n                                \n                                \n                                    \n                                        map:     fromMap.MapState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromMap.MapState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wizard\n                                    \n                                \n                                \n                                    \n                                        wizard:     fromWizard.WizardState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromWizard.WizardState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, createFeatureSelector, createSelector, MemoizedSelector } from \"@ngrx/store\";\n\nimport * as fromWizard from './reducers/wizard.reducer';\nimport * as fromMap from './reducers/map.reducer';\nimport { Step, Map } from \"./ui-state\";\n\n/**\n * User interface state management.\n */\nexport interface UiState {\n\n    wizard: fromWizard.WizardState;\n    map: fromMap.MapState;\n\n}\n\nexport const reducers: ActionReducerMap = {\n    wizard: fromWizard.wizardReducer,\n    map: fromMap.mapReducer\n};\n\nexport const featureUiState: MemoizedSelector = createFeatureSelector('ui');\n\n/**\n * Exports the wizard state.\n */\nexport const wizardState: MemoizedSelector = createSelector(\n    featureUiState,\n    (state: UiState) => state.wizard\n);\n\n/**\n * Exports the steps state.\n */\nexport const steps: MemoizedSelector = createSelector(\n    wizardState,\n    fromWizard.getSteps\n);\n\n/**\n * Exports the current step state.\n */\nexport const currentStep: MemoizedSelector = createSelector(\n    wizardState,\n    fromWizard.getCurrentStep\n);\n\n/**\n * Exports the error state.\n */\nexport const error: MemoizedSelector = createSelector(\n    wizardState,\n    fromWizard.getError\n);\n\n/**\n * Exports the pending state.\n */\nexport const pending: MemoizedSelector = createSelector(\n    wizardState,\n    fromWizard.getPending\n);\n\n/**\n * Exports the map state.\n */\nexport const mapState: MemoizedSelector = createSelector(\n    featureUiState,\n    (state: UiState) => state.map\n);\n\nexport const map: MemoizedSelector = createSelector(\n    mapState,\n    fromMap.getMap\n);\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherComponent.html":{"url":"components/WeatherComponent.html","title":"component - WeatherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/weather/weather.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ui-weather\n            \n\n            \n                styleUrls\n                weather.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                icon\n                            \n                            \n                                iconContainer\n                            \n                            \n                                time\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getIcon\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                resetConditions\n                            \n                            \n                                sendActions\n                            \n                            \n                                setConditions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, renderer: s/end.html\">Renderer2, store: Store, weather: WeatherService, network: NetworkService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/weather/weather.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        weather\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIcon(code: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:90\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        code\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     HTMLImageElement\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetConditions\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetConditions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setConditions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetConditions(weather: WeatherConditions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:74\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        weather\n                                                        \n                                                                    WeatherConditions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        description:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '-'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icon:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iconContainer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iconContainer:     HTMLElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            time\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        time:     any | string\n\n                    \n                \n                    \n                        \n                            Type :     any | string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, ElementRef, Renderer2 } from '@angular/core';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { WeatherService } from '../../network/weather/weather.service';\nimport { NetworkService } from '../../network/network.service';\nimport * as fromUi from '../models/reducers';\nimport { Step } from '../models/ui-state';\nimport { WeatherConditions } from '../../network/weather/weather';\nimport { appConfig } from '../../app-config';\n\nimport { BaseComponent } from '../models/base.component';\n\n@Component({\n    selector: 'ui-weather',\n    templateUrl: './weather.component.html',\n    styleUrls: ['./weather.component.scss']\n})\nexport class WeatherComponent extends BaseComponent implements OnInit, AfterViewInit {\n\n    description: string = '-';\n\n    iconContainer: HTMLElement;\n\n    icon: any;\n\n    time: any | string = '';\n\n    constructor(\n        private elementRef: ElementRef,\n        private renderer: Renderer2,\n        private store: Store,\n        private weather: WeatherService,\n        private network: NetworkService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    ngAfterViewInit(): void {\n        this.iconContainer = this.elementRef.nativeElement.querySelector('#iconContainer');\n    }\n\n    valueChanges(): void {\n        //\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.currentStep)).subscribe((currentStep: number) => {\n            const weatherConditions = this.weather.getWeatherConditions();\n            switch (currentStep) {\n                case 0:\n                    this.resetConditions();\n                    break;\n                case 3:\n                    this.setConditions(weatherConditions);\n                    break;\n                case 4:\n                    this.resetConditions();\n                    this.setConditions(weatherConditions);\n                    break;\n            }\n        }));\n    }\n\n    sendActions(): void {\n        //\n    }\n\n    setConditions(weather: WeatherConditions): void {\n        this.description = weather.description;\n        this.icon = this.getIcon(weather.icon);\n        this.renderer.appendChild(this.iconContainer, this.icon);\n        this.time = this.network.getTimeString();\n    }\n\n    resetConditions(): void {\n        this.description = '-';\n        if (this.icon) {\n            this.renderer.removeChild(this.iconContainer, this.icon);\n            this.icon = null;\n            this.time = '';\n        }\n    }\n\n    getIcon(code: string): HTMLImageElement {\n        const icon = new Image();\n        if (!!code) {\n            icon.src = appConfig.apis.openWeatherMap.iconUrl + '/' + code + '.png';\n        }\n        return icon;\n    }\n\n}\n\n    \n\n    \n        \n    \n        Weather {{ description | uppercase }}\n        \n        {{ time }}\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Weather {{ description | uppercase }}                {{ time }}    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WeatherConditions.html":{"url":"interfaces/WeatherConditions.html","title":"interface - WeatherConditions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WeatherConditions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/weather/weather.ts\n        \n\n            \n                Description\n            \n            \n                Weather conditions data.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                            Optional\n                                        rainIntensity\n                                \n                                \n                                            Optional\n                                        snowIntensity\n                                \n                                \n                                            Optional\n                                        visibility\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The code of the icon.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rainIntensity\n                                    \n                                \n                                \n                                    \n                                        rainIntensity:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Millimeters.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        snowIntensity\n                                    \n                                \n                                \n                                    \n                                        snowIntensity:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Millimeters.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visibility\n                                    \n                                \n                                \n                                    \n                                        visibility:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Meters.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface WeatherConditions {\n\n    description: string;\n    /**\n     * The code of the icon.\n     */\n    icon?: string;\n    /**\n     * Meters.\n     */\n    visibility?: number;\n    /**\n     * Millimeters.\n     */\n    rainIntensity?: number;\n    /**\n     * Millimeters.\n     */\n    snowIntensity?: number;\n\n}\n\nexport enum WeatherDescription {\n    clearSky = 'clear sky',\n    fewClouds = 'few clouds',\n    scatteredClouds = 'scattered clouds',\n    brokenClouds = 'broken clouds',\n    showerRain = 'shower rain',\n    rain = 'rain',\n    thunderstorm = 'thunderstorm',\n    snow = 'snow',\n    mist = 'mist',\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WeatherModule.html":{"url":"modules/WeatherModule.html","title":"module - WeatherModule","body":"\n                   \n\n\n\n\n  Modules\n  WeatherModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_providers\n\n\n\n\nWeatherService\n\nWeatherService\n\n\n\nWeatherModule\n\nWeatherModule\n\nWeatherModule -->\n\nWeatherService->WeatherModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/network/weather/weather.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     WeatherService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { WeatherService } from './weather.service';\n\n@NgModule({\n    imports: [],\n    declarations: [],\n    providers: [WeatherService]\n})\nexport class WeatherModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherService.html":{"url":"injectables/WeatherService.html","title":"injectable - WeatherService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  WeatherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/weather/weather.service.ts\n        \n\n            \n                Description\n            \n            \n                Gets the weather data from the Weather or Forecast resources\nand provides reduction factors for graph values based on weather conditions.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                weatherConditions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addWeatherConditions\n                            \n                            \n                                    Public\n                                changeWeather\n                            \n                            \n                                    Public\n                                getFactors\n                            \n                            \n                                    Public\n                                getWeatherConditions\n                            \n                            \n                                    Public\n                                getWeatherData\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Private\n                                toInches\n                            \n                            \n                                    Public\n                                updateWeatherData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, location: LocationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/weather/weather.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    LocationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            addWeatherConditions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addWeatherConditions(data: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:110\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            changeWeather\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        changeWeather(weather: WeatherConditions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:81\n                            \n                        \n\n\n                \n                    \n                            Changes the current weather conditions.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weather\n                                                        \n                                                                    WeatherConditions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The weather conditions\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFactors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFactors()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:95\n                            \n                        \n\n\n                \n                    \n                            Calculates Weather Adjustment Factors.\n\n\n                            \n                            \n                            \n                                Returns :     number[]\n\n                            \n                                \n                                    The factor for max flow parameter\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getWeatherConditions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getWeatherConditions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     WeatherConditions\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getWeatherData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getWeatherData(time?: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:34\n                            \n                        \n\n\n                \n                    \n                            Gets weather data from the Weather resource. The Forecast resource is called only if the optional parameter 'time' is evaluated.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        time\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                Optional parameter for forecasting data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            toInches\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toInches(value: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:120\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updateWeatherData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateWeatherData(data: any, time?: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:54\n                            \n                        \n\n\n                \n                    \n                            Updates weather conditions with the data obtained from OpenWeatherMap.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Weather data\n\n                                                        \n                                                \n                                                \n                                                        time\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                Optional parameter for forecasting data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            weatherConditions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherConditions:     WeatherConditions\n\n                    \n                \n                    \n                        \n                            Type :     WeatherConditions\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable, throwError, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { LocationService } from '../../location/location.service';\nimport { WeatherConditions } from './weather';\nimport { round } from '../../utils';\nimport { appConfig } from '../../app-config';\nimport { uiConfig } from '../../ui/ui-config';\n\n/**\n * Gets the weather data from the Weather or Forecast resources\n * and provides reduction factors for graph values based on weather conditions.\n */\n@Injectable() export class WeatherService {\n\n    private weatherConditions: WeatherConditions;\n\n    constructor(private http: HttpClient, private location: LocationService) { }\n\n    public reset(): void {\n        this.weatherConditions = null;\n    }\n\n    public getWeatherConditions(): WeatherConditions {\n        return this.weatherConditions;\n    }\n\n    /**\n     * Gets weather data from the Weather resource. The Forecast resource is called only if the optional parameter 'time' is evaluated.\n     * @param time Optional parameter for forecasting data\n     */\n    public getWeatherData(time?: Date): Observable {\n        const url: string = time ? appConfig.apis.openWeatherMap.forecastUrl : appConfig.apis.openWeatherMap.weatherUrl;\n        const options = {\n            params: new HttpParams()\n                .set('lat', this.location.getLatLng().lat.toString())\n                .set('lon', this.location.getLatLng().lng.toString())\n                .set('appid', appConfig.apis.openWeatherMap.apiKey)\n        };\n\n        return this.http.get(url, options).pipe(\n            map((response: any) => response),\n            catchError((error: any) => throwError('getWeatherData'))\n        );\n    }\n\n    /**\n     * Updates weather conditions with the data obtained from OpenWeatherMap.\n     * @param data Weather data\n     * @param time Optional parameter for forecasting data\n     */\n    public updateWeatherData(data: any, time?: Date): Observable {\n        if (time != null && data.list.length > 0) {\n            const timezoneOffset = time.getTimezoneOffset() * 60 * 1000; // Timezone offset in milliseconds\n            const utcTime = time.getTime() + timezoneOffset;\n\n            let preDt: number = data.list[0].dt * 1000; // Converts Unix UTC in milliseconds\n            let forecast: any = data.list[0];\n            for (let i = 1; i = utcTime) {\n                    forecast = nextDt - utcTime \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WizardComponent.html":{"url":"components/WizardComponent.html","title":"component - WizardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WizardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/wizard.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                ui-wizard\n            \n\n            \n                styleUrls\n                wizard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./wizard.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                stepper\n                            \n                            \n                                wizardForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                exit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                stepClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, router: Router, wizard: WizardService, scheduler: SchedulerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/wizard.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        scheduler\n                                                  \n                                                        \n                                                                    SchedulerService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            exit\n                            \n                            \n                        \n                    \n                \n                \n                    \nexit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.component.ts:119\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.component.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stepClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nstepClick(event: StepperSelectionEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.component.ts:92\n                            \n                        \n\n\n                \n                    \n                            Updates current step and step data.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    StepperSelectionEvent\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                SelectionChange stepper event.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stepper\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stepper:     MatStepper\n\n                    \n                \n                    \n                        \n                            Type :     MatStepper\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wizardForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        wizardForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        formSteps\n                    \n                \n\n                \n                    \n                        getformSteps()\n                    \n                \n                            \n                                \n                                    Defined in src/app/ui/wizard/wizard.component.ts:24\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, FormArray, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MatStepper } from '@angular/material';\nimport { StepperSelectionEvent } from '@angular/cdk/stepper';\n\nimport { WizardService } from './wizard.service';\nimport { SchedulerService } from './scheduler.service';\nimport { pairsValidator } from '../directives/pairs.directive';\nimport { uiConfig } from '../ui-config';\n\n@Component({\n    selector: 'ui-wizard',\n    templateUrl: './wizard.component.html',\n    styleUrls: ['./wizard.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class WizardComponent implements OnInit {\n\n    @ViewChild('stepper') stepper: MatStepper;\n\n    wizardForm: FormGroup;\n\n    get formSteps(): FormArray {\n        return this.wizardForm.get('formSteps') as FormArray;\n    }\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private router: Router,\n        private wizard: WizardService,\n        private scheduler: SchedulerService\n    ) { }\n\n    ngOnInit(): void {\n        // Creates form model.\n        this.wizardForm = this.formBuilder.group({\n            formSteps: this.formBuilder.array([\n                this.formBuilder.group({\n                    address: [''],\n                    center: [null, [Validators.required]]\n                }),\n                this.formBuilder.group({\n                    bounds: [null, [Validators.required]],\n                    time: [null]\n                }),\n                this.formBuilder.group({\n                    odPairs: this.formBuilder.array([], pairsValidator())\n                }),\n                this.formBuilder.group({\n                    odPairs: this.formBuilder.array([]),\n                    weatherConditions: this.formBuilder.group({\n                        description: [null],\n                        icon: [null],\n                        visibility: [\n                            null,\n                            [Validators.required,\n                            Validators.min(0),\n                            Validators.max(uiConfig.visibility.max),\n                            Validators.pattern('^[0-9]*$')]\n                        ],\n                        rainIntensity: [\n                            null,\n                            [Validators.required,\n                            Validators.min(0),\n                            Validators.max(uiConfig.rainIntensity.max),\n                            Validators.pattern('^[0-9]*$')]\n                        ],\n                        snowIntensity: [\n                            null,\n                            [Validators.required,\n                            Validators.min(0),\n                            Validators.max(uiConfig.snowIntensity.max),\n                            Validators.pattern('^[0-9]*$')]\n                        ]\n                    })\n                }),\n                this.formBuilder.group({\n                    endSimulation: [false, [Validators.requiredTrue]]\n                }),\n                this.formBuilder.group({})\n            ])\n        }, { updateOn: 'blur' });\n\n        this.wizard.stepper = this.stepper;\n    }\n\n    /**\n     * Updates current step and step data.\n     * @param event SelectionChange stepper event.\n     */\n    stepClick(event: StepperSelectionEvent): void {\n        const index: number = event.previouslySelectedIndex;\n        const nextIndex: number = event.selectedIndex;\n        const data = this.wizardForm.get('formSteps').get([index]).value;\n\n        if (nextIndex > index) {\n            this.stepper.selected.completed = true;\n            switch (nextIndex) {\n                case 2:\n                    this.scheduler.scheduleNetwork(data, index, nextIndex);\n                    break;\n                case 3:\n                    this.scheduler.scheduleDemand(data, index, nextIndex);\n                    break;\n                case 4:\n                    this.scheduler.scheduleSimulation(data, index, nextIndex);\n                    break;\n                default:\n                    this.wizard.goOn(\n                        data,\n                        index,\n                        nextIndex\n                    );\n            }\n        }\n    }\n\n    exit(): void {\n        if (this.stepper.selectedIndex == 5) {\n            this.router.navigate(['/home']);\n        }\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    \n                        Search for the area\n                    \n                    \n                \n                \n                    \n                        Selection of the area\n                    \n                    \n                \n                \n                    \n                        Estimate of demand\n                    \n                    \n                \n                \n                    \n                        Change of conditions\n                    \n                    \n                \n                \n                    \n                        Simulation\n                    \n                    \n                \n                \n                    \n                        Statistics\n                    \n                    \n                \n            \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    Search for the area                                                                                                                    Selection of the area                                                                                                                    Estimate of demand                                                                                                                    Change of conditions                                                                                                                    Simulation                                                                                                                    Statistics                                                                                '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WizardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WizardService.html":{"url":"injectables/WizardService.html","title":"injectable - WizardService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  WizardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/wizard/wizard.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                state\n                            \n                            \n                                    Public\n                                stepper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                goOn\n                            \n                            \n                                    Public\n                                putInError\n                            \n                            \n                                    Public\n                                putOnHold\n                            \n                            \n                                    Public\n                                removeFromError\n                            \n                            \n                                    Public\n                                removeFromWaiting\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Public\n                                updateStep\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/wizard.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            goOn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        goOn(data: any, index: number, nextIndex: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        nextIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            putInError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        putInError(error: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            putOnHold\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        putOnHold(message?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            removeFromError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeFromError()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            removeFromWaiting\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeFromWaiting()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updateStep\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateStep(data: any, index: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            state\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        state:     WizardState\n\n                    \n                \n                    \n                        \n                            Type :     WizardState\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stepper\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stepper:     MatStepper\n\n                    \n                \n                    \n                        \n                            Type :     MatStepper\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { MatStepper } from \"@angular/material\";\n\nimport { Store, select } from '@ngrx/store';\n\nimport * as fromUi from '../models/reducers';\nimport { WizardActionTypes } from '../models/actions/wizard.actions';\nimport { WizardState } from \"../models/reducers/wizard.reducer\";\n\n@Injectable() export class WizardService {\n\n    public state: WizardState;\n\n    public stepper: MatStepper;\n\n    constructor(private store: Store) {\n        this.store.pipe(select(fromUi.wizardState)).subscribe((state: WizardState) => {\n            this.state = state;\n        });\n    }\n\n    public reset(): void {\n        // Stepper.\n        this.stepper.reset();\n        // UI state.\n        this.store.dispatch({\n            type: WizardActionTypes.Reset\n        });\n    }\n\n    public updateStep(data: any, index: number): void {\n        this.store.dispatch({\n            type: WizardActionTypes.StepChanged,\n            payload: { step: { data: data }, index: index }\n        });\n    }\n\n    public putInError(error: string): void {\n        this.store.dispatch({\n            type: WizardActionTypes.StepError,\n            payload: error\n        });\n    }\n\n    public putOnHold(message?: string): void {\n        this.store.dispatch({\n            type: WizardActionTypes.StepPending,\n            payload: message || true\n        });\n    }\n\n    public removeFromError(): void {\n        this.store.dispatch({\n            type: WizardActionTypes.StepError,\n            payload: null\n        });\n    }\n\n    public removeFromWaiting(): void {\n        this.store.dispatch({\n            type: WizardActionTypes.StepPending,\n            payload: false\n        });\n    }\n\n    public goOn(data: any, index: number, nextIndex: number): void {\n        this.store.dispatch({\n            type: WizardActionTypes.GoOn,\n            payload: { step: { data: data }, index: index, nextIndex: nextIndex }\n        });\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WizardState.html":{"url":"interfaces/WizardState.html","title":"interface - WizardState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WizardState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/reducers/wizard.reducer.ts\n        \n\n            \n                Description\n            \n            \n                Wizard state management.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        currentStep\n                                \n                                \n                                        error\n                                \n                                \n                                        pending\n                                \n                                \n                                        steps\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentStep\n                                    \n                                \n                                \n                                    \n                                        currentStep:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pending\n                                    \n                                \n                                \n                                    \n                                        pending:     string | boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        steps\n                                    \n                                \n                                \n                                    \n                                        steps:     Step[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Step[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import deepClone from 'mout/lang/deepClone';\n\nimport { Step, STEPS } from \"../ui-state\";\nimport { WizardActions, WizardActionTypes } from '../actions/wizard.actions';\n\n/**\n * Wizard state management.\n */\nexport interface WizardState {\n\n    steps: Step[];\n    currentStep: number;\n    error: string | null;\n    pending: string | boolean;\n\n}\n\nexport const initialWizardState: WizardState = {\n    steps: STEPS,\n    currentStep: 0,\n    error: null,\n    pending: false\n};\n\n/**\n * ngrx: wizard Reducer.\n */\nexport function wizardReducer(state: WizardState = deepClone(initialWizardState), action: WizardActions): WizardState {\n    switch (action.type) {\n        case WizardActionTypes.StepChanged: {\n            // Updates the step at the provided index.\n            state.steps[action.payload.index] = action.payload.step;\n            return {\n                ...state,\n                steps: deepClone(state.steps),\n                error: null,\n                pending: false\n            };\n        }\n        case WizardActionTypes.StepError: {\n            return {\n                ...state,\n                error: action.payload,\n                pending: false\n            };\n        }\n        case WizardActionTypes.StepPending: {\n            return {\n                ...state,\n                error: null,\n                pending: action.payload\n            };\n        }\n        case WizardActionTypes.GoOn: {\n            // Updates the step at the provided index.\n            state.steps[action.payload.index] = action.payload.step;\n            return {\n                ...state,\n                steps: deepClone(state.steps),\n                currentStep: action.payload.nextIndex\n            };\n        }\n        case WizardActionTypes.Reset: {\n            return deepClone(initialWizardState);\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\nexport const getSteps: (state: WizardState) => Step[] = (state: WizardState) => state.steps;\n\nexport const getCurrentStep: (state: WizardState) => number = (state: WizardState) => state.currentStep;\n\nexport const getError: (state: WizardState) => string = (state: WizardState) => state.error;\n\nexport const getPending: (state: WizardState) => string | boolean = (state: WizardState) => state.pending;\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 6.1.1\n        \n            @angular/common : 6.1.1\n        \n            @angular/compiler : 6.1.1\n        \n            @angular/core : 6.1.1\n        \n            @angular/forms : 6.1.1\n        \n            @angular/http : 6.1.1\n        \n            @angular/platform-browser : 6.1.1\n        \n            @angular/platform-browser-dynamic : 6.1.1\n        \n            @angular/router : 6.1.1\n        \n            @angular/material : 6.4.3\n        \n            @angular/cdk : 6.4.3\n        \n            @angular/flex-layout : 6.0.0-beta.17\n        \n            @ngrx/store : 6.1.0\n        \n            @turf/area : 6.0.1\n        \n            @turf/helpers : 6.1.4\n        \n            @turf/invariant : 6.1.2\n        \n            @turf/bearing : 6.0.1\n        \n            @turf/distance : 6.0.1\n        \n            @turf/transform-translate : 5.1.5\n        \n            @turf/centroid : 6.0.2\n        \n            @turf/center : 6.0.1\n        \n            ng-pick-datetime : 6.0.15\n        \n            mout : 1.1.0\n        \n            everpolate : 0.0.3\n        \n            chart.js : 2.7.2\n        \n            chartjs-plugin-annotation : 0.5.7\n        \n            web-animations-js : 2.3.1\n        \n            hammerjs : 2.0.8\n        \n            animejs : 2.2.0\n        \n            qs : 6.5.2\n        \n            core-js : 2.5.7\n        \n            rxjs : 6.2.2\n        \n            zone.js : 0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Control   (src/.../clock.service.ts)\n                        \n                        \n                            MapActionTypes   (src/.../map.actions.ts)\n                        \n                        \n                            PathType   (src/.../graph.ts)\n                        \n                        \n                            SimulationActionTypes   (src/.../simulation.actions.ts)\n                        \n                        \n                            WeatherDescription   (src/.../weather.ts)\n                        \n                        \n                            WizardActionTypes   (src/.../wizard.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/simulation/clock.service.ts\n    \n        \n            \n                \n                    \n                        \n                        Control\n                    \n                \n                        \n                            \n                                 start\n                            \n                        \n                        \n                            \n                                Value: start\n                            \n                        \n                        \n                            \n                                 pause\n                            \n                        \n                        \n                            \n                                Value: pause\n                            \n                        \n                        \n                            \n                                 stop\n                            \n                        \n                        \n                            \n                                Value: stop\n                            \n                        \n                        \n                            \n                                 step\n                            \n                        \n                        \n                            \n                                Value: step\n                            \n                        \n                        \n                            \n                                 slow\n                            \n                        \n                        \n                            \n                                Value: slow\n                            \n                        \n                        \n                            \n                                 quick\n                            \n                        \n                        \n                            \n                                Value: quick\n                            \n                        \n            \n        \n\n    src/app/ui/models/actions/map.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        MapActionTypes\n                    \n                \n                    \n                        \n                            ngrx: map Actions.\n\n                        \n                    \n                        \n                            \n                                 MapChanged\n                            \n                        \n                        \n                            \n                                Value: [Map] Map Changed\n                            \n                        \n                        \n                            \n                                 Reset\n                            \n                        \n                        \n                            \n                                Value: [Map] Reset\n                            \n                        \n            \n        \n\n    src/app/network/graph.ts\n    \n        \n            \n                \n                    \n                        \n                        PathType\n                    \n                \n                        \n                            \n                                 distance\n                            \n                        \n                        \n                            \n                                Value: distance\n                            \n                        \n                        \n                            \n                                 duration\n                            \n                        \n                        \n                            \n                                Value: duration\n                            \n                        \n            \n        \n\n    src/app/simulation/models/actions/simulation.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        SimulationActionTypes\n                    \n                \n                    \n                        \n                            ngrx: simulation Actions.\n\n                        \n                    \n                        \n                            \n                                 SimulationChanged\n                            \n                        \n                        \n                            \n                                Value: [Simulation] Simulation Changed\n                            \n                        \n                        \n                            \n                                 SimulationEnded\n                            \n                        \n                        \n                            \n                                Value: [Simulation] Simulation Ended\n                            \n                        \n                        \n                            \n                                 PeriodsChanged\n                            \n                        \n                        \n                            \n                                Value: [Simulation] Periods Changed\n                            \n                        \n                        \n                            \n                                 Reset\n                            \n                        \n                        \n                            \n                                Value: [Simulation] Reset\n                            \n                        \n            \n        \n\n    src/app/network/weather/weather.ts\n    \n        \n            \n                \n                    \n                        \n                        WeatherDescription\n                    \n                \n                        \n                            \n                                 clearSky\n                            \n                        \n                        \n                            \n                                Value: clear sky\n                            \n                        \n                        \n                            \n                                 fewClouds\n                            \n                        \n                        \n                            \n                                Value: few clouds\n                            \n                        \n                        \n                            \n                                 scatteredClouds\n                            \n                        \n                        \n                            \n                                Value: scattered clouds\n                            \n                        \n                        \n                            \n                                 brokenClouds\n                            \n                        \n                        \n                            \n                                Value: broken clouds\n                            \n                        \n                        \n                            \n                                 showerRain\n                            \n                        \n                        \n                            \n                                Value: shower rain\n                            \n                        \n                        \n                            \n                                 rain\n                            \n                        \n                        \n                            \n                                Value: rain\n                            \n                        \n                        \n                            \n                                 thunderstorm\n                            \n                        \n                        \n                            \n                                Value: thunderstorm\n                            \n                        \n                        \n                            \n                                 snow\n                            \n                        \n                        \n                            \n                                Value: snow\n                            \n                        \n                        \n                            \n                                 mist\n                            \n                        \n                        \n                            \n                                Value: mist\n                            \n                        \n            \n        \n\n    src/app/ui/models/actions/wizard.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        WizardActionTypes\n                    \n                \n                    \n                        \n                            ngrx: wizard Actions.\n\n                        \n                    \n                        \n                            \n                                 StepChanged\n                            \n                        \n                        \n                            \n                                Value: [Wizard] Step Changed\n                            \n                        \n                        \n                            \n                                 StepError\n                            \n                        \n                        \n                            \n                                Value: [Wizard] Step Error\n                            \n                        \n                        \n                            \n                                 StepPending\n                            \n                        \n                        \n                            \n                                Value: [Wizard] Step Pending\n                            \n                        \n                        \n                            \n                                 GoOn\n                            \n                        \n                        \n                            \n                                Value: [Wizard] Go On\n                            \n                        \n                        \n                            \n                                 Reset\n                            \n                        \n                        \n                            \n                                Value: [Wizard] Reset\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            formatTimeFromMilliseconds   (src/.../utils.ts)\n                        \n                        \n                            formatTimeFromSeconds   (src/.../utils.ts)\n                        \n                        \n                            getScript   (src/.../utils.ts)\n                        \n                        \n                            loadScripts   (src/.../utils.ts)\n                        \n                        \n                            mapReducer   (src/.../map.reducer.ts)\n                        \n                        \n                            pairsValidator   (src/.../pairs.directive.ts)\n                        \n                        \n                            round   (src/.../utils.ts)\n                        \n                        \n                            simulationReducer   (src/.../simulation.reducer.ts)\n                        \n                        \n                            toSeconds   (src/.../utils.ts)\n                        \n                        \n                            wizardReducer   (src/.../wizard.reducer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/ui/utils.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            formatTimeFromMilliseconds\n                            \n                            \n                        \n                    \n                \n                \n                    \nformatTimeFromMilliseconds(ms: undefined)\n                    \n                \n\n\n\n\n                \n                    \n                            Format time to M:SS.mmm\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ms\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Milliseconds\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formatTimeFromSeconds\n                            \n                            \n                        \n                    \n                \n                \n                    \nformatTimeFromSeconds(s: undefined)\n                    \n                \n\n\n\n\n                \n                    \n                            Format time to M:SS\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        s\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Seconds\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toSeconds\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoSeconds(value: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/utils.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getScript\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetScript(src: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        src\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadScripts\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadScripts()\n                    \n                \n\n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            round\n                            \n                            \n                        \n                    \n                \n                \n                    \nround(value: undefined, decimals?: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        decimals\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/ui/models/reducers/map.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mapReducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nmapReducer(state: undefined, action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n                            ngrx: map Reducer.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/ui/directives/pairs.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            pairsValidator\n                            \n                            \n                        \n                    \n                \n                \n                    \npairsValidator()\n                    \n                \n\n\n\n\n            \n        \n\n    src/app/simulation/models/reducers/simulation.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            simulationReducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nsimulationReducer(state: undefined, action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n                            ngrx: simulation Reducer.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/ui/models/reducers/wizard.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            wizardReducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nwizardReducer(state: undefined, action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n                            ngrx: wizard Reducer.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSTRADA\n\n\nSTRADA (Simulation of TRAffic DAta) is an urban traffic web simulator that uses data in real time.\n\n\nProject developed for the dissertation of my bachelor's degree in computer engineering.\n\nDocumentation\nOfficial docs: STRADA documentation\nDevelopment\nRequirements\n\nNode.js and npm\nUpdate npm: npm install npm@latest -g\nAngular CLI: npm install -g @angular/cli\nFirebase\nCreate a Firebase project in the Firebase console\nFirebase CLI: npm install -g firebase-tools\nLogin: firebase login\n\n\nGoogle Maps \nGet your API keys: https://cloud.google.com/maps-platform/\nEnable Maps JavaScript API, Geocoding API and Directions API\n\n\nOpenWeatherMap\nGet your API key: https://openweathermap.org/\n\n\n\nPrerequisites\n\nUpdate .firebaserc file\nUpdate src/app/app-config.json file\nUpdate functions/src/functions-config.json file\n\nFirebase Functions\ncd functions\nnpm install\nnpm run serve:devApp\nnpm install\nnpm startTest\nnpm testLicense\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Roberto Simonetti\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DemandModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LocationModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NetworkModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SimulationModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WeatherModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_DemandModule\n\n\n\ncluster_DemandModule_providers\n\n\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_providers\n\n\n\ncluster_NetworkModule\n\n\n\ncluster_NetworkModule_imports\n\n\n\ncluster_NetworkModule_providers\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SimulationModule\n\n\n\ncluster_SimulationModule_providers\n\n\n\ncluster_UiModule\n\n\n\ncluster_UiModule_declarations\n\n\n\ncluster_UiModule_imports\n\n\n\ncluster_UiModule_providers\n\n\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_providers\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nPrivacyComponent\n\nPrivacyComponent\n\nAppModule -->\n\nPrivacyComponent->AppModule\n\n\n\n\n\nTermsComponent\n\nTermsComponent\n\nAppModule -->\n\nTermsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nDemandModule\n\nDemandModule\n\nAppModule -->\n\nDemandModule->AppModule\n\n\n\n\n\nLocationModule\n\nLocationModule\n\nAppModule -->\n\nLocationModule->AppModule\n\n\n\n\n\nNetworkModule\n\nNetworkModule\n\nAppModule -->\n\nNetworkModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nSharedModule->FooterComponent \n\n\n\n\n\nInfoDialogComponent \n\nInfoDialogComponent \n\nInfoDialogComponent  -->\n\nSharedModule->InfoDialogComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nMessageArchivedComponent \n\nMessageArchivedComponent \n\nMessageArchivedComponent  -->\n\nSharedModule->MessageArchivedComponent \n\n\n\n\n\nUiModule\n\nUiModule\n\nUiModule -->\n\nSharedModule->UiModule\n\n\n\n\n\nSimulationModule\n\nSimulationModule\n\nAppModule -->\n\nSimulationModule->AppModule\n\n\n\n\n\nDemandService\n\nDemandService\n\nDemandModule -->\n\nDemandService->DemandModule\n\n\n\n\n\nLocationService\n\nLocationService\n\nLocationModule -->\n\nLocationService->LocationModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nNetworkModule -->\n\nWeatherModule->NetworkModule\n\n\n\n\n\nNetworkService\n\nNetworkService\n\nNetworkModule -->\n\nNetworkService->NetworkModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nSharedModule -->\n\nFooterComponent->SharedModule\n\n\n\n\n\nInfoDialogComponent\n\nInfoDialogComponent\n\nSharedModule -->\n\nInfoDialogComponent->SharedModule\n\n\n\n\n\nMessageArchivedComponent\n\nMessageArchivedComponent\n\nSharedModule -->\n\nMessageArchivedComponent->SharedModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\nClockService\n\nClockService\n\nSimulationModule -->\n\nClockService->SimulationModule\n\n\n\n\n\nSimulationService\n\nSimulationService\n\nSimulationModule -->\n\nSimulationService->SimulationModule\n\n\n\n\n\nChangeOfConditionsComponent\n\nChangeOfConditionsComponent\n\nUiModule -->\n\nChangeOfConditionsComponent->UiModule\n\n\n\n\n\nChartsComponent\n\nChartsComponent\n\nUiModule -->\n\nChartsComponent->UiModule\n\n\n\n\n\nEstimateOfDemandComponent\n\nEstimateOfDemandComponent\n\nUiModule -->\n\nEstimateOfDemandComponent->UiModule\n\n\n\n\n\nGoogleMapComponent\n\nGoogleMapComponent\n\nUiModule -->\n\nGoogleMapComponent->UiModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nUiModule -->\n\nMapComponent->UiModule\n\n\n\n\n\nNumericComponent\n\nNumericComponent\n\nUiModule -->\n\nNumericComponent->UiModule\n\n\n\n\n\nSearchForTheAreaComponent\n\nSearchForTheAreaComponent\n\nUiModule -->\n\nSearchForTheAreaComponent->UiModule\n\n\n\n\n\nSelectionOfTheAreaComponent\n\nSelectionOfTheAreaComponent\n\nUiModule -->\n\nSelectionOfTheAreaComponent->UiModule\n\n\n\n\n\nSimulationComponent\n\nSimulationComponent\n\nUiModule -->\n\nSimulationComponent->UiModule\n\n\n\n\n\nStatisticsComponent\n\nStatisticsComponent\n\nUiModule -->\n\nStatisticsComponent->UiModule\n\n\n\n\n\nUiComponent\n\nUiComponent\n\nUiModule -->\n\nUiComponent->UiModule\n\n\n\n\n\nWeatherComponent\n\nWeatherComponent\n\nUiModule -->\n\nWeatherComponent->UiModule\n\n\n\n\n\nWizardComponent\n\nWizardComponent\n\nUiModule -->\n\nWizardComponent->UiModule\n\n\n\n\n\nUiRoutingModule\n\nUiRoutingModule\n\nUiModule -->\n\nUiRoutingModule->UiModule\n\n\n\n\n\nMapService\n\nMapService\n\nUiModule -->\n\nMapService->UiModule\n\n\n\n\n\nSchedulerService\n\nSchedulerService\n\nUiModule -->\n\nSchedulerService->UiModule\n\n\n\n\n\nWizardService\n\nWizardService\n\nUiModule -->\n\nWizardService->UiModule\n\n\n\n\n\nWeatherService\n\nWeatherService\n\nWeatherModule -->\n\nWeatherService->WeatherModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            11 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        21 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        10 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        23 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        17 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EnumValueType   (src/.../utils.ts)\n                        \n                        \n                            MapActions   (src/.../map.actions.ts)\n                        \n                        \n                            SimulationActions   (src/.../simulation.actions.ts)\n                        \n                        \n                            WizardActions   (src/.../wizard.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/ui/utils.ts\n    \n        \n            \n                \n                    \n                        \n                        EnumValueType\n                    \n                \n                \n                    \n                        EnumValueType:     string | number\n\n                    \n                \n            \n        \n\n    src/app/ui/models/actions/map.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        MapActions\n                    \n                \n                \n                    \n                        MapActions:     MapChanged | Reset\n\n                    \n                \n            \n        \n\n    src/app/simulation/models/actions/simulation.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        SimulationActions\n                    \n                \n                \n                    \n                        SimulationActions:     SimulationChanged | SimulationEnded | PeriodsChanged | Reset\n\n                    \n                \n            \n        \n\n    src/app/ui/models/actions/wizard.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        WizardActions\n                    \n                \n                \n                    \n                        WizardActions:     StepChanged | StepError | StepPending | GoOn | Reset\n\n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            busiestChartOptions   (src/.../charts-config.ts)\n                        \n                        \n                            busiestColor   (src/.../charts-config.ts)\n                        \n                        \n                            currentStep   (src/.../reducers.ts)\n                        \n                        \n                            end   (src/.../reducers.ts)\n                        \n                        \n                            environment   (src/.../environment.test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            error   (src/.../reducers.ts)\n                        \n                        \n                            featureSimulationState   (src/.../reducers.ts)\n                        \n                        \n                            featureUiState   (src/.../reducers.ts)\n                        \n                        \n                            getCurrentStep   (src/.../wizard.reducer.ts)\n                        \n                        \n                            getEnd   (src/.../simulation.reducer.ts)\n                        \n                        \n                            getError   (src/.../wizard.reducer.ts)\n                        \n                        \n                            getMap   (src/.../map.reducer.ts)\n                        \n                        \n                            getPending   (src/.../wizard.reducer.ts)\n                        \n                        \n                            getPeriods   (src/.../simulation.reducer.ts)\n                        \n                        \n                            getSimulation   (src/.../simulation.reducer.ts)\n                        \n                        \n                            getSteps   (src/.../wizard.reducer.ts)\n                        \n                        \n                            HOME_TRANSITION   (src/.../home.transition.ts)\n                        \n                        \n                            initialMapState   (src/.../map.reducer.ts)\n                        \n                        \n                            initialSimulationState   (src/.../simulation.reducer.ts)\n                        \n                        \n                            initialWizardState   (src/.../wizard.reducer.ts)\n                        \n                        \n                            map   (src/.../reducers.ts)\n                        \n                        \n                            mapState   (src/.../reducers.ts)\n                        \n                        \n                            mapStyle   (src/.../map.style.ts)\n                        \n                        \n                            materialModules   (src/.../material.module.ts)\n                        \n                        \n                            pending   (src/.../reducers.ts)\n                        \n                        \n                            periods   (src/.../reducers.ts)\n                        \n                        \n                            reducers   (src/.../reducers.ts)\n                        \n                        \n                            reducers   (src/.../reducers.ts)\n                        \n                        \n                            sharedModules   (src/.../shared.module.ts)\n                        \n                        \n                            simulation   (src/.../reducers.ts)\n                        \n                        \n                            simulationState   (src/.../reducers.ts)\n                        \n                        \n                            steps   (src/.../reducers.ts)\n                        \n                        \n                            STEPS   (src/.../ui-state.ts)\n                        \n                        \n                            trafficChartOptions   (src/.../charts-config.ts)\n                        \n                        \n                            uiConfig   (src/.../ui-config.ts)\n                        \n                        \n                            wizardState   (src/.../reducers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/ui/charts/charts-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            busiestChartOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        busiestChartOptions:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    legend: {\n        display: true\n    },\n    title: {\n        display: true\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n        xAxes: [{\n            id: 'x-axis-0',\n            type: 'category',\n            scaleLabel: {\n                display: true,\n                labelString: 'Time'\n            },\n            ticks: {\n                beginAtZero: true\n            }\n        }],\n        yAxes: [{\n            id: 'y-axis-0',\n            type: 'linear',\n            ticks: {\n                stepSize: 10\n            }\n        }]\n    },\n    annotation: {\n        drawTime: 'afterDatasetsDraw',\n        annotations: []\n    }\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            busiestColor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        busiestColor:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '#63a4ff'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trafficChartOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trafficChartOptions:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    legend: {\n        display: false\n    },\n    title: {\n        display: true\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n        xAxes: [{\n            scaleLabel: {\n                display: true,\n                labelString: 'Time (s)'\n            },\n            ticks: {\n                beginAtZero: true\n            }\n        }],\n        yAxes: [{\n            display: true,\n            maxBarThickness: 40\n        }]\n    }\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/ui/models/reducers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            currentStep\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentStep:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    wizardState,\n    fromWizard.getCurrentStep\n)\n                        \n                    \n\n                \n                    \n                        Exports the current step state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    wizardState,\n    fromWizard.getError\n)\n                        \n                    \n\n                \n                    \n                        Exports the error state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            featureUiState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        featureUiState:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createFeatureSelector('ui')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            map\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        map:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    mapState,\n    fromMap.getMap\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mapState:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    featureUiState,\n    (state: UiState) => state.map\n)\n                        \n                    \n\n                \n                    \n                        Exports the map state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pending\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pending:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    wizardState,\n    fromWizard.getPending\n)\n                        \n                    \n\n                \n                    \n                        Exports the pending state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reducers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reducers:     ActionReducerMap\n\n                    \n                \n                    \n                        \n                            Type :     ActionReducerMap\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    wizard: fromWizard.wizardReducer,\n    map: fromMap.mapReducer\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            steps\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        steps:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    wizardState,\n    fromWizard.getSteps\n)\n                        \n                    \n\n                \n                    \n                        Exports the steps state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wizardState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        wizardState:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    featureUiState,\n    (state: UiState) => state.wizard\n)\n                        \n                    \n\n                \n                    \n                        Exports the wizard state.\n\n                    \n                \n\n            \n        \n\n    src/app/simulation/models/reducers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            end\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        end:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    simulationState,\n    fromSimulation.getEnd\n)\n                        \n                    \n\n                \n                    \n                        Exports the end state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            featureSimulationState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        featureSimulationState:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createFeatureSelector('simulation')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            periods\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        periods:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    simulationState,\n    fromSimulation.getPeriods\n)\n                        \n                    \n\n                \n                    \n                        Exports the periods state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reducers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reducers:     ActionReducerMap\n\n                    \n                \n                    \n                        \n                            Type :     ActionReducerMap\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    simulation: fromSimulation.simulationReducer\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            simulation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        simulation:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    simulationState,\n    fromSimulation.getSimulation\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            simulationState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        simulationState:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    featureSimulationState,\n    (state: SimulationState) => state.simulation\n)\n                        \n                    \n\n                \n                    \n                        Exports the simulation state.\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    production: false,\n    testing: true,\n    functions: {\n        networkData: {\n            url: ''\n        },\n        trafficData: {\n            url: ''\n        }\n    }\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    production: true,\n    testing: false,\n    functions: {\n        networkData: {\n            url: 'https://us-central1-' + appConfig.firebase.projectId + '.cloudfunctions.net/networkData'\n        },\n        trafficData: {\n            url: 'https://us-central1-' + appConfig.firebase.projectId + '.cloudfunctions.net/trafficData'\n        }\n    }\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    production: false,\n    testing: false,\n    functions: {\n        networkData: {\n            url: 'http://localhost:4201/' + appConfig.firebase.projectId + '/us-central1/networkData'\n        },\n        trafficData: {\n            url: 'http://localhost:4201/' + appConfig.firebase.projectId + '/us-central1/trafficData'\n        }\n    }\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/ui/models/reducers/wizard.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getCurrentStep\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getCurrentStep:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : (state: WizardState) => state.currentStep\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getError:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : (state: WizardState) => state.error\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPending\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getPending:     string | boolean\n\n                    \n                \n                    \n                        \n                            Type :     string | boolean\n\n                        \n                    \n                    \n                        \n                            Default value : (state: WizardState) => state.pending\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSteps\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getSteps:     Step[]\n\n                    \n                \n                    \n                        \n                            Type :     Step[]\n\n                        \n                    \n                    \n                        \n                            Default value : (state: WizardState) => state.steps\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialWizardState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        initialWizardState:     WizardState\n\n                    \n                \n                    \n                        \n                            Type :     WizardState\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    steps: STEPS,\n    currentStep: 0,\n    error: null,\n    pending: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/simulation/models/reducers/simulation.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getEnd\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getEnd:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : (state: SimulationState) => state.end\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPeriods\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getPeriods:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : (state: SimulationState) => state.periods\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSimulation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getSimulation:     Simulation\n\n                    \n                \n                    \n                        \n                            Type :     Simulation\n\n                        \n                    \n                    \n                        \n                            Default value : (state: SimulationState) => state.simulation\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialSimulationState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        initialSimulationState:     SimulationState\n\n                    \n                \n                    \n                        \n                            Type :     SimulationState\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    simulation: null,\n    end: false,\n    periods: null\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/ui/models/reducers/map.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getMap:     Map\n\n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : (state: MapState) => state.map\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialMapState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        initialMapState:     MapState\n\n                    \n                \n                    \n                        \n                            Type :     MapState\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    map: null\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/home/home.transition.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            HOME_TRANSITION\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        HOME_TRANSITION:     AnimationTriggerMetadata\n\n                    \n                \n                    \n                        \n                            Type :     AnimationTriggerMetadata\n\n                        \n                    \n                    \n                        \n                            Default value : trigger('homeTransition', [\n    transition('void => *', [\n        style({\n            opacity: 0\n        }),\n        animate('500ms 0ms ease-in',\n            style({\n                opacity: 1\n            })\n        )\n    ])\n])\n                        \n                    \n\n\n            \n        \n\n    src/app/ui/map/map.style.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mapStyle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mapStyle:     google.maps.MapTypeStyle[]\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.MapTypeStyle[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        \"featureType\": \"administrative\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road\",\n        \"elementType\": \"labels.icon\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"transit\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    }\n]\n                        \n                    \n\n                \n                    \n                        Styled Maps: https://developers.google.com/maps/documentation/javascript/styling\n\n                    \n                \n\n            \n        \n\n    src/app/shared/material.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            materialModules\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        materialModules:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    MatSidenavModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    MatMenuModule,\n    MatStepperModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule,\n    MatDialogModule,\n    MatGridListModule,\n    MatSelectModule,\n    MatExpansionModule,\n    MatTableModule\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/shared/shared.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            sharedModules\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sharedModules:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    CommonModule,\n    RouterModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    FlexLayoutModule\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/ui/models/ui-state.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            STEPS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        STEPS:     Step[]\n\n                    \n                \n                    \n                        \n                            Type :     Step[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n                \n                    \n                        Initial steps.\n\n                    \n                \n\n            \n        \n\n    src/app/ui/ui-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            uiConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uiConfig:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    /**\n     * Initial map.\n     */\n    map: {\n        center: { lat: 41.910943, lng: 12.476358 },\n        zoom: 4\n    },\n    /**\n     * Time of simulation limit in hours.\n     */\n    timeLimit: 24,\n    /**\n     * Area limit in hectares.\n     */\n    areaMaxLimit: 30,\n    areaMinLimit: 3,\n    links: {\n        baseColor: '#babdbe',\n        noTrafficColor: '#76d219',\n        moderateTrafficColor: '#d27519',\n        heavyTrafficColor: '#d2191a'\n    },\n    /**\n     * Minimum edge distance for traffic data.\n     */\n    minDistance: 20,\n    /**\n     * Minimum edge duration for traffic data.\n     */\n    minDuration: 2,\n    /**\n     * Maximum number of O/D pairs that the user can select.\n     */\n    maxOdPairs: 5,\n    /**\n     * The number of shortest paths to compute.\n     */\n    k: 3,\n    /**\n     * Multinomial logit parameter.\n     */\n    theta: 2,\n    /**\n     * Minimum spacing between subsequent vehicles.\n     */\n    sp: 5,\n    /**\n     * Shortest paths.\n     */\n    paths: {\n        /**\n         * Highly, Medium, Poorly\n         */\n        colors: [\n            '#004ba0',\n            '#1976d2',\n            '#63a4ff'\n        ]\n    },\n    /**\n     * Maximum No. vehicles for O/D pair.\n     */\n    maxDemand: 10000,\n    /**\n     * Weather Adjustment Factor Coefficients for max flow.\n     * \"Traffic Analysis Toolbox. Volume XI: Weather and Traffic Analysis, Modeling and Simulation\"\n     */\n    adjustmentFactorCoefficients: [0.91, 0.009, -0.404, -1.455, 0, 0],\n    /**\n     * Visibility (m).\n     */\n    visibility: {\n        max: 10000,\n        default: 10000 // Normal value\n    },\n    /**\n     * Rain rating (mm).\n     */\n    rainIntensity: {\n        max: 70\n    },\n    /**\n     * Snow rating (mm).\n     */\n    snowIntensity: {\n        max: 20\n    },\n    weatherIcons: ['01d', '02d', '03d', '04d', '09d', '10d', '11d', '13d', '50d'],\n    /**\n     * Minimum fraction of the capacity of the moderate traffic level.\n     */\n    moderateTraffic: 0.25,\n    /**\n     * Minimum fraction of the capacity of the heavy traffic level.\n     */\n    heavyTraffic: 0.75,\n    /**\n     * Simulated time interval (ms).\n     */\n    simulatedTimeInterval: 500,\n    timeIntervalIncrement: 100,\n    timeIntervalDecrement: 100,\n    /**\n     * Maximum time interval in seconds for LTM.\n     */\n    maxTimeInterval: 10\n}\n                        \n                    \n\n                \n                    \n                        User interface configuration.\n\n                    \n                \n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
