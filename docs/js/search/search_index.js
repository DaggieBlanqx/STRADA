var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/components/AboutComponent.html",[0,0.596,1,1.232]],["body/components/AboutComponent.html",[0,1.057,1,2.095,2,0.171,3,0.193,4,1.47,5,2.162,6,1.47,7,1.168,8,0.099,9,4.317,10,1.34,11,2.395,12,1.47,13,2.891,14,2.475,15,2.194,16,6.567,17,2.194,18,5.81,19,0.231,20,0.588,21,6.595,22,1.428,23,2.562,24,1.247,25,0.847,26,5.81,27,4.317,28,0.716,29,0.013,30,1.298,31,1.127,32,0.312,33,0.819,34,0.741,35,2.545,36,5.075,37,0.311,38,0.741,39,0.099,40,0.006,41,4.808,42,4.59,43,2.449,44,4.229,45,1.733,46,2.648,47,1.298,48,4.59,49,2.194,50,3.77,51,3.77,52,3.94,53,3.94,54,4.59,55,5.075,56,5.075,57,3.77,58,5.075,59,3.009,60,5.075,61,2.648,62,5.81,63,4.229,64,5.075,65,3.639,66,5.075,67,5.075,68,5.075,69,5.075,70,2.927,71,3.494,72,3.411,73,3.254,74,2.343,75,1.82,76,3.77,77,3.48,78,2.749,79,4.317,80,4.317,81,4.317,82,2.879,83,4.229,84,3.153,85,3.94,86,1.63,87,1.69,88,3.77,89,3.77,90,3.77,91,3.411,92,1.207,93,2.927,94,2.749,95,3.77,96,1.061,97,1.978,98,1.573,99,1.913,100,2.392,101,1.47,102,3.411,103,3.411,104,3.411,105,4.317,106,0.837,107,1.47,108,1.33,109,1.47,110,1.33,111,1.837,112,0.934,113,1.47,114,1.33,115,1.637,116,1.47,117,1.33,118,1.375,119,1.47,120,1.33,121,1.47,122,1.33,123,1.375,124,1.978,125,1.287,126,1.47,127,1.33,128,1.47,129,1.33,130,1.33,131,1.47,132,1.47,133,1.33,134,1.47,135,1.287,136,1.47,137,1.33,138,1.168,139,1.978,140,1.33,141,1.33,142,1.33,143,1.47,144,1.33,145,1.47,146,1.287,147,1.47,148,1.287,149,1.47,150,1.33,151,1.47,152,1.33,153,1.47,154,0.008,155,0.008]],["title/components/AppComponent.html",[0,0.596,108,1.273]],["body/components/AppComponent.html",[0,1.098,1,1.446,2,0.184,3,0.142,4,1.651,5,1.596,6,1.651,7,1.312,8,0.111,12,1.651,13,2.919,14,2.527,15,2.369,17,2.369,29,0.013,37,0.335,38,0.833,39,0.111,40,0.007,41,3.995,70,3.288,73,2.403,74,2.632,76,4.235,77,3.108,78,3.088,82,2.403,84,2.632,86,1.832,87,2.456,91,3.831,92,2.129,93,3.288,94,3.088,96,1.192,97,2.136,98,1.698,99,2.065,100,2.504,101,1.651,106,0.904,107,1.651,108,2.266,109,1.651,110,1.494,111,1.89,112,1.049,113,1.651,114,1.494,115,1.701,116,1.651,117,1.494,118,1.544,119,1.651,120,1.494,121,1.651,122,1.494,123,1.544,124,2.136,125,1.446,126,1.651,127,1.494,128,1.651,129,1.494,130,1.494,131,1.651,132,1.651,133,1.494,134,1.651,135,1.446,136,1.651,137,1.494,138,1.312,139,2.136,140,1.494,141,1.494,142,1.494,143,1.651,144,1.494,145,1.651,146,1.446,147,1.651,148,1.446,149,1.651,150,1.494,151,1.651,152,1.494,153,1.651,154,0.009,155,0.009,156,4.849,157,6.954,158,6.954,159,6.273,160,3.088,161,3.831,162,4.235,163,3.529,164,3.288,165,4.133,166,4.849,167,3.529,168,3.288,169,4.849,170,6.273,171,4.235,172,3.25,173,6.273,174,2.766,175,4.235,176,4.849,177,3.529,178,4.849,179,6.273,180,4.235,181,4.849,182,2.916,183,3.831,184,1.651]],["title/modules/AppModule.html",[185,1.232,186,3.008]],["body/modules/AppModule.html",[1,2.319,2,0.141,3,0.141,8,0.11,14,1.478,29,0.013,37,0.453,38,0.823,39,0.143,40,0.007,96,1.179,108,2.555,125,2.319,135,2.319,146,2.319,154,0.009,155,0.009,185,1.857,186,6.267,187,2.376,188,3.754,189,3.754,190,3.03,191,4.189,192,4.189,193,4.189,194,4.189,195,5.274,196,5.274,197,5.274,198,5.274,199,4.563,200,5.274,201,2.957,202,1.071,203,2.484,204,4.795,205,3.086,206,6.228,207,6.228,208,4.921,209,3.49,210,6.228,211,4.795,212,3.789,213,1.257,214,4.189,215,4.189,216,4.795,217,4.189,218,4.189,219,4.189,220,4.189,221,4.795,222,4.795,223,4.795,224,4.795,225,5.44,226,2.021,227,4.795,228,4.795,229,4.795,230,4.795,231,2.735,232,1.811]],["title/classes/AppPreloadingStrategy.html",[40,0.006,233,3.265]],["body/classes/AppPreloadingStrategy.html",[2,0.178,3,0.178,8,0.138,10,1.659,19,0.323,22,1.769,25,0.78,28,1.194,29,0.013,32,0.437,37,0.385,39,0.138,40,0.011,106,0.872,154,0.011,155,0.011,233,5.685,234,5.685,235,6.944,236,6.047,237,6.709,238,7.195,239,4.408,240,7.95,241,3.806,242,6.047,243,0.872,244,0.872,245,3.238,246,3.282,247,2.284,248,6.047,249,6.047,250,3.282]],["title/modules/AppRoutingModule.html",[185,1.232,195,2.802]],["body/modules/AppRoutingModule.html",[0,1.121,1,2.062,2,0.166,3,0.166,8,0.13,14,1.744,29,0.013,37,0.443,38,0.972,39,0.158,40,0.008,45,1.688,47,1.264,125,2.062,135,2.062,146,2.062,154,0.01,155,0.01,185,1.688,190,2.479,195,4.689,205,3.426,217,4.944,218,4.944,219,4.944,220,4.944,233,5.898,234,4.472,235,6.039,237,4.944,246,3.072,251,4.944,252,5.032,253,5.66,254,5.66,255,3.215,256,6.914,257,6.521,258,4.944,259,4.12,260,5.66,261,5.66,262,2.064,263,4.12,264,4.472]],["title/classes/BaseComponent.html",[40,0.006,265,1.962]],["body/classes/BaseComponent.html",[0,1.147,2,0.153,3,0.153,8,0.12,10,1.518,11,2.627,19,0.279,20,0.666,22,1.618,23,2.757,25,1.026,28,1.293,29,0.013,30,1.854,32,0.378,33,0.992,34,0.897,37,0.352,38,0.897,39,0.12,40,0.011,87,2.576,112,1.423,115,1.47,154,0.01,155,0.01,247,1.974,265,3.125,266,5.227,267,1.559,268,4.205,269,5.691,270,3.783,271,3.59,272,3.746,273,3.746,274,3.746,275,5.227,276,5.227,277,5.227,278,5.227,279,3.777,280,1.982,281,3.746,282,5.227,283,5.227,284,2.883,285,4.13,286,4.13]],["title/interfaces/CanComponentDeactivate.html",[287,0.734,288,3.008]],["body/interfaces/CanComponentDeactivate.html",[2,0.177,3,0.177,8,0.138,10,1.392,19,0.323,20,0.727,28,1.002,29,0.013,32,0.436,37,0.41,38,1.037,39,0.164,40,0.009,154,0.011,155,0.011,232,2.28,241,3.562,245,3.236,246,3.277,247,2.28,287,1.277,288,5.587,289,5.273,290,4.094,291,5.273,292,5.994,293,2.814,294,6.279,295,1.946,296,4.094,297,5.273,298,6.279]],["title/guards/CanDeactivateGuard.html",[296,2.802,299,3.265]],["body/guards/CanDeactivateGuard.html",[0,0.85,2,0.173,3,0.173,8,0.135,10,1.361,19,0.315,22,1.743,25,0.761,28,1.176,29,0.013,32,0.426,37,0.406,38,1.013,39,0.162,40,0.009,106,0.85,154,0.01,155,0.01,232,2.229,243,0.85,244,0.85,245,3.324,246,3.203,247,2.229,287,1.048,288,5.74,289,6.193,290,4.808,291,5.154,292,5.871,293,2.776,294,6.64,295,2.057,296,4.808,297,6.193,298,6.193,299,4.662,300,5.9]],["title/components/ChangeOfConditionsComponent.html",[0,0.596,110,1.273]],["body/components/ChangeOfConditionsComponent.html",[0,0.985,1,0.854,2,0.127,3,0.084,4,0.975,5,0.942,6,0.975,7,0.775,8,0.065,10,0.999,11,1.904,12,0.975,13,2.771,14,2.105,15,1.635,17,1.635,19,0.352,20,0.438,22,1.065,23,2.491,24,0.822,25,1.026,28,1.293,29,0.013,30,1.708,31,1.173,32,0.508,33,0.822,34,1.326,37,0.413,38,0.491,39,0.065,40,0.004,47,0.967,49,1.635,71,2.604,73,2.145,74,2.35,75,1.825,77,2.145,78,1.823,82,1.418,86,1.635,87,2.575,92,1.627,96,0.704,97,1.474,98,1.172,99,1.425,100,1.982,101,0.975,106,0.948,107,0.975,108,0.882,109,0.975,110,1.794,111,1.8,112,1.613,113,0.975,114,0.882,115,1.469,116,0.975,117,0.882,118,0.912,119,0.975,120,0.882,121,0.975,122,0.882,123,0.912,124,1.474,125,0.854,126,0.975,127,0.882,128,0.975,129,0.882,130,0.882,131,0.975,132,0.975,133,0.882,134,0.975,135,0.854,136,0.975,137,0.882,138,0.775,139,1.474,140,0.882,141,1.334,142,0.882,143,0.975,144,0.882,145,0.975,146,0.854,147,0.975,148,0.854,149,0.975,150,0.882,151,0.975,152,0.882,153,0.975,154,0.006,155,0.006,165,2.35,168,2.936,172,1.483,182,3.501,184,1.474,202,0.639,213,0.75,226,1.207,243,0.839,244,0.839,265,3.419,267,2.037,268,3.485,270,2.85,271,2.479,272,3.384,273,3.259,274,3.384,279,2.479,280,1.135,281,2.145,284,1.254,301,7.645,302,6.678,303,2.863,304,2.243,305,1.973,306,5.222,307,4.33,308,4.33,309,4.33,310,4.33,311,3.76,312,4.107,313,3.152,314,3.281,315,2.262,316,5.197,317,3.243,318,2.764,319,2.12,320,3.16,321,2.55,322,3.501,323,4.673,324,3.707,325,2.863,326,2.863,327,2.863,328,2.863,329,5.085,330,2.863,331,5.222,332,6.252,333,2.863,334,2.145,335,0.491,336,2.863,337,2.863,338,2.863,339,2.863,340,2.863,341,2.863,342,1.483,343,1.483,344,1.483,345,1.483,346,1.483,347,4.6,348,2.863,349,1.483,350,2.5,351,2.863,352,4.6,353,2.084,354,1.554,355,1.633,356,1.633,357,1.633,358,1.721,359,2.262,360,2.5,361,1.554,362,1.359,363,3.325,364,2.5,365,2.084,366,2.084,367,1.081,368,1.081,369,1.483,370,3.782,371,1.78,372,1.483,373,1.823,374,1.483,375,1.483,376,2.056,377,2.35,378,2.5,379,1.715,380,4.33,381,2.863,382,2.863,383,2.863,384,2.863,385,2.863,386,2.863,387,2.863,388,2.863,389,2.863,390,2.863,391,2.863,392,1.721,393,2.863,394,2.863,395,2.863,396,1.254,397,1.483,398,1.897,399,1.633,400,4.33,401,2.863,402,1.418,403,2.084,404,2.5,405,2.863,406,2.863,407,2.35,408,2.35,409,3.782,410,3.782,411,7.339,412,3.782,413,5.085,414,2.936,415,2.757,416,2.262,417,3.421,418,3.421,419,2.084,420,2.084,421,2.863,422,1.941,423,2.5]],["title/components/ChartsComponent.html",[0,0.596,114,1.273]],["body/components/ChartsComponent.html",[0,0.985,1,0.854,2,0.127,3,0.084,4,0.975,5,0.942,6,0.975,7,0.775,8,0.065,10,0.999,11,1.904,12,0.975,13,2.771,14,2.105,15,1.635,17,1.635,19,0.153,20,0.438,22,1.065,23,2.491,24,0.822,25,1.057,28,1.303,29,0.013,30,1.84,31,0.743,32,0.558,33,0.543,34,0.897,35,2.287,37,0.392,38,0.491,39,0.065,40,0.004,43,2.201,45,1.557,47,1.469,75,1.207,87,2.575,92,1.627,96,0.704,97,1.474,98,1.172,99,1.425,100,1.982,101,0.975,106,0.753,107,0.975,108,0.882,109,0.975,110,0.882,111,1.627,112,0.936,113,0.975,114,1.794,115,1.571,116,0.975,117,0.882,118,0.912,119,0.975,120,0.882,121,0.975,122,0.882,123,0.912,124,1.474,125,0.854,126,0.975,127,0.882,128,0.975,129,0.882,130,0.882,131,0.975,132,0.975,133,0.882,134,0.975,135,0.854,136,0.975,137,0.882,138,0.775,139,1.474,140,0.882,141,1.334,142,0.882,143,0.975,144,0.882,145,0.975,146,0.854,147,0.975,148,0.854,149,0.975,150,0.882,151,0.975,152,0.882,153,0.975,154,0.006,155,0.006,160,2.757,164,1.941,175,2.5,183,4.126,213,0.75,226,1.207,232,1.972,243,0.413,244,0.839,247,1.081,262,1.044,265,3.419,268,3.485,269,4.126,270,3.205,271,3.243,272,3.384,273,3.384,274,3.384,279,2.479,280,1.135,281,2.145,284,1.254,285,2.262,286,2.262,304,2.243,317,3.243,342,1.483,343,1.483,344,1.483,345,1.483,346,1.483,349,1.483,361,1.554,362,1.359,367,1.081,368,1.635,369,1.483,371,1.413,372,1.483,374,1.483,375,1.483,392,1.721,396,1.254,397,1.483,398,1.254,402,1.418,424,2.863,425,4.126,426,7.645,427,5.222,428,4.33,429,5.822,430,5.822,431,5.822,432,5.822,433,5.822,434,5.822,435,3.501,436,5.822,437,4.6,438,5.822,439,5.822,440,5.822,441,5.822,442,2.262,443,4.787,444,3.707,445,4.33,446,2.863,447,2.863,448,2.863,449,2.863,450,2.863,451,2.863,452,2.863,453,2.863,454,2.863,455,2.863,456,2.863,457,2.863,458,7.2,459,2.863,460,2.863,461,2.863,462,2.863,463,2.863,464,2.5,465,2.262,466,2.084,467,4.561,468,3.782,469,3.782,470,2.863,471,4.33,472,2.863,473,4.33,474,2.863,475,4.33,476,2.863,477,2.084,478,2.5,479,2.5,480,2.863,481,2.863,482,2.863,483,2.863,484,2.863,485,2.863,486,2.863,487,2.863,488,4.33,489,3.751,490,5.222,491,4.33,492,2.863,493,2.863,494,2.863,495,2.863,496,2.262,497,2.863,498,5.222,499,2.863,500,2.863,501,2.863,502,2.863,503,2.863,504,2.5,505,2.863,506,2.863,507,2.863,508,2.5,509,2.863,510,2.863,511,2.863,512,2.863,513,1.044,514,2.863,515,4.33,516,4.33,517,2.863,518,4.33,519,2.5,520,3.782,521,2.863,522,5.822,523,4.33,524,1.758,525,4.33,526,4.33,527,4.33,528,3.782,529,4.33,530,2.863,531,3.152,532,2.5,533,3.421,534,2.262,535,2.863,536,2.863,537,1.823,538,2.863,539,2.863,540,2.863,541,2.863,542,2.863,543,2.863,544,2.863,545,2.863,546,2.863,547,2.863,548,2.863,549,2.863]],["title/injectables/ClockService.html",[293,1.618,550,2.485]],["body/injectables/ClockService.html",[2,0.09,3,0.09,8,0.07,19,0.165,20,0.463,22,1.125,24,0.868,25,1.042,28,1.274,29,0.013,30,1.813,31,1.318,32,0.565,33,1.036,34,0.937,37,0.384,38,0.529,39,0.105,40,0.005,45,2.353,49,2.643,92,2.009,106,0.659,141,0.949,154,0.007,155,0.007,202,1.349,213,0.807,243,0.659,244,0.659,245,2.545,247,1.163,262,2.202,270,3.276,279,1.462,293,2.136,295,1.634,317,3.21,362,1.462,367,1.163,368,1.163,371,2.311,376,3.063,379,1.089,396,1.349,398,2.961,399,3.855,402,3.349,444,3.845,550,2.751,551,2.69,552,4.771,553,5.68,554,6.038,555,5.68,556,6.279,557,5.635,558,6.038,559,1.694,560,6.038,561,5.341,562,3.995,563,5.904,564,5.904,565,4.323,566,2.715,567,4.065,568,6.038,569,1.852,570,4.574,571,3.08,572,3.08,573,3.08,574,3.995,575,3.08,576,3.08,577,3.08,578,3.08,579,3.08,580,3.08,581,3.995,582,3.995,583,3.08,584,3.08,585,3.08,586,3.08,587,4.574,588,3.08,589,4.574,590,3.971,591,3.329,592,3.08,593,3.08,594,3.995,595,3.08,596,4.574,597,2.242,598,2.69,599,2.242,600,1.852,601,3.08,602,1.596,603,1.085,604,3.08,605,4.766,606,1.596,607,6.279,608,6.705,609,4.574,610,4.574,611,2.085,612,6.038,613,4.766,614,7.189,615,3.08,616,5.456,617,3.08,618,3.08,619,3.08,620,3.08,621,3.08,622,3.08,623,3.08,624,3.08,625,3.08,626,3.08,627,2.69,628,6.76,629,1.596,630,3.08,631,3.08,632,4.574,633,6.451,634,3.08,635,2.69,636,1.688,637,5.635,638,3.845,639,2.94,640,1.961,641,4.574,642,5.456,643,4.574,644,4.574,645,3.08,646,4.574,647,3.08]],["title/interfaces/Counts.html",[287,0.734,648,1.883]],["body/interfaces/Counts.html",[2,0.175,3,0.175,8,0.136,19,0.318,20,0.721,29,0.013,31,1.459,32,0.514,39,0.174,45,2.358,47,1.591,154,0.01,155,0.01,287,1.404,335,1.309,513,2.168,537,3.786,567,3.575,648,3.684,649,4.697,650,3.786,651,6.246,652,6.246,653,4.83,654,4.327,655,4.032,656,4.327,657,4.032,658,2.823,659,4.327]],["title/modules/DemandModule.html",[185,1.232,196,2.802]],["body/modules/DemandModule.html",[2,0.182,3,0.182,8,0.142,29,0.013,37,0.415,38,1.065,39,0.167,40,0.009,96,1.525,154,0.011,155,0.011,185,2.178,187,3.072,188,3.964,189,3.366,190,3.401,196,5.619,201,3.468,202,1.385,203,3.212,205,3.618,324,5.276,660,5.416,661,5.416,662,6.201,663,6.201]],["title/injectables/DemandService.html",[293,1.618,324,2.631]],["body/injectables/DemandService.html",[2,0.088,3,0.088,8,0.069,19,0.341,20,0.455,22,1.105,24,0.571,25,1.005,28,1.348,29,0.013,30,1.497,31,1.465,32,0.537,33,0.853,34,0.772,37,0.358,38,0.517,39,0.069,40,0.004,43,1.895,49,2.032,61,3.054,92,2.159,106,1.029,118,2.134,154,0.007,155,0.007,202,1.333,226,1.268,232,1.136,241,2.227,243,1.029,244,1.029,245,2.268,247,1.136,250,1.633,255,2.337,262,1.097,267,1.999,293,2.106,295,1.217,319,2.424,320,3.24,323,5.103,324,2.862,329,5.854,334,3.785,358,1.809,365,2.19,367,1.136,368,1.136,371,2.156,379,1.521,513,2.444,524,2.185,534,6.036,559,1.874,565,3.236,582,3.926,602,1.559,611,1.371,664,3.009,665,3.759,666,4.231,667,5.969,668,4.495,669,5.969,670,4.495,671,4.495,672,5.969,673,5.969,674,5.969,675,4.495,676,7.14,677,3.009,678,4.495,679,4.495,680,4.266,681,7.639,682,3.009,683,5.381,684,2.787,685,3.32,686,4.034,687,3.009,688,3.092,689,4.495,690,3.009,691,4.495,692,3.009,693,3.009,694,3.009,695,6.945,696,3.009,697,3.009,698,4.495,699,3.822,700,3.009,701,3.048,702,4.495,703,2.564,704,5.969,705,4.495,706,3.009,707,3.551,708,4.495,709,3.009,710,4.495,711,3.009,712,2.564,713,3.309,714,3.009,715,2.227,716,1.559,717,2.19,718,5.969,719,2.049,720,3.009,721,3.009,722,3.009,723,1.916,724,5.381,725,3.009,726,3.009,727,3.009,728,3.326,729,2.44,730,3.009,731,3.009,732,5.969,733,4.495,734,3.009,735,1.633,736,3.009,737,3.009,738,3.009,739,3.009,740,4.495,741,5.969,742,3.009]],["title/classes/Edge.html",[40,0.006,513,1.507]],["body/classes/Edge.html",[2,0.051,3,0.11,7,0.468,8,0.04,19,0.092,20,0.378,22,0.712,24,0.328,25,0.971,28,1.272,29,0.013,30,1.403,31,1.444,32,0.544,33,0.709,34,1.045,35,0.758,37,0.281,39,0.139,40,0.007,43,1.841,46,0.788,47,1.086,59,0.896,61,3.01,65,0.896,86,1.093,92,2.153,98,0.784,106,0.629,138,0.784,154,0.004,155,0.004,184,1.994,226,0.729,231,0.986,232,1.836,239,0.939,243,0.805,244,0.701,245,1.841,247,0.653,250,1.571,255,2.983,262,1.362,267,0.863,287,0.775,295,1.511,305,1.319,314,2.668,319,0.702,321,1.268,334,2.605,335,1.212,355,0.986,356,0.986,367,0.653,368,0.653,371,1.585,379,1.701,407,1.571,408,2.37,489,2.999,513,2.835,524,2.267,559,1.953,602,0.896,603,0.609,629,2.518,648,1.702,658,2.073,665,2.496,666,2.027,680,2.854,684,1.5,685,3.578,686,1.571,688,3.778,699,0.986,703,0.986,712,1.651,713,0.896,715,1.85,716,0.896,719,1.702,728,2.942,729,3.585,735,0.939,743,0.986,744,2.37,745,2.626,746,3.76,747,2.999,748,3.471,749,3.504,750,3.162,751,3.49,752,2.626,753,3.659,754,2.626,755,2.772,756,3.033,757,3.843,758,3.162,759,2.626,760,2.895,761,3.767,762,2.245,763,2.895,764,2.626,765,2.626,766,1.741,767,1.729,768,1.729,769,1.729,770,1.729,771,3.162,772,2.13,773,1.741,774,1.729,775,1.729,776,1.729,777,2.13,778,1.741,779,1.741,780,1.319,781,1.729,782,1.729,783,1.729,784,2.13,785,2.854,786,1.729,787,1.729,788,1.571,789,1.729,790,1.5,791,1.729,792,1.729,793,1.729,794,1.741,795,1.729,796,1.741,797,1.729,798,1.319,799,2.408,800,2.027,801,1.741,802,2.626,803,2.262,804,1.729,805,1.741,806,1.729,807,1.571,808,1.729,809,1.729,810,2.626,811,1.741,812,0.953,813,0.986,814,2.724,815,3.184,816,3.015,817,0.939,818,0.986,819,3.03,820,1.651,821,1.651,822,1.04,823,0.986,824,0.986,825,1.04,826,0.986,827,1.04,828,2.491,829,1.04,830,1.04,831,1.04,832,1.04,833,1.04,834,1.04,835,1.04,836,0.986,837,0.986,838,2.245,839,0.939,840,1.04,841,1.04,842,1.04,843,1.741,844,1.741,845,1.04,846,1.04,847,1.04,848,1.741,849,1.741,850,1.741,851,1.04,852,1.04,853,1.04,854,1.571,855,2.245,856,2.626,857,2.626,858,1.651,859,1.741,860,2.626,861,2.245,862,2.626,863,2.626,864,1.04,865,1.741,866,1.741,867,1.741,868,1.04,869,1.741,870,1.04,871,1.741,872,1.04,873,1.04,874,1.04,875,1.04,876,2.772,877,0.939,878,0.939,879,1.04,880,0.986,881,1.741,882,1.04,883,1.04,884,1.574,885,0.986,886,2.245,887,1.04,888,1.04,889,1.741,890,1.04,891,1.04,892,1.04,893,1.04,894,1.04,895,0.986,896,1.741,897,1.741,898,1.04,899,1.741,900,1.04,901,1.04,902,1.04,903,1.04,904,1.04,905,1.04,906,1.04,907,1.04,908,1.04,909,1.04,910,1.741,911,1.04,912,1.04,913,1.04,914,1.5,915,1.04,916,2.245,917,2.245,918,1.04,919,2.245,920,1.04,921,1.04,922,1.04,923,1.741,924,1.04,925,1.04,926,1.04,927,1.04,928,1.04,929,1.04,930,1.04,931,1.741,932,1.04,933,1.651,934,1.04,935,1.04,936,1.04,937,0.939,938,2.13,939,0.986,940,1.04,941,1.741,942,1.741,943,1.04,944,1.741,945,1.741,946,1.04,947,1.04,948,1.04,949,2.245,950,1.04,951,1.04,952,2.245,953,1.04,954,0.986,955,1.04,956,1.04,957,1.04,958,1.04,959,1.04,960,0.896,961,2.027,962,1.04,963,1.571,964,1.04,965,1.04,966,1.04,967,1.651,968,1.04,969,1.04,970,1.04,971,1.741,972,0.986,973,1.04,974,0.986,975,0.896,976,1.04,977,1.04,978,1.04,979,1.04,980,1.04,981,0.896,982,1.04,983,0.986,984,0.857,985,1.04,986,1.04,987,1.04,988,1.04,989,1.04,990,1.04,991,1.04,992,1.04,993,1.04,994,1.04,995,1.04,996,1.04,997,1.04,998,1.04,999,1.04,1000,0.986,1001,0.986,1002,1.04,1003,0.986,1004,0.986,1005,0.821,1006,1.04,1007,1.741,1008,1.04,1009,0.986,1010,1.04,1011,0.821,1012,0.939,1013,1.04,1014,1.04,1015,1.04,1016,1.04,1017,1.04,1018,1.04,1019,1.04,1020,1.04,1021,0.821,1022,1.04,1023,1.04]],["title/classes/EnumValues.html",[40,0.006,366,3.008]],["body/classes/EnumValues.html",[2,0.153,3,0.153,8,0.119,19,0.278,22,1.613,25,0.846,28,1.366,29,0.013,31,1.336,32,0.545,34,0.893,39,0.178,40,0.01,49,2.477,92,1.833,106,0.945,154,0.01,155,0.01,241,3.56,243,1.036,244,0.945,335,1.385,366,4.774,524,2.663,559,1.513,591,4.774,715,2.576,728,2.989,1000,3.741,1021,2.468,1024,4.108,1025,6.277,1026,6.559,1027,6.559,1028,6.559,1029,5.199,1030,6.559,1031,5.199,1032,7.545,1033,4.541,1034,5.199,1035,5.199,1036,5.199,1037,5.199,1038,4.541,1039,6.591,1040,5.729,1041,5.729,1042,3.526,1043,4.541,1044,6.559,1045,5.729,1046,6.559,1047,5.729,1048,4.108,1049,4.541,1050,6.559,1051,5.199,1052,5.199,1053,5.199]],["title/components/EstimateOfDemandComponent.html",[0,0.596,117,1.273]],["body/components/EstimateOfDemandComponent.html",[0,0.955,1,0.782,2,0.119,3,0.077,4,0.893,5,0.863,6,0.893,7,0.71,8,0.06,10,0.934,11,1.803,12,0.893,13,2.74,14,2.041,15,1.529,17,1.529,19,0.297,20,0.41,22,0.995,23,2.415,24,0.768,25,1.018,28,1.259,29,0.013,30,1.781,31,1.137,32,0.507,33,0.498,34,0.695,37,0.39,38,0.45,39,0.06,40,0.004,47,0.586,71,2.434,73,2.006,74,2.197,75,1.707,77,2.006,78,1.669,82,1.299,86,1.529,87,2.487,92,1.912,96,0.645,97,1.378,98,1.096,99,1.333,100,1.894,101,0.893,106,0.955,107,0.893,108,0.808,109,0.893,110,0.808,111,1.764,112,1.07,113,0.893,114,0.808,115,1.419,116,0.893,117,1.714,118,2.178,119,0.893,120,0.808,121,0.893,122,0.808,123,0.835,124,1.378,125,0.782,126,0.893,127,0.808,128,0.893,129,0.808,130,0.808,131,0.893,132,0.893,133,0.808,134,0.893,135,0.782,136,0.893,137,0.808,138,0.71,139,1.378,140,0.808,141,1.524,142,0.808,143,0.893,144,0.808,145,0.893,146,0.782,147,0.893,148,0.782,149,0.893,150,0.808,151,0.893,152,0.808,153,0.893,154,0.006,155,0.006,165,2.197,168,2.745,172,1.358,182,2.434,184,1.378,202,0.586,213,0.687,226,1.105,243,0.866,244,0.866,255,2.177,265,3.333,268,3.389,270,2.74,271,2.348,272,3.281,273,3.281,274,3.281,279,2.348,280,1.061,281,2.006,284,1.148,304,2.097,311,3.615,312,3.821,313,2.947,314,3.199,315,2.071,316,5.02,317,3.145,318,2.641,319,2.258,320,3.019,323,2.578,334,2.756,335,1.205,342,1.358,343,1.358,344,1.358,345,1.358,346,1.358,349,1.358,350,2.29,352,5.853,353,2.947,354,1.423,357,1.495,358,1.577,361,1.423,362,1.245,365,1.908,366,1.908,367,0.99,368,0.99,369,1.358,370,4.858,371,1.505,372,1.358,373,1.669,374,1.358,375,1.358,376,2.641,377,1.423,378,2.29,379,1.431,392,1.577,396,1.148,397,1.358,398,1.148,399,3.777,402,1.299,403,1.908,407,2.197,408,2.197,409,3.536,410,3.536,414,2.745,415,2.578,416,2.071,417,3.199,418,3.199,419,1.908,420,1.908,422,1.778,423,2.29,524,1.065,566,1.529,611,2.535,636,1.382,665,2.348,707,4.749,746,3.465,748,4.003,756,3.969,790,1.358,812,2.252,819,3.892,933,3.172,1054,7.588,1055,6.628,1056,2.622,1057,4.945,1058,4.048,1059,4.048,1060,4.048,1061,4.048,1062,4.048,1063,2.622,1064,2.622,1065,2.622,1066,4.048,1067,2.622,1068,4.048,1069,2.622,1070,4.048,1071,2.622,1072,2.622,1073,2.622,1074,2.622,1075,4.048,1076,2.622,1077,2.622,1078,2.622,1079,2.622,1080,1.742,1081,2.071,1082,2.622,1083,2.622,1084,2.622,1085,4.048,1086,4.048,1087,2.29,1088,2.622,1089,2.622,1090,2.29,1091,4.048,1092,4.048,1093,2.622,1094,1.908,1095,4.048,1096,2.622,1097,2.622,1098,4.945,1099,2.622,1100,4.048,1101,2.29,1102,2.29,1103,4.32,1104,4.048,1105,3.536,1106,4.945,1107,2.622,1108,2.622,1109,2.622,1110,2.622,1111,2.622,1112,2.622,1113,2.622,1114,2.622,1115,2.622,1116,2.622,1117,2.622,1118,2.622,1119,4.048,1120,2.071]],["title/components/FooterComponent.html",[0,0.596,120,1.273]],["body/components/FooterComponent.html",[0,1.078,1,1.366,2,0.177,3,0.134,4,1.56,5,1.99,6,1.56,7,1.24,8,0.105,10,1.394,11,2.467,12,1.56,13,2.906,14,2.478,15,2.283,17,2.283,19,0.245,20,0.611,21,6.708,22,1.486,23,2.623,25,0.78,28,0.76,29,0.013,30,1.35,31,1.161,32,0.331,33,0.87,34,0.786,35,2.648,36,5.279,37,0.323,38,0.786,39,0.105,40,0.007,50,4.001,51,4.001,52,4.099,53,4.099,61,2.088,70,3.107,71,3.635,72,4.776,73,3.352,74,2.486,75,1.931,77,2.27,82,2.27,84,3.281,85,3.107,86,1.73,87,1.793,88,4.001,89,4.001,90,4.001,91,4.776,92,1.689,93,4.588,94,2.917,96,1.126,97,2.058,98,1.636,99,1.99,100,2.449,101,1.56,102,3.619,103,3.619,104,3.619,106,0.871,107,1.56,108,1.411,109,1.56,110,1.411,111,1.865,112,0.991,113,1.56,114,1.411,115,1.67,116,1.56,117,1.411,118,1.459,119,1.56,120,2.216,121,1.56,122,1.411,123,1.459,124,2.058,125,1.366,126,1.56,127,1.411,128,1.56,129,1.411,130,1.411,131,1.56,132,1.56,133,1.411,134,1.56,135,1.366,136,1.56,137,1.411,138,1.24,139,2.058,140,1.411,141,1.411,142,1.411,143,1.56,144,1.411,145,1.56,146,1.366,147,1.56,148,1.366,149,1.56,150,1.411,151,1.56,152,1.411,153,1.56,154,0.009,155,0.009,171,4.001,172,2.373,174,2.613,177,3.334,263,4.399,264,4.776,377,3.281,1120,4.776,1121,4.581,1122,7.478,1123,6.765,1124,6.044,1125,4.581,1126,4.581,1127,3.334,1128,4.581,1129,4.581,1130,4.581]],["title/classes/GoOn.html",[40,0.006,1131,2.243]],["body/classes/GoOn.html",[2,0.144,3,0.144,8,0.112,10,1.806,19,0.374,20,0.64,24,0.933,25,0.903,29,0.013,31,1.202,32,0.611,33,0.933,34,0.844,37,0.338,39,0.182,40,0.011,106,0.709,111,1.864,112,1.063,115,1.098,154,0.009,155,0.009,202,1.651,213,1.289,243,0.709,244,0.709,280,2.115,295,1.331,335,1.4,559,1.88,566,3.047,603,1.732,636,1.374,639,3.715,773,4.445,812,1.619,1131,4.012,1132,2.956,1133,3.946,1134,2.436,1135,6.329,1136,4.916,1137,3.806,1138,1.996,1139,2.804,1140,3.992,1141,3.992,1142,3.992,1143,2.436,1144,3.131,1145,2.956,1146,3.631,1147,2.956,1148,2.956,1149,2.804,1150,2.956,1151,2.956]],["title/components/GoogleMapComponent.html",[0,0.596,122,1.273]],["body/components/GoogleMapComponent.html",[0,0.974,1,1.03,2,0.146,3,0.101,4,1.694,5,2.317,6,1.176,7,0.935,8,0.079,10,1.147,11,2.126,12,1.176,13,2.831,14,2.235,19,0.185,20,0.503,22,1.223,23,2.326,24,0.656,25,1.03,28,0.967,29,0.013,30,1.572,31,1.298,32,0.587,33,1.409,37,0.266,38,0.593,39,0.079,40,0.005,75,3.236,96,0.849,97,1.694,98,1.578,99,1.638,100,2.171,101,1.176,106,0.974,107,1.176,108,1.064,109,1.176,110,1.064,111,1.727,112,1.379,113,1.176,114,1.064,115,1.62,116,1.176,117,1.064,118,1.1,119,1.176,120,1.064,121,1.176,122,1.965,123,1.856,124,1.694,125,1.03,126,1.176,127,1.064,128,1.176,129,1.064,130,1.064,131,1.176,132,1.176,133,1.064,134,1.176,135,1.03,136,1.176,137,1.064,138,0.935,139,1.694,140,1.064,141,1.064,142,1.064,143,1.176,144,1.064,145,1.176,146,1.03,147,1.176,148,1.03,149,1.176,150,1.064,151,1.176,152,1.064,153,1.176,154,0.007,155,0.007,201,3.792,243,0.84,244,0.84,295,1.726,311,4.723,335,1.095,371,1.726,376,2.362,379,0.823,399,2.837,443,5.28,533,3.93,559,1.147,629,2.577,684,2.577,713,2.577,719,1.574,723,4.061,773,2.991,790,2.577,975,3.646,984,2.465,1080,2.951,1146,1.64,1152,8.04,1153,3.455,1154,5.829,1155,4.974,1156,4.974,1157,5.57,1158,5.57,1159,5.57,1160,6.148,1161,5.57,1162,5.57,1163,3.455,1164,4.774,1165,4.974,1166,5.039,1167,3.621,1168,3.455,1169,6.377,1170,3.455,1171,4.974,1172,4.974,1173,3.455,1174,4.974,1175,4.974,1176,3.455,1177,4.974,1178,4.345,1179,3.455,1180,4.642,1181,3.455,1182,3.455,1183,4.974,1184,3.93,1185,3.455,1186,4.974,1187,5.039,1188,3.455,1189,4.345,1190,4.974,1191,3.455,1192,3.455,1193,4.345,1194,3.455,1195,4.974,1196,3.018,1197,3.455,1198,3.455,1199,3.455,1200,3.455,1201,3.455,1202,3.455,1203,3.455,1204,3.455,1205,3.018,1206,3.018,1207,3.018,1208,3.018,1209,3.018,1210,3.018,1211,3.018,1212,3.018,1213,3.018]],["title/classes/Heap.html",[40,0.006,814,2.14]],["body/classes/Heap.html",[2,0.14,3,0.14,8,0.109,19,0.332,20,0.628,22,1.526,25,0.977,28,1.312,29,0.013,30,1.632,31,1.301,32,0.498,33,0.906,34,0.819,37,0.255,39,0.142,40,0.009,47,1.387,106,0.895,154,0.009,155,0.009,167,4.519,184,1.625,243,0.895,244,0.895,255,3.391,267,2.058,287,0.847,371,1.868,379,1.136,513,2.665,559,1.9,701,3.236,728,2.829,746,3.597,814,4.236,816,3.973,878,3.37,884,2.011,914,3.216,960,3.786,961,3.967,963,4.113,981,3.216,1214,6.784,1215,4.168,1216,6.901,1217,6.383,1218,6.208,1219,6.208,1220,4.772,1221,5.423,1222,4.772,1223,4.772,1224,5.423,1225,4.772,1226,5.423,1227,4.772,1228,4.168,1229,5.423,1230,4.168,1231,4.168,1232,4.168,1233,4.168,1234,4.168,1235,4.168,1236,3.77,1237,4.168]],["title/components/HomeComponent.html",[0,0.596,125,1.232]],["body/components/HomeComponent.html",[0,1.008,1,1.126,2,0.205,3,0.111,4,1.286,5,1.243,6,1.286,7,1.022,8,0.086,10,1.222,11,2.233,12,1.286,13,2.856,14,2.379,15,2.002,17,2.002,19,0.202,20,0.536,22,1.303,23,2.421,24,0.717,25,0.856,28,1.101,29,0.013,30,1.483,32,0.383,33,0.717,34,0.648,37,0.355,38,0.648,39,0.086,40,0.006,41,3.375,42,4.187,43,2.798,44,3.857,45,1.98,46,2.415,47,1.483,48,4.187,49,2.002,70,2.561,71,3.682,73,3.464,74,2.05,75,1.592,77,3.034,78,2.405,82,2.626,83,2.749,84,2.05,85,2.561,86,2.641,87,1.478,92,2.158,94,3.899,96,0.929,97,1.804,98,1.657,99,1.745,100,2.26,101,1.286,106,0.883,107,1.286,108,1.164,109,1.286,110,1.164,111,1.773,112,0.817,113,1.286,114,1.164,115,1.562,116,1.286,117,1.164,118,1.203,119,1.286,120,1.164,121,1.286,122,1.164,123,1.203,124,1.804,125,1.98,126,1.286,127,1.164,128,1.286,129,1.164,130,1.164,131,1.286,132,1.286,133,1.164,134,1.286,135,1.126,136,1.286,137,1.164,138,1.022,139,1.804,140,1.164,141,1.164,142,1.164,143,1.286,144,1.164,145,1.286,146,1.126,147,1.286,148,1.126,149,1.286,150,1.164,151,1.286,152,1.164,153,1.286,154,0.008,155,0.008,160,3.375,161,2.984,162,5.348,163,2.749,164,2.561,168,2.561,172,2.745,174,2.154,183,5.245,184,2.38,232,1.426,243,0.544,244,0.544,257,4.629,262,1.933,295,1.657,335,0.91,379,1.665,416,2.984,425,4.838,437,5.245,442,2.984,443,5.276,537,3.375,565,3.187,717,2.749,756,1.956,880,3.023,1011,1.793,1102,3.299,1103,4.629,1180,3.857,1187,2.984,1189,4.629,1238,3.776,1239,6.123,1240,5.3,1241,5.798,1242,5.3,1243,3.776,1244,3.776,1245,5.798,1246,3.299,1247,4.629,1248,3.776,1249,3.776,1250,7.444,1251,3.776,1252,3.776,1253,6.123,1254,3.776,1255,5.3,1256,3.776,1257,5.3,1258,6.638,1259,3.299,1260,3.776,1261,4.838,1262,3.776,1263,4.629,1264,4.629,1265,4.629,1266,3.776,1267,3.776,1268,3.299,1269,3.776,1270,5.3,1271,3.776,1272,5.3,1273,3.776,1274,3.776,1275,3.776,1276,3.299,1277,5.3,1278,5.3,1279,3.776,1280,3.776,1281,3.776,1282,3.776,1283,3.299,1284,3.776,1285,3.776]],["title/components/InfoDialogComponent.html",[0,0.596,127,1.273]],["body/components/InfoDialogComponent.html",[0,1.101,1,1.459,2,0.234,3,0.144,4,2.148,5,1.61,6,1.666,7,1.324,8,0.112,12,1.666,13,2.921,14,2.451,19,0.261,20,0.638,24,1.198,25,0.901,29,0.013,32,0.504,37,0.337,38,0.84,39,0.112,40,0.007,47,1.819,84,2.655,96,1.203,97,2.148,98,1.708,99,2.077,100,2.512,101,1.666,106,1.007,107,1.666,108,1.507,109,1.666,110,1.507,111,1.894,112,1.058,113,1.666,114,1.507,115,1.705,116,1.666,117,1.507,118,1.558,119,1.666,120,1.507,121,1.666,122,1.507,123,1.558,124,2.148,125,1.459,126,1.666,127,2.273,128,1.666,129,1.507,130,1.507,131,1.666,132,1.666,133,1.507,134,1.666,135,1.459,136,1.666,137,1.507,138,1.324,139,2.148,140,1.507,141,1.507,142,1.507,143,1.666,144,1.507,145,1.666,146,1.459,147,1.666,148,1.459,149,1.666,150,1.507,151,1.666,152,1.507,153,1.666,154,0.009,155,0.009,243,0.705,244,0.705,293,1.915,559,1.803,1286,7.377,1287,4.892,1288,5.511,1289,5.083,1290,6.67,1291,4.892,1292,7.819,1293,4.892,1294,6.309,1295,4.892,1296,4.892,1297,4.892,1298,2.942]],["title/interfaces/LinkFlow.html",[287,0.734,680,2.243]],["body/interfaces/LinkFlow.html",[2,0.059,3,0.122,7,0.545,8,0.046,19,0.108,20,0.421,25,0.26,28,1.259,29,0.013,30,1.334,31,1.42,32,0.346,34,1.069,35,0.882,37,0.303,39,0.147,40,0.007,43,1.384,46,0.918,47,1.071,59,1.043,61,2.838,65,1.043,86,0.761,92,2.204,98,0.889,138,0.889,154,0.005,155,0.005,184,2.12,226,0.849,231,1.149,232,1.811,239,1.093,243,0.599,244,0.29,245,2.021,247,0.761,250,1.782,255,3.06,262,1.516,287,0.938,295,1.429,305,0.918,314,2.838,319,0.818,321,0.882,334,2.806,335,1.187,355,1.149,356,1.149,367,0.761,368,0.761,371,1.686,379,1.762,407,1.782,408,2.602,489,2.371,513,2.863,524,2.425,559,1.91,602,1.043,603,0.709,629,2.735,648,1.894,658,1.559,665,2.689,666,2.256,680,2.866,684,1.701,685,3.282,686,1.782,688,3.792,699,1.149,703,1.149,712,1.873,713,1.043,715,1.627,716,1.043,719,1.496,728,3.09,729,3.754,735,1.093,743,1.149,744,2.256,745,2.5,746,3.773,747,2.734,748,3.23,749,3.242,750,2.5,751,3.226,752,1.211,753,3.175,754,1.211,755,1.873,756,2.735,757,3.552,758,2.5,759,1.211,761,3.552,762,1.211,764,1.211,765,1.211,766,1.211,771,2.5,772,1.873,777,1.873,778,1.211,779,1.211,780,0.918,784,1.873,785,2.602,788,1.093,790,1.043,794,1.211,796,1.211,798,0.918,799,2.06,800,1.782,801,1.211,802,1.974,803,1.701,805,1.211,807,1.093,810,3.591,811,1.211,812,0.663,813,1.149,814,2.934,815,3.406,816,3.191,817,1.093,818,1.149,819,3.242,820,1.873,821,2.371,822,1.974,823,1.149,824,1.149,825,1.211,826,1.149,827,1.211,828,2.734,829,1.211,830,1.211,831,1.211,832,1.211,833,1.211,834,1.211,835,1.211,836,1.149,837,1.149,838,2.5,839,1.093,840,1.211,841,1.211,842,1.211,843,1.974,844,1.974,845,1.211,846,1.211,847,1.211,848,1.974,849,1.974,850,1.974,851,1.211,852,1.211,853,1.211,854,1.782,855,2.5,856,2.883,857,2.883,858,1.873,859,1.974,860,2.883,861,2.5,862,2.883,863,2.883,864,1.211,865,1.974,866,1.974,867,1.974,868,1.211,869,1.974,870,1.211,871,1.974,872,1.211,873,1.211,874,1.211,875,1.211,876,3.012,877,1.093,878,1.093,879,1.211,880,1.149,881,1.974,882,1.211,883,1.211,884,1.752,885,1.149,886,2.5,887,1.211,888,1.211,889,1.974,890,1.211,891,1.211,892,1.211,893,1.211,894,1.211,895,1.149,896,1.974,897,1.974,898,1.211,899,1.974,900,1.211,901,1.211,902,1.211,903,1.211,904,1.211,905,1.211,906,1.211,907,1.211,908,1.211,909,1.211,910,1.974,911,1.211,912,1.211,913,1.211,914,1.701,915,1.211,916,2.5,917,2.5,918,1.211,919,2.5,920,1.211,921,1.211,922,1.211,923,1.974,924,1.211,925,1.211,926,1.211,927,1.211,928,1.211,929,1.211,930,1.211,931,1.974,932,1.211,933,1.873,934,1.211,935,1.211,936,1.211,937,1.093,938,2.371,939,1.149,940,1.211,941,1.974,942,1.974,943,1.211,944,1.974,945,1.974,946,1.211,947,1.211,948,1.211,949,2.5,950,1.211,951,1.211,952,2.5,953,1.211,954,1.149,955,1.211,956,1.211,957,1.211,958,1.211,959,1.211,960,1.043,961,2.256,962,1.211,963,1.782,964,1.211,965,1.211,966,1.211,967,1.873,968,1.211,969,1.211,970,1.211,971,1.974,972,1.149,973,1.211,974,1.149,975,1.043,976,1.211,977,1.211,978,1.211,979,1.211,980,1.211,981,1.043,982,1.211,983,1.149,984,0.998,985,1.211,986,1.211,987,1.211,988,1.211,989,1.211,990,1.211,991,1.211,992,1.211,993,1.211,994,1.211,995,1.211,996,1.211,997,1.211,998,1.211,999,1.211,1000,1.149,1001,1.149,1002,1.211,1003,1.149,1004,1.149,1005,0.956,1006,1.211,1007,1.974,1008,1.211,1009,1.149,1010,1.211,1011,0.956,1012,1.093,1013,1.211,1014,1.211,1015,1.211,1016,1.211,1017,1.211,1018,1.211,1019,1.211,1020,1.211,1021,0.956,1022,1.211,1023,1.211]],["title/modules/LocationModule.html",[185,1.232,197,2.802]],["body/modules/LocationModule.html",[2,0.182,3,0.182,8,0.142,29,0.013,37,0.415,38,1.065,39,0.167,40,0.009,96,1.525,154,0.011,155,0.011,185,2.178,187,3.072,188,3.964,189,3.366,190,3.401,197,5.619,201,3.468,202,1.385,203,3.212,205,3.618,1299,5.416,1300,5.416,1301,4.982,1302,6.201,1303,6.201]],["title/injectables/LocationService.html",[293,1.618,1301,2.485]],["body/injectables/LocationService.html",[2,0.128,3,0.128,8,0.1,19,0.234,20,0.593,22,1.737,24,1.255,25,1.015,28,1.306,29,0.013,30,1.577,32,0.51,35,1.916,37,0.353,38,0.751,39,0.1,40,0.006,45,1.748,75,2.471,106,0.845,123,2.105,154,0.01,155,0.009,160,3.733,202,1.577,243,0.845,244,0.845,245,3.448,247,1.652,267,1.305,293,2.588,335,1.135,371,2.052,377,3.834,559,1.917,611,1.994,812,1.44,817,2.375,818,2.495,836,3.343,837,3.343,937,3.182,1001,2.495,1080,2.329,1167,5.635,1301,3.525,1304,4.375,1305,4.632,1306,5.862,1307,5.12,1308,5.12,1309,4.498,1310,5.862,1311,7.145,1312,6.763,1313,7.58,1314,5.862,1315,6.433,1316,7.063,1317,5.862,1318,5.862,1319,5.862,1320,4.375,1321,7.063,1322,5.518,1323,5.224,1324,4.375,1325,5.862,1326,4.375,1327,4.375,1328,5.862,1329,4.375,1330,4.375,1331,7.063,1332,4.375,1333,4.375,1334,6.611,1335,5.862,1336,5.862,1337,4.375,1338,3.821,1339,5.862,1340,3.821,1341,4.375,1342,4.375,1343,5.862,1344,4.375,1345,4.375,1346,4.375,1347,3.821,1348,4.375]],["title/interfaces/Map.html",[287,0.734,1080,1.456]],["body/interfaces/Map.html",[2,0.18,3,0.18,8,0.14,19,0.328,20,0.734,29,0.013,32,0.443,39,0.177,47,1.878,154,0.011,155,0.011,267,1.829,284,2.686,287,1.372,379,1.46,566,3.017,650,3.905,723,3.905,1005,3.669,1080,2.911,1349,4.845]],["title/classes/MapChanged.html",[40,0.006,1350,2.802]],["body/classes/MapChanged.html",[2,0.162,3,0.162,8,0.126,10,1.701,19,0.294,20,0.688,24,1.045,25,0.951,29,0.013,32,0.613,33,1.045,34,0.946,37,0.363,39,0.176,40,0.011,106,0.794,112,1.191,115,1.23,154,0.01,155,0.01,202,1.72,213,1.444,243,0.794,244,0.794,280,2.074,335,1.322,559,1.859,603,1.94,636,1.54,639,3.673,773,4.632,1080,2.877,1133,3.816,1134,2.729,1138,2.236,1146,3.228,1350,5.223,1351,4.009,1352,6.799,1353,5.508,1354,5.372,1355,4.009,1356,4.352,1357,4.009]],["title/components/MapComponent.html",[0,0.596,129,1.273]],["body/components/MapComponent.html",[0,1.013,1,0.93,2,0.136,3,0.092,4,1.062,5,2.135,6,1.062,7,0.844,8,0.071,10,1.065,11,2.005,12,1.062,13,2.799,14,2.165,15,1.744,17,1.744,19,0.167,20,0.467,22,1.135,23,2.563,24,0.876,25,1.053,28,1.223,29,0.013,30,1.737,31,1.335,32,0.556,33,0.592,34,0.536,37,0.401,38,0.536,39,0.071,40,0.005,75,2.863,87,2.659,92,1.291,96,0.767,97,1.572,98,1.25,99,1.52,100,2.069,101,1.062,106,0.792,107,1.062,108,0.961,109,1.062,110,0.961,111,1.674,112,0.999,113,1.062,114,0.961,115,1.612,116,1.062,117,0.961,118,0.993,119,1.062,120,0.961,121,1.062,122,0.961,123,0.993,124,1.572,125,0.93,126,1.062,127,0.961,128,1.062,129,1.872,130,0.961,131,1.062,132,1.062,133,0.961,134,1.062,135,0.93,136,1.062,137,0.961,138,0.844,139,1.572,140,0.961,141,1.423,142,0.961,143,1.062,144,0.961,145,1.062,146,0.93,147,1.062,148,0.93,149,1.062,150,0.961,151,1.062,152,0.961,153,1.062,154,0.007,155,0.007,172,1.616,184,1.062,201,3.08,213,0.818,232,1.178,243,0.45,244,0.666,255,1.808,262,1.138,265,3.499,268,3.575,270,2.956,271,2.61,272,3.482,273,3.482,274,3.482,279,2.61,280,1.441,281,2.288,284,1.367,295,1.838,304,2.392,314,2.769,317,3.225,319,2.232,320,3.298,335,0.944,342,1.616,343,1.616,344,1.616,345,1.616,346,1.616,349,1.616,358,1.876,361,1.693,362,1.481,365,2.271,367,1.178,368,1.178,369,1.616,371,1.488,372,1.616,374,1.616,375,1.616,376,1.481,379,1.309,392,1.876,396,2.023,397,3.518,398,3.161,402,3.575,524,1.875,566,1.744,569,1.876,629,2.392,636,0.872,665,2.192,723,2.94,746,2.192,884,1.315,975,1.616,1021,2.192,1080,2.679,1081,2.465,1157,5.307,1158,5.307,1159,5.307,1160,5.307,1161,5.307,1162,5.307,1164,4.121,1166,3.648,1167,4.001,1178,4.802,1184,4.343,1196,2.725,1205,4.802,1206,2.725,1207,2.725,1208,2.725,1209,2.725,1210,2.725,1211,2.725,1212,2.725,1213,4.802,1241,4.033,1358,3.12,1359,3.648,1360,3.648,1361,5.497,1362,4.617,1363,4.617,1364,3.12,1365,3.12,1366,3.12,1367,3.12,1368,3.12,1369,3.12,1370,3.12,1371,3.12,1372,3.12,1373,3.12,1374,3.12,1375,3.12,1376,3.12,1377,2.465,1378,4.033,1379,3.12,1380,3.12,1381,3.12,1382,3.131,1383,3.12,1384,4.617,1385,4.617,1386,4.617,1387,3.12,1388,4.617,1389,2.271,1390,2.725,1391,3.12,1392,3.12,1393,4.617,1394,3.12,1395,3.12,1396,3.12,1397,3.12,1398,3.12,1399,3.12,1400,2.465,1401,3.12,1402,3.12,1403,3.12,1404,3.12,1405,3.12,1406,3.12,1407,3.12,1408,4.617,1409,3.12,1410,3.12,1411,3.12,1412,4.617,1413,3.12,1414,3.12]],["title/interfaces/MapState.html",[287,0.734,1415,3.008]],["body/interfaces/MapState.html",[2,0.166,3,0.166,8,0.129,19,0.302,20,0.698,28,1.237,29,0.013,32,0.408,33,1.071,37,0.399,39,0.178,115,1.26,154,0.01,155,0.01,241,2.796,267,1.683,280,1.479,287,1.226,379,1.644,396,2.472,398,3.023,611,2.572,636,2.295,1080,3.006,1138,2.292,1354,4.459,1355,4.108,1356,4.459,1357,5.024,1415,5.975,1416,4.459,1417,4.395,1418,4.459,1419,4.459,1420,5.643,1421,4.929,1422,2.923,1423,4.929,1424,6.902,1425,4.459,1426,5.453,1427,5.643,1428,5.643,1429,4.929]],["title/modules/MaterialModule.html",[185,1.232,1430,2.631]],["body/modules/MaterialModule.html",[2,0.173,3,0.173,8,0.135,29,0.013,37,0.422,38,1.013,39,0.162,40,0.009,63,4.295,154,0.01,155,0.01,185,1.76,205,3.513,208,4.662,209,4.295,379,1.405,1298,3.548,1430,5.137,1431,5.154,1432,6.193,1433,6.193,1434,6.193,1435,7.09,1436,6.193,1437,6.193,1438,6.193,1439,6.193,1440,6.193,1441,6.193,1442,6.193,1443,6.193,1444,6.193,1445,6.193,1446,6.193,1447,6.193,1448,6.193,1449,7.601,1450,5.9,1451,7.09,1452,5.9,1453,5.9,1454,5.9]],["title/interfaces/Member.html",[287,0.734,828,2.357]],["body/interfaces/Member.html",[2,0.059,3,0.122,7,0.544,8,0.046,19,0.107,20,0.42,25,0.259,28,1.258,29,0.013,30,1.332,31,1.415,32,0.449,34,0.905,35,0.88,37,0.302,39,0.147,40,0.007,43,1.381,46,0.915,47,1.069,59,1.041,61,2.835,65,1.041,86,0.759,92,2.203,98,0.887,138,0.887,154,0.005,155,0.005,184,2.118,226,0.847,231,1.146,232,1.808,239,1.09,243,0.598,244,0.29,245,2.018,247,0.759,250,1.778,255,3.058,262,1.513,267,0.599,287,0.936,295,1.427,305,0.915,314,2.835,319,0.816,321,0.88,334,2.803,335,1.256,355,1.146,356,1.146,367,0.759,368,0.759,371,1.684,379,1.761,407,1.778,408,2.598,489,2.367,513,2.862,524,2.422,559,1.909,602,1.041,603,0.708,629,2.732,648,1.891,658,1.556,665,2.686,666,2.252,680,2.252,684,1.697,685,3.279,686,1.778,688,3.79,699,1.146,703,1.146,712,1.869,713,1.041,715,1.623,716,1.041,719,1.493,728,3.088,729,3.751,735,1.09,743,1.146,744,2.252,745,2.495,746,3.772,747,2.367,748,3.226,749,3.238,750,2.495,751,3.223,752,1.208,753,3.171,754,1.208,755,1.869,756,2.732,757,3.548,758,2.495,759,1.208,761,3.548,762,1.208,764,1.208,765,1.208,766,1.208,771,2.495,772,1.869,777,1.869,778,1.208,779,1.208,780,0.915,784,1.869,785,2.598,788,1.09,790,1.041,794,1.208,796,1.208,798,0.915,799,2.056,800,1.778,801,1.208,802,1.97,803,1.697,805,1.208,807,1.09,810,2.495,811,1.208,812,0.661,813,1.146,814,2.93,815,3.403,816,3.188,817,1.09,818,1.146,819,3.238,820,1.869,821,1.869,822,1.208,823,1.146,824,1.146,825,1.208,826,1.146,827,1.97,828,3.226,829,2.879,830,2.879,831,1.208,832,1.208,833,1.208,834,1.208,835,1.208,836,1.146,837,1.146,838,2.495,839,1.09,840,1.208,841,1.208,842,1.208,843,1.97,844,1.97,845,1.208,846,1.208,847,1.208,848,1.97,849,1.97,850,1.97,851,1.208,852,1.208,853,1.208,854,1.778,855,2.495,856,2.879,857,2.879,858,1.869,859,1.97,860,2.879,861,2.495,862,2.879,863,2.879,864,1.208,865,1.97,866,1.97,867,1.97,868,1.208,869,1.97,870,1.208,871,1.97,872,1.208,873,1.208,874,1.208,875,1.208,876,3.008,877,1.09,878,1.09,879,1.208,880,1.146,881,1.97,882,1.208,883,1.208,884,1.749,885,1.146,886,2.495,887,1.208,888,1.208,889,1.97,890,1.208,891,1.208,892,1.208,893,1.208,894,1.208,895,1.146,896,1.97,897,1.97,898,1.208,899,1.97,900,1.208,901,1.208,902,1.208,903,1.208,904,1.208,905,1.208,906,1.208,907,1.208,908,1.208,909,1.208,910,1.97,911,1.208,912,1.208,913,1.208,914,1.697,915,1.208,916,2.495,917,2.495,918,1.208,919,2.495,920,1.208,921,1.208,922,1.208,923,1.97,924,1.208,925,1.208,926,1.208,927,1.208,928,1.208,929,1.208,930,1.208,931,1.97,932,1.208,933,1.869,934,1.208,935,1.208,936,1.208,937,1.09,938,2.367,939,1.146,940,1.208,941,1.97,942,1.97,943,1.208,944,1.97,945,1.97,946,1.208,947,1.208,948,1.208,949,2.495,950,1.208,951,1.208,952,2.495,953,1.208,954,1.146,955,1.208,956,1.208,957,1.208,958,1.208,959,1.208,960,1.041,961,2.252,962,1.208,963,1.778,964,1.208,965,1.208,966,1.208,967,1.869,968,1.208,969,1.208,970,1.208,971,1.97,972,1.146,973,1.208,974,1.146,975,1.041,976,1.208,977,1.208,978,1.208,979,1.208,980,1.208,981,1.041,982,1.208,983,1.146,984,0.995,985,1.208,986,1.208,987,1.208,988,1.208,989,1.208,990,1.208,991,1.208,992,1.208,993,1.208,994,1.208,995,1.208,996,1.208,997,1.208,998,1.208,999,1.208,1000,1.146,1001,1.146,1002,1.208,1003,1.146,1004,1.146,1005,0.954,1006,1.208,1007,1.97,1008,1.208,1009,1.146,1010,1.208,1011,0.954,1012,1.09,1013,1.208,1014,1.208,1015,1.208,1016,1.208,1017,1.208,1018,1.208,1019,1.208,1020,1.208,1021,0.954,1022,1.208,1023,1.208]],["title/components/MessageArchivedComponent.html",[0,0.596,130,1.273]],["body/components/MessageArchivedComponent.html",[0,1.113,1,1.512,2,0.19,3,0.149,4,2.198,5,1.669,6,1.726,7,1.372,8,0.116,12,1.726,13,2.928,14,2.471,19,0.271,20,0.653,24,0.962,25,0.833,29,0.013,32,0.466,37,0.345,38,0.87,39,0.116,40,0.007,47,1.813,84,2.752,96,1.247,97,2.198,98,1.747,99,2.125,100,2.546,101,1.726,106,1.024,107,1.726,108,1.562,109,1.726,110,1.562,111,1.91,112,1.097,113,1.726,114,1.562,115,1.724,116,1.726,117,1.562,118,1.615,119,1.726,120,1.562,121,1.726,122,1.562,123,1.615,124,2.198,125,1.512,126,1.726,127,1.562,128,1.726,129,1.562,130,2.304,131,2.418,132,1.726,133,1.562,134,1.726,135,1.512,136,1.726,137,1.562,138,1.372,139,2.198,140,1.562,141,1.562,142,1.562,143,1.726,144,1.562,145,1.726,146,1.512,147,1.726,148,1.512,149,1.726,150,1.562,151,1.726,152,1.562,153,1.726,154,0.009,155,0.009,243,0.731,244,0.731,293,1.985,559,1.638,1298,3.049,1455,7.102,1456,5.07,1457,6.455,1458,5.07,1459,5.07,1460,5.07,1461,5.07,1462,5.07,1463,5.07]],["title/modules/NetworkModule.html",[185,1.232,198,2.802]],["body/modules/NetworkModule.html",[2,0.178,3,0.178,8,0.139,29,0.013,37,0.434,38,1.041,39,0.165,40,0.009,96,1.491,154,0.011,155,0.011,185,2.15,187,3.005,188,3.913,189,3.292,190,3.369,198,5.693,201,3.423,202,1.355,203,3.142,205,3.572,320,4.475,1464,5.298,1465,5.298,1466,5.298,1467,5.591,1468,6.066,1469,6.066,1470,6.066]],["title/classes/Node.html",[40,0.006,746,1.962]],["body/classes/Node.html",[2,0.055,3,0.117,7,0.511,8,0.043,19,0.101,20,0.402,24,0.358,25,0.875,28,1.243,29,0.013,30,1.297,31,1.424,32,0.507,33,0.968,34,1.113,35,0.827,37,0.294,39,0.144,40,0.007,43,1.313,46,1.419,47,1.03,59,0.978,61,2.767,65,0.978,86,0.713,92,2.193,98,0.843,106,0.272,138,0.843,154,0.005,155,0.005,184,2.067,226,0.796,231,1.077,232,1.742,239,1.69,243,0.665,244,0.449,245,1.944,247,0.713,250,1.69,255,3.043,262,1.449,267,0.563,287,0.819,295,1.381,305,0.86,314,2.767,319,0.767,321,0.827,334,2.721,335,1.206,355,1.077,356,1.077,367,0.713,368,0.713,371,1.643,379,1.737,407,1.69,408,2.503,489,3.132,513,2.883,524,2.358,559,1.938,602,0.978,603,0.665,629,2.643,648,2.503,658,1.479,665,2.607,666,2.157,680,2.157,684,1.613,685,3.211,686,1.69,688,3.736,699,1.077,703,1.077,712,1.776,713,0.978,715,1.543,716,0.978,719,1.419,728,3.028,729,3.684,735,1.025,743,1.077,744,2.157,745,2.39,746,3.767,747,2.267,748,3.132,749,3.153,750,3.302,751,3.145,752,1.135,753,3.068,754,1.135,755,1.776,756,2.643,757,3.942,758,2.39,759,1.135,761,3.462,762,1.135,764,1.135,765,1.135,766,1.135,771,2.39,772,1.776,773,1.873,777,1.776,778,1.135,779,1.135,780,0.86,784,1.776,785,2.503,788,1.025,790,0.978,794,1.135,796,1.135,798,0.86,799,1.969,800,1.69,801,1.135,802,1.873,803,1.613,805,1.135,807,1.025,810,2.39,811,1.135,812,0.622,813,1.077,814,2.845,815,3.462,816,3.211,817,1.025,818,1.077,819,3.153,820,1.776,821,1.776,822,1.135,823,1.077,824,1.077,825,1.135,826,1.077,827,1.135,828,2.63,829,1.135,830,1.135,831,1.873,832,1.873,833,1.873,834,1.873,835,1.873,836,1.776,837,1.776,838,3.493,839,2.503,840,2.773,841,2.773,842,2.773,843,1.873,844,1.873,845,1.873,846,1.135,847,1.135,848,1.873,849,1.873,850,1.873,851,1.135,852,1.135,853,1.135,854,1.69,855,2.39,856,2.773,857,2.773,858,1.776,859,1.873,860,2.773,861,2.39,862,2.773,863,2.773,864,1.135,865,1.873,866,1.873,867,1.873,868,1.135,869,1.873,870,1.135,871,1.873,872,1.135,873,1.135,874,1.135,875,1.135,876,2.91,877,1.025,878,1.025,879,1.135,880,1.077,881,1.873,882,1.135,883,1.135,884,1.675,885,1.077,886,2.39,887,1.135,888,1.135,889,1.873,890,1.135,891,1.135,892,1.135,893,1.135,894,1.135,895,1.077,896,1.873,897,1.873,898,1.135,899,1.873,900,1.135,901,1.135,902,1.135,903,1.135,904,1.135,905,1.135,906,1.135,907,1.135,908,1.135,909,1.135,910,1.873,911,1.135,912,1.135,913,1.135,914,1.613,915,1.135,916,2.39,917,2.39,918,1.135,919,2.39,920,1.135,921,1.135,922,1.135,923,1.873,924,1.135,925,1.135,926,1.135,927,1.135,928,1.135,929,1.135,930,1.135,931,1.873,932,1.135,933,1.776,934,1.135,935,1.135,936,1.135,937,1.025,938,2.267,939,1.077,940,1.135,941,1.873,942,1.873,943,1.135,944,1.873,945,1.873,946,1.135,947,1.135,948,1.135,949,2.39,950,1.135,951,1.135,952,2.39,953,1.135,954,1.077,955,1.135,956,1.135,957,1.135,958,1.135,959,1.135,960,0.978,961,2.157,962,1.135,963,1.69,964,1.135,965,1.135,966,1.135,967,1.776,968,1.135,969,1.135,970,1.135,971,1.873,972,1.077,973,1.135,974,1.077,975,0.978,976,1.135,977,1.135,978,1.135,979,1.135,980,1.135,981,0.978,982,1.135,983,1.077,984,0.935,985,1.135,986,1.135,987,1.135,988,1.135,989,1.135,990,1.135,991,1.135,992,1.135,993,1.135,994,1.135,995,1.135,996,1.135,997,1.135,998,1.135,999,1.135,1000,1.077,1001,1.077,1002,1.135,1003,1.077,1004,1.077,1005,0.896,1006,1.135,1007,1.873,1008,1.135,1009,1.077,1010,1.135,1011,0.896,1012,1.025,1013,1.135,1014,1.135,1015,1.135,1016,1.135,1017,1.135,1018,1.135,1019,1.135,1020,1.135,1021,0.896,1022,1.135,1023,1.135,1471,3.114,1472,1.888,1473,1.888,1474,1.888,1475,1.888,1476,1.888,1477,1.888,1478,1.888,1479,1.888]],["title/components/NumericComponent.html",[0,0.596,133,1.273]],["body/components/NumericComponent.html",[0,1.067,1,1.104,2,0.153,3,0.109,4,1.26,5,1.218,6,1.26,7,1.002,8,0.085,10,1.205,11,2.208,12,1.26,13,2.851,14,2.281,15,1.973,17,1.973,19,0.198,20,0.529,22,1.285,23,2.699,24,0.992,25,1.034,28,1.275,29,0.013,30,1.791,32,0.475,33,1.15,34,1.04,37,0.371,38,0.635,39,0.085,40,0.005,43,2.773,45,1.806,47,1.469,77,1.834,82,1.834,87,2.819,96,0.91,97,1.779,98,1.414,99,1.72,100,2.24,101,1.26,106,1,107,1.26,108,1.14,109,1.26,110,1.14,111,1.763,112,1.13,113,1.26,114,1.14,115,1.653,116,1.26,117,1.14,118,1.179,119,1.26,120,1.14,121,1.26,122,1.14,123,1.179,124,1.779,125,1.104,126,1.26,127,1.14,128,1.26,129,1.14,130,1.14,131,1.26,132,1.26,133,2.027,134,1.26,135,1.104,136,1.26,137,1.14,138,1.002,139,1.779,140,1.14,141,1.61,142,1.14,143,1.26,144,1.14,145,1.26,146,1.104,147,1.26,148,1.104,149,1.26,150,1.14,151,1.26,152,1.14,153,1.26,154,0.008,155,0.008,172,1.917,174,2.111,213,0.97,243,0.533,244,0.533,265,3.65,268,3.745,270,3.163,271,2.875,272,3.667,273,3.667,274,3.667,279,2.875,280,1.37,281,2.589,284,1.621,304,2.706,317,3.419,335,1.04,342,1.917,343,1.917,344,1.917,345,1.917,346,1.917,349,1.917,369,1.917,371,1.002,372,1.917,374,1.917,375,1.917,420,2.694,496,4.128,513,2.399,537,4.19,567,3.956,569,2.226,599,2.694,636,1.034,648,2.381,653,4.462,654,3.803,655,3.543,656,3.803,1011,1.757,1012,2.836,1042,4.462,1127,2.694,1480,3.701,1481,6.056,1482,5.225,1483,6.579,1484,5.225,1485,3.701,1486,3.701,1487,3.701,1488,3.701,1489,3.701,1490,3.233,1491,3.233,1492,3.233,1493,5.225,1494,3.701,1495,5.225,1496,4.564,1497,5.225,1498,5.225,1499,5.225,1500,5.225,1501,5.225,1502,3.701,1503,3.701,1504,3.701,1505,3.701,1506,3.701]],["title/interfaces/NumericalSimulation.html",[287,0.734,653,2.802]],["body/interfaces/NumericalSimulation.html",[2,0.166,3,0.166,8,0.13,19,0.303,20,0.7,29,0.013,31,1.469,32,0.586,39,0.171,45,2.32,47,1.546,154,0.01,155,0.01,287,1.381,335,1.435,513,2.837,537,4.954,567,4.678,648,3.545,649,4.479,650,3.609,651,4.479,652,4.479,653,5.066,654,5.662,655,5.276,656,5.662,657,3.844,658,2.691,659,4.126]],["title/interfaces/OdPair.html",[287,0.734,314,1.883]],["body/interfaces/OdPair.html",[2,0.059,3,0.122,7,0.542,8,0.046,19,0.107,20,0.419,25,0.258,28,1.258,29,0.013,30,1.331,31,1.41,32,0.408,34,0.904,35,0.877,37,0.302,39,0.147,40,0.007,43,1.378,46,0.913,47,1.067,59,1.037,61,2.832,65,1.037,86,0.756,92,2.202,98,0.885,138,0.885,154,0.005,155,0.005,184,2.116,226,0.844,231,1.142,232,1.805,239,1.087,243,0.597,244,0.289,245,2.014,247,0.756,250,1.774,255,3.071,262,1.51,267,0.597,287,0.935,295,1.425,305,0.913,314,2.93,319,0.813,321,0.877,334,2.952,335,1.255,355,1.142,356,1.142,367,0.756,368,0.756,371,1.682,379,1.76,407,1.774,408,2.594,489,2.362,513,2.861,524,2.419,559,1.909,602,1.037,603,0.705,629,2.727,648,1.887,658,1.552,665,2.829,666,2.247,680,2.247,684,1.693,685,3.275,686,1.774,688,3.788,699,1.142,703,1.142,712,1.864,713,1.037,715,1.619,716,1.037,719,1.49,728,3.085,729,3.748,735,1.087,743,1.142,744,2.247,745,2.49,746,3.784,747,2.362,748,3.77,749,3.234,750,2.49,751,3.219,752,1.204,753,3.166,754,1.204,755,1.864,756,3.33,757,3.544,758,2.49,759,1.204,761,3.544,762,1.204,764,1.204,765,1.204,766,1.204,771,2.49,772,1.864,777,1.864,778,1.204,779,1.204,780,0.913,784,1.864,785,2.594,788,1.087,790,1.037,794,1.204,796,1.204,798,0.913,799,2.052,800,1.774,801,1.204,802,1.965,803,1.693,805,1.204,807,1.087,810,2.49,811,1.204,812,0.659,813,1.142,814,2.926,815,3.398,816,3.185,817,1.087,818,1.142,819,3.748,820,2.362,821,1.864,822,1.204,823,1.142,824,1.142,825,1.204,826,1.142,827,1.204,828,2.725,829,1.204,830,1.204,831,1.204,832,1.204,833,1.204,834,1.204,835,1.204,836,1.142,837,1.142,838,2.49,839,1.087,840,1.204,841,1.204,842,1.204,843,1.965,844,1.965,845,1.204,846,1.204,847,1.204,848,1.965,849,1.965,850,1.965,851,1.204,852,1.204,853,1.204,854,1.774,855,2.49,856,2.873,857,2.873,858,1.864,859,1.965,860,2.873,861,2.49,862,2.873,863,2.873,864,1.204,865,1.965,866,1.965,867,1.965,868,1.204,869,1.965,870,1.204,871,1.965,872,1.204,873,1.204,874,1.204,875,1.204,876,3.003,877,1.087,878,1.087,879,1.204,880,1.142,881,1.965,882,1.204,883,1.204,884,1.745,885,1.142,886,2.49,887,1.204,888,1.204,889,1.965,890,1.204,891,1.204,892,1.204,893,1.204,894,1.204,895,1.142,896,1.965,897,1.965,898,1.204,899,1.965,900,1.204,901,1.204,902,1.204,903,1.204,904,1.204,905,1.204,906,1.204,907,1.204,908,1.204,909,1.204,910,1.965,911,1.204,912,1.204,913,1.204,914,1.693,915,1.204,916,2.49,917,2.49,918,1.204,919,2.49,920,1.204,921,1.204,922,1.204,923,1.965,924,1.204,925,1.204,926,1.204,927,1.204,928,1.204,929,1.204,930,1.204,931,1.965,932,1.204,933,1.864,934,1.204,935,1.204,936,1.204,937,1.087,938,2.362,939,1.142,940,1.204,941,1.965,942,1.965,943,1.204,944,1.965,945,1.965,946,1.204,947,1.204,948,1.204,949,2.49,950,1.204,951,1.204,952,2.49,953,1.204,954,1.142,955,1.204,956,1.204,957,1.204,958,1.204,959,1.204,960,1.037,961,2.247,962,1.204,963,1.774,964,1.204,965,1.204,966,1.204,967,1.864,968,1.204,969,1.204,970,1.204,971,1.965,972,1.142,973,1.204,974,1.142,975,1.037,976,1.204,977,1.204,978,1.204,979,1.204,980,1.204,981,1.037,982,1.204,983,1.142,984,0.992,985,1.204,986,1.204,987,1.204,988,1.204,989,1.204,990,1.204,991,1.204,992,1.204,993,1.204,994,1.204,995,1.204,996,1.204,997,1.204,998,1.204,999,1.204,1000,1.142,1001,1.142,1002,1.204,1003,1.142,1004,1.142,1005,0.951,1006,1.204,1007,1.965,1008,1.204,1009,1.142,1010,1.204,1011,0.951,1012,1.087,1013,1.204,1014,1.204,1015,1.204,1016,1.204,1017,1.204,1018,1.204,1019,1.204,1020,1.204,1021,0.951,1022,1.204,1023,1.204]],["title/interfaces/Path.html",[255,1.618,287,0.734]],["body/interfaces/Path.html",[2,0.154,3,0.154,8,0.12,19,0.353,20,0.669,28,1.097,29,0.013,30,1.476,31,1.388,32,0.547,37,0.281,39,0.151,40,0.008,47,1.175,154,0.01,155,0.01,167,3.83,184,1.792,255,3.356,267,1.569,287,1.174,371,1.424,379,1.253,513,3.009,559,1.666,701,4.482,728,3.012,746,3.969,814,4.044,816,3.274,878,2.856,884,2.218,914,2.726,960,3.423,961,4.325,963,4.39,981,2.726,1214,4.596,1215,4.596,1217,4.596,1221,4.596,1224,4.596,1226,4.596,1228,4.596,1229,5.772,1230,4.596,1231,4.596,1232,4.596,1233,4.596,1234,4.596,1235,4.596,1236,4.158,1237,4.596]],["title/classes/PeriodsChanged.html",[40,0.006,1507,2.485]],["body/classes/PeriodsChanged.html",[2,0.153,3,0.153,8,0.119,10,1.795,19,0.278,20,0.664,24,0.988,25,0.927,29,0.013,32,0.603,33,0.988,34,0.894,37,0.351,39,0.182,40,0.011,45,2.489,106,0.75,112,1.42,154,0.01,155,0.01,202,1.686,213,1.365,243,0.75,244,0.75,280,2.115,295,1.409,335,1.364,559,1.882,600,3.13,603,1.834,606,2.697,636,1.455,638,4.18,639,3.72,640,3.315,1133,3.937,1134,2.579,1138,2.114,1146,3.584,1507,4.54,1508,3.315,1509,6.564,1510,5.206,1511,4.323,1512,4.323,1513,2.826,1514,3.53,1515,3.53,1516,3.315]],["title/components/PrivacyComponent.html",[0,0.596,135,1.232]],["body/components/PrivacyComponent.html",[0,1.052,1,1.272,2,0.169,3,0.125,4,1.452,5,1.404,6,1.452,7,1.154,8,0.098,10,1.329,11,2.38,12,1.452,13,2.888,14,2.581,15,2.177,17,2.177,19,0.228,22,1.417,23,2.549,24,1.239,25,0.743,28,0.708,29,0.012,30,1.287,37,0.228,38,0.732,39,0.098,40,0.006,41,4.451,46,3.429,47,1.841,49,2.177,73,2.113,84,2.315,85,2.892,86,1.611,87,1.669,96,1.049,97,1.962,98,1.56,99,1.897,100,2.38,101,1.452,106,0.831,107,1.452,108,1.314,109,1.452,110,1.314,111,1.832,112,0.922,113,1.452,114,1.314,115,1.631,116,1.452,117,1.314,118,1.358,119,1.452,120,1.314,121,1.452,122,1.314,123,2.325,124,1.962,125,1.272,126,1.452,127,1.314,128,1.452,129,1.314,130,1.314,131,1.452,132,1.452,133,1.314,134,1.452,135,2.085,136,1.452,137,1.314,138,1.154,139,1.962,140,1.314,141,1.314,142,1.314,143,1.452,144,1.314,145,1.452,146,1.272,147,1.452,148,1.272,149,1.452,150,1.314,151,1.452,152,1.314,153,1.452,154,0.01,155,0.008,165,2.315,174,2.432,190,3.062,263,5.886,377,3.128,590,4.194,701,3.908,761,3.987,798,1.944,820,3.287,1080,2.03,1180,4.194,1322,4.194,1496,5.033,1517,4.265,1518,6.526,1519,5.762,1520,4.265,1521,4.265,1522,6.833,1523,6.105,1524,4.194,1525,5.762,1526,5.762,1527,5.762,1528,5.762,1529,5.762,1530,5.762,1531,5.762,1532,5.762,1533,6.99,1534,5.762,1535,5.762,1536,5.033,1537,5.762,1538,5.762,1539,5.762,1540,4.553,1541,5.762,1542,5.762,1543,6.99,1544,5.762,1545,5.762,1546,5.762,1547,5.033,1548,4.553,1549,5.762,1550,3.104,1551,3.725]],["title/classes/Relation.html",[40,0.006,876,2.357]],["body/classes/Relation.html",[2,0.058,3,0.12,7,0.533,8,0.045,19,0.105,20,0.414,24,0.374,25,0.673,28,1.254,29,0.013,30,1.321,31,1.417,32,0.405,33,0.374,34,0.962,35,0.863,37,0.3,39,0.146,40,0.008,43,1.359,46,0.898,47,1.252,59,1.021,61,2.814,65,1.671,86,0.744,92,2.197,98,1.108,106,0.284,138,0.873,154,0.005,155,0.005,184,2.102,226,0.83,231,1.839,232,1.787,239,1.069,243,0.682,244,0.465,245,1.995,247,0.744,250,1.75,255,3.049,262,1.493,267,0.588,287,0.84,295,1.413,305,0.898,314,2.814,319,0.8,321,0.863,334,2.777,335,1.18,355,1.124,356,1.124,367,0.744,368,0.744,371,1.671,379,1.753,407,1.75,408,2.568,489,2.335,513,2.854,524,2.402,559,1.921,602,1.021,603,0.694,629,2.704,648,1.866,658,1.531,665,2.661,666,2.222,680,2.222,684,1.671,685,3.258,686,1.75,688,3.773,699,1.124,703,1.124,712,1.839,713,1.021,715,1.598,716,1.021,719,1.47,728,3.069,729,3.73,735,1.069,743,1.124,744,2.568,745,2.845,746,3.762,747,2.335,748,3.197,749,3.211,750,2.462,751,3.198,752,1.185,753,3.139,754,1.185,755,1.839,756,2.704,757,3.989,758,2.462,759,1.185,761,3.521,762,1.185,764,1.185,765,1.185,766,1.185,771,2.462,772,1.839,777,1.839,778,1.185,779,1.185,780,0.898,784,1.839,785,2.568,788,1.069,790,1.021,794,1.185,796,1.185,798,0.898,799,2.028,800,1.75,801,1.185,802,1.939,803,1.671,805,1.185,807,1.069,810,2.462,811,1.185,812,0.649,813,1.124,814,2.903,815,3.374,816,3.166,817,1.069,818,1.124,819,3.211,820,1.839,821,1.839,822,1.185,823,1.124,824,1.124,825,1.185,826,1.124,827,1.185,828,3.645,829,1.185,830,1.185,831,1.185,832,1.185,833,1.185,834,1.185,835,1.185,836,1.124,837,1.124,838,2.462,839,1.069,840,1.185,841,1.185,842,1.185,843,1.939,844,1.939,845,1.185,846,1.185,847,1.185,848,1.939,849,1.939,850,1.939,851,1.185,852,1.185,853,1.185,854,1.75,855,2.462,856,2.845,857,2.845,858,1.839,859,1.939,860,2.845,861,2.462,862,2.845,863,2.845,864,1.185,865,1.939,866,1.939,867,1.939,868,1.185,869,1.939,870,1.185,871,1.939,872,1.185,873,1.185,874,1.185,875,1.185,876,3.374,877,1.75,878,1.75,879,1.939,880,1.839,881,3.37,882,1.939,883,1.185,884,1.726,885,1.124,886,2.462,887,1.185,888,1.185,889,1.939,890,1.185,891,1.185,892,1.185,893,1.185,894,1.185,895,1.124,896,1.939,897,1.939,898,1.185,899,1.939,900,1.185,901,1.185,902,1.185,903,1.185,904,1.185,905,1.185,906,1.185,907,1.185,908,1.185,909,1.185,910,1.939,911,1.185,912,1.185,913,1.185,914,1.671,915,1.185,916,2.462,917,2.462,918,1.185,919,2.462,920,1.185,921,1.185,922,1.185,923,1.939,924,1.185,925,1.185,926,1.185,927,1.185,928,1.185,929,1.185,930,1.185,931,1.939,932,1.185,933,1.839,934,1.185,935,1.185,936,1.185,937,1.069,938,2.335,939,1.124,940,1.185,941,1.939,942,1.939,943,1.185,944,1.939,945,1.939,946,1.185,947,1.185,948,1.185,949,2.462,950,1.185,951,1.185,952,2.462,953,1.185,954,1.124,955,1.185,956,1.185,957,1.185,958,1.185,959,1.185,960,1.021,961,2.222,962,1.185,963,1.75,964,1.185,965,1.185,966,1.185,967,1.839,968,1.185,969,1.185,970,1.185,971,1.939,972,1.124,973,1.185,974,1.124,975,1.021,976,1.185,977,1.185,978,1.185,979,1.185,980,1.185,981,1.021,982,1.185,983,1.124,984,0.976,985,1.185,986,1.185,987,1.185,988,1.185,989,1.185,990,1.185,991,1.185,992,1.185,993,1.185,994,1.185,995,1.185,996,1.185,997,1.185,998,1.185,999,1.185,1000,1.124,1001,1.124,1002,1.185,1003,1.124,1004,1.124,1005,0.935,1006,1.185,1007,1.939,1008,1.185,1009,1.124,1010,1.185,1011,0.935,1012,1.069,1013,1.185,1014,1.185,1015,1.185,1016,1.185,1017,1.185,1018,1.185,1019,1.185,1020,1.185,1021,0.935,1022,1.185,1023,1.185,1552,3.225,1553,1.97,1554,1.97]],["title/classes/Reset.html",[40,0.006,202,0.923]],["body/classes/Reset.html",[2,0.153,3,0.153,8,0.119,10,1.795,19,0.278,20,0.664,24,0.988,25,0.927,29,0.013,32,0.603,33,0.988,34,0.894,37,0.351,39,0.182,40,0.011,45,2.489,106,0.75,112,1.42,154,0.01,155,0.01,202,1.738,213,1.365,243,0.75,244,0.75,280,2.115,295,1.409,335,1.364,559,1.882,600,3.13,603,1.834,606,2.697,636,1.455,638,3.315,639,3.72,640,3.315,1133,3.937,1134,2.579,1138,2.114,1146,3.584,1507,4.323,1508,3.315,1511,4.323,1512,4.323,1513,2.826,1514,3.53,1515,4.452,1516,3.315,1555,6.564,1556,5.206]],["title/classes/Reset-1.html",[40,0.005,184,1.175,202,0.771]],["body/classes/Reset-1.html",[2,0.164,3,0.164,8,0.127,10,1.71,19,0.298,20,0.693,24,1.057,25,0.956,29,0.013,32,0.602,33,1.057,34,0.956,37,0.366,39,0.177,40,0.011,106,0.803,112,1.205,115,1.244,154,0.01,155,0.01,202,1.773,213,1.46,243,0.803,244,0.803,280,2.081,335,1.328,559,1.864,603,1.962,636,1.557,639,3.683,1080,2.884,1133,3.831,1134,2.76,1138,2.262,1146,3.251,1350,5.027,1351,4.055,1354,4.402,1355,4.055,1356,5.41,1357,4.055,1557,6.847,1558,5.571]],["title/classes/Reset-2.html",[40,0.005,202,0.771,524,1.401]],["body/classes/Reset-2.html",[2,0.146,3,0.146,8,0.114,10,1.811,19,0.376,20,0.644,24,0.943,25,0.907,29,0.013,31,1.208,32,0.602,33,0.943,34,0.853,37,0.341,39,0.183,40,0.011,106,0.716,111,1.869,112,1.074,115,1.109,154,0.009,155,0.009,202,1.714,213,1.302,243,0.716,244,0.716,280,2.119,295,1.344,335,1.402,559,1.883,566,3.054,603,1.75,636,1.388,639,3.722,812,1.635,1131,3.818,1132,2.987,1133,3.955,1134,2.461,1137,2.987,1138,2.017,1139,2.833,1140,4.012,1141,4.012,1142,4.012,1143,2.461,1144,3.163,1145,2.987,1146,3.643,1147,2.987,1148,2.987,1149,2.833,1150,3.831,1151,2.987,1559,6.371,1560,4.967]],["title/injectables/SchedulerService.html",[293,1.618,1561,2.631]],["body/injectables/SchedulerService.html",[2,0.088,3,0.157,8,0.068,19,0.412,22,1.099,24,0.849,25,0.821,28,1.312,29,0.013,30,1.591,31,1.374,32,0.43,33,1.017,37,0.397,38,0.513,39,0.068,40,0.004,43,2.818,45,1.993,47,1.827,49,1.129,54,3.533,61,2.038,106,0.857,111,1.276,154,0.007,155,0.007,202,1.493,239,1.622,243,0.857,244,0.857,255,2.098,293,2.098,314,1.362,318,2.824,319,3.058,320,3.229,321,3.035,322,3.577,323,3.788,324,3.788,335,0.92,357,1.704,358,1.797,359,2.361,360,2.61,371,1.929,376,2.123,377,1.622,379,1.65,396,2.347,398,3.035,402,3.433,404,2.61,444,3.788,465,2.361,513,1.631,550,3.577,559,1.236,581,5.838,597,2.175,635,4.68,665,2.123,666,3.628,685,3.156,686,2.427,707,2.361,713,2.316,719,3.247,798,2.442,799,1.48,812,2.398,816,2.655,884,3.215,937,3.457,939,2.55,954,2.55,981,2.776,984,2.655,1080,1.888,1094,3.255,1149,4.351,1164,4.034,1193,3.906,1301,3.577,1309,3.412,1524,3.255,1540,2.361,1548,4.7,1561,2.847,1562,2.988,1563,4.472,1564,4.472,1565,4.472,1566,2.61,1567,4.234,1568,4.234,1569,2.988,1570,2.988,1571,4.472,1572,4.472,1573,2.988,1574,6.684,1575,5.838,1576,6.684,1577,7.628,1578,4.472,1579,2.988,1580,3.906,1581,4.472,1582,4.472,1583,2.988,1584,7.285,1585,2.61,1586,2.361,1587,2.361,1588,2.988,1589,2.988,1590,2.988,1591,2.988,1592,2.988,1593,2.988,1594,2.988,1595,2.988,1596,2.988,1597,5.196,1598,5.358,1599,2.988,1600,5.948,1601,2.988,1602,2.988,1603,2.988,1604,2.988,1605,2.988,1606,2.988,1607,2.988,1608,2.988,1609,2.988,1610,2.988,1611,5.358,1612,5.23,1613,2.988,1614,5.948,1615,2.988,1616,2.988,1617,2.988,1618,2.988,1619,5.948,1620,2.988,1621,4.472,1622,4.472,1623,3.906,1624,4.472,1625,4.472,1626,3.906,1627,2.988,1628,2.61,1629,2.61,1630,5.358,1631,4.68,1632,5.358,1633,5.358,1634,5.358,1635,4.472,1636,5.358,1637,2.988,1638,2.988,1639,2.988,1640,2.988,1641,2.988,1642,2.988,1643,2.988,1644,2.988,1645,2.988,1646,2.988,1647,2.988,1648,2.988]],["title/components/SearchForTheAreaComponent.html",[0,0.596,137,1.273]],["body/components/SearchForTheAreaComponent.html",[0,1.033,1,0.99,2,0.142,3,0.097,4,1.13,5,1.093,6,1.13,7,0.898,8,0.076,10,1.115,11,2.078,12,1.13,13,2.819,14,2.208,15,1.825,17,1.825,19,0.335,20,0.489,22,1.188,23,2.613,24,0.917,25,1.03,28,1.279,29,0.013,30,1.806,31,0.83,32,0.48,33,0.63,34,0.83,37,0.356,38,0.57,39,0.076,40,0.005,47,0.741,75,1.399,87,2.718,92,0.928,96,0.816,97,1.645,98,1.308,99,1.591,100,2.131,101,1.13,106,0.902,107,1.13,108,1.023,109,1.13,110,1.023,111,1.835,112,1.232,113,1.13,114,1.023,115,1.486,116,1.13,117,1.023,118,1.057,119,1.13,120,1.023,121,1.13,122,1.023,123,1.057,124,1.645,125,0.99,126,1.13,127,1.023,128,1.13,129,1.023,130,1.023,131,1.13,132,1.13,133,1.023,134,1.13,135,0.99,136,1.13,137,1.929,138,2.109,139,1.645,140,1.023,141,1.023,142,1.023,143,1.13,144,1.023,145,1.13,146,0.99,147,1.13,148,0.99,149,1.13,150,1.023,151,1.13,152,1.023,153,1.13,154,0.009,155,0.007,160,4.563,243,0.697,244,0.697,265,3.555,268,3.638,270,3.032,271,2.706,272,3.551,273,3.551,274,3.551,279,2.706,280,1.267,281,2.394,284,1.454,304,2.503,311,4,312,4.175,318,2.972,335,1.075,342,1.719,343,1.719,344,1.719,345,1.719,346,1.719,349,1.719,354,1.802,357,1.893,369,1.719,371,1.308,372,1.719,373,2.114,374,1.719,375,1.719,376,3.555,377,1.802,396,1.454,398,2.496,402,2.823,403,3.517,414,3.277,415,3.077,566,1.825,636,2.053,780,2.202,812,2.286,839,2.623,1090,4.221,1143,2.394,1167,2.416,1301,3.764,1307,2.899,1308,2.899,1309,3.077,1312,2.899,1315,5.467,1323,4.946,1338,2.899,1340,2.899,1347,2.899,1566,2.899,1567,4.946,1586,2.623,1597,2.899,1612,4.245,1631,2.899,1649,7.607,1650,6.644,1651,2.899,1652,4.977,1653,4.221,1654,4.832,1655,3.319,1656,3.319,1657,3.319,1658,3.319,1659,4.832,1660,3.319,1661,3.319,1662,3.319,1663,3.319,1664,3.319,1665,3.319,1666,2.899,1667,3.319,1668,4.832,1669,3.319,1670,4.221,1671,3.319,1672,3.319,1673,3.319,1674,3.319,1675,3.319,1676,3.319,1677,3.319,1678,3.319,1679,3.319,1680,3.319,1681,3.319,1682,3.319,1683,3.319,1684,3.319,1685,4.832,1686,3.319,1687,2.899,1688,3.319,1689,3.319,1690,3.319,1691,3.319,1692,3.319,1693,3.319,1694,3.319,1695,2.899]],["title/components/SelectionOfTheAreaComponent.html",[0,0.596,140,1.273]],["body/components/SelectionOfTheAreaComponent.html",[0,1.041,1,1.016,2,0.145,3,0.1,4,1.16,5,1.121,6,1.16,7,0.922,8,0.078,10,1.136,11,2.109,12,1.16,13,2.827,14,2.226,15,1.86,17,1.86,19,0.339,20,0.498,22,1.211,23,2.634,24,0.935,25,1.035,28,1.312,29,0.013,30,1.765,31,0.845,32,0.458,33,0.647,34,0.845,35,2.157,37,0.403,38,0.585,39,0.078,40,0.005,47,0.761,49,2.927,87,2.742,96,0.838,97,1.677,98,1.333,99,1.621,100,2.157,101,1.16,106,0.834,107,1.16,108,1.05,109,1.16,110,1.05,111,1.865,112,1.251,113,1.16,114,1.05,115,1.565,116,1.16,117,1.05,118,1.085,119,1.16,120,1.05,121,1.16,122,1.05,123,1.085,124,1.677,125,1.016,126,1.16,127,1.05,128,1.16,129,1.05,130,1.05,131,1.16,132,1.16,133,1.05,134,1.16,135,1.016,136,1.16,137,1.05,138,0.922,139,1.677,140,1.952,141,2.388,142,1.05,143,1.16,144,1.05,145,1.16,146,1.016,147,1.16,148,1.016,149,1.16,150,1.05,151,1.16,152,1.05,153,1.16,154,0.007,155,0.007,213,0.893,243,0.491,244,0.834,265,3.578,268,3.664,270,3.063,271,2.746,272,3.579,273,3.579,274,3.579,279,2.746,280,1.291,281,2.44,284,1.492,304,2.551,311,4.042,312,4.212,313,3.584,317,3.326,318,3.008,319,2.573,320,3.439,342,1.764,343,1.764,344,1.764,345,1.764,346,1.764,349,1.764,353,3.584,354,1.849,357,1.943,358,2.048,361,1.849,362,1.617,367,1.287,368,1.287,369,1.764,371,1.565,372,1.764,373,2.169,374,1.764,375,1.764,376,1.617,377,1.849,414,3.339,415,3.136,569,2.048,636,0.952,744,2.673,780,3.371,798,3.063,854,3.648,960,2.551,974,2.808,1080,2.037,1081,2.691,1087,2.975,1309,3.136,1389,2.479,1390,2.975,1548,5.006,1651,2.975,1652,5.051,1653,4.301,1696,7.652,1697,6.684,1698,3.406,1699,3.406,1700,3.406,1701,3.406,1702,3.406,1703,3.406,1704,3.406,1705,3.406,1706,3.406,1707,6.336,1708,6.309,1709,3.406,1710,3.406,1711,4.924,1712,3.406,1713,3.406,1714,3.406,1715,3.406,1716,3.406,1717,3.406,1718,3.406,1719,3.406,1720,3.406,1721,3.406,1722,3.406,1723,3.406,1724,4.924,1725,4.924,1726,4.924,1727,4.924,1728,4.301,1729,4.301]],["title/modules/SharedModule.html",[185,1.232,199,2.485]],["body/modules/SharedModule.html",[2,0.188,3,0.147,8,0.115,28,0.833,29,0.013,37,0.448,38,0.862,39,0.17,40,0.007,96,1.234,120,2.572,127,2.594,130,2.594,154,0.009,155,0.009,185,1.912,187,2.486,188,3.836,189,2.724,190,2.809,199,5.143,201,3.045,202,1.121,203,2.599,205,3.502,246,2.724,252,4.668,290,3.403,296,4.349,354,2.724,379,1.195,559,1.157,1025,3.965,1430,5.286,1612,3.403,1730,4.383,1731,4.383,1732,4.383,1733,4.383,1734,4.383,1735,6.413,1736,6.413,1737,5.601,1738,4.383,1739,5.601,1740,4.383,1741,5.601,1742,5.601,1743,5.601,1744,4.383,1745,4.383,1746,5.018,1747,5.018,1748,4.383,1749,4.383,1750,3.965,1751,5.018]],["title/interfaces/Simulation.html",[45,1.232,287,0.734]],["body/interfaces/Simulation.html",[2,0.171,3,0.171,8,0.133,19,0.311,20,0.711,29,0.013,31,1.441,32,0.546,39,0.173,45,2.485,47,1.824,154,0.01,155,0.01,287,1.394,335,1.297,513,2.123,537,3.707,567,3.5,648,3.846,649,4.599,650,3.707,651,4.599,652,4.599,653,5.323,654,4.237,655,3.947,656,4.237,657,4.769,658,3.339,659,5.714]],["title/classes/SimulationChanged.html",[40,0.006,1511,2.485]],["body/classes/SimulationChanged.html",[2,0.151,3,0.151,8,0.118,10,1.789,19,0.275,20,0.66,24,0.978,25,0.923,29,0.013,32,0.612,33,0.978,34,0.884,37,0.349,39,0.181,40,0.011,45,2.485,106,0.742,112,1.41,154,0.01,155,0.01,202,1.68,213,1.35,243,0.742,244,0.742,280,2.11,295,1.394,335,1.361,559,1.878,600,3.097,603,1.814,606,2.668,636,1.44,638,3.28,639,3.712,640,3.28,773,4.522,1133,3.927,1134,2.552,1138,2.091,1146,3.571,1507,4.302,1508,3.28,1511,4.522,1512,4.302,1513,2.796,1514,4.422,1515,3.493,1516,3.28,1752,6.52,1753,5.151]],["title/components/SimulationComponent.html",[0,0.596,142,1.273]],["body/components/SimulationComponent.html",[0,0.995,1,0.88,2,0.13,3,0.087,4,1.005,5,0.972,6,1.005,7,0.799,8,0.068,10,1.022,11,1.94,12,1.005,13,2.781,14,2.126,15,1.674,17,1.674,19,0.316,20,0.448,22,1.089,23,2.517,24,0.841,25,1.05,28,1.227,29,0.013,30,1.749,31,1.289,32,0.55,33,0.841,34,0.761,37,0.395,38,0.507,39,0.068,40,0.004,45,2.206,49,2.681,71,1.775,73,1.462,74,1.602,75,1.244,77,1.462,82,1.462,86,1.115,87,2.605,92,1.929,95,2.578,96,0.726,97,1.509,98,1.199,99,1.459,100,2.013,101,1.005,106,0.852,107,1.005,108,0.909,109,1.005,110,0.909,111,1.812,112,0.958,113,1.005,114,0.909,115,1.486,116,1.005,117,0.909,118,0.94,119,1.005,120,0.909,121,1.005,122,0.909,123,0.94,124,1.509,125,0.88,126,1.005,127,0.909,128,1.005,129,0.909,130,0.909,131,1.005,132,1.005,133,0.909,134,1.005,135,0.88,136,1.005,137,0.909,138,0.799,139,1.509,140,0.909,141,1.365,142,1.822,143,1.005,144,0.909,145,1.005,146,0.88,147,1.005,148,0.88,149,1.005,150,0.909,151,1.005,152,0.909,153,1.005,154,0.006,155,0.006,165,2.405,168,2.002,172,1.529,182,2.664,184,1.005,213,0.774,226,1.244,243,0.639,244,0.639,265,3.448,268,3.517,270,2.888,271,2.526,272,3.419,273,3.419,274,3.419,279,2.526,280,1.161,281,2.195,284,1.293,295,1.6,304,2.295,311,3.81,312,4.001,317,3.159,318,2.807,335,1.142,342,1.529,343,1.529,344,1.529,345,1.529,346,1.529,349,1.529,354,1.602,357,1.683,367,1.115,368,1.115,369,1.529,371,1.44,372,1.529,373,1.88,374,1.529,375,1.529,399,4.339,414,3.005,415,2.822,417,2.332,418,2.332,420,2.148,422,2.002,466,2.148,550,3.555,552,4.671,553,4.671,555,5.257,556,5.812,561,3.501,562,3.87,565,2.664,567,2.664,569,1.775,574,3.87,599,2.148,605,2.578,606,1.529,607,3.87,608,3.87,636,0.825,648,3.235,657,3.005,658,2.104,659,4.843,785,2.405,788,3.209,807,3.612,895,3.372,1042,4.01,1120,2.332,1490,2.578,1491,2.578,1492,2.578,1513,3.439,1568,4.203,1587,2.332,1754,2.952,1755,5.319,1756,4.431,1757,5.812,1758,4.431,1759,2.952,1760,2.952,1761,2.952,1762,2.952,1763,2.952,1764,2.952,1765,2.952,1766,2.952,1767,2.952,1768,2.952,1769,2.952,1770,2.952,1771,2.952,1772,2.952,1773,2.578,1774,2.332,1775,6.336,1776,2.952,1777,4.431,1778,2.952,1779,2.952,1780,2.952,1781,2.952,1782,2.952,1783,2.952,1784,2.952,1785,2.952,1786,2.952,1787,2.952,1788,4.431,1789,2.952,1790,4.431,1791,4.431,1792,2.952,1793,2.952,1794,2.952,1795,4.431,1796,4.431,1797,4.431,1798,4.431,1799,4.431,1800,4.431,1801,4.431]],["title/classes/SimulationEnded.html",[40,0.006,1512,2.485]],["body/classes/SimulationEnded.html",[2,0.152,3,0.152,8,0.118,10,1.792,19,0.277,20,0.662,24,0.983,25,0.925,29,0.013,32,0.602,33,0.983,34,0.889,37,0.35,39,0.182,40,0.011,45,2.487,106,0.746,112,1.415,154,0.01,155,0.01,202,1.683,213,1.357,243,0.746,244,0.746,280,2.112,295,2.103,335,1.362,559,1.88,600,3.114,603,1.824,606,2.682,636,1.447,638,3.297,639,3.716,640,4.166,1133,3.932,1134,2.566,1138,2.103,1146,3.577,1507,4.313,1508,3.297,1511,4.313,1512,4.531,1513,2.811,1514,3.512,1515,3.512,1516,3.297,1802,6.542,1803,5.178]],["title/modules/SimulationModule.html",[185,1.232,200,2.802]],["body/modules/SimulationModule.html",[2,0.175,3,0.175,8,0.136,29,0.013,37,0.439,38,1.022,39,0.163,40,0.009,96,1.464,154,0.01,155,0.01,185,2.126,187,2.95,188,3.87,189,3.232,190,3.343,200,5.675,201,3.385,202,1.33,203,3.084,205,3.532,212,4.705,213,1.561,362,2.827,444,5.227,550,4.937,598,5.201,1422,3.693,1804,5.201,1805,5.201,1806,5.954,1807,5.954,1808,5.954]],["title/interfaces/SimulationState.html",[287,0.734,1809,2.802]],["body/interfaces/SimulationState.html",[2,0.164,3,0.164,8,0.127,19,0.298,20,0.693,29,0.013,32,0.402,37,0.396,39,0.192,45,2.513,154,0.01,155,0.01,213,1.46,267,1.661,287,1.216,379,1.924,599,4.055,606,3.547,636,2.288,1417,4.36,1422,2.886,1513,3.717,1809,5.552,1810,4.866,1811,7.413,1812,5.41,1813,4.866,1814,6.272,1815,6.385,1816,5.571,1817,4.866,1818,5.981,1819,4.866,1820,4.402,1821,4.866,1822,4.866,1823,4.866]],["title/interfaces/SimulationState-1.html",[184,1.175,287,0.613,1809,2.34]],["body/interfaces/SimulationState-1.html",[2,0.151,3,0.151,8,0.118,19,0.276,20,0.66,28,1.288,29,0.013,32,0.517,33,0.979,37,0.383,39,0.181,45,2.527,154,0.01,155,0.01,241,2.555,262,1.881,267,1.538,280,1.352,287,1.159,295,2.036,379,1.792,396,2.259,398,3.296,600,3.101,606,4.107,611,2.974,636,2.352,638,3.284,640,3.284,1138,2.094,1417,4.155,1418,4.075,1419,4.075,1422,2.672,1425,4.075,1513,4.303,1514,3.498,1515,3.498,1516,4.155,1809,5.652,1820,5.156,1824,4.075,1825,5.157,1826,4.505,1827,4.505,1828,6.526,1829,5.157,1830,5.157,1831,5.7,1832,5.7,1833,5.157,1834,4.505,1835,4.505,1836,4.505,1837,4.505]],["title/classes/Statistics.html",[40,0.006,435,2.485]],["body/classes/Statistics.html",[2,0.109,3,0.109,8,0.085,19,0.198,22,1.285,25,1.026,28,1.386,29,0.013,31,1.444,32,0.575,34,0.635,37,0.198,39,0.085,40,0.008,92,1.94,106,1.146,154,0.008,155,0.008,184,2.24,243,1.146,244,1.146,267,1.104,335,1.236,371,2.133,379,1.652,435,3.956,513,2.978,559,1.743,611,1.687,655,2.51,807,4.103,884,2.553,938,3.454,967,3.454,1025,6.748,1101,4.564,1236,4.128,1757,5.29,1838,3.701,1839,5.225,1840,5.225,1841,5.225,1842,5.225,1843,5.225,1844,5.225,1845,5.225,1846,5.225,1847,5.225,1848,5.225,1849,5.225,1850,5.225,1851,5.225,1852,5.225,1853,8.63,1854,3.701,1855,5.225,1856,3.701,1857,5.225,1858,3.701,1859,5.225,1860,3.701,1861,5.225,1862,3.701,1863,5.225,1864,3.701,1865,3.701,1866,3.701,1867,5.225,1868,3.701,1869,5.225,1870,3.701,1871,5.225,1872,3.701,1873,5.225,1874,3.701,1875,5.225,1876,3.701,1877,2.924,1878,5.225,1879,5.225,1880,5.225,1881,5.225,1882,6.579,1883,5.225,1884,5.225,1885,5.225,1886,5.225,1887,3.701,1888,3.701,1889,3.701,1890,3.701,1891,3.701,1892,3.701,1893,3.701,1894,3.701,1895,3.701,1896,3.701,1897,3.701]],["title/components/StatisticsComponent.html",[0,0.596,144,1.273]],["body/components/StatisticsComponent.html",[0,1.049,1,1.041,2,0.147,3,0.103,4,1.189,5,1.15,6,1.189,7,0.945,8,0.08,10,1.156,11,2.139,12,1.189,13,2.834,14,2.242,15,1.893,17,1.893,19,0.343,20,0.507,22,1.233,23,2.654,24,0.952,25,1.05,28,1.258,29,0.013,30,1.773,31,1.213,32,0.538,33,0.663,34,0.6,37,0.405,38,0.6,39,0.08,40,0.005,45,2.024,49,2.668,87,2.766,92,1.401,96,0.859,97,1.707,98,1.357,99,1.65,100,2.182,101,1.189,106,0.845,107,1.189,108,1.076,109,1.189,110,1.076,111,1.874,112,1.084,113,1.189,114,1.076,115,1.516,116,1.189,117,1.076,118,1.112,119,1.189,120,1.076,121,1.189,122,1.076,123,1.112,124,1.707,125,1.041,126,1.189,127,1.076,128,1.189,129,1.076,130,1.076,131,1.189,132,1.189,133,1.076,134,1.189,135,1.041,136,1.189,137,1.076,138,0.945,139,1.707,140,1.076,141,1.545,142,1.076,143,1.189,144,1.975,145,1.189,146,1.041,147,1.189,148,1.041,149,1.189,150,1.076,151,1.189,152,1.076,153,1.189,154,0.007,155,0.007,213,0.915,226,1.472,243,0.503,244,0.503,265,3.6,268,3.689,270,3.093,271,2.785,272,3.606,273,3.606,274,3.606,279,2.785,280,1.314,281,2.484,284,1.53,304,2.597,311,4.081,312,4.248,317,3.354,318,3.043,335,1.302,342,1.809,343,1.809,344,1.809,345,1.809,346,1.809,349,1.809,354,1.895,357,1.992,361,1.895,362,1.658,369,1.809,371,1.735,372,1.809,373,2.224,374,1.809,375,1.809,379,1.194,392,2.1,396,1.53,397,1.809,398,1.53,402,1.73,403,2.542,415,3.192,435,3.014,444,4.081,465,2.759,466,2.542,479,3.05,550,3.854,557,6.171,569,2.1,590,3.649,613,3.05,627,6.171,657,3.4,658,2.38,777,4.246,785,2.721,1568,4.634,1587,2.759,1774,2.759,1898,3.492,1899,5.864,1900,5.013,1901,7.064,1902,7.064,1903,5.013,1904,3.492,1905,3.492,1906,3.492,1907,3.492,1908,3.492,1909,3.492,1910,3.492,1911,3.492,1912,3.492,1913,3.492,1914,3.492,1915,3.492,1916,3.492,1917,3.492,1918,3.492,1919,3.492,1920,3.492,1921,3.492,1922,3.492,1923,3.961]],["title/interfaces/Step.html",[287,0.734,566,1.561]],["body/interfaces/Step.html",[2,0.18,3,0.18,8,0.14,19,0.327,20,0.733,29,0.013,32,0.442,39,0.177,47,1.878,154,0.011,155,0.011,267,1.826,284,3.175,287,1.371,379,1.458,566,3.12,650,3.899,723,3.899,1005,3.79,1080,2.72,1349,4.838]],["title/classes/StepChanged.html",[40,0.006,1140,2.357]],["body/classes/StepChanged.html",[2,0.144,3,0.144,8,0.112,10,1.806,19,0.374,20,0.64,24,0.933,25,0.903,29,0.013,31,1.202,32,0.611,33,0.933,34,0.844,37,0.338,39,0.182,40,0.011,106,0.709,111,1.864,112,1.063,115,1.098,154,0.009,155,0.009,202,1.651,213,1.289,243,0.709,244,0.709,280,2.115,295,1.331,335,1.4,559,1.88,566,3.047,603,1.732,636,1.374,639,3.715,773,4.445,812,1.619,1131,3.799,1132,2.956,1133,3.946,1134,2.436,1137,2.956,1138,1.996,1139,2.804,1140,4.216,1141,3.992,1142,3.992,1143,2.436,1144,3.131,1145,3.806,1146,3.631,1147,2.956,1148,2.956,1149,2.804,1150,2.956,1151,2.956,1924,6.329,1925,4.916]],["title/classes/StepError.html",[40,0.006,1141,2.357]],["body/classes/StepError.html",[2,0.145,3,0.145,8,0.113,10,1.808,19,0.375,20,0.642,24,0.938,25,0.905,29,0.013,31,1.205,32,0.602,33,0.938,34,0.848,37,0.339,39,0.182,40,0.011,106,0.712,111,1.867,112,1.069,115,1.104,154,0.009,155,0.009,202,1.654,213,1.295,243,0.712,244,0.712,280,2.117,295,1.337,335,1.437,559,1.882,566,3.051,603,1.741,636,1.381,639,3.718,812,1.627,1131,3.809,1132,2.971,1133,3.951,1134,2.448,1137,2.971,1138,2.006,1139,2.818,1140,4.002,1141,4.224,1142,4.002,1143,2.448,1144,3.147,1145,2.971,1146,3.637,1147,3.819,1148,2.971,1149,2.818,1150,2.971,1151,2.971,1926,6.35,1927,4.941]],["title/classes/StepPending.html",[40,0.006,1142,2.357]],["body/classes/StepPending.html",[2,0.144,3,0.144,8,0.112,10,1.803,19,0.373,20,0.638,24,0.929,25,0.901,29,0.013,31,1.199,32,0.601,33,0.929,34,0.84,37,0.337,39,0.182,40,0.011,106,0.705,111,1.862,112,1.058,115,1.093,154,0.009,155,0.009,202,1.648,213,1.282,243,0.705,244,0.705,280,2.113,295,2.067,335,1.435,559,1.878,566,3.044,603,1.723,636,1.367,639,3.712,812,1.61,1131,3.79,1132,2.942,1133,3.941,1134,2.424,1137,2.942,1138,1.986,1139,2.79,1140,3.983,1141,3.983,1142,4.208,1143,2.424,1144,3.115,1145,2.942,1146,3.626,1147,2.942,1148,3.794,1149,2.79,1150,2.942,1151,2.942,1928,6.309,1929,4.892]],["title/interfaces/Tag.html",[287,0.734,757,2.357]],["body/interfaces/Tag.html",[2,0.059,3,0.122,7,0.545,8,0.046,19,0.108,20,0.42,25,0.259,28,1.259,29,0.013,30,1.333,31,1.41,32,0.346,34,1.069,35,0.881,37,0.303,39,0.147,40,0.007,43,1.383,46,0.917,47,1.07,59,1.042,61,2.837,65,1.042,86,0.76,92,2.204,98,1.124,138,0.888,154,0.005,155,0.005,184,2.119,226,0.848,231,1.147,232,1.81,239,1.092,243,0.599,244,0.29,245,2.02,247,0.76,250,1.781,255,3.059,262,1.515,267,0.6,287,0.937,295,1.428,305,0.917,314,2.837,319,0.817,321,0.881,334,2.805,335,1.257,355,1.147,356,1.147,367,0.76,368,0.76,371,1.685,379,1.761,407,1.781,408,2.601,489,2.369,513,2.863,524,2.424,559,1.91,602,1.042,603,0.709,629,2.734,648,1.893,658,1.558,665,2.688,666,2.255,680,2.255,684,1.699,685,3.28,686,1.781,688,3.792,699,1.147,703,1.147,712,1.871,713,1.042,715,1.625,716,1.042,719,1.495,728,3.089,729,3.753,735,1.092,743,1.147,744,2.255,745,2.498,746,3.773,747,2.369,748,3.228,749,3.24,750,2.498,751,3.224,752,1.21,753,3.174,754,1.21,755,1.871,756,2.734,757,3.776,758,2.498,759,1.21,761,3.55,762,1.21,764,1.21,765,1.21,766,1.21,771,2.498,772,1.871,777,1.871,778,1.21,779,1.21,780,0.917,784,1.871,785,2.601,788,1.092,790,1.042,794,1.21,796,1.21,798,0.917,799,2.058,800,1.781,801,1.21,802,1.973,803,1.699,805,1.21,807,1.092,810,2.498,811,1.21,812,0.662,813,1.147,814,2.932,815,3.405,816,3.19,817,1.092,818,1.147,819,3.24,820,2.369,821,1.871,822,1.21,823,1.871,824,1.871,825,1.973,826,2.733,827,1.21,828,2.733,829,1.21,830,1.21,831,1.21,832,1.21,833,1.21,834,1.21,835,1.21,836,1.147,837,1.147,838,2.498,839,1.092,840,1.21,841,1.21,842,1.21,843,1.973,844,1.973,845,1.21,846,1.21,847,1.21,848,1.973,849,1.973,850,1.973,851,1.21,852,1.21,853,1.21,854,1.781,855,2.498,856,2.881,857,2.881,858,1.871,859,1.973,860,2.881,861,2.498,862,2.881,863,2.881,864,1.21,865,1.973,866,1.973,867,1.973,868,1.21,869,1.973,870,1.21,871,1.973,872,1.21,873,1.21,874,1.21,875,1.21,876,3.01,877,1.092,878,1.092,879,1.21,880,1.147,881,1.973,882,1.21,883,1.21,884,1.751,885,1.147,886,2.498,887,1.21,888,1.21,889,1.973,890,1.21,891,1.21,892,1.21,893,1.21,894,1.21,895,1.147,896,1.973,897,1.973,898,1.21,899,1.973,900,1.21,901,1.21,902,1.21,903,1.21,904,1.21,905,1.21,906,1.21,907,1.21,908,1.21,909,1.21,910,1.973,911,1.21,912,1.21,913,1.21,914,1.699,915,1.21,916,2.498,917,2.498,918,1.21,919,2.498,920,1.21,921,1.21,922,1.21,923,1.973,924,1.21,925,1.21,926,1.21,927,1.21,928,1.21,929,1.21,930,1.21,931,1.973,932,1.21,933,1.871,934,1.21,935,1.21,936,1.21,937,1.092,938,2.369,939,1.147,940,1.21,941,1.973,942,1.973,943,1.21,944,1.973,945,1.973,946,1.21,947,1.21,948,1.21,949,2.498,950,1.21,951,1.21,952,2.498,953,1.21,954,1.147,955,1.21,956,1.21,957,1.21,958,1.21,959,1.21,960,1.042,961,2.255,962,1.21,963,1.781,964,1.21,965,1.21,966,1.21,967,1.871,968,1.21,969,1.21,970,1.21,971,1.973,972,1.147,973,1.21,974,1.147,975,1.042,976,1.21,977,1.21,978,1.21,979,1.21,980,1.21,981,1.042,982,1.21,983,1.147,984,0.997,985,1.21,986,1.21,987,1.21,988,1.21,989,1.21,990,1.21,991,1.21,992,1.21,993,1.21,994,1.21,995,1.21,996,1.21,997,1.21,998,1.21,999,1.21,1000,1.147,1001,1.147,1002,1.21,1003,1.147,1004,1.147,1005,0.955,1006,1.21,1007,1.973,1008,1.21,1009,1.147,1010,1.21,1011,0.955,1012,1.092,1013,1.21,1014,1.21,1015,1.21,1016,1.21,1017,1.21,1018,1.21,1019,1.21,1020,1.21,1021,0.955,1022,1.21,1023,1.21]],["title/components/TermsComponent.html",[0,0.596,146,1.232]],["body/components/TermsComponent.html",[0,1.07,1,1.336,2,0.175,3,0.132,4,1.526,5,1.475,6,1.526,7,1.213,8,0.103,10,1.374,11,2.44,12,1.526,13,2.9,14,2.62,15,2.25,17,2.25,19,0.24,22,1.465,23,2.6,24,1.27,25,0.768,28,0.743,29,0.013,30,1.33,37,0.24,38,0.769,39,0.103,40,0.007,41,4.541,46,3.742,52,4.039,53,4.836,73,2.22,84,2.432,85,3.039,86,1.692,87,1.754,96,1.102,97,2.028,98,1.612,99,1.961,100,2.428,101,1.526,106,0.859,107,1.526,108,1.381,109,1.526,110,1.381,111,1.855,112,0.969,113,1.526,114,1.381,115,1.658,116,1.526,117,1.381,118,1.427,119,1.526,120,1.381,121,1.526,122,1.381,123,2.364,124,2.028,125,1.336,126,1.526,127,1.381,128,1.526,129,1.381,130,1.381,131,1.526,132,1.526,133,1.381,134,1.526,135,1.336,136,1.526,137,1.381,138,1.213,139,2.028,140,1.381,141,1.381,142,1.381,143,1.526,144,1.381,145,1.526,146,2.127,147,1.526,148,1.336,149,1.526,150,1.381,151,1.526,152,1.381,153,1.526,154,0.009,155,0.009,165,2.432,174,2.555,259,4.336,263,5.19,264,6.634,377,4.39,798,2.042,1080,2.098,1322,4.336,1389,4.336,1522,6.228,1524,4.336,1547,5.203,1550,3.261,1551,3.914,1930,4.481,1931,6.691,1932,5.956,1933,4.481,1934,4.481,1935,5.956,1936,5.956,1937,5.956,1938,5.956,1939,5.956,1940,5.956,1941,4.481,1942,4.481]],["title/components/UiComponent.html",[0,0.596,148,1.232]],["body/components/UiComponent.html",[0,0.913,1,0.879,2,0.156,3,0.087,4,1.003,5,0.97,6,1.003,7,0.798,8,0.067,10,1.021,11,1.938,12,1.003,13,2.781,14,2.236,15,1.672,17,1.672,19,0.237,20,0.448,22,1.088,23,2.154,24,0.84,25,0.992,28,1.204,29,0.013,30,1.651,31,0.506,32,0.513,33,1.202,34,1.087,37,0.407,38,0.506,39,0.067,40,0.004,47,1.319,49,1.113,70,1.999,73,2.193,74,2.402,75,2.24,77,2.927,82,2.927,83,3.868,86,2.231,92,0.824,93,3.604,94,2.818,96,0.725,97,1.507,98,1.198,99,1.457,100,2.011,101,1.003,106,0.913,107,1.003,108,0.908,109,1.003,110,0.908,111,1.643,112,0.637,113,1.003,114,0.908,115,1.585,116,1.003,117,0.908,118,0.939,119,1.003,120,0.908,121,1.003,122,0.908,123,0.939,124,1.507,125,0.879,126,1.003,127,1.364,128,1.003,129,0.908,130,1.364,131,1.003,132,1.003,133,0.908,134,1.003,135,0.879,136,1.003,137,0.908,138,0.798,139,1.507,140,0.908,141,1.364,142,0.908,143,1.003,144,0.908,145,1.003,146,0.879,147,1.003,148,1.762,149,1.003,150,0.908,151,1.003,152,0.908,153,1.003,154,0.006,155,0.006,160,2.818,161,2.329,163,2.145,165,2.885,167,3.868,172,1.527,174,3.031,177,4.3,180,3.866,202,1.541,213,0.773,232,2.605,243,0.766,244,0.766,245,2.669,246,1.6,247,1.113,262,2.647,269,4.199,270,3.369,271,2.805,280,0.773,285,2.329,286,2.329,288,3.868,290,1.999,292,4.3,295,2.149,317,3.275,319,2.7,335,1.184,361,1.6,362,1.399,371,1.8,379,0.702,392,1.772,396,1.291,397,1.527,398,2.328,399,1.681,402,2.633,422,3.001,435,3.999,477,2.145,478,4.642,531,2.145,597,2.145,636,1.237,729,1.6,751,1.527,812,1.945,854,1.6,858,3.611,1011,1.399,1012,3.61,1127,2.145,1143,3.516,1261,2.329,1276,2.574,1283,2.574,1288,5.809,1290,2.574,1298,1.772,1359,3.497,1360,3.497,1377,2.329,1382,1.999,1550,2.145,1561,3.762,1612,3.604,1748,2.574,1749,2.574,1750,2.329,1923,5.45,1943,2.947,1944,5.315,1945,4.426,1946,4.426,1947,4.426,1948,2.947,1949,5.809,1950,6.332,1951,6.332,1952,5.908,1953,5.315,1954,5.908,1955,4.642,1956,4.426,1957,2.947,1958,2.947,1959,2.947,1960,2.947,1961,4.426,1962,2.947,1963,4.426,1964,2.947,1965,2.947,1966,2.947,1967,2.947,1968,2.947,1969,2.947,1970,2.947,1971,2.574,1972,2.574,1973,2.947,1974,2.947,1975,2.947,1976,2.947,1977,2.947,1978,2.947,1979,2.947,1980,5.315,1981,5.315,1982,4.426,1983,4.426,1984,4.426,1985,2.947,1986,2.947,1987,5.315,1988,4.426,1989,2.947,1990,2.574,1991,2.947,1992,2.947,1993,4.426,1994,2.947,1995,2.947,1996,2.947,1997,2.947,1998,2.574,1999,2.947,2000,2.947,2001,4.426,2002,2.947,2003,2.947,2004,2.947,2005,2.947,2006,5.315,2007,2.947,2008,2.947,2009,4.426,2010,2.947,2011,2.947]],["title/modules/UiModule.html",[185,1.232,2012,3.008]],["body/modules/UiModule.html",[2,0.129,3,0.129,8,0.1,29,0.013,37,0.455,38,0.752,39,0.134,40,0.006,96,1.077,110,2.336,114,2.336,115,0.978,117,2.336,122,2.336,129,2.336,133,2.336,137,2.336,140,2.336,142,2.336,144,2.336,148,2.261,150,2.336,152,2.336,154,0.009,155,0.009,185,1.75,187,2.17,188,3.591,189,2.377,190,2.898,199,4.56,201,2.786,202,0.978,203,2.269,205,2.907,212,3.461,213,1.148,214,3.826,215,3.826,302,3.826,318,3.6,362,2.08,1055,3.826,1164,5.142,1422,3.039,1561,4.829,1585,3.826,1650,3.826,1697,3.826,1972,3.826,2012,6.303,2013,3.826,2014,3.826,2015,3.826,2016,3.826,2017,5.142,2018,4.38,2019,5.867,2020,5.867,2021,3.826,2022,3.826,2023,3.826,2024,3.826,2025,4.38,2026,4.38,2027,5.867,2028,4.38,2029,4.38,2030,4.38,2031,4.38,2032,4.38,2033,4.38,2034,4.38,2035,4.38,2036,4.38,2037,4.38,2038,4.38,2039,4.38,2040,4.38,2041,4.38,2042,4.38]],["title/modules/UiRoutingModule.html",[185,1.232,2017,2.802]],["body/modules/UiRoutingModule.html",[0,0.892,2,0.182,3,0.182,8,0.142,29,0.013,37,0.437,38,1.063,39,0.167,40,0.009,148,2.176,154,0.011,155,0.011,185,1.846,205,3.615,246,3.36,251,5.408,252,5.311,255,2.424,258,5.408,259,4.506,290,4.199,292,4.506,296,4.948,1750,4.892,1971,5.408,2017,4.948,2024,5.408,2043,5.408,2044,6.191]],["title/interfaces/UiState.html",[287,0.734,2045,3.265]],["body/interfaces/UiState.html",[2,0.149,3,0.149,8,0.116,19,0.272,20,0.654,29,0.013,32,0.467,37,0.4,39,0.194,111,1.881,115,1.135,154,0.009,155,0.009,213,1.332,267,1.516,287,1.329,379,1.953,397,2.633,566,2.827,636,2.325,780,2.317,812,2.129,1080,2.862,1143,3.204,1415,4.706,1417,4.117,1422,2.633,1426,4.016,1812,5.109,1813,4.44,1814,6.418,1815,6.48,2045,5.913,2046,4.44,2047,5.648,2048,7.111,2049,7.111,2050,5.083,2051,5.083,2052,5.083,2053,5.083,2054,4.44,2055,4.44,2056,6.211,2057,4.44,2058,5.24,2059,4.44,2060,4.44,2061,4.44,2062,4.44,2063,4.44,2064,4.44]],["title/components/WeatherComponent.html",[0,0.596,150,1.273]],["body/components/WeatherComponent.html",[0,1.026,1,0.969,2,0.14,3,0.095,4,1.107,5,1.07,6,1.107,7,0.88,8,0.074,10,1.097,11,2.053,12,1.107,13,2.812,14,2.249,15,1.797,17,1.797,19,0.174,20,0.481,22,1.17,23,2.596,24,0.903,25,1.05,28,1.311,29,0.013,30,1.818,31,0.558,32,0.527,33,1.069,34,0.967,35,1.424,37,0.39,38,0.558,39,0.074,40,0.005,49,2.603,63,4.098,77,2.358,78,2.069,82,1.61,83,2.365,87,2.698,92,0.908,96,0.799,97,1.62,98,1.288,99,1.567,100,2.11,101,1.107,106,0.951,107,1.107,108,1.001,109,1.107,110,1.001,111,1.695,112,1.029,113,1.107,114,1.001,115,1.59,116,1.107,117,1.001,118,1.035,119,1.107,120,1.001,121,1.107,122,1.001,123,1.035,124,1.62,125,0.969,126,1.107,127,1.001,128,1.107,129,1.001,130,1.001,131,1.107,132,1.107,133,1.001,134,1.107,135,0.969,136,1.107,137,1.001,138,0.88,139,1.62,140,1.001,141,1.466,142,1.001,143,1.107,144,1.001,145,1.107,146,0.969,147,1.107,148,0.969,149,1.107,150,1.909,151,1.107,152,1.001,153,1.107,154,0.007,155,0.007,165,2.583,172,1.683,182,4.144,213,0.852,243,0.811,244,0.811,265,3.536,267,2.055,268,3.617,270,3.006,271,2.673,272,3.527,273,3.527,274,3.527,279,2.673,280,1.247,281,2.358,284,1.424,304,2.465,317,3.38,319,2.286,320,3.364,321,3.198,322,3.727,335,1.279,342,1.683,343,1.683,344,1.683,345,1.683,346,1.683,349,1.683,358,1.954,359,2.568,361,1.764,362,1.543,363,4.2,364,2.839,368,1.227,369,1.683,371,1.785,372,1.683,374,1.683,375,1.683,379,1.133,392,1.954,396,1.424,397,1.683,398,2.466,402,2.789,419,2.365,425,4.448,437,4.896,442,2.568,443,5.016,531,2.365,611,1.481,1021,1.543,1187,4.448,1382,2.204,1550,3.464,2065,3.25,2066,5.63,2067,4.759,2068,6.197,2069,4.759,2070,6.197,2071,4.759,2072,5.63,2073,3.25,2074,4.759,2075,5.63,2076,4.759,2077,3.25,2078,4.759,2079,3.25,2080,3.25,2081,3.25,2082,3.25,2083,3.25,2084,4.759,2085,3.25,2086,3.25,2087,3.25,2088,3.25,2089,3.25,2090,2.839,2091,3.25,2092,3.25,2093,3.25,2094,4.759,2095,4.759,2096,4.759,2097,3.25,2098,6.596,2099,3.25,2100,3.25,2101,4.759,2102,3.25,2103,3.25,2104,3.25,2105,3.25,2106,3.25,2107,3.25,2108,4.759,2109,3.25]],["title/interfaces/WeatherConditions.html",[287,0.734,363,2.631]],["body/interfaces/WeatherConditions.html",[2,0.162,3,0.162,8,0.126,19,0.295,20,0.688,29,0.013,31,1.428,32,0.572,39,0.156,47,1.232,63,4.953,154,0.01,155,0.01,182,4.848,244,1.189,267,2.361,287,1.209,305,2.514,321,2.416,335,1.384,347,4.358,363,4.333,603,1.943,772,3.881,803,3.992,1400,4.358,2110,4.818,2111,6.089,2112,6.089,2113,7.706,2114,4.818,2115,4.818,2116,4.818,2117,4.818,2118,6.446,2119,4.818,2120,4.818,2121,4.818,2122,4.818,2123,4.818,2124,4.818,2125,5.831,2126,5.944,2127,5.377,2128,5.944]],["title/modules/WeatherModule.html",[185,1.232,1467,2.802]],["body/modules/WeatherModule.html",[2,0.182,3,0.182,8,0.142,29,0.013,37,0.415,38,1.065,39,0.167,40,0.009,96,1.525,154,0.011,155,0.011,185,2.178,187,3.072,188,3.964,189,3.366,190,3.401,201,3.468,202,1.385,203,3.212,205,3.618,322,4.982,1467,5.619,2129,5.416,2130,5.416,2131,6.201,2132,6.201]],["title/injectables/WeatherService.html",[293,1.618,322,2.485]],["body/injectables/WeatherService.html",[2,0.106,3,0.106,8,0.083,14,1.114,19,0.193,20,0.52,22,1.263,24,0.686,25,1.012,28,1.335,29,0.013,30,1.454,31,1.331,32,0.543,34,1.118,35,1.584,37,0.409,38,0.621,39,0.083,40,0.005,47,1.808,49,2.928,92,1.01,106,1.06,112,0.782,154,0.008,155,0.008,184,2.036,190,2.251,202,1.454,226,1.524,243,1.16,244,1.16,245,2.899,247,1.365,267,1.942,293,2.34,305,3.257,321,3.614,322,3.09,335,0.621,363,5.044,367,1.365,368,1.941,371,2.123,376,2.44,379,1.55,524,1.468,559,1.877,597,2.631,602,1.873,611,2.342,685,1.791,688,1.873,716,1.873,717,2.631,719,2.967,728,2.967,735,2.789,780,1.648,798,1.648,799,3.226,800,1.962,813,2.062,884,2.166,1039,4.488,1045,3.158,1048,4.06,1080,1.274,1268,3.158,1289,3.74,1301,3.915,1305,2.856,1567,4.724,1586,2.856,1629,4.488,1666,3.158,1708,6.242,1740,3.158,2090,3.158,2133,3.615,2134,7.752,2135,7.147,2136,5.139,2137,5.139,2138,5.139,2139,5.139,2140,5.978,2141,6.511,2142,5.139,2143,5.139,2144,3.615,2145,6.511,2146,5.139,2147,5.139,2148,3.615,2149,3.615,2150,3.615,2151,3.615,2152,3.158,2153,3.615,2154,3.615,2155,3.615,2156,3.615,2157,5.139,2158,3.615,2159,5.139,2160,5.139,2161,3.615,2162,5.139,2163,3.615,2164,5.139,2165,3.615,2166,4.06,2167,4.488,2168,5.139,2169,3.615,2170,5.139,2171,3.158,2172,3.615,2173,3.615,2174,3.615,2175,3.615,2176,3.615,2177,3.615,2178,3.615,2179,3.615,2180,3.615,2181,3.615,2182,3.615,2183,3.615,2184,3.615,2185,3.615,2186,3.615,2187,3.615,2188,5.139,2189,3.615,2190,3.615,2191,5.978,2192,3.615,2193,3.615,2194,3.615,2195,3.615,2196,3.615,2197,3.615,2198,3.615,2199,3.615,2200,3.158,2201,3.615]],["title/components/WizardComponent.html",[0,0.596,152,1.273]],["body/components/WizardComponent.html",[0,0.969,1,1.017,2,0.145,3,0.1,4,1.161,5,1.122,6,1.161,7,0.923,8,0.078,10,1.136,11,2.11,12,1.161,13,2.827,14,2.226,15,1.861,17,1.861,19,0.386,20,0.498,22,1.211,23,2.311,24,0.935,25,0.932,28,1.052,29,0.013,30,1.565,31,0.846,32,0.458,33,0.647,37,0.403,38,0.585,39,0.078,40,0.005,45,1.469,47,1.416,49,1.288,71,3.811,72,4.572,73,1.689,74,1.851,75,1.437,77,1.689,82,1.689,84,1.851,93,2.312,94,2.171,96,0.838,97,1.678,98,1.334,99,1.622,100,2.158,101,1.161,106,0.914,107,1.161,108,1.05,109,1.161,110,1.05,111,1.883,112,1.251,113,1.161,114,1.05,115,1.652,116,1.161,117,1.05,118,1.843,119,1.161,120,1.05,121,1.161,122,1.05,123,1.086,124,1.678,125,1.017,126,1.161,127,1.05,128,1.161,129,1.05,130,1.05,131,1.161,132,1.161,133,1.05,134,1.161,135,1.017,136,1.161,137,1.05,138,1.566,139,1.678,140,1.05,141,1.783,142,1.05,143,1.161,144,1.05,145,1.161,146,1.017,147,1.161,148,1.017,149,1.161,150,1.05,151,1.161,152,1.953,153,1.161,154,0.007,155,0.007,163,3.586,164,3.924,165,3.44,174,2.81,177,3.586,182,2.05,232,1.288,243,0.71,244,0.71,246,1.851,259,2.482,262,1.243,267,1.469,284,1.493,305,2.246,312,3.811,313,3.586,314,2.246,315,2.694,316,5.537,318,3.01,323,3.138,352,4.572,353,2.482,354,1.851,357,1.944,363,2.171,367,1.288,368,1.288,371,1.716,376,2.34,379,1.378,396,1.493,398,2.535,402,2.867,422,4.298,435,2.963,477,2.482,524,1.384,531,2.482,552,2.694,566,2.394,611,3.371,728,1.554,780,2.246,803,1.766,984,1.689,1005,1.619,1011,1.619,1021,1.619,1127,2.482,1149,4.121,1298,2.05,1309,4.036,1323,2.694,1359,3.893,1360,3.893,1377,2.694,1382,2.312,1389,2.482,1561,4.036,1923,5.008,1949,6.311,1955,5.054,1990,2.978,2111,2.694,2112,2.694,2202,3.409,2203,5.786,2204,4.927,2205,6.121,2206,6.338,2207,4.927,2208,6.338,2209,3.409,2210,3.409,2211,3.409,2212,4.927,2213,6.338,2214,3.409,2215,5.536,2216,4.927,2217,5.536,2218,4.927,2219,3.409,2220,3.409,2221,3.409,2222,3.409,2223,3.409,2224,3.409,2225,3.409,2226,4.304,2227,3.409,2228,3.409,2229,3.409,2230,7.397,2231,5.786,2232,6.723,2233,5.786,2234,3.409,2235,5.786,2236,5.054,2237,3.409,2238,3.409,2239,3.409,2240,3.409,2241,3.409,2242,3.409,2243,3.409,2244,3.409,2245,3.409,2246,3.409,2247,3.409,2248,3.409,2249,3.409,2250,3.409,2251,3.409,2252,3.409,2253,3.409,2254,4.927]],["title/injectables/WizardService.html",[293,1.618,318,1.962]],["body/injectables/WizardService.html",[2,0.128,3,0.128,8,0.099,19,0.434,20,0.59,22,1.435,24,0.825,25,1.037,28,1.283,29,0.013,30,1.846,31,1.366,32,0.597,37,0.404,38,0.746,39,0.099,40,0.006,47,1.69,106,1.059,115,0.971,141,1.339,154,0.009,155,0.009,202,1.573,213,1.139,232,1.641,243,1.059,244,1.059,262,1.585,293,2.579,317,3.592,318,2.771,335,1.299,361,2.359,362,2.063,559,1.972,566,2.204,569,2.613,611,1.981,636,2.115,637,6.751,639,3.448,717,3.163,812,1.921,1131,3.168,1137,2.613,1139,2.478,1145,2.613,1147,3.509,1148,3.509,1149,4.191,1150,2.613,1289,3.163,1298,2.613,1612,3.958,2058,4.983,2205,6.418,2217,6.152,2255,4.346,2256,5.836,2257,5.836,2258,7.044,2259,7.044,2260,5.836,2261,5.836,2262,5.836,2263,4.346,2264,5.836,2265,4.346,2266,5.836,2267,4.346,2268,4.346,2269,4.346,2270,4.346,2271,5.836,2272,4.346,2273,4.346,2274,4.346,2275,4.346,2276,4.346,2277,4.346,2278,4.346]],["title/interfaces/WizardState.html",[287,0.734,2058,2.802]],["body/interfaces/WizardState.html",[2,0.138,3,0.138,8,0.108,19,0.367,20,0.623,28,1.284,29,0.013,31,1.248,32,0.525,33,0.894,37,0.367,39,0.18,92,1.316,111,1.633,115,1.052,154,0.009,155,0.009,190,2.696,241,2.333,262,2.5,267,1.404,280,1.234,287,1.093,295,1.968,335,1.373,376,2.922,379,1.797,396,2.062,397,4.009,398,3.305,566,3.179,611,3.527,636,2.352,812,2.632,1137,2.831,1138,1.912,1139,2.685,1143,3.962,1145,2.831,1147,2.831,1148,2.831,1150,2.831,1151,3.701,1417,3.919,1418,3.72,1419,3.72,1422,2.439,1425,3.72,1831,5.375,2058,5.639,2279,3.72,2280,4.708,2281,4.113,2282,4.113,2283,6.154,2284,6.154,2285,6.154,2286,6.154,2287,4.708,2288,4.113,2289,4.113,2290,4.113,2291,4.113,2292,4.113,2293,4.113,2294,4.113,2295,4.113]],["title/dependencies.html",[187,2.462,2296,3.45]],["body/dependencies.html",[29,0.013,38,0.97,44,4.114,154,0.01,155,0.01,187,2.8,208,5.458,209,5.028,213,1.481,246,3.068,247,2.135,354,3.068,464,4.937,1245,4.937,1246,4.937,1298,3.399,1738,4.937,1744,4.937,1745,4.937,1998,4.937,2021,4.937,2022,4.937,2023,4.937,2297,5.652,2298,8.443,2299,5.652,2300,5.652,2301,5.652,2302,5.652,2303,6.908,2304,5.652,2305,6.908,2306,5.652,2307,7.771,2308,5.652,2309,5.652,2310,5.652,2311,5.652,2312,5.652,2313,5.652,2314,5.652,2315,5.652,2316,5.652,2317,5.652,2318,5.652,2319,5.652,2320,5.652,2321,5.652,2322,5.652,2323,5.652,2324,5.652,2325,4.937,2326,5.652,2327,6.908,2328,5.652,2329,5.652,2330,5.652,2331,5.652,2332,5.652,2333,5.652,2334,5.652,2335,5.652,2336,5.652,2337,5.652,2338,5.652]],["title/miscellaneous/enumerations.html",[2339,1.968,2340,4.341]],["body/miscellaneous/enumerations.html",[19,0.279,29,0.013,34,1.488,45,2.407,111,1.893,112,1.633,154,0.01,155,0.01,202,1.775,280,1.886,347,5.191,399,3.747,551,4.553,561,5.191,563,5.738,564,5.738,565,3.951,566,2.941,567,3.951,600,3.951,606,2.7,743,2.973,749,3.566,751,3.403,812,1.716,819,3.566,1080,2.661,1131,2.829,1132,3.135,1138,2.921,1139,3.747,1140,2.973,1141,2.973,1142,2.973,1143,2.583,1144,3.319,1350,3.535,1351,3.794,1355,4.782,1400,4.119,1507,3.135,1508,3.319,1511,3.135,1512,3.135,1513,2.829,2110,4.553,2114,4.553,2115,4.553,2116,4.553,2117,4.553,2118,6.284,2119,4.553,2120,4.553,2121,4.553,2122,4.553,2123,4.553,2124,4.553,2125,5.684,2126,5.738,2127,5.191,2128,5.738,2339,2.973,2340,4.553,2341,5.213,2342,4.553,2343,5.213,2344,4.553,2345,5.213,2346,4.553]],["title/miscellaneous/functions.html",[241,2.462,2339,1.968]],["body/miscellaneous/functions.html",[19,0.3,29,0.012,34,1.182,45,1.676,49,2.6,106,1.194,111,1.338,154,0.01,155,0.01,225,6.5,241,2.784,243,1.194,244,1.194,267,2.053,280,2.123,466,5.01,591,4.09,636,2.08,715,2.784,716,3.566,1024,4.44,1038,4.908,1040,6.012,1041,4.908,1042,3.811,1043,4.908,1047,4.908,1048,4.44,1049,4.908,1080,1.979,1138,3.022,1289,4.09,1416,4.44,1422,3.855,1423,4.908,1773,6.012,1774,5.439,1824,4.44,1827,4.908,2226,6.5,2279,4.44,2282,4.908,2339,3.205,2347,7.073,2348,6.883,2349,6.883,2350,4.908,2351,5.619,2352,6.883,2353,4.908,2354,6.883,2355,4.908,2356,5.619,2357,5.619,2358,5.619,2359,5.619,2360,6.883,2361,5.619]],["title/index.html",[19,0.184,565,2.075,719,1.573]],["body/index.html",[8,0.155,29,0.01,41,4.574,42,5.676,43,3.507,44,4.389,45,2.333,46,2.748,47,1.604,48,5.676,49,2.821,52,3.096,54,4.765,55,5.267,56,3.987,57,3.987,58,3.987,59,2.365,60,3.987,61,2.08,64,3.987,65,3.124,66,3.987,67,5.267,68,3.987,69,6.938,75,1.924,99,1.503,118,1.454,123,1.454,154,0.01,155,0.009,234,3.607,241,2.988,305,3.078,319,2.449,321,2.642,323,3.84,376,3.411,399,2.603,435,2.745,533,3.607,559,1.053,590,3.323,594,3.987,685,2.262,688,2.365,701,3.096,747,2.603,756,2.365,799,2.988,821,2.603,823,3.439,826,3.439,877,2.478,884,1.924,885,4.097,972,2.603,983,3.439,984,2.988,1005,2.863,1080,2.379,1105,3.987,1166,3.607,1311,3.987,1322,5.437,1417,2.907,1422,2.365,1524,3.323,1623,3.987,1626,6.524,1877,3.607,2166,3.607,2167,3.987,2362,4.565,2363,4.565,2364,4.565,2365,4.565,2366,5.267,2367,4.565,2368,4.565,2369,4.565,2370,4.565,2371,4.565,2372,6.03,2373,4.565,2374,4.565,2375,4.565,2376,4.565,2377,4.565,2378,4.565,2379,4.565,2380,4.565,2381,4.565,2382,4.565,2383,4.565,2384,4.565,2385,4.565,2386,4.565,2387,6.03,2388,4.565,2389,4.565,2390,4.565,2391,4.565,2392,4.565,2393,4.565,2394,4.565,2395,4.565,2396,4.565,2397,3.987,2398,4.565,2399,4.565,2400,4.565,2401,4.565,2402,4.565,2403,4.565,2404,4.565,2405,4.565,2406,4.565,2407,4.565,2408,6.03,2409,6.03,2410,4.565,2411,4.565,2412,4.565,2413,4.565,2414,4.565,2415,4.565,2416,4.565,2417,6.03,2418,4.565,2419,4.565,2420,4.565,2421,3.987,2422,4.565,2423,4.565,2424,4.565,2425,4.565,2426,4.565,2427,4.565,2428,4.565,2429,4.565,2430,4.565,2431,4.565,2432,4.565,2433,4.565,2434,4.565,2435,6.03,2436,4.565,2437,3.987,2438,4.565,2439,4.565,2440,4.565,2441,4.565,2442,4.565,2443,4.565,2444,4.565,2445,4.565,2446,4.565,2447,8.114,2448,4.565,2449,6.753,2450,6.03,2451,4.565,2452,4.565,2453,4.565,2454,6.03,2455,4.565,2456,4.565,2457,4.565,2458,4.565,2459,4.565,2460,4.565,2461,6.03,2462,4.565,2463,4.565,2464,4.565,2465,4.565,2466,4.565]],["title/license.html",[53,2.34,565,2.075,719,1.573]],["body/license.html",[8,0.133,29,0.01,46,3.205,52,3.947,53,3.947,65,3.015,102,5.971,103,4.599,104,4.599,154,0.01,155,0.01,164,3.947,190,2.55,203,3.015,280,1.526,305,2.653,784,3.32,824,3.32,877,3.159,1094,5.119,1523,6.143,1540,4.599,1575,5.084,1580,5.084,1687,6.143,2166,4.599,2215,5.084,2421,7.33,2437,6.601,2467,5.821,2468,5.821,2469,5.821,2470,5.821,2471,5.821,2472,7.85,2473,7.033,2474,5.821,2475,7.557,2476,5.821,2477,5.821,2478,5.821,2479,5.821,2480,5.821,2481,5.821,2482,5.821,2483,5.821,2484,5.821,2485,5.821,2486,5.821,2487,7.033,2488,7.033,2489,5.821,2490,5.821,2491,7.033,2492,5.821,2493,5.821,2494,5.821,2495,5.821,2496,5.821,2497,5.821,2498,5.821,2499,5.821,2500,5.821,2501,5.821,2502,5.821,2503,5.821,2504,5.821,2505,5.821,2506,5.821,2507,5.821,2508,5.821]],["title/modules.html",[185,1.682]],["body/modules.html",[29,0.011,154,0.011,155,0.011,185,1.846,186,4.506,195,4.199,196,4.199,197,4.199,198,4.199,199,3.723,200,4.199,209,6.132,884,3.27,1430,3.942,1467,4.199,1628,6.776,1695,7.358,2012,4.506,2017,4.199,2509,8.424,2510,8.544]],["title/overview.html",[2511,4.927]],["body/overview.html",[0,0.627,1,1.966,29,0.013,39,0.1,40,0.006,96,1.07,108,2.382,110,2.031,114,2.031,117,2.031,120,2.382,122,2.031,125,1.966,127,2.382,129,2.031,130,2.382,133,2.031,135,1.966,137,2.031,140,2.031,142,2.031,144,2.031,146,1.966,148,1.966,150,2.031,152,2.031,154,0.009,155,0.009,184,1.481,185,1.742,186,6.206,187,2.155,188,2.361,189,2.361,190,1.906,191,3.8,192,3.8,193,3.8,194,3.8,195,4.471,196,4.985,197,4.985,198,5.243,199,5.015,200,5.243,201,2.773,202,0.972,203,2.254,287,0.773,293,1.703,299,3.437,318,3.13,320,3.579,322,3.965,324,4.198,444,4.198,550,3.965,660,3.8,661,3.8,1164,4.471,1299,3.8,1300,3.8,1301,3.965,1430,4.923,1464,3.8,1465,3.8,1466,3.8,1467,4.985,1561,4.198,1730,3.8,1731,3.8,1732,3.8,1733,3.8,1804,3.8,1805,3.8,2012,6.292,2013,3.8,2014,3.8,2015,3.8,2016,3.8,2017,4.471,2129,3.8,2130,3.8,2236,3.8,2511,3.8,2512,4.35,2513,4.35,2514,4.35,2515,4.35]],["title/miscellaneous/typealiases.html",[2339,1.968,2516,4.97]],["body/miscellaneous/typealiases.html",[19,0.335,29,0.013,31,1.075,32,0.452,154,0.011,155,0.011,202,1.741,335,1.075,1024,4.947,1033,6.808,1131,3.398,1132,3.765,1140,3.571,1141,3.571,1142,3.571,1151,4.687,1350,4.246,1351,4.557,1357,5.673,1507,3.765,1508,3.987,1511,3.765,1512,3.765,1516,4.963,2339,3.571,2342,5.469,2344,5.469,2346,5.469,2347,5.469,2517,6.261]],["title/miscellaneous/variables.html",[2339,1.968,2518,4.341]],["body/miscellaneous/variables.html",[5,1.49,19,0.122,29,0.013,31,0.886,32,0.598,33,1.57,34,1.42,39,0.154,43,2.528,45,2.098,47,0.812,49,2.127,59,1.183,61,1.041,75,0.963,86,0.863,92,1.676,96,0.894,111,0.865,141,0.704,154,0.005,155,0.005,184,0.778,199,2.721,201,1.085,232,2.704,241,2.242,243,0.329,252,1.663,255,1.772,262,2.452,287,0.406,295,1.396,321,1.592,334,1.801,335,1.029,367,1.709,397,2.672,412,1.996,413,3.175,419,1.663,467,3.953,468,3.953,469,3.953,477,2.645,496,1.805,504,1.996,508,1.996,513,1.325,519,1.996,520,3.175,524,1.476,528,1.996,532,3.175,534,1.805,553,2.872,555,1.805,566,2.813,591,1.663,606,2.916,611,2.351,636,2.169,650,2.314,665,1.726,684,2.916,715,1.132,723,2.314,744,1.24,749,1.24,751,1.183,755,1.303,780,1.041,788,1.973,790,2.344,798,2.063,799,1.132,800,1.24,803,3.106,812,1.854,815,1.303,816,1.801,817,3.65,839,1.24,914,1.883,975,1.883,1003,1.303,1004,1.303,1005,1.085,1009,1.303,1011,1.726,1021,1.726,1042,1.549,1080,2.478,1094,2.645,1143,2.79,1180,4.577,1184,2.872,1247,3.953,1259,3.175,1261,2.872,1263,1.996,1264,1.996,1265,1.996,1305,2.872,1309,1.455,1349,1.805,1378,3.953,1382,1.549,1415,4.577,1416,1.805,1421,3.953,1422,3.106,1426,2.872,1429,3.953,1430,3.285,1431,1.996,1432,1.996,1433,1.996,1434,1.996,1436,1.996,1437,1.996,1438,1.996,1439,1.996,1440,1.996,1441,1.996,1442,1.996,1443,1.996,1444,1.996,1445,1.996,1446,1.996,1447,1.996,1448,1.996,1513,3.056,1536,1.996,1670,1.996,1728,1.996,1729,1.996,1734,1.996,1737,1.996,1739,1.996,1741,1.996,1742,1.996,1743,1.996,1809,4.855,1810,1.996,1812,4.076,1814,5.559,1815,6.316,1817,1.996,1818,4.505,1819,1.996,1820,2.872,1821,1.996,1822,1.996,1823,1.996,1824,1.805,1826,3.953,1832,1.996,1834,3.953,1835,3.953,1836,1.996,1837,3.953,1877,1.805,2043,1.996,2045,2.872,2046,1.996,2047,3.175,2054,1.996,2055,1.996,2056,4.918,2057,1.996,2058,4.929,2059,1.996,2060,1.996,2061,1.996,2062,1.996,2063,1.996,2064,1.996,2111,1.805,2112,1.805,2125,1.805,2127,1.805,2152,1.996,2171,5.237,2200,3.175,2279,1.805,2281,3.953,2288,3.953,2289,1.996,2290,3.953,2291,1.996,2292,3.953,2293,1.996,2294,3.953,2295,1.996,2325,3.175,2339,1.303,2350,3.175,2353,4.505,2355,4.918,2366,1.996,2397,3.953,2518,1.996,2519,4.526,2520,5.996,2521,7.448,2522,2.285,2523,2.285,2524,2.285,2525,2.285,2526,2.285,2527,2.285,2528,2.285,2529,3.634,2530,2.285,2531,7.159,2532,3.634,2533,3.634,2534,3.634,2535,3.634,2536,3.634,2537,4.526,2538,3.634,2539,3.634,2540,2.285,2541,2.285,2542,2.285,2543,3.634,2544,2.285,2545,2.285,2546,2.285,2547,4.526,2548,4.526,2549,4.526,2550,2.285,2551,3.634,2552,3.634,2553,5.158,2554,2.285,2555,2.285,2556,2.285,2557,3.634,2558,2.285,2559,2.285,2560,2.285,2561,3.634,2562,2.285,2563,2.285,2564,2.285,2565,2.285,2566,2.285,2567,5.158,2568,2.285,2569,3.634,2570,2.285,2571,5.158,2572,2.285,2573,2.285,2574,2.285,2575,2.285,2576,2.285,2577,2.285,2578,2.285,2579,2.285,2580,2.285,2581,2.285,2582,2.285,2583,2.285,2584,2.285,2585,2.285,2586,2.285,2587,2.285,2588,2.285,2589,2.285,2590,2.285,2591,2.285,2592,3.634,2593,2.285,2594,2.285,2595,2.285,2596,2.285,2597,2.285,2598,2.285,2599,2.285,2600,2.285,2601,2.285,2602,2.285,2603,2.285,2604,4.526,2605,2.285,2606,3.634,2607,2.285,2608,2.285,2609,2.285,2610,2.285,2611,2.285,2612,2.285,2613,3.634,2614,2.285,2615,2.285,2616,2.285,2617,2.285,2618,2.285,2619,2.285,2620,2.285,2621,2.285,2622,2.285,2623,2.285,2624,3.634,2625,2.285,2626,2.285,2627,2.285,2628,2.285,2629,2.285,2630,2.285,2631,2.285,2632,2.285]]],"invertedIndex":[["",{"_index":29,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"interfaces/SimulationState.html":{},"interfaces/SimulationState-1.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":92,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"components/SimulationComponent.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["0.0.3",{"_index":2321,"title":{},"body":{"dependencies.html":{}}}],["0.009",{"_index":2610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.05em",{"_index":1280,"title":{},"body":{"components/HomeComponent.html":{}}}],["0.15em",{"_index":1281,"title":{},"body":{"components/HomeComponent.html":{}}}],["0.1em",{"_index":1279,"title":{},"body":{"components/HomeComponent.html":{}}}],["0.25",{"_index":2626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.3",{"_index":1260,"title":{},"body":{"components/HomeComponent.html":{}}}],["0.4",{"_index":2004,"title":{},"body":{"components/UiComponent.html":{}}}],["0.404",{"_index":2611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.5",{"_index":1267,"title":{},"body":{"components/HomeComponent.html":{}}}],["0.5.7",{"_index":2326,"title":{},"body":{"dependencies.html":{}}}],["0.75",{"_index":2628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.8.26",{"_index":2338,"title":{},"body":{"dependencies.html":{}}}],["0.91",{"_index":2609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["00",{"_index":1052,"title":{},"body":{"classes/EnumValues.html":{}}}],["004ba0",{"_index":2601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["01d",{"_index":2615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["02d",{"_index":2616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["03d",{"_index":2617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["04d",{"_index":2618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["09d",{"_index":2619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0m",{"_index":2565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":184,"title":{"classes/Reset-1.html":{},"interfaces/SimulationState-1.html":{}},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"components/SimulationComponent.html":{},"classes/Statistics.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.1.0",{"_index":2319,"title":{},"body":{"dependencies.html":{}}}],["1.455",{"_index":2612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10",{"_index":2200,"title":{},"body":{"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":1011,"title":{},"body":{"classes/Edge.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["1000",{"_index":1039,"title":{},"body":{"classes/EnumValues.html":{},"injectables/WeatherService.html":{}}}],["1000)).slice",{"_index":1053,"title":{},"body":{"classes/EnumValues.html":{}}}],["10000",{"_index":2604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10d",{"_index":2620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11",{"_index":2512,"title":{},"body":{"overview.html":{}}}],["11d",{"_index":2621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.476358",{"_index":2577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12px",{"_index":1127,"title":{},"body":{"components/FooterComponent.html":{},"components/NumericComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["13",{"_index":1528,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["13d",{"_index":2622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14px",{"_index":83,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{}}}],["16",{"_index":1406,"title":{},"body":{"components/MapComponent.html":{}}}],["16px",{"_index":72,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"components/WizardComponent.html":{}}}],["17",{"_index":2515,"title":{},"body":{"overview.html":{}}}],["18",{"_index":1381,"title":{},"body":{"components/MapComponent.html":{}}}],["196/2003",{"_index":1531,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["1976d2",{"_index":2602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1]).patchvalu",{"_index":1117,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["1].destin",{"_index":1097,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["1].edg",{"_index":991,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["2",{"_index":524,"title":{"classes/Reset-2.html":{}},"body":{"components/ChartsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["2.0.8",{"_index":2330,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":2331,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":2328,"title":{},"body":{"dependencies.html":{}}}],["2.5.7",{"_index":2335,"title":{},"body":{"dependencies.html":{}}}],["2.54",{"_index":2201,"title":{},"body":{"injectables/WeatherService.html":{}}}],["2.7.3",{"_index":2322,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":2592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2016/679",{"_index":1534,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["2018",{"_index":2468,"title":{},"body":{"license.html":{}}}],["20px",{"_index":423,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{}}}],["21",{"_index":2513,"title":{},"body":{"overview.html":{}}}],["23",{"_index":2514,"title":{},"body":{"overview.html":{}}}],["24",{"_index":1728,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{},"miscellaneous/variables.html":{}}}],["24px",{"_index":95,"title":{},"body":{"components/AboutComponent.html":{},"components/SimulationComponent.html":{}}}],["250px",{"_index":1995,"title":{},"body":{"components/UiComponent.html":{}}}],["2px",{"_index":1130,"title":{},"body":{"components/FooterComponent.html":{}}}],["3",{"_index":1021,"title":{},"body":{"classes/Edge.html":{},"classes/EnumValues.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["3.6",{"_index":859,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["30",{"_index":2581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["30vh",{"_index":1285,"title":{},"body":{"components/HomeComponent.html":{}}}],["32px",{"_index":173,"title":{},"body":{"components/AppComponent.html":{}}}],["36px",{"_index":1505,"title":{},"body":{"components/NumericComponent.html":{}}}],["4",{"_index":1382,"title":{},"body":{"components/MapComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["40",{"_index":2545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["41.910943",{"_index":2576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["48px",{"_index":1120,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/SimulationComponent.html":{}}}],["4px",{"_index":418,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SimulationComponent.html":{}}}],["5",{"_index":477,"title":{},"body":{"components/ChartsComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["5.1.5",{"_index":2314,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":858,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{}}}],["500",{"_index":419,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/WeatherComponent.html":{},"miscellaneous/variables.html":{}}}],["5000",{"_index":1992,"title":{},"body":{"components/UiComponent.html":{}}}],["50d",{"_index":2623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["50px",{"_index":2109,"title":{},"body":{"components/WeatherComponent.html":{}}}],["5em",{"_index":1274,"title":{},"body":{"components/HomeComponent.html":{}}}],["5px",{"_index":1282,"title":{},"body":{"components/HomeComponent.html":{}}}],["6.0.1",{"_index":2307,"title":{},"body":{"dependencies.html":{}}}],["6.0.2",{"_index":2316,"title":{},"body":{"dependencies.html":{}}}],["6.1.2",{"_index":2305,"title":{},"body":{"dependencies.html":{}}}],["6.1.4",{"_index":2309,"title":{},"body":{"dependencies.html":{}}}],["6.3.3",{"_index":2336,"title":{},"body":{"dependencies.html":{}}}],["6.5.2",{"_index":2333,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1045,"title":{},"body":{"classes/EnumValues.html":{},"injectables/WeatherService.html":{}}}],["60)).slice",{"_index":1046,"title":{},"body":{"classes/EnumValues.html":{}}}],["600px",{"_index":1551,"title":{},"body":{"components/PrivacyComponent.html":{},"components/TermsComponent.html":{}}}],["63a4ff",{"_index":2543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["64px",{"_index":421,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["666",{"_index":522,"title":{},"body":{"components/ChartsComponent.html":{}}}],["7.0.0",{"_index":2303,"title":{},"body":{"dependencies.html":{}}}],["7.0.4",{"_index":2298,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":1265,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["700",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["70vh",{"_index":1414,"title":{},"body":{"components/MapComponent.html":{}}}],["76d219",{"_index":2586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["840",{"_index":1269,"title":{},"body":{"components/HomeComponent.html":{}}}],["8px",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["9",{"_index":2236,"title":{},"body":{"components/WizardComponent.html":{},"overview.html":{}}}],["900",{"_index":1273,"title":{},"body":{"components/HomeComponent.html":{}}}],["90px",{"_index":2000,"title":{},"body":{"components/UiComponent.html":{}}}],["9999",{"_index":1999,"title":{},"body":{"components/UiComponent.html":{}}}],["abil",{"_index":2398,"title":{},"body":{"index.html":{}}}],["about'},{'nam",{"_index":107,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["about.component.html",{"_index":18,"title":{},"body":{"components/AboutComponent.html":{}}}],["about.component.scss",{"_index":16,"title":{},"body":{"components/AboutComponent.html":{}}}],["about/about.compon",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["aboutcompon",{"_index":1,"title":{"components/AboutComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["abov",{"_index":2486,"title":{},"body":{"license.html":{}}}],["absolut",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/UiComponent.html":{}}}],["abstract",{"_index":268,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["abstractcontrol",{"_index":332,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["accept",{"_index":1936,"title":{},"body":{"components/TermsComponent.html":{}}}],["accessor",{"_index":313,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WizardComponent.html":{}}}],["accid",{"_index":2419,"title":{},"body":{"index.html":{}}}],["accordion",{"_index":2010,"title":{},"body":{"components/UiComponent.html":{}}}],["account",{"_index":779,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["acquir",{"_index":1541,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["action",{"_index":280,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"components/NumericComponent.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"interfaces/SimulationState-1.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["action.payload",{"_index":1831,"title":{},"body":{"interfaces/SimulationState-1.html":{},"interfaces/WizardState.html":{}}}],["action.payload.map",{"_index":1427,"title":{},"body":{"interfaces/MapState.html":{}}}],["action.payload.nextindex",{"_index":2287,"title":{},"body":{"interfaces/WizardState.html":{}}}],["action.payload.simul",{"_index":1829,"title":{},"body":{"interfaces/SimulationState-1.html":{}}}],["action.payload.step",{"_index":2285,"title":{},"body":{"interfaces/WizardState.html":{}}}],["action.typ",{"_index":1425,"title":{},"body":{"interfaces/MapState.html":{},"interfaces/SimulationState-1.html":{},"interfaces/WizardState.html":{}}}],["actionreducermap",{"_index":1812,"title":{},"body":{"interfaces/SimulationState.html":{},"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["actions/map.act",{"_index":1420,"title":{},"body":{"interfaces/MapState.html":{}}}],["actions/simulation.act",{"_index":1825,"title":{},"body":{"interfaces/SimulationState-1.html":{}}}],["actions/wizard.act",{"_index":2280,"title":{},"body":{"interfaces/WizardState.html":{}}}],["activ",{"_index":2387,"title":{},"body":{"index.html":{}}}],["actual_compon",{"_index":153,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["add",{"_index":1103,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/HomeComponent.html":{}}}],["adddestin",{"_index":1059,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["adddestination(control",{"_index":1066,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["addedge(edg",{"_index":911,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["addorigin",{"_index":1060,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["addorigin(control",{"_index":1068,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["addorupdatenode(nod",{"_index":898,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["address",{"_index":1323,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{},"components/WizardComponent.html":{}}}],["addweathercondit",{"_index":2137,"title":{},"body":{"injectables/WeatherService.html":{}}}],["addweatherconditions(data",{"_index":2148,"title":{},"body":{"injectables/WeatherService.html":{}}}],["adjust",{"_index":800,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["adjustmentfactorcoeffici",{"_index":2152,"title":{},"body":{"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["administr",{"_index":2568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["adopt",{"_index":2430,"title":{},"body":{"index.html":{}}}],["afterdatasetsdraw",{"_index":2542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["afterviewinit",{"_index":425,"title":{},"body":{"components/ChartsComponent.html":{},"components/HomeComponent.html":{},"components/WeatherComponent.html":{}}}],["ag",{"_index":2407,"title":{},"body":{"index.html":{}}}],["again",{"_index":1616,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["algorithm",{"_index":952,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["alias",{"_index":2517,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":74,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/SimulationComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["allow",{"_index":2422,"title":{},"body":{"index.html":{}}}],["alreadi",{"_index":1111,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["altern",{"_index":982,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["although",{"_index":2412,"title":{},"body":{"index.html":{}}}],["analysi",{"_index":2606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["analyz",{"_index":2423,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":2481,"title":{},"body":{"license.html":{}}}],["angular",{"_index":67,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["angular/anim",{"_index":2297,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2302,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/stepp",{"_index":2224,"title":{},"body":{"components/WizardComponent.html":{}}}],["angular/cli",{"_index":2451,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":1738,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":1740,"title":{},"body":{"modules/SharedModule.html":{},"injectables/WeatherService.html":{}}}],["angular/compil",{"_index":2299,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":38,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"modules/MaterialModule.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":1744,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/form",{"_index":354,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WizardComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":2300,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":1298,"title":{},"body":{"components/InfoDialogComponent.html":{},"modules/MaterialModule.html":{},"components/MessageArchivedComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":246,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{},"modules/SharedModule.html":{},"components/UiComponent.html":{},"modules/UiRoutingModule.html":{},"components/WizardComponent.html":{},"dependencies.html":{}}}],["anim",{"_index":1245,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{}}}],["animate('500m",{"_index":2564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animationtriggermetadata",{"_index":2561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["anime.timelin",{"_index":1256,"title":{},"body":{"components/HomeComponent.html":{}}}],["animej",{"_index":1246,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{}}}],["annot",{"_index":2325,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["anoth",{"_index":1619,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["api",{"_index":1322,"title":{},"body":{"injectables/LocationService.html":{},"components/PrivacyComponent.html":{},"components/TermsComponent.html":{},"index.html":{}}}],["app",{"_index":14,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{}}}],["app.compon",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["app_initi",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":108,"title":{"components/AppComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["appconfig",{"_index":2090,"title":{},"body":{"components/WeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["appconfig.apis.openweathermap.apikey",{"_index":2181,"title":{},"body":{"injectables/WeatherService.html":{}}}],["appconfig.apis.openweathermap.forecasturl",{"_index":2172,"title":{},"body":{"injectables/WeatherService.html":{}}}],["appconfig.apis.openweathermap.iconurl",{"_index":2106,"title":{},"body":{"components/WeatherComponent.html":{}}}],["appconfig.apis.openweathermap.weatherurl",{"_index":2173,"title":{},"body":{"injectables/WeatherService.html":{}}}],["appconfig.firebase.projectid",{"_index":2553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appli",{"_index":1183,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["applic",{"_index":1524,"title":{},"body":{"components/PrivacyComponent.html":{},"injectables/SchedulerService.html":{},"components/TermsComponent.html":{},"index.html":{}}}],["appmodul",{"_index":186,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppreloadingstrategi",{"_index":233,"title":{"classes/AppPreloadingStrategy.html":{}},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{}}}],["approutingmodul",{"_index":195,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["architectur",{"_index":2445,"title":{},"body":{"index.html":{}}}],["archived.compon",{"_index":1748,"title":{},"body":{"modules/SharedModule.html":{},"components/UiComponent.html":{}}}],["archived.component.t",{"_index":1456,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["archived.component.ts:11",{"_index":1459,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["archived.component.ts:13",{"_index":1461,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["area",{"_index":1309,"title":{},"body":{"injectables/LocationService.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["area'},{'nam",{"_index":139,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["area.compon",{"_index":2027,"title":{},"body":{"modules/UiModule.html":{}}}],["area.component.html",{"_index":1653,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.scss",{"_index":1652,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.t",{"_index":1651,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:16",{"_index":1655,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:18",{"_index":1654,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:21",{"_index":1699,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:23",{"_index":1700,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:27",{"_index":1657,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:28",{"_index":1706,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:33",{"_index":1662,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:35",{"_index":1710,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:42",{"_index":1658,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:43",{"_index":1698,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:46",{"_index":1661,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:50",{"_index":1660,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:53",{"_index":1701,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:59",{"_index":1704,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:73",{"_index":1702,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:78",{"_index":1656,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:81",{"_index":1703,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area/search",{"_index":1650,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"modules/UiModule.html":{}}}],["area/select",{"_index":1697,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{},"modules/UiModule.html":{}}}],["areamaxlimit",{"_index":2580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["areaminlimit",{"_index":2582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["argmin",{"_index":668,"title":{},"body":{"injectables/DemandService.html":{}}}],["argmin(linkflow",{"_index":679,"title":{},"body":{"injectables/DemandService.html":{}}}],["argument",{"_index":683,"title":{},"body":{"injectables/DemandService.html":{}}}],["aris",{"_index":2508,"title":{},"body":{"license.html":{}}}],["array",{"_index":704,"title":{},"body":{"injectables/DemandService.html":{}}}],["array(this.odmatrix.length).fill(0",{"_index":725,"title":{},"body":{"injectables/DemandService.html":{}}}],["arriv",{"_index":1800,"title":{},"body":{"components/SimulationComponent.html":{}}}],["arrivedvehicl",{"_index":651,"title":{},"body":{"interfaces/Counts.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{}}}],["art",{"_index":1527,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["assign",{"_index":686,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{}}}],["assignmentmatrix",{"_index":699,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["assignmentmatrix[z",{"_index":731,"title":{},"body":{"injectables/DemandService.html":{}}}],["associ",{"_index":1580,"title":{},"body":{"injectables/SchedulerService.html":{},"license.html":{}}}],["attach",{"_index":825,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["attract",{"_index":2399,"title":{},"body":{"index.html":{}}}],["attribut",{"_index":821,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"index.html":{}}}],["author",{"_index":2498,"title":{},"body":{"license.html":{}}}],["automobil",{"_index":2406,"title":{},"body":{"index.html":{}}}],["avail",{"_index":1628,"title":{},"body":{"injectables/SchedulerService.html":{},"modules.html":{}}}],["averag",{"_index":2379,"title":{},"body":{"index.html":{}}}],["avg",{"_index":657,"title":{},"body":{"interfaces/Counts.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{}}}],["avgspe",{"_index":659,"title":{},"body":{"interfaces/Counts.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{},"components/SimulationComponent.html":{}}}],["axi",{"_index":520,"title":{},"body":{"components/ChartsComponent.html":{},"miscellaneous/variables.html":{}}}],["b",{"_index":1017,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["babdb",{"_index":2584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bachelor'",{"_index":57,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["bachelor\\'",{"_index":105,"title":{},"body":{"components/AboutComponent.html":{}}}],["background",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/HomeComponent.html":{},"components/SimulationComponent.html":{}}}],["backgroundcolor",{"_index":525,"title":{},"body":{"components/ChartsComponent.html":{}}}],["bar",{"_index":1457,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["bar'},{'nam",{"_index":132,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["base",{"_index":735,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{}}}],["basecolor",{"_index":2583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basecompon",{"_index":265,"title":{"classes/BaseComponent.html":{}},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["basecomponent:11",{"_index":343,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["basecomponent:13",{"_index":342,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["basecomponent:22",{"_index":346,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["basecomponent:27",{"_index":344,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["basecomponent:32",{"_index":345,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["basecomponent:9",{"_index":349,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["basictimelin",{"_index":1255,"title":{},"body":{"components/HomeComponent.html":{}}}],["becom",{"_index":1623,"title":{},"body":{"injectables/SchedulerService.html":{},"index.html":{}}}],["befor",{"_index":972,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"index.html":{}}}],["beginatzero",{"_index":2538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["belong",{"_index":708,"title":{},"body":{"injectables/DemandService.html":{}}}],["best",{"_index":2427,"title":{},"body":{"index.html":{}}}],["beta.19",{"_index":2304,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":744,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["beyond",{"_index":2378,"title":{},"body":{"index.html":{}}}],["bf",{"_index":968,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["block",{"_index":1278,"title":{},"body":{"components/HomeComponent.html":{}}}],["blur",{"_index":2241,"title":{},"body":{"components/WizardComponent.html":{}}}],["bold",{"_index":79,"title":{},"body":{"components/AboutComponent.html":{}}}],["boolean",{"_index":295,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/Reset-2.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"interfaces/SimulationState-1.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["bordercolor",{"_index":498,"title":{},"body":{"components/ChartsComponent.html":{}}}],["borderwidth",{"_index":523,"title":{},"body":{"components/ChartsComponent.html":{}}}],["bottom",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["bound",{"_index":1389,"title":{},"body":{"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/TermsComponent.html":{},"components/WizardComponent.html":{}}}],["breadth",{"_index":966,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["break",{"_index":402,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["broken",{"_index":2122,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["brokencloud",{"_index":2121,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["brows",{"_index":2510,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1387,"title":{},"body":{"components/MapComponent.html":{}}}],["buildodpair",{"_index":308,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["buildodpair(odpair",{"_index":328,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["built",{"_index":66,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["busi",{"_index":2394,"title":{},"body":{"index.html":{}}}],["busiest",{"_index":512,"title":{},"body":{"components/ChartsComponent.html":{}}}],["busiestchart",{"_index":429,"title":{},"body":{"components/ChartsComponent.html":{}}}],["busiestchartopt",{"_index":468,"title":{},"body":{"components/ChartsComponent.html":{},"miscellaneous/variables.html":{}}}],["busiestcolor",{"_index":469,"title":{},"body":{"components/ChartsComponent.html":{},"miscellaneous/variables.html":{}}}],["busiestctx",{"_index":430,"title":{},"body":{"components/ChartsComponent.html":{}}}],["button",{"_index":422,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SimulationComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["c",{"_index":2467,"title":{},"body":{"license.html":{}}}],["calc",{"_index":1577,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["calcassignmentmatrix(odpair",{"_index":948,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["calcfactor",{"_index":2138,"title":{},"body":{"injectables/WeatherService.html":{}}}],["calcfactor(adjustmentfactorcoeffici",{"_index":2150,"title":{},"body":{"injectables/WeatherService.html":{}}}],["calcincidencematrix",{"_index":940,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["calclinkflow",{"_index":759,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["calcmaxflow",{"_index":760,"title":{},"body":{"classes/Edge.html":{}}}],["calcmaxflow(factor",{"_index":796,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["calcodmatrix",{"_index":669,"title":{},"body":{"injectables/DemandService.html":{}}}],["calcpathcosts(odpair",{"_index":1023,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["calcshortestpath",{"_index":1643,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["calcshortestpaths(odpair",{"_index":936,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["calcshortestpathsprobabilities(odpair",{"_index":1006,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["calcul",{"_index":688,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"index.html":{}}}],["calendar_today",{"_index":1724,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["call",{"_index":2159,"title":{},"body":{"injectables/WeatherService.html":{}}}],["cancomponentdeactiv",{"_index":288,"title":{"interfaces/CanComponentDeactivate.html":{}},"body":{"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{},"components/UiComponent.html":{}}}],["candeactiv",{"_index":292,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{},"components/UiComponent.html":{},"modules/UiRoutingModule.html":{}}}],["candeactivate(compon",{"_index":297,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{}}}],["candeactivateguard",{"_index":296,"title":{"guards/CanDeactivateGuard.html":{}},"body":{"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{},"modules/SharedModule.html":{},"modules/UiRoutingModule.html":{}}}],["cannnot",{"_index":1618,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["capac",{"_index":532,"title":{},"body":{"components/ChartsComponent.html":{},"miscellaneous/variables.html":{}}}],["card",{"_index":1550,"title":{},"body":{"components/PrivacyComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{}}}],["case",{"_index":398,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"interfaces/SimulationState-1.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{}}}],["catch((error",{"_index":1672,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["catcherror",{"_index":2169,"title":{},"body":{"injectables/WeatherService.html":{}}}],["catcherror((error",{"_index":2185,"title":{},"body":{"injectables/WeatherService.html":{}}}],["categori",{"_index":1536,"title":{},"body":{"components/PrivacyComponent.html":{},"miscellaneous/variables.html":{}}}],["cd",{"_index":2463,"title":{},"body":{"index.html":{}}}],["cdr",{"_index":1953,"title":{},"body":{"components/UiComponent.html":{}}}],["cell",{"_index":420,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/NumericComponent.html":{},"components/SimulationComponent.html":{}}}],["center",{"_index":75,"title":{},"body":{"components/AboutComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["central1",{"_index":2552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["central1/networkdata",{"_index":2558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["central1/trafficdata",{"_index":2559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["centroid",{"_index":1396,"title":{},"body":{"components/MapComponent.html":{}}}],["chang",{"_index":112,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"miscellaneous/enumerations.html":{}}}],["changedemand",{"_index":670,"title":{},"body":{"injectables/DemandService.html":{}}}],["changedemand(demand",{"_index":689,"title":{},"body":{"injectables/DemandService.html":{}}}],["changedetectorref",{"_index":1954,"title":{},"body":{"components/UiComponent.html":{}}}],["changeofconditionscompon",{"_index":110,"title":{"components/ChangeOfConditionsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["changes['cent",{"_index":1200,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["changes['zoom",{"_index":1202,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["changestartingtim",{"_index":671,"title":{},"body":{"injectables/DemandService.html":{}}}],["changestartingtimes(startingtim",{"_index":691,"title":{},"body":{"injectables/DemandService.html":{}}}],["changeweath",{"_index":2139,"title":{},"body":{"injectables/WeatherService.html":{}}}],["changeweather(weath",{"_index":2153,"title":{},"body":{"injectables/WeatherService.html":{}}}],["charg",{"_index":2471,"title":{},"body":{"license.html":{}}}],["chart",{"_index":426,"title":{},"body":{"components/ChartsComponent.html":{}}}],["chart(this.busiestctx",{"_index":495,"title":{},"body":{"components/ChartsComponent.html":{}}}],["chart(this.heavytrafficctx",{"_index":487,"title":{},"body":{"components/ChartsComponent.html":{}}}],["chart(this.moderatetrafficctx",{"_index":493,"title":{},"body":{"components/ChartsComponent.html":{}}}],["chart.j",{"_index":464,"title":{},"body":{"components/ChartsComponent.html":{},"dependencies.html":{}}}],["chartj",{"_index":2323,"title":{},"body":{"dependencies.html":{}}}],["charts'},{'nam",{"_index":116,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["charts.component.html",{"_index":428,"title":{},"body":{"components/ChartsComponent.html":{}}}],["charts.component.scss",{"_index":427,"title":{},"body":{"components/ChartsComponent.html":{}}}],["charts/charts.compon",{"_index":2040,"title":{},"body":{"modules/UiModule.html":{}}}],["chartscompon",{"_index":114,"title":{"components/ChartsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["check",{"_index":707,"title":{},"body":{"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"injectables/SchedulerService.html":{}}}],["circul",{"_index":2405,"title":{},"body":{"index.html":{}}}],["circular",{"_index":925,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["citi",{"_index":2393,"title":{},"body":{"index.html":{}}}],["claim",{"_index":2501,"title":{},"body":{"license.html":{}}}],["class",{"_index":40,"title":{"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"classes/GoOn.html":{},"classes/Heap.html":{},"classes/MapChanged.html":{},"classes/Node.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"classes/Statistics.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"overview.html":{}}}],["clear",{"_index":1400,"title":{},"body":{"components/MapComponent.html":{},"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["clearski",{"_index":2114,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["cli",{"_index":2450,"title":{},"body":{"index.html":{}}}],["clich",{"_index":2365,"title":{},"body":{"index.html":{}}}],["click",{"_index":1172,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["clock",{"_index":1568,"title":{},"body":{"injectables/SchedulerService.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{}}}],["clock.servic",{"_index":1807,"title":{},"body":{"modules/SimulationModule.html":{}}}],["clockservic",{"_index":550,"title":{"injectables/ClockService.html":{}},"body":{"injectables/ClockService.html":{},"injectables/SchedulerService.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"components/StatisticsComponent.html":{},"overview.html":{}}}],["clockstatist",{"_index":1914,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["cloud",{"_index":2118,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["cloudfunctions.net/networkdata",{"_index":2554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cloudfunctions.net/trafficdata",{"_index":2555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_appmodul",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_demandmodul",{"_index":660,"title":{},"body":{"modules/DemandModule.html":{},"overview.html":{}}}],["cluster_demandmodule_provid",{"_index":661,"title":{},"body":{"modules/DemandModule.html":{},"overview.html":{}}}],["cluster_locationmodul",{"_index":1299,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_provid",{"_index":1300,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_networkmodul",{"_index":1464,"title":{},"body":{"modules/NetworkModule.html":{},"overview.html":{}}}],["cluster_networkmodule_import",{"_index":1465,"title":{},"body":{"modules/NetworkModule.html":{},"overview.html":{}}}],["cluster_networkmodule_provid",{"_index":1466,"title":{},"body":{"modules/NetworkModule.html":{},"overview.html":{}}}],["cluster_sharedmodul",{"_index":1730,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declar",{"_index":1731,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_export",{"_index":1733,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_import",{"_index":1732,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_simulationmodul",{"_index":1804,"title":{},"body":{"modules/SimulationModule.html":{},"overview.html":{}}}],["cluster_simulationmodule_provid",{"_index":1805,"title":{},"body":{"modules/SimulationModule.html":{},"overview.html":{}}}],["cluster_uimodul",{"_index":2013,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_uimodule_declar",{"_index":2014,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_uimodule_import",{"_index":2015,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_uimodule_provid",{"_index":2016,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_weathermodul",{"_index":2129,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["cluster_weathermodule_provid",{"_index":2130,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["code",{"_index":63,"title":{},"body":{"components/AboutComponent.html":{},"modules/MaterialModule.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{}}}],["codeaddress",{"_index":1314,"title":{},"body":{"injectables/LocationService.html":{}}}],["codeaddress(address",{"_index":1319,"title":{},"body":{"injectables/LocationService.html":{}}}],["coeffici",{"_index":2605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collect",{"_index":1537,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["color",{"_index":86,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"components/SimulationComponent.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"miscellaneous/variables.html":{}}}],["combin",{"_index":355,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["combine(existingnode.incomingedg",{"_index":902,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["combine(existingnode.outgoingedg",{"_index":905,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["common",{"_index":2411,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":1737,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["complet",{"_index":1102,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/HomeComponent.html":{}}}],["complex",{"_index":2373,"title":{},"body":{"index.html":{}}}],["compon",{"_index":0,"title":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"guards/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiRoutingModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["component.candeactiv",{"_index":298,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{}}}],["component_templ",{"_index":101,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["comput",{"_index":59,"title":{},"body":{"components/AboutComponent.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["concentr",{"_index":2388,"title":{},"body":{"index.html":{}}}],["condit",{"_index":305,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"index.html":{},"license.html":{}}}],["conditions'},{'nam",{"_index":113,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["conditions.compon",{"_index":2032,"title":{},"body":{"modules/UiModule.html":{}}}],["conditions.component.html",{"_index":307,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.scss",{"_index":306,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.t",{"_index":303,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:110",{"_index":338,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:114",{"_index":340,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:121",{"_index":333,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:125",{"_index":330,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:26",{"_index":326,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:28",{"_index":327,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:30",{"_index":348,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:32",{"_index":351,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:34",{"_index":325,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:47",{"_index":336,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:53",{"_index":341,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:81",{"_index":337,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions/chang",{"_index":302,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"modules/UiModule.html":{}}}],["config",{"_index":368,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"interfaces/Tag.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{}}}],["config.json",{"_index":2461,"title":{},"body":{"index.html":{}}}],["config.t",{"_index":2520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configur",{"_index":2632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["congest",{"_index":2409,"title":{},"body":{"index.html":{}}}],["connect",{"_index":1540,"title":{},"body":{"components/PrivacyComponent.html":{},"injectables/SchedulerService.html":{},"license.html":{}}}],["consid",{"_index":2434,"title":{},"body":{"index.html":{}}}],["consol",{"_index":2452,"title":{},"body":{"index.html":{}}}],["const",{"_index":379,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Map.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"modules/SharedModule.html":{},"interfaces/SimulationState.html":{},"interfaces/SimulationState-1.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{}}}],["constructor",{"_index":24,"title":{},"body":{"components/AboutComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["constructor(@inject(mat_snack_bar_data",{"_index":1463,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["constructor(data",{"_index":1458,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["constructor(dialogref",{"_index":1291,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["constructor(edgeid",{"_index":766,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["constructor(elementref",{"_index":442,"title":{},"body":{"components/ChartsComponent.html":{},"components/HomeComponent.html":{},"components/WeatherComponent.html":{}}}],["constructor(formbuild",{"_index":315,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/WizardComponent.html":{}}}],["constructor(http",{"_index":2144,"title":{},"body":{"injectables/WeatherService.html":{}}}],["constructor(map",{"_index":1163,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["constructor(maticonregistri",{"_index":1450,"title":{},"body":{"modules/MaterialModule.html":{}}}],["constructor(network",{"_index":677,"title":{},"body":{"injectables/DemandService.html":{}}}],["constructor(nodeid",{"_index":845,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["constructor(payload",{"_index":1134,"title":{},"body":{"classes/GoOn.html":{},"classes/MapChanged.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{}}}],["constructor(priv",{"_index":717,"title":{},"body":{"injectables/DemandService.html":{},"components/HomeComponent.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{}}}],["constructor(publ",{"_index":1146,"title":{},"body":{"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/MapChanged.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{}}}],["constructor(relationid",{"_index":882,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["constructor(rout",{"_index":1948,"title":{},"body":{"components/UiComponent.html":{}}}],["constructor(stor",{"_index":569,"title":{},"body":{"injectables/ClockService.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"injectables/WizardService.html":{}}}],["constructor(wizard",{"_index":1566,"title":{},"body":{"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["contain",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"classes/Heap.html":{},"interfaces/Path.html":{},"components/UiComponent.html":{}}}],["content",{"_index":531,"title":{},"body":{"components/ChartsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["context",{"_index":2444,"title":{},"body":{"index.html":{}}}],["continu",{"_index":414,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{}}}],["contract",{"_index":2505,"title":{},"body":{"license.html":{}}}],["control",{"_index":399,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"components/SimulationComponent.html":{},"components/UiComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["control.get([control.length",{"_index":1116,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["control.length",{"_index":1085,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["control.paus",{"_index":617,"title":{},"body":{"injectables/ClockService.html":{}}}],["control.push(this.formbuilder.group",{"_index":1115,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["control.quick",{"_index":625,"title":{},"body":{"injectables/ClockService.html":{}}}],["control.removeat(i",{"_index":1086,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["control.slow",{"_index":623,"title":{},"body":{"injectables/ClockService.html":{}}}],["control.start",{"_index":615,"title":{},"body":{"injectables/ClockService.html":{}}}],["control.step",{"_index":621,"title":{},"body":{"injectables/ClockService.html":{}}}],["control.stop",{"_index":619,"title":{},"body":{"injectables/ClockService.html":{}}}],["control.valu",{"_index":1091,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["convert",{"_index":1666,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"injectables/WeatherService.html":{}}}],["cooki",{"_index":1543,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["cooper",{"_index":1383,"title":{},"body":{"components/MapComponent.html":{}}}],["coordin",{"_index":1308,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["copi",{"_index":2472,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":102,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"license.html":{}}}],["copyright&nbsp;©&nbsp",{"_index":50,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{}}}],["core",{"_index":2334,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":1581,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["correctgraph",{"_index":1627,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["cost",{"_index":961,"title":{},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["count",{"_index":648,"title":{"interfaces/Counts.html":{}},"body":{"interfaces/Counts.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Simulation.html":{},"components/SimulationComponent.html":{},"interfaces/Tag.html":{}}}],["counts?.arrivedvehicl",{"_index":1801,"title":{},"body":{"components/SimulationComponent.html":{}}}],["counts?.startedvehicl",{"_index":1799,"title":{},"body":{"components/SimulationComponent.html":{}}}],["creat",{"_index":984,"title":{},"body":{"classes/Edge.html":{},"components/GoogleMapComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"components/WizardComponent.html":{},"index.html":{}}}],["createchart",{"_index":436,"title":{},"body":{"components/ChartsComponent.html":{}}}],["createfeatureselector",{"_index":1813,"title":{},"body":{"interfaces/SimulationState.html":{},"interfaces/UiState.html":{}}}],["createfeatureselector('simul",{"_index":1819,"title":{},"body":{"interfaces/SimulationState.html":{},"miscellaneous/variables.html":{}}}],["createfeatureselector('ui",{"_index":2057,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["creategraph",{"_index":1617,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["createmap",{"_index":1155,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["createmap(el",{"_index":1186,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["createselector",{"_index":1814,"title":{},"body":{"interfaces/SimulationState.html":{},"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["cross",{"_index":944,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["curr",{"_index":1236,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{},"classes/Statistics.html":{}}}],["curr.heavytrafficcount",{"_index":1893,"title":{},"body":{"classes/Statistics.html":{}}}],["curr.moderatetrafficcount",{"_index":1894,"title":{},"body":{"classes/Statistics.html":{}}}],["current",{"_index":780,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{},"interfaces/UiState.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["currentstep",{"_index":397,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["currentyear",{"_index":21,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{}}}],["d",{"_index":408,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["d.count",{"_index":978,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["d2191a",{"_index":2590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d27519",{"_index":2588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damag",{"_index":2502,"title":{},"body":{"license.html":{}}}],["dark",{"_index":2002,"title":{},"body":{"components/UiComponent.html":{}}}],["data",{"_index":47,"title":{},"body":{"components/AboutComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"interfaces/Counts.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Map.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Simulation.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["data.list.length",{"_index":2187,"title":{},"body":{"injectables/WeatherService.html":{}}}],["data.list[0",{"_index":2197,"title":{},"body":{"injectables/WeatherService.html":{}}}],["data.list[0].dt",{"_index":2194,"title":{},"body":{"injectables/WeatherService.html":{}}}],["dataset",{"_index":490,"title":{},"body":{"components/ChartsComponent.html":{}}}],["date",{"_index":1708,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{},"injectables/WeatherService.html":{}}}],["date().getfullyear",{"_index":36,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{}}}],["date.now",{"_index":644,"title":{},"body":{"injectables/ClockService.html":{}}}],["datetim",{"_index":2023,"title":{},"body":{"modules/UiModule.html":{},"dependencies.html":{}}}],["day",{"_index":1711,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["deactiv",{"_index":290,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{},"modules/SharedModule.html":{},"components/UiComponent.html":{},"modules/UiRoutingModule.html":{}}}],["deal",{"_index":2473,"title":{},"body":{"license.html":{}}}],["decim",{"_index":2360,"title":{},"body":{"miscellaneous/functions.html":{}}}],["declar",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["decor",{"_index":84,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MessageArchivedComponent.html":{},"components/PrivacyComponent.html":{},"components/TermsComponent.html":{},"components/WizardComponent.html":{}}}],["decre",{"_index":1530,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["deepclon",{"_index":1418,"title":{},"body":{"interfaces/MapState.html":{},"interfaces/SimulationState-1.html":{},"interfaces/WizardState.html":{}}}],["deepclone(initialmapst",{"_index":1424,"title":{},"body":{"interfaces/MapState.html":{}}}],["deepclone(initialsimulationst",{"_index":1828,"title":{},"body":{"interfaces/SimulationState-1.html":{}}}],["deepclone(initialwizardst",{"_index":2283,"title":{},"body":{"interfaces/WizardState.html":{}}}],["deepclone(state.map",{"_index":1428,"title":{},"body":{"interfaces/MapState.html":{}}}],["deepclone(state.period",{"_index":1833,"title":{},"body":{"interfaces/SimulationState-1.html":{}}}],["deepclone(state.simul",{"_index":1830,"title":{},"body":{"interfaces/SimulationState-1.html":{}}}],["deepclone(state.step",{"_index":2286,"title":{},"body":{"interfaces/WizardState.html":{}}}],["default",{"_index":33,"title":{},"body":{"components/AboutComponent.html":{},"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"interfaces/SimulationState-1.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":25,"title":{},"body":{"components/AboutComponent.html":{},"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"guards/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["degre",{"_index":58,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["delay",{"_index":537,"title":{},"body":{"components/ChartsComponent.html":{},"interfaces/Counts.html":{},"components/HomeComponent.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{}}}],["delet",{"_index":1119,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["deleteodpair",{"_index":1061,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["deleteodpair(i",{"_index":1070,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand",{"_index":323,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"injectables/SchedulerService.html":{},"components/WizardComponent.html":{},"index.html":{}}}],["demand'},{'nam",{"_index":119,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["demand.compon",{"_index":2030,"title":{},"body":{"modules/UiModule.html":{}}}],["demand.component.html",{"_index":1058,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.scss",{"_index":1057,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.t",{"_index":1056,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:142",{"_index":1069,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:150",{"_index":1067,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:23",{"_index":1064,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:25",{"_index":1065,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:27",{"_index":1078,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:29",{"_index":1079,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:31",{"_index":1063,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:44",{"_index":1072,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:50",{"_index":1077,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:59",{"_index":1073,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:81",{"_index":1074,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:85",{"_index":1071,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:93",{"_index":1076,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.length",{"_index":726,"title":{},"body":{"injectables/DemandService.html":{}}}],["demand.servic",{"_index":663,"title":{},"body":{"modules/DemandModule.html":{}}}],["demand/demand.modul",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["demand/demand.servic",{"_index":360,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/SchedulerService.html":{}}}],["demand/estim",{"_index":1055,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"modules/UiModule.html":{}}}],["demandmodul",{"_index":196,"title":{"modules/DemandModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"modules.html":{},"overview.html":{}}}],["demandservic",{"_index":324,"title":{"injectables/DemandService.html":{}},"body":{"components/ChangeOfConditionsComponent.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"injectables/SchedulerService.html":{},"overview.html":{}}}],["deni",{"_index":1688,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["denomin",{"_index":1015,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["densiti",{"_index":747,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"index.html":{}}}],["dep",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["depend",{"_index":187,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{},"overview.html":{}}}],["describ",{"_index":820,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["descript",{"_index":267,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/Heap.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"interfaces/MapState.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/SimulationState.html":{},"interfaces/SimulationState-1.html":{},"classes/Statistics.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{},"miscellaneous/functions.html":{}}}],["design",{"_index":2372,"title":{},"body":{"index.html":{}}}],["destin",{"_index":748,"title":{},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["develop",{"_index":55,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["dialog",{"_index":1288,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/UiComponent.html":{}}}],["dialog'},{'nam",{"_index":128,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["dialog.compon",{"_index":1749,"title":{},"body":{"modules/SharedModule.html":{},"components/UiComponent.html":{}}}],["dialog.component.t",{"_index":1287,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:18",{"_index":1293,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:21",{"_index":1296,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:22",{"_index":1295,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialogref",{"_index":1290,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/UiComponent.html":{}}}],["dialogref.afterclos",{"_index":1997,"title":{},"body":{"components/UiComponent.html":{}}}],["dialogresult",{"_index":1987,"title":{},"body":{"components/UiComponent.html":{}}}],["differ",{"_index":983,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"index.html":{}}}],["direct",{"_index":99,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"index.html":{}}}],["directives/pairs.direct",{"_index":2227,"title":{},"body":{"components/WizardComponent.html":{}}}],["disabledefaultui",{"_index":1157,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["disabledoubleclickzoom",{"_index":1158,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["disagre",{"_index":1937,"title":{},"body":{"components/TermsComponent.html":{}}}],["display",{"_index":1180,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/PrivacyComponent.html":{},"miscellaneous/variables.html":{}}}],["displayedcolumn",{"_index":1483,"title":{},"body":{"components/NumericComponent.html":{}}}],["dissert",{"_index":56,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["distanc",{"_index":749,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["distribut",{"_index":2479,"title":{},"body":{"license.html":{}}}],["doc",{"_index":2362,"title":{},"body":{"index.html":{}}}],["document",{"_index":65,"title":{},"body":{"components/AboutComponent.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"index.html":{},"license.html":{}}}],["doesn't",{"_index":1694,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["domsanit",{"_index":1449,"title":{},"body":{"modules/MaterialModule.html":{}}}],["domsanitizer.bypasssecuritytrustresourceurl('./assets/images/ic_code_24px.svg",{"_index":1454,"title":{},"body":{"modules/MaterialModule.html":{}}}],["domsanitizer.bypasssecuritytrustresourceurl('./assets/images/ic_more_vert_24px.svg",{"_index":1453,"title":{},"body":{"modules/MaterialModule.html":{}}}],["doubl",{"_index":1171,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["draw",{"_index":762,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["draw(color",{"_index":801,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["drawer",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["drawingopt",{"_index":750,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["drawtim",{"_index":2541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dt",{"_index":2009,"title":{},"body":{"components/UiComponent.html":{}}}],["due",{"_index":2384,"title":{},"body":{"index.html":{}}}],["durat",{"_index":751,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["durationintraff",{"_index":752,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["dynam",{"_index":2301,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1000,"title":{},"body":{"classes/Edge.html":{},"classes/EnumValues.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["e[nam",{"_index":1037,"title":{},"body":{"classes/EnumValues.html":{}}}],["each",{"_index":713,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"components/GoogleMapComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{}}}],["earth'",{"_index":834,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["eas",{"_index":1263,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["eceff1",{"_index":417,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SimulationComponent.html":{}}}],["econom",{"_index":2382,"title":{},"body":{"index.html":{}}}],["edg",{"_index":513,"title":{"classes/Edge.html":{}},"body":{"components/ChartsComponent.html":{},"interfaces/Counts.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Simulation.html":{},"classes/Statistics.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["edge.calcmaxflow(factor",{"_index":951,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["edge.destination.nodeid",{"_index":929,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["edge.downstream[i",{"_index":1897,"title":{},"body":{"classes/Statistics.html":{}}}],["edge.drawingoptions.infowindow.setcontent('edg",{"_index":1002,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["edge.dur",{"_index":1885,"title":{},"body":{"classes/Statistics.html":{}}}],["edge.edgeid",{"_index":910,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["edge.heavytrafficcount",{"_index":1880,"title":{},"body":{"classes/Statistics.html":{}}}],["edge.label",{"_index":938,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"classes/Statistics.html":{},"interfaces/Tag.html":{}}}],["edge.moderatetrafficcount",{"_index":1881,"title":{},"body":{"classes/Statistics.html":{}}}],["edge.origin.nodeid",{"_index":931,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["edge.upstream.map((valu",{"_index":1896,"title":{},"body":{"classes/Statistics.html":{}}}],["edgeid",{"_index":753,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["edgeofa.edgeid",{"_index":996,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["edgeofb.edgeid",{"_index":995,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["edges.filter((edg",{"_index":1889,"title":{},"body":{"classes/Statistics.html":{}}}],["edges.push(edg",{"_index":999,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["edges.reduce((prev",{"_index":1890,"title":{},"body":{"classes/Statistics.html":{}}}],["edges[m].edgeid",{"_index":943,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["effect",{"_index":2408,"title":{},"body":{"index.html":{}}}],["el",{"_index":1189,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{}}}],["element",{"_index":98,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["element.delay",{"_index":1500,"title":{},"body":{"components/NumericComponent.html":{}}}],["element.edg",{"_index":1495,"title":{},"body":{"components/NumericComponent.html":{}}}],["element.innerhtml",{"_index":1254,"title":{},"body":{"components/HomeComponent.html":{}}}],["element.innertext",{"_index":1251,"title":{},"body":{"components/HomeComponent.html":{}}}],["element.stop",{"_index":1501,"title":{},"body":{"components/NumericComponent.html":{}}}],["element.trafficcount",{"_index":1499,"title":{},"body":{"components/NumericComponent.html":{}}}],["element.trafficvolum",{"_index":1498,"title":{},"body":{"components/NumericComponent.html":{}}}],["element.waynam",{"_index":1497,"title":{},"body":{"components/NumericComponent.html":{}}}],["elementref",{"_index":443,"title":{},"body":{"components/ChartsComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/WeatherComponent.html":{}}}],["elementtyp",{"_index":2569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["empti",{"_index":1726,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["enabl",{"_index":533,"title":{},"body":{"components/ChartsComponent.html":{},"components/GoogleMapComponent.html":{},"index.html":{}}}],["enables/dis",{"_index":1169,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["encapsul",{"_index":1359,"title":{},"body":{"components/MapComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["end",{"_index":606,"title":{},"body":{"injectables/ClockService.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"interfaces/SimulationState.html":{},"interfaces/SimulationState-1.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["endsimul",{"_index":552,"title":{},"body":{"injectables/ClockService.html":{},"components/SimulationComponent.html":{},"components/WizardComponent.html":{}}}],["endtim",{"_index":646,"title":{},"body":{"injectables/ClockService.html":{}}}],["engin",{"_index":60,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["enter",{"_index":1727,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["entrycompon",{"_index":1735,"title":{},"body":{"modules/SharedModule.html":{}}}],["enum",{"_index":603,"title":{},"body":{"injectables/ClockService.html":{},"classes/Edge.html":{},"classes/GoOn.html":{},"interfaces/LinkFlow.html":{},"classes/MapChanged.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"interfaces/WeatherConditions.html":{}}}],["enumer",{"_index":2340,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumvalu",{"_index":366,"title":{"classes/EnumValues.html":{}},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{}}}],["enumvalues.getvalues(pathtyp",{"_index":1083,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["enumvalues.getvalues(weatherdescript",{"_index":386,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["enumvaluetyp",{"_index":1033,"title":{},"body":{"classes/EnumValues.html":{},"miscellaneous/typealiases.html":{}}}],["environ",{"_index":817,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["environment.test",{"_index":1001,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["environments/environ",{"_index":818,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["eppstein",{"_index":953,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["error",{"_index":812,"title":{},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"classes/Reset-2.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["error.cod",{"_index":1685,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["error.permission_deni",{"_index":1686,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["error.position_unavail",{"_index":1689,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["error.timeout",{"_index":1691,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["estim",{"_index":118,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"index.html":{}}}],["estimate(linkflow",{"_index":693,"title":{},"body":{"injectables/DemandService.html":{}}}],["estimateofdemandcompon",{"_index":117,"title":{"components/EstimateOfDemandComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["estimations[x",{"_index":732,"title":{},"body":{"injectables/DemandService.html":{}}}],["eu",{"_index":1532,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["evalu",{"_index":2160,"title":{},"body":{"injectables/WeatherService.html":{}}}],["even",{"_index":2390,"title":{},"body":{"index.html":{}}}],["event",{"_index":2215,"title":{},"body":{"components/WizardComponent.html":{},"license.html":{}}}],["event.previouslyselectedindex",{"_index":2244,"title":{},"body":{"components/WizardComponent.html":{}}}],["event.selectedindex",{"_index":2245,"title":{},"body":{"components/WizardComponent.html":{}}}],["everpol",{"_index":2320,"title":{},"body":{"dependencies.html":{}}}],["execut",{"_index":558,"title":{},"body":{"injectables/ClockService.html":{}}}],["existingnod",{"_index":899,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["existingnode.incomingedg",{"_index":901,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["existingnode.outgoingedg",{"_index":904,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["exit",{"_index":1923,"title":{},"body":{"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["exp",{"_index":1013,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["expans",{"_index":2011,"title":{},"body":{"components/UiComponent.html":{}}}],["expect",{"_index":2381,"title":{},"body":{"index.html":{}}}],["expens",{"_index":2440,"title":{},"body":{"index.html":{}}}],["explor",{"_index":970,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["export",{"_index":39,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"interfaces/SimulationState.html":{},"interfaces/SimulationState-1.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["express",{"_index":2493,"title":{},"body":{"license.html":{}}}],["extend",{"_index":304,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["extens",{"_index":2438,"title":{},"body":{"index.html":{}}}],["extern",{"_index":1547,"title":{},"body":{"components/PrivacyComponent.html":{},"components/TermsComponent.html":{}}}],["extract",{"_index":1839,"title":{},"body":{"classes/Statistics.html":{}}}],["fact",{"_index":2401,"title":{},"body":{"index.html":{}}}],["factor",{"_index":799,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["fals",{"_index":262,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/SimulationState-1.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["fast_forward",{"_index":1798,"title":{},"body":{"components/SimulationComponent.html":{}}}],["fast_rewind",{"_index":1796,"title":{},"body":{"components/SimulationComponent.html":{}}}],["featur",{"_index":2436,"title":{},"body":{"index.html":{}}}],["featuresimulationst",{"_index":1818,"title":{},"body":{"interfaces/SimulationState.html":{},"miscellaneous/variables.html":{}}}],["featuretyp",{"_index":2567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["featureuist",{"_index":2056,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["few",{"_index":2117,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["fewcloud",{"_index":2116,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["ffffff",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"interfaces/SimulationState.html":{},"interfaces/SimulationState-1.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"index.html":{},"license.html":{}}}],["fill",{"_index":499,"title":{},"body":{"components/ChartsComponent.html":{}}}],["filterpaths(shortestpath",{"_index":985,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["find",{"_index":2426,"title":{},"body":{"index.html":{}}}],["findindex(descript",{"_index":387,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["findoppositeedge(edg",{"_index":926,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["firebas",{"_index":69,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["firebaserc",{"_index":2460,"title":{},"body":{"index.html":{}}}],["first",{"_index":967,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"classes/Statistics.html":{},"interfaces/Tag.html":{}}}],["fit",{"_index":2496,"title":{},"body":{"license.html":{}}}],["flexlayoutmodul",{"_index":1743,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["flow",{"_index":685,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"index.html":{}}}],["follow",{"_index":1575,"title":{},"body":{"injectables/SchedulerService.html":{},"license.html":{}}}],["font",{"_index":77,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/NumericComponent.html":{},"components/SimulationComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["fontcolor",{"_index":529,"title":{},"body":{"components/ChartsComponent.html":{}}}],["fontstyl",{"_index":527,"title":{},"body":{"components/ChartsComponent.html":{}}}],["footer",{"_index":1122,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'nam",{"_index":121,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["footer.component.html",{"_index":1124,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":1123,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.compon",{"_index":1747,"title":{},"body":{"modules/SharedModule.html":{}}}],["footercompon",{"_index":120,"title":{"components/FooterComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["forecast",{"_index":2134,"title":{},"body":{"injectables/WeatherService.html":{}}}],["form",{"_index":284,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/Map.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["formarray",{"_index":352,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/WizardComponent.html":{}}}],["format",{"_index":1040,"title":{},"body":{"classes/EnumValues.html":{},"miscellaneous/functions.html":{}}}],["formattimefrommillisecond",{"_index":1774,"title":{},"body":{"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"miscellaneous/functions.html":{}}}],["formattimefrommilliseconds(0",{"_index":1787,"title":{},"body":{"components/SimulationComponent.html":{}}}],["formattimefrommilliseconds(clockstatistics.totalprocessingtim",{"_index":1920,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["formattimefrommilliseconds(clockstatistics.totalsimulatedtim",{"_index":1919,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["formattimefrommilliseconds(m",{"_index":1049,"title":{},"body":{"classes/EnumValues.html":{},"miscellaneous/functions.html":{}}}],["formattimefrommilliseconds(periods.simulatedtimeperiod",{"_index":1786,"title":{},"body":{"components/SimulationComponent.html":{}}}],["formattimefromsecond",{"_index":466,"title":{},"body":{"components/ChartsComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"miscellaneous/functions.html":{}}}],["formattimefromseconds(",{"_index":1043,"title":{},"body":{"classes/EnumValues.html":{},"miscellaneous/functions.html":{}}}],["formattimefromseconds(periods.timeperiods[periods.timeperiods.length",{"_index":1781,"title":{},"body":{"components/SimulationComponent.html":{}}}],["formattimefromseconds(simulationstatistics.totaltim",{"_index":1917,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["formattimefromseconds(this.statistics.busiestedgedelay",{"_index":535,"title":{},"body":{"components/ChartsComponent.html":{}}}],["formattimefromseconds(valu",{"_index":540,"title":{},"body":{"components/ChartsComponent.html":{}}}],["formbuild",{"_index":316,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/WizardComponent.html":{}}}],["formgroup",{"_index":312,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WizardComponent.html":{}}}],["formsmodul",{"_index":1741,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["formstep",{"_index":2208,"title":{},"body":{"components/WizardComponent.html":{}}}],["forroot",{"_index":1751,"title":{},"body":{"modules/SharedModule.html":{}}}],["fraction",{"_index":2624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["free",{"_index":784,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"license.html":{}}}],["freeflowveloc",{"_index":754,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["frommap",{"_index":2052,"title":{},"body":{"interfaces/UiState.html":{}}}],["frommap.getmap",{"_index":2064,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["frommap.mapreduc",{"_index":2055,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["frommap.mapst",{"_index":2048,"title":{},"body":{"interfaces/UiState.html":{}}}],["fromsimul",{"_index":599,"title":{},"body":{"injectables/ClockService.html":{},"components/NumericComponent.html":{},"components/SimulationComponent.html":{},"interfaces/SimulationState.html":{}}}],["fromsimulation.getend",{"_index":1822,"title":{},"body":{"interfaces/SimulationState.html":{},"miscellaneous/variables.html":{}}}],["fromsimulation.getperiod",{"_index":1823,"title":{},"body":{"interfaces/SimulationState.html":{},"miscellaneous/variables.html":{}}}],["fromsimulation.getsimul",{"_index":1821,"title":{},"body":{"interfaces/SimulationState.html":{},"miscellaneous/variables.html":{}}}],["fromsimulation.simulationreduc",{"_index":1817,"title":{},"body":{"interfaces/SimulationState.html":{},"miscellaneous/variables.html":{}}}],["fromsimulation.simulationst",{"_index":1811,"title":{},"body":{"interfaces/SimulationState.html":{}}}],["fromui",{"_index":361,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WizardService.html":{}}}],["fromwizard",{"_index":2050,"title":{},"body":{"interfaces/UiState.html":{}}}],["fromwizard.getcurrentstep",{"_index":2061,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["fromwizard.geterror",{"_index":2062,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["fromwizard.getpend",{"_index":2063,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["fromwizard.getstep",{"_index":2060,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["fromwizard.wizardreduc",{"_index":2054,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["fromwizard.wizardst",{"_index":2049,"title":{},"body":{"interfaces/UiState.html":{}}}],["full",{"_index":259,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TermsComponent.html":{},"modules/UiRoutingModule.html":{},"components/WizardComponent.html":{}}}],["function",{"_index":241,"title":{"miscellaneous/functions.html":{}},"body":{"classes/AppPreloadingStrategy.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/DemandService.html":{},"classes/EnumValues.html":{},"interfaces/MapState.html":{},"interfaces/SimulationState-1.html":{},"interfaces/WizardState.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["functions/src/funct",{"_index":2462,"title":{},"body":{"index.html":{}}}],["furnish",{"_index":2484,"title":{},"body":{"license.html":{}}}],["g",{"_index":2449,"title":{},"body":{"index.html":{}}}],["gdpr",{"_index":1535,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["gener",{"_index":701,"title":{},"body":{"injectables/DemandService.html":{},"classes/Heap.html":{},"interfaces/Path.html":{},"components/PrivacyComponent.html":{},"index.html":{}}}],["geocod",{"_index":1311,"title":{},"body":{"injectables/LocationService.html":{},"index.html":{}}}],["geograph",{"_index":1307,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["geoloc",{"_index":1312,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["geometri",{"_index":2570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gestur",{"_index":1174,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["gesturehandl",{"_index":1159,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["get",{"_index":719,"title":{"index.html":{},"license.html":{}},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"components/GoogleMapComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{}}}],["getbusiestedg",{"_index":1840,"title":{},"body":{"classes/Statistics.html":{}}}],["getbusiestedge(edg",{"_index":1852,"title":{},"body":{"classes/Statistics.html":{}}}],["getbusiestedgecapac",{"_index":1841,"title":{},"body":{"classes/Statistics.html":{}}}],["getbusiestedgecapacity(edg",{"_index":1855,"title":{},"body":{"classes/Statistics.html":{}}}],["getbusiestedgedata",{"_index":1842,"title":{},"body":{"classes/Statistics.html":{}}}],["getbusiestedgedata(edg",{"_index":1857,"title":{},"body":{"classes/Statistics.html":{}}}],["getbusiestedgedelay",{"_index":1843,"title":{},"body":{"classes/Statistics.html":{}}}],["getbusiestedgedelay(edg",{"_index":1859,"title":{},"body":{"classes/Statistics.html":{}}}],["getbusiestedgelabel",{"_index":1844,"title":{},"body":{"classes/Statistics.html":{}}}],["getbusiestedgelabel(edg",{"_index":1861,"title":{},"body":{"classes/Statistics.html":{}}}],["getcapac",{"_index":763,"title":{},"body":{"classes/Edge.html":{}}}],["getcapacity(timeinterv",{"_index":805,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getcurrentposit",{"_index":1315,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["getcurrentstep",{"_index":2290,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["getedg",{"_index":890,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getedge(edgeid",{"_index":908,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getend",{"_index":1835,"title":{},"body":{"interfaces/SimulationState-1.html":{},"miscellaneous/variables.html":{}}}],["geterror",{"_index":2292,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["getfactor",{"_index":2140,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getformstep",{"_index":2221,"title":{},"body":{"components/WizardComponent.html":{}}}],["getheavytrafficdata",{"_index":1845,"title":{},"body":{"classes/Statistics.html":{}}}],["getheavytrafficdata(edg",{"_index":1863,"title":{},"body":{"classes/Statistics.html":{}}}],["getheavytrafficedg",{"_index":1846,"title":{},"body":{"classes/Statistics.html":{}}}],["getheavytrafficedges(edg",{"_index":1865,"title":{},"body":{"classes/Statistics.html":{}}}],["getheavytrafficlabel",{"_index":1847,"title":{},"body":{"classes/Statistics.html":{}}}],["getheavytrafficlabels(edg",{"_index":1867,"title":{},"body":{"classes/Statistics.html":{}}}],["geticon",{"_index":2069,"title":{},"body":{"components/WeatherComponent.html":{}}}],["geticon(cod",{"_index":2076,"title":{},"body":{"components/WeatherComponent.html":{}}}],["getincidencematrix",{"_index":946,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getkjam",{"_index":764,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getlatlng",{"_index":1316,"title":{},"body":{"injectables/LocationService.html":{}}}],["getmap",{"_index":1429,"title":{},"body":{"interfaces/MapState.html":{},"miscellaneous/variables.html":{}}}],["getmax",{"_index":1709,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["getmin",{"_index":1705,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["getmoderatetrafficedg",{"_index":1848,"title":{},"body":{"classes/Statistics.html":{}}}],["getmoderatetrafficedges(edg",{"_index":1869,"title":{},"body":{"classes/Statistics.html":{}}}],["getmoderatetrafficlabel",{"_index":1849,"title":{},"body":{"classes/Statistics.html":{}}}],["getmoderatetrafficlabels(edg",{"_index":1871,"title":{},"body":{"classes/Statistics.html":{}}}],["getmoderateytrafficdata",{"_index":1850,"title":{},"body":{"classes/Statistics.html":{}}}],["getmoderateytrafficdata(edg",{"_index":1873,"title":{},"body":{"classes/Statistics.html":{}}}],["getnam",{"_index":1026,"title":{},"body":{"classes/EnumValues.html":{}}}],["getnames(",{"_index":1028,"title":{},"body":{"classes/EnumValues.html":{}}}],["getnetwork",{"_index":1613,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["getnetworkdata",{"_index":1620,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["getnod",{"_index":888,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getnode(nodeid",{"_index":894,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getodmatrix",{"_index":672,"title":{},"body":{"injectables/DemandService.html":{}}}],["getodnod",{"_index":934,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getodnode(label",{"_index":932,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getodpair",{"_index":350,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{}}}],["getpath",{"_index":1216,"title":{},"body":{"classes/Heap.html":{}}}],["getpend",{"_index":2294,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["getperiod",{"_index":1837,"title":{},"body":{"interfaces/SimulationState-1.html":{},"miscellaneous/variables.html":{}}}],["getrel",{"_index":892,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getscript",{"_index":2348,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getscript(src",{"_index":2357,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getshortestpath",{"_index":1217,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["getsimul",{"_index":1834,"title":{},"body":{"interfaces/SimulationState-1.html":{},"miscellaneous/variables.html":{}}}],["getstartingtim",{"_index":673,"title":{},"body":{"injectables/DemandService.html":{}}}],["getstatist",{"_index":560,"title":{},"body":{"injectables/ClockService.html":{}}}],["getstep",{"_index":2288,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["gettrafficdata",{"_index":1644,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["gettrafficvolum",{"_index":1851,"title":{},"body":{"classes/Statistics.html":{}}}],["gettrafficvolumes(edg",{"_index":1875,"title":{},"body":{"classes/Statistics.html":{}}}],["getvalu",{"_index":1027,"title":{},"body":{"classes/EnumValues.html":{}}}],["getvalues(",{"_index":1030,"title":{},"body":{"classes/EnumValues.html":{}}}],["getvari",{"_index":765,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getvis",{"_index":309,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["getvisibility(pair",{"_index":331,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["getweathercondit",{"_index":2141,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getweatherdata",{"_index":1629,"title":{},"body":{"injectables/SchedulerService.html":{},"injectables/WeatherService.html":{}}}],["getweatherdata(tim",{"_index":2157,"title":{},"body":{"injectables/WeatherService.html":{}}}],["give",{"_index":2380,"title":{},"body":{"index.html":{}}}],["gl",{"_index":674,"title":{},"body":{"injectables/DemandService.html":{}}}],["gls(linkflow",{"_index":698,"title":{},"body":{"injectables/DemandService.html":{}}}],["go",{"_index":1144,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset-2.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"miscellaneous/enumerations.html":{}}}],["googl",{"_index":123,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"index.html":{}}}],["google'",{"_index":1941,"title":{},"body":{"components/TermsComponent.html":{}}}],["google.maps.geocod",{"_index":1331,"title":{},"body":{"injectables/LocationService.html":{}}}],["google.maps.geocoderresult",{"_index":1338,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["google.maps.geocoderstatu",{"_index":1340,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["google.maps.geocoderstatus.ok",{"_index":1341,"title":{},"body":{"injectables/LocationService.html":{}}}],["google.maps.geocoderstatus.zero_result",{"_index":1673,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["google.maps.infowindow",{"_index":852,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["google.maps.latlng",{"_index":848,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["google.maps.latlngboundsliter",{"_index":1390,"title":{},"body":{"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["google.maps.latlngliter",{"_index":1167,"title":{},"body":{"components/GoogleMapComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{}}}],["google.maps.maptypeid",{"_index":1178,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["google.maps.maptypeid.roadmap",{"_index":1380,"title":{},"body":{"components/MapComponent.html":{}}}],["google.maps.maptypestyl",{"_index":1184,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["google.maps.mark",{"_index":844,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["google.maps.polylin",{"_index":850,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["google\\'",{"_index":1942,"title":{},"body":{"components/TermsComponent.html":{}}}],["googlemapcompon",{"_index":122,"title":{"components/GoogleMapComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["goon",{"_index":1131,"title":{"classes/GoOn.html":{}},"body":{"classes/GoOn.html":{},"classes/Reset-2.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["goon(data",{"_index":2262,"title":{},"body":{"injectables/WizardService.html":{}}}],["govern",{"_index":1935,"title":{},"body":{"components/TermsComponent.html":{}}}],["grant",{"_index":2470,"title":{},"body":{"license.html":{}}}],["graph",{"_index":884,"title":{},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"classes/Statistics.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"index.html":{},"modules.html":{}}}],["graph.calcassignmentmatrix(odpair",{"_index":1639,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["graph.calcincidencematrix",{"_index":1638,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["graph.calcmaxflows(factors[0]).pip",{"_index":1646,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["graph.calcshortestpaths(odpairs).pip",{"_index":1637,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["guard",{"_index":299,"title":{"guards/CanDeactivateGuard.html":{}},"body":{"guards/CanDeactivateGuard.html":{},"overview.html":{}}}],["guard.servic",{"_index":1750,"title":{},"body":{"modules/SharedModule.html":{},"components/UiComponent.html":{},"modules/UiRoutingModule.html":{}}}],["guard.service.t",{"_index":291,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{}}}],["guard.service.ts:10",{"_index":300,"title":{},"body":{"guards/CanDeactivateGuard.html":{}}}],["h1",{"_index":76,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{}}}],["hammerj",{"_index":2329,"title":{},"body":{"dependencies.html":{}}}],["handl",{"_index":1175,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["hasbackdrop",{"_index":1996,"title":{},"body":{"components/UiComponent.html":{}}}],["header",{"_index":416,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/HomeComponent.html":{}}}],["headlin",{"_index":1258,"title":{},"body":{"components/HomeComponent.html":{}}}],["heap",{"_index":814,"title":{"classes/Heap.html":{}},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["heavi",{"_index":504,"title":{},"body":{"components/ChartsComponent.html":{},"miscellaneous/variables.html":{}}}],["heavytraff",{"_index":2627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["heavytrafficchart",{"_index":431,"title":{},"body":{"components/ChartsComponent.html":{}}}],["heavytrafficcolor",{"_index":2589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["heavytrafficctx",{"_index":432,"title":{},"body":{"components/ChartsComponent.html":{}}}],["hectar",{"_index":2579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["height",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SimulationComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{}}}],["herebi",{"_index":2469,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":2008,"title":{},"body":{"components/UiComponent.html":{}}}],["hide",{"_index":1393,"title":{},"body":{"components/MapComponent.html":{}}}],["highli",{"_index":2598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["holder",{"_index":2499,"title":{},"body":{"license.html":{}}}],["home",{"_index":257,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{}}}],["home'},{'nam",{"_index":126,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["home.component.html",{"_index":1240,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":1239,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.transit",{"_index":1248,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.compon",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["home_transit",{"_index":1247,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["homecompon",{"_index":125,"title":{"components/HomeComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["horizont",{"_index":517,"title":{},"body":{"components/ChartsComponent.html":{}}}],["horizontalbar",{"_index":488,"title":{},"body":{"components/ChartsComponent.html":{}}}],["hour",{"_index":1729,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{},"miscellaneous/variables.html":{}}}],["hover",{"_index":88,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{}}}],["hoverbackgroundcolor",{"_index":491,"title":{},"body":{"components/ChartsComponent.html":{}}}],["html",{"_index":97,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["html5",{"_index":1325,"title":{},"body":{"injectables/LocationService.html":{}}}],["htmlcanvasel",{"_index":458,"title":{},"body":{"components/ChartsComponent.html":{}}}],["htmlelement",{"_index":1187,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/WeatherComponent.html":{}}}],["htmlimageel",{"_index":2078,"title":{},"body":{"components/WeatherComponent.html":{}}}],["http",{"_index":2147,"title":{},"body":{"injectables/WeatherService.html":{}}}],["http://localhost:4201",{"_index":2557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":2145,"title":{},"body":{"injectables/WeatherService.html":{}}}],["httpclientmodul",{"_index":1739,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["httpparam",{"_index":2168,"title":{},"body":{"injectables/WeatherService.html":{}}}],["https://cloud.google.com/map",{"_index":2455,"title":{},"body":{"index.html":{}}}],["https://developers.google.com/maps/documentation/javascript/styl",{"_index":2575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://openweathermap.org",{"_index":2458,"title":{},"body":{"index.html":{}}}],["https://u",{"_index":2551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://wiki.openstreetmap.org/wiki/key:oneway",{"_index":913,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["https://wiki.openstreetmap.org/wiki/tag:junction%3droundabout",{"_index":921,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["human",{"_index":2386,"title":{},"body":{"index.html":{}}}],["icon",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SimulationComponent.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"components/WizardComponent.html":{}}}],["icon.src",{"_index":2105,"title":{},"body":{"components/WeatherComponent.html":{}}}],["iconcontain",{"_index":2068,"title":{},"body":{"components/WeatherComponent.html":{}}}],["id",{"_index":914,"title":{},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["identifi",{"_index":1306,"title":{},"body":{"injectables/LocationService.html":{}}}],["imag",{"_index":2104,"title":{},"body":{"components/WeatherComponent.html":{}}}],["img",{"_index":1128,"title":{},"body":{"components/FooterComponent.html":{}}}],["implement",{"_index":10,"title":{},"body":{"components/AboutComponent.html":{},"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["impli",{"_index":2494,"title":{},"body":{"license.html":{}}}],["import",{"_index":37,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"interfaces/SimulationState.html":{},"interfaces/SimulationState-1.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["incid",{"_index":939,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{}}}],["incidencematrix",{"_index":887,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["includ",{"_index":2475,"title":{},"body":{"license.html":{}}}],["incomingedg",{"_index":841,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["inde",{"_index":2369,"title":{},"body":{"index.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AboutComponent.html":{},"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"interfaces/SimulationState.html":{},"interfaces/SimulationState-1.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indic",{"_index":771,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["inevit",{"_index":2413,"title":{},"body":{"index.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"interfaces/SimulationState.html":{},"interfaces/SimulationState-1.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["infodialogcompon",{"_index":127,"title":{"components/InfoDialogComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["inform",{"_index":1525,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["infowindow",{"_index":851,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["inherit",{"_index":87,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/WeatherComponent.html":{}}}],["init",{"_index":1193,"title":{},"body":{"components/GoogleMapComponent.html":{},"injectables/SchedulerService.html":{}}}],["initi",{"_index":723,"title":{},"body":{"injectables/DemandService.html":{},"components/GoogleMapComponent.html":{},"interfaces/Map.html":{},"components/MapComponent.html":{},"interfaces/Step.html":{},"miscellaneous/variables.html":{}}}],["initialmapst",{"_index":1421,"title":{},"body":{"interfaces/MapState.html":{},"miscellaneous/variables.html":{}}}],["initialsimulationst",{"_index":1826,"title":{},"body":{"interfaces/SimulationState-1.html":{},"miscellaneous/variables.html":{}}}],["initialwizardst",{"_index":2281,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":293,"title":{"injectables/ClockService.html":{},"injectables/DemandService.html":{},"injectables/LocationService.html":{},"injectables/SchedulerService.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{}},"body":{"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"components/MessageArchivedComponent.html":{},"injectables/SchedulerService.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{},"overview.html":{}}}],["inject(mat_dialog_data",{"_index":1294,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["inject(mat_snack_bar_data",{"_index":1460,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["inlin",{"_index":1277,"title":{},"body":{"components/HomeComponent.html":{}}}],["input",{"_index":311,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{}}}],["insert",{"_index":960,"title":{},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{}}}],["instal",{"_index":1626,"title":{},"body":{"injectables/SchedulerService.html":{},"index.html":{}}}],["instant",{"_index":794,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["instanti",{"_index":958,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["insuffici",{"_index":2367,"title":{},"body":{"index.html":{}}}],["interfac",{"_index":287,"title":{"interfaces/CanComponentDeactivate.html":{},"interfaces/Counts.html":{},"interfaces/LinkFlow.html":{},"interfaces/Map.html":{},"interfaces/MapState.html":{},"interfaces/Member.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"interfaces/Simulation.html":{},"interfaces/SimulationState.html":{},"interfaces/SimulationState-1.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"interfaces/UiState.html":{},"interfaces/WeatherConditions.html":{},"interfaces/WizardState.html":{}},"body":{"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{},"interfaces/Counts.html":{},"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Map.html":{},"interfaces/MapState.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/Simulation.html":{},"interfaces/SimulationState.html":{},"interfaces/SimulationState-1.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"interfaces/UiState.html":{},"interfaces/WeatherConditions.html":{},"interfaces/WizardState.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["internet",{"_index":1615,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["interv",{"_index":553,"title":{},"body":{"injectables/ClockService.html":{},"components/SimulationComponent.html":{},"miscellaneous/variables.html":{}}}],["interval(this.simulatedtimeinterv",{"_index":630,"title":{},"body":{"injectables/ClockService.html":{}}}],["invalid",{"_index":411,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["invalid_request",{"_index":1675,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["invers",{"_index":822,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["invok",{"_index":1336,"title":{},"body":{"injectables/LocationService.html":{}}}],["isnan(+key",{"_index":1035,"title":{},"body":{"classes/EnumValues.html":{}}}],["isoneway(edgeid",{"_index":915,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["isonpath",{"_index":675,"title":{},"body":{"injectables/DemandService.html":{}}}],["isonpath(odmatrixassign",{"_index":705,"title":{},"body":{"injectables/DemandService.html":{}}}],["isroundabout(edgeid",{"_index":922,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["ital",{"_index":81,"title":{},"body":{"components/AboutComponent.html":{}}}],["item",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["javascript",{"_index":2457,"title":{},"body":{"index.html":{}}}],["js",{"_index":2327,"title":{},"body":{"dependencies.html":{}}}],["junction",{"_index":923,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["k",{"_index":815,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["key",{"_index":826,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"index.html":{}}}],["kind",{"_index":2492,"title":{},"body":{"license.html":{}}}],["know",{"_index":2375,"title":{},"body":{"index.html":{}}}],["ksp(o",{"_index":955,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["l",{"_index":1270,"title":{},"body":{"components/HomeComponent.html":{}}}],["label",{"_index":489,"title":{},"body":{"components/ChartsComponent.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["labels.icon",{"_index":2573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["labelstr",{"_index":2536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["last",{"_index":1101,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"classes/Statistics.html":{}}}],["lat",{"_index":839,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["latitud",{"_index":836,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["latlng",{"_index":1313,"title":{},"body":{"injectables/LocationService.html":{}}}],["layout",{"_index":1745,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["leav",{"_index":1725,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["left",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["legend",{"_index":96,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"modules/DemandModule.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"modules/LocationModule.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"components/WizardComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["legisl",{"_index":1529,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["letter",{"_index":1250,"title":{},"body":{"components/HomeComponent.html":{}}}],["level",{"_index":975,"title":{},"body":{"classes/Edge.html":{},"components/GoogleMapComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["li",{"_index":1129,"title":{},"body":{"components/FooterComponent.html":{}}}],["liabil",{"_index":2503,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":2500,"title":{},"body":{"license.html":{}}}],["licens",{"_index":53,"title":{"license.html":{}},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"components/TermsComponent.html":{},"license.html":{}}}],["limit",{"_index":1094,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"injectables/SchedulerService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["line",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/HomeComponent.html":{}}}],["linear",{"_index":1264,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["link",{"_index":61,"title":{},"body":{"components/AboutComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/FooterComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["linkflow",{"_index":680,"title":{"interfaces/LinkFlow.html":{}},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["linkflows[i].valu",{"_index":736,"title":{},"body":{"injectables/DemandService.html":{}}}],["linkflows[i].vari",{"_index":739,"title":{},"body":{"injectables/DemandService.html":{}}}],["list",{"_index":90,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{}}}],["liter",{"_index":773,"title":{},"body":{"classes/Edge.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/MapChanged.html":{},"classes/Node.html":{},"classes/SimulationChanged.html":{},"classes/StepChanged.html":{}}}],["lng",{"_index":1670,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":240,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["loadchildren",{"_index":260,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loadscript",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["locat",{"_index":1567,"title":{},"body":{"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"injectables/WeatherService.html":{}}}],["location.servic",{"_index":1303,"title":{},"body":{"modules/LocationModule.html":{}}}],["location/location.modul",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["location/location.servic",{"_index":1586,"title":{},"body":{"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"injectables/WeatherService.html":{}}}],["locationmodul",{"_index":197,"title":{"modules/LocationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LocationModule.html":{},"modules.html":{},"overview.html":{}}}],["locationservic",{"_index":1301,"title":{"injectables/LocationService.html":{}},"body":{"modules/LocationModule.html":{},"injectables/LocationService.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"injectables/WeatherService.html":{},"overview.html":{}}}],["login",{"_index":2454,"title":{},"body":{"index.html":{}}}],["logit",{"_index":1004,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["logo",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{}}}],["lon",{"_index":840,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["longitud",{"_index":837,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["ltm",{"_index":1877,"title":{},"body":{"classes/Statistics.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ltmedg",{"_index":1853,"title":{},"body":{"classes/Statistics.html":{}}}],["m",{"_index":412,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"miscellaneous/variables.html":{}}}],["m/",{"_index":785,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{}}}],["m:ss",{"_index":1041,"title":{},"body":{"classes/EnumValues.html":{},"miscellaneous/functions.html":{}}}],["m:ss.mmm",{"_index":1047,"title":{},"body":{"classes/EnumValues.html":{},"miscellaneous/functions.html":{}}}],["macroscop",{"_index":2442,"title":{},"body":{"index.html":{}}}],["maintainaspectratio",{"_index":2533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["make",{"_index":1544,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["manag",{"_index":1417,"title":{},"body":{"interfaces/MapState.html":{},"interfaces/SimulationState.html":{},"interfaces/SimulationState-1.html":{},"interfaces/UiState.html":{},"interfaces/WizardState.html":{},"index.html":{}}}],["map",{"_index":1080,"title":{"interfaces/Map.html":{}},"body":{"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"components/PrivacyComponent.html":{},"classes/Reset-1.html":{},"injectables/SchedulerService.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Step.html":{},"components/TermsComponent.html":{},"interfaces/UiState.html":{},"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["map'},{'nam",{"_index":124,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["map((respons",{"_index":2184,"title":{},"body":{"injectables/WeatherService.html":{}}}],["map.compon",{"_index":2037,"title":{},"body":{"modules/UiModule.html":{}}}],["map.component.html",{"_index":1362,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.scss",{"_index":1361,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.t",{"_index":1153,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:17",{"_index":1168,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:21",{"_index":1185,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:25",{"_index":1170,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:29",{"_index":1173,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:33",{"_index":1179,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:37",{"_index":1181,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:41",{"_index":1182,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:45",{"_index":1176,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:49",{"_index":1165,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:51",{"_index":1194,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:56",{"_index":1192,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:66",{"_index":1191,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:71",{"_index":1188,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.data.bound",{"_index":1722,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["map.data.selectednod",{"_index":1088,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["map.servic",{"_index":1196,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["map.styl",{"_index":1379,"title":{},"body":{"components/MapComponent.html":{}}}],["map/googl",{"_index":2036,"title":{},"body":{"modules/UiModule.html":{}}}],["map/map.compon",{"_index":2035,"title":{},"body":{"modules/UiModule.html":{}}}],["map/map.servic",{"_index":1585,"title":{},"body":{"injectables/SchedulerService.html":{},"modules/UiModule.html":{}}}],["mapact",{"_index":1357,"title":{},"body":{"classes/MapChanged.html":{},"interfaces/MapState.html":{},"classes/Reset-1.html":{},"miscellaneous/typealiases.html":{}}}],["mapactiontyp",{"_index":1355,"title":{},"body":{"classes/MapChanged.html":{},"interfaces/MapState.html":{},"classes/Reset-1.html":{},"miscellaneous/enumerations.html":{}}}],["mapactiontypes.mapchang",{"_index":1354,"title":{},"body":{"classes/MapChanged.html":{},"interfaces/MapState.html":{},"classes/Reset-1.html":{}}}],["mapactiontypes.reset",{"_index":1356,"title":{},"body":{"classes/MapChanged.html":{},"interfaces/MapState.html":{},"classes/Reset-1.html":{}}}],["mapchang",{"_index":1350,"title":{"classes/MapChanged.html":{}},"body":{"classes/MapChanged.html":{},"classes/Reset-1.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["mapcompon",{"_index":129,"title":{"components/MapComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["mapreduc",{"_index":2349,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mapreducer(st",{"_index":1423,"title":{},"body":{"interfaces/MapState.html":{},"miscellaneous/functions.html":{}}}],["mapservic",{"_index":1164,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{},"injectables/SchedulerService.html":{},"modules/UiModule.html":{},"overview.html":{}}}],["mapstat",{"_index":1415,"title":{"interfaces/MapState.html":{}},"body":{"interfaces/MapState.html":{},"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["mapstyl",{"_index":1378,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["maptypeid",{"_index":1160,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["margin",{"_index":93,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["marker",{"_index":843,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["mat",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/PrivacyComponent.html":{},"components/SimulationComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["mat_dialog_data",{"_index":1297,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["mat_snack_bar_data",{"_index":1462,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["matbuttonmodul",{"_index":1436,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matcardmodul",{"_index":1434,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["match",{"_index":155,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"interfaces/SimulationState.html":{},"interfaces/SimulationState-1.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":1952,"title":{},"body":{"components/UiComponent.html":{}}}],["matdialogmodul",{"_index":1444,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matdialogref",{"_index":1292,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["material.modul",{"_index":1746,"title":{},"body":{"modules/SharedModule.html":{}}}],["materialmodul",{"_index":1430,"title":{"modules/MaterialModule.html":{}},"body":{"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["matexpansionmodul",{"_index":1447,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matgridlistmodul",{"_index":1445,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["math.abs(curr",{"_index":1887,"title":{},"body":{"classes/Statistics.html":{}}}],["math.exp",{"_index":1014,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["math.floor(",{"_index":1044,"title":{},"body":{"classes/EnumValues.html":{}}}],["math.floor((m",{"_index":1051,"title":{},"body":{"classes/EnumValues.html":{}}}],["math.floor(m",{"_index":1050,"title":{},"body":{"classes/EnumValues.html":{}}}],["math.pow(bas",{"_index":738,"title":{},"body":{"injectables/DemandService.html":{}}}],["math.trunc(edge.maxflow",{"_index":1884,"title":{},"body":{"classes/Statistics.html":{}}}],["maticonmodul",{"_index":1437,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["maticonregistri",{"_index":1435,"title":{},"body":{"modules/MaterialModule.html":{}}}],["maticonregistry.addsvgicon",{"_index":1451,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodul",{"_index":1440,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matmenumodul",{"_index":1438,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matprogressspinnermodul",{"_index":1442,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matrix",{"_index":666,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{}}}],["matselectmodul",{"_index":1446,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matsidenavmodul",{"_index":1432,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matsnackbar",{"_index":1951,"title":{},"body":{"components/UiComponent.html":{}}}],["matsnackbarmodul",{"_index":1441,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matstepp",{"_index":2217,"title":{},"body":{"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["matsteppermodul",{"_index":1439,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattablemodul",{"_index":1448,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattoolbarmodul",{"_index":1433,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattooltipmodul",{"_index":1443,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":798,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["maxbarthick",{"_index":2544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxdemand",{"_index":2603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxflow",{"_index":755,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["maximum",{"_index":790,"title":{},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["maxodpair",{"_index":2594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxtimeinterv",{"_index":2631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxzoom",{"_index":1161,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["mean",{"_index":823,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"index.html":{}}}],["measur",{"_index":811,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["mediev",{"_index":2392,"title":{},"body":{"index.html":{}}}],["medium",{"_index":2599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["member",{"_index":828,"title":{"interfaces/Member.html":{}},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["memoizedselector",{"_index":1815,"title":{},"body":{"interfaces/SimulationState.html":{},"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["menu",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["merchant",{"_index":2495,"title":{},"body":{"license.html":{}}}],["merg",{"_index":2477,"title":{},"body":{"license.html":{}}}],["messag",{"_index":1612,"title":{},"body":{"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/UiComponent.html":{},"injectables/WizardService.html":{}}}],["messagearchivedcompon",{"_index":130,"title":{"components/MessageArchivedComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["metadata",{"_index":12,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["meter",{"_index":772,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"interfaces/WeatherConditions.html":{}}}],["method",{"_index":22,"title":{},"body":{"components/AboutComponent.html":{},"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"guards/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["metric",{"_index":2179,"title":{},"body":{"injectables/WeatherService.html":{}}}],["middl",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["millimet",{"_index":2113,"title":{},"body":{"interfaces/WeatherConditions.html":{}}}],["millisecond",{"_index":1048,"title":{},"body":{"classes/EnumValues.html":{},"injectables/WeatherService.html":{},"miscellaneous/functions.html":{}}}],["min",{"_index":854,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{}}}],["mindist",{"_index":2591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mindur",{"_index":2593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minimum",{"_index":684,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"components/GoogleMapComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["minzoom",{"_index":1162,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["miscellan",{"_index":2339,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mist",{"_index":2128,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["mit",{"_index":52,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"components/TermsComponent.html":{},"index.html":{},"license.html":{}}}],["mm",{"_index":413,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"miscellaneous/variables.html":{}}}],["mobil",{"_index":2425,"title":{},"body":{"index.html":{}}}],["mode",{"_index":516,"title":{},"body":{"components/ChartsComponent.html":{}}}],["model",{"_index":1005,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Map.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"components/WizardComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["models/actions/simulation.act",{"_index":601,"title":{},"body":{"injectables/ClockService.html":{}}}],["models/actions/wizard.act",{"_index":2274,"title":{},"body":{"injectables/WizardService.html":{}}}],["models/base.compon",{"_index":369,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["models/reduc",{"_index":362,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SimulationModule.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"injectables/WizardService.html":{}}}],["models/reducers/wizard.reduc",{"_index":2275,"title":{},"body":{"injectables/WizardService.html":{}}}],["models/ui",{"_index":1081,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["moder",{"_index":508,"title":{},"body":{"components/ChartsComponent.html":{},"miscellaneous/variables.html":{}}}],["moderatetraff",{"_index":2625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["moderatetrafficchart",{"_index":433,"title":{},"body":{"components/ChartsComponent.html":{}}}],["moderatetrafficcolor",{"_index":2587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["moderatetrafficctx",{"_index":434,"title":{},"body":{"components/ChartsComponent.html":{}}}],["modifi",{"_index":2476,"title":{},"body":{"license.html":{}}}],["modul",{"_index":185,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/MaterialModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"modules/WeatherModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/MaterialModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithprovid",{"_index":1736,"title":{},"body":{"modules/SharedModule.html":{}}}],["moment",{"_index":1707,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["more",{"_index":880,"title":{},"body":{"classes/Edge.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["more_vert",{"_index":1452,"title":{},"body":{"modules/MaterialModule.html":{}}}],["motiv",{"_index":2363,"title":{},"body":{"index.html":{}}}],["mout",{"_index":2318,"title":{},"body":{"dependencies.html":{}}}],["mout/array/combin",{"_index":356,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["mout/lang/deepclon",{"_index":1419,"title":{},"body":{"interfaces/MapState.html":{},"interfaces/SimulationState-1.html":{},"interfaces/WizardState.html":{}}}],["move",{"_index":973,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["ms",{"_index":591,"title":{},"body":{"injectables/ClockService.html":{},"classes/EnumValues.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["multi",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["multinomi",{"_index":1003,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["n",{"_index":741,"title":{},"body":{"injectables/DemandService.html":{}}}],["name",{"_index":106,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"classes/AppPreloadingStrategy.html":{},"guards/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"miscellaneous/functions.html":{}}}],["navig",{"_index":2253,"title":{},"body":{"components/WizardComponent.html":{}}}],["navigate_next",{"_index":415,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{}}}],["navigator.geoloc",{"_index":1681,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["navigator.geolocation.getcurrentposit",{"_index":1345,"title":{},"body":{"injectables/LocationService.html":{}}}],["neighbor",{"_index":971,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["network",{"_index":319,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"index.html":{}}}],["network.servic",{"_index":1470,"title":{},"body":{"modules/NetworkModule.html":{}}}],["network/graph",{"_index":365,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{}}}],["network/network.modul",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["network/network.servic",{"_index":358,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"injectables/SchedulerService.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WeatherComponent.html":{}}}],["network/weather/weath",{"_index":364,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/WeatherComponent.html":{}}}],["network/weather/weather.servic",{"_index":359,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/SchedulerService.html":{},"components/WeatherComponent.html":{}}}],["networkdata",{"_index":2548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["networkmodul",{"_index":198,"title":{"modules/NetworkModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NetworkModule.html":{},"modules.html":{},"overview.html":{}}}],["networkservic",{"_index":320,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"modules/NetworkModule.html":{},"injectables/SchedulerService.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WeatherComponent.html":{},"overview.html":{}}}],["new",{"_index":35,"title":{},"body":{"components/AboutComponent.html":{},"components/ChartsComponent.html":{},"classes/Edge.html":{},"components/FooterComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["next",{"_index":974,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{}}}],["nextdt",{"_index":2198,"title":{},"body":{"injectables/WeatherService.html":{}}}],["nextindex",{"_index":1149,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset-2.html":{},"injectables/SchedulerService.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["ng",{"_index":2021,"title":{},"body":{"modules/UiModule.html":{},"dependencies.html":{}}}],["ngafterviewinit",{"_index":437,"title":{},"body":{"components/ChartsComponent.html":{},"components/HomeComponent.html":{},"components/WeatherComponent.html":{}}}],["ngmodul",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/MaterialModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"modules/WeatherModule.html":{}}}],["ngonchang",{"_index":1156,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["ngonchanges(chang",{"_index":1190,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["ngondestroy",{"_index":271,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{}}}],["ngoninit",{"_index":23,"title":{},"body":{"components/AboutComponent.html":{},"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["ngrx",{"_index":1138,"title":{},"body":{"classes/GoOn.html":{},"classes/MapChanged.html":{},"interfaces/MapState.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"interfaces/SimulationState-1.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["ngrx/store",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"interfaces/SimulationState.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"injectables/WizardService.html":{},"dependencies.html":{}}}],["node",{"_index":746,"title":{"classes/Node.html":{}},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.count",{"_index":980,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.incomingedg",{"_index":903,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.incomingedges.length",{"_index":1099,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["node.j",{"_index":2446,"title":{},"body":{"index.html":{}}}],["node.label",{"_index":933,"title":{},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.label).length",{"_index":1110,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["node.nodeid",{"_index":897,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.outgoingedg",{"_index":906,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.outgoingedges.length",{"_index":1100,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["nodeid",{"_index":838,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["none",{"_index":91,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{}}}],["noninfring",{"_index":2497,"title":{},"body":{"license.html":{}}}],["normal",{"_index":528,"title":{},"body":{"components/ChartsComponent.html":{},"miscellaneous/variables.html":{}}}],["notic",{"_index":2487,"title":{},"body":{"license.html":{}}}],["notrafficcolor",{"_index":2585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["npm",{"_index":2447,"title":{},"body":{"index.html":{}}}],["npm@latest",{"_index":2448,"title":{},"body":{"index.html":{}}}],["null",{"_index":611,"title":{},"body":{"injectables/ClockService.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"injectables/LocationService.html":{},"interfaces/MapState.html":{},"interfaces/SimulationState-1.html":{},"classes/Statistics.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":31,"title":{},"body":{"components/AboutComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"classes/Reset-2.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Simulation.html":{},"components/SimulationComponent.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["numer",{"_index":1012,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{}}}],["numeric'},{'nam",{"_index":134,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["numeric.component.html",{"_index":1482,"title":{},"body":{"components/NumericComponent.html":{}}}],["numeric.component.scss",{"_index":1481,"title":{},"body":{"components/NumericComponent.html":{}}}],["numeric/numeric.compon",{"_index":2039,"title":{},"body":{"modules/UiModule.html":{}}}],["numericalsimul",{"_index":653,"title":{"interfaces/NumericalSimulation.html":{}},"body":{"interfaces/Counts.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{}}}],["numericcompon",{"_index":133,"title":{"components/NumericComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["o",{"_index":407,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["o/d",{"_index":665,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":2531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(e).filter((key",{"_index":1034,"title":{},"body":{"classes/EnumValues.html":{}}}],["observ",{"_index":245,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"injectables/WeatherService.html":{}}}],["observable.create((observ",{"_index":1335,"title":{},"body":{"injectables/LocationService.html":{}}}],["observer.complet",{"_index":1343,"title":{},"body":{"injectables/LocationService.html":{}}}],["observer.error(error",{"_index":1348,"title":{},"body":{"injectables/LocationService.html":{}}}],["observer.error(statu",{"_index":1344,"title":{},"body":{"injectables/LocationService.html":{}}}],["observer.next(posit",{"_index":1346,"title":{},"body":{"injectables/LocationService.html":{}}}],["observer.next(result",{"_index":1342,"title":{},"body":{"injectables/LocationService.html":{}}}],["obtain",{"_index":2166,"title":{},"body":{"injectables/WeatherService.html":{},"index.html":{},"license.html":{}}}],["odmatrix",{"_index":667,"title":{},"body":{"injectables/DemandService.html":{}}}],["odmatrixassign",{"_index":681,"title":{},"body":{"injectables/DemandService.html":{}}}],["odmatrixassignment[n][i",{"_index":742,"title":{},"body":{"injectables/DemandService.html":{}}}],["odpair",{"_index":314,"title":{"interfaces/OdPair.html":{}},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"components/WizardComponent.html":{}}}],["odpair.destin",{"_index":1098,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["odpair.origin",{"_index":1106,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["odpairs.filter(pair",{"_index":1107,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["odpairs.length",{"_index":1092,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["odpairs.map((pair",{"_index":380,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["odpairs[odpairs.length",{"_index":1093,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["odpairs[uiconfig.maxodpair",{"_index":1096,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["odpairscontrol",{"_index":393,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["odpairscontrol.length",{"_index":400,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["odpairscontrol.removeat(i",{"_index":401,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["of(nul",{"_index":250,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["offer",{"_index":2432,"title":{},"body":{"index.html":{}}}],["offici",{"_index":64,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["offset",{"_index":1268,"title":{},"body":{"components/HomeComponent.html":{},"injectables/WeatherService.html":{}}}],["on",{"_index":582,"title":{},"body":{"injectables/ClockService.html":{},"injectables/DemandService.html":{}}}],["onchang",{"_index":1154,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["ondestroy",{"_index":269,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChartsComponent.html":{},"components/UiComponent.html":{}}}],["oneway",{"_index":918,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["oninit",{"_index":11,"title":{},"body":{"components/AboutComponent.html":{},"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["op",{"_index":2003,"title":{},"body":{"components/UiComponent.html":{}}}],["opac",{"_index":1261,"title":{},"body":{"components/HomeComponent.html":{},"components/UiComponent.html":{},"miscellaneous/variables.html":{}}}],["open",{"_index":1625,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["opendialog",{"_index":1946,"title":{},"body":{"components/UiComponent.html":{}}}],["opendialog(data",{"_index":1961,"title":{},"body":{"components/UiComponent.html":{}}}],["opensnackbar",{"_index":1947,"title":{},"body":{"components/UiComponent.html":{}}}],["opensnackbar(messag",{"_index":1963,"title":{},"body":{"components/UiComponent.html":{}}}],["openweathermap",{"_index":2167,"title":{},"body":{"injectables/WeatherService.html":{},"index.html":{}}}],["oper",{"_index":1576,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["option",{"_index":244,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"guards/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"miscellaneous/functions.html":{}}}],["options).pip",{"_index":2183,"title":{},"body":{"injectables/WeatherService.html":{}}}],["order",{"_index":2417,"title":{},"body":{"index.html":{}}}],["origin",{"_index":756,"title":{},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"index.html":{}}}],["originalpath",{"_index":847,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["otherwis",{"_index":2507,"title":{},"body":{"license.html":{}}}],["out",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"license.html":{},"overview.html":{}}}],["outgoingedg",{"_index":842,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["over",{"_index":2402,"title":{},"body":{"index.html":{}}}],["over_query_limit",{"_index":1676,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["overdimens",{"_index":2377,"title":{},"body":{"index.html":{}}}],["overflow",{"_index":2007,"title":{},"body":{"components/UiComponent.html":{}}}],["overview",{"_index":2511,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owl",{"_index":2006,"title":{},"body":{"components/UiComponent.html":{}}}],["owldatetimemodul",{"_index":2019,"title":{},"body":{"modules/UiModule.html":{}}}],["owlnativedatetimemodul",{"_index":2020,"title":{},"body":{"modules/UiModule.html":{}}}],["p",{"_index":80,"title":{},"body":{"components/AboutComponent.html":{}}}],["packag",{"_index":2296,"title":{"dependencies.html":{}},"body":{}}],["pad",{"_index":71,"title":{},"body":{"components/AboutComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/SimulationComponent.html":{},"components/WizardComponent.html":{}}}],["paid",{"_index":1624,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["pair",{"_index":334,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["pair.demand",{"_index":381,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["pair.destin",{"_index":1109,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["pair.origin",{"_index":1108,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["pair.startingtim",{"_index":382,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["pair.value.destin",{"_index":410,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{}}}],["pair.value.origin",{"_index":409,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{}}}],["pairs,paths,edg",{"_index":703,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["pairsvalid",{"_index":2226,"title":{},"body":{"components/WizardComponent.html":{},"miscellaneous/functions.html":{}}}],["panel",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/UiComponent.html":{}}}],["panelclass",{"_index":1993,"title":{},"body":{"components/UiComponent.html":{}}}],["param",{"_index":728,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{}}}],["paramet",{"_index":243,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"guards/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["part",{"_index":1938,"title":{},"body":{"components/TermsComponent.html":{}}}],["particip",{"_index":2371,"title":{},"body":{"index.html":{}}}],["particular",{"_index":824,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"license.html":{}}}],["past",{"_index":1621,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["path",{"_index":255,"title":{"interfaces/Path.html":{}},"body":{"modules/AppRoutingModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"modules/UiRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["path.cost",{"_index":1232,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["path.edg",{"_index":1231,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["path.nod",{"_index":1230,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["path.pathid",{"_index":1229,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["path.t",{"_index":1215,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["path.ts:23",{"_index":1220,"title":{},"body":{"classes/Heap.html":{}}}],["path.ts:29",{"_index":1227,"title":{},"body":{"classes/Heap.html":{}}}],["path.ts:37",{"_index":1225,"title":{},"body":{"classes/Heap.html":{}}}],["path.ts:45",{"_index":1223,"title":{},"body":{"classes/Heap.html":{}}}],["path.ts:49",{"_index":1222,"title":{},"body":{"classes/Heap.html":{}}}],["patha",{"_index":987,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["patha.filter((edgeofa",{"_index":993,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["patha.length",{"_index":997,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["pathb",{"_index":989,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["pathb.find((edgeofb",{"_index":994,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["pathcost",{"_index":1007,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["pathid",{"_index":963,"title":{},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["pathmatch",{"_index":258,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/UiRoutingModule.html":{}}}],["pathtyp",{"_index":819,"title":{},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/enumerations.html":{}}}],["pathtype.dist",{"_index":1118,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["paus",{"_index":561,"title":{},"body":{"injectables/ClockService.html":{},"components/SimulationComponent.html":{},"miscellaneous/enumerations.html":{}}}],["payload",{"_index":639,"title":{},"body":{"injectables/ClockService.html":{},"classes/GoOn.html":{},"classes/MapChanged.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{}}}],["pend",{"_index":1143,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset-2.html":{},"components/SearchForTheAreaComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["peopl",{"_index":2400,"title":{},"body":{"index.html":{}}}],["perfectli",{"_index":2376,"title":{},"body":{"index.html":{}}}],["perform",{"_index":581,"title":{},"body":{"injectables/ClockService.html":{},"injectables/SchedulerService.html":{}}}],["period",{"_index":1513,"title":{},"body":{"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"interfaces/SimulationState.html":{},"interfaces/SimulationState-1.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["periods.simulatedtimeinterv",{"_index":1782,"title":{},"body":{"components/SimulationComponent.html":{}}}],["periods.simulatedtimeperiod",{"_index":1785,"title":{},"body":{"components/SimulationComponent.html":{}}}],["periods.timeinterv",{"_index":1777,"title":{},"body":{"components/SimulationComponent.html":{}}}],["periods.timeperiod",{"_index":1779,"title":{},"body":{"components/SimulationComponent.html":{}}}],["periodschang",{"_index":1507,"title":{"classes/PeriodsChanged.html":{}},"body":{"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["permiss",{"_index":1687,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"license.html":{}}}],["permit",{"_index":2483,"title":{},"body":{"license.html":{}}}],["person",{"_index":1523,"title":{},"body":{"components/PrivacyComponent.html":{},"license.html":{}}}],["pick",{"_index":2022,"title":{},"body":{"modules/UiModule.html":{},"dependencies.html":{}}}],["picker",{"_index":2005,"title":{},"body":{"components/UiComponent.html":{}}}],["place",{"_index":2389,"title":{},"body":{"index.html":{}}}],["plan",{"_index":2424,"title":{},"body":{"index.html":{}}}],["platform",{"_index":2456,"title":{},"body":{"index.html":{}}}],["play_arrow",{"_index":1795,"title":{},"body":{"components/SimulationComponent.html":{}}}],["pleas",{"_index":1548,"title":{},"body":{"components/PrivacyComponent.html":{},"injectables/SchedulerService.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["plugin",{"_index":2324,"title":{},"body":{"dependencies.html":{}}}],["png",{"_index":2107,"title":{},"body":{"components/WeatherComponent.html":{}}}],["poi",{"_index":2572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["point",{"_index":833,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["polici",{"_index":1522,"title":{},"body":{"components/PrivacyComponent.html":{},"components/TermsComponent.html":{}}}],["pollut",{"_index":2420,"title":{},"body":{"index.html":{}}}],["polylin",{"_index":849,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["poorli",{"_index":2600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pop",{"_index":1218,"title":{},"body":{"classes/Heap.html":{}}}],["pop(pathid",{"_index":1224,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["popul",{"_index":2385,"title":{},"body":{"index.html":{}}}],["populatechart",{"_index":438,"title":{},"body":{"components/ChartsComponent.html":{}}}],["portion",{"_index":2490,"title":{},"body":{"license.html":{}}}],["posit",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/HomeComponent.html":{},"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{},"components/UiComponent.html":{}}}],["position.coords.latitud",{"_index":1683,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["position.coords.longitud",{"_index":1684,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["positionerror",{"_index":1347,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["possibl",{"_index":2415,"title":{},"body":{"index.html":{}}}],["predict",{"_index":2433,"title":{},"body":{"index.html":{}}}],["predt",{"_index":2193,"title":{},"body":{"injectables/WeatherService.html":{}}}],["preload",{"_index":235,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{}}}],["preload(rout",{"_index":238,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["preloadingstrategi",{"_index":237,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{}}}],["prerequisit",{"_index":2459,"title":{},"body":{"index.html":{}}}],["presscontrol",{"_index":562,"title":{},"body":{"injectables/ClockService.html":{},"components/SimulationComponent.html":{}}}],["presscontrol(control",{"_index":574,"title":{},"body":{"injectables/ClockService.html":{},"components/SimulationComponent.html":{}}}],["prev",{"_index":1895,"title":{},"body":{"classes/Statistics.html":{}}}],["prev.cost",{"_index":1237,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["prev.heavytrafficcount",{"_index":1891,"title":{},"body":{"classes/Statistics.html":{}}}],["prev.moderatetrafficcount",{"_index":1892,"title":{},"body":{"classes/Statistics.html":{}}}],["primari",{"_index":1272,"title":{},"body":{"components/HomeComponent.html":{}}}],["privaci",{"_index":263,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/PrivacyComponent.html":{},"components/TermsComponent.html":{}}}],["privacy'},{'nam",{"_index":136,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["privacy.component.html",{"_index":1519,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["privacy.component.scss",{"_index":1518,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["privacy/privacy.compon",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["privacycompon",{"_index":135,"title":{"components/PrivacyComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["privat",{"_index":371,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{}}}],["probabl",{"_index":712,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["problem",{"_index":2429,"title":{},"body":{"index.html":{}}}],["process",{"_index":590,"title":{},"body":{"injectables/ClockService.html":{},"components/PrivacyComponent.html":{},"components/StatisticsComponent.html":{},"index.html":{}}}],["processingtim",{"_index":554,"title":{},"body":{"injectables/ClockService.html":{}}}],["product",{"_index":2397,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profil",{"_index":1545,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["project",{"_index":54,"title":{},"body":{"components/AboutComponent.html":{},"injectables/SchedulerService.html":{},"index.html":{}}}],["promis",{"_index":294,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{}}}],["propagateflow",{"_index":589,"title":{},"body":{"injectables/ClockService.html":{}}}],["properti",{"_index":20,"title":{},"body":{"components/AboutComponent.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"interfaces/SimulationState.html":{},"interfaces/SimulationState-1.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["propertynam",{"_index":1199,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["protect",{"_index":761,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["provid",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/NetworkModule.html":{},"components/PrivacyComponent.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"interfaces/WizardState.html":{},"license.html":{},"overview.html":{}}}],["public",{"_index":559,"title":{},"body":{"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"injectables/SchedulerService.html":{},"modules/SharedModule.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"classes/Statistics.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{},"index.html":{}}}],["publish",{"_index":2478,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":877,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"index.html":{},"license.html":{}}}],["pursuant",{"_index":1526,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["push",{"_index":1219,"title":{},"body":{"classes/Heap.html":{}}}],["push(path",{"_index":1226,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["putinerror",{"_index":2256,"title":{},"body":{"injectables/WizardService.html":{}}}],["putinerror(error",{"_index":2264,"title":{},"body":{"injectables/WizardService.html":{}}}],["putonhold",{"_index":2257,"title":{},"body":{"injectables/WizardService.html":{}}}],["putonhold(messag",{"_index":2266,"title":{},"body":{"injectables/WizardService.html":{}}}],["qs",{"_index":2332,"title":{},"body":{"dependencies.html":{}}}],["queue",{"_index":1221,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["quick",{"_index":563,"title":{},"body":{"injectables/ClockService.html":{},"miscellaneous/enumerations.html":{}}}],["quota",{"_index":1622,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["rain",{"_index":2125,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["rainintens",{"_index":2111,"title":{},"body":{"interfaces/WeatherConditions.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["rais",{"_index":2254,"title":{},"body":{"components/WizardComponent.html":{}}}],["rate",{"_index":2613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reactiveformsmodul",{"_index":1742,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["readonli",{"_index":1133,"title":{},"body":{"classes/GoOn.html":{},"classes/MapChanged.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{}}}],["real",{"_index":48,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["realiti",{"_index":2431,"title":{},"body":{"index.html":{}}}],["receiveact",{"_index":272,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["rectangl",{"_index":1388,"title":{},"body":{"components/MapComponent.html":{}}}],["redirectto",{"_index":256,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reduc",{"_index":1422,"title":{},"body":{"interfaces/MapState.html":{},"modules/SimulationModule.html":{},"interfaces/SimulationState.html":{},"interfaces/SimulationState-1.html":{},"modules/UiModule.html":{},"interfaces/UiState.html":{},"interfaces/WizardState.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["reducers/map.reduc",{"_index":2053,"title":{},"body":{"interfaces/UiState.html":{}}}],["reducers/simulation.reduc",{"_index":1816,"title":{},"body":{"interfaces/SimulationState.html":{}}}],["reducers/wizard.reduc",{"_index":2051,"title":{},"body":{"interfaces/UiState.html":{}}}],["reduct",{"_index":2136,"title":{},"body":{"injectables/WeatherService.html":{}}}],["ref",{"_index":829,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["refer",{"_index":1549,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["regul",{"_index":1533,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["rel",{"_index":1276,"title":{},"body":{"components/HomeComponent.html":{},"components/UiComponent.html":{}}}],["relat",{"_index":876,"title":{"classes/Relation.html":{}},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["relation'",{"_index":827,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["relationid",{"_index":881,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["relationship",{"_index":879,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["releas",{"_index":1939,"title":{},"body":{"components/TermsComponent.html":{}}}],["remain",{"_index":1539,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["remov",{"_index":981,"title":{},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{}}}],["removefromerror",{"_index":2258,"title":{},"body":{"injectables/WizardService.html":{}}}],["removefromwait",{"_index":2259,"title":{},"body":{"injectables/WizardService.html":{}}}],["render",{"_index":2072,"title":{},"body":{"components/WeatherComponent.html":{}}}],["renderer2",{"_index":2075,"title":{},"body":{"components/WeatherComponent.html":{}}}],["replac",{"_index":2410,"title":{},"body":{"index.html":{}}}],["repositori",{"_index":62,"title":{},"body":{"components/AboutComponent.html":{}}}],["repres",{"_index":831,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["request",{"_index":1680,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["request_deni",{"_index":1677,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["requir",{"_index":1166,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{},"index.html":{}}}],["reset",{"_index":202,"title":{"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{}},"body":{"modules/AppModule.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/ClockService.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"modules/NetworkModule.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"injectables/SchedulerService.html":{},"modules/SharedModule.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["resetcondit",{"_index":2070,"title":{},"body":{"components/WeatherComponent.html":{}}}],["resetcount",{"_index":979,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["resourc",{"_index":2135,"title":{},"body":{"injectables/WeatherService.html":{}}}],["respons",{"_index":1305,"title":{},"body":{"injectables/LocationService.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["restrict",{"_index":2474,"title":{},"body":{"license.html":{}}}],["result",{"_index":154,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"interfaces/SimulationState.html":{},"interfaces/SimulationState-1.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results[0].geometry.location.lat",{"_index":1669,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["results[0].geometry.location.lng",{"_index":1671,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["retriev",{"_index":1614,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["return",{"_index":28,"title":{},"body":{"components/AboutComponent.html":{},"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"interfaces/SimulationState-1.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["rgba(255,255,255,1.0",{"_index":526,"title":{},"body":{"components/ChartsComponent.html":{}}}],["right",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/HomeComponent.html":{},"components/WizardComponent.html":{},"license.html":{}}}],["road",{"_index":2366,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["roadmap",{"_index":1177,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["roberto",{"_index":103,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"license.html":{}}}],["roberto&nbsp;simonetti",{"_index":51,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{}}}],["role",{"_index":830,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["roman",{"_index":2391,"title":{},"body":{"index.html":{}}}],["root",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'nam",{"_index":109,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["round",{"_index":716,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"miscellaneous/functions.html":{}}}],["round(1",{"_index":871,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["round(exps[z][n",{"_index":1019,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["round(factor",{"_index":2199,"title":{},"body":{"injectables/WeatherService.html":{}}}],["round(maxflow",{"_index":870,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["round(sum",{"_index":740,"title":{},"body":{"injectables/DemandService.html":{}}}],["round(this.dens",{"_index":866,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["round(this.dist",{"_index":857,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["round(this.getkjam",{"_index":864,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["round(valu",{"_index":2359,"title":{},"body":{"miscellaneous/functions.html":{}}}],["roundabout",{"_index":924,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["rout",{"_index":239,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{}}}],["route.data",{"_index":248,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["route.data.preload",{"_index":249,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["router",{"_index":1949,"title":{},"body":{"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["routermodul",{"_index":252,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UiRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["routermodule.forchild",{"_index":2044,"title":{},"body":{"modules/UiRoutingModule.html":{}}}],["routermodule.forroot",{"_index":254,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.modul",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"modules/UiModule.html":{}}}],["routing.module.t",{"_index":251,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/UiRoutingModule.html":{}}}],["row",{"_index":1504,"title":{},"body":{"components/NumericComponent.html":{}}}],["run",{"_index":594,"title":{},"body":{"injectables/ClockService.html":{},"index.html":{}}}],["rxj",{"_index":247,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"injectables/WeatherService.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":597,"title":{},"body":{"injectables/ClockService.html":{},"injectables/SchedulerService.html":{},"components/UiComponent.html":{},"injectables/WeatherService.html":{}}}],["s",{"_index":1042,"title":{},"body":{"classes/EnumValues.html":{},"components/NumericComponent.html":{},"components/SimulationComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["s/end.html\">renderer2",{"_index":2073,"title":{},"body":{"components/WeatherComponent.html":{}}}],["s/map.html\">google.maps.latlngliter",{"_index":1329,"title":{},"body":{"injectables/LocationService.html":{}}}],["same",{"_index":1105,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"index.html":{}}}],["save",{"_index":1542,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["scale",{"_index":1259,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["scaleid",{"_index":518,"title":{},"body":{"components/ChartsComponent.html":{}}}],["scalelabel",{"_index":2535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scalex",{"_index":1266,"title":{},"body":{"components/HomeComponent.html":{}}}],["scatter",{"_index":2120,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["scatteredcloud",{"_index":2119,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["schedul",{"_index":1955,"title":{},"body":{"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["scheduledemand",{"_index":1563,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["scheduledemand(data",{"_index":1572,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["schedulenetwork",{"_index":1564,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["schedulenetwork(data",{"_index":1578,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["scheduler.servic",{"_index":2225,"title":{},"body":{"components/WizardComponent.html":{}}}],["schedulerservic",{"_index":1561,"title":{"injectables/SchedulerService.html":{}},"body":{"injectables/SchedulerService.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["schedulesimul",{"_index":1565,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["schedulesimulation(data",{"_index":1582,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["search",{"_index":138,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["search(address",{"_index":1659,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["searchfortheareacompon",{"_index":137,"title":{"components/SearchForTheAreaComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["second",{"_index":715,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["secondari",{"_index":2001,"title":{},"body":{"components/UiComponent.html":{}}}],["select",{"_index":141,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"miscellaneous/variables.html":{}}}],["selectionchang",{"_index":2216,"title":{},"body":{"components/WizardComponent.html":{}}}],["selectionoftheareacompon",{"_index":140,"title":{"components/SelectionOfTheAreaComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["selector",{"_index":13,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["sell",{"_index":2482,"title":{},"body":{"license.html":{}}}],["sendact",{"_index":273,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["sensor",{"_index":2441,"title":{},"body":{"index.html":{}}}],["sent",{"_index":281,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["sequenc",{"_index":1574,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["serve:devapp",{"_index":2464,"title":{},"body":{"index.html":{}}}],["servic",{"_index":377,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"injectables/LocationService.html":{},"components/PrivacyComponent.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/TermsComponent.html":{}}}],["set",{"_index":629,"title":{},"body":{"injectables/ClockService.html":{},"classes/Edge.html":{},"components/GoogleMapComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["set('appid",{"_index":2180,"title":{},"body":{"injectables/WeatherService.html":{}}}],["set('lat",{"_index":2174,"title":{},"body":{"injectables/WeatherService.html":{}}}],["set('lon",{"_index":2176,"title":{},"body":{"injectables/WeatherService.html":{}}}],["set('unit",{"_index":2178,"title":{},"body":{"injectables/WeatherService.html":{}}}],["setcondit",{"_index":2071,"title":{},"body":{"components/WeatherComponent.html":{}}}],["setconditions(weath",{"_index":2084,"title":{},"body":{"components/WeatherComponent.html":{}}}],["setlatlng",{"_index":1317,"title":{},"body":{"injectables/LocationService.html":{}}}],["setlatlng(latlng",{"_index":1328,"title":{},"body":{"injectables/LocationService.html":{}}}],["settimeout",{"_index":1588,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["shall",{"_index":2488,"title":{},"body":{"license.html":{}}}],["shared/can",{"_index":1971,"title":{},"body":{"components/UiComponent.html":{},"modules/UiRoutingModule.html":{}}}],["shared/info",{"_index":1974,"title":{},"body":{"components/UiComponent.html":{}}}],["shared/messag",{"_index":1973,"title":{},"body":{"components/UiComponent.html":{}}}],["shared/shared.modul",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"modules/UiModule.html":{}}}],["sharededg",{"_index":992,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["sharededges.length",{"_index":998,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["sharedmodul",{"_index":199,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["sharedmodule.forroot",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["shortest",{"_index":816,"title":{},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["shortestpath",{"_index":886,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["shortestpaths.length",{"_index":986,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["shortestpaths[i",{"_index":990,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["shortestpaths[i].edg",{"_index":988,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["shortestpathsprob",{"_index":949,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["shortestpathsprobabilities[z].push(p",{"_index":1022,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["show",{"_index":1241,"title":{},"body":{"components/HomeComponent.html":{},"components/MapComponent.html":{}}}],["shower",{"_index":2124,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["showerrain",{"_index":2123,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["shows/hid",{"_index":1408,"title":{},"body":{"components/MapComponent.html":{}}}],["sign",{"_index":2395,"title":{},"body":{"index.html":{}}}],["simonetti",{"_index":104,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"license.html":{}}}],["simplechang",{"_index":1195,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["simul",{"_index":45,"title":{"interfaces/Simulation.html":{}},"body":{"components/AboutComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"components/HomeComponent.html":{},"injectables/LocationService.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"interfaces/SimulationState.html":{},"interfaces/SimulationState-1.html":{},"components/StatisticsComponent.html":{},"components/WizardComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["simulatedtimeinterv",{"_index":555,"title":{},"body":{"injectables/ClockService.html":{},"components/SimulationComponent.html":{},"miscellaneous/variables.html":{}}}],["simulatedtimeperiod",{"_index":556,"title":{},"body":{"injectables/ClockService.html":{},"components/SimulationComponent.html":{}}}],["simulation'},{'nam",{"_index":143,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["simulation.avgspe",{"_index":1790,"title":{},"body":{"components/SimulationComponent.html":{}}}],["simulation.component.html",{"_index":1756,"title":{},"body":{"components/SimulationComponent.html":{}}}],["simulation.component.scss",{"_index":1755,"title":{},"body":{"components/SimulationComponent.html":{}}}],["simulation.count",{"_index":1788,"title":{},"body":{"components/SimulationComponent.html":{}}}],["simulation.data",{"_index":1493,"title":{},"body":{"components/NumericComponent.html":{}}}],["simulation.servic",{"_index":598,"title":{},"body":{"injectables/ClockService.html":{},"modules/SimulationModule.html":{}}}],["simulation/clock.servic",{"_index":1587,"title":{},"body":{"injectables/SchedulerService.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{}}}],["simulation/models/reduc",{"_index":1490,"title":{},"body":{"components/NumericComponent.html":{},"components/SimulationComponent.html":{}}}],["simulation/models/simul",{"_index":1491,"title":{},"body":{"components/NumericComponent.html":{},"components/SimulationComponent.html":{}}}],["simulation/simulation.modul",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["simulation/simulation.servic",{"_index":465,"title":{},"body":{"components/ChartsComponent.html":{},"injectables/SchedulerService.html":{},"components/StatisticsComponent.html":{}}}],["simulation?').pip",{"_index":1985,"title":{},"body":{"components/UiComponent.html":{}}}],["simulation?').subscrib",{"_index":1989,"title":{},"body":{"components/UiComponent.html":{}}}],["simulationact",{"_index":1516,"title":{},"body":{"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"interfaces/SimulationState-1.html":{},"miscellaneous/typealiases.html":{}}}],["simulationactiontyp",{"_index":600,"title":{},"body":{"injectables/ClockService.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"interfaces/SimulationState-1.html":{},"miscellaneous/enumerations.html":{}}}],["simulationactiontypes.periodschang",{"_index":638,"title":{},"body":{"injectables/ClockService.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"interfaces/SimulationState-1.html":{}}}],["simulationactiontypes.reset",{"_index":1515,"title":{},"body":{"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"interfaces/SimulationState-1.html":{}}}],["simulationactiontypes.simulationchang",{"_index":1514,"title":{},"body":{"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"interfaces/SimulationState-1.html":{}}}],["simulationactiontypes.simulationend",{"_index":640,"title":{},"body":{"injectables/ClockService.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"interfaces/SimulationState-1.html":{}}}],["simulationchang",{"_index":1511,"title":{"classes/SimulationChanged.html":{}},"body":{"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["simulationcompon",{"_index":142,"title":{"components/SimulationComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["simulationend",{"_index":1512,"title":{"classes/SimulationEnded.html":{}},"body":{"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["simulationmodul",{"_index":200,"title":{"modules/SimulationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SimulationModule.html":{},"modules.html":{},"overview.html":{}}}],["simulationreduc",{"_index":2352,"title":{},"body":{"miscellaneous/functions.html":{}}}],["simulationreducer(st",{"_index":1827,"title":{},"body":{"interfaces/SimulationState-1.html":{},"miscellaneous/functions.html":{}}}],["simulationservic",{"_index":444,"title":{},"body":{"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/SchedulerService.html":{},"modules/SimulationModule.html":{},"components/StatisticsComponent.html":{},"overview.html":{}}}],["simulationst",{"_index":1809,"title":{"interfaces/SimulationState.html":{},"interfaces/SimulationState-1.html":{}},"body":{"interfaces/SimulationState.html":{},"interfaces/SimulationState-1.html":{},"miscellaneous/variables.html":{}}}],["simulationstatist",{"_index":1913,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["simulationstatistics.totalavgspe",{"_index":1922,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["situat",{"_index":2414,"title":{},"body":{"index.html":{}}}],["size",{"_index":82,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/NumericComponent.html":{},"components/SimulationComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["ski",{"_index":2115,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["skip_next",{"_index":1797,"title":{},"body":{"components/SimulationComponent.html":{}}}],["slow",{"_index":564,"title":{},"body":{"injectables/ClockService.html":{},"miscellaneous/enumerations.html":{}}}],["snack",{"_index":131,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["snackbar",{"_index":1950,"title":{},"body":{"components/UiComponent.html":{}}}],["snow",{"_index":2127,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["snowintens",{"_index":2112,"title":{},"body":{"interfaces/WeatherConditions.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["softwar",{"_index":2421,"title":{},"body":{"index.html":{},"license.html":{}}}],["solut",{"_index":2428,"title":{},"body":{"index.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"interfaces/SimulationState.html":{},"interfaces/SimulationState-1.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["sp",{"_index":2597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["space",{"_index":2595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specif",{"_index":832,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["speed",{"_index":658,"title":{},"body":{"interfaces/Counts.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Simulation.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{}}}],["squar",{"_index":702,"title":{},"body":{"injectables/DemandService.html":{}}}],["src",{"_index":2358,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../chart",{"_index":2519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../clock.service.t",{"_index":2341,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.prod.t",{"_index":2523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":2524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.test.t",{"_index":2522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../graph.t",{"_index":2343,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../home.transition.t",{"_index":2525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../map.actions.t",{"_index":2342,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../map.reducer.t",{"_index":2350,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../map.style.t",{"_index":2526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../material.module.t",{"_index":2527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../pairs.directive.t",{"_index":2351,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../reducers.t",{"_index":2521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../shared.module.t",{"_index":2528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../simulation.actions.t",{"_index":2344,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../simulation.reducer.t",{"_index":2353,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../ui",{"_index":2529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../utils.t",{"_index":2347,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../weather.t",{"_index":2345,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../wizard.actions.t",{"_index":2346,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../wizard.reducer.t",{"_index":2355,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/about/about.component.t",{"_index":9,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/about/about.component.ts:10",{"_index":26,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/about/about.component.ts:14",{"_index":27,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/app",{"_index":234,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"index.html":{}}}],["src/app/app.component.t",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/demand/demand.module.t",{"_index":662,"title":{},"body":{"modules/DemandModule.html":{}}}],["src/app/demand/demand.service.t",{"_index":664,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:104",{"_index":694,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:121",{"_index":711,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:136",{"_index":706,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:17",{"_index":714,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:22",{"_index":678,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:26",{"_index":709,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:33",{"_index":687,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:45",{"_index":696,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:49",{"_index":690,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:55",{"_index":697,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:59",{"_index":692,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:71",{"_index":700,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:85",{"_index":682,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/home/home.component.t",{"_index":1238,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:15",{"_index":1242,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:19",{"_index":1244,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:23",{"_index":1243,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.transition.t",{"_index":2560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/location/location.module.t",{"_index":1302,"title":{},"body":{"modules/LocationModule.html":{}}}],["src/app/location/location.service.t",{"_index":1304,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:15",{"_index":1332,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:17",{"_index":1318,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:25",{"_index":1327,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:33",{"_index":1320,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:53",{"_index":1324,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:68",{"_index":1326,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:72",{"_index":1330,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/network/graph.t",{"_index":743,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/network/graph.ts:101",{"_index":791,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:103",{"_index":769,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:105",{"_index":792,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:110",{"_index":770,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:115",{"_index":775,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:120",{"_index":776,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:125",{"_index":783,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:130",{"_index":793,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:132",{"_index":768,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:134",{"_index":782,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:139",{"_index":787,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:144",{"_index":789,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:146",{"_index":774,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:152",{"_index":767,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:161",{"_index":795,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:192",{"_index":797,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:200",{"_index":809,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:204",{"_index":808,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:208",{"_index":806,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:212",{"_index":804,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:225",{"_index":1554,"title":{},"body":{"classes/Relation.html":{}}}],["src/app/network/graph.ts:227",{"_index":1553,"title":{},"body":{"classes/Relation.html":{}}}],["src/app/network/graph.ts:229",{"_index":1552,"title":{},"body":{"classes/Relation.html":{}}}],["src/app/network/graph.ts:65",{"_index":1477,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:67",{"_index":1474,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:69",{"_index":1475,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:71",{"_index":1476,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:73",{"_index":1479,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:75",{"_index":1473,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:77",{"_index":1478,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:79",{"_index":1472,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:84",{"_index":1471,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:97",{"_index":781,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:99",{"_index":786,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/k",{"_index":1214,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["src/app/network/network.module.t",{"_index":1468,"title":{},"body":{"modules/NetworkModule.html":{}}}],["src/app/network/weather/weather.module.t",{"_index":2131,"title":{},"body":{"modules/WeatherModule.html":{}}}],["src/app/network/weather/weather.service.t",{"_index":2133,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:104",{"_index":2149,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:114",{"_index":2151,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:133",{"_index":2163,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:18",{"_index":2146,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:22",{"_index":2161,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:26",{"_index":2156,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:34",{"_index":2158,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:55",{"_index":2165,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:82",{"_index":2154,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:96",{"_index":2155,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.t",{"_index":2110,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/privacy/privacy.component.t",{"_index":1517,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["src/app/privacy/privacy.component.ts:12",{"_index":1521,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["src/app/privacy/privacy.component.ts:8",{"_index":1520,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["src/app/shared/can",{"_index":289,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{}}}],["src/app/shared/footer/footer.component.t",{"_index":1121,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/footer/footer.component.ts:10",{"_index":1126,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/footer/footer.component.ts:12",{"_index":1125,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/info",{"_index":1286,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["src/app/shared/material.module.t",{"_index":1431,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/messag",{"_index":1455,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["src/app/shared/shared.module.t",{"_index":1734,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["src/app/simulation/clock.service.t",{"_index":551,"title":{},"body":{"injectables/ClockService.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/simulation/clock.service.ts:103",{"_index":579,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:115",{"_index":573,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:121",{"_index":583,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:141",{"_index":580,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:148",{"_index":578,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:163",{"_index":576,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:180",{"_index":571,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:195",{"_index":584,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:26",{"_index":593,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:31",{"_index":592,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:36",{"_index":586,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:41",{"_index":588,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:43",{"_index":595,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:45",{"_index":585,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:47",{"_index":570,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:60",{"_index":577,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:70",{"_index":575,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:93",{"_index":572,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/models/actions/simulation.actions.t",{"_index":1508,"title":{},"body":{"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/simulation/models/actions/simulation.actions.ts:19",{"_index":1752,"title":{},"body":{"classes/SimulationChanged.html":{}}}],["src/app/simulation/models/actions/simulation.actions.ts:21",{"_index":1753,"title":{},"body":{"classes/SimulationChanged.html":{}}}],["src/app/simulation/models/actions/simulation.actions.ts:27",{"_index":1802,"title":{},"body":{"classes/SimulationEnded.html":{}}}],["src/app/simulation/models/actions/simulation.actions.ts:29",{"_index":1803,"title":{},"body":{"classes/SimulationEnded.html":{}}}],["src/app/simulation/models/actions/simulation.actions.ts:35",{"_index":1509,"title":{},"body":{"classes/PeriodsChanged.html":{}}}],["src/app/simulation/models/actions/simulation.actions.ts:37",{"_index":1510,"title":{},"body":{"classes/PeriodsChanged.html":{}}}],["src/app/simulation/models/actions/simulation.actions.ts:43",{"_index":1555,"title":{},"body":{"classes/Reset.html":{}}}],["src/app/simulation/models/actions/simulation.actions.ts:45",{"_index":1556,"title":{},"body":{"classes/Reset.html":{}}}],["src/app/simulation/models/reducers.t",{"_index":1810,"title":{},"body":{"interfaces/SimulationState.html":{},"miscellaneous/variables.html":{}}}],["src/app/simulation/models/reducers/simulation.reducer.t",{"_index":1824,"title":{},"body":{"interfaces/SimulationState-1.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/simulation/models/simul",{"_index":649,"title":{},"body":{"interfaces/Counts.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{}}}],["src/app/simulation/simulation.module.t",{"_index":1806,"title":{},"body":{"modules/SimulationModule.html":{}}}],["src/app/simulation/statistics.t",{"_index":1838,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:12",{"_index":1872,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:16",{"_index":1864,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:20",{"_index":1874,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:24",{"_index":1862,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:29",{"_index":1858,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:34",{"_index":1856,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:41",{"_index":1860,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:66",{"_index":1866,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:70",{"_index":1870,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:74",{"_index":1854,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:8",{"_index":1868,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:80",{"_index":1876,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/terms/terms.component.t",{"_index":1930,"title":{},"body":{"components/TermsComponent.html":{}}}],["src/app/terms/terms.component.ts:12",{"_index":1934,"title":{},"body":{"components/TermsComponent.html":{}}}],["src/app/terms/terms.component.ts:8",{"_index":1933,"title":{},"body":{"components/TermsComponent.html":{}}}],["src/app/ui/charts/chart",{"_index":2530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/ui/charts/charts.component.t",{"_index":424,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:131",{"_index":450,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:137",{"_index":455,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:180",{"_index":454,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:186",{"_index":453,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:22",{"_index":461,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:24",{"_index":463,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:26",{"_index":459,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:28",{"_index":460,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:30",{"_index":462,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:32",{"_index":457,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:34",{"_index":445,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:44",{"_index":449,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:48",{"_index":447,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:54",{"_index":448,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:63",{"_index":456,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:67",{"_index":451,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:78",{"_index":452,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:82",{"_index":446,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/directives/pairs.directive.t",{"_index":2361,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/ui/map/googl",{"_index":1152,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["src/app/ui/map/map.component.t",{"_index":1358,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:128",{"_index":1366,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:24",{"_index":1368,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:27",{"_index":1376,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:29",{"_index":1369,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:30",{"_index":1370,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:31",{"_index":1372,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:32",{"_index":1373,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:33",{"_index":1374,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:34",{"_index":1371,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:35",{"_index":1375,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:37",{"_index":1363,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:55",{"_index":1364,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:60",{"_index":1367,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:64",{"_index":1365,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.style.t",{"_index":2566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/ui/models/actions/map.actions.t",{"_index":1351,"title":{},"body":{"classes/MapChanged.html":{},"classes/Reset-1.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/ui/models/actions/map.actions.ts:17",{"_index":1352,"title":{},"body":{"classes/MapChanged.html":{}}}],["src/app/ui/models/actions/map.actions.ts:19",{"_index":1353,"title":{},"body":{"classes/MapChanged.html":{}}}],["src/app/ui/models/actions/map.actions.ts:25",{"_index":1557,"title":{},"body":{"classes/Reset-1.html":{}}}],["src/app/ui/models/actions/map.actions.ts:27",{"_index":1558,"title":{},"body":{"classes/Reset-1.html":{}}}],["src/app/ui/models/actions/wizard.actions.t",{"_index":1132,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset-2.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:20",{"_index":1924,"title":{},"body":{"classes/StepChanged.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:22",{"_index":1925,"title":{},"body":{"classes/StepChanged.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:28",{"_index":1926,"title":{},"body":{"classes/StepError.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:30",{"_index":1927,"title":{},"body":{"classes/StepError.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:36",{"_index":1928,"title":{},"body":{"classes/StepPending.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:38",{"_index":1929,"title":{},"body":{"classes/StepPending.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:44",{"_index":1135,"title":{},"body":{"classes/GoOn.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:46",{"_index":1136,"title":{},"body":{"classes/GoOn.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:52",{"_index":1559,"title":{},"body":{"classes/Reset-2.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:54",{"_index":1560,"title":{},"body":{"classes/Reset-2.html":{}}}],["src/app/ui/models/base.component.t",{"_index":266,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/base.component.ts:11",{"_index":277,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/base.component.ts:13",{"_index":276,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/base.component.ts:22",{"_index":283,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/base.component.ts:27",{"_index":278,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/base.component.ts:32",{"_index":282,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/base.component.ts:9",{"_index":275,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/reducers.t",{"_index":2046,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["src/app/ui/models/reducers/map.reducer.t",{"_index":1416,"title":{},"body":{"interfaces/MapState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/ui/models/reducers/wizard.reducer.t",{"_index":2279,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/ui/models/ui",{"_index":1349,"title":{},"body":{"interfaces/Map.html":{},"interfaces/Step.html":{},"miscellaneous/variables.html":{}}}],["src/app/ui/numeric/numeric.component.t",{"_index":1480,"title":{},"body":{"components/NumericComponent.html":{}}}],["src/app/ui/numeric/numeric.component.ts:17",{"_index":1489,"title":{},"body":{"components/NumericComponent.html":{}}}],["src/app/ui/numeric/numeric.component.ts:19",{"_index":1484,"title":{},"body":{"components/NumericComponent.html":{}}}],["src/app/ui/numeric/numeric.component.ts:27",{"_index":1485,"title":{},"body":{"components/NumericComponent.html":{}}}],["src/app/ui/numeric/numeric.component.ts:32",{"_index":1488,"title":{},"body":{"components/NumericComponent.html":{}}}],["src/app/ui/numeric/numeric.component.ts:36",{"_index":1486,"title":{},"body":{"components/NumericComponent.html":{}}}],["src/app/ui/numeric/numeric.component.ts:44",{"_index":1487,"title":{},"body":{"components/NumericComponent.html":{}}}],["src/app/ui/ui",{"_index":2043,"title":{},"body":{"modules/UiRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["src/app/ui/ui.component.t",{"_index":1943,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:102",{"_index":1958,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:106",{"_index":1964,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:114",{"_index":1962,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:24",{"_index":1968,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:26",{"_index":1966,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:28",{"_index":1967,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:30",{"_index":1969,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:32",{"_index":1956,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:43",{"_index":1960,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:77",{"_index":1959,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:83",{"_index":1957,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:93",{"_index":1965,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.module.t",{"_index":2018,"title":{},"body":{"modules/UiModule.html":{}}}],["src/app/ui/utils.t",{"_index":1024,"title":{},"body":{"classes/EnumValues.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/ui/utils.ts:5",{"_index":1029,"title":{},"body":{"classes/EnumValues.html":{}}}],["src/app/ui/utils.ts:9",{"_index":1031,"title":{},"body":{"classes/EnumValues.html":{}}}],["src/app/ui/weather/weather.component.t",{"_index":2065,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:20",{"_index":2087,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:22",{"_index":2089,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:24",{"_index":2088,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:26",{"_index":2074,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:38",{"_index":2080,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:43",{"_index":2079,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:47",{"_index":2086,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:51",{"_index":2081,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:69",{"_index":2083,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:73",{"_index":2085,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:80",{"_index":2082,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:89",{"_index":2077,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/wizard/chang",{"_index":301,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["src/app/ui/wizard/estim",{"_index":1054,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["src/app/ui/wizard/scheduler.service.t",{"_index":1562,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["src/app/ui/wizard/scheduler.service.ts:125",{"_index":1573,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["src/app/ui/wizard/scheduler.service.ts:13",{"_index":1569,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["src/app/ui/wizard/scheduler.service.ts:181",{"_index":1583,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["src/app/ui/wizard/scheduler.service.ts:29",{"_index":1570,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["src/app/ui/wizard/scheduler.service.ts:53",{"_index":1579,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["src/app/ui/wizard/search",{"_index":1649,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["src/app/ui/wizard/select",{"_index":1696,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.t",{"_index":1754,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:100",{"_index":1762,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:22",{"_index":1759,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:24",{"_index":1760,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:26",{"_index":1771,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:28",{"_index":1772,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:30",{"_index":1769,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:32",{"_index":1770,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:34",{"_index":1767,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:36",{"_index":1766,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:38",{"_index":1768,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:40",{"_index":1758,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:50",{"_index":1761,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:56",{"_index":1765,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:60",{"_index":1763,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:96",{"_index":1764,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.t",{"_index":1898,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:21",{"_index":1904,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:23",{"_index":1905,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:25",{"_index":1912,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:27",{"_index":1911,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:29",{"_index":1910,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:31",{"_index":1903,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:42",{"_index":1906,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:48",{"_index":1909,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:52",{"_index":1907,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:67",{"_index":1908,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/wizard.component.t",{"_index":2202,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:119",{"_index":2210,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:20",{"_index":2219,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:22",{"_index":2220,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:24",{"_index":2222,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:26",{"_index":2209,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:35",{"_index":2211,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:92",{"_index":2214,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.service.t",{"_index":2255,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:12",{"_index":2273,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:14",{"_index":2261,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:22",{"_index":2270,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:31",{"_index":2272,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:38",{"_index":2265,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:45",{"_index":2267,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:52",{"_index":2268,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:59",{"_index":2269,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:66",{"_index":2263,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/utils.t",{"_index":2356,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/environments/environment.prod.t",{"_index":2550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":2556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/environments/environment.test.t",{"_index":2546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start",{"_index":565,"title":{"index.html":{},"license.html":{}},"body":{"injectables/ClockService.html":{},"injectables/DemandService.html":{},"components/HomeComponent.html":{},"components/SimulationComponent.html":{},"miscellaneous/enumerations.html":{}}}],["startedvehicl",{"_index":652,"title":{},"body":{"interfaces/Counts.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{}}}],["startingtim",{"_index":329,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{}}}],["startingtimes.length",{"_index":727,"title":{},"body":{"injectables/DemandService.html":{}}}],["starttest",{"_index":2465,"title":{},"body":{"index.html":{}}}],["starttim",{"_index":643,"title":{},"body":{"injectables/ClockService.html":{}}}],["state",{"_index":636,"title":{},"body":{"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"components/NumericComponent.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"interfaces/SimulationState.html":{},"interfaces/SimulationState-1.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["state.currentstep",{"_index":2291,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["state.end",{"_index":1836,"title":{},"body":{"interfaces/SimulationState-1.html":{},"miscellaneous/variables.html":{}}}],["state.error",{"_index":2293,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["state.map",{"_index":1426,"title":{},"body":{"interfaces/MapState.html":{},"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["state.pend",{"_index":2295,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["state.period",{"_index":1832,"title":{},"body":{"interfaces/SimulationState-1.html":{},"miscellaneous/variables.html":{}}}],["state.simul",{"_index":1820,"title":{},"body":{"interfaces/SimulationState.html":{},"interfaces/SimulationState-1.html":{},"miscellaneous/variables.html":{}}}],["state.step",{"_index":2289,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["state.steps[action.payload.index",{"_index":2284,"title":{},"body":{"interfaces/WizardState.html":{}}}],["state.t",{"_index":650,"title":{},"body":{"interfaces/Counts.html":{},"interfaces/Map.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{},"interfaces/Step.html":{},"miscellaneous/variables.html":{}}}],["state.wizard",{"_index":2059,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["static",{"_index":1025,"title":{},"body":{"classes/EnumValues.html":{},"modules/SharedModule.html":{},"classes/Statistics.html":{}}}],["statist",{"_index":435,"title":{"classes/Statistics.html":{}},"body":{"components/ChartsComponent.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{},"index.html":{}}}],["statistics'},{'nam",{"_index":145,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["statistics.component.html",{"_index":1900,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["statistics.component.scss",{"_index":1899,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["statisticscompon",{"_index":144,"title":{"components/StatisticsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["statu",{"_index":1339,"title":{},"body":{"injectables/LocationService.html":{}}}],["step",{"_index":566,"title":{"interfaces/Step.html":{}},"body":{"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"interfaces/Map.html":{},"components/MapComponent.html":{},"classes/Reset-2.html":{},"components/SearchForTheAreaComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/UiState.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["stepchang",{"_index":1140,"title":{"classes/StepChanged.html":{}},"body":{"classes/GoOn.html":{},"classes/Reset-2.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["stepclick",{"_index":2207,"title":{},"body":{"components/WizardComponent.html":{}}}],["stepclick(ev",{"_index":2212,"title":{},"body":{"components/WizardComponent.html":{}}}],["steperror",{"_index":1141,"title":{"classes/StepError.html":{}},"body":{"classes/GoOn.html":{},"classes/Reset-2.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["steppedlin",{"_index":497,"title":{},"body":{"components/ChartsComponent.html":{}}}],["steppend",{"_index":1142,"title":{"classes/StepPending.html":{}},"body":{"classes/GoOn.html":{},"classes/Reset-2.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["stepper",{"_index":2205,"title":{},"body":{"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["stepperselectionev",{"_index":2213,"title":{},"body":{"components/WizardComponent.html":{}}}],["steps[0",{"_index":1404,"title":{},"body":{"components/MapComponent.html":{}}}],["steps[0].data.cent",{"_index":1405,"title":{},"body":{"components/MapComponent.html":{}}}],["steps[2",{"_index":1407,"title":{},"body":{"components/MapComponent.html":{}}}],["steps[2].data.odpair",{"_index":1409,"title":{},"body":{"components/MapComponent.html":{}}}],["steps[3",{"_index":1411,"title":{},"body":{"components/MapComponent.html":{}}}],["steps[3].data.odpair",{"_index":1412,"title":{},"body":{"components/MapComponent.html":{}}}],["stepsiz",{"_index":2540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stop",{"_index":567,"title":{},"body":{"injectables/ClockService.html":{},"interfaces/Counts.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{},"components/SimulationComponent.html":{},"miscellaneous/enumerations.html":{}}}],["store",{"_index":317,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WizardService.html":{}}}],["storemodul",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{}}}],["storemodule.forfeature('simul",{"_index":1808,"title":{},"body":{"modules/SimulationModule.html":{}}}],["storemodule.forfeature('ui",{"_index":2042,"title":{},"body":{"modules/UiModule.html":{}}}],["storemodule.forroot",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["strada",{"_index":41,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/PrivacyComponent.html":{},"components/TermsComponent.html":{},"index.html":{}}}],["strategi",{"_index":253,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["strategy.t",{"_index":236,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["strategy.ts:6",{"_index":242,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["stream",{"_index":1598,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["stream.subscrib",{"_index":1611,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["string",{"_index":335,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"interfaces/Counts.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["structur",{"_index":878,"title":{},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["studi",{"_index":2416,"title":{},"body":{"index.html":{}}}],["style",{"_index":5,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["styler",{"_index":2571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["styles/vari",{"_index":70,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/UiComponent.html":{}}}],["styleurl",{"_index":15,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["subhead",{"_index":1284,"title":{},"body":{"components/HomeComponent.html":{}}}],["subject",{"_index":2485,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":2480,"title":{},"body":{"license.html":{}}}],["subscrib",{"_index":279,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["subscript",{"_index":270,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{}}}],["subscription.unsubscrib",{"_index":286,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChartsComponent.html":{},"components/UiComponent.html":{}}}],["subsequ",{"_index":2596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["substanti",{"_index":2489,"title":{},"body":{"license.html":{}}}],["such",{"_index":2435,"title":{},"body":{"index.html":{}}}],["sum",{"_index":676,"title":{},"body":{"injectables/DemandService.html":{}}}],["sum(odmatrixassign",{"_index":710,"title":{},"body":{"injectables/DemandService.html":{}}}],["sumexp",{"_index":1016,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["sumexps.push(sum",{"_index":1018,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["sumexps[z",{"_index":1020,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["super",{"_index":372,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["support",{"_index":1695,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"modules.html":{}}}],["sure",{"_index":1983,"title":{},"body":{"components/UiComponent.html":{}}}],["surfac",{"_index":835,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["survey",{"_index":2439,"title":{},"body":{"index.html":{}}}],["sustain",{"_index":2383,"title":{},"body":{"index.html":{}}}],["svg",{"_index":2509,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":396,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"interfaces/SimulationState-1.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{}}}],["switchmap",{"_index":1584,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["switchmap((respons",{"_index":1600,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["system",{"_index":2374,"title":{},"body":{"index.html":{}}}],["t",{"_index":1032,"title":{},"body":{"classes/EnumValues.html":{}}}],["tabl",{"_index":1502,"title":{},"body":{"components/NumericComponent.html":{}}}],["tag",{"_index":757,"title":{"interfaces/Tag.html":{}},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["tag.key",{"_index":917,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["tag.valu",{"_index":919,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["take",{"_index":778,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["takewhil",{"_index":596,"title":{},"body":{"injectables/ClockService.html":{}}}],["tap",{"_index":1970,"title":{},"body":{"components/UiComponent.html":{}}}],["tap((dialogresult",{"_index":1986,"title":{},"body":{"components/UiComponent.html":{}}}],["target",{"_index":1257,"title":{},"body":{"components/HomeComponent.html":{}}}],["targettim",{"_index":1888,"title":{},"body":{"classes/Statistics.html":{}}}],["td.mat",{"_index":1506,"title":{},"body":{"components/NumericComponent.html":{}}}],["technic",{"_index":1546,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["term",{"_index":264,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/TermsComponent.html":{}}}],["terms'},{'nam",{"_index":147,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["terms.component.html",{"_index":1932,"title":{},"body":{"components/TermsComponent.html":{}}}],["terms.component.scss",{"_index":1931,"title":{},"body":{"components/TermsComponent.html":{}}}],["terms/terms.compon",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["termscompon",{"_index":146,"title":{"components/TermsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["test",{"_index":2547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testlicens",{"_index":2466,"title":{},"body":{"index.html":{}}}],["text",{"_index":73,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/PrivacyComponent.html":{},"components/SimulationComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["text.split",{"_index":1252,"title":{},"body":{"components/HomeComponent.html":{}}}],["theta",{"_index":1009,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["this.adddestination(control",{"_index":1112,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.addorigin(control",{"_index":1104,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.argmin(linkflow",{"_index":730,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.avgspe",{"_index":1791,"title":{},"body":{"components/SimulationComponent.html":{}}}],["this.busiestchart",{"_index":475,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.busiestchart.data.datasets[0].data",{"_index":545,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.busiestchart.data.label",{"_index":538,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.busiestchart.destroy",{"_index":476,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.busiestchart.options.annotation.annotations.push",{"_index":515,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.busiestchart.options.title.text",{"_index":511,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.busiestchart.upd",{"_index":549,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.busiestctx",{"_index":485,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.calcpathcosts(odpair",{"_index":1008,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.calcshortestpathsprobabilities(odpair",{"_index":950,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.cdr.detectchang",{"_index":1981,"title":{},"body":{"components/UiComponent.html":{}}}],["this.cent",{"_index":1205,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.clock.getstatist",{"_index":1915,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.clock.presscontrol(control",{"_index":1794,"title":{},"body":{"components/SimulationComponent.html":{}}}],["this.clock.reset",{"_index":1596,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.count",{"_index":1789,"title":{},"body":{"components/SimulationComponent.html":{}}}],["this.createchart",{"_index":470,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.createmap(el",{"_index":1198,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["this.currentstep",{"_index":1384,"title":{},"body":{"components/MapComponent.html":{}}}],["this.data",{"_index":1494,"title":{},"body":{"components/NumericComponent.html":{}}}],["this.demand.calcodmatrix",{"_index":1642,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.demand.changedemand(demand",{"_index":383,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["this.demand.changestartingtimes(startingtim",{"_index":384,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["this.demand.getodmatrix",{"_index":405,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["this.demand.getstartingtim",{"_index":406,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["this.demand.reset",{"_index":1594,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.dens",{"_index":863,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.descript",{"_index":2096,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.dialog.open(infodialogcompon",{"_index":1994,"title":{},"body":{"components/UiComponent.html":{}}}],["this.disabledefaultui",{"_index":1206,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.disabledoubleclickzoom",{"_index":1207,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.dist",{"_index":855,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.drawingoptions.marker.set('vis",{"_index":875,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.drawingoptions.polyline.set('strokecolor",{"_index":873,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.drawingoptions.polyline.set('zindex",{"_index":874,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.dur",{"_index":856,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.durationintraff",{"_index":861,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.edg",{"_index":891,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.edgeid",{"_index":853,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.edges.find((edg",{"_index":909,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.edges.find((valu",{"_index":927,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.edges.push(edg",{"_index":912,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.elementref.nativeelement.queryselector('#busiestchart",{"_index":486,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.elementref.nativeelement.queryselector('#heavytrafficchart",{"_index":482,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.elementref.nativeelement.queryselector('#iconcontain",{"_index":2092,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.elementref.nativeelement.queryselector('#map",{"_index":1197,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["this.elementref.nativeelement.queryselector('#moderatetrafficchart",{"_index":484,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.elementref.nativeelement.queryselector('.headlin",{"_index":1249,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.endsimul",{"_index":605,"title":{},"body":{"injectables/ClockService.html":{},"components/SimulationComponent.html":{}}}],["this.estimate(linkflow",{"_index":733,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.execut",{"_index":632,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.flow",{"_index":865,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.formbuilder.array",{"_index":2231,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.formbuilder.group",{"_index":2230,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.formgroup.get('bounds').setvalue(map.data.bound",{"_index":1723,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.formgroup.get('center').setvalu",{"_index":1668,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.formgroup.get('endsimulation').setvalue(end",{"_index":1793,"title":{},"body":{"components/SimulationComponent.html":{}}}],["this.formgroup.get('odpair",{"_index":370,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{}}}],["this.formgroup.get('weathercondit",{"_index":395,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["this.freeflowveloc",{"_index":860,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.geocod",{"_index":1333,"title":{},"body":{"injectables/LocationService.html":{}}}],["this.geocoder.geocod",{"_index":1337,"title":{},"body":{"injectables/LocationService.html":{}}}],["this.gesturehandl",{"_index":1211,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.getbusiestedge(edg",{"_index":1882,"title":{},"body":{"classes/Statistics.html":{}}}],["this.getedge(edgeid).tags.find(tag",{"_index":916,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.getheavytrafficedges(edges).map((edg",{"_index":1878,"title":{},"body":{"classes/Statistics.html":{}}}],["this.geticon(weather.icon",{"_index":2099,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.getkjam",{"_index":868,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.getmoderatetrafficedges(edges).map((edg",{"_index":1879,"title":{},"body":{"classes/Statistics.html":{}}}],["this.getnames(e).map((nam",{"_index":1036,"title":{},"body":{"classes/EnumValues.html":{}}}],["this.getnode(node.nodeid",{"_index":900,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.getpathsedg",{"_index":941,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.gettrafficvolumes(edg",{"_index":1883,"title":{},"body":{"classes/Statistics.html":{}}}],["this.gls(linkflow",{"_index":722,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.heap",{"_index":959,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.heap.getpaths().length",{"_index":977,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.heap.push",{"_index":962,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.heavytrafficchart",{"_index":471,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.heavytrafficchart.data.datasets[0].data",{"_index":541,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.heavytrafficchart.data.label",{"_index":505,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.heavytrafficchart.destroy",{"_index":472,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.heavytrafficchart.options.title.text",{"_index":503,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.heavytrafficchart.upd",{"_index":547,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.heavytrafficctx",{"_index":481,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.http.get(url",{"_index":2182,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.icon",{"_index":2098,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.iconcontain",{"_index":2091,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.incidencematrix",{"_index":947,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.incidencematrix[z][n][m",{"_index":945,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.index",{"_index":403,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/StatisticsComponent.html":{}}}],["this.interv",{"_index":610,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.interval.pip",{"_index":631,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.isonpath(odmatrixassign",{"_index":734,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.isroundabout(edgeid",{"_index":920,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.latlng",{"_index":1334,"title":{},"body":{"injectables/LocationService.html":{}}}],["this.linkflow",{"_index":867,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.location.codeaddress(address).foreach",{"_index":1667,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.location.getcurrentposition().subscrib",{"_index":1682,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.location.getlatlng().lat.tostr",{"_index":2175,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.location.getlatlng().lng.tostr",{"_index":2177,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.location.reset",{"_index":1591,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.location.setlatlng(cent",{"_index":1664,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.map.buildbounds(this.cent",{"_index":1391,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.clearnodesact",{"_index":1401,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.hidepath",{"_index":1402,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.hiderect",{"_index":1394,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.initmap(el",{"_index":1204,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["this.map.reset",{"_index":1590,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.map.setcenter(this.cent",{"_index":1201,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["this.map.setcenter(this.map.getcentroid",{"_index":1398,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.setcentroid",{"_index":1397,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.setzoom(17",{"_index":1399,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.setzoom(this.zoom",{"_index":1203,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["this.map.showgraph",{"_index":1395,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.shownodes(odpair",{"_index":1410,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.showpaths(odpair",{"_index":1413,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.showrect(bound",{"_index":1392,"title":{},"body":{"components/MapComponent.html":{}}}],["this.maptypeid",{"_index":1208,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.maxflow",{"_index":869,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.maxzoom",{"_index":1209,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.min.getd",{"_index":1714,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.min.getfullyear",{"_index":1712,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.min.gethour",{"_index":1715,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.min.getminut",{"_index":1717,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.min.getmonth",{"_index":1713,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.minzoom",{"_index":1210,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.moderatetrafficchart",{"_index":473,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.moderatetrafficchart.data.datasets[0].data",{"_index":543,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.moderatetrafficchart.data.label",{"_index":509,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.moderatetrafficchart.destroy",{"_index":474,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.moderatetrafficchart.options.title.text",{"_index":507,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.moderatetrafficchart.upd",{"_index":548,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.moderatetrafficctx",{"_index":483,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.network",{"_index":1979,"title":{},"body":{"components/UiComponent.html":{}}}],["this.network.calclinkflows(respons",{"_index":1641,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.correctgraph",{"_index":1607,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.creategraph(respons",{"_index":1602,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.getassignmentmatrix",{"_index":721,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.network.getgraph",{"_index":1635,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.getlinkflow",{"_index":720,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.network.getnetwork().pip",{"_index":1599,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.getnetworkdata",{"_index":1603,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.getodpair",{"_index":404,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/SchedulerService.html":{}}}],["this.network.gettim",{"_index":1610,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.gettimestr",{"_index":2102,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.network.gettrafficdata",{"_index":1640,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.reset",{"_index":1592,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.setbounds(bound",{"_index":1719,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.network.setodpairs(odpair",{"_index":1084,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.network.settime(tim",{"_index":1721,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.network.updategraph(respons",{"_index":1605,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.nod",{"_index":889,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.nodeid",{"_index":846,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.nodes.filter((nod",{"_index":935,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.nodes.find((nod",{"_index":896,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.nodes.push(nod",{"_index":907,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.numer",{"_index":1980,"title":{},"body":{"components/UiComponent.html":{}}}],["this.odmatrix",{"_index":718,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.opendialog('ar",{"_index":1982,"title":{},"body":{"components/UiComponent.html":{}}}],["this.opensnackbar(error",{"_index":1978,"title":{},"body":{"components/UiComponent.html":{}}}],["this.paths.findindex((path",{"_index":1233,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["this.paths.push",{"_index":1228,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["this.paths.reduce((prev",{"_index":1235,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["this.paths.splice(index",{"_index":1234,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["this.pathtyp",{"_index":1082,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.paus",{"_index":618,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.pend",{"_index":1976,"title":{},"body":{"components/UiComponent.html":{}}}],["this.populatechart",{"_index":480,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.processingtim",{"_index":612,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.quick",{"_index":626,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.receiveact",{"_index":374,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["this.rel",{"_index":893,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.relationid",{"_index":883,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.renderer.appendchild(this.iconcontain",{"_index":2100,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.renderer.removechild(this.iconcontain",{"_index":2103,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.reset",{"_index":635,"title":{},"body":{"injectables/ClockService.html":{},"injectables/SchedulerService.html":{}}}],["this.resetcondit",{"_index":2094,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.resetcount",{"_index":957,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.router.navigate(['/hom",{"_index":1990,"title":{},"body":{"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["this.scheduler.reset",{"_index":1988,"title":{},"body":{"components/UiComponent.html":{}}}],["this.scheduler.scheduledemand(data",{"_index":2249,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.scheduler.schedulenetwork(data",{"_index":2248,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.scheduler.schedulesimulation(data",{"_index":2250,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.sendact",{"_index":375,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["this.setconditions(weathercondit",{"_index":2095,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.show",{"_index":1271,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.simulatedtimeinterv",{"_index":608,"title":{},"body":{"injectables/ClockService.html":{},"components/SimulationComponent.html":{}}}],["this.simulatedtimeperiod",{"_index":607,"title":{},"body":{"injectables/ClockService.html":{},"components/SimulationComponent.html":{}}}],["this.simulation.getstatist",{"_index":479,"title":{},"body":{"components/ChartsComponent.html":{},"components/StatisticsComponent.html":{}}}],["this.simulation.init",{"_index":1648,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.simulation.propagateflow",{"_index":645,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.simulation.reset",{"_index":1595,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.simulation.resetflow",{"_index":634,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.slow",{"_index":624,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.snackbar.openfromcomponent(messagearchivedcompon",{"_index":1991,"title":{},"body":{"components/UiComponent.html":{}}}],["this.start",{"_index":616,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.startingtim",{"_index":724,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.stat",{"_index":2277,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.statist",{"_index":478,"title":{},"body":{"components/ChartsComponent.html":{},"components/UiComponent.html":{}}}],["this.statistics.busiestedgecapac",{"_index":521,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.statistics.busiestedgedata",{"_index":546,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.statistics.busiestedgelabel",{"_index":514,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.statistics.heavytrafficdata",{"_index":542,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.statistics.heavytrafficlabel",{"_index":506,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.statistics.moderatetrafficdata",{"_index":544,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.statistics.moderatetrafficlabel",{"_index":510,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.statistics.periods.map((valu",{"_index":539,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.step",{"_index":622,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.stepp",{"_index":2243,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.stepper.reset",{"_index":2278,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.stepper.selected.complet",{"_index":2247,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.stepper.selectedindex",{"_index":2252,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.stop",{"_index":620,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.store.dispatch",{"_index":637,"title":{},"body":{"injectables/ClockService.html":{},"injectables/WizardService.html":{}}}],["this.store.pipe(select(fromsimulation.end)).subscribe((end",{"_index":604,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.store.pipe(select(fromui.wizardstate)).subscribe((st",{"_index":2276,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.styl",{"_index":1212,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.subscript",{"_index":614,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.subscription.clos",{"_index":628,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.subscription.unsubscrib",{"_index":633,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.subscriptions.foreach((subscript",{"_index":285,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChartsComponent.html":{},"components/UiComponent.html":{}}}],["this.subscriptions.push(this.formgroup.get('bounds').valuechanges.subscrib",{"_index":1718,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.subscriptions.push(this.formgroup.get('center').valuechanges.subscrib",{"_index":1663,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.subscriptions.push(this.formgroup.get('odpairs').valuechanges.subscrib",{"_index":378,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{}}}],["this.subscriptions.push(this.formgroup.get('time').valuechanges.subscrib",{"_index":1720,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.subscriptions.push(this.formgroup.get('weatherconditions').valuechanges.subscrib",{"_index":385,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromsimulation.end)).subscribe((end",{"_index":1792,"title":{},"body":{"components/SimulationComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromsimulation.periods)).subscribe((period",{"_index":1776,"title":{},"body":{"components/SimulationComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromsimulation.simulation)).subscribe((simul",{"_index":1492,"title":{},"body":{"components/NumericComponent.html":{},"components/SimulationComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromui.currentstep)).subscribe((currentstep",{"_index":392,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromui.error)).subscribe((error",{"_index":1977,"title":{},"body":{"components/UiComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromui.map)).subscribe((map",{"_index":1087,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromui.pending)).subscribe((pend",{"_index":1975,"title":{},"body":{"components/UiComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromui.steps)).subscribe((step",{"_index":1403,"title":{},"body":{"components/MapComponent.html":{}}}],["this.sum(odmatrixassign",{"_index":737,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.tim",{"_index":2101,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.timeinterv",{"_index":1778,"title":{},"body":{"components/SimulationComponent.html":{}}}],["this.timeperiod",{"_index":1780,"title":{},"body":{"components/SimulationComponent.html":{}}}],["this.totalavgspe",{"_index":1921,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.totalprocessingtim",{"_index":613,"title":{},"body":{"injectables/ClockService.html":{},"components/StatisticsComponent.html":{}}}],["this.totalsimulatedtim",{"_index":1918,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.totaltim",{"_index":1916,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.updatechart",{"_index":502,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.updatedata",{"_index":501,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.updateodpairs(map.data.selectednod",{"_index":1089,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.updateopt",{"_index":500,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.updatesimulatedtimeperiod",{"_index":647,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.valuechang",{"_index":373,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{}}}],["this.veloc",{"_index":862,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.walk(o",{"_index":965,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.weather.changeweather(weathercondit",{"_index":391,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["this.weather.getfactor",{"_index":1645,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.weather.getweathercondit",{"_index":2093,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.weather.getweatherdata(this.network.gettim",{"_index":1608,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.weather.reset",{"_index":1593,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.weather.updateweatherdata(respons",{"_index":1609,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.weathercondit",{"_index":2170,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.wizard.goon",{"_index":2251,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.wizard.goon(data",{"_index":1634,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.wizard.putinerror(\"brows",{"_index":1693,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.putinerror('invalid",{"_index":1679,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.putinerror('zero",{"_index":1674,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.putinerror(error",{"_index":1113,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.wizard.putinerror(messag",{"_index":1631,"title":{},"body":{"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.putonhold('check",{"_index":1606,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.wizard.putonhold('comput",{"_index":1636,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.wizard.putonhold('cr",{"_index":1601,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.wizard.putonhold('get",{"_index":1597,"title":{},"body":{"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.putonhold('initi",{"_index":1647,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.wizard.putonhold('search",{"_index":1665,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.putonhold('upd",{"_index":1604,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.wizard.removefromwait",{"_index":1633,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.wizard.reset",{"_index":1589,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.wizard.stepp",{"_index":2242,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.wizard.updatestep",{"_index":1114,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.wizard.updatestep(this.formgroup.valu",{"_index":1090,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{}}}],["this.wizardform",{"_index":2229,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.wizardform.get('formstep",{"_index":2228,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.wizardform.get('formsteps').get([index]).valu",{"_index":2246,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.zoom",{"_index":1213,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["those",{"_index":2370,"title":{},"body":{"index.html":{}}}],["through",{"_index":1310,"title":{},"body":{"injectables/LocationService.html":{}}}],["throwerror",{"_index":813,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{}}}],["throwerror('getweatherdata",{"_index":2186,"title":{},"body":{"injectables/WeatherService.html":{}}}],["thunderstorm",{"_index":2126,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["tick",{"_index":2537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["time",{"_index":49,"title":{},"body":{"components/AboutComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/EnumValues.html":{},"components/HomeComponent.html":{},"components/PrivacyComponent.html":{},"injectables/SchedulerService.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["time.gettim",{"_index":2192,"title":{},"body":{"injectables/WeatherService.html":{}}}],["time.gettimezoneoffset",{"_index":2189,"title":{},"body":{"injectables/WeatherService.html":{}}}],["timeinterv",{"_index":807,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SimulationComponent.html":{},"classes/Statistics.html":{},"interfaces/Tag.html":{}}}],["timeintervaldecr",{"_index":2630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["timeintervalincr",{"_index":2629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["timelimit",{"_index":2578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["timeout",{"_index":1692,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["timeperiod",{"_index":1757,"title":{},"body":{"components/SimulationComponent.html":{},"classes/Statistics.html":{}}}],["timer",{"_index":587,"title":{},"body":{"injectables/ClockService.html":{}}}],["timezon",{"_index":2190,"title":{},"body":{"injectables/WeatherService.html":{}}}],["timezoneoffset",{"_index":2188,"title":{},"body":{"injectables/WeatherService.html":{}}}],["titl",{"_index":2532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["togglevalu",{"_index":310,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["togglevalue(pair",{"_index":339,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["toinch",{"_index":2142,"title":{},"body":{"injectables/WeatherService.html":{}}}],["toinches(valu",{"_index":2162,"title":{},"body":{"injectables/WeatherService.html":{}}}],["tool",{"_index":2453,"title":{},"body":{"index.html":{}}}],["toolbar",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["toolbox",{"_index":2607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["top",{"_index":94,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["tort",{"_index":2506,"title":{},"body":{"license.html":{}}}],["tosecond",{"_index":1773,"title":{},"body":{"components/SimulationComponent.html":{},"miscellaneous/functions.html":{}}}],["toseconds(periods.simulatedtimeinterv",{"_index":1783,"title":{},"body":{"components/SimulationComponent.html":{}}}],["toseconds(uiconfig.simulatedtimeinterv",{"_index":1784,"title":{},"body":{"components/SimulationComponent.html":{}}}],["toseconds(valu",{"_index":1038,"title":{},"body":{"classes/EnumValues.html":{},"miscellaneous/functions.html":{}}}],["total",{"_index":777,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{}}}],["totalavgspe",{"_index":1901,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["totalprocessingtim",{"_index":557,"title":{},"body":{"injectables/ClockService.html":{},"components/StatisticsComponent.html":{}}}],["totalsimulatedtim",{"_index":627,"title":{},"body":{"injectables/ClockService.html":{},"components/StatisticsComponent.html":{}}}],["totaltim",{"_index":1902,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["tr.mat",{"_index":1503,"title":{},"body":{"components/NumericComponent.html":{}}}],["trade",{"_index":2404,"title":{},"body":{"index.html":{}}}],["traffic",{"_index":43,"title":{},"body":{"components/AboutComponent.html":{},"components/ChartsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["trafficchartopt",{"_index":467,"title":{},"body":{"components/ChartsComponent.html":{},"miscellaneous/variables.html":{}}}],["trafficcount",{"_index":656,"title":{},"body":{"interfaces/Counts.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{}}}],["trafficdata",{"_index":2549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trafficvolum",{"_index":655,"title":{},"body":{"interfaces/Counts.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{},"classes/Statistics.html":{}}}],["trafficvolumes[i",{"_index":1886,"title":{},"body":{"classes/Statistics.html":{}}}],["transform",{"_index":1283,"title":{},"body":{"components/HomeComponent.html":{},"components/UiComponent.html":{}}}],["transit",{"_index":2574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('void",{"_index":2563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translat",{"_index":1998,"title":{},"body":{"components/UiComponent.html":{},"dependencies.html":{}}}],["translatez",{"_index":1262,"title":{},"body":{"components/HomeComponent.html":{}}}],["transmiss",{"_index":2443,"title":{},"body":{"index.html":{}}}],["transport",{"_index":885,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"index.html":{}}}],["travers",{"_index":969,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["tri",{"_index":937,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{}}}],["trigger('hometransit",{"_index":2562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{},"components/ChartsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"miscellaneous/variables.html":{}}}],["turf/area",{"_index":2306,"title":{},"body":{"dependencies.html":{}}}],["turf/bear",{"_index":2311,"title":{},"body":{"dependencies.html":{}}}],["turf/cent",{"_index":2317,"title":{},"body":{"dependencies.html":{}}}],["turf/centroid",{"_index":2315,"title":{},"body":{"dependencies.html":{}}}],["turf/dist",{"_index":2312,"title":{},"body":{"dependencies.html":{}}}],["turf/help",{"_index":2308,"title":{},"body":{"dependencies.html":{}}}],["turf/invari",{"_index":2310,"title":{},"body":{"dependencies.html":{}}}],["turf/transform",{"_index":2313,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":745,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["type",{"_index":32,"title":{},"body":{"components/AboutComponent.html":{},"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"interfaces/SimulationState.html":{},"interfaces/SimulationState-1.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealias",{"_index":2516,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1775,"title":{},"body":{"components/SimulationComponent.html":{}}}],["typescript",{"_index":68,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["ui",{"_index":115,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["ui'},{'nam",{"_index":149,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["ui.compon",{"_index":2024,"title":{},"body":{"modules/UiModule.html":{},"modules/UiRoutingModule.html":{}}}],["ui.component.html",{"_index":1945,"title":{},"body":{"components/UiComponent.html":{}}}],["ui.component.scss",{"_index":1944,"title":{},"body":{"components/UiComponent.html":{}}}],["ui/ui",{"_index":602,"title":{},"body":{"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{}}}],["ui/ui.module#uimodul",{"_index":261,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["uicompon",{"_index":148,"title":{"components/UiComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["uiconfig",{"_index":367,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["uiconfig.links.heavytrafficcolor",{"_index":492,"title":{},"body":{"components/ChartsComponent.html":{}}}],["uiconfig.links.moderatetrafficcolor",{"_index":494,"title":{},"body":{"components/ChartsComponent.html":{}}}],["uiconfig.map.cent",{"_index":1385,"title":{},"body":{"components/MapComponent.html":{}}}],["uiconfig.map.zoom",{"_index":1386,"title":{},"body":{"components/MapComponent.html":{}}}],["uiconfig.maxodpair",{"_index":1095,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["uiconfig.simulatedtimeinterv",{"_index":609,"title":{},"body":{"injectables/ClockService.html":{}}}],["uiconfig.sp",{"_index":872,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["uiconfig.theta",{"_index":1010,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["uiconfig.timeintervaldecr",{"_index":642,"title":{},"body":{"injectables/ClockService.html":{}}}],["uiconfig.timeintervalincr",{"_index":641,"title":{},"body":{"injectables/ClockService.html":{}}}],["uiconfig.timelimit",{"_index":1716,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["uiconfig.weathericons[index",{"_index":389,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["uimodul",{"_index":2012,"title":{"modules/UiModule.html":{}},"body":{"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["uiroutingmodul",{"_index":2017,"title":{"modules/UiRoutingModule.html":{}},"body":{"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["uistat",{"_index":2045,"title":{"interfaces/UiState.html":{}},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["ul",{"_index":89,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{}}}],["unavail",{"_index":1690,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["undefin",{"_index":895,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SimulationComponent.html":{},"interfaces/Tag.html":{}}}],["under",{"_index":1940,"title":{},"body":{"components/TermsComponent.html":{}}}],["underlin",{"_index":85,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/PrivacyComponent.html":{},"components/TermsComponent.html":{}}}],["unexpect",{"_index":1630,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["unix",{"_index":2195,"title":{},"body":{"injectables/WeatherService.html":{}}}],["unknown",{"_index":695,"title":{},"body":{"injectables/DemandService.html":{}}}],["unknown_error",{"_index":1678,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["updat",{"_index":376,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"components/MapComponent.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{},"index.html":{}}}],["updatechart",{"_index":439,"title":{},"body":{"components/ChartsComponent.html":{}}}],["updatedata",{"_index":440,"title":{},"body":{"components/ChartsComponent.html":{}}}],["updateodpair",{"_index":1062,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["updateodpairs(nod",{"_index":1075,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["updateon",{"_index":2240,"title":{},"body":{"components/WizardComponent.html":{}}}],["updateopt",{"_index":441,"title":{},"body":{"components/ChartsComponent.html":{}}}],["updatesimulatedtimeperiod",{"_index":568,"title":{},"body":{"injectables/ClockService.html":{}}}],["updatestep",{"_index":2260,"title":{},"body":{"injectables/WizardService.html":{}}}],["updatestep(data",{"_index":2271,"title":{},"body":{"injectables/WizardService.html":{}}}],["updateweatherdata",{"_index":2143,"title":{},"body":{"injectables/WeatherService.html":{}}}],["updateweatherdata(data",{"_index":2164,"title":{},"body":{"injectables/WeatherService.html":{}}}],["uppercas",{"_index":2108,"title":{},"body":{"components/WeatherComponent.html":{}}}],["urban",{"_index":42,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["url",{"_index":2171,"title":{},"body":{"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["us",{"_index":46,"title":{},"body":{"components/AboutComponent.html":{},"classes/Edge.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"index.html":{},"license.html":{}}}],["usefactori",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":2047,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["utc",{"_index":2196,"title":{},"body":{"injectables/WeatherService.html":{}}}],["utctim",{"_index":2191,"title":{},"body":{"injectables/WeatherService.html":{}}}],["util",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{}}}],["valid",{"_index":353,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WizardComponent.html":{}}}],["validators.max(uiconfig.rainintensity.max",{"_index":2237,"title":{},"body":{"components/WizardComponent.html":{}}}],["validators.max(uiconfig.snowintensity.max",{"_index":2238,"title":{},"body":{"components/WizardComponent.html":{}}}],["validators.max(uiconfig.visibility.max",{"_index":2234,"title":{},"body":{"components/WizardComponent.html":{}}}],["validators.min(0",{"_index":2233,"title":{},"body":{"components/WizardComponent.html":{}}}],["validators.pattern('^[0",{"_index":2235,"title":{},"body":{"components/WizardComponent.html":{}}}],["validators.requir",{"_index":2232,"title":{},"body":{"components/WizardComponent.html":{}}}],["validators.requiredtru",{"_index":2239,"title":{},"body":{"components/WizardComponent.html":{}}}],["valu",{"_index":34,"title":{},"body":{"components/AboutComponent.html":{},"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.destination.nodeid",{"_index":930,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["value.edgeid",{"_index":942,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["value.origin.nodeid",{"_index":928,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["valuechang",{"_index":274,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["var",{"_index":100,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["variabl",{"_index":2518,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["varianc",{"_index":810,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["variou",{"_index":2403,"title":{},"body":{"index.html":{}}}],["vehicl",{"_index":788,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SimulationComponent.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["veloc",{"_index":758,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["version",{"_index":954,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{}}}],["vertic",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/ChartsComponent.html":{}}}],["viewchild",{"_index":2223,"title":{},"body":{"components/WizardComponent.html":{}}}],["viewchild('stepp",{"_index":2218,"title":{},"body":{"components/WizardComponent.html":{}}}],["viewencapsul",{"_index":1377,"title":{},"body":{"components/MapComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["viewencapsulation.non",{"_index":1360,"title":{},"body":{"components/MapComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["visibl",{"_index":803,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"interfaces/WeatherConditions.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["vital",{"_index":2396,"title":{},"body":{"index.html":{}}}],["void",{"_index":30,"title":{},"body":{"components/AboutComponent.html":{},"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["volum",{"_index":496,"title":{},"body":{"components/ChartsComponent.html":{},"components/NumericComponent.html":{},"miscellaneous/variables.html":{}}}],["voluntarili",{"_index":1538,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["wait",{"_index":1632,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["walk",{"_index":964,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["walk(o",{"_index":976,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["want",{"_index":1984,"title":{},"body":{"components/UiComponent.html":{}}}],["warranti",{"_index":2491,"title":{},"body":{"license.html":{}}}],["way",{"_index":1496,"title":{},"body":{"components/NumericComponent.html":{},"components/PrivacyComponent.html":{}}}],["waynam",{"_index":654,"title":{},"body":{"interfaces/Counts.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{}}}],["weather",{"_index":321,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["weather'},{'nam",{"_index":151,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["weather.component.html",{"_index":2067,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.component.scss",{"_index":2066,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.descript",{"_index":2097,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.servic",{"_index":2132,"title":{},"body":{"modules/WeatherModule.html":{}}}],["weather/weather.compon",{"_index":2038,"title":{},"body":{"modules/UiModule.html":{}}}],["weather/weather.modul",{"_index":1469,"title":{},"body":{"modules/NetworkModule.html":{}}}],["weathercompon",{"_index":150,"title":{"components/WeatherComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["weathercondit",{"_index":363,"title":{"interfaces/WeatherConditions.html":{}},"body":{"components/ChangeOfConditionsComponent.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{}}}],["weatherconditions.descript",{"_index":388,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["weatherconditions.icon",{"_index":390,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["weatherconditionscontrol",{"_index":394,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["weatherdescript",{"_index":347,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["weathericon",{"_index":2614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weathermodul",{"_index":1467,"title":{"modules/WeatherModule.html":{}},"body":{"modules/NetworkModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["weatherservic",{"_index":322,"title":{"injectables/WeatherService.html":{}},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/SchedulerService.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"overview.html":{}}}],["web",{"_index":44,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{},"dependencies.html":{},"index.html":{}}}],["weight",{"_index":78,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/HomeComponent.html":{},"components/WeatherComponent.html":{}}}],["well",{"_index":2418,"title":{},"body":{"index.html":{}}}],["whether",{"_index":2504,"title":{},"body":{"license.html":{}}}],["whole",{"_index":1571,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["widespread",{"_index":2364,"title":{},"body":{"index.html":{}}}],["width",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["without",{"_index":2437,"title":{},"body":{"index.html":{},"license.html":{}}}],["wizard",{"_index":111,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"classes/Reset-2.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["wizard.component.html",{"_index":2204,"title":{},"body":{"components/WizardComponent.html":{}}}],["wizard.component.scss",{"_index":2203,"title":{},"body":{"components/WizardComponent.html":{}}}],["wizard.servic",{"_index":357,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WizardComponent.html":{}}}],["wizard/chang",{"_index":2031,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/estim",{"_index":2029,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/scheduler.servic",{"_index":1972,"title":{},"body":{"components/UiComponent.html":{},"modules/UiModule.html":{}}}],["wizard/search",{"_index":2026,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/select",{"_index":2028,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/simulation/simulation.compon",{"_index":2033,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/statistics/statistics.compon",{"_index":2034,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/wizard.compon",{"_index":2025,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/wizard.servic",{"_index":2041,"title":{},"body":{"modules/UiModule.html":{}}}],["wizardact",{"_index":1151,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset-2.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/WizardState.html":{},"miscellaneous/typealiases.html":{}}}],["wizardactiontyp",{"_index":1139,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset-2.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{}}}],["wizardactiontypes.goon",{"_index":1137,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset-2.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["wizardactiontypes.reset",{"_index":1150,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset-2.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["wizardactiontypes.stepchang",{"_index":1145,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset-2.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["wizardactiontypes.steperror",{"_index":1147,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset-2.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["wizardactiontypes.steppend",{"_index":1148,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset-2.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["wizardcompon",{"_index":152,"title":{"components/WizardComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["wizardform",{"_index":2206,"title":{},"body":{"components/WizardComponent.html":{}}}],["wizardreduc",{"_index":2354,"title":{},"body":{"miscellaneous/functions.html":{}}}],["wizardreducer(st",{"_index":2282,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/functions.html":{}}}],["wizardservic",{"_index":318,"title":{"injectables/WizardService.html":{}},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"modules/UiModule.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"overview.html":{}}}],["wizardst",{"_index":2058,"title":{"interfaces/WizardState.html":{}},"body":{"interfaces/UiState.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["work",{"_index":2368,"title":{},"body":{"index.html":{}}}],["wrap",{"_index":1321,"title":{},"body":{"injectables/LocationService.html":{}}}],["wrappedtext",{"_index":1253,"title":{},"body":{"components/HomeComponent.html":{}}}],["wrapper",{"_index":1275,"title":{},"body":{"components/HomeComponent.html":{}}}],["x",{"_index":534,"title":{},"body":{"components/ChartsComponent.html":{},"injectables/DemandService.html":{},"miscellaneous/variables.html":{}}}],["xadjust",{"_index":536,"title":{},"body":{"components/ChartsComponent.html":{}}}],["xax",{"_index":2534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xi",{"_index":2608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["y",{"_index":519,"title":{},"body":{"components/ChartsComponent.html":{},"miscellaneous/variables.html":{}}}],["yadjust",{"_index":530,"title":{},"body":{"components/ChartsComponent.html":{}}}],["yax",{"_index":2539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ye",{"_index":1289,"title":{},"body":{"components/InfoDialogComponent.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{},"miscellaneous/functions.html":{}}}],["z",{"_index":729,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{}}}],["zero",{"_index":956,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["zindex",{"_index":802,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["zone.j",{"_index":2337,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"components/GoogleMapComponent.html":{},"modules/LocationModule.html":{},"components/MapComponent.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutComponent.html":{"url":"components/AboutComponent.html","title":"component - AboutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AboutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/about/about.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n            \n                styleUrls\n                ./about.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./about.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentYear\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/about/about.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/about/about.component.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentYear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentYear:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : new Date().getFullYear()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/about/about.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-about',\n    templateUrl: './about.component.html',\n    styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n\n    currentYear: number = new Date().getFullYear();\n\n    constructor() { }\n\n    ngOnInit(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    STRADA\n    An urban traffic web simulator that uses data in real time\n    Copyright&nbsp;©&nbsp;{{ currentYear }} Roberto&nbsp;Simonetti - MIT license\n    Project developed for the dissertation of my bachelor's degree in computer engineering\n    Links\n    \n        \n            \n                Repository:\n                STRADA source code\n            \n        \n        \n            \n                Official documentation:\n                STRADA documentation\n            \n        \n    \n    Built with\n    \n        \n            \n                Angular, TypeScript & Firebase\n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./about.component.scss\n                \n                @import '../../styles/variables';\n\n.app-about {\n    padding: 16px;\n    text-align: center;\n\n    h1 {\n        font-weight: bold;\n    }\n    \n    > p {\n        font-style: italic;\n        font-size: 14px;\n    }\n    \n    a {\n        text-decoration: underline;\n        color: inherit;\n    \n        &:hover {\n            text-decoration: underline;\n        }\n    }\n    \n    ul {\n        list-style: none;\n        padding: 0;\n        margin-top: -24px;\n        font-size: 14px;\n    }    \n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    STRADA    An urban traffic web simulator that uses data in real time    Copyright © {{ currentYear }} Roberto Simonetti - MIT license    Project developed for the dissertation of my bachelor\\'s degree in computer engineering    Links                                        Repository:                STRADA source code                                                        Official documentation:                STRADA documentation                            Built with                                        Angular, TypeScript & Firebase                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent { }\n\n    \n\n    \n        \n\n    \n        \n            \n            \n                STRADA\n            \n\n            \n\n            \n                \n            \n            \n                \n                    About\n                \n            \n        \n    \n\n    \n\n        \n            \n        \n\n    \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                @import '../styles/variables';\n\n.app-root {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    .mat-drawer-container {\n        background: #ffffff;\n    }\n    \n    .mat-toolbar {   \n        .toolbar-logo {\n            height: 32px;\n            width: 32px;\n            vertical-align: middle;\n        }\n\n        a {\n            text-decoration: none;\n            color: inherit;\n            margin: 0 8px;\n    \n            h1 {\n                font-size: inherit;\n                font-weight: 700;\n            }\n        }\n    }\n}\n\n.mat-menu-panel {\n    .mat-menu-item {\n        .mat-icon {\n            line-height: 1;\n        }\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    STRADA                                                                                                                About                                                                            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nPrivacyComponent\n\nPrivacyComponent\n\nAppModule -->\n\nPrivacyComponent->AppModule\n\n\n\n\n\nTermsComponent\n\nTermsComponent\n\nAppModule -->\n\nTermsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nDemandModule\n\nDemandModule\n\nAppModule -->\n\nDemandModule->AppModule\n\n\n\n\n\nLocationModule\n\nLocationModule\n\nAppModule -->\n\nLocationModule->AppModule\n\n\n\n\n\nNetworkModule\n\nNetworkModule\n\nAppModule -->\n\nNetworkModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nSimulationModule\n\nSimulationModule\n\nAppModule -->\n\nSimulationModule->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AboutComponent\n                            \n                            \n                                AppComponent\n                            \n                            \n                                HomeComponent\n                            \n                            \n                                PrivacyComponent\n                            \n                            \n                                TermsComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                            \n                                    DemandModule\n                            \n                            \n                                    LocationModule\n                            \n                            \n                                    NetworkModule\n                            \n                            \n                                    SharedModule\n                            \n                            \n                                    SimulationModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule, APP_INITIALIZER } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { StoreModule } from '@ngrx/store';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { SharedModule } from './shared/shared.module';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { AboutComponent } from './about/about.component';\nimport { PrivacyComponent } from './privacy/privacy.component';\nimport { TermsComponent } from './terms/terms.component';\nimport { LocationModule } from './location/location.module';\nimport { NetworkModule } from './network/network.module';\nimport { DemandModule } from './demand/demand.module';\nimport { SimulationModule } from './simulation/simulation.module';\n\nimport { loadScripts } from './utils';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        HomeComponent,\n        AboutComponent,\n        PrivacyComponent,\n        TermsComponent\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        SharedModule.forRoot(),\n        StoreModule.forRoot({}),\n        LocationModule,\n        NetworkModule,\n        DemandModule,\n        SimulationModule\n    ],\n    providers: [\n        {\n            provide: APP_INITIALIZER,\n            useFactory: loadScripts,\n            deps: [],\n            multi: true\n        }\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPreloadingStrategy.html":{"url":"classes/AppPreloadingStrategy.html","title":"class - AppPreloadingStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPreloadingStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app-preloading-strategy.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        PreloadingStrategy\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                preload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            preload\n                            \n                            \n                        \n                    \n                \n                \n                    \npreload(route: Route, load: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app-preloading-strategy.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    Route\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        load\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { PreloadingStrategy, Route } from \"@angular/router\";\nimport { Observable, of } from \"rxjs\";\n\nexport class AppPreloadingStrategy implements PreloadingStrategy {\n\n    preload(route: Route, load: Function): Observable {\n        return route.data && route.data.preload ? load() : of(null);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { AppPreloadingStrategy } from './app-preloading-strategy';\n\nimport { HomeComponent } from './home/home.component';\nimport { AboutComponent } from './about/about.component';\nimport { PrivacyComponent } from './privacy/privacy.component';\nimport { TermsComponent } from './terms/terms.component';\n\n@NgModule({\n    providers: [AppPreloadingStrategy],\n    imports: [\n        RouterModule.forRoot([\n            { path: '', redirectTo: 'home', pathMatch: 'full' },\n            { path: 'home', component: HomeComponent },\n            { path: 'about', component: AboutComponent },\n            {\n                path: 'simulation',\n                loadChildren: './ui/ui.module#UiModule',\n                data: { preload: false }\n            },\n            { path: 'privacy', component: PrivacyComponent },\n            { path: 'terms', component: TermsComponent },\n            { path: '**', redirectTo: 'home' }\n        ], { preloadingStrategy: AppPreloadingStrategy })\n    ],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseComponent.html":{"url":"classes/BaseComponent.html","title":"class - BaseComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/base.component.ts\n        \n\n            \n                Description\n            \n            \n                Abstract class inherited from UI components.\n\n            \n\n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Abstract\n                                ngOnInit\n                            \n                            \n                                    Abstract\n                                receiveActions\n                            \n                            \n                                    Abstract\n                                sendActions\n                            \n                            \n                                    Abstract\n                                valueChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { OnInit, OnDestroy } from \"@angular/core\";\nimport { Subscription } from \"rxjs\";\n\n/**\n * Abstract class inherited from UI components.\n */\nexport abstract class BaseComponent implements OnInit, OnDestroy {\n\n    subscriptions: Subscription[] = [];\n\n    abstract ngOnInit(): void;\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach((subscription: Subscription) => {\n            if (subscription) { subscription.unsubscribe(); }\n        });\n    }\n\n    /**\n     * Subscribes to the form changes.\n     */\n    abstract valueChanges(): void;\n\n    /**\n     * Subscribes to the actions sent by other components.\n     */\n    abstract receiveActions(): void;\n\n    /**\n     * Subscribes to the actions sent to other components.\n     */\n    abstract sendActions(): void;\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CanComponentDeactivate.html":{"url":"interfaces/CanComponentDeactivate.html","title":"interface - CanComponentDeactivate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CanComponentDeactivate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/can-deactivate-guard.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        canDeactivate\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canDeactivate\n                                    \n                                \n                                \n                                    \n                                        canDeactivate:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nexport interface CanComponentDeactivate {\n    canDeactivate: () => Observable | Promise | boolean;\n}\n\n@Injectable() export class CanDeactivateGuard implements CanDeactivate {\n    canDeactivate(component: CanComponentDeactivate): boolean | Observable | Promise {\n        return component.canDeactivate ? component.canDeactivate() : true;\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CanDeactivateGuard.html":{"url":"guards/CanDeactivateGuard.html","title":"guard - CanDeactivateGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    CanDeactivateGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/shared/can-deactivate-guard.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canDeactivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canDeactivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanDeactivate(component: CanComponentDeactivate)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/can-deactivate-guard.service.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        component\n                                                        \n                                                                    CanComponentDeactivate\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean | Observable | Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nexport interface CanComponentDeactivate {\n    canDeactivate: () => Observable | Promise | boolean;\n}\n\n@Injectable() export class CanDeactivateGuard implements CanDeactivate {\n    canDeactivate(component: CanComponentDeactivate): boolean | Observable | Promise {\n        return component.canDeactivate ? component.canDeactivate() : true;\n    }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangeOfConditionsComponent.html":{"url":"components/ChangeOfConditionsComponent.html","title":"component - ChangeOfConditionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChangeOfConditionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-change-of-conditions\n            \n\n            \n                styleUrls\n                ./change-of-conditions.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./change-of-conditions.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                descriptions\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildOdPair\n                            \n                            \n                                getVisibility\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                toggleValue\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Abstract\n                                ngOnInit\n                            \n                            \n                                    Abstract\n                                receiveActions\n                            \n                            \n                                    Abstract\n                                sendActions\n                            \n                            \n                                    Abstract\n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    odPairs\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, wizard: WizardService, network: NetworkService, weather: WeatherService, demand: DemandService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        weather\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        demand\n                                                  \n                                                        \n                                                                    DemandService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type :    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:28\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buildOdPair\n                            \n                            \n                        \n                    \n                \n                \n                    \nbuildOdPair(odPair: OdPair, demand: number, startingTime: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:125\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        odPair\n                                                        \n                                                                    OdPair\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        demand\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        startingTime\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FormGroup\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getVisibility\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetVisibility(pair: AbstractControl)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:121\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pair\n                                                        \n                                                                    AbstractControl\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:110\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleValue\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleValue(pair: AbstractControl)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:114\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pair\n                                                        \n                                                                    AbstractControl\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            descriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        descriptions:     WeatherDescription[]\n\n                    \n                \n                    \n                        \n                            Type :     WeatherDescription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        odPairs\n                    \n                \n\n                \n                    \n                        getodPairs()\n                    \n                \n                            \n                                \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:32\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, FormArray, AbstractControl, Validators } from '@angular/forms';\n\nimport { Store, select } from '@ngrx/store';\nimport * as combine from 'mout/array/combine';\n\nimport { WizardService } from '../wizard.service';\nimport { NetworkService } from '../../../network/network.service';\nimport { WeatherService } from '../../../network/weather/weather.service';\nimport { DemandService } from '../../../demand/demand.service';\nimport * as fromUi from '../../models/reducers';\nimport { WeatherDescription, WeatherConditions } from '../../../network/weather/weather';\nimport { OdPair } from '../../../network/graph';\nimport { EnumValues } from '../../utils';\nimport { uiConfig } from '../../ui-config';\n\nimport { BaseComponent } from '../../models/base.component';\n\n@Component({\n    selector: 'wizard-change-of-conditions',\n    templateUrl: './change-of-conditions.component.html',\n    styleUrls: ['./change-of-conditions.component.scss']\n})\nexport class ChangeOfConditionsComponent extends BaseComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    descriptions: WeatherDescription[] = [];\n\n    get odPairs(): FormArray {\n        return this.formGroup.get('odPairs') as FormArray;\n    }\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private store: Store,\n        private wizard: WizardService,\n        private network: NetworkService,\n        private weather: WeatherService,\n        private demand: DemandService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.valueChanges();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        // Updates demand service data on value changes.\n        this.subscriptions.push(this.formGroup.get('odPairs').valueChanges.subscribe(\n            (odPairs: any[]) => {\n                const demand = odPairs.map((pair: any) => {\n                    return pair.demand;\n                });\n                const startingTimes = odPairs.map((pair: any) => {\n                    return pair.startingTime;\n                });\n                this.demand.changeDemand(demand);\n                this.demand.changeStartingTimes(startingTimes);\n            }\n        ));\n        // Updates weather service data on value changes.\n        this.subscriptions.push(this.formGroup.get('weatherConditions').valueChanges.subscribe(\n            (weatherConditions: WeatherConditions) => {\n                const index = EnumValues.getValues(WeatherDescription)\n                    .findIndex(description => description == weatherConditions.description);\n                if (index != -1) {\n                    const icon = uiConfig.weatherIcons[index];\n                    weatherConditions.icon = icon;\n                }\n                this.weather.changeWeather(weatherConditions);\n            }\n        ));\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.currentStep)).subscribe((currentStep: number) => {\n            const odPairsControl = this.formGroup.get('odPairs') as FormArray;\n            const weatherConditionsControl = this.formGroup.get('weatherConditions');\n            switch (currentStep) {\n                case 0:\n                    // Resets control.\n                    if (odPairsControl.length > 0) {\n                        for (let i = odPairsControl.length - 1; i >= 0; i--) {\n                            odPairsControl.removeAt(i);\n                        }\n                    }\n                    break;\n                case this.index:\n                    const odPairs = this.network.getOdPairs();\n                    const demand = this.demand.getOdMatrix();\n                    const startingTimes = this.demand.getStartingTimes();\n                    for (let i = 0; i \n    \n\n    \n        \n    \n        \n            \n                \n                    O\n                    D\n                    Demand\n                    Time\n                    \n                \n                \n                    \n                        {{ pair.value.origin }}\n                    \n                    \n                        {{ pair.value.destination }}\n                    \n                    \n                        \n                            \n                            \n                                Invalid value\n                            \n                        \n                    \n                    \n                        \n                            \n                            \n                                Invalid value\n                            \n                        \n                    \n                    \n                        \n                            {{ getVisibility(pair) }}\n                        \n                    \n                \n            \n        \n        \n        \n            \n                \n                    \n                        {{ description }}\n                    \n                \n            \n            \n                \n                m\n                \n                    Invalid value\n                \n            \n            \n                \n                mm\n                \n                    Invalid value\n                \n            \n            \n                \n                mm\n                \n                    Invalid value\n                \n            \n        \n    \n\n    \n        Continue\n            navigate_next\n        \n    \n\n    \n\n    \n                \n                    ./change-of-conditions.component.scss\n                \n                .header {\n    background-color: #eceff1;\n    padding: 4px;\n    text-align: center;\n    font-weight: 500;\n}\n\n.cell {\n    background-color: #eceff1;\n    height: 64px;\n    padding: 4px;\n    text-align: center;\n\n    .mat-icon-button {\n        .mat-icon {\n            font-size: 20px;\n        }\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            O                    D                    Demand                    Time                                                                                                {{ pair.value.origin }}                                                                {{ pair.value.destination }}                                                                                                                                                        Invalid value                                                                                                                                                                                                            Invalid value                                                                                                                                                {{ getVisibility(pair) }}                                                                                                                                                                        {{ description }}                                                                                            m                                    Invalid value                                                                        mm                                    Invalid value                                                                        mm                                    Invalid value                                                    Continue            navigate_next            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChangeOfConditionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChartsComponent.html":{"url":"components/ChartsComponent.html","title":"component - ChartsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChartsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/charts/charts.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ui-charts\n            \n\n            \n                styleUrls\n                ./charts.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./charts.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                busiestChart\n                            \n                            \n                                busiestCtx\n                            \n                            \n                                heavyTrafficChart\n                            \n                            \n                                heavyTrafficCtx\n                            \n                            \n                                moderateTrafficChart\n                            \n                            \n                                moderateTrafficCtx\n                            \n                            \n                                statistics\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createCharts\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                populateCharts\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                updateCharts\n                            \n                            \n                                updateData\n                            \n                            \n                                updateOptions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Abstract\n                                ngOnInit\n                            \n                            \n                                    Abstract\n                                receiveActions\n                            \n                            \n                                    Abstract\n                                sendActions\n                            \n                            \n                                    Abstract\n                                valueChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, store: Store, simulation: SimulationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/charts/charts.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        simulation\n                                                  \n                                                        \n                                                                    SimulationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createCharts\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateCharts()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:82\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            populateCharts\n                            \n                            \n                        \n                    \n                \n                \n                    \npopulateCharts()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:131\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateCharts\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateCharts()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:186\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateData\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:180\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateOptions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:137\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            busiestChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        busiestChart:     Chart\n\n                    \n                \n                    \n                        \n                            Type :     Chart\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            busiestCtx\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        busiestCtx:     HTMLCanvasElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLCanvasElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heavyTrafficChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heavyTrafficChart:     Chart\n\n                    \n                \n                    \n                        \n                            Type :     Chart\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heavyTrafficCtx\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heavyTrafficCtx:     HTMLCanvasElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLCanvasElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moderateTrafficChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        moderateTrafficChart:     Chart\n\n                    \n                \n                    \n                        \n                            Type :     Chart\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moderateTrafficCtx\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        moderateTrafficCtx:     HTMLCanvasElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLCanvasElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            statistics\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        statistics:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, OnDestroy, ElementRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { Store, select } from '@ngrx/store';\nimport { Chart } from 'chart.js';\n\nimport { SimulationService } from '../../simulation/simulation.service';\nimport * as fromUi from '../models/reducers';\nimport { formatTimeFromSeconds } from '../utils';\nimport { trafficChartOptions, busiestChartOptions, busiestColor } from './charts-config';\nimport { uiConfig } from '../ui-config';\n\nimport { BaseComponent } from '../models/base.component';\n\n@Component({\n    selector: 'ui-charts',\n    templateUrl: './charts.component.html',\n    styleUrls: ['./charts.component.scss']\n})\nexport class ChartsComponent extends BaseComponent implements OnInit, AfterViewInit, OnDestroy {\n\n    heavyTrafficCtx: HTMLCanvasElement;\n\n    moderateTrafficCtx: HTMLCanvasElement;\n\n    busiestCtx: HTMLCanvasElement;\n\n    heavyTrafficChart: Chart;\n\n    moderateTrafficChart: Chart;\n\n    busiestChart: Chart;\n\n    statistics: any;\n\n    constructor(\n        private elementRef: ElementRef,\n        private store: Store,\n        private simulation: SimulationService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        //\n    }\n\n    ngAfterViewInit(): void {\n        this.createCharts();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach((subscription: Subscription) => {\n            if (subscription) { subscription.unsubscribe(); }\n        });\n        if (this.heavyTrafficChart) { this.heavyTrafficChart.destroy(); }\n        if (this.moderateTrafficChart) { this.moderateTrafficChart.destroy(); }\n        if (this.busiestChart) { this.busiestChart.destroy(); }\n    }\n\n    valueChanges(): void {\n        //\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.currentStep)).subscribe((currentStep: number) => {\n            switch (currentStep) {\n                case 5:\n                    this.statistics = this.simulation.getStatistics();\n                    this.populateCharts();\n                    break;\n            }\n        }));\n    }\n\n    sendActions(): void {\n        //\n    }\n\n    createCharts(): void {\n        this.heavyTrafficCtx = this.elementRef.nativeElement.querySelector('#heavyTrafficChart');\n        this.moderateTrafficCtx = this.elementRef.nativeElement.querySelector('#moderateTrafficChart');\n        this.busiestCtx = this.elementRef.nativeElement.querySelector('#busiestChart');\n\n        this.heavyTrafficChart = new Chart(this.heavyTrafficCtx, {\n            type: 'horizontalBar',\n            data: {\n                labels: [],\n                datasets: [\n                    {\n                        data: [],\n                        hoverBackgroundColor: uiConfig.links.heavyTrafficColor\n                    }\n                ]\n            },\n            options: trafficChartOptions\n        });\n        this.moderateTrafficChart = new Chart(this.moderateTrafficCtx, {\n            type: 'horizontalBar',\n            data: {\n                labels: [],\n                datasets: [\n                    {\n                        data: [],\n                        hoverBackgroundColor: uiConfig.links.moderateTrafficColor\n                    }\n                ]\n            },\n            options: trafficChartOptions\n        });\n        this.busiestChart = new Chart(this.busiestCtx, {\n            type: 'line',\n            data: {\n                labels: [],\n                datasets: [\n                    {\n                        label: 'Traffic volume',\n                        steppedLine: true,\n                        data: [],\n                        borderColor: busiestColor,\n                        fill: false\n                    }\n                ]\n            },\n            options: busiestChartOptions\n        });\n    }\n\n    populateCharts(): void {\n        this.updateOptions();\n        this.updateData();\n        this.updateCharts();\n    }\n\n    updateOptions(): void {\n        this.heavyTrafficChart.options.title.text = 'Heavy traffic';\n        this.heavyTrafficChart.data.labels = this.statistics.heavyTrafficLabels;\n        this.moderateTrafficChart.options.title.text = 'Moderate traffic';\n        this.moderateTrafficChart.data.labels = this.statistics.moderateTrafficLabels;\n        this.busiestChart.options.title.text = 'Busiest edge ' + this.statistics.busiestEdgeLabel;\n        this.busiestChart.options.annotation.annotations.push({\n            type: 'line',\n            mode: 'horizontal',\n            scaleID: \"y-axis-0\",\n            value: this.statistics.busiestEdgeCapacity,\n            borderColor: '#666',\n            borderWidth: 2,\n            label: {\n                backgroundColor: 'rgba(255,255,255,1.0)',\n                fontStyle: \"normal\",\n                fontColor: \"#666\",\n                position: \"right\",\n                yAdjust: 0,\n                content: \"Capacity\",\n                enabled: true\n            }\n        });\n        this.busiestChart.options.annotation.annotations.push({\n            type: 'line',\n            mode: 'vertical',\n            scaleID: \"x-axis-0\",\n            value: formatTimeFromSeconds(this.statistics.busiestEdgeDelay),\n            borderColor: '#666',\n            borderWidth: 2,\n            label: {\n                backgroundColor: 'rgba(255,255,255,1.0)',\n                fontStyle: \"normal\",\n                fontColor: \"#666\",\n                position: \"center\",\n                xAdjust: 0,\n                content: \"Delay\",\n                enabled: true\n            }\n        });\n        this.busiestChart.data.labels = this.statistics.periods.map((value: number) => formatTimeFromSeconds(value));\n    }\n\n    updateData(): void {\n        this.heavyTrafficChart.data.datasets[0].data = this.statistics.heavyTrafficData;\n        this.moderateTrafficChart.data.datasets[0].data = this.statistics.moderateTrafficData;\n        this.busiestChart.data.datasets[0].data = this.statistics.busiestEdgeData;\n    }\n\n    updateCharts(): void {\n        this.heavyTrafficChart.update();\n        this.moderateTrafficChart.update();\n        this.busiestChart.update();\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        \n    \n\n\n    \n        \n    \n\n    \n\n    \n                \n                    ./charts.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChartsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClockService.html":{"url":"injectables/ClockService.html","title":"injectable - ClockService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ClockService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/clock.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                endSimulation\n                            \n                            \n                                    Private\n                                interval\n                            \n                            \n                                    Private\n                                processingTime\n                            \n                            \n                                    Private\n                                simulatedTimeInterval\n                            \n                            \n                                    Private\n                                simulatedTimePeriod\n                            \n                            \n                                    Private\n                                subscription\n                            \n                            \n                                    Private\n                                totalProcessingTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                execute\n                            \n                            \n                                    Public\n                                getStatistics\n                            \n                            \n                                    Private\n                                pause\n                            \n                            \n                                    Public\n                                pressControl\n                            \n                            \n                                    Private\n                                quick\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Private\n                                slow\n                            \n                            \n                                    Private\n                                start\n                            \n                            \n                                    Private\n                                step\n                            \n                            \n                                    Private\n                                stop\n                            \n                            \n                                    Private\n                                updateSimulatedTimePeriod\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, simulation: SimulationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/simulation/clock.service.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        simulation\n                                                  \n                                                        \n                                                                    SimulationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            execute\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        execute()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:180\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getStatistics\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getStatistics()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:93\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pause\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        pause()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:115\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pressControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        pressControl(control: Control)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        control\n                                                        \n                                                                    Control\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            quick\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        quick()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:163\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            slow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        slow()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:148\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            start\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        start()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:103\n                            \n                        \n\n\n                \n                    \n                            Starts simulation.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            step\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        step()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:141\n                            \n                        \n\n\n                \n                    \n                            Performs one step.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stop\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        stop()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:121\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateSimulatedTimePeriod\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateSimulatedTimePeriod()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:195\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            endSimulation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        endSimulation:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            interval\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        interval:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:36\n                            \n                        \n\n                \n                    \n                        Simulation timer.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            processingTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        processingTime:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:41\n                            \n                        \n\n                \n                    \n                        PropagateFlow processing time (ms).\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            simulatedTimeInterval\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        simulatedTimeInterval:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:31\n                            \n                        \n\n                \n                    \n                        Simulated time interval.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            simulatedTimePeriod\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        simulatedTimePeriod:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:26\n                            \n                        \n\n                \n                    \n                        Simulated running time.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            totalProcessingTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        totalProcessingTime:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:43\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Observable, interval, Subscription } from \"rxjs\";\nimport { takeWhile } from \"rxjs/operators\";\n\nimport { Store, select } from '@ngrx/store';\n\nimport { SimulationService } from \"./simulation.service\";\nimport * as fromSimulation from './models/reducers';\nimport { SimulationActionTypes } from './models/actions/simulation.actions';\nimport { uiConfig } from \"../ui/ui-config\";\n\nexport enum Control {\n    start = 'start',\n    pause = 'pause',\n    stop = 'stop',\n    step = 'step',\n    slow = 'slow',\n    quick = 'quick'\n}\n\n@Injectable() export class ClockService {\n\n    /**\n     * Simulated running time.\n     */\n    private simulatedTimePeriod: number;\n\n    /**\n     * Simulated time interval.\n     */\n    private simulatedTimeInterval: number;\n\n    /**\n     * Simulation timer.\n     */\n    private interval: Observable;\n\n    /**\n     * PropagateFlow processing time (ms).\n     */\n    private processingTime: number = 0;\n\n    private totalProcessingTime: number = 0;\n\n    private endSimulation: boolean = false;\n\n    private subscription: Subscription;\n\n    constructor(\n        private store: Store,\n        private simulation: SimulationService\n    ) {\n        this.store.pipe(select(fromSimulation.end)).subscribe((end: boolean) => {\n            this.endSimulation = end;\n        });\n        this.simulatedTimePeriod = 0;\n        this.simulatedTimeInterval = uiConfig.simulatedTimeInterval;\n    }\n\n    public reset(): void {\n        this.simulatedTimePeriod = 0;\n        this.simulatedTimeInterval = uiConfig.simulatedTimeInterval;\n        this.interval = null;\n        this.processingTime = 0;\n        this.totalProcessingTime = 0;\n        this.endSimulation = false;\n        this.subscription = null;\n    }\n\n    public pressControl(control: Control): void {\n        switch (control) {\n            case Control.start:\n                this.start();\n                break;\n            case Control.pause:\n                this.pause();\n                break;\n            case Control.stop:\n                this.stop();\n                break;\n            case Control.step:\n                this.step();\n                break;\n            case Control.slow:\n                this.slow();\n                break;\n            case Control.quick:\n                this.quick();\n                break;\n        }\n    }\n\n    public getStatistics(): any {\n        return {\n            totalSimulatedTime: this.simulatedTimePeriod,\n            totalProcessingTime: this.totalProcessingTime\n        };\n    }\n\n    /**\n     * Starts simulation.\n     */\n    private start(): void {\n        if (!this.subscription || this.subscription.closed) {\n            // Sets interval.\n            this.interval = interval(this.simulatedTimeInterval);\n            this.subscription = this.interval.pipe(\n                takeWhile(() => !this.endSimulation)\n            ).subscribe(() => {\n                this.execute();\n            });\n        }\n    }\n\n    private pause(): void {\n        if (this.subscription && !this.subscription.closed) {\n            this.subscription.unsubscribe();\n        }\n    }\n\n    private stop(): void {\n        if (this.subscription && !this.subscription.closed) {\n            this.subscription.unsubscribe();\n        }\n        this.simulation.resetFlows();\n        this.reset();\n        // Updates simulation state.\n        this.store.dispatch({\n            type: SimulationActionTypes.PeriodsChanged,\n            payload: { simulatedTimeInterval: this.simulatedTimeInterval, simulatedTimePeriod: this.simulatedTimePeriod }\n        });\n        this.store.dispatch({\n            type: SimulationActionTypes.SimulationEnded,\n            payload: false\n        });\n    }\n\n    /**\n     * Performs one step.\n     */\n    private step(): void {\n        if (this.subscription && !this.subscription.closed) {\n            this.subscription.unsubscribe();\n        }\n        this.execute();\n    }\n\n    private slow(): void {\n        if (this.subscription && !this.subscription.closed) {\n            this.subscription.unsubscribe();\n            this.simulatedTimeInterval += uiConfig.timeIntervalIncrement;\n            this.start();\n        } else {\n            this.simulatedTimeInterval += uiConfig.timeIntervalIncrement;\n        }\n        // Updates simulation state.\n        this.store.dispatch({\n            type: SimulationActionTypes.PeriodsChanged,\n            payload: { simulatedTimeInterval: this.simulatedTimeInterval, simulatedTimePeriod: this.simulatedTimePeriod }\n        });\n    }\n\n    private quick(): void {\n        if (this.simulatedTimeInterval - uiConfig.timeIntervalDecrement > this.processingTime) {\n            if (this.subscription && !this.subscription.closed) {\n                this.subscription.unsubscribe();\n                this.simulatedTimeInterval -= uiConfig.timeIntervalDecrement;\n                this.start();\n            } else {\n                this.simulatedTimeInterval -= uiConfig.timeIntervalDecrement;\n            }\n            // Updates simulation state.\n            this.store.dispatch({\n                type: SimulationActionTypes.PeriodsChanged,\n                payload: { simulatedTimeInterval: this.simulatedTimeInterval, simulatedTimePeriod: this.simulatedTimePeriod }\n            });\n        }\n    }\n\n    private execute(): void {\n        const startTime = Date.now();\n        this.simulation.propagateFlows();\n        const endTime = Date.now();\n        // Updates processing time.\n        this.processingTime = endTime - startTime;\n        this.totalProcessingTime += this.processingTime;\n        this.updateSimulatedTimePeriod();\n        // Updates simulation state.\n        this.store.dispatch({\n            type: SimulationActionTypes.PeriodsChanged,\n            payload: { simulatedTimeInterval: this.simulatedTimeInterval, simulatedTimePeriod: this.simulatedTimePeriod }\n        });\n    }\n\n    private updateSimulatedTimePeriod(): void {\n        this.simulatedTimePeriod += this.simulatedTimeInterval;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Counts.html":{"url":"interfaces/Counts.html","title":"interface - Counts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Counts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/models/simulation-state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        arrivedVehicles\n                                \n                                \n                                        startedVehicles\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        arrivedVehicles\n                                    \n                                \n                                \n                                    \n                                        arrivedVehicles:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startedVehicles\n                                    \n                                \n                                \n                                    \n                                        startedVehicles:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface NumericalSimulation {\n\n    edge: string;\n    wayName: string;\n    trafficVolume: number;\n    trafficCount: number;\n    delay: number | string;\n    stops: number;\n\n}\n\nexport interface Counts {\n\n    startedVehicles: number;\n    arrivedVehicles: number;\n\n}\n\nexport interface Simulation {\n\n    /**\n     * Simulation data.\n     */\n    data: NumericalSimulation[];\n    /**\n     * Simulation counts.\n     */\n    counts: Counts;\n    /**\n     * Simulation avg. speed.\n     */\n    avgSpeed: number;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DemandModule.html":{"url":"modules/DemandModule.html","title":"module - DemandModule","body":"\n                   \n\n\n\n\n  Modules\n  DemandModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DemandModule\n\n\n\ncluster_DemandModule_providers\n\n\n\n\nDemandService\n\nDemandService\n\n\n\nDemandModule\n\nDemandModule\n\nDemandModule -->\n\nDemandService->DemandModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/demand/demand.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     DemandService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { DemandService } from './demand.service';\n\n@NgModule({\n    imports: [],\n    declarations: [],\n    providers: [DemandService]\n})\nexport class DemandModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DemandService.html":{"url":"injectables/DemandService.html","title":"injectable - DemandService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DemandService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/demand/demand.service.ts\n        \n\n            \n                Description\n            \n            \n                Estimates the O/D matrix of the traffic demand.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                odMatrix\n                            \n                            \n                                    Private\n                                startingTimes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                argmin\n                            \n                            \n                                    Public\n                                calcOdMatrix\n                            \n                            \n                                    Public\n                                changeDemand\n                            \n                            \n                                    Public\n                                changeStartingTimes\n                            \n                            \n                                    Private\n                                estimate\n                            \n                            \n                                    Public\n                                getOdMatrix\n                            \n                            \n                                    Public\n                                getStartingTimes\n                            \n                            \n                                    Public\n                                gls\n                            \n                            \n                                    Private\n                                isOnPath\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Private\n                                sum\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(network: NetworkService)\n                    \n                \n                        \n                            \n                                Defined in src/app/demand/demand.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            argmin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        argmin(linkFlows: LinkFlow[], odMatrixAssignment: number[][])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:85\n                            \n                        \n\n\n                \n                    \n                            Argument of the minimum function.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        linkFlows\n                                                        \n                                                                    LinkFlow[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The link flows\n\n                                                        \n                                                \n                                                \n                                                        odMatrixAssignment\n                                                        \n                                                                    number[][]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Assignment matrix of the O/D pair\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            calcOdMatrix\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        calcOdMatrix()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:33\n                            \n                        \n\n\n                \n                    \n                            Calculates O/D matrix.\n\n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            changeDemand\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        changeDemand(demand: number[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        demand\n                                                        \n                                                                    number[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            changeStartingTimes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        changeStartingTimes(startingTimes: number[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        startingTimes\n                                                        \n                                                                    number[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            estimate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        estimate(linkFlows: LinkFlow[], odMatrixAssignment: number[][], x: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:104\n                            \n                        \n\n\n                \n                    \n                            Estimates the sum for the unknown demand.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        linkFlows\n                                                        \n                                                                    LinkFlow[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The link flows\n\n                                                        \n                                                \n                                                \n                                                        odMatrixAssignment\n                                                        \n                                                                    number[][]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Assignment matrix of the O/D pair\n\n                                                        \n                                                \n                                                \n                                                        x\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The unknown demand\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getOdMatrix\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getOdMatrix()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     number[]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getStartingTimes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getStartingTimes()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     number[]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gls\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        gls(linkFlows: LinkFlow[], assignmentMatrix: [][][])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:71\n                            \n                        \n\n\n                \n                    \n                            Generalized Least Squares (GLS).\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        linkFlows\n                                                        \n                                                                    LinkFlow[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The link flows\n\n                                                        \n                                                \n                                                \n                                                        assignmentMatrix\n                                                        \n                                                                    [][][]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Assignment matrix [pairs,paths,edges]\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number[]\n\n                            \n                                \n                                    The array of the demand\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isOnPath\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isOnPath(odMatrixAssignment: number[][], i: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:136\n                            \n                        \n\n\n                \n                    \n                            Checks that the edge belongs to one of the paths of the O/D pair.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        odMatrixAssignment\n                                                        \n                                                                    number[][]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Assignment matrix of the O/D pair\n\n                                                        \n                                                \n                                                \n                                                        i\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The index of the edge\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sum\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sum(odMatrixAssignment: number[][], i: number, x: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:121\n                            \n                        \n\n\n                \n                    \n                            Sums the unknown demand probability for each path.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        odMatrixAssignment\n                                                        \n                                                                    number[][]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Assignment matrix of the O/D pair\n\n                                                        \n                                                \n                                                \n                                                        i\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The index of the edge\n\n                                                        \n                                                \n                                                \n                                                        x\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The unknown demand\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            odMatrix\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        odMatrix:     number[]\n\n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:17\n                            \n                        \n\n                \n                    \n                        The array of the demand.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            startingTimes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        startingTimes:     number[]\n\n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:22\n                            \n                        \n\n                \n                    \n                        Starting time in seconds for each O/D pair.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\nimport { NetworkService } from '../network/network.service';\nimport { LinkFlow } from '../network/graph';\nimport { round } from '../utils';\nimport { uiConfig } from '../ui/ui-config';\n\n/**\n * Estimates the O/D matrix of the traffic demand.\n */\n@Injectable() export class DemandService {\n\n    /**\n     * The array of the demand.\n     */\n    private odMatrix: number[] = [];\n\n    /**\n     * Starting time in seconds for each O/D pair.\n     */\n    private startingTimes: number[] = [];\n\n    constructor(private network: NetworkService) { }\n\n    public reset(): void {\n        this.odMatrix = [];\n    }\n\n    /**\n     * Calculates O/D matrix.\n     */\n    public calcOdMatrix(): Observable {\n        // Gets link flows from network.\n        const linkFlows = this.network.getLinkFlows();\n        // Gets assignment matrix from network.\n        const assignmentMatrix = this.network.getAssignmentMatrix();\n        // Calculates demand.\n        this.odMatrix = this.gls(linkFlows, assignmentMatrix);\n        // Initializes starting times.\n        this.startingTimes = Array(this.odMatrix.length).fill(0);\n        return of(null);\n    }\n\n    public getOdMatrix(): number[] {\n        return this.odMatrix;\n    }\n\n    public changeDemand(demand: number[]): void {\n        if (demand.length > 0) {\n            this.odMatrix = demand;\n        }\n    }\n\n    public getStartingTimes(): number[] {\n        return this.startingTimes;\n    }\n\n    public changeStartingTimes(startingTimes: number[]): void {\n        if (startingTimes.length > 0) {\n            this.startingTimes = startingTimes;\n        }\n    }\n\n    /**\n     * Generalized Least Squares (GLS).\n     * @param linkFlows The link flows\n     * @param assignmentMatrix Assignment matrix [pairs,paths,edges]\n     * @returns The array of the demand\n     */\n    public gls(linkFlows: LinkFlow[], assignmentMatrix: number[][][]): number[] {\n        const demand: number[] = [];\n        // Calculates argument of the minimum for each O/D pair.\n        for (let z = 0; z  0 ? this.argmin(linkFlows, assignmentMatrix[z]) : null;\n        }\n        return demand;\n    }\n\n    /**\n     * Argument of the minimum function.\n     * @param linkFlows The link flows\n     * @param odMatrixAssignment Assignment matrix of the O/D pair\n     */\n    private argmin(linkFlows: LinkFlow[], odMatrixAssignment: number[][]): number {\n        const estimations: number[] = [];\n        // The unknown demand.\n        let x = 0;\n        estimations[x] = this.estimate(linkFlows, odMatrixAssignment, x);\n        if (estimations[x] == 0) { return 0; }\n        do {\n            x++;\n            estimations[x] = this.estimate(linkFlows, odMatrixAssignment, x);\n        } while (estimations[x]  0 && this.isOnPath(odMatrixAssignment, i)) {\n                const base = linkFlows[i].value - this.sum(odMatrixAssignment, i, x);\n                sum += Math.pow(base, 2) / linkFlows[i].variance;\n            }\n        }\n        return round(sum, 2);\n    }\n\n    /**\n     * Sums the unknown demand probability for each path.\n     * @param odMatrixAssignment Assignment matrix of the O/D pair\n     * @param i The index of the edge\n     * @param x The unknown demand\n     */\n    private sum(odMatrixAssignment: number[][], i: number, x: number): number {\n        let sum = 0;\n        for (let n = 0; n  0) {\n                sum += odMatrixAssignment[n][i] * x;\n            }\n        }\n        return round(sum, 2);\n    }\n\n    /**\n     * Checks that the edge belongs to one of the paths of the O/D pair.\n     * @param odMatrixAssignment Assignment matrix of the O/D pair\n     * @param i The index of the edge\n     */\n    private isOnPath(odMatrixAssignment: number[][], i: number): boolean {\n        for (let n = 0; n  0) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Edge.html":{"url":"classes/Edge.html","title":"class - Edge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Edge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                Link between two nodes.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                density\n                            \n                            \n                                    Public\n                                destination\n                            \n                            \n                                    Public\n                                distance\n                            \n                            \n                                    Public\n                                drawingOptions\n                            \n                            \n                                    Public\n                                duration\n                            \n                            \n                                    Public\n                                durationInTraffic\n                            \n                            \n                                    Public\n                                edgeId\n                            \n                            \n                                    Public\n                                flow\n                            \n                            \n                                    Public\n                                freeFlowVelocity\n                            \n                            \n                                    Public\n                                label\n                            \n                            \n                                    Public\n                                linkFlow\n                            \n                            \n                                    Public\n                                maxFlow\n                            \n                            \n                                    Public\n                                origin\n                            \n                            \n                                    Public\n                                tags\n                            \n                            \n                                    Public\n                                velocity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                calcLinkFlow\n                            \n                            \n                                    Public\n                                calcMaxFlow\n                            \n                            \n                                    Protected\n                                draw\n                            \n                            \n                                    Protected\n                                getCapacity\n                            \n                            \n                                    Public\n                                getKjam\n                            \n                            \n                                    Public\n                                getVariance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(edgeId: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/graph.ts:152\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edgeId\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            density\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        density:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:132\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            destination\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        destination:     Node\n\n                    \n                \n                    \n                        \n                            Type :     Node\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:103\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            distance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        distance:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:110\n                            \n                        \n\n                \n                    \n                        Indicates the distance in meters.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            drawingOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        drawingOptions:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:146\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            duration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        duration:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:115\n                            \n                        \n\n                \n                    \n                        Indicates the duration in seconds.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            durationInTraffic\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        durationInTraffic:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:120\n                            \n                        \n\n                \n                    \n                        Indicates the total duration of the edge, taking into account current traffic conditions.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            edgeId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        edgeId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:97\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            flow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        flow:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:134\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            freeFlowVelocity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        freeFlowVelocity:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:125\n                            \n                        \n\n                \n                    \n                        Free flow speed (m/s).\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            label\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        label:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:99\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            linkFlow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        linkFlow:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:139\n                            \n                        \n\n                \n                    \n                        Number of vehicles calculated from traffic data.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            maxFlow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maxFlow:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:144\n                            \n                        \n\n                \n                    \n                        Maximum flow of the link.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            origin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        origin:     Node\n\n                    \n                \n                    \n                        \n                            Type :     Node\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:101\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tags:     Tag[]\n\n                    \n                \n                    \n                        \n                            Type :     Tag[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:105\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            velocity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        velocity:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:130\n                            \n                        \n\n                \n                    \n                        Instant speed (m/s).\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            calcLinkFlow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        calcLinkFlow()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:161\n                            \n                        \n\n\n                \n                    \n                            Calculates the value of the link flow.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            calcMaxFlow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        calcMaxFlow(factor: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:192\n                            \n                        \n\n\n                \n                    \n                            Calculates the max flow of the edge.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        factor\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Weather Adjustment Factor\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            draw\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        draw(color: string, zIndex: number, visible: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:212\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        color\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        zIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        visible\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            getCapacity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getCapacity(timeInterval: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:208\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timeInterval\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getKjam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getKjam()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:204\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getVariance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getVariance()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:200\n                            \n                        \n\n\n                \n                    \n                            Gets the variance of measurement error of link flow.\n\n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\n\nimport * as combine from 'mout/array/combine';\n\nimport { Heap, Path } from './k-shortest-path';\nimport { round } from '../utils';\nimport { environment } from '../../environments/environment';\nimport { uiConfig } from '../ui/ui-config';\n\nexport enum PathType {\n    distance = 'distance',\n    duration = 'duration'\n}\n\n/**\n * An O/D pair is described by the origin and destination nodes, and the type of path.\n */\nexport interface OdPair {\n\n    origin: string;\n    destination: string;\n    pathType: PathType;\n\n}\n\nexport interface LinkFlow {\n\n    /**\n     * linkFlow attribute.\n     */\n    value: number;\n    /**\n     * Variance is the inverse of density.\n     */\n    variance: number;\n\n}\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public label: string;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    public drawingOptions: { marker?: google.maps.Marker } = {};\n\n    /**\n     * Used by the k shortest path routing.\n     */\n    public count: number = 0;\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public label: string;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    /**\n     * Free flow speed (m/s).\n     */\n    public freeFlowVelocity: number;\n\n    /**\n     * Instant speed (m/s).\n     */\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    /**\n     * Number of vehicles calculated from traffic data.\n     */\n    public linkFlow: number;\n\n    /**\n     * Maximum flow of the link.\n     */\n    public maxFlow: number;\n\n    public drawingOptions: {\n        originalPath?: google.maps.LatLng[],\n        path?: google.maps.LatLng[],\n        polyline?: google.maps.Polyline,\n        marker?: google.maps.Marker,\n        infowindow?: google.maps.InfoWindow\n    } = {};\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the link flow.\n     */\n    public calcLinkFlow(): void {\n        // Min distance is 1 meter.\n        if (this.distance == 0) { this.distance = 1; }\n        // Min duration is 1 second.\n        if (this.duration == 0) {\n            this.duration = round(this.distance / (50 / 3.6)) > 1 ? round(this.distance / (50 / 3.6)) : 1;\n        }\n        // Calculates free flow velocity (m/s).\n        this.freeFlowVelocity = round(this.distance / this.duration, 2);\n        // Calculates link flow.\n        if (this.durationInTraffic > 0 && this.durationInTraffic >= this.duration) {\n            // Calculates velocity (m/s).\n            this.velocity = round(this.distance / this.durationInTraffic, 2);\n            // Calculates density.\n            this.density = round(this.getKjam() * (this.freeFlowVelocity - this.velocity) / this.freeFlowVelocity, 2);\n            // Calculates flow.\n            this.flow = round(this.density * this.velocity, 2);\n            // Calculates link flow.\n            this.linkFlow = round(this.density * this.distance);\n        } else {\n            this.velocity = 0;\n            this.density = 0;\n            this.flow = 0;\n            this.linkFlow = 0;\n        }\n    }\n\n    /**\n     * Calculates the max flow of the edge.\n     * @param factor Weather Adjustment Factor\n     */\n    public calcMaxFlow(factor: number): void {\n        const maxFlow = this.getKjam() * this.freeFlowVelocity;\n        this.maxFlow = round(maxFlow * factor, 2);\n    }\n\n    /**\n     * Gets the variance of measurement error of link flow.\n     */\n    public getVariance(): number {\n        return this.density > 0 ? round(1 / this.density, 2) : 1;\n    }\n\n    public getKjam(): number {\n        return round(1 / uiConfig.sp, 2);\n    }\n\n    protected getCapacity(timeInterval: number): number {\n        return this.maxFlow * timeInterval;\n    }\n\n    protected draw(color: string, zIndex: number, visible: boolean = true): void {\n        this.drawingOptions.polyline.set('strokeColor', color);\n        this.drawingOptions.polyline.set('zIndex', zIndex);\n        this.drawingOptions.marker.set('visible', visible);\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    protected nodes: Node[] = [];\n\n    protected edges: Edge[] = [];\n\n    protected relations: Relation[] = [];\n\n    /**\n     * Paths for each O/D pair [pairs,paths,edges].\n     */\n    protected shortestPaths: Edge[][][] = [];\n\n    protected incidenceMatrix: boolean[][][] = [];\n\n    protected assignmentMatrix: number[][][] = [];\n\n    private heap: Heap;\n\n    /**\n     * Shortest paths drawing options.\n     */\n    private drawingOptions: {\n        polylines?: google.maps.Polyline[][];\n    } = {};\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public getEdge(edgeId: number): Edge {\n        return this.edges.find((edge: Edge) => edge.edgeId == edgeId);\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Key:oneway\n     * @param edgeId Id of the edge\n     */\n    public isOneway(edgeId: number): boolean {\n        return !!this.getEdge(edgeId).tags.find(tag => tag.key == 'oneway' && tag.value != 'no') ||\n            this.isRoundabout(edgeId);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Tag:junction%3Droundabout\n     * @param edgeId Id of the edge\n     */\n    public isRoundabout(edgeId: number): boolean {\n        return this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'roundabout') ||\n            this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'circular') ?\n            true : false;\n    }\n\n    public findOppositeEdge(edge: Edge): Edge {\n        return this.edges.find((value: Edge) =>\n            value.origin.nodeId == edge.destination.nodeId && value.destination.nodeId == edge.origin.nodeId\n        );\n    }\n\n    public getOdNode(label: string): Node {\n        return this.nodes.find((node: Node) => node.label == label);\n    }\n\n    public getOdNodes(): Node[] {\n        return this.nodes.filter((node: Node) => node.label);\n    }\n\n    /**\n     * Calculates the set of minimum paths.\n     * @param odPairs The O/D pairs\n     */\n    public calcShortestPaths(odPairs: OdPair[]): Observable {\n        try {\n            for (let i = 0; i  edge.label);\n    }\n\n    /**\n     * Calculates the incidence matrix of paths for O/D pairs.\n     */\n    public calcIncidenceMatrix(): Observable {\n        const edges = this.getPathsEdges();\n        for (let z = 0; z  value.edgeId == edges[m].edgeId)) {\n                        // The path crosses the edge.\n                        this.incidenceMatrix[z][n][m] = true;\n                    } else {\n                        // The path does not cross the edge.\n                        this.incidenceMatrix[z][n][m] = false;\n                    }\n                }\n            }\n        }\n        return of(null);\n    }\n\n    public getIncidenceMatrix(): boolean[][][] {\n        return this.incidenceMatrix;\n    }\n\n    /**\n     * Calculates the assignment matrix.\n     * @param odPairs The O/D pairs\n     */\n    public calcAssignmentMatrix(odPairs: OdPair[]): Observable {\n        // Calculates the probabilities of shortest paths.\n        const shortestPathsProbabilities = this.calcShortestPathsProbabilities(odPairs);\n\n        // Assignment matrix.\n        for (let z = 0; z  {\n        const edges = this.getPathsEdges();\n        for (const edge of edges) {\n            edge.calcMaxFlow(factor);\n        }\n        return of(null);\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link distance or duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param o Source node\n     * @param d Destination node\n     * @param pathType Distance or duration\n     * @param k The number of shortest paths to compute\n     * @returns The set of shortest paths\n     */\n    private ksp(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Sets to zero the count property of the nodes.\n        this.resetCount();\n        // Instantiates the heap.\n        this.heap = new Heap();\n        // Inserts the path of origin into heap with cost 0.\n        this.heap.push({ pathId: 0, node: o, edges: [], cost: 0 });\n        // Walks the graph.\n        return this.walk(o, d, pathType, k);\n    }\n\n    /**\n     * Breadth First Search (BFS) algorithm for traversing and searching tree data\n     * explores the neighbor nodes first, before moving to the next level neighbors.\n     */\n    private walk(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Set of shortest paths from origin to destination.\n        const shortestPaths: Path[] = [];\n\n        let pathId = 1;\n        let node: Node;\n        while (this.heap.getPaths().length > 0 && d.count  edge.origin.nodeId == node.nodeId) ? false : true;\n    }\n\n    private resetCount(): void {\n        for (const node of this.nodes) {\n            node.count = 0;\n        }\n    }\n\n    /**\n     * Removes the alternative paths that differ only for two links.\n     * @param shortestPaths The shortest paths as created by the algorithm\n     */\n    private filterPaths(shortestPaths: Path[]): void {\n        if (shortestPaths.length > 1) {\n            let i = 0;\n            do {\n                const pathA = shortestPaths[i].edges;\n                const pathB = shortestPaths[i + 1].edges;\n                const sharedEdges = pathA.filter((edgeOfA: Edge) =>\n                    pathB.find((edgeOfB: Edge) =>\n                        edgeOfB.edgeId == edgeOfA.edgeId));\n                if (pathA.length - sharedEdges.length  value.edgeId == edge.edgeId)) {\n                        edges.push(edge);\n                        edge.label = 'E' + count++;\n                        if (!environment.testing) {\n                            edge.drawingOptions.infowindow.setContent('Edge: ' + edge.label);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Multinomial logit model.\n     * @param odPairs The O/D pairs\n     */\n    private calcShortestPathsProbabilities(odPairs: OdPair[]): number[][] {\n        // Gets the total cost of paths.\n        const pathCosts = this.calcPathCosts(odPairs);\n        const shortestPathsProbabilities: number[][] = [];\n        // Theta parameter adjustment.\n        const parameter = uiConfig.theta * 100;\n        // Calculates numerator.\n        const exps: number[][] = [];\n        for (let z = 0; z  {\n                return value > 0 ? Math.exp(-value / parameter) : 0;\n            });\n        }\n        // Calculates denominator.\n        const sumExps: number[] = [];\n        for (let z = 0; z  a + b, 0);\n            sumExps.push(sum);\n        }\n        // Probabilities.\n        for (let z = 0; z  0 ? round(exps[z][n] / sumExps[z], 3) : 0;\n                shortestPathsProbabilities[z].push(p);\n            }\n        }\n        return shortestPathsProbabilities;\n    }\n\n    private calcPathCosts(odPairs: OdPair[]): number[][] {\n        const pathCosts: number[][] = [];\n        for (let z = 0; z \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnumValues.html":{"url":"classes/EnumValues.html","title":"class - EnumValues","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnumValues\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/utils.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getNames\n                            \n                            \n                                    Static\n                                getValues\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getNames\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getNames(e: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/utils.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getValues\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getValues(e: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/utils.ts:9\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     T[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export type EnumValueType = string | number;\n\nexport class EnumValues {\n\n    public static getNames(e: any): string[] {\n        return Object.keys(e).filter((key: string) => isNaN(+key));\n    }\n\n    public static getValues(e: any): T[] {\n        return this.getNames(e).map((name: string) => e[name]) as T[];\n    }\n\n}\n\nexport function toSeconds(value: number): number {\n    return value / 1000;\n}\n\n/**\n * Format time to M:SS\n * @param s Seconds\n * @returns M:SS\n */\nexport function formatTimeFromSeconds(s: number): string {\n    return Math.floor(s / 60) + ':' + ('0' + Math.floor(s % 60)).slice(-2);\n}\n\n/**\n * Format time to M:SS.mmm\n * @param ms Milliseconds\n * @returns M:SS.mmm\n */\nexport function formatTimeFromMilliseconds(ms: number): string {\n    return Math.floor(ms / 1000 / 60) + ':' +\n        ('0' + Math.floor((ms / 1000) % 60)).slice(-2) + '.' +\n        ('00' + (ms - Math.floor(ms / 1000) * 1000)).slice(-3);\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EstimateOfDemandComponent.html":{"url":"components/EstimateOfDemandComponent.html","title":"component - EstimateOfDemandComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EstimateOfDemandComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-estimate-of-demand\n            \n\n            \n                styleUrls\n                ./estimate-of-demand.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./estimate-of-demand.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pathTypes\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addDestination\n                            \n                            \n                                addOrigin\n                            \n                            \n                                deleteOdPair\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                updateOdPairs\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Abstract\n                                ngOnInit\n                            \n                            \n                                    Abstract\n                                receiveActions\n                            \n                            \n                                    Abstract\n                                sendActions\n                            \n                            \n                                    Abstract\n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    odPairs\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, wizard: WizardService, network: NetworkService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type :    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addDestination\n                            \n                            \n                        \n                    \n                \n                \n                    \naddDestination(control: FormArray, origin: string, destination: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:150\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        control\n                                                        \n                                                                    FormArray\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        origin\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        destination\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addOrigin\n                            \n                            \n                        \n                    \n                \n                \n                    \naddOrigin(control: FormArray, origin: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:142\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        control\n                                                        \n                                                                    FormArray\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        origin\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteOdPair\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteOdPair(i: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:85\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        i\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateOdPairs\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateOdPairs(node: Node)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:93\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                                    Node\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pathTypes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pathTypes:     PathType[]\n\n                    \n                \n                    \n                        \n                            Type :     PathType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        odPairs\n                    \n                \n\n                \n                    \n                        getodPairs()\n                    \n                \n                            \n                                \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:29\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, FormArray } from '@angular/forms';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { WizardService } from '../wizard.service';\nimport { NetworkService } from '../../../network/network.service';\nimport * as fromUi from '../../models/reducers';\nimport { Map } from '../../models/ui-state';\nimport { PathType, OdPair, Node } from '../../../network/graph';\nimport { EnumValues } from '../../utils';\nimport { uiConfig } from '../../ui-config';\n\nimport { BaseComponent } from '../../models/base.component';\n\n@Component({\n    selector: 'wizard-estimate-of-demand',\n    templateUrl: './estimate-of-demand.component.html',\n    styleUrls: ['./estimate-of-demand.component.scss']\n})\nexport class EstimateOfDemandComponent extends BaseComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    pathTypes: PathType[];\n\n    get odPairs(): FormArray {\n        return this.formGroup.get('odPairs') as FormArray;\n    }\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private store: Store,\n        private wizard: WizardService,\n        private network: NetworkService\n    ) {\n        super();\n\n        this.pathTypes = EnumValues.getValues(PathType);\n    }\n\n    ngOnInit(): void {\n        this.valueChanges();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        // Updates network service data on value changes.\n        this.subscriptions.push(this.formGroup.get('odPairs').valueChanges.subscribe(\n            (odPairs: OdPair[]) => {\n                this.network.setOdPairs(odPairs);\n            }\n        ));\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.currentStep)).subscribe((currentStep: number) => {\n            switch (currentStep) {\n                case 0:\n                    // Resets control.\n                    const control = this.formGroup.get('odPairs') as FormArray;\n                    if (control.length > 0) {\n                        for (let i = control.length - 1; i >= 0; i--) {\n                            control.removeAt(i);\n                        }\n                    }\n                    break;\n            }\n        }));\n        this.subscriptions.push(this.store.pipe(select(fromUi.map)).subscribe((map: Map) => {\n            if (map && map.data.selectedNode) {\n                this.updateOdPairs(map.data.selectedNode);\n\n            }\n        }));\n    }\n\n    sendActions(): void {\n        //\n    }\n\n    deleteOdPair(i: number): void {\n        // Updates control.\n        const control = this.formGroup.get('odPairs') as FormArray;\n        control.removeAt(i);\n        // Updates step state.\n        this.wizard.updateStep(this.formGroup.value, this.index);\n    }\n\n    updateOdPairs(node: Node): void {\n        const control = this.formGroup.get('odPairs') as FormArray;\n        const odPairs = control.value;\n\n        let error = null;\n\n        if (odPairs.length > 0) {\n            const odPair = odPairs[odPairs.length - 1];\n            // Checks limit.\n            if (odPairs.length == uiConfig.maxOdPairs && odPairs[uiConfig.maxOdPairs - 1].destination) {\n                error = `The maximum number of O/D pairs is ${uiConfig.maxOdPairs}`;\n                // Checks if valid node.\n            } else if (odPair.destination == null && node.incomingEdges.length == 0) {\n                error = `The node cannot be a destination`;\n            } else if (odPair.destination && node.outgoingEdges.length == 0) {\n                error = `The node cannot be an origin`;\n                // Checks if last O/D pair is completed.\n            } else if (odPair.destination) {\n                // Adds origin.\n                this.addOrigin(control, node.label);\n                // Checks if same node.\n            } else if (odPair.origin == node.label) {\n                error = `The origin and destination nodes cannot be the same`;\n            } else {\n                // Checks if the pair is valid.\n                if (odPairs.filter(pair => pair.origin == odPair.origin && pair.destination == node.label).length > 0) {\n                    error = `O/D pair already selected`;\n                } else {\n                    // Adds destination.\n                    this.addDestination(control, odPair.origin, node.label);\n                }\n            }\n        } else {\n            if (node.outgoingEdges.length == 0) {\n                error = `The node cannot be an origin`;\n            } else {\n                // Adds origin.\n                this.addOrigin(control, node.label);\n            }\n        }\n\n        if (error) {\n            this.wizard.putInError(error);\n        } else {\n            // Updates step state.\n            this.wizard.updateStep({ odPairs: control.value }, 2);\n        }\n    }\n\n    addOrigin(control: FormArray, origin: string): void {\n        control.push(this.formBuilder.group({\n            origin: origin,\n            destination: null,\n            pathType: null\n        }));\n    }\n\n    addDestination(control: FormArray, origin: string, destination: string): void {\n        control.get([control.length - 1]).patchValue({\n            origin: origin,\n            destination: destination,\n            pathType: PathType.distance\n        });\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                O\n                D\n                Path\n                \n            \n            \n                \n                    {{ pair.value.origin }}\n                \n                \n                    {{ pair.value.destination }}\n                \n                \n                    \n                        \n                            {{ path }}\n                        \n                    \n                \n                \n                    \n                        delete\n                    \n                \n            \n        \n    \n\n    \n        Continue\n            navigate_next\n        \n    \n\n    \n\n    \n                \n                    ./estimate-of-demand.component.scss\n                \n                .header {\n    background-color: #eceff1;\n    padding: 4px;\n    text-align: center;\n    font-weight: 500;\n}\n\n.cell {\n    background-color: #eceff1;\n    height: 48px;\n    padding: 4px;\n    text-align: center;\n\n    .mat-icon-button {\n        .mat-icon {\n            font-size: 20px;\n        }\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        O                D                Path                                                                            {{ pair.value.origin }}                                                    {{ pair.value.destination }}                                                                                                        {{ path }}                                                                                                                        delete                                                                        Continue            navigate_next            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EstimateOfDemandComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/footer/footer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                ./footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentYear\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/footer/footer.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentYear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentYear:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : new Date().getFullYear()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/footer/footer.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-footer',\n    templateUrl: './footer.component.html',\n    styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n    currentYear: number = new Date().getFullYear();\n\n    ngOnInit(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n        \n            \n                \n                    \n                        Privacy\n                    \n                \n                \n                    \n                        Terms of service\n                    \n                \n            \n        \n    \n\n    \n\n    \n        \n            Copyright&nbsp;©&nbsp;{{ currentYear }} Roberto&nbsp;Simonetti - MIT license\n        \n    \n\n    \n\n    \n                \n                    ./footer.component.scss\n                \n                @import '../../../styles/variables';\n\nfooter {\n    margin-top: 8px;\n    padding: 16px;\n    font-size: 12px;\n    text-align: center;\n        \n    .footer-logo {\n        img {\n            height: 48px;\n            width: 48px;\n        } \n    }\n        \n    .footer-links {\n        margin: 0 16px;\n\n        ul {\n            list-style: none;\n            padding: 0;\n\n            li {\n                margin: 2px;\n            }\n            \n            a {\n                text-decoration: none;\n                color: inherit;\n            \n                &:hover {\n                    text-decoration: underline;\n                }\n            }\n        }\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                Privacy                                                                                                Terms of service                                                                                        Copyright © {{ currentYear }} Roberto Simonetti - MIT license            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GoOn.html":{"url":"classes/GoOn.html","title":"class - GoOn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GoOn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/actions/wizard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/models/actions/wizard.actions.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : WizardActionTypes.GoOn\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Step } from '../ui-state';\n\n/**\n * ngrx: wizard Actions.\n */\nexport enum WizardActionTypes {\n\n    StepChanged = '[Wizard] Step Changed',\n    StepError = '[Wizard] Step Error',\n    StepPending = '[Wizard] Step Pending',\n    GoOn = '[Wizard] Go On',\n    Reset = '[Wizard] Reset'\n\n}\n\nexport class StepChanged implements Action {\n\n    public readonly type: string = WizardActionTypes.StepChanged;\n\n    constructor(public payload: { step: Step, index: number }) { }\n\n}\n\nexport class StepError implements Action {\n\n    public readonly type: string = WizardActionTypes.StepError;\n\n    constructor(public payload: string) { }\n\n}\n\nexport class StepPending implements Action {\n\n    public readonly type: string = WizardActionTypes.StepPending;\n\n    constructor(public payload: string | boolean) { }\n\n}\n\nexport class GoOn implements Action {\n\n    public readonly type: string = WizardActionTypes.GoOn;\n\n    constructor(public payload: { step: Step, index: number, nextIndex: number }) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = WizardActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type WizardActions = StepChanged | StepError | StepPending | GoOn | Reset;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GoogleMapComponent.html":{"url":"components/GoogleMapComponent.html","title":"component - GoogleMapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GoogleMapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/map/google-map.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                google-map\n            \n\n\n\n            \n                template\n                \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                map\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createMap\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                center\n                            \n                            \n                                disableDefaultUI\n                            \n                            \n                                disableDoubleClickZoom\n                            \n                            \n                                gestureHandling\n                            \n                            \n                                mapTypeId\n                            \n                            \n                                maxZoom\n                            \n                            \n                                minZoom\n                            \n                            \n                                styles\n                            \n                            \n                                zoom\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(map: MapService, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/map/google-map.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                    MapService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        center\n                    \n                    \n                        Center map. Required.\n\n                            \n                            Type :    google.maps.LatLngLiteral\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableDefaultUI\n                    \n                    \n                        Enables/disables all default UI.\n\n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableDoubleClickZoom\n                    \n                    \n                        Enables/disables zoom and center on double click. Enabled by default.\n\n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        gestureHandling\n                    \n                    \n                        This setting controls how gestures on the map are handled.\n\n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapTypeId\n                    \n                    \n                        The initial map mapTypeId. Defaults to ROADMAP.\n\n                            \n                            Type :    google.maps.MapTypeId\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxZoom\n                    \n                    \n                        The maximum zoom level which will be displayed on the map.\n\n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minZoom\n                    \n                    \n                        The minimum zoom level which will be displayed on the map.\n\n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        styles\n                    \n                    \n                        Styles to apply to each of the default map types.\n\n                            \n                            Type :    google.maps.MapTypeStyle[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zoom\n                    \n                    \n                        The initial map zoom level. Required.\n\n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createMap(el: HTMLElement)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                        \n                                                                    HTMLElement\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:66\n                            \n                        \n\n\n                \n                    \n                            On changes, updates center map & zoom.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            On init, creates map.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            map\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        map:     MapService\n\n                    \n                \n                    \n                        \n                            Type :     MapService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:51\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit, OnChanges, SimpleChange, ElementRef } from '@angular/core';\n\nimport { MapService } from './/map.service';\n\n@Component({\n    selector: 'google-map',\n    template: `\n        \n        \n        `\n})\nexport class GoogleMapComponent implements OnInit, OnChanges {\n\n    /**\n     * Center map. Required.\n     */\n    @Input() center: google.maps.LatLngLiteral;\n    /**\n     * The initial map zoom level. Required.\n     */\n    @Input() zoom: number;\n    /**\n     * Enables/disables all default UI.\n     */\n    @Input() disableDefaultUI: boolean;\n    /**\n     * Enables/disables zoom and center on double click. Enabled by default.\n     */\n    @Input() disableDoubleClickZoom: boolean;\n    /**\n     * The initial map mapTypeId. Defaults to ROADMAP.\n     */\n    @Input() mapTypeId: google.maps.MapTypeId;\n    /**\n     * The maximum zoom level which will be displayed on the map.\n     */\n    @Input() maxZoom: number;\n    /**\n     * The minimum zoom level which will be displayed on the map.\n     */\n    @Input() minZoom: number;\n    /**\n     * This setting controls how gestures on the map are handled.\n     */\n    @Input() gestureHandling: string;\n    /**\n     * Styles to apply to each of the default map types.\n     */\n    @Input() styles: google.maps.MapTypeStyle[];\n\n    constructor(public map: MapService, private elementRef: ElementRef) { }\n\n    /**\n     * On init, creates map.\n     */\n    ngOnInit(): void {\n        // Gets the map element.\n        const el: HTMLElement = this.elementRef.nativeElement.querySelector('#map');\n\n        this.createMap(el);\n    }\n\n    /**\n     * On changes, updates center map & zoom.\n     */\n    ngOnChanges(changes: { [propertyName: string]: SimpleChange }): void {\n        if (changes['center']) { this.map.setCenter(this.center); }\n        if (changes['zoom']) { this.map.setZoom(this.zoom); }\n    }\n\n    private createMap(el: HTMLElement): void {\n        this.map.initMap(el, {\n            center: this.center,\n            disableDefaultUI: this.disableDefaultUI,\n            disableDoubleClickZoom: this.disableDoubleClickZoom,\n            mapTypeId: this.mapTypeId,\n            maxZoom: this.maxZoom as number,\n            minZoom: this.minZoom as number,\n            gestureHandling: this.gestureHandling as string,\n            styles: this.styles,\n            zoom: this.zoom as number\n        });\n    }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GoogleMapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Heap.html":{"url":"classes/Heap.html","title":"class - Heap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Heap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/k-shortest-path.ts\n        \n\n            \n                Description\n            \n            \n                Heap data structure containing paths.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                paths\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getPaths\n                            \n                            \n                                    Public\n                                getShortestPath\n                            \n                            \n                                    Public\n                                pop\n                            \n                            \n                                    Public\n                                push\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            paths\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paths:     Path[]\n\n                    \n                \n                    \n                        \n                            Type :     Path[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/k-shortest-path.ts:23\n                            \n                        \n\n                \n                    \n                        The queue of paths.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getPaths\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getPaths()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/k-shortest-path.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Path[]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getShortestPath\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getShortestPath()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/k-shortest-path.ts:45\n                            \n                        \n\n\n                \n                    \n                            Returns the shortest path in the heap by cost.\n\n\n                            \n                                Returns :     Path\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pop\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        pop(pathId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/k-shortest-path.ts:37\n                            \n                        \n\n\n                \n                    \n                            Removes a path from the heap.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pathId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The id of the path\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            push\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        push(path: Path)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/k-shortest-path.ts:29\n                            \n                        \n\n\n                \n                    \n                            Inserts a path into the heap.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                        \n                                                                    Path\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The path to insert\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Edge, Node } from \"./graph\";\n\n/**\n * Path to generic node.\n */\nexport interface Path {\n\n    pathId: number;\n    node: Node;\n    edges: Edge[];\n    cost: number;\n\n}\n\n/**\n * Heap data structure containing paths.\n */\nexport class Heap {\n\n    /**\n     * The queue of paths.\n     */\n    private paths: Path[] = [];\n\n    /**\n     * Inserts a path into the heap.\n     * @param path The path to insert\n     */\n    public push(path: Path): void {\n        this.paths.push({ pathId: path.pathId, node: path.node, edges: path.edges, cost: path.cost });\n    }\n\n    /**\n     * Removes a path from the heap.\n     * @param pathId The id of the path\n     */\n    public pop(pathId: number): void {\n        const index = this.paths.findIndex((path: Path) => path.pathId == pathId);\n        this.paths.splice(index, 1);\n    }\n\n    /**\n     * Returns the shortest path in the heap by cost.\n     */\n    public getShortestPath(): Path {\n        return this.paths.reduce((prev: Path, curr: Path) => prev.cost \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home/home.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home/home.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        show:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, ElementRef } from '@angular/core';\n\nimport * as anime from 'animejs';\n\nimport { HOME_TRANSITION } from './home.transition';\n\n@Component({\n    selector: 'app-home',\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.scss'],\n    animations: [HOME_TRANSITION]\n})\nexport class HomeComponent implements OnInit, AfterViewInit {\n\n    show: boolean = false;\n\n    constructor(private elementRef: ElementRef) { }\n\n    ngOnInit(): void {\n        //\n    }\n\n    ngAfterViewInit(): void {\n        const element: HTMLElement = this.elementRef.nativeElement.querySelector('.headline .letters');\n        const text: string = element.innerText;\n        const letters: string[] = text.split('');\n\n        let wrappedText = '';\n        for (const letter of letters) {\n            wrappedText += `${letter}`;\n        }\n\n        element.innerHTML = wrappedText;\n\n        // Anime.\n        const basicTimeline = anime.timeline();\n        basicTimeline\n            .add({\n                targets: '.headline .letter',\n                scale: [0.3, 1],\n                opacity: [0, 1],\n                translateZ: 0,\n                easing: 'linear',\n                delay: (el, i) => {\n                    return 70 * (i + 1);\n                }\n            }).add({\n                targets: '.headline .line',\n                scaleX: [0, 1],\n                opacity: [0.5, 1],\n                easing: 'linear',\n                offset: '-=840',\n                delay: (el, i, l) => {\n                    return 70 * (l - i);\n                },\n                complete: (anim) => {\n                    this.show = true;\n                }\n            });\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                STRADA\n                \n            \n        \n        \n            \n                Simulation of TRAffic DAta\n                An urban traffic web simulator that uses data in real time\n                GET STARTED\n                \n                \n                More info\n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                @import '../../styles/variables';\n\nheader {\n    text-align: center;\n    color: $primary-color-text;\n}\n\n.headline {\n    font-weight: 900;\n    font-size: 5em;\n\n    .headline-wrapper {\n        position: relative;\n        display: inline-block;\n        padding-top: 0.1em;\n        padding-right: 0.05em;\n        padding-bottom: 0.15em;\n    }\n\n    .letter {\n        display: inline-block;\n    }\n\n    .line {\n        opacity: 0;\n        position: absolute;\n        left: 0;\n        height: 5px;\n        width: 100%;\n        background-color: $primary-color-text;\n        transform-origin: 0 0;\n    }\n    .line-top { top: 0; }\n    .line-bottom { bottom: 0; }\n}\n\n.subheading {\n    height: 30vh;\n\n    .info {\n        font-size: 14px;\n        text-decoration: underline;\n        color: inherit;\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        STRADA                                                                        Simulation of TRAffic DAta                An urban traffic web simulator that uses data in real time                GET STARTED                                                More info                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoDialogComponent.html":{"url":"components/InfoDialogComponent.html","title":"component - InfoDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InfoDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/info-dialog.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                info-dialog\n            \n\n\n\n            \n                template\n                Info\n\n    {{ data }}\n\n\n    No\n    Yes\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/info-dialog.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/info-dialog.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/info-dialog.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n    selector: 'info-dialog',\n    template: `\n        Info\n        \n            {{ data }}\n        \n        \n            No\n            Yes\n        \n    `,\n    styles: []\n})\nexport class InfoDialogComponent {\n\n    constructor(\n        public dialogRef: MatDialogRef,\n        @Inject(MAT_DIALOG_DATA) public data: any\n    ) { }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Info    {{ data }}    No    Yes'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InfoDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LinkFlow.html":{"url":"interfaces/LinkFlow.html","title":"interface - LinkFlow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LinkFlow\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        value\n                                \n                                \n                                        variance\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    linkFlow attribute.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        variance\n                                    \n                                \n                                \n                                    \n                                        variance:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Variance is the inverse of density.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\n\nimport * as combine from 'mout/array/combine';\n\nimport { Heap, Path } from './k-shortest-path';\nimport { round } from '../utils';\nimport { environment } from '../../environments/environment';\nimport { uiConfig } from '../ui/ui-config';\n\nexport enum PathType {\n    distance = 'distance',\n    duration = 'duration'\n}\n\n/**\n * An O/D pair is described by the origin and destination nodes, and the type of path.\n */\nexport interface OdPair {\n\n    origin: string;\n    destination: string;\n    pathType: PathType;\n\n}\n\nexport interface LinkFlow {\n\n    /**\n     * linkFlow attribute.\n     */\n    value: number;\n    /**\n     * Variance is the inverse of density.\n     */\n    variance: number;\n\n}\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public label: string;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    public drawingOptions: { marker?: google.maps.Marker } = {};\n\n    /**\n     * Used by the k shortest path routing.\n     */\n    public count: number = 0;\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public label: string;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    /**\n     * Free flow speed (m/s).\n     */\n    public freeFlowVelocity: number;\n\n    /**\n     * Instant speed (m/s).\n     */\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    /**\n     * Number of vehicles calculated from traffic data.\n     */\n    public linkFlow: number;\n\n    /**\n     * Maximum flow of the link.\n     */\n    public maxFlow: number;\n\n    public drawingOptions: {\n        originalPath?: google.maps.LatLng[],\n        path?: google.maps.LatLng[],\n        polyline?: google.maps.Polyline,\n        marker?: google.maps.Marker,\n        infowindow?: google.maps.InfoWindow\n    } = {};\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the link flow.\n     */\n    public calcLinkFlow(): void {\n        // Min distance is 1 meter.\n        if (this.distance == 0) { this.distance = 1; }\n        // Min duration is 1 second.\n        if (this.duration == 0) {\n            this.duration = round(this.distance / (50 / 3.6)) > 1 ? round(this.distance / (50 / 3.6)) : 1;\n        }\n        // Calculates free flow velocity (m/s).\n        this.freeFlowVelocity = round(this.distance / this.duration, 2);\n        // Calculates link flow.\n        if (this.durationInTraffic > 0 && this.durationInTraffic >= this.duration) {\n            // Calculates velocity (m/s).\n            this.velocity = round(this.distance / this.durationInTraffic, 2);\n            // Calculates density.\n            this.density = round(this.getKjam() * (this.freeFlowVelocity - this.velocity) / this.freeFlowVelocity, 2);\n            // Calculates flow.\n            this.flow = round(this.density * this.velocity, 2);\n            // Calculates link flow.\n            this.linkFlow = round(this.density * this.distance);\n        } else {\n            this.velocity = 0;\n            this.density = 0;\n            this.flow = 0;\n            this.linkFlow = 0;\n        }\n    }\n\n    /**\n     * Calculates the max flow of the edge.\n     * @param factor Weather Adjustment Factor\n     */\n    public calcMaxFlow(factor: number): void {\n        const maxFlow = this.getKjam() * this.freeFlowVelocity;\n        this.maxFlow = round(maxFlow * factor, 2);\n    }\n\n    /**\n     * Gets the variance of measurement error of link flow.\n     */\n    public getVariance(): number {\n        return this.density > 0 ? round(1 / this.density, 2) : 1;\n    }\n\n    public getKjam(): number {\n        return round(1 / uiConfig.sp, 2);\n    }\n\n    protected getCapacity(timeInterval: number): number {\n        return this.maxFlow * timeInterval;\n    }\n\n    protected draw(color: string, zIndex: number, visible: boolean = true): void {\n        this.drawingOptions.polyline.set('strokeColor', color);\n        this.drawingOptions.polyline.set('zIndex', zIndex);\n        this.drawingOptions.marker.set('visible', visible);\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    protected nodes: Node[] = [];\n\n    protected edges: Edge[] = [];\n\n    protected relations: Relation[] = [];\n\n    /**\n     * Paths for each O/D pair [pairs,paths,edges].\n     */\n    protected shortestPaths: Edge[][][] = [];\n\n    protected incidenceMatrix: boolean[][][] = [];\n\n    protected assignmentMatrix: number[][][] = [];\n\n    private heap: Heap;\n\n    /**\n     * Shortest paths drawing options.\n     */\n    private drawingOptions: {\n        polylines?: google.maps.Polyline[][];\n    } = {};\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public getEdge(edgeId: number): Edge {\n        return this.edges.find((edge: Edge) => edge.edgeId == edgeId);\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Key:oneway\n     * @param edgeId Id of the edge\n     */\n    public isOneway(edgeId: number): boolean {\n        return !!this.getEdge(edgeId).tags.find(tag => tag.key == 'oneway' && tag.value != 'no') ||\n            this.isRoundabout(edgeId);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Tag:junction%3Droundabout\n     * @param edgeId Id of the edge\n     */\n    public isRoundabout(edgeId: number): boolean {\n        return this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'roundabout') ||\n            this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'circular') ?\n            true : false;\n    }\n\n    public findOppositeEdge(edge: Edge): Edge {\n        return this.edges.find((value: Edge) =>\n            value.origin.nodeId == edge.destination.nodeId && value.destination.nodeId == edge.origin.nodeId\n        );\n    }\n\n    public getOdNode(label: string): Node {\n        return this.nodes.find((node: Node) => node.label == label);\n    }\n\n    public getOdNodes(): Node[] {\n        return this.nodes.filter((node: Node) => node.label);\n    }\n\n    /**\n     * Calculates the set of minimum paths.\n     * @param odPairs The O/D pairs\n     */\n    public calcShortestPaths(odPairs: OdPair[]): Observable {\n        try {\n            for (let i = 0; i  edge.label);\n    }\n\n    /**\n     * Calculates the incidence matrix of paths for O/D pairs.\n     */\n    public calcIncidenceMatrix(): Observable {\n        const edges = this.getPathsEdges();\n        for (let z = 0; z  value.edgeId == edges[m].edgeId)) {\n                        // The path crosses the edge.\n                        this.incidenceMatrix[z][n][m] = true;\n                    } else {\n                        // The path does not cross the edge.\n                        this.incidenceMatrix[z][n][m] = false;\n                    }\n                }\n            }\n        }\n        return of(null);\n    }\n\n    public getIncidenceMatrix(): boolean[][][] {\n        return this.incidenceMatrix;\n    }\n\n    /**\n     * Calculates the assignment matrix.\n     * @param odPairs The O/D pairs\n     */\n    public calcAssignmentMatrix(odPairs: OdPair[]): Observable {\n        // Calculates the probabilities of shortest paths.\n        const shortestPathsProbabilities = this.calcShortestPathsProbabilities(odPairs);\n\n        // Assignment matrix.\n        for (let z = 0; z  {\n        const edges = this.getPathsEdges();\n        for (const edge of edges) {\n            edge.calcMaxFlow(factor);\n        }\n        return of(null);\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link distance or duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param o Source node\n     * @param d Destination node\n     * @param pathType Distance or duration\n     * @param k The number of shortest paths to compute\n     * @returns The set of shortest paths\n     */\n    private ksp(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Sets to zero the count property of the nodes.\n        this.resetCount();\n        // Instantiates the heap.\n        this.heap = new Heap();\n        // Inserts the path of origin into heap with cost 0.\n        this.heap.push({ pathId: 0, node: o, edges: [], cost: 0 });\n        // Walks the graph.\n        return this.walk(o, d, pathType, k);\n    }\n\n    /**\n     * Breadth First Search (BFS) algorithm for traversing and searching tree data\n     * explores the neighbor nodes first, before moving to the next level neighbors.\n     */\n    private walk(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Set of shortest paths from origin to destination.\n        const shortestPaths: Path[] = [];\n\n        let pathId = 1;\n        let node: Node;\n        while (this.heap.getPaths().length > 0 && d.count  edge.origin.nodeId == node.nodeId) ? false : true;\n    }\n\n    private resetCount(): void {\n        for (const node of this.nodes) {\n            node.count = 0;\n        }\n    }\n\n    /**\n     * Removes the alternative paths that differ only for two links.\n     * @param shortestPaths The shortest paths as created by the algorithm\n     */\n    private filterPaths(shortestPaths: Path[]): void {\n        if (shortestPaths.length > 1) {\n            let i = 0;\n            do {\n                const pathA = shortestPaths[i].edges;\n                const pathB = shortestPaths[i + 1].edges;\n                const sharedEdges = pathA.filter((edgeOfA: Edge) =>\n                    pathB.find((edgeOfB: Edge) =>\n                        edgeOfB.edgeId == edgeOfA.edgeId));\n                if (pathA.length - sharedEdges.length  value.edgeId == edge.edgeId)) {\n                        edges.push(edge);\n                        edge.label = 'E' + count++;\n                        if (!environment.testing) {\n                            edge.drawingOptions.infowindow.setContent('Edge: ' + edge.label);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Multinomial logit model.\n     * @param odPairs The O/D pairs\n     */\n    private calcShortestPathsProbabilities(odPairs: OdPair[]): number[][] {\n        // Gets the total cost of paths.\n        const pathCosts = this.calcPathCosts(odPairs);\n        const shortestPathsProbabilities: number[][] = [];\n        // Theta parameter adjustment.\n        const parameter = uiConfig.theta * 100;\n        // Calculates numerator.\n        const exps: number[][] = [];\n        for (let z = 0; z  {\n                return value > 0 ? Math.exp(-value / parameter) : 0;\n            });\n        }\n        // Calculates denominator.\n        const sumExps: number[] = [];\n        for (let z = 0; z  a + b, 0);\n            sumExps.push(sum);\n        }\n        // Probabilities.\n        for (let z = 0; z  0 ? round(exps[z][n] / sumExps[z], 3) : 0;\n                shortestPathsProbabilities[z].push(p);\n            }\n        }\n        return shortestPathsProbabilities;\n    }\n\n    private calcPathCosts(odPairs: OdPair[]): number[][] {\n        const pathCosts: number[][] = [];\n        for (let z = 0; z \n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LocationModule.html":{"url":"modules/LocationModule.html","title":"module - LocationModule","body":"\n                   \n\n\n\n\n  Modules\n  LocationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_providers\n\n\n\n\nLocationService\n\nLocationService\n\n\n\nLocationModule\n\nLocationModule\n\nLocationModule -->\n\nLocationService->LocationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/location/location.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     LocationService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { LocationService } from './location.service';\n\n@NgModule({\n    imports: [],\n    declarations: [],\n    providers: [LocationService]\n})\nexport class LocationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocationService.html":{"url":"injectables/LocationService.html","title":"injectable - LocationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/location/location.service.ts\n        \n\n            \n                Description\n            \n            \n                Responsible for identifying the geographic coordinates of the simulation area,\nthrough geocoding or geolocation.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                geocoder\n                            \n                            \n                                    Private\n                                latLng\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                codeAddress\n                            \n                            \n                                    Public\n                                getCurrentPosition\n                            \n                            \n                                    Public\n                                getLatLng\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Public\n                                setLatLng\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/location/location.service.ts:17\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            codeAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        codeAddress(address: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/location/location.service.ts:33\n                            \n                        \n\n\n                \n                    \n                            Geocoding service.\nWraps the Google Maps API geocoding service into an observable.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        address\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getCurrentPosition\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getCurrentPosition()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/location/location.service.ts:53\n                            \n                        \n\n\n                \n                    \n                            Tries HTML5 geolocation.\nWraps the Geolocation API into an observable.\n\n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getLatLng\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getLatLng()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/location/location.service.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     google.maps.LatLngLiteral\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/location/location.service.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setLatLng\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setLatLng(latLng: s/map.html\">google.maps.LatLngLiteral)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/location/location.service.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        latLng\n                                                        \n                                                                    google.maps.LatLngLiteral\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            geocoder\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        geocoder:     google.maps.Geocoder\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.Geocoder\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/location/location.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            latLng\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        latLng:     google.maps.LatLngLiteral\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.LatLngLiteral\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/location/location.service.ts:15\n                            \n                        \n\n                \n                    \n                        Center of the area (latitude, longitude).\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\nimport { environment } from '../../environments/environment';\n\n/**\n * Responsible for identifying the geographic coordinates of the simulation area,\n * through geocoding or geolocation.\n */\n@Injectable() export class LocationService {\n\n    /**\n     * Center of the area (latitude, longitude).\n     */\n    private latLng: google.maps.LatLngLiteral;\n\n    private geocoder: google.maps.Geocoder;\n\n    constructor() {\n        if (!environment.testing) {\n            this.geocoder = new google.maps.Geocoder();\n        }\n    }\n\n    public reset(): void {\n        this.latLng = null;\n    }\n\n    /**\n     * Geocoding service.\n     * Wraps the Google Maps API geocoding service into an observable.\n     */\n    public codeAddress(address: string): Observable {\n        return Observable.create((observer: Observer) => {\n            // Invokes geocode method of Google Maps API geocoding.\n            this.geocoder.geocode({ address: address }, (\n                (results: google.maps.GeocoderResult[], status: google.maps.GeocoderStatus) => {\n                    if (status === google.maps.GeocoderStatus.OK) {\n                        observer.next(results);\n                        observer.complete();\n                    } else {\n                        observer.error(status);\n                    }\n                })\n            );\n        });\n    }\n\n    /**\n     * Tries HTML5 geolocation.\n     * Wraps the Geolocation API into an observable.\n     */\n    public getCurrentPosition(): Observable {\n        return Observable.create((observer: Observer) => {\n            // Invokes getCurrentPosition method of Geolocation API.\n            navigator.geolocation.getCurrentPosition(\n                (position: Position) => {\n                    observer.next(position);\n                    observer.complete();\n                },\n                (error: PositionError) => {\n                    observer.error(error);\n                }\n            );\n        });\n    }\n\n    public getLatLng(): google.maps.LatLngLiteral {\n        return this.latLng;\n    }\n\n    public setLatLng(latLng: google.maps.LatLngLiteral): void {\n        this.latLng = latLng;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Map.html":{"url":"interfaces/Map.html","title":"interface - Map","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Map\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/ui-state.ts\n        \n\n            \n                Description\n            \n            \n                Map model.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Map data.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Step {\n\n    /**\n     * Form model data.\n     */\n    data: any;\n\n}\n\n/**\n * Map model.\n */\nexport interface Map {\n\n    /**\n     * Map data.\n     */\n    data: any;\n\n}\n\n/**\n * Initial steps.\n */\nexport const STEPS: Step[] = [];\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MapChanged.html":{"url":"classes/MapChanged.html","title":"class - MapChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MapChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/actions/map.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/models/actions/map.actions.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/map.actions.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : MapActionTypes.MapChanged\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/map.actions.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Map } from '../ui-state';\n\n/**\n * ngrx: map Actions.\n */\nexport enum MapActionTypes {\n\n    MapChanged = '[Map] Map Changed',\n    Reset = '[Map] Reset'\n\n}\n\nexport class MapChanged implements Action {\n\n    public readonly type: string = MapActionTypes.MapChanged;\n\n    constructor(public payload: { map: Map }) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = MapActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type MapActions = MapChanged | Reset;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapComponent.html":{"url":"components/MapComponent.html","title":"component - MapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/map/map.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                ui-map\n            \n\n            \n                styleUrls\n                ./map.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./map.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                center\n                            \n                            \n                                currentStep\n                            \n                            \n                                disableDefaultUI\n                            \n                            \n                                disableDoubleClickZoom\n                            \n                            \n                                gestureHandling\n                            \n                            \n                                mapTypeId\n                            \n                            \n                                maxZoom\n                            \n                            \n                                minZoom\n                            \n                            \n                                styles\n                            \n                            \n                                zoom\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Abstract\n                                ngOnInit\n                            \n                            \n                                    Abstract\n                                receiveActions\n                            \n                            \n                                    Abstract\n                                sendActions\n                            \n                            \n                                    Abstract\n                                valueChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, map: MapService, network: NetworkService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/map/map.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                    MapService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:128\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            center\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        center:     google.maps.LatLngLiteral\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.LatLngLiteral\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentStep\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentStep:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableDefaultUI\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        disableDefaultUI:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableDoubleClickZoom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        disableDoubleClickZoom:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gestureHandling\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gestureHandling:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapTypeId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mapTypeId:     google.maps.MapTypeId\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.MapTypeId\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxZoom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maxZoom:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minZoom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        minZoom:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            styles\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        styles:     google.maps.MapTypeStyle[]\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.MapTypeStyle[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            zoom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zoom:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { MapService } from './map.service';\nimport { NetworkService } from '../../network/network.service';\nimport * as fromUi from '../models/reducers';\nimport { Step } from '../models/ui-state';\nimport { mapStyle } from './map.style';\nimport { OdPair } from '../../network/graph';\nimport { uiConfig } from '../ui-config';\n\nimport { BaseComponent } from '../models/base.component';\n\n@Component({\n    selector: 'ui-map',\n    templateUrl: './map.component.html',\n    styleUrls: ['./map.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class MapComponent extends BaseComponent implements OnInit {\n\n    // Center map. Required.\n    center: google.maps.LatLngLiteral;\n\n    // The initial map zoom level. Required.\n    zoom: number;\n\n    disableDefaultUI: boolean;\n    disableDoubleClickZoom: boolean;\n    mapTypeId: google.maps.MapTypeId;\n    maxZoom: number;\n    minZoom: number;\n    gestureHandling: string;\n    styles: google.maps.MapTypeStyle[];\n\n    currentStep: number;\n\n    constructor(\n        private store: Store,\n        private map: MapService,\n        private network: NetworkService\n    ) {\n        super();\n        // Map options.\n        this.disableDefaultUI = true;\n        this.disableDoubleClickZoom = false;\n        this.mapTypeId = google.maps.MapTypeId.ROADMAP;\n        this.maxZoom = 18;\n        this.minZoom = 4;\n        this.gestureHandling = 'cooperative';\n        this.styles = mapStyle;\n    }\n\n    ngOnInit(): void {\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        //\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.currentStep)).subscribe((currentStep: number) => {\n            this.currentStep = currentStep;\n            switch (currentStep) {\n                case 0:\n                    this.center = uiConfig.map.center;\n                    this.zoom = uiConfig.map.zoom;\n                    break;\n                case 1:\n                    // Builds & shows initial rectangle.\n                    const bounds: google.maps.LatLngBoundsLiteral = this.map.buildBounds(this.center);\n                    this.map.showRect(bounds);\n                    break;\n                case 2:\n                    // Hides the rectangle.\n                    this.map.hideRect();\n                    // Shows graph.\n                    this.map.showGraph();\n                    // Sets centroid.\n                    this.map.setCentroid();\n                    // Sets map.\n                    this.map.setCenter(this.map.getCentroid());\n                    this.map.setZoom(17);\n                    break;\n                case 3:\n                    // Clears nodes actions.\n                    this.map.clearNodesActions();\n                    break;\n                case 4:\n                    // Hides paths.\n                    this.map.hidePaths();\n                    break;\n            }\n        }));\n        this.subscriptions.push(this.store.pipe(select(fromUi.steps)).subscribe((steps: Step[]) => {\n            switch (this.currentStep) {\n                case 0:\n                    if (steps[0]) {\n                        // Updates center map.\n                        this.center = steps[0].data.center;\n                        this.zoom = 16;\n                    } else {\n                        this.center = uiConfig.map.center;\n                        this.zoom = uiConfig.map.zoom;\n                    }\n                    break;\n                case 2:\n                    if (steps[2]) {\n                        // Shows/hides O/D nodes.\n                        const odPairs: OdPair[] = steps[2].data.odPairs;\n                        this.map.showNodes(odPairs);\n                    }\n                    break;\n                case 3:\n                    if (steps[3] && steps[3].data.odPairs) {\n                        // Shows/hides O/D paths.\n                        const odPairs = steps[3].data.odPairs;\n                        this.map.showPaths(odPairs);\n                    }\n                    break;\n            }\n        }));\n    }\n\n    sendActions(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./map.component.scss\n                \n                #map {\n    height: 70vh;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MapState.html":{"url":"interfaces/MapState.html","title":"interface - MapState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MapState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/reducers/map.reducer.ts\n        \n\n            \n                Description\n            \n            \n                Map state management.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        map\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        map\n                                    \n                                \n                                \n                                    \n                                        map:     Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import deepClone from 'mout/lang/deepClone';\n\nimport { Map } from \"../ui-state\";\nimport { MapActions, MapActionTypes } from '../actions/map.actions';\n\n/**\n * Map state management.\n */\nexport interface MapState {\n\n    map: Map;\n\n}\n\nexport const initialMapState: MapState = {\n    map: null\n};\n\n/**\n * ngrx: map Reducer.\n */\nexport function mapReducer(state: MapState = deepClone(initialMapState), action: MapActions): MapState {\n    switch (action.type) {\n        case MapActionTypes.MapChanged: {\n            state.map = action.payload.map;\n            return {\n                ...state,\n                map: deepClone(state.map)\n            };\n        }\n        case MapActionTypes.Reset: {\n            return deepClone(initialMapState);\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\nexport const getMap: (state: MapState) => Map = (state: MapState) => state.map;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n  Modules\n  MaterialModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/material.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport {\n    MatSidenavModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatIconRegistry,\n    MatButtonModule,\n    MatIconModule,\n    MatMenuModule,\n    MatStepperModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule,\n    MatDialogModule,\n    MatGridListModule,\n    MatSelectModule,\n    MatExpansionModule,\n    MatTableModule\n} from '@angular/material';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nconst materialModules: any[] = [\n    MatSidenavModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    MatMenuModule,\n    MatStepperModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule,\n    MatDialogModule,\n    MatGridListModule,\n    MatSelectModule,\n    MatExpansionModule,\n    MatTableModule\n];\n\n@NgModule({\n    imports: materialModules,\n    exports: materialModules\n})\nexport class MaterialModule {\n\n    constructor(matIconRegistry: MatIconRegistry, domSanitizer: DomSanitizer) {\n        matIconRegistry.addSvgIcon(\n            'more_vert', domSanitizer.bypassSecurityTrustResourceUrl('./assets/images/ic_more_vert_24px.svg')\n        );\n        matIconRegistry.addSvgIcon(\n            'code', domSanitizer.bypassSecurityTrustResourceUrl('./assets/images/ic_code_24px.svg')\n        );\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Member.html":{"url":"interfaces/Member.html","title":"interface - Member","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Member\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                Relation's member.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ref\n                                \n                                \n                                        role\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ref\n                                    \n                                \n                                \n                                    \n                                        ref:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\n\nimport * as combine from 'mout/array/combine';\n\nimport { Heap, Path } from './k-shortest-path';\nimport { round } from '../utils';\nimport { environment } from '../../environments/environment';\nimport { uiConfig } from '../ui/ui-config';\n\nexport enum PathType {\n    distance = 'distance',\n    duration = 'duration'\n}\n\n/**\n * An O/D pair is described by the origin and destination nodes, and the type of path.\n */\nexport interface OdPair {\n\n    origin: string;\n    destination: string;\n    pathType: PathType;\n\n}\n\nexport interface LinkFlow {\n\n    /**\n     * linkFlow attribute.\n     */\n    value: number;\n    /**\n     * Variance is the inverse of density.\n     */\n    variance: number;\n\n}\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public label: string;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    public drawingOptions: { marker?: google.maps.Marker } = {};\n\n    /**\n     * Used by the k shortest path routing.\n     */\n    public count: number = 0;\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public label: string;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    /**\n     * Free flow speed (m/s).\n     */\n    public freeFlowVelocity: number;\n\n    /**\n     * Instant speed (m/s).\n     */\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    /**\n     * Number of vehicles calculated from traffic data.\n     */\n    public linkFlow: number;\n\n    /**\n     * Maximum flow of the link.\n     */\n    public maxFlow: number;\n\n    public drawingOptions: {\n        originalPath?: google.maps.LatLng[],\n        path?: google.maps.LatLng[],\n        polyline?: google.maps.Polyline,\n        marker?: google.maps.Marker,\n        infowindow?: google.maps.InfoWindow\n    } = {};\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the link flow.\n     */\n    public calcLinkFlow(): void {\n        // Min distance is 1 meter.\n        if (this.distance == 0) { this.distance = 1; }\n        // Min duration is 1 second.\n        if (this.duration == 0) {\n            this.duration = round(this.distance / (50 / 3.6)) > 1 ? round(this.distance / (50 / 3.6)) : 1;\n        }\n        // Calculates free flow velocity (m/s).\n        this.freeFlowVelocity = round(this.distance / this.duration, 2);\n        // Calculates link flow.\n        if (this.durationInTraffic > 0 && this.durationInTraffic >= this.duration) {\n            // Calculates velocity (m/s).\n            this.velocity = round(this.distance / this.durationInTraffic, 2);\n            // Calculates density.\n            this.density = round(this.getKjam() * (this.freeFlowVelocity - this.velocity) / this.freeFlowVelocity, 2);\n            // Calculates flow.\n            this.flow = round(this.density * this.velocity, 2);\n            // Calculates link flow.\n            this.linkFlow = round(this.density * this.distance);\n        } else {\n            this.velocity = 0;\n            this.density = 0;\n            this.flow = 0;\n            this.linkFlow = 0;\n        }\n    }\n\n    /**\n     * Calculates the max flow of the edge.\n     * @param factor Weather Adjustment Factor\n     */\n    public calcMaxFlow(factor: number): void {\n        const maxFlow = this.getKjam() * this.freeFlowVelocity;\n        this.maxFlow = round(maxFlow * factor, 2);\n    }\n\n    /**\n     * Gets the variance of measurement error of link flow.\n     */\n    public getVariance(): number {\n        return this.density > 0 ? round(1 / this.density, 2) : 1;\n    }\n\n    public getKjam(): number {\n        return round(1 / uiConfig.sp, 2);\n    }\n\n    protected getCapacity(timeInterval: number): number {\n        return this.maxFlow * timeInterval;\n    }\n\n    protected draw(color: string, zIndex: number, visible: boolean = true): void {\n        this.drawingOptions.polyline.set('strokeColor', color);\n        this.drawingOptions.polyline.set('zIndex', zIndex);\n        this.drawingOptions.marker.set('visible', visible);\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    protected nodes: Node[] = [];\n\n    protected edges: Edge[] = [];\n\n    protected relations: Relation[] = [];\n\n    /**\n     * Paths for each O/D pair [pairs,paths,edges].\n     */\n    protected shortestPaths: Edge[][][] = [];\n\n    protected incidenceMatrix: boolean[][][] = [];\n\n    protected assignmentMatrix: number[][][] = [];\n\n    private heap: Heap;\n\n    /**\n     * Shortest paths drawing options.\n     */\n    private drawingOptions: {\n        polylines?: google.maps.Polyline[][];\n    } = {};\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public getEdge(edgeId: number): Edge {\n        return this.edges.find((edge: Edge) => edge.edgeId == edgeId);\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Key:oneway\n     * @param edgeId Id of the edge\n     */\n    public isOneway(edgeId: number): boolean {\n        return !!this.getEdge(edgeId).tags.find(tag => tag.key == 'oneway' && tag.value != 'no') ||\n            this.isRoundabout(edgeId);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Tag:junction%3Droundabout\n     * @param edgeId Id of the edge\n     */\n    public isRoundabout(edgeId: number): boolean {\n        return this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'roundabout') ||\n            this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'circular') ?\n            true : false;\n    }\n\n    public findOppositeEdge(edge: Edge): Edge {\n        return this.edges.find((value: Edge) =>\n            value.origin.nodeId == edge.destination.nodeId && value.destination.nodeId == edge.origin.nodeId\n        );\n    }\n\n    public getOdNode(label: string): Node {\n        return this.nodes.find((node: Node) => node.label == label);\n    }\n\n    public getOdNodes(): Node[] {\n        return this.nodes.filter((node: Node) => node.label);\n    }\n\n    /**\n     * Calculates the set of minimum paths.\n     * @param odPairs The O/D pairs\n     */\n    public calcShortestPaths(odPairs: OdPair[]): Observable {\n        try {\n            for (let i = 0; i  edge.label);\n    }\n\n    /**\n     * Calculates the incidence matrix of paths for O/D pairs.\n     */\n    public calcIncidenceMatrix(): Observable {\n        const edges = this.getPathsEdges();\n        for (let z = 0; z  value.edgeId == edges[m].edgeId)) {\n                        // The path crosses the edge.\n                        this.incidenceMatrix[z][n][m] = true;\n                    } else {\n                        // The path does not cross the edge.\n                        this.incidenceMatrix[z][n][m] = false;\n                    }\n                }\n            }\n        }\n        return of(null);\n    }\n\n    public getIncidenceMatrix(): boolean[][][] {\n        return this.incidenceMatrix;\n    }\n\n    /**\n     * Calculates the assignment matrix.\n     * @param odPairs The O/D pairs\n     */\n    public calcAssignmentMatrix(odPairs: OdPair[]): Observable {\n        // Calculates the probabilities of shortest paths.\n        const shortestPathsProbabilities = this.calcShortestPathsProbabilities(odPairs);\n\n        // Assignment matrix.\n        for (let z = 0; z  {\n        const edges = this.getPathsEdges();\n        for (const edge of edges) {\n            edge.calcMaxFlow(factor);\n        }\n        return of(null);\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link distance or duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param o Source node\n     * @param d Destination node\n     * @param pathType Distance or duration\n     * @param k The number of shortest paths to compute\n     * @returns The set of shortest paths\n     */\n    private ksp(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Sets to zero the count property of the nodes.\n        this.resetCount();\n        // Instantiates the heap.\n        this.heap = new Heap();\n        // Inserts the path of origin into heap with cost 0.\n        this.heap.push({ pathId: 0, node: o, edges: [], cost: 0 });\n        // Walks the graph.\n        return this.walk(o, d, pathType, k);\n    }\n\n    /**\n     * Breadth First Search (BFS) algorithm for traversing and searching tree data\n     * explores the neighbor nodes first, before moving to the next level neighbors.\n     */\n    private walk(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Set of shortest paths from origin to destination.\n        const shortestPaths: Path[] = [];\n\n        let pathId = 1;\n        let node: Node;\n        while (this.heap.getPaths().length > 0 && d.count  edge.origin.nodeId == node.nodeId) ? false : true;\n    }\n\n    private resetCount(): void {\n        for (const node of this.nodes) {\n            node.count = 0;\n        }\n    }\n\n    /**\n     * Removes the alternative paths that differ only for two links.\n     * @param shortestPaths The shortest paths as created by the algorithm\n     */\n    private filterPaths(shortestPaths: Path[]): void {\n        if (shortestPaths.length > 1) {\n            let i = 0;\n            do {\n                const pathA = shortestPaths[i].edges;\n                const pathB = shortestPaths[i + 1].edges;\n                const sharedEdges = pathA.filter((edgeOfA: Edge) =>\n                    pathB.find((edgeOfB: Edge) =>\n                        edgeOfB.edgeId == edgeOfA.edgeId));\n                if (pathA.length - sharedEdges.length  value.edgeId == edge.edgeId)) {\n                        edges.push(edge);\n                        edge.label = 'E' + count++;\n                        if (!environment.testing) {\n                            edge.drawingOptions.infowindow.setContent('Edge: ' + edge.label);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Multinomial logit model.\n     * @param odPairs The O/D pairs\n     */\n    private calcShortestPathsProbabilities(odPairs: OdPair[]): number[][] {\n        // Gets the total cost of paths.\n        const pathCosts = this.calcPathCosts(odPairs);\n        const shortestPathsProbabilities: number[][] = [];\n        // Theta parameter adjustment.\n        const parameter = uiConfig.theta * 100;\n        // Calculates numerator.\n        const exps: number[][] = [];\n        for (let z = 0; z  {\n                return value > 0 ? Math.exp(-value / parameter) : 0;\n            });\n        }\n        // Calculates denominator.\n        const sumExps: number[] = [];\n        for (let z = 0; z  a + b, 0);\n            sumExps.push(sum);\n        }\n        // Probabilities.\n        for (let z = 0; z  0 ? round(exps[z][n] / sumExps[z], 3) : 0;\n                shortestPathsProbabilities[z].push(p);\n            }\n        }\n        return shortestPathsProbabilities;\n    }\n\n    private calcPathCosts(odPairs: OdPair[]): number[][] {\n        const pathCosts: number[][] = [];\n        for (let z = 0; z \n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MessageArchivedComponent.html":{"url":"components/MessageArchivedComponent.html","title":"component - MessageArchivedComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MessageArchivedComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/message-archived.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snack-bar\n            \n\n\n\n            \n                template\n                {{ data }}\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/message-archived.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_SNACK_BAR_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/message-archived.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material';\n\n@Component({\n    selector: 'snack-bar',\n    template: `\n        {{ data }}\n    `,\n    styles: []\n})\nexport class MessageArchivedComponent {\n\n    constructor(@Inject(MAT_SNACK_BAR_DATA) public data: any) { }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ data }}'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MessageArchivedComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NetworkModule.html":{"url":"modules/NetworkModule.html","title":"module - NetworkModule","body":"\n                   \n\n\n\n\n  Modules\n  NetworkModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NetworkModule\n\n\n\ncluster_NetworkModule_imports\n\n\n\ncluster_NetworkModule_providers\n\n\n\n\nWeatherModule\n\nWeatherModule\n\n\n\nNetworkModule\n\nNetworkModule\n\nNetworkModule -->\n\nWeatherModule->NetworkModule\n\n\n\n\n\nNetworkService\n\nNetworkService\n\nNetworkModule -->\n\nNetworkService->NetworkModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/network/network.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     NetworkService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    WeatherModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { WeatherModule } from './weather/weather.module';\n\nimport { NetworkService } from './network.service';\n\n@NgModule({\n    imports: [WeatherModule],\n    declarations: [],\n    providers: [NetworkService]\n})\nexport class NetworkModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Node.html":{"url":"classes/Node.html","title":"class - Node","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Node\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                Node represents a specific point on the earth's surface defined by its latitude and longitude.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                count\n                            \n                            \n                                    Public\n                                drawingOptions\n                            \n                            \n                                    Public\n                                incomingEdges\n                            \n                            \n                                    Public\n                                label\n                            \n                            \n                                    Public\n                                lat\n                            \n                            \n                                    Public\n                                lon\n                            \n                            \n                                    Public\n                                nodeId\n                            \n                            \n                                    Public\n                                outgoingEdges\n                            \n                            \n                                    Public\n                                tags\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(nodeId: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/graph.ts:84\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        nodeId\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            count\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        count:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:84\n                            \n                        \n\n                \n                    \n                        Used by the k shortest path routing.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            drawingOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        drawingOptions:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            incomingEdges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        incomingEdges:     Edge[]\n\n                    \n                \n                    \n                        \n                            Type :     Edge[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            label\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        label:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lat\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lat:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:69\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lon:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nodeId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nodeId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            outgoingEdges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        outgoingEdges:     Edge[]\n\n                    \n                \n                    \n                        \n                            Type :     Edge[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tags:     Tag[]\n\n                    \n                \n                    \n                        \n                            Type :     Tag[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:73\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\n\nimport * as combine from 'mout/array/combine';\n\nimport { Heap, Path } from './k-shortest-path';\nimport { round } from '../utils';\nimport { environment } from '../../environments/environment';\nimport { uiConfig } from '../ui/ui-config';\n\nexport enum PathType {\n    distance = 'distance',\n    duration = 'duration'\n}\n\n/**\n * An O/D pair is described by the origin and destination nodes, and the type of path.\n */\nexport interface OdPair {\n\n    origin: string;\n    destination: string;\n    pathType: PathType;\n\n}\n\nexport interface LinkFlow {\n\n    /**\n     * linkFlow attribute.\n     */\n    value: number;\n    /**\n     * Variance is the inverse of density.\n     */\n    variance: number;\n\n}\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public label: string;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    public drawingOptions: { marker?: google.maps.Marker } = {};\n\n    /**\n     * Used by the k shortest path routing.\n     */\n    public count: number = 0;\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public label: string;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    /**\n     * Free flow speed (m/s).\n     */\n    public freeFlowVelocity: number;\n\n    /**\n     * Instant speed (m/s).\n     */\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    /**\n     * Number of vehicles calculated from traffic data.\n     */\n    public linkFlow: number;\n\n    /**\n     * Maximum flow of the link.\n     */\n    public maxFlow: number;\n\n    public drawingOptions: {\n        originalPath?: google.maps.LatLng[],\n        path?: google.maps.LatLng[],\n        polyline?: google.maps.Polyline,\n        marker?: google.maps.Marker,\n        infowindow?: google.maps.InfoWindow\n    } = {};\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the link flow.\n     */\n    public calcLinkFlow(): void {\n        // Min distance is 1 meter.\n        if (this.distance == 0) { this.distance = 1; }\n        // Min duration is 1 second.\n        if (this.duration == 0) {\n            this.duration = round(this.distance / (50 / 3.6)) > 1 ? round(this.distance / (50 / 3.6)) : 1;\n        }\n        // Calculates free flow velocity (m/s).\n        this.freeFlowVelocity = round(this.distance / this.duration, 2);\n        // Calculates link flow.\n        if (this.durationInTraffic > 0 && this.durationInTraffic >= this.duration) {\n            // Calculates velocity (m/s).\n            this.velocity = round(this.distance / this.durationInTraffic, 2);\n            // Calculates density.\n            this.density = round(this.getKjam() * (this.freeFlowVelocity - this.velocity) / this.freeFlowVelocity, 2);\n            // Calculates flow.\n            this.flow = round(this.density * this.velocity, 2);\n            // Calculates link flow.\n            this.linkFlow = round(this.density * this.distance);\n        } else {\n            this.velocity = 0;\n            this.density = 0;\n            this.flow = 0;\n            this.linkFlow = 0;\n        }\n    }\n\n    /**\n     * Calculates the max flow of the edge.\n     * @param factor Weather Adjustment Factor\n     */\n    public calcMaxFlow(factor: number): void {\n        const maxFlow = this.getKjam() * this.freeFlowVelocity;\n        this.maxFlow = round(maxFlow * factor, 2);\n    }\n\n    /**\n     * Gets the variance of measurement error of link flow.\n     */\n    public getVariance(): number {\n        return this.density > 0 ? round(1 / this.density, 2) : 1;\n    }\n\n    public getKjam(): number {\n        return round(1 / uiConfig.sp, 2);\n    }\n\n    protected getCapacity(timeInterval: number): number {\n        return this.maxFlow * timeInterval;\n    }\n\n    protected draw(color: string, zIndex: number, visible: boolean = true): void {\n        this.drawingOptions.polyline.set('strokeColor', color);\n        this.drawingOptions.polyline.set('zIndex', zIndex);\n        this.drawingOptions.marker.set('visible', visible);\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    protected nodes: Node[] = [];\n\n    protected edges: Edge[] = [];\n\n    protected relations: Relation[] = [];\n\n    /**\n     * Paths for each O/D pair [pairs,paths,edges].\n     */\n    protected shortestPaths: Edge[][][] = [];\n\n    protected incidenceMatrix: boolean[][][] = [];\n\n    protected assignmentMatrix: number[][][] = [];\n\n    private heap: Heap;\n\n    /**\n     * Shortest paths drawing options.\n     */\n    private drawingOptions: {\n        polylines?: google.maps.Polyline[][];\n    } = {};\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public getEdge(edgeId: number): Edge {\n        return this.edges.find((edge: Edge) => edge.edgeId == edgeId);\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Key:oneway\n     * @param edgeId Id of the edge\n     */\n    public isOneway(edgeId: number): boolean {\n        return !!this.getEdge(edgeId).tags.find(tag => tag.key == 'oneway' && tag.value != 'no') ||\n            this.isRoundabout(edgeId);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Tag:junction%3Droundabout\n     * @param edgeId Id of the edge\n     */\n    public isRoundabout(edgeId: number): boolean {\n        return this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'roundabout') ||\n            this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'circular') ?\n            true : false;\n    }\n\n    public findOppositeEdge(edge: Edge): Edge {\n        return this.edges.find((value: Edge) =>\n            value.origin.nodeId == edge.destination.nodeId && value.destination.nodeId == edge.origin.nodeId\n        );\n    }\n\n    public getOdNode(label: string): Node {\n        return this.nodes.find((node: Node) => node.label == label);\n    }\n\n    public getOdNodes(): Node[] {\n        return this.nodes.filter((node: Node) => node.label);\n    }\n\n    /**\n     * Calculates the set of minimum paths.\n     * @param odPairs The O/D pairs\n     */\n    public calcShortestPaths(odPairs: OdPair[]): Observable {\n        try {\n            for (let i = 0; i  edge.label);\n    }\n\n    /**\n     * Calculates the incidence matrix of paths for O/D pairs.\n     */\n    public calcIncidenceMatrix(): Observable {\n        const edges = this.getPathsEdges();\n        for (let z = 0; z  value.edgeId == edges[m].edgeId)) {\n                        // The path crosses the edge.\n                        this.incidenceMatrix[z][n][m] = true;\n                    } else {\n                        // The path does not cross the edge.\n                        this.incidenceMatrix[z][n][m] = false;\n                    }\n                }\n            }\n        }\n        return of(null);\n    }\n\n    public getIncidenceMatrix(): boolean[][][] {\n        return this.incidenceMatrix;\n    }\n\n    /**\n     * Calculates the assignment matrix.\n     * @param odPairs The O/D pairs\n     */\n    public calcAssignmentMatrix(odPairs: OdPair[]): Observable {\n        // Calculates the probabilities of shortest paths.\n        const shortestPathsProbabilities = this.calcShortestPathsProbabilities(odPairs);\n\n        // Assignment matrix.\n        for (let z = 0; z  {\n        const edges = this.getPathsEdges();\n        for (const edge of edges) {\n            edge.calcMaxFlow(factor);\n        }\n        return of(null);\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link distance or duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param o Source node\n     * @param d Destination node\n     * @param pathType Distance or duration\n     * @param k The number of shortest paths to compute\n     * @returns The set of shortest paths\n     */\n    private ksp(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Sets to zero the count property of the nodes.\n        this.resetCount();\n        // Instantiates the heap.\n        this.heap = new Heap();\n        // Inserts the path of origin into heap with cost 0.\n        this.heap.push({ pathId: 0, node: o, edges: [], cost: 0 });\n        // Walks the graph.\n        return this.walk(o, d, pathType, k);\n    }\n\n    /**\n     * Breadth First Search (BFS) algorithm for traversing and searching tree data\n     * explores the neighbor nodes first, before moving to the next level neighbors.\n     */\n    private walk(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Set of shortest paths from origin to destination.\n        const shortestPaths: Path[] = [];\n\n        let pathId = 1;\n        let node: Node;\n        while (this.heap.getPaths().length > 0 && d.count  edge.origin.nodeId == node.nodeId) ? false : true;\n    }\n\n    private resetCount(): void {\n        for (const node of this.nodes) {\n            node.count = 0;\n        }\n    }\n\n    /**\n     * Removes the alternative paths that differ only for two links.\n     * @param shortestPaths The shortest paths as created by the algorithm\n     */\n    private filterPaths(shortestPaths: Path[]): void {\n        if (shortestPaths.length > 1) {\n            let i = 0;\n            do {\n                const pathA = shortestPaths[i].edges;\n                const pathB = shortestPaths[i + 1].edges;\n                const sharedEdges = pathA.filter((edgeOfA: Edge) =>\n                    pathB.find((edgeOfB: Edge) =>\n                        edgeOfB.edgeId == edgeOfA.edgeId));\n                if (pathA.length - sharedEdges.length  value.edgeId == edge.edgeId)) {\n                        edges.push(edge);\n                        edge.label = 'E' + count++;\n                        if (!environment.testing) {\n                            edge.drawingOptions.infowindow.setContent('Edge: ' + edge.label);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Multinomial logit model.\n     * @param odPairs The O/D pairs\n     */\n    private calcShortestPathsProbabilities(odPairs: OdPair[]): number[][] {\n        // Gets the total cost of paths.\n        const pathCosts = this.calcPathCosts(odPairs);\n        const shortestPathsProbabilities: number[][] = [];\n        // Theta parameter adjustment.\n        const parameter = uiConfig.theta * 100;\n        // Calculates numerator.\n        const exps: number[][] = [];\n        for (let z = 0; z  {\n                return value > 0 ? Math.exp(-value / parameter) : 0;\n            });\n        }\n        // Calculates denominator.\n        const sumExps: number[] = [];\n        for (let z = 0; z  a + b, 0);\n            sumExps.push(sum);\n        }\n        // Probabilities.\n        for (let z = 0; z  0 ? round(exps[z][n] / sumExps[z], 3) : 0;\n                shortestPathsProbabilities[z].push(p);\n            }\n        }\n        return shortestPathsProbabilities;\n    }\n\n    private calcPathCosts(odPairs: OdPair[]): number[][] {\n        const pathCosts: number[][] = [];\n        for (let z = 0; z \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NumericComponent.html":{"url":"components/NumericComponent.html","title":"component - NumericComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NumericComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/numeric/numeric.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ui-numeric\n            \n\n            \n                styleUrls\n                ./numeric.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./numeric.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Abstract\n                                ngOnInit\n                            \n                            \n                                    Abstract\n                                receiveActions\n                            \n                            \n                                    Abstract\n                                sendActions\n                            \n                            \n                                    Abstract\n                                valueChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/numeric/numeric.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/numeric/numeric.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/numeric/numeric.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/numeric/numeric.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/numeric/numeric.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     NumericalSimulation[]\n\n                    \n                \n                    \n                        \n                            Type :     NumericalSimulation[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/numeric/numeric.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        displayedColumns:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['edge', 'wayName', 'trafficVolume', 'trafficCount', 'delay', 'stops']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/numeric/numeric.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { Store, select } from '@ngrx/store';\n\nimport * as fromSimulation from '../../simulation/models/reducers';\nimport { Simulation, NumericalSimulation } from '../../simulation/models/simulation-state';\n\nimport { BaseComponent } from '../models/base.component';\n\n@Component({\n    selector: 'ui-numeric',\n    templateUrl: './numeric.component.html',\n    styleUrls: ['./numeric.component.scss']\n})\nexport class NumericComponent extends BaseComponent implements OnInit {\n\n    data: NumericalSimulation[] = [];\n\n    displayedColumns: string[] = ['edge', 'wayName', 'trafficVolume', 'trafficCount', 'delay', 'stops'];\n\n    constructor(\n        private store: Store\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        //\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromSimulation.simulation)).subscribe((simulation: Simulation) => {\n            if (simulation && simulation.data) {\n                this.data = simulation.data;\n            }\n        }));\n    }\n\n    sendActions(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    \n         Edge \n         {{ element.edge }} \n    \n    \n         Way name \n         {{ element.wayName }} \n    \n    \n         Traffic volume \n         {{ element.trafficVolume }} \n    \n    \n         Traffic count \n         {{ element.trafficCount }} \n    \n    \n         Delay (s) \n         {{ element.delay }} \n    \n    \n         Stops (s) \n         {{ element.stops }} \n    \n    \n    \n\n    \n\n    \n                \n                    ./numeric.component.scss\n                \n                table {\n    width: 100%;\n\n    tr.mat-row {\n        height: 36px;\n\n        td.mat-cell {\n            font-size: 12px;\n        }\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             Edge          {{ element.edge }}                  Way name          {{ element.wayName }}                  Traffic volume          {{ element.trafficVolume }}                  Traffic count          {{ element.trafficCount }}                  Delay (s)          {{ element.delay }}                  Stops (s)          {{ element.stops }}             '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NumericComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NumericalSimulation.html":{"url":"interfaces/NumericalSimulation.html","title":"interface - NumericalSimulation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NumericalSimulation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/models/simulation-state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        delay\n                                \n                                \n                                        edge\n                                \n                                \n                                        stops\n                                \n                                \n                                        trafficCount\n                                \n                                \n                                        trafficVolume\n                                \n                                \n                                        wayName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        delay\n                                    \n                                \n                                \n                                    \n                                        delay:     number | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        edge\n                                    \n                                \n                                \n                                    \n                                        edge:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stops\n                                    \n                                \n                                \n                                    \n                                        stops:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trafficCount\n                                    \n                                \n                                \n                                    \n                                        trafficCount:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trafficVolume\n                                    \n                                \n                                \n                                    \n                                        trafficVolume:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wayName\n                                    \n                                \n                                \n                                    \n                                        wayName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface NumericalSimulation {\n\n    edge: string;\n    wayName: string;\n    trafficVolume: number;\n    trafficCount: number;\n    delay: number | string;\n    stops: number;\n\n}\n\nexport interface Counts {\n\n    startedVehicles: number;\n    arrivedVehicles: number;\n\n}\n\nexport interface Simulation {\n\n    /**\n     * Simulation data.\n     */\n    data: NumericalSimulation[];\n    /**\n     * Simulation counts.\n     */\n    counts: Counts;\n    /**\n     * Simulation avg. speed.\n     */\n    avgSpeed: number;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OdPair.html":{"url":"interfaces/OdPair.html","title":"interface - OdPair","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OdPair\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                An O/D pair is described by the origin and destination nodes, and the type of path.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        destination\n                                \n                                \n                                        origin\n                                \n                                \n                                        pathType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                    \n                                \n                                \n                                    \n                                        destination:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        origin\n                                    \n                                \n                                \n                                    \n                                        origin:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pathType\n                                    \n                                \n                                \n                                    \n                                        pathType:     PathType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PathType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\n\nimport * as combine from 'mout/array/combine';\n\nimport { Heap, Path } from './k-shortest-path';\nimport { round } from '../utils';\nimport { environment } from '../../environments/environment';\nimport { uiConfig } from '../ui/ui-config';\n\nexport enum PathType {\n    distance = 'distance',\n    duration = 'duration'\n}\n\n/**\n * An O/D pair is described by the origin and destination nodes, and the type of path.\n */\nexport interface OdPair {\n\n    origin: string;\n    destination: string;\n    pathType: PathType;\n\n}\n\nexport interface LinkFlow {\n\n    /**\n     * linkFlow attribute.\n     */\n    value: number;\n    /**\n     * Variance is the inverse of density.\n     */\n    variance: number;\n\n}\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public label: string;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    public drawingOptions: { marker?: google.maps.Marker } = {};\n\n    /**\n     * Used by the k shortest path routing.\n     */\n    public count: number = 0;\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public label: string;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    /**\n     * Free flow speed (m/s).\n     */\n    public freeFlowVelocity: number;\n\n    /**\n     * Instant speed (m/s).\n     */\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    /**\n     * Number of vehicles calculated from traffic data.\n     */\n    public linkFlow: number;\n\n    /**\n     * Maximum flow of the link.\n     */\n    public maxFlow: number;\n\n    public drawingOptions: {\n        originalPath?: google.maps.LatLng[],\n        path?: google.maps.LatLng[],\n        polyline?: google.maps.Polyline,\n        marker?: google.maps.Marker,\n        infowindow?: google.maps.InfoWindow\n    } = {};\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the link flow.\n     */\n    public calcLinkFlow(): void {\n        // Min distance is 1 meter.\n        if (this.distance == 0) { this.distance = 1; }\n        // Min duration is 1 second.\n        if (this.duration == 0) {\n            this.duration = round(this.distance / (50 / 3.6)) > 1 ? round(this.distance / (50 / 3.6)) : 1;\n        }\n        // Calculates free flow velocity (m/s).\n        this.freeFlowVelocity = round(this.distance / this.duration, 2);\n        // Calculates link flow.\n        if (this.durationInTraffic > 0 && this.durationInTraffic >= this.duration) {\n            // Calculates velocity (m/s).\n            this.velocity = round(this.distance / this.durationInTraffic, 2);\n            // Calculates density.\n            this.density = round(this.getKjam() * (this.freeFlowVelocity - this.velocity) / this.freeFlowVelocity, 2);\n            // Calculates flow.\n            this.flow = round(this.density * this.velocity, 2);\n            // Calculates link flow.\n            this.linkFlow = round(this.density * this.distance);\n        } else {\n            this.velocity = 0;\n            this.density = 0;\n            this.flow = 0;\n            this.linkFlow = 0;\n        }\n    }\n\n    /**\n     * Calculates the max flow of the edge.\n     * @param factor Weather Adjustment Factor\n     */\n    public calcMaxFlow(factor: number): void {\n        const maxFlow = this.getKjam() * this.freeFlowVelocity;\n        this.maxFlow = round(maxFlow * factor, 2);\n    }\n\n    /**\n     * Gets the variance of measurement error of link flow.\n     */\n    public getVariance(): number {\n        return this.density > 0 ? round(1 / this.density, 2) : 1;\n    }\n\n    public getKjam(): number {\n        return round(1 / uiConfig.sp, 2);\n    }\n\n    protected getCapacity(timeInterval: number): number {\n        return this.maxFlow * timeInterval;\n    }\n\n    protected draw(color: string, zIndex: number, visible: boolean = true): void {\n        this.drawingOptions.polyline.set('strokeColor', color);\n        this.drawingOptions.polyline.set('zIndex', zIndex);\n        this.drawingOptions.marker.set('visible', visible);\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    protected nodes: Node[] = [];\n\n    protected edges: Edge[] = [];\n\n    protected relations: Relation[] = [];\n\n    /**\n     * Paths for each O/D pair [pairs,paths,edges].\n     */\n    protected shortestPaths: Edge[][][] = [];\n\n    protected incidenceMatrix: boolean[][][] = [];\n\n    protected assignmentMatrix: number[][][] = [];\n\n    private heap: Heap;\n\n    /**\n     * Shortest paths drawing options.\n     */\n    private drawingOptions: {\n        polylines?: google.maps.Polyline[][];\n    } = {};\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public getEdge(edgeId: number): Edge {\n        return this.edges.find((edge: Edge) => edge.edgeId == edgeId);\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Key:oneway\n     * @param edgeId Id of the edge\n     */\n    public isOneway(edgeId: number): boolean {\n        return !!this.getEdge(edgeId).tags.find(tag => tag.key == 'oneway' && tag.value != 'no') ||\n            this.isRoundabout(edgeId);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Tag:junction%3Droundabout\n     * @param edgeId Id of the edge\n     */\n    public isRoundabout(edgeId: number): boolean {\n        return this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'roundabout') ||\n            this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'circular') ?\n            true : false;\n    }\n\n    public findOppositeEdge(edge: Edge): Edge {\n        return this.edges.find((value: Edge) =>\n            value.origin.nodeId == edge.destination.nodeId && value.destination.nodeId == edge.origin.nodeId\n        );\n    }\n\n    public getOdNode(label: string): Node {\n        return this.nodes.find((node: Node) => node.label == label);\n    }\n\n    public getOdNodes(): Node[] {\n        return this.nodes.filter((node: Node) => node.label);\n    }\n\n    /**\n     * Calculates the set of minimum paths.\n     * @param odPairs The O/D pairs\n     */\n    public calcShortestPaths(odPairs: OdPair[]): Observable {\n        try {\n            for (let i = 0; i  edge.label);\n    }\n\n    /**\n     * Calculates the incidence matrix of paths for O/D pairs.\n     */\n    public calcIncidenceMatrix(): Observable {\n        const edges = this.getPathsEdges();\n        for (let z = 0; z  value.edgeId == edges[m].edgeId)) {\n                        // The path crosses the edge.\n                        this.incidenceMatrix[z][n][m] = true;\n                    } else {\n                        // The path does not cross the edge.\n                        this.incidenceMatrix[z][n][m] = false;\n                    }\n                }\n            }\n        }\n        return of(null);\n    }\n\n    public getIncidenceMatrix(): boolean[][][] {\n        return this.incidenceMatrix;\n    }\n\n    /**\n     * Calculates the assignment matrix.\n     * @param odPairs The O/D pairs\n     */\n    public calcAssignmentMatrix(odPairs: OdPair[]): Observable {\n        // Calculates the probabilities of shortest paths.\n        const shortestPathsProbabilities = this.calcShortestPathsProbabilities(odPairs);\n\n        // Assignment matrix.\n        for (let z = 0; z  {\n        const edges = this.getPathsEdges();\n        for (const edge of edges) {\n            edge.calcMaxFlow(factor);\n        }\n        return of(null);\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link distance or duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param o Source node\n     * @param d Destination node\n     * @param pathType Distance or duration\n     * @param k The number of shortest paths to compute\n     * @returns The set of shortest paths\n     */\n    private ksp(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Sets to zero the count property of the nodes.\n        this.resetCount();\n        // Instantiates the heap.\n        this.heap = new Heap();\n        // Inserts the path of origin into heap with cost 0.\n        this.heap.push({ pathId: 0, node: o, edges: [], cost: 0 });\n        // Walks the graph.\n        return this.walk(o, d, pathType, k);\n    }\n\n    /**\n     * Breadth First Search (BFS) algorithm for traversing and searching tree data\n     * explores the neighbor nodes first, before moving to the next level neighbors.\n     */\n    private walk(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Set of shortest paths from origin to destination.\n        const shortestPaths: Path[] = [];\n\n        let pathId = 1;\n        let node: Node;\n        while (this.heap.getPaths().length > 0 && d.count  edge.origin.nodeId == node.nodeId) ? false : true;\n    }\n\n    private resetCount(): void {\n        for (const node of this.nodes) {\n            node.count = 0;\n        }\n    }\n\n    /**\n     * Removes the alternative paths that differ only for two links.\n     * @param shortestPaths The shortest paths as created by the algorithm\n     */\n    private filterPaths(shortestPaths: Path[]): void {\n        if (shortestPaths.length > 1) {\n            let i = 0;\n            do {\n                const pathA = shortestPaths[i].edges;\n                const pathB = shortestPaths[i + 1].edges;\n                const sharedEdges = pathA.filter((edgeOfA: Edge) =>\n                    pathB.find((edgeOfB: Edge) =>\n                        edgeOfB.edgeId == edgeOfA.edgeId));\n                if (pathA.length - sharedEdges.length  value.edgeId == edge.edgeId)) {\n                        edges.push(edge);\n                        edge.label = 'E' + count++;\n                        if (!environment.testing) {\n                            edge.drawingOptions.infowindow.setContent('Edge: ' + edge.label);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Multinomial logit model.\n     * @param odPairs The O/D pairs\n     */\n    private calcShortestPathsProbabilities(odPairs: OdPair[]): number[][] {\n        // Gets the total cost of paths.\n        const pathCosts = this.calcPathCosts(odPairs);\n        const shortestPathsProbabilities: number[][] = [];\n        // Theta parameter adjustment.\n        const parameter = uiConfig.theta * 100;\n        // Calculates numerator.\n        const exps: number[][] = [];\n        for (let z = 0; z  {\n                return value > 0 ? Math.exp(-value / parameter) : 0;\n            });\n        }\n        // Calculates denominator.\n        const sumExps: number[] = [];\n        for (let z = 0; z  a + b, 0);\n            sumExps.push(sum);\n        }\n        // Probabilities.\n        for (let z = 0; z  0 ? round(exps[z][n] / sumExps[z], 3) : 0;\n                shortestPathsProbabilities[z].push(p);\n            }\n        }\n        return shortestPathsProbabilities;\n    }\n\n    private calcPathCosts(odPairs: OdPair[]): number[][] {\n        const pathCosts: number[][] = [];\n        for (let z = 0; z \n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Path.html":{"url":"interfaces/Path.html","title":"interface - Path","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Path\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/k-shortest-path.ts\n        \n\n            \n                Description\n            \n            \n                Path to generic node.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        cost\n                                \n                                \n                                        edges\n                                \n                                \n                                        node\n                                \n                                \n                                        pathId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cost\n                                    \n                                \n                                \n                                    \n                                        cost:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        edges\n                                    \n                                \n                                \n                                    \n                                        edges:     Edge[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Edge[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        node\n                                    \n                                \n                                \n                                    \n                                        node:     Node\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Node\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pathId\n                                    \n                                \n                                \n                                    \n                                        pathId:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Edge, Node } from \"./graph\";\n\n/**\n * Path to generic node.\n */\nexport interface Path {\n\n    pathId: number;\n    node: Node;\n    edges: Edge[];\n    cost: number;\n\n}\n\n/**\n * Heap data structure containing paths.\n */\nexport class Heap {\n\n    /**\n     * The queue of paths.\n     */\n    private paths: Path[] = [];\n\n    /**\n     * Inserts a path into the heap.\n     * @param path The path to insert\n     */\n    public push(path: Path): void {\n        this.paths.push({ pathId: path.pathId, node: path.node, edges: path.edges, cost: path.cost });\n    }\n\n    /**\n     * Removes a path from the heap.\n     * @param pathId The id of the path\n     */\n    public pop(pathId: number): void {\n        const index = this.paths.findIndex((path: Path) => path.pathId == pathId);\n        this.paths.splice(index, 1);\n    }\n\n    /**\n     * Returns the shortest path in the heap by cost.\n     */\n    public getShortestPath(): Path {\n        return this.paths.reduce((prev: Path, curr: Path) => prev.cost \n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PeriodsChanged.html":{"url":"classes/PeriodsChanged.html","title":"class - PeriodsChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PeriodsChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/models/actions/simulation.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/simulation/models/actions/simulation.actions.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/models/actions/simulation.actions.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : SimulationActionTypes.PeriodsChanged\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/models/actions/simulation.actions.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Simulation } from '../simulation-state';\n\n/**\n * ngrx: simulation Actions.\n */\nexport enum SimulationActionTypes {\n\n    SimulationChanged = '[Simulation] Simulation Changed',\n    SimulationEnded = '[Simulation] Simulation Ended',\n    PeriodsChanged = '[Simulation] Periods Changed',\n    Reset = '[Simulation] Reset'\n\n}\n\nexport class SimulationChanged implements Action {\n\n    public readonly type: string = SimulationActionTypes.SimulationChanged;\n\n    constructor(public payload: { simulation: Simulation }) { }\n\n}\n\nexport class SimulationEnded implements Action {\n\n    public readonly type: string = SimulationActionTypes.SimulationEnded;\n\n    constructor(public payload: boolean) { }\n\n}\n\nexport class PeriodsChanged implements Action {\n\n    public readonly type: string = SimulationActionTypes.PeriodsChanged;\n\n    constructor(public payload: any) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = SimulationActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type SimulationActions = SimulationChanged | SimulationEnded | PeriodsChanged | Reset;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PrivacyComponent.html":{"url":"components/PrivacyComponent.html","title":"component - PrivacyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PrivacyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/privacy/privacy.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-privacy\n            \n\n            \n                styleUrls\n                ./privacy.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./privacy.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/privacy/privacy.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/privacy/privacy.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-privacy',\n    templateUrl: './privacy.component.html',\n    styleUrls: ['./privacy.component.scss']\n})\nexport class PrivacyComponent implements OnInit {\n\n    constructor() { }\n\n    ngOnInit(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            Privacy Policy of STRADA\n        \n        \n            This privacy policy describes how your personal data are used and protected by the application\n                STRADA\n            \n            The information is provided pursuant to art. 13 of Legislative Decree no. 196/2003 and EU Regulation 2016/679\n                General Data Protection Regulation (GDPR).\n            \n            Categories of processed data\n            The app does not collect any personal data.\n            Data you provide voluntarily\n            The data and the results are displayed by the app for the time in which you remain connected, and no data is\n                in any way acquired or saved.\n            Cookies\n            The app makes no use of cookies, neither profiling nor technical.\n            External services\n            The app uses Google Maps APIs, for which please refer to its privacy policy:\n                Google Privacy Policy\n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./privacy.component.scss\n                \n                .app-privacy {\n    .mat-card {\n        max-width: 600px;\n\n        a {\n            text-decoration: underline;\n            color: inherit;\n        }\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Privacy Policy of STRADA                            This privacy policy describes how your personal data are used and protected by the application                STRADA                        The information is provided pursuant to art. 13 of Legislative Decree no. 196/2003 and EU Regulation 2016/679                General Data Protection Regulation (GDPR).                        Categories of processed data            The app does not collect any personal data.            Data you provide voluntarily            The data and the results are displayed by the app for the time in which you remain connected, and no data is                in any way acquired or saved.            Cookies            The app makes no use of cookies, neither profiling nor technical.            External services            The app uses Google Maps APIs, for which please refer to its privacy policy:                Google Privacy Policy                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PrivacyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Relation.html":{"url":"classes/Relation.html","title":"class - Relation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Relation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                members\n                            \n                            \n                                    Public\n                                relationId\n                            \n                            \n                                    Public\n                                tags\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(relationId: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/graph.ts:229\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        relationId\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            members\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        members:     Member[]\n\n                    \n                \n                    \n                        \n                            Type :     Member[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:227\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            relationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        relationId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:225\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tags:     Tag[]\n\n                    \n                \n                    \n                        \n                            Type :     Tag[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:229\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\n\nimport * as combine from 'mout/array/combine';\n\nimport { Heap, Path } from './k-shortest-path';\nimport { round } from '../utils';\nimport { environment } from '../../environments/environment';\nimport { uiConfig } from '../ui/ui-config';\n\nexport enum PathType {\n    distance = 'distance',\n    duration = 'duration'\n}\n\n/**\n * An O/D pair is described by the origin and destination nodes, and the type of path.\n */\nexport interface OdPair {\n\n    origin: string;\n    destination: string;\n    pathType: PathType;\n\n}\n\nexport interface LinkFlow {\n\n    /**\n     * linkFlow attribute.\n     */\n    value: number;\n    /**\n     * Variance is the inverse of density.\n     */\n    variance: number;\n\n}\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public label: string;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    public drawingOptions: { marker?: google.maps.Marker } = {};\n\n    /**\n     * Used by the k shortest path routing.\n     */\n    public count: number = 0;\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public label: string;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    /**\n     * Free flow speed (m/s).\n     */\n    public freeFlowVelocity: number;\n\n    /**\n     * Instant speed (m/s).\n     */\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    /**\n     * Number of vehicles calculated from traffic data.\n     */\n    public linkFlow: number;\n\n    /**\n     * Maximum flow of the link.\n     */\n    public maxFlow: number;\n\n    public drawingOptions: {\n        originalPath?: google.maps.LatLng[],\n        path?: google.maps.LatLng[],\n        polyline?: google.maps.Polyline,\n        marker?: google.maps.Marker,\n        infowindow?: google.maps.InfoWindow\n    } = {};\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the link flow.\n     */\n    public calcLinkFlow(): void {\n        // Min distance is 1 meter.\n        if (this.distance == 0) { this.distance = 1; }\n        // Min duration is 1 second.\n        if (this.duration == 0) {\n            this.duration = round(this.distance / (50 / 3.6)) > 1 ? round(this.distance / (50 / 3.6)) : 1;\n        }\n        // Calculates free flow velocity (m/s).\n        this.freeFlowVelocity = round(this.distance / this.duration, 2);\n        // Calculates link flow.\n        if (this.durationInTraffic > 0 && this.durationInTraffic >= this.duration) {\n            // Calculates velocity (m/s).\n            this.velocity = round(this.distance / this.durationInTraffic, 2);\n            // Calculates density.\n            this.density = round(this.getKjam() * (this.freeFlowVelocity - this.velocity) / this.freeFlowVelocity, 2);\n            // Calculates flow.\n            this.flow = round(this.density * this.velocity, 2);\n            // Calculates link flow.\n            this.linkFlow = round(this.density * this.distance);\n        } else {\n            this.velocity = 0;\n            this.density = 0;\n            this.flow = 0;\n            this.linkFlow = 0;\n        }\n    }\n\n    /**\n     * Calculates the max flow of the edge.\n     * @param factor Weather Adjustment Factor\n     */\n    public calcMaxFlow(factor: number): void {\n        const maxFlow = this.getKjam() * this.freeFlowVelocity;\n        this.maxFlow = round(maxFlow * factor, 2);\n    }\n\n    /**\n     * Gets the variance of measurement error of link flow.\n     */\n    public getVariance(): number {\n        return this.density > 0 ? round(1 / this.density, 2) : 1;\n    }\n\n    public getKjam(): number {\n        return round(1 / uiConfig.sp, 2);\n    }\n\n    protected getCapacity(timeInterval: number): number {\n        return this.maxFlow * timeInterval;\n    }\n\n    protected draw(color: string, zIndex: number, visible: boolean = true): void {\n        this.drawingOptions.polyline.set('strokeColor', color);\n        this.drawingOptions.polyline.set('zIndex', zIndex);\n        this.drawingOptions.marker.set('visible', visible);\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    protected nodes: Node[] = [];\n\n    protected edges: Edge[] = [];\n\n    protected relations: Relation[] = [];\n\n    /**\n     * Paths for each O/D pair [pairs,paths,edges].\n     */\n    protected shortestPaths: Edge[][][] = [];\n\n    protected incidenceMatrix: boolean[][][] = [];\n\n    protected assignmentMatrix: number[][][] = [];\n\n    private heap: Heap;\n\n    /**\n     * Shortest paths drawing options.\n     */\n    private drawingOptions: {\n        polylines?: google.maps.Polyline[][];\n    } = {};\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public getEdge(edgeId: number): Edge {\n        return this.edges.find((edge: Edge) => edge.edgeId == edgeId);\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Key:oneway\n     * @param edgeId Id of the edge\n     */\n    public isOneway(edgeId: number): boolean {\n        return !!this.getEdge(edgeId).tags.find(tag => tag.key == 'oneway' && tag.value != 'no') ||\n            this.isRoundabout(edgeId);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Tag:junction%3Droundabout\n     * @param edgeId Id of the edge\n     */\n    public isRoundabout(edgeId: number): boolean {\n        return this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'roundabout') ||\n            this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'circular') ?\n            true : false;\n    }\n\n    public findOppositeEdge(edge: Edge): Edge {\n        return this.edges.find((value: Edge) =>\n            value.origin.nodeId == edge.destination.nodeId && value.destination.nodeId == edge.origin.nodeId\n        );\n    }\n\n    public getOdNode(label: string): Node {\n        return this.nodes.find((node: Node) => node.label == label);\n    }\n\n    public getOdNodes(): Node[] {\n        return this.nodes.filter((node: Node) => node.label);\n    }\n\n    /**\n     * Calculates the set of minimum paths.\n     * @param odPairs The O/D pairs\n     */\n    public calcShortestPaths(odPairs: OdPair[]): Observable {\n        try {\n            for (let i = 0; i  edge.label);\n    }\n\n    /**\n     * Calculates the incidence matrix of paths for O/D pairs.\n     */\n    public calcIncidenceMatrix(): Observable {\n        const edges = this.getPathsEdges();\n        for (let z = 0; z  value.edgeId == edges[m].edgeId)) {\n                        // The path crosses the edge.\n                        this.incidenceMatrix[z][n][m] = true;\n                    } else {\n                        // The path does not cross the edge.\n                        this.incidenceMatrix[z][n][m] = false;\n                    }\n                }\n            }\n        }\n        return of(null);\n    }\n\n    public getIncidenceMatrix(): boolean[][][] {\n        return this.incidenceMatrix;\n    }\n\n    /**\n     * Calculates the assignment matrix.\n     * @param odPairs The O/D pairs\n     */\n    public calcAssignmentMatrix(odPairs: OdPair[]): Observable {\n        // Calculates the probabilities of shortest paths.\n        const shortestPathsProbabilities = this.calcShortestPathsProbabilities(odPairs);\n\n        // Assignment matrix.\n        for (let z = 0; z  {\n        const edges = this.getPathsEdges();\n        for (const edge of edges) {\n            edge.calcMaxFlow(factor);\n        }\n        return of(null);\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link distance or duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param o Source node\n     * @param d Destination node\n     * @param pathType Distance or duration\n     * @param k The number of shortest paths to compute\n     * @returns The set of shortest paths\n     */\n    private ksp(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Sets to zero the count property of the nodes.\n        this.resetCount();\n        // Instantiates the heap.\n        this.heap = new Heap();\n        // Inserts the path of origin into heap with cost 0.\n        this.heap.push({ pathId: 0, node: o, edges: [], cost: 0 });\n        // Walks the graph.\n        return this.walk(o, d, pathType, k);\n    }\n\n    /**\n     * Breadth First Search (BFS) algorithm for traversing and searching tree data\n     * explores the neighbor nodes first, before moving to the next level neighbors.\n     */\n    private walk(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Set of shortest paths from origin to destination.\n        const shortestPaths: Path[] = [];\n\n        let pathId = 1;\n        let node: Node;\n        while (this.heap.getPaths().length > 0 && d.count  edge.origin.nodeId == node.nodeId) ? false : true;\n    }\n\n    private resetCount(): void {\n        for (const node of this.nodes) {\n            node.count = 0;\n        }\n    }\n\n    /**\n     * Removes the alternative paths that differ only for two links.\n     * @param shortestPaths The shortest paths as created by the algorithm\n     */\n    private filterPaths(shortestPaths: Path[]): void {\n        if (shortestPaths.length > 1) {\n            let i = 0;\n            do {\n                const pathA = shortestPaths[i].edges;\n                const pathB = shortestPaths[i + 1].edges;\n                const sharedEdges = pathA.filter((edgeOfA: Edge) =>\n                    pathB.find((edgeOfB: Edge) =>\n                        edgeOfB.edgeId == edgeOfA.edgeId));\n                if (pathA.length - sharedEdges.length  value.edgeId == edge.edgeId)) {\n                        edges.push(edge);\n                        edge.label = 'E' + count++;\n                        if (!environment.testing) {\n                            edge.drawingOptions.infowindow.setContent('Edge: ' + edge.label);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Multinomial logit model.\n     * @param odPairs The O/D pairs\n     */\n    private calcShortestPathsProbabilities(odPairs: OdPair[]): number[][] {\n        // Gets the total cost of paths.\n        const pathCosts = this.calcPathCosts(odPairs);\n        const shortestPathsProbabilities: number[][] = [];\n        // Theta parameter adjustment.\n        const parameter = uiConfig.theta * 100;\n        // Calculates numerator.\n        const exps: number[][] = [];\n        for (let z = 0; z  {\n                return value > 0 ? Math.exp(-value / parameter) : 0;\n            });\n        }\n        // Calculates denominator.\n        const sumExps: number[] = [];\n        for (let z = 0; z  a + b, 0);\n            sumExps.push(sum);\n        }\n        // Probabilities.\n        for (let z = 0; z  0 ? round(exps[z][n] / sumExps[z], 3) : 0;\n                shortestPathsProbabilities[z].push(p);\n            }\n        }\n        return shortestPathsProbabilities;\n    }\n\n    private calcPathCosts(odPairs: OdPair[]): number[][] {\n        const pathCosts: number[][] = [];\n        for (let z = 0; z \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reset.html":{"url":"classes/Reset.html","title":"class - Reset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/models/actions/simulation.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/simulation/models/actions/simulation.actions.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/models/actions/simulation.actions.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : SimulationActionTypes.Reset\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/models/actions/simulation.actions.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Simulation } from '../simulation-state';\n\n/**\n * ngrx: simulation Actions.\n */\nexport enum SimulationActionTypes {\n\n    SimulationChanged = '[Simulation] Simulation Changed',\n    SimulationEnded = '[Simulation] Simulation Ended',\n    PeriodsChanged = '[Simulation] Periods Changed',\n    Reset = '[Simulation] Reset'\n\n}\n\nexport class SimulationChanged implements Action {\n\n    public readonly type: string = SimulationActionTypes.SimulationChanged;\n\n    constructor(public payload: { simulation: Simulation }) { }\n\n}\n\nexport class SimulationEnded implements Action {\n\n    public readonly type: string = SimulationActionTypes.SimulationEnded;\n\n    constructor(public payload: boolean) { }\n\n}\n\nexport class PeriodsChanged implements Action {\n\n    public readonly type: string = SimulationActionTypes.PeriodsChanged;\n\n    constructor(public payload: any) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = SimulationActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type SimulationActions = SimulationChanged | SimulationEnded | PeriodsChanged | Reset;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reset-1.html":{"url":"classes/Reset-1.html","title":"class - Reset-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/actions/map.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/models/actions/map.actions.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/map.actions.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : MapActionTypes.Reset\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/map.actions.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Map } from '../ui-state';\n\n/**\n * ngrx: map Actions.\n */\nexport enum MapActionTypes {\n\n    MapChanged = '[Map] Map Changed',\n    Reset = '[Map] Reset'\n\n}\n\nexport class MapChanged implements Action {\n\n    public readonly type: string = MapActionTypes.MapChanged;\n\n    constructor(public payload: { map: Map }) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = MapActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type MapActions = MapChanged | Reset;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reset-2.html":{"url":"classes/Reset-2.html","title":"class - Reset-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/actions/wizard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/models/actions/wizard.actions.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : WizardActionTypes.Reset\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:52\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Step } from '../ui-state';\n\n/**\n * ngrx: wizard Actions.\n */\nexport enum WizardActionTypes {\n\n    StepChanged = '[Wizard] Step Changed',\n    StepError = '[Wizard] Step Error',\n    StepPending = '[Wizard] Step Pending',\n    GoOn = '[Wizard] Go On',\n    Reset = '[Wizard] Reset'\n\n}\n\nexport class StepChanged implements Action {\n\n    public readonly type: string = WizardActionTypes.StepChanged;\n\n    constructor(public payload: { step: Step, index: number }) { }\n\n}\n\nexport class StepError implements Action {\n\n    public readonly type: string = WizardActionTypes.StepError;\n\n    constructor(public payload: string) { }\n\n}\n\nexport class StepPending implements Action {\n\n    public readonly type: string = WizardActionTypes.StepPending;\n\n    constructor(public payload: string | boolean) { }\n\n}\n\nexport class GoOn implements Action {\n\n    public readonly type: string = WizardActionTypes.GoOn;\n\n    constructor(public payload: { step: Step, index: number, nextIndex: number }) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = WizardActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type WizardActions = StepChanged | StepError | StepPending | GoOn | Reset;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SchedulerService.html":{"url":"injectables/SchedulerService.html","title":"injectable - SchedulerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SchedulerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/wizard/scheduler.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                reset\n                            \n                            \n                                scheduleDemand\n                            \n                            \n                                scheduleNetwork\n                            \n                            \n                                scheduleSimulation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(wizard: WizardService, map: MapService, location: LocationService, network: NetworkService, weather: WeatherService, demand: DemandService, simulation: SimulationService, clock: ClockService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/scheduler.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                    MapService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    LocationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        weather\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        demand\n                                                  \n                                                        \n                                                                    DemandService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        simulation\n                                                  \n                                                        \n                                                                    SimulationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clock\n                                                  \n                                                        \n                                                                    ClockService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/scheduler.service.ts:29\n                            \n                        \n\n\n                \n                    \n                            Resets the whole application.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scheduleDemand\n                            \n                            \n                        \n                    \n                \n                \n                    \nscheduleDemand(data: any, index: number, nextIndex: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/scheduler.service.ts:125\n                            \n                        \n\n\n                \n                    \n                            Performs in sequence the following operations:\n\nCalcs shortest paths\nCalcs incidence matrix\nCalcs assignment matrix\nGets traffic data\nCalcs link flows\nCalcs O/D matrix\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        nextIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scheduleNetwork\n                            \n                            \n                        \n                    \n                \n                \n                    \nscheduleNetwork(data: any, index: number, nextIndex: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/scheduler.service.ts:53\n                            \n                        \n\n\n                \n                    \n                            Performs in sequence the following operations:\n\nGets network\nCreates the graph\nGets network data\nAssociates data to the graph\nCorrects graph data\nGets and updates weather data\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        nextIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scheduleSimulation\n                            \n                            \n                        \n                    \n                \n                \n                    \nscheduleSimulation(data: any, index: number, nextIndex: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/scheduler.service.ts:181\n                            \n                        \n\n\n                \n                    \n                            Performs in sequence the following operations:\n\nCalcs max flow for each edge.\nInits the simulation.\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        nextIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { switchMap } from \"rxjs/operators\";\n\nimport { WizardService } from \"./wizard.service\";\nimport { MapService } from \"../map/map.service\";\nimport { LocationService } from \"../../location/location.service\";\nimport { NetworkService } from \"../../network/network.service\";\nimport { WeatherService } from \"../../network/weather/weather.service\";\nimport { DemandService } from \"../../demand/demand.service\";\nimport { SimulationService } from \"../../simulation/simulation.service\";\nimport { ClockService } from \"../../simulation/clock.service\";\n\n@Injectable() export class SchedulerService {\n\n    constructor(\n        private wizard: WizardService,\n        private map: MapService,\n        private location: LocationService,\n        private network: NetworkService,\n        private weather: WeatherService,\n        private demand: DemandService,\n        private simulation: SimulationService,\n        private clock: ClockService\n    ) { }\n\n    /**\n     * Resets the whole application.\n     */\n    public reset(): void {\n        setTimeout(() => {\n            // Wizard.\n            this.wizard.reset();\n            // Services.\n            this.map.reset();\n            this.location.reset();\n            this.network.reset();\n            this.weather.reset();\n            this.demand.reset();\n            this.simulation.reset();\n            this.clock.reset();\n        });\n    }\n\n    /**\n     * Performs in sequence the following operations:\n     * - Gets network\n     * - Creates the graph\n     * - Gets network data\n     * - Associates data to the graph\n     * - Corrects graph data\n     * - Gets and updates weather data\n     */\n    scheduleNetwork(data: any, index: number, nextIndex: number): void {\n        this.wizard.putOnHold('Getting the network');\n        const stream = this.network.getNetwork().pipe(\n            switchMap((response: any) => {\n                this.wizard.putOnHold('Creating the graph');\n                return this.network.createGraph(response);\n            }),\n            switchMap(() => {\n                this.wizard.putOnHold('Getting network data');\n                return this.network.getNetworkData();\n            }),\n            switchMap((response: any) => {\n                this.wizard.putOnHold('Updating the graph');\n                return this.network.updateGraph(response);\n            }),\n            switchMap(() => {\n                this.wizard.putOnHold('Checking the data');\n                return this.network.correctGraph();\n            }),\n            switchMap(() => {\n                this.wizard.putOnHold('Getting weather data');\n                return this.weather.getWeatherData(this.network.getTime());\n            }),\n            switchMap((response: any) => {\n                return this.weather.updateWeatherData(response, this.network.getTime());\n            })\n        );\n\n        stream.subscribe(\n            () => { },\n            (error: any) => {\n                let message: string;\n                switch (error) {\n                    case 'getNetwork':\n                        message = 'Network cannot be retrieved. Check your Internet connection and try again';\n                        break;\n                    case 'createGraph':\n                        message = 'Graph cannnot be created. Please, try with another area';\n                        break;\n                    case 'getNetworkData':\n                        message = 'Network data cannot be retrieved. Past the quota limits traffic data become paid.' +\n                            'This is an open source project: install your own version of it';\n                        break;\n                    case 'correctGraph':\n                        message = 'Graph data are not available. Please, try with another area';\n                        break;\n                    case 'getWeatherData':\n                        message = 'Weather data cannot be retrieved. Please, try at another time';\n                        break;\n                    default:\n                        message = 'Unexpected error';\n                }\n                this.wizard.putInError(message);\n                this.reset();\n            },\n            () => {\n                // Removes from waiting.\n                this.wizard.removeFromWaiting();\n                this.wizard.goOn(data, index, nextIndex);\n            }\n        );\n    }\n\n    /**\n     * Performs in sequence the following operations:\n     * - Calcs shortest paths\n     * - Calcs incidence matrix\n     * - Calcs assignment matrix\n     * - Gets traffic data\n     * - Calcs link flows\n     * - Calcs O/D matrix\n     */\n    scheduleDemand(data: any, index: number, nextIndex: number): void {\n        const graph = this.network.getGraph();\n        const odPairs = this.network.getOdPairs();\n\n        this.wizard.putOnHold('Computing shortest paths');\n        const stream = graph.calcShortestPaths(odPairs).pipe(\n            switchMap(() => {\n                return graph.calcIncidenceMatrix();\n            }),\n            switchMap(() => {\n                return graph.calcAssignmentMatrix(odPairs);\n            }),\n            switchMap(() => {\n                this.wizard.putOnHold('Getting traffic data');\n                return this.network.getTrafficData();\n            }),\n            switchMap((response: any) => {\n                return this.network.calcLinkFlows(response);\n            }),\n            switchMap(() => {\n                this.wizard.putOnHold('Computing demand');\n                return this.demand.calcOdMatrix();\n            })\n        );\n\n        stream.subscribe(\n            () => { },\n            (error: any) => {\n                let message: string;\n                switch (error) {\n                    case 'calcShortestPaths':\n                        message = 'There are no routes. Please, try with another area';\n                        break;\n                    case 'getTrafficData':\n                        message = 'Traffic data cannot be retrieved. Past the quota limits traffic data become paid.' +\n                            'This is an open source project: install your own version of it';\n                        break;\n                    default:\n                        message = 'Unexpected error';\n                }\n                this.wizard.putInError(message);\n                this.reset();\n            },\n            () => {\n                // Removes from waiting.\n                this.wizard.removeFromWaiting();\n                this.wizard.goOn(data, index, nextIndex);\n            }\n        );\n    }\n\n    /**\n     * Performs in sequence the following operations:\n     * - Calcs max flow for each edge.\n     * - Inits the simulation.\n     */\n    scheduleSimulation(data: any, index: number, nextIndex: number): void {\n        const graph = this.network.getGraph();\n        const factors = this.weather.getFactors();\n\n        this.wizard.putOnHold('Computing max flows');\n        const stream = graph.calcMaxflows(factors[0]).pipe(\n            switchMap(() => {\n                this.wizard.putOnHold('Initializing simulation');\n                return this.simulation.init();\n            })\n        );\n\n        stream.subscribe(\n            () => { },\n            (error: any) => {\n                let message: string;\n                switch (error) {\n                    default:\n                        message = 'Unexpected error';\n                }\n                this.wizard.putInError(message);\n                this.reset();\n            },\n            () => {\n                // Removes from waiting.\n                this.wizard.removeFromWaiting();\n                this.wizard.goOn(data, index, nextIndex);\n            }\n        );\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchForTheAreaComponent.html":{"url":"components/SearchForTheAreaComponent.html","title":"component - SearchForTheAreaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SearchForTheAreaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-search-for-the-area\n            \n\n            \n                styleUrls\n                ./search-for-the-area.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./search-for-the-area.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentPosition\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                search\n                            \n                            \n                                sendActions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Abstract\n                                ngOnInit\n                            \n                            \n                                    Abstract\n                                receiveActions\n                            \n                            \n                                    Abstract\n                                sendActions\n                            \n                            \n                                    Abstract\n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(wizard: WizardService, location: LocationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    LocationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type :    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCurrentPosition\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCurrentPosition()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            search\n                            \n                            \n                        \n                    \n                \n                \n                    \nsearch(address: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        address\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { WizardService } from '../wizard.service';\nimport { LocationService } from '../../../location/location.service';\n\nimport { BaseComponent } from '../../models/base.component';\n\n@Component({\n    selector: 'wizard-search-for-the-area',\n    templateUrl: './search-for-the-area.component.html',\n    styleUrls: ['./search-for-the-area.component.scss']\n})\nexport class SearchForTheAreaComponent extends BaseComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    constructor(\n        private wizard: WizardService,\n        private location: LocationService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.valueChanges();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        // Updates location service data on value changes.\n        this.subscriptions.push(this.formGroup.get('center').valueChanges.subscribe(\n            (center: google.maps.LatLngLiteral) => {\n                this.location.setLatLng(center);\n            }\n        ));\n    }\n\n    receiveActions(): void {\n        //\n    }\n\n    sendActions(): void {\n        //\n    }\n\n    search(address: string): void {\n        if (!!address) {\n            // Updates pending state.\n            this.wizard.putOnHold('Searching address');\n            // Converts the address into geographic coordinates.\n            this.location.codeAddress(address).forEach(\n                (results: google.maps.GeocoderResult[]) => {\n                    this.formGroup.get('center').setValue({\n                        lat: results[0].geometry.location.lat(),\n                        lng: results[0].geometry.location.lng()\n                    });\n                    // Updates step state.\n                    this.wizard.updateStep(this.formGroup.value, this.index);\n                })\n                .then()\n                .catch((error: google.maps.GeocoderStatus) => {\n                    if (error === google.maps.GeocoderStatus.ZERO_RESULTS) {\n                        // Updates error state.\n                        this.wizard.putInError('Zero results');\n                    } else {\n                        // INVALID_REQUEST, OVER_QUERY_LIMIT, REQUEST_DENIED, UNKNOWN_ERROR\n                        // Updates error state.\n                        this.wizard.putInError('Invalid request');\n                    }\n                });\n        }\n    }\n\n    getCurrentPosition(): void {\n        if (navigator.geolocation) {\n            // Updates pending state.\n            this.wizard.putOnHold('Getting position');\n            this.location.getCurrentPosition().subscribe(\n                (position: Position) => {\n                    this.formGroup.get('center').setValue({ lat: position.coords.latitude, lng: position.coords.longitude });\n                    // Updates step state.\n                    this.wizard.updateStep(this.formGroup.value, this.index);\n                },\n                (error: PositionError) => {\n                    if (error.code > 0) {\n                        let message: string;\n                        switch (error.code) {\n                            case error.PERMISSION_DENIED:\n                                message = 'Permission denied';\n                                break;\n                            case error.POSITION_UNAVAILABLE:\n                                message = 'Position unavailable';\n                                break;\n                            case error.TIMEOUT:\n                                message = 'Position timeout';\n                                break;\n                        }\n                        // Updates error state.\n                        this.wizard.putInError(message);\n                    }\n                });\n\n        } else {\n            // Updates error state.\n            this.wizard.putInError(\"Browser doesn't support geolocation\");\n        }\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n            \n                search\n            \n        \n        Get current position\n    \n\n    \n        Continue\n            navigate_next\n        \n    \n\n    \n\n    \n                \n                    ./search-for-the-area.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    search                            Get current position                Continue            navigate_next            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchForTheAreaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectionOfTheAreaComponent.html":{"url":"components/SelectionOfTheAreaComponent.html","title":"component - SelectionOfTheAreaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SelectionOfTheAreaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-selection-of-the-area\n            \n\n            \n                styleUrls\n                ./selection-of-the-area.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./selection-of-the-area.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Abstract\n                                ngOnInit\n                            \n                            \n                                    Abstract\n                                receiveActions\n                            \n                            \n                                    Abstract\n                                sendActions\n                            \n                            \n                                    Abstract\n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    min\n                                \n                                \n                                    max\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, wizard: WizardService, network: NetworkService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type :    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n\n                \n                    \n                        getmin()\n                    \n                \n                            \n                                \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:28\n                                \n                            \n                    \n                        \n                                Min moment: current time.\n\n\n                                \n                                    Returns :     Date\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n\n                \n                    \n                        getmax()\n                    \n                \n                            \n                                \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:35\n                                \n                            \n                    \n                        \n                                Max moment: current day.\n\n\n                                \n                                    Returns :     Date\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { WizardService } from '../wizard.service';\nimport { NetworkService } from '../../../network/network.service';\nimport * as fromUi from '../../models/reducers';\nimport { Map } from '../../models/ui-state';\nimport { uiConfig } from '../../ui-config';\n\nimport { BaseComponent } from '../../models/base.component';\n\n@Component({\n    selector: 'wizard-selection-of-the-area',\n    templateUrl: './selection-of-the-area.component.html',\n    styleUrls: ['./selection-of-the-area.component.scss']\n})\nexport class SelectionOfTheAreaComponent extends BaseComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    /**\n     * Min moment: current time.\n     */\n    get min(): Date {\n        return new Date();\n    }\n\n    /**\n     * Max moment: current day.\n     */\n    get max(): Date {\n        return new Date(\n            this.min.getFullYear(),\n            this.min.getMonth(),\n            this.min.getDate(),\n            this.min.getHours() + uiConfig.timeLimit,\n            this.min.getMinutes()\n        );\n    }\n\n    constructor(\n        private store: Store,\n        private wizard: WizardService,\n        private network: NetworkService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.valueChanges();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        // Updates network service data on value changes.\n        this.subscriptions.push(this.formGroup.get('bounds').valueChanges.subscribe(\n            (bounds: google.maps.LatLngBoundsLiteral) => {\n                this.network.setBounds(bounds);\n            }\n        ));\n        this.subscriptions.push(this.formGroup.get('time').valueChanges.subscribe(\n            (time: Date) => {\n                this.network.setTime(time);\n            }\n        ));\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.map)).subscribe((map: Map) => {\n            if (map && map.data.bounds) {\n                this.formGroup.get('bounds').setValue(map.data.bounds);\n            }\n        }));\n    }\n\n    sendActions(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n            \n                calendar_today\n            \n            Optional. Leave it empty for the current time\n            \n                \n                \n                    Please, enter a time between the current time and the next 24 hours\n                \n                \n                    Please, insert a valid time or select it\n                \n            \n        \n        \n    \n\n    \n        Continue\n            navigate_next\n        \n    \n\n    \n\n    \n                \n                    ./selection-of-the-area.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    calendar_today                        Optional. Leave it empty for the current time                                                                Please, enter a time between the current time and the next 24 hours                                                    Please, insert a valid time or select it                                                            Continue            navigate_next            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SelectionOfTheAreaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n  Modules\n  SharedModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nFooterComponent\n\nFooterComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nFooterComponent->SharedModule\n\n\n\n\n\nInfoDialogComponent\n\nInfoDialogComponent\n\nSharedModule -->\n\nInfoDialogComponent->SharedModule\n\n\n\n\n\nMessageArchivedComponent\n\nMessageArchivedComponent\n\nSharedModule -->\n\nMessageArchivedComponent->SharedModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nSharedModule->FooterComponent \n\n\n\n\n\nInfoDialogComponent \n\nInfoDialogComponent \n\nInfoDialogComponent  -->\n\nSharedModule->InfoDialogComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nMessageArchivedComponent \n\nMessageArchivedComponent \n\nMessageArchivedComponent  -->\n\nSharedModule->MessageArchivedComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                FooterComponent\n                            \n                            \n                                InfoDialogComponent\n                            \n                            \n                                MessageArchivedComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                InfoDialogComponent\n                            \n                            \n                                MessageArchivedComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    MaterialModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    FooterComponent\n                            \n                            \n                                    InfoDialogComponent\n                            \n                            \n                                    MaterialModule\n                            \n                            \n                                    MessageArchivedComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { MaterialModule } from './material.module';\n\nimport { FooterComponent } from './footer/footer.component';\nimport { MessageArchivedComponent } from './message-archived.component';\nimport { InfoDialogComponent } from './info-dialog.component';\n\nimport { CanDeactivateGuard } from './can-deactivate-guard.service';\n\nconst sharedModules: any[] = [\n    CommonModule,\n    RouterModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    FlexLayoutModule\n];\n\n@NgModule({\n    entryComponents: [\n        MessageArchivedComponent,\n        InfoDialogComponent\n    ],\n    declarations: [\n        FooterComponent,\n        MessageArchivedComponent,\n        InfoDialogComponent\n    ],\n    imports: sharedModules,\n    exports: [\n        sharedModules,\n        FooterComponent,\n        MessageArchivedComponent,\n        InfoDialogComponent\n    ]\n})\nexport class SharedModule {\n    public static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: SharedModule,\n            providers: [\n                CanDeactivateGuard\n            ]\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Simulation.html":{"url":"interfaces/Simulation.html","title":"interface - Simulation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Simulation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/models/simulation-state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        avgSpeed\n                                \n                                \n                                        counts\n                                \n                                \n                                        data\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avgSpeed\n                                    \n                                \n                                \n                                    \n                                        avgSpeed:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Simulation avg. speed.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        counts\n                                    \n                                \n                                \n                                    \n                                        counts:     Counts\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Counts\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Simulation counts.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     NumericalSimulation[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     NumericalSimulation[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Simulation data.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface NumericalSimulation {\n\n    edge: string;\n    wayName: string;\n    trafficVolume: number;\n    trafficCount: number;\n    delay: number | string;\n    stops: number;\n\n}\n\nexport interface Counts {\n\n    startedVehicles: number;\n    arrivedVehicles: number;\n\n}\n\nexport interface Simulation {\n\n    /**\n     * Simulation data.\n     */\n    data: NumericalSimulation[];\n    /**\n     * Simulation counts.\n     */\n    counts: Counts;\n    /**\n     * Simulation avg. speed.\n     */\n    avgSpeed: number;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SimulationChanged.html":{"url":"classes/SimulationChanged.html","title":"class - SimulationChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SimulationChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/models/actions/simulation.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/simulation/models/actions/simulation.actions.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/models/actions/simulation.actions.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : SimulationActionTypes.SimulationChanged\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/models/actions/simulation.actions.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Simulation } from '../simulation-state';\n\n/**\n * ngrx: simulation Actions.\n */\nexport enum SimulationActionTypes {\n\n    SimulationChanged = '[Simulation] Simulation Changed',\n    SimulationEnded = '[Simulation] Simulation Ended',\n    PeriodsChanged = '[Simulation] Periods Changed',\n    Reset = '[Simulation] Reset'\n\n}\n\nexport class SimulationChanged implements Action {\n\n    public readonly type: string = SimulationActionTypes.SimulationChanged;\n\n    constructor(public payload: { simulation: Simulation }) { }\n\n}\n\nexport class SimulationEnded implements Action {\n\n    public readonly type: string = SimulationActionTypes.SimulationEnded;\n\n    constructor(public payload: boolean) { }\n\n}\n\nexport class PeriodsChanged implements Action {\n\n    public readonly type: string = SimulationActionTypes.PeriodsChanged;\n\n    constructor(public payload: any) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = SimulationActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type SimulationActions = SimulationChanged | SimulationEnded | PeriodsChanged | Reset;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SimulationComponent.html":{"url":"components/SimulationComponent.html","title":"component - SimulationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SimulationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/simulation/simulation.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-simulation\n            \n\n            \n                styleUrls\n                ./simulation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./simulation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                avgSpeed\n                            \n                            \n                                control\n                            \n                            \n                                counts\n                            \n                            \n                                endSimulation\n                            \n                            \n                                simulatedTimeInterval\n                            \n                            \n                                simulatedTimePeriod\n                            \n                            \n                                timeInterval\n                            \n                            \n                                timePeriod\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                pressControl\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Abstract\n                                ngOnInit\n                            \n                            \n                                    Abstract\n                                receiveActions\n                            \n                            \n                                    Abstract\n                                sendActions\n                            \n                            \n                                    Abstract\n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, wizard: WizardService, clock: ClockService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/simulation/simulation.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clock\n                                                  \n                                                        \n                                                                    ClockService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type :    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:24\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pressControl\n                            \n                            \n                        \n                    \n                \n                \n                    \npressControl(control: Control)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:100\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        control\n                                                        \n                                                                    Control\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:96\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            avgSpeed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        avgSpeed:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            control\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        control:     \n\n                    \n                \n                    \n                        \n                            Default value : Control\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            counts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        counts:     Counts\n\n                    \n                \n                    \n                        \n                            Type :     Counts\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            endSimulation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        endSimulation:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            simulatedTimeInterval\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        simulatedTimeInterval:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            simulatedTimePeriod\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        simulatedTimePeriod:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeInterval\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timeInterval:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timePeriod\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timePeriod:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { WizardService } from '../wizard.service';\nimport { ClockService, Control } from '../../../simulation/clock.service';\nimport * as fromSimulation from '../../../simulation/models/reducers';\nimport { Simulation, Counts } from '../../../simulation/models/simulation-state';\nimport { toSeconds, formatTimeFromSeconds, formatTimeFromMilliseconds } from '../../utils';\nimport { uiConfig } from '../../ui-config';\n\nimport { BaseComponent } from '../../models/base.component';\n\n@Component({\n    selector: 'wizard-simulation',\n    templateUrl: './simulation.component.html',\n    styleUrls: ['./simulation.component.scss']\n})\nexport class SimulationComponent extends BaseComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    timeInterval: number;\n\n    timePeriod: string;\n\n    simulatedTimeInterval: number;\n\n    simulatedTimePeriod: string;\n\n    counts: Counts;\n\n    avgSpeed: number;\n\n    endSimulation: boolean;\n\n    control: typeof Control = Control;\n\n    constructor(\n        private store: Store,\n        private wizard: WizardService,\n        private clock: ClockService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.valueChanges();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        //\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromSimulation.periods)).subscribe((periods: any) => {\n            if (periods) {\n                if (typeof periods.timeInterval !== \"undefined\") {\n                    this.timeInterval = periods.timeInterval;\n                }\n                if (typeof periods.timePeriods !== \"undefined\") {\n                    this.timePeriod = formatTimeFromSeconds(periods.timePeriods[periods.timePeriods.length - 1]);\n                }\n                if (typeof periods.simulatedTimeInterval !== \"undefined\") {\n                    this.simulatedTimeInterval = toSeconds(periods.simulatedTimeInterval);\n                } else {\n                    this.simulatedTimeInterval = toSeconds(uiConfig.simulatedTimeInterval);\n                }\n                if (typeof periods.simulatedTimePeriod !== \"undefined\") {\n                    this.simulatedTimePeriod = formatTimeFromMilliseconds(periods.simulatedTimePeriod);\n                } else {\n                    this.simulatedTimePeriod = formatTimeFromMilliseconds(0);\n                }\n            }\n        }));\n        this.subscriptions.push(this.store.pipe(select(fromSimulation.simulation)).subscribe((simulation: Simulation) => {\n            if (simulation && simulation.counts) {\n                this.counts = simulation.counts;\n            }\n            if (simulation && simulation.avgSpeed) {\n                this.avgSpeed = simulation.avgSpeed;\n            }\n        }));\n        this.subscriptions.push(this.store.pipe(select(fromSimulation.end)).subscribe((end: boolean) => {\n            this.endSimulation = end;\n            this.avgSpeed = 0;\n            this.formGroup.get('endSimulation').setValue(end);\n        }));\n    }\n\n    sendActions(): void {\n        //\n    }\n\n    pressControl(control: Control): void {\n        this.clock.pressControl(control);\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    \n                        stop\n                    \n                \n                \n                    \n                        play_arrow\n                    \n                \n                \n                    \n                        pause\n                    \n                \n            \n            \n                \n                    \n                        fast_rewind\n                    \n                \n                \n                    \n                        skip_next\n                    \n                \n                \n                    \n                        fast_forward\n                    \n                \n            \n        \n        \n        \n            Time interval: {{ timeInterval }} s\n            Time period: {{ timePeriod }}\n            Simulated time interval: {{ simulatedTimeInterval }} s\n            Simulated time period: {{ simulatedTimePeriod }}\n        \n        \n        \n            Started vehicles: {{ counts?.startedVehicles || 0 }}\n            Arrived vehicles: {{ counts?.arrivedVehicles || 0 }}\n        \n        \n        \n            Avg. speed: {{ avgSpeed || 0 }} m/s\n        \n    \n\n    \n        Continue\n            navigate_next\n        \n    \n\n    \n\n    \n                \n                    ./simulation.component.scss\n                \n                .cell {\n    background-color: #eceff1;\n    height: 48px;\n    padding: 4px;\n    text-align: center;\n\n    .mat-icon-button {\n        .mat-icon {\n            font-size: 24px;\n        }\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    stop                                                                                                play_arrow                                                                                                pause                                                                                                                        fast_rewind                                                                                                skip_next                                                                                                fast_forward                                                                                    Time interval: {{ timeInterval }} s            Time period: {{ timePeriod }}            Simulated time interval: {{ simulatedTimeInterval }} s            Simulated time period: {{ simulatedTimePeriod }}                                    Started vehicles: {{ counts?.startedVehicles || 0 }}            Arrived vehicles: {{ counts?.arrivedVehicles || 0 }}                                    Avg. speed: {{ avgSpeed || 0 }} m/s                        Continue            navigate_next            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SimulationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SimulationEnded.html":{"url":"classes/SimulationEnded.html","title":"class - SimulationEnded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SimulationEnded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/models/actions/simulation.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/simulation/models/actions/simulation.actions.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/models/actions/simulation.actions.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : SimulationActionTypes.SimulationEnded\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/models/actions/simulation.actions.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Simulation } from '../simulation-state';\n\n/**\n * ngrx: simulation Actions.\n */\nexport enum SimulationActionTypes {\n\n    SimulationChanged = '[Simulation] Simulation Changed',\n    SimulationEnded = '[Simulation] Simulation Ended',\n    PeriodsChanged = '[Simulation] Periods Changed',\n    Reset = '[Simulation] Reset'\n\n}\n\nexport class SimulationChanged implements Action {\n\n    public readonly type: string = SimulationActionTypes.SimulationChanged;\n\n    constructor(public payload: { simulation: Simulation }) { }\n\n}\n\nexport class SimulationEnded implements Action {\n\n    public readonly type: string = SimulationActionTypes.SimulationEnded;\n\n    constructor(public payload: boolean) { }\n\n}\n\nexport class PeriodsChanged implements Action {\n\n    public readonly type: string = SimulationActionTypes.PeriodsChanged;\n\n    constructor(public payload: any) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = SimulationActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type SimulationActions = SimulationChanged | SimulationEnded | PeriodsChanged | Reset;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SimulationModule.html":{"url":"modules/SimulationModule.html","title":"module - SimulationModule","body":"\n                   \n\n\n\n\n  Modules\n  SimulationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SimulationModule\n\n\n\ncluster_SimulationModule_providers\n\n\n\n\nClockService\n\nClockService\n\n\n\nSimulationModule\n\nSimulationModule\n\nSimulationModule -->\n\nClockService->SimulationModule\n\n\n\n\n\nSimulationService\n\nSimulationService\n\nSimulationModule -->\n\nSimulationService->SimulationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/simulation/simulation.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     ClockService\n                            \n                            \n                                     SimulationService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { StoreModule } from \"@ngrx/store\";\n\nimport { SimulationService } from './simulation.service';\nimport { ClockService } from './clock.service';\nimport { reducers } from './models/reducers';\n\n@NgModule({\n    imports: [\n        StoreModule.forFeature('simulation', reducers)\n    ],\n    declarations: [],\n    providers: [SimulationService, ClockService]\n})\nexport class SimulationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SimulationState.html":{"url":"interfaces/SimulationState.html","title":"interface - SimulationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SimulationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/models/reducers.ts\n        \n\n            \n                Description\n            \n            \n                Simulation state management.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        simulation\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        simulation\n                                    \n                                \n                                \n                                    \n                                        simulation:     fromSimulation.SimulationState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromSimulation.SimulationState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, createFeatureSelector, createSelector, MemoizedSelector } from \"@ngrx/store\";\n\nimport * as fromSimulation from './reducers/simulation.reducer';\nimport { Simulation } from \"./simulation-state\";\n\n/**\n * Simulation state management.\n */\nexport interface SimulationState {\n\n    simulation: fromSimulation.SimulationState;\n\n}\n\nexport const reducers: ActionReducerMap = {\n    simulation: fromSimulation.simulationReducer\n};\n\nexport const featureSimulationState: MemoizedSelector = createFeatureSelector('simulation');\n\n/**\n * Exports the simulation state.\n */\nexport const simulationState: MemoizedSelector = createSelector(\n    featureSimulationState,\n    (state: SimulationState) => state.simulation\n);\n\nexport const simulation: MemoizedSelector = createSelector(\n    simulationState,\n    fromSimulation.getSimulation\n);\n\n/**\n * Exports the end state.\n */\nexport const end: MemoizedSelector = createSelector(\n    simulationState,\n    fromSimulation.getEnd\n);\n\n/**\n * Exports the periods state.\n */\nexport const periods: MemoizedSelector = createSelector(\n    simulationState,\n    fromSimulation.getPeriods\n);\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SimulationState-1.html":{"url":"interfaces/SimulationState-1.html","title":"interface - SimulationState-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SimulationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/models/reducers/simulation.reducer.ts\n        \n\n            \n                Description\n            \n            \n                Simulation state management.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        end\n                                \n                                \n                                        periods\n                                \n                                \n                                        simulation\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        end\n                                    \n                                \n                                \n                                    \n                                        end:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        periods\n                                    \n                                \n                                \n                                    \n                                        periods:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        simulation\n                                    \n                                \n                                \n                                    \n                                        simulation:     Simulation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Simulation\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import deepClone from 'mout/lang/deepClone';\n\nimport { Simulation } from \"../simulation-state\";\nimport { SimulationActions, SimulationActionTypes } from '../actions/simulation.actions';\n\n/**\n * Simulation state management.\n */\nexport interface SimulationState {\n\n    simulation: Simulation;\n    end: boolean;\n    periods: any;\n\n}\n\nexport const initialSimulationState: SimulationState = {\n    simulation: null,\n    end: false,\n    periods: null\n};\n\n/**\n * ngrx: simulation Reducer.\n */\nexport function simulationReducer(state: SimulationState = deepClone(initialSimulationState), action: SimulationActions): SimulationState {\n    switch (action.type) {\n        case SimulationActionTypes.SimulationChanged: {\n            state.simulation = action.payload.simulation;\n            return {\n                ...state,\n                simulation: deepClone(state.simulation)\n            };\n        }\n        case SimulationActionTypes.SimulationEnded: {\n            return {\n                ...state,\n                end: action.payload\n            };\n        }\n        case SimulationActionTypes.PeriodsChanged: {\n            state.periods = action.payload;\n            return {\n                ...state,\n                periods: deepClone(state.periods)\n            };\n        }\n        case SimulationActionTypes.Reset: {\n            return deepClone(initialSimulationState);\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\nexport const getSimulation: (state: SimulationState) => Simulation = (state: SimulationState) => state.simulation;\n\nexport const getEnd: (state: SimulationState) => boolean = (state: SimulationState) => state.end;\n\nexport const getPeriods: (state: SimulationState) => any = (state: SimulationState) => state.periods;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Statistics.html":{"url":"classes/Statistics.html","title":"class - Statistics","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Statistics\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/statistics.ts\n        \n\n            \n                Description\n            \n            \n                Extracts statistics from the graph.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                getBusiestEdge\n                            \n                            \n                                    Static\n                                getBusiestEdgeCapacity\n                            \n                            \n                                    Static\n                                getBusiestEdgeData\n                            \n                            \n                                    Static\n                                getBusiestEdgeDelay\n                            \n                            \n                                    Static\n                                getBusiestEdgeLabel\n                            \n                            \n                                    Static\n                                getHeavyTrafficData\n                            \n                            \n                                    Private\n                                    Static\n                                getHeavyTrafficEdges\n                            \n                            \n                                    Static\n                                getHeavyTrafficLabels\n                            \n                            \n                                    Private\n                                    Static\n                                getModerateTrafficEdges\n                            \n                            \n                                    Static\n                                getModerateTrafficLabels\n                            \n                            \n                                    Static\n                                getModerateyTrafficData\n                            \n                            \n                                    Private\n                                    Static\n                                getTrafficVolumes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            getBusiestEdge\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBusiestEdge(edges: LtmEdge[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:74\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edges\n                                                        \n                                                                    LtmEdge[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     LtmEdge\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getBusiestEdgeCapacity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBusiestEdgeCapacity(edges: LtmEdge[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edges\n                                                        \n                                                                    LtmEdge[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getBusiestEdgeData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBusiestEdgeData(edges: LtmEdge[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edges\n                                                        \n                                                                    LtmEdge[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getBusiestEdgeDelay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBusiestEdgeDelay(edges: LtmEdge[], timePeriods: number[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edges\n                                                        \n                                                                    LtmEdge[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        timePeriods\n                                                        \n                                                                    number[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getBusiestEdgeLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBusiestEdgeLabel(edges: LtmEdge[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edges\n                                                        \n                                                                    LtmEdge[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getHeavyTrafficData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getHeavyTrafficData(edges: LtmEdge[], timeInterval: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edges\n                                                        \n                                                                    LtmEdge[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        timeInterval\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            getHeavyTrafficEdges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getHeavyTrafficEdges(edges: LtmEdge[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edges\n                                                        \n                                                                    LtmEdge[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     LtmEdge[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getHeavyTrafficLabels\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getHeavyTrafficLabels(edges: LtmEdge[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edges\n                                                        \n                                                                    LtmEdge[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            getModerateTrafficEdges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getModerateTrafficEdges(edges: LtmEdge[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edges\n                                                        \n                                                                    LtmEdge[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     LtmEdge[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getModerateTrafficLabels\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getModerateTrafficLabels(edges: LtmEdge[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edges\n                                                        \n                                                                    LtmEdge[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getModerateyTrafficData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getModerateyTrafficData(edges: LtmEdge[], timeInterval: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edges\n                                                        \n                                                                    LtmEdge[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        timeInterval\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            getTrafficVolumes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getTrafficVolumes(edge: LtmEdge)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edge\n                                                        \n                                                                    LtmEdge\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { LtmEdge } from \"./ltm-graph\";\n\n/**\n * Extracts statistics from the graph.\n */\nexport class Statistics {\n\n    public static getHeavyTrafficLabels(edges: LtmEdge[]): string[] {\n        return this.getHeavyTrafficEdges(edges).map((edge: LtmEdge) => edge.label);\n    }\n\n    public static getModerateTrafficLabels(edges: LtmEdge[]): string[] {\n        return this.getModerateTrafficEdges(edges).map((edge: LtmEdge) => edge.label);\n    }\n\n    public static getHeavyTrafficData(edges: LtmEdge[], timeInterval: number): number[] {\n        return this.getHeavyTrafficEdges(edges).map((edge: LtmEdge) => edge.heavyTrafficCount * timeInterval);\n    }\n\n    public static getModerateyTrafficData(edges: LtmEdge[], timeInterval: number): number[] {\n        return this.getModerateTrafficEdges(edges).map((edge: LtmEdge) => edge.moderateTrafficCount * timeInterval);\n    }\n\n    public static getBusiestEdgeLabel(edges: LtmEdge[]): string {\n        const edge = this.getBusiestEdge(edges);\n        return edge.label;\n    }\n\n    public static getBusiestEdgeData(edges: LtmEdge[]): number[] {\n        const edge = this.getBusiestEdge(edges);\n        return this.getTrafficVolumes(edge);\n    }\n\n    public static getBusiestEdgeCapacity(edges: LtmEdge[]): number {\n        const edge = this.getBusiestEdge(edges);\n        return Math.trunc(edge.maxFlow * edge.duration) > 1 ?\n            Math.trunc(edge.maxFlow * edge.duration) + 1 :\n            1;\n    }\n\n    public static getBusiestEdgeDelay(edges: LtmEdge[], timePeriods: number[]): number {\n        const edge = this.getBusiestEdge(edges);\n        const trafficVolumes = this.getTrafficVolumes(edge);\n\n        let i = 0;\n        let first: number;\n        let last: number;\n        do {\n            if (trafficVolumes[i] > 0 && first == null) {\n                first = i;\n            }\n            if (trafficVolumes[i] > 0) {\n                last = i + 1;\n            }\n            i++;\n        } while (i  Math.abs(curr - targetTime)  edge.heavyTrafficCount > 0);\n    }\n\n    private static getModerateTrafficEdges(edges: LtmEdge[]): LtmEdge[] {\n        return edges.filter((edge: LtmEdge) => edge.moderateTrafficCount > 0);\n    }\n\n    private static getBusiestEdge(edges: LtmEdge[]): LtmEdge {\n        return edges.reduce((prev: LtmEdge, curr: LtmEdge) =>\n            prev.heavyTrafficCount + prev.moderateTrafficCount > curr.heavyTrafficCount + curr.moderateTrafficCount ? prev : curr\n        );\n    }\n\n    private static getTrafficVolumes(edge: LtmEdge): number[] {\n        return edge.upstream.map((value: number, i: number) => value - edge.downstream[i]);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatisticsComponent.html":{"url":"components/StatisticsComponent.html","title":"component - StatisticsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StatisticsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/statistics/statistics.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-statistics\n            \n\n            \n                styleUrls\n                ./statistics.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./statistics.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                totalAvgSpeed\n                            \n                            \n                                totalProcessingTime\n                            \n                            \n                                totalSimulatedTime\n                            \n                            \n                                totalTime\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Abstract\n                                ngOnInit\n                            \n                            \n                                    Abstract\n                                receiveActions\n                            \n                            \n                                    Abstract\n                                sendActions\n                            \n                            \n                                    Abstract\n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, wizard: WizardService, simulation: SimulationService, clock: ClockService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/statistics/statistics.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        simulation\n                                                  \n                                                        \n                                                                    SimulationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clock\n                                                  \n                                                        \n                                                                    ClockService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type :    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalAvgSpeed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        totalAvgSpeed:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalProcessingTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        totalProcessingTime:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalSimulatedTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        totalSimulatedTime:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        totalTime:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { WizardService } from '../wizard.service';\nimport { SimulationService } from '../../../simulation/simulation.service';\nimport { ClockService } from '../../../simulation/clock.service';\nimport * as fromUi from '../../models/reducers';\nimport { formatTimeFromSeconds, formatTimeFromMilliseconds } from '../../utils';\n\nimport { BaseComponent } from '../../models/base.component';\n\n@Component({\n    selector: 'wizard-statistics',\n    templateUrl: './statistics.component.html',\n    styleUrls: ['./statistics.component.scss']\n})\nexport class StatisticsComponent extends BaseComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    totalTime: string;\n\n    totalSimulatedTime: string;\n\n    totalProcessingTime: string;\n\n    totalAvgSpeed: number;\n\n    constructor(\n        private store: Store,\n        private wizard: WizardService,\n        private simulation: SimulationService,\n        private clock: ClockService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.valueChanges();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        //\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.currentStep)).subscribe((currentStep: number) => {\n            switch (currentStep) {\n                case this.index:\n                    const simulationStatistics = this.simulation.getStatistics();\n                    const clockStatistics = this.clock.getStatistics();\n                    this.totalTime = formatTimeFromSeconds(simulationStatistics.totalTime);\n                    this.totalSimulatedTime = formatTimeFromMilliseconds(clockStatistics.totalSimulatedTime);\n                    this.totalProcessingTime = formatTimeFromMilliseconds(clockStatistics.totalProcessingTime);\n                    this.totalAvgSpeed = simulationStatistics.totalAvgSpeed;\n                    break;\n            }\n        }));\n    }\n\n    sendActions(): void {\n        //\n    }\n}\n\n    \n\n    \n        \n    \n        \n            Total time: {{ totalTime }}\n            Total simulated time: {{ totalSimulatedTime }}\n            Total processing time: {{ totalProcessingTime }}\n        \n        \n        \n            Total avg. speed: {{ totalAvgSpeed || 0 }} m/s\n        \n    \n\n    \n        Exit\n            navigate_next\n        \n    \n\n    \n\n    \n                \n                    ./statistics.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Total time: {{ totalTime }}            Total simulated time: {{ totalSimulatedTime }}            Total processing time: {{ totalProcessingTime }}                                    Total avg. speed: {{ totalAvgSpeed || 0 }} m/s                        Exit            navigate_next            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatisticsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Step.html":{"url":"interfaces/Step.html","title":"interface - Step","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Step\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/ui-state.ts\n        \n\n            \n                Description\n            \n            \n                Step model.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Form model data.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Step {\n\n    /**\n     * Form model data.\n     */\n    data: any;\n\n}\n\n/**\n * Map model.\n */\nexport interface Map {\n\n    /**\n     * Map data.\n     */\n    data: any;\n\n}\n\n/**\n * Initial steps.\n */\nexport const STEPS: Step[] = [];\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StepChanged.html":{"url":"classes/StepChanged.html","title":"class - StepChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StepChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/actions/wizard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/models/actions/wizard.actions.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : WizardActionTypes.StepChanged\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Step } from '../ui-state';\n\n/**\n * ngrx: wizard Actions.\n */\nexport enum WizardActionTypes {\n\n    StepChanged = '[Wizard] Step Changed',\n    StepError = '[Wizard] Step Error',\n    StepPending = '[Wizard] Step Pending',\n    GoOn = '[Wizard] Go On',\n    Reset = '[Wizard] Reset'\n\n}\n\nexport class StepChanged implements Action {\n\n    public readonly type: string = WizardActionTypes.StepChanged;\n\n    constructor(public payload: { step: Step, index: number }) { }\n\n}\n\nexport class StepError implements Action {\n\n    public readonly type: string = WizardActionTypes.StepError;\n\n    constructor(public payload: string) { }\n\n}\n\nexport class StepPending implements Action {\n\n    public readonly type: string = WizardActionTypes.StepPending;\n\n    constructor(public payload: string | boolean) { }\n\n}\n\nexport class GoOn implements Action {\n\n    public readonly type: string = WizardActionTypes.GoOn;\n\n    constructor(public payload: { step: Step, index: number, nextIndex: number }) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = WizardActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type WizardActions = StepChanged | StepError | StepPending | GoOn | Reset;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StepError.html":{"url":"classes/StepError.html","title":"class - StepError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StepError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/actions/wizard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/models/actions/wizard.actions.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : WizardActionTypes.StepError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Step } from '../ui-state';\n\n/**\n * ngrx: wizard Actions.\n */\nexport enum WizardActionTypes {\n\n    StepChanged = '[Wizard] Step Changed',\n    StepError = '[Wizard] Step Error',\n    StepPending = '[Wizard] Step Pending',\n    GoOn = '[Wizard] Go On',\n    Reset = '[Wizard] Reset'\n\n}\n\nexport class StepChanged implements Action {\n\n    public readonly type: string = WizardActionTypes.StepChanged;\n\n    constructor(public payload: { step: Step, index: number }) { }\n\n}\n\nexport class StepError implements Action {\n\n    public readonly type: string = WizardActionTypes.StepError;\n\n    constructor(public payload: string) { }\n\n}\n\nexport class StepPending implements Action {\n\n    public readonly type: string = WizardActionTypes.StepPending;\n\n    constructor(public payload: string | boolean) { }\n\n}\n\nexport class GoOn implements Action {\n\n    public readonly type: string = WizardActionTypes.GoOn;\n\n    constructor(public payload: { step: Step, index: number, nextIndex: number }) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = WizardActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type WizardActions = StepChanged | StepError | StepPending | GoOn | Reset;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StepPending.html":{"url":"classes/StepPending.html","title":"class - StepPending","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StepPending\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/actions/wizard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string | boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/models/actions/wizard.actions.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string | boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     string | boolean\n\n                    \n                \n                    \n                        \n                            Type :     string | boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : WizardActionTypes.StepPending\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Step } from '../ui-state';\n\n/**\n * ngrx: wizard Actions.\n */\nexport enum WizardActionTypes {\n\n    StepChanged = '[Wizard] Step Changed',\n    StepError = '[Wizard] Step Error',\n    StepPending = '[Wizard] Step Pending',\n    GoOn = '[Wizard] Go On',\n    Reset = '[Wizard] Reset'\n\n}\n\nexport class StepChanged implements Action {\n\n    public readonly type: string = WizardActionTypes.StepChanged;\n\n    constructor(public payload: { step: Step, index: number }) { }\n\n}\n\nexport class StepError implements Action {\n\n    public readonly type: string = WizardActionTypes.StepError;\n\n    constructor(public payload: string) { }\n\n}\n\nexport class StepPending implements Action {\n\n    public readonly type: string = WizardActionTypes.StepPending;\n\n    constructor(public payload: string | boolean) { }\n\n}\n\nexport class GoOn implements Action {\n\n    public readonly type: string = WizardActionTypes.GoOn;\n\n    constructor(public payload: { step: Step, index: number, nextIndex: number }) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = WizardActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type WizardActions = StepChanged | StepError | StepPending | GoOn | Reset;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tag.html":{"url":"interfaces/Tag.html","title":"interface - Tag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Tag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                Tag describes the meaning of the particular element to which it is attached.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        key\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\n\nimport * as combine from 'mout/array/combine';\n\nimport { Heap, Path } from './k-shortest-path';\nimport { round } from '../utils';\nimport { environment } from '../../environments/environment';\nimport { uiConfig } from '../ui/ui-config';\n\nexport enum PathType {\n    distance = 'distance',\n    duration = 'duration'\n}\n\n/**\n * An O/D pair is described by the origin and destination nodes, and the type of path.\n */\nexport interface OdPair {\n\n    origin: string;\n    destination: string;\n    pathType: PathType;\n\n}\n\nexport interface LinkFlow {\n\n    /**\n     * linkFlow attribute.\n     */\n    value: number;\n    /**\n     * Variance is the inverse of density.\n     */\n    variance: number;\n\n}\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public label: string;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    public drawingOptions: { marker?: google.maps.Marker } = {};\n\n    /**\n     * Used by the k shortest path routing.\n     */\n    public count: number = 0;\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public label: string;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    /**\n     * Free flow speed (m/s).\n     */\n    public freeFlowVelocity: number;\n\n    /**\n     * Instant speed (m/s).\n     */\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    /**\n     * Number of vehicles calculated from traffic data.\n     */\n    public linkFlow: number;\n\n    /**\n     * Maximum flow of the link.\n     */\n    public maxFlow: number;\n\n    public drawingOptions: {\n        originalPath?: google.maps.LatLng[],\n        path?: google.maps.LatLng[],\n        polyline?: google.maps.Polyline,\n        marker?: google.maps.Marker,\n        infowindow?: google.maps.InfoWindow\n    } = {};\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the link flow.\n     */\n    public calcLinkFlow(): void {\n        // Min distance is 1 meter.\n        if (this.distance == 0) { this.distance = 1; }\n        // Min duration is 1 second.\n        if (this.duration == 0) {\n            this.duration = round(this.distance / (50 / 3.6)) > 1 ? round(this.distance / (50 / 3.6)) : 1;\n        }\n        // Calculates free flow velocity (m/s).\n        this.freeFlowVelocity = round(this.distance / this.duration, 2);\n        // Calculates link flow.\n        if (this.durationInTraffic > 0 && this.durationInTraffic >= this.duration) {\n            // Calculates velocity (m/s).\n            this.velocity = round(this.distance / this.durationInTraffic, 2);\n            // Calculates density.\n            this.density = round(this.getKjam() * (this.freeFlowVelocity - this.velocity) / this.freeFlowVelocity, 2);\n            // Calculates flow.\n            this.flow = round(this.density * this.velocity, 2);\n            // Calculates link flow.\n            this.linkFlow = round(this.density * this.distance);\n        } else {\n            this.velocity = 0;\n            this.density = 0;\n            this.flow = 0;\n            this.linkFlow = 0;\n        }\n    }\n\n    /**\n     * Calculates the max flow of the edge.\n     * @param factor Weather Adjustment Factor\n     */\n    public calcMaxFlow(factor: number): void {\n        const maxFlow = this.getKjam() * this.freeFlowVelocity;\n        this.maxFlow = round(maxFlow * factor, 2);\n    }\n\n    /**\n     * Gets the variance of measurement error of link flow.\n     */\n    public getVariance(): number {\n        return this.density > 0 ? round(1 / this.density, 2) : 1;\n    }\n\n    public getKjam(): number {\n        return round(1 / uiConfig.sp, 2);\n    }\n\n    protected getCapacity(timeInterval: number): number {\n        return this.maxFlow * timeInterval;\n    }\n\n    protected draw(color: string, zIndex: number, visible: boolean = true): void {\n        this.drawingOptions.polyline.set('strokeColor', color);\n        this.drawingOptions.polyline.set('zIndex', zIndex);\n        this.drawingOptions.marker.set('visible', visible);\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    protected nodes: Node[] = [];\n\n    protected edges: Edge[] = [];\n\n    protected relations: Relation[] = [];\n\n    /**\n     * Paths for each O/D pair [pairs,paths,edges].\n     */\n    protected shortestPaths: Edge[][][] = [];\n\n    protected incidenceMatrix: boolean[][][] = [];\n\n    protected assignmentMatrix: number[][][] = [];\n\n    private heap: Heap;\n\n    /**\n     * Shortest paths drawing options.\n     */\n    private drawingOptions: {\n        polylines?: google.maps.Polyline[][];\n    } = {};\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public getEdge(edgeId: number): Edge {\n        return this.edges.find((edge: Edge) => edge.edgeId == edgeId);\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Key:oneway\n     * @param edgeId Id of the edge\n     */\n    public isOneway(edgeId: number): boolean {\n        return !!this.getEdge(edgeId).tags.find(tag => tag.key == 'oneway' && tag.value != 'no') ||\n            this.isRoundabout(edgeId);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Tag:junction%3Droundabout\n     * @param edgeId Id of the edge\n     */\n    public isRoundabout(edgeId: number): boolean {\n        return this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'roundabout') ||\n            this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'circular') ?\n            true : false;\n    }\n\n    public findOppositeEdge(edge: Edge): Edge {\n        return this.edges.find((value: Edge) =>\n            value.origin.nodeId == edge.destination.nodeId && value.destination.nodeId == edge.origin.nodeId\n        );\n    }\n\n    public getOdNode(label: string): Node {\n        return this.nodes.find((node: Node) => node.label == label);\n    }\n\n    public getOdNodes(): Node[] {\n        return this.nodes.filter((node: Node) => node.label);\n    }\n\n    /**\n     * Calculates the set of minimum paths.\n     * @param odPairs The O/D pairs\n     */\n    public calcShortestPaths(odPairs: OdPair[]): Observable {\n        try {\n            for (let i = 0; i  edge.label);\n    }\n\n    /**\n     * Calculates the incidence matrix of paths for O/D pairs.\n     */\n    public calcIncidenceMatrix(): Observable {\n        const edges = this.getPathsEdges();\n        for (let z = 0; z  value.edgeId == edges[m].edgeId)) {\n                        // The path crosses the edge.\n                        this.incidenceMatrix[z][n][m] = true;\n                    } else {\n                        // The path does not cross the edge.\n                        this.incidenceMatrix[z][n][m] = false;\n                    }\n                }\n            }\n        }\n        return of(null);\n    }\n\n    public getIncidenceMatrix(): boolean[][][] {\n        return this.incidenceMatrix;\n    }\n\n    /**\n     * Calculates the assignment matrix.\n     * @param odPairs The O/D pairs\n     */\n    public calcAssignmentMatrix(odPairs: OdPair[]): Observable {\n        // Calculates the probabilities of shortest paths.\n        const shortestPathsProbabilities = this.calcShortestPathsProbabilities(odPairs);\n\n        // Assignment matrix.\n        for (let z = 0; z  {\n        const edges = this.getPathsEdges();\n        for (const edge of edges) {\n            edge.calcMaxFlow(factor);\n        }\n        return of(null);\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link distance or duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param o Source node\n     * @param d Destination node\n     * @param pathType Distance or duration\n     * @param k The number of shortest paths to compute\n     * @returns The set of shortest paths\n     */\n    private ksp(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Sets to zero the count property of the nodes.\n        this.resetCount();\n        // Instantiates the heap.\n        this.heap = new Heap();\n        // Inserts the path of origin into heap with cost 0.\n        this.heap.push({ pathId: 0, node: o, edges: [], cost: 0 });\n        // Walks the graph.\n        return this.walk(o, d, pathType, k);\n    }\n\n    /**\n     * Breadth First Search (BFS) algorithm for traversing and searching tree data\n     * explores the neighbor nodes first, before moving to the next level neighbors.\n     */\n    private walk(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Set of shortest paths from origin to destination.\n        const shortestPaths: Path[] = [];\n\n        let pathId = 1;\n        let node: Node;\n        while (this.heap.getPaths().length > 0 && d.count  edge.origin.nodeId == node.nodeId) ? false : true;\n    }\n\n    private resetCount(): void {\n        for (const node of this.nodes) {\n            node.count = 0;\n        }\n    }\n\n    /**\n     * Removes the alternative paths that differ only for two links.\n     * @param shortestPaths The shortest paths as created by the algorithm\n     */\n    private filterPaths(shortestPaths: Path[]): void {\n        if (shortestPaths.length > 1) {\n            let i = 0;\n            do {\n                const pathA = shortestPaths[i].edges;\n                const pathB = shortestPaths[i + 1].edges;\n                const sharedEdges = pathA.filter((edgeOfA: Edge) =>\n                    pathB.find((edgeOfB: Edge) =>\n                        edgeOfB.edgeId == edgeOfA.edgeId));\n                if (pathA.length - sharedEdges.length  value.edgeId == edge.edgeId)) {\n                        edges.push(edge);\n                        edge.label = 'E' + count++;\n                        if (!environment.testing) {\n                            edge.drawingOptions.infowindow.setContent('Edge: ' + edge.label);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Multinomial logit model.\n     * @param odPairs The O/D pairs\n     */\n    private calcShortestPathsProbabilities(odPairs: OdPair[]): number[][] {\n        // Gets the total cost of paths.\n        const pathCosts = this.calcPathCosts(odPairs);\n        const shortestPathsProbabilities: number[][] = [];\n        // Theta parameter adjustment.\n        const parameter = uiConfig.theta * 100;\n        // Calculates numerator.\n        const exps: number[][] = [];\n        for (let z = 0; z  {\n                return value > 0 ? Math.exp(-value / parameter) : 0;\n            });\n        }\n        // Calculates denominator.\n        const sumExps: number[] = [];\n        for (let z = 0; z  a + b, 0);\n            sumExps.push(sum);\n        }\n        // Probabilities.\n        for (let z = 0; z  0 ? round(exps[z][n] / sumExps[z], 3) : 0;\n                shortestPathsProbabilities[z].push(p);\n            }\n        }\n        return shortestPathsProbabilities;\n    }\n\n    private calcPathCosts(odPairs: OdPair[]): number[][] {\n        const pathCosts: number[][] = [];\n        for (let z = 0; z \n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TermsComponent.html":{"url":"components/TermsComponent.html","title":"component - TermsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TermsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/terms/terms.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-terms\n            \n\n            \n                styleUrls\n                ./terms.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./terms.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/terms/terms.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/terms/terms.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-terms',\n    templateUrl: './terms.component.html',\n    styleUrls: ['./terms.component.scss']\n})\nexport class TermsComponent implements OnInit {\n\n    constructor() { }\n\n    ngOnInit(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            Terms of service of STRADA\n        \n        \n            These Terms of service govern your use of the application\n                STRADA\n            \n            By using the app, you accept these Terms in full. If you disagree with these Terms or any part of these Terms,\n                you must not use the app.\n            \n            Privacy Policy of the app\n            \n                Privacy Policy\n            \n            License to use\n            The app is released under the MIT license.\n            External services\n            The app uses Google Maps APIs. By using the app, you are bound by Google's Terms of Service:\n                Google Terms of Service\n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./terms.component.scss\n                \n                .app-terms {\n    .mat-card {\n        max-width: 600px;\n\n        a {\n            text-decoration: underline;\n            color: inherit;\n        }\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Terms of service of STRADA                            These Terms of service govern your use of the application                STRADA                        By using the app, you accept these Terms in full. If you disagree with these Terms or any part of these Terms,                you must not use the app.                        Privacy Policy of the app                            Privacy Policy                        License to use            The app is released under the MIT license.            External services            The app uses Google Maps APIs. By using the app, you are bound by Google\\'s Terms of Service:                Google Terms of Service                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TermsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UiComponent.html":{"url":"components/UiComponent.html","title":"component - UiComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UiComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/ui.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                CanComponentDeactivate\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ui\n            \n\n            \n                styleUrls\n                ./ui.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ui.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                network\n                            \n                            \n                                numerical\n                            \n                            \n                                pending\n                            \n                            \n                                statistics\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canDeactivate\n                            \n                            \n                                exit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDialog\n                            \n                            \n                                openSnackBar\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, snackBar: MatSnackBar, dialog: MatDialog, cdr: ChangeDetectorRef, store: Store, scheduler: SchedulerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/ui.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scheduler\n                                                  \n                                                        \n                                                                    SchedulerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canDeactivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanDeactivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:83\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable | boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            exit\n                            \n                            \n                        \n                    \n                \n                \n                    \nexit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:102\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenDialog(data: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:114\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openSnackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenSnackBar(message: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:106\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:93\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            network\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        network:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numerical\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        numerical:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pending\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pending:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            statistics\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        statistics:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy, ViewEncapsulation, ChangeDetectorRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatSnackBar, MatDialog } from '@angular/material';\nimport { Subscription, Observable, of } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { CanComponentDeactivate } from '../shared/can-deactivate-guard.service';\nimport { SchedulerService } from './wizard/scheduler.service';\nimport * as fromUi from './models/reducers';\n\nimport { MessageArchivedComponent } from '../shared/message-archived.component';\nimport { InfoDialogComponent } from '../shared/info-dialog.component';\n\n@Component({\n    selector: 'app-ui',\n    templateUrl: './ui.component.html',\n    styleUrls: ['./ui.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class UiComponent implements OnInit, OnDestroy, CanComponentDeactivate {\n\n    pending: boolean = false;\n\n    network: boolean = true;\n\n    numerical: boolean = false;\n\n    statistics: boolean = false;\n\n    subscriptions: Subscription[] = [];\n\n    constructor(\n        private router: Router,\n        private snackBar: MatSnackBar,\n        private dialog: MatDialog,\n        private cdr: ChangeDetectorRef,\n        private store: Store,\n        private scheduler: SchedulerService\n    ) { }\n\n    ngOnInit(): void {\n        // Pending state.\n        this.subscriptions.push(this.store.pipe(select(fromUi.pending)).subscribe((pending: boolean) => {\n            this.pending = pending;\n        }));\n        // Error state.\n        this.subscriptions.push(this.store.pipe(select(fromUi.error)).subscribe((error: string) => {\n            if (error) {\n                this.openSnackBar(error);\n            }\n        }));\n        // Panels.\n        this.subscriptions.push(this.store.pipe(select(fromUi.currentStep)).subscribe((currentStep: number) => {\n            switch (currentStep) {\n                case 0:\n                    this.network = true;\n                    this.numerical = false;\n                    this.statistics = false;\n                    this.cdr.detectChanges();\n                    break;\n                case 4:\n                    this.numerical = true;\n                    this.statistics = false;\n                    this.cdr.detectChanges();\n                    break;\n                case 5:\n                    this.numerical = true;\n                    this.statistics = true;\n                    this.cdr.detectChanges();\n                    break;\n            }\n        }));\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach((subscription: Subscription) => {\n            if (subscription) { subscription.unsubscribe(); }\n        });\n    }\n\n    canDeactivate(): Observable | boolean {\n        return this.openDialog('Are you sure you want to exit the simulation?').pipe(\n            tap((dialogResult: boolean) => {\n                if (dialogResult) {\n                    this.scheduler.reset();\n                }\n            })\n        );\n    }\n\n    reset(): void {\n        this.openDialog('Are you sure you want to reset the simulation?').subscribe(\n            (dialogResult: boolean) => {\n                if (dialogResult) {\n                    this.scheduler.reset();\n                }\n            });\n    }\n\n    exit(): void {\n        this.router.navigate(['/home']);\n    }\n\n    openSnackBar(message: string): void {\n        this.snackBar.openFromComponent(MessageArchivedComponent, {\n            data: message,\n            duration: 5000,\n            panelClass: ['error-snackbar']\n        });\n    }\n\n    openDialog(data: string): Observable {\n        const dialogRef = this.dialog.open(InfoDialogComponent, {\n            width: '250px',\n            data: data,\n            hasBackdrop: true,\n            panelClass: 'info-dialog'\n        });\n\n        return dialogRef.afterClosed();\n    }\n\n}\n\n    \n\n    \n        \n    \n    \n    \n        {{ pending }}\n    \n\n\n\n    \n        \n            \n        \n        \n            \n                \n                    \n                        \n                            Network\n                        \n                    \n                    \n                \n                \n                    \n                        \n                            Numerical\n                        \n                    \n                    \n                \n                \n                    \n                        \n                            Statistics\n                        \n                    \n                    \n                \n            \n        \n    \n    \n        \n        \n            Reset\n            Exit\n        \n    \n\n\n\n    \n\n    \n                \n                    ./ui.component.scss\n                \n                @import '../../styles/variables';\n\n.ui-content {\n    min-height: 100%;\n\n    .mat-card {\n        margin: 8px;\n    }\n\n    .actions {\n        margin: 8px;\n\n        button {\n            font-size: 12px;\n            width: 50%;\n        }\n    }\n}\n\n/* MatSnackBar */\n.error-snackbar {\n    text-align: center;\n    font-size: 14px;\n}\n\n.centered {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    z-index: 9999;\n\n    .message {\n        position: relative;\n        width: 90px;\n        top: 8px;\n        font-size: 14px;\n        text-align: center;\n        color: $secondary-color-dark;\n    }\n}\n\n.ops {\n    opacity :0.4;\n}\n\n/* Time Picker */\n.owl-dialog-container {\n    overflow: hidden;\n\n    .owl-dt-dialog-container {\n        font-size: 14px;\n    }\n\n    .owl-dt-container-control-button {\n        color: $secondary-color;\n    }\n}\n\n.mat-accordion {\n    .mat-expansion-panel {\n        margin: 8px;\n    }\n}   \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ pending }}                                                                                                                                                Network                                                                                                                                                                        Numerical                                                                                                                                                                        Statistics                                                                                                                                        Reset            Exit            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UiComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiModule.html":{"url":"modules/UiModule.html","title":"module - UiModule","body":"\n                   \n\n\n\n\n  Modules\n  UiModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UiModule\n\n\n\ncluster_UiModule_declarations\n\n\n\ncluster_UiModule_imports\n\n\n\ncluster_UiModule_providers\n\n\n\n\nChangeOfConditionsComponent\n\nChangeOfConditionsComponent\n\n\n\nUiModule\n\nUiModule\n\nUiModule -->\n\nChangeOfConditionsComponent->UiModule\n\n\n\n\n\nChartsComponent\n\nChartsComponent\n\nUiModule -->\n\nChartsComponent->UiModule\n\n\n\n\n\nEstimateOfDemandComponent\n\nEstimateOfDemandComponent\n\nUiModule -->\n\nEstimateOfDemandComponent->UiModule\n\n\n\n\n\nGoogleMapComponent\n\nGoogleMapComponent\n\nUiModule -->\n\nGoogleMapComponent->UiModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nUiModule -->\n\nMapComponent->UiModule\n\n\n\n\n\nNumericComponent\n\nNumericComponent\n\nUiModule -->\n\nNumericComponent->UiModule\n\n\n\n\n\nSearchForTheAreaComponent\n\nSearchForTheAreaComponent\n\nUiModule -->\n\nSearchForTheAreaComponent->UiModule\n\n\n\n\n\nSelectionOfTheAreaComponent\n\nSelectionOfTheAreaComponent\n\nUiModule -->\n\nSelectionOfTheAreaComponent->UiModule\n\n\n\n\n\nSimulationComponent\n\nSimulationComponent\n\nUiModule -->\n\nSimulationComponent->UiModule\n\n\n\n\n\nStatisticsComponent\n\nStatisticsComponent\n\nUiModule -->\n\nStatisticsComponent->UiModule\n\n\n\n\n\nUiComponent\n\nUiComponent\n\nUiModule -->\n\nUiComponent->UiModule\n\n\n\n\n\nWeatherComponent\n\nWeatherComponent\n\nUiModule -->\n\nWeatherComponent->UiModule\n\n\n\n\n\nWizardComponent\n\nWizardComponent\n\nUiModule -->\n\nWizardComponent->UiModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nUiModule -->\n\nSharedModule->UiModule\n\n\n\n\n\nUiRoutingModule\n\nUiRoutingModule\n\nUiModule -->\n\nUiRoutingModule->UiModule\n\n\n\n\n\nMapService\n\nMapService\n\nUiModule -->\n\nMapService->UiModule\n\n\n\n\n\nSchedulerService\n\nSchedulerService\n\nUiModule -->\n\nSchedulerService->UiModule\n\n\n\n\n\nWizardService\n\nWizardService\n\nUiModule -->\n\nWizardService->UiModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/ui/ui.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ChangeOfConditionsComponent\n                            \n                            \n                                ChartsComponent\n                            \n                            \n                                EstimateOfDemandComponent\n                            \n                            \n                                GoogleMapComponent\n                            \n                            \n                                MapComponent\n                            \n                            \n                                NumericComponent\n                            \n                            \n                                SearchForTheAreaComponent\n                            \n                            \n                                SelectionOfTheAreaComponent\n                            \n                            \n                                SimulationComponent\n                            \n                            \n                                StatisticsComponent\n                            \n                            \n                                UiComponent\n                            \n                            \n                                WeatherComponent\n                            \n                            \n                                WizardComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     MapService\n                            \n                            \n                                     SchedulerService\n                            \n                            \n                                     WizardService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                            \n                                    UiRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { UiRoutingModule } from './ui-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { StoreModule } from \"@ngrx/store\";\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\n\nimport { UiComponent } from './ui.component';\nimport { WizardComponent } from './wizard/wizard.component';\nimport { SearchForTheAreaComponent } from './wizard/search-for-the-area/search-for-the-area.component';\nimport { SelectionOfTheAreaComponent } from './wizard/selection-of-the-area/selection-of-the-area.component';\nimport { EstimateOfDemandComponent } from './wizard/estimate-of-demand/estimate-of-demand.component';\nimport { ChangeOfConditionsComponent } from './wizard/change-of-conditions/change-of-conditions.component';\nimport { SimulationComponent } from './wizard/simulation/simulation.component';\nimport { StatisticsComponent } from './wizard/statistics/statistics.component';\nimport { MapComponent } from './map/map.component';\nimport { GoogleMapComponent } from './map/google-map.component';\nimport { WeatherComponent } from './weather/weather.component';\nimport { NumericComponent } from './numeric/numeric.component';\nimport { ChartsComponent } from './charts/charts.component';\n\nimport { WizardService } from './wizard/wizard.service';\nimport { SchedulerService } from './wizard/scheduler.service';\nimport { MapService } from './map/map.service';\nimport { reducers } from './models/reducers';\n\n@NgModule({\n    imports: [\n        UiRoutingModule,\n        SharedModule,\n        StoreModule.forFeature('ui', reducers),\n        OwlDateTimeModule,\n        OwlNativeDateTimeModule\n    ],\n    declarations: [\n        UiComponent,\n        WizardComponent,\n        SearchForTheAreaComponent,\n        SelectionOfTheAreaComponent,\n        EstimateOfDemandComponent,\n        ChangeOfConditionsComponent,\n        SimulationComponent,\n        StatisticsComponent,\n        MapComponent,\n        GoogleMapComponent,\n        WeatherComponent,\n        NumericComponent,\n        ChartsComponent\n    ],\n    providers: [\n        WizardService,\n        SchedulerService,\n        MapService\n    ]\n})\nexport class UiModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiRoutingModule.html":{"url":"modules/UiRoutingModule.html","title":"module - UiRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  UiRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/ui/ui-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { CanDeactivateGuard } from '../shared/can-deactivate-guard.service';\n\nimport { UiComponent } from './ui.component';\n\n@NgModule({\n    imports: [\n        RouterModule.forChild([\n            { path: '', component: UiComponent, pathMatch: 'full', canDeactivate: [CanDeactivateGuard] }\n        ])\n    ],\n    exports: [RouterModule]\n})\nexport class UiRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UiState.html":{"url":"interfaces/UiState.html","title":"interface - UiState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UiState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/reducers.ts\n        \n\n            \n                Description\n            \n            \n                User interface state management.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        map\n                                \n                                \n                                        wizard\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        map\n                                    \n                                \n                                \n                                    \n                                        map:     fromMap.MapState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromMap.MapState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wizard\n                                    \n                                \n                                \n                                    \n                                        wizard:     fromWizard.WizardState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromWizard.WizardState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, createFeatureSelector, createSelector, MemoizedSelector } from \"@ngrx/store\";\n\nimport * as fromWizard from './reducers/wizard.reducer';\nimport * as fromMap from './reducers/map.reducer';\nimport { Step, Map } from \"./ui-state\";\n\n/**\n * User interface state management.\n */\nexport interface UiState {\n\n    wizard: fromWizard.WizardState;\n    map: fromMap.MapState;\n\n}\n\nexport const reducers: ActionReducerMap = {\n    wizard: fromWizard.wizardReducer,\n    map: fromMap.mapReducer\n};\n\nexport const featureUiState: MemoizedSelector = createFeatureSelector('ui');\n\n/**\n * Exports the wizard state.\n */\nexport const wizardState: MemoizedSelector = createSelector(\n    featureUiState,\n    (state: UiState) => state.wizard\n);\n\n/**\n * Exports the steps state.\n */\nexport const steps: MemoizedSelector = createSelector(\n    wizardState,\n    fromWizard.getSteps\n);\n\n/**\n * Exports the current step state.\n */\nexport const currentStep: MemoizedSelector = createSelector(\n    wizardState,\n    fromWizard.getCurrentStep\n);\n\n/**\n * Exports the error state.\n */\nexport const error: MemoizedSelector = createSelector(\n    wizardState,\n    fromWizard.getError\n);\n\n/**\n * Exports the pending state.\n */\nexport const pending: MemoizedSelector = createSelector(\n    wizardState,\n    fromWizard.getPending\n);\n\n/**\n * Exports the map state.\n */\nexport const mapState: MemoizedSelector = createSelector(\n    featureUiState,\n    (state: UiState) => state.map\n);\n\nexport const map: MemoizedSelector = createSelector(\n    mapState,\n    fromMap.getMap\n);\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherComponent.html":{"url":"components/WeatherComponent.html","title":"component - WeatherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/weather/weather.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ui-weather\n            \n\n            \n                styleUrls\n                ./weather.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                icon\n                            \n                            \n                                iconContainer\n                            \n                            \n                                time\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getIcon\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                resetConditions\n                            \n                            \n                                sendActions\n                            \n                            \n                                setConditions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Abstract\n                                ngOnInit\n                            \n                            \n                                    Abstract\n                                receiveActions\n                            \n                            \n                                    Abstract\n                                sendActions\n                            \n                            \n                                    Abstract\n                                valueChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, renderer: s/end.html\">Renderer2, store: Store, weather: WeatherService, network: NetworkService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/weather/weather.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        weather\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIcon(code: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:89\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        code\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     HTMLImageElement\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetConditions\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetConditions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setConditions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetConditions(weather: WeatherConditions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        weather\n                                                        \n                                                                    WeatherConditions\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        description:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '-'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icon:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iconContainer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iconContainer:     HTMLElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            time\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        time:     any | string\n\n                    \n                \n                    \n                        \n                            Type :     any | string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, ElementRef, Renderer2 } from '@angular/core';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { WeatherService } from '../../network/weather/weather.service';\nimport { NetworkService } from '../../network/network.service';\nimport * as fromUi from '../models/reducers';\nimport { WeatherConditions } from '../../network/weather/weather';\nimport { appConfig } from '../../app-config';\n\nimport { BaseComponent } from '../models/base.component';\n\n@Component({\n    selector: 'ui-weather',\n    templateUrl: './weather.component.html',\n    styleUrls: ['./weather.component.scss']\n})\nexport class WeatherComponent extends BaseComponent implements OnInit, AfterViewInit {\n\n    description: string = '-';\n\n    iconContainer: HTMLElement;\n\n    icon: any;\n\n    time: any | string = '';\n\n    constructor(\n        private elementRef: ElementRef,\n        private renderer: Renderer2,\n        private store: Store,\n        private weather: WeatherService,\n        private network: NetworkService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    ngAfterViewInit(): void {\n        this.iconContainer = this.elementRef.nativeElement.querySelector('#iconContainer');\n    }\n\n    valueChanges(): void {\n        //\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.currentStep)).subscribe((currentStep: number) => {\n            const weatherConditions = this.weather.getWeatherConditions();\n            switch (currentStep) {\n                case 0:\n                    this.resetConditions();\n                    break;\n                case 3:\n                    this.setConditions(weatherConditions);\n                    break;\n                case 4:\n                    this.resetConditions();\n                    this.setConditions(weatherConditions);\n                    break;\n            }\n        }));\n    }\n\n    sendActions(): void {\n        //\n    }\n\n    setConditions(weather: WeatherConditions): void {\n        this.description = weather.description;\n        this.icon = this.getIcon(weather.icon);\n        this.renderer.appendChild(this.iconContainer, this.icon);\n        this.time = this.network.getTimeString();\n    }\n\n    resetConditions(): void {\n        this.description = '-';\n        if (this.icon) {\n            this.renderer.removeChild(this.iconContainer, this.icon);\n            this.icon = null;\n            this.time = '';\n        }\n    }\n\n    getIcon(code: string): HTMLImageElement {\n        const icon = new Image();\n        if (!!code) {\n            icon.src = appConfig.apis.openWeatherMap.iconUrl + '/' + code + '.png';\n        }\n        return icon;\n    }\n\n}\n\n    \n\n    \n        \n    \n        Weather {{ description | uppercase }}\n        \n        {{ time }}\n    \n\n    \n\n    \n                \n                    ./weather.component.scss\n                \n                .mat-card {\n    .mat-card-content{\n        font-size: 14px;\n        font-weight: 500;\n        height: 50px;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Weather {{ description | uppercase }}                {{ time }}    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WeatherConditions.html":{"url":"interfaces/WeatherConditions.html","title":"interface - WeatherConditions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WeatherConditions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/weather/weather.ts\n        \n\n            \n                Description\n            \n            \n                Weather conditions data.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                            Optional\n                                        rainIntensity\n                                \n                                \n                                            Optional\n                                        snowIntensity\n                                \n                                \n                                            Optional\n                                        visibility\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The code of the icon.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rainIntensity\n                                    \n                                \n                                \n                                    \n                                        rainIntensity:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Millimeters.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        snowIntensity\n                                    \n                                \n                                \n                                    \n                                        snowIntensity:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Millimeters.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visibility\n                                    \n                                \n                                \n                                    \n                                        visibility:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Meters.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface WeatherConditions {\n\n    description: string;\n    /**\n     * The code of the icon.\n     */\n    icon?: string;\n    /**\n     * Meters.\n     */\n    visibility?: number;\n    /**\n     * Millimeters.\n     */\n    rainIntensity?: number;\n    /**\n     * Millimeters.\n     */\n    snowIntensity?: number;\n\n}\n\nexport enum WeatherDescription {\n    clearSky = 'clear sky',\n    fewClouds = 'few clouds',\n    scatteredClouds = 'scattered clouds',\n    brokenClouds = 'broken clouds',\n    showerRain = 'shower rain',\n    rain = 'rain',\n    thunderstorm = 'thunderstorm',\n    snow = 'snow',\n    mist = 'mist',\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WeatherModule.html":{"url":"modules/WeatherModule.html","title":"module - WeatherModule","body":"\n                   \n\n\n\n\n  Modules\n  WeatherModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_providers\n\n\n\n\nWeatherService\n\nWeatherService\n\n\n\nWeatherModule\n\nWeatherModule\n\nWeatherModule -->\n\nWeatherService->WeatherModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/network/weather/weather.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     WeatherService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { WeatherService } from './weather.service';\n\n@NgModule({\n    imports: [],\n    declarations: [],\n    providers: [WeatherService]\n})\nexport class WeatherModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherService.html":{"url":"injectables/WeatherService.html","title":"injectable - WeatherService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WeatherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/weather/weather.service.ts\n        \n\n            \n                Description\n            \n            \n                Gets the weather data from the Weather or Forecast resources\nand provides reduction factors for graph values based on weather conditions.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                weatherConditions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addWeatherConditions\n                            \n                            \n                                    Private\n                                calcFactor\n                            \n                            \n                                    Public\n                                changeWeather\n                            \n                            \n                                    Public\n                                getFactors\n                            \n                            \n                                    Public\n                                getWeatherConditions\n                            \n                            \n                                    Public\n                                getWeatherData\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Private\n                                toInches\n                            \n                            \n                                    Public\n                                updateWeatherData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, location: LocationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/weather/weather.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    LocationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            addWeatherConditions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addWeatherConditions(data: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:104\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            calcFactor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        calcFactor(adjustmentFactorCoefficients: number[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:114\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adjustmentFactorCoefficients\n                                                        \n                                                                    number[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            changeWeather\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        changeWeather(weather: WeatherConditions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:82\n                            \n                        \n\n\n                \n                    \n                            Changes the current weather conditions.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weather\n                                                        \n                                                                    WeatherConditions\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The weather conditions\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFactors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFactors()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:96\n                            \n                        \n\n\n                \n                    \n                            Calculates Weather Adjustment Factors.\n\n\n                            \n                            \n                            \n                                Returns :     number[]\n\n                            \n                                \n                                    The factor for max flow parameter\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getWeatherConditions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getWeatherConditions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     WeatherConditions\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getWeatherData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getWeatherData(time?: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:34\n                            \n                        \n\n\n                \n                    \n                            Gets weather data from the Weather resource. The Forecast resource is called only if the optional parameter 'time' is evaluated.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        time\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Optional parameter for forecasting data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            toInches\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toInches(value: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:133\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updateWeatherData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateWeatherData(data: any, time?: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:55\n                            \n                        \n\n\n                \n                    \n                            Updates weather conditions with the data obtained from OpenWeatherMap.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Weather data\n\n                                                        \n                                                \n                                                \n                                                        time\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Optional parameter for forecasting data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            weatherConditions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherConditions:     WeatherConditions\n\n                    \n                \n                    \n                        \n                            Type :     WeatherConditions\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable, throwError, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { LocationService } from '../../location/location.service';\nimport { WeatherConditions } from './weather';\nimport { round } from '../../utils';\nimport { appConfig } from '../../app-config';\nimport { uiConfig } from '../../ui/ui-config';\n\n/**\n * Gets the weather data from the Weather or Forecast resources\n * and provides reduction factors for graph values based on weather conditions.\n */\n@Injectable() export class WeatherService {\n\n    private weatherConditions: WeatherConditions;\n\n    constructor(private http: HttpClient, private location: LocationService) { }\n\n    public reset(): void {\n        this.weatherConditions = null;\n    }\n\n    public getWeatherConditions(): WeatherConditions {\n        return this.weatherConditions;\n    }\n\n    /**\n     * Gets weather data from the Weather resource. The Forecast resource is called only if the optional parameter 'time' is evaluated.\n     * @param time Optional parameter for forecasting data\n     */\n    public getWeatherData(time?: Date): Observable {\n        const url: string = time ? appConfig.apis.openWeatherMap.forecastUrl : appConfig.apis.openWeatherMap.weatherUrl;\n        const options = {\n            params: new HttpParams()\n                .set('lat', this.location.getLatLng().lat.toString())\n                .set('lon', this.location.getLatLng().lng.toString())\n                .set('units', 'metric')\n                .set('appid', appConfig.apis.openWeatherMap.apiKey)\n        };\n\n        return this.http.get(url, options).pipe(\n            map((response: any) => response),\n            catchError((error: any) => throwError('getWeatherData'))\n        );\n    }\n\n    /**\n     * Updates weather conditions with the data obtained from OpenWeatherMap.\n     * @param data Weather data\n     * @param time Optional parameter for forecasting data\n     */\n    public updateWeatherData(data: any, time?: Date): Observable {\n        if (time != null && data.list.length > 0) {\n            const timezoneOffset = time.getTimezoneOffset() * 60 * 1000; // Timezone offset in milliseconds\n            const utcTime = time.getTime() + timezoneOffset;\n\n            let preDt: number = data.list[0].dt * 1000; // Converts Unix UTC in milliseconds\n            let forecast: any = data.list[0];\n            for (let i = 1; i = utcTime) {\n                    forecast = nextDt - utcTime = 1) {\n            return 1;\n        } else {\n            return round(factor, 2);\n        }\n    }\n\n    private toInches(value: number): number {\n        return value / 10 / 2.54;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WizardComponent.html":{"url":"components/WizardComponent.html","title":"component - WizardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WizardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/wizard.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                ui-wizard\n            \n\n            \n                styleUrls\n                ./wizard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./wizard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                stepper\n                            \n                            \n                                wizardForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                exit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                stepClick\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    formSteps\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, router: Router, wizard: WizardService, scheduler: SchedulerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/wizard.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scheduler\n                                                  \n                                                        \n                                                                    SchedulerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            exit\n                            \n                            \n                        \n                    \n                \n                \n                    \nexit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.component.ts:119\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.component.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stepClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nstepClick(event: StepperSelectionEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.component.ts:92\n                            \n                        \n\n\n                \n                    \n                            Updates current step and step data.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    StepperSelectionEvent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                SelectionChange stepper event.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stepper\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stepper:     MatStepper\n\n                    \n                \n                    \n                        \n                            Type :     MatStepper\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('stepper')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wizardForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        wizardForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        formSteps\n                    \n                \n\n                \n                    \n                        getformSteps()\n                    \n                \n                            \n                                \n                                    Defined in src/app/ui/wizard/wizard.component.ts:24\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, FormArray, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MatStepper } from '@angular/material';\nimport { StepperSelectionEvent } from '@angular/cdk/stepper';\n\nimport { WizardService } from './wizard.service';\nimport { SchedulerService } from './scheduler.service';\nimport { pairsValidator } from '../directives/pairs.directive';\nimport { uiConfig } from '../ui-config';\n\n@Component({\n    selector: 'ui-wizard',\n    templateUrl: './wizard.component.html',\n    styleUrls: ['./wizard.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class WizardComponent implements OnInit {\n\n    @ViewChild('stepper') stepper: MatStepper;\n\n    wizardForm: FormGroup;\n\n    get formSteps(): FormArray {\n        return this.wizardForm.get('formSteps') as FormArray;\n    }\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private router: Router,\n        private wizard: WizardService,\n        private scheduler: SchedulerService\n    ) { }\n\n    ngOnInit(): void {\n        // Creates form model.\n        this.wizardForm = this.formBuilder.group({\n            formSteps: this.formBuilder.array([\n                this.formBuilder.group({\n                    address: [''],\n                    center: [null, [Validators.required]]\n                }),\n                this.formBuilder.group({\n                    bounds: [null, [Validators.required]],\n                    time: [null]\n                }),\n                this.formBuilder.group({\n                    odPairs: this.formBuilder.array([], pairsValidator())\n                }),\n                this.formBuilder.group({\n                    odPairs: this.formBuilder.array([]),\n                    weatherConditions: this.formBuilder.group({\n                        description: [null],\n                        icon: [null],\n                        visibility: [\n                            null,\n                            [Validators.required,\n                            Validators.min(0),\n                            Validators.max(uiConfig.visibility.max),\n                            Validators.pattern('^[0-9]*$')]\n                        ],\n                        rainIntensity: [\n                            null,\n                            [Validators.required,\n                            Validators.min(0),\n                            Validators.max(uiConfig.rainIntensity.max),\n                            Validators.pattern('^[0-9]*$')]\n                        ],\n                        snowIntensity: [\n                            null,\n                            [Validators.required,\n                            Validators.min(0),\n                            Validators.max(uiConfig.snowIntensity.max),\n                            Validators.pattern('^[0-9]*$')]\n                        ]\n                    })\n                }),\n                this.formBuilder.group({\n                    endSimulation: [false, [Validators.requiredTrue]]\n                }),\n                this.formBuilder.group({})\n            ])\n        }, { updateOn: 'blur' });\n\n        this.wizard.stepper = this.stepper;\n    }\n\n    /**\n     * Updates current step and step data.\n     * @param event SelectionChange stepper event.\n     */\n    stepClick(event: StepperSelectionEvent): void {\n        const index: number = event.previouslySelectedIndex;\n        const nextIndex: number = event.selectedIndex;\n        const data = this.wizardForm.get('formSteps').get([index]).value;\n\n        if (nextIndex > index) {\n            this.stepper.selected.completed = true;\n            switch (nextIndex) {\n                case 2:\n                    this.scheduler.scheduleNetwork(data, index, nextIndex);\n                    break;\n                case 3:\n                    this.scheduler.scheduleDemand(data, index, nextIndex);\n                    break;\n                case 4:\n                    this.scheduler.scheduleSimulation(data, index, nextIndex);\n                    break;\n                default:\n                    this.wizard.goOn(\n                        data,\n                        index,\n                        nextIndex\n                    );\n            }\n        }\n    }\n\n    exit(): void {\n        if (this.stepper.selectedIndex == 5) {\n            this.router.navigate(['/home']);\n        }\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    \n                        Search for the area\n                    \n                    \n                \n                \n                    \n                        Selection of the area\n                    \n                    \n                \n                \n                    \n                        Estimate of demand\n                    \n                    \n                \n                \n                    \n                        Change of conditions\n                    \n                    \n                \n                \n                    \n                        Simulation\n                    \n                    \n                \n                \n                    \n                        Statistics\n                    \n                    \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./wizard.component.scss\n                \n                .wizard-content {\n    .navigation {\n        text-align: right;\n        margin-top: 16px;\n\n        .mat-button {\n            padding-right: 16px;\n            padding-left: 8px;\n        }\n        .mat-raised-button {\n            padding-left: 16px;\n            padding-right: 8px;\n        }\n    }\n    \n    .full-width {\n        width: 100%;\n    }\n\n    .mat-button,\n    .mat-raised-button {\n        font-size: 12px;\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    Search for the area                                                                                                                    Selection of the area                                                                                                                    Estimate of demand                                                                                                                    Change of conditions                                                                                                                    Simulation                                                                                                                    Statistics                                                                                '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WizardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WizardService.html":{"url":"injectables/WizardService.html","title":"injectable - WizardService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WizardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/wizard/wizard.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                state\n                            \n                            \n                                    Public\n                                stepper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                goOn\n                            \n                            \n                                    Public\n                                putInError\n                            \n                            \n                                    Public\n                                putOnHold\n                            \n                            \n                                    Public\n                                removeFromError\n                            \n                            \n                                    Public\n                                removeFromWaiting\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Public\n                                updateStep\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/wizard.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            goOn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        goOn(data: any, index: number, nextIndex: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        nextIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            putInError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        putInError(error: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            putOnHold\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        putOnHold(message?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            removeFromError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeFromError()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            removeFromWaiting\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeFromWaiting()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updateStep\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateStep(data: any, index: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            state\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        state:     WizardState\n\n                    \n                \n                    \n                        \n                            Type :     WizardState\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stepper\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stepper:     MatStepper\n\n                    \n                \n                    \n                        \n                            Type :     MatStepper\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { MatStepper } from \"@angular/material\";\n\nimport { Store, select } from '@ngrx/store';\n\nimport * as fromUi from '../models/reducers';\nimport { WizardActionTypes } from '../models/actions/wizard.actions';\nimport { WizardState } from \"../models/reducers/wizard.reducer\";\n\n@Injectable() export class WizardService {\n\n    public state: WizardState;\n\n    public stepper: MatStepper;\n\n    constructor(private store: Store) {\n        this.store.pipe(select(fromUi.wizardState)).subscribe((state: WizardState) => {\n            this.state = state;\n        });\n    }\n\n    public reset(): void {\n        // Stepper.\n        this.stepper.reset();\n        // UI state.\n        this.store.dispatch({\n            type: WizardActionTypes.Reset\n        });\n    }\n\n    public updateStep(data: any, index: number): void {\n        this.store.dispatch({\n            type: WizardActionTypes.StepChanged,\n            payload: { step: { data: data }, index: index }\n        });\n    }\n\n    public putInError(error: string): void {\n        this.store.dispatch({\n            type: WizardActionTypes.StepError,\n            payload: error\n        });\n    }\n\n    public putOnHold(message?: string): void {\n        this.store.dispatch({\n            type: WizardActionTypes.StepPending,\n            payload: message || true\n        });\n    }\n\n    public removeFromError(): void {\n        this.store.dispatch({\n            type: WizardActionTypes.StepError,\n            payload: null\n        });\n    }\n\n    public removeFromWaiting(): void {\n        this.store.dispatch({\n            type: WizardActionTypes.StepPending,\n            payload: false\n        });\n    }\n\n    public goOn(data: any, index: number, nextIndex: number): void {\n        this.store.dispatch({\n            type: WizardActionTypes.GoOn,\n            payload: { step: { data: data }, index: index, nextIndex: nextIndex }\n        });\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WizardState.html":{"url":"interfaces/WizardState.html","title":"interface - WizardState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WizardState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/reducers/wizard.reducer.ts\n        \n\n            \n                Description\n            \n            \n                Wizard state management.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        currentStep\n                                \n                                \n                                        error\n                                \n                                \n                                        pending\n                                \n                                \n                                        steps\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentStep\n                                    \n                                \n                                \n                                    \n                                        currentStep:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pending\n                                    \n                                \n                                \n                                    \n                                        pending:     string | boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        steps\n                                    \n                                \n                                \n                                    \n                                        steps:     Step[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Step[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import deepClone from 'mout/lang/deepClone';\n\nimport { Step, STEPS } from \"../ui-state\";\nimport { WizardActions, WizardActionTypes } from '../actions/wizard.actions';\n\n/**\n * Wizard state management.\n */\nexport interface WizardState {\n\n    steps: Step[];\n    currentStep: number;\n    error: string | null;\n    pending: string | boolean;\n\n}\n\nexport const initialWizardState: WizardState = {\n    steps: STEPS,\n    currentStep: 0,\n    error: null,\n    pending: false\n};\n\n/**\n * ngrx: wizard Reducer.\n */\nexport function wizardReducer(state: WizardState = deepClone(initialWizardState), action: WizardActions): WizardState {\n    switch (action.type) {\n        case WizardActionTypes.StepChanged: {\n            // Updates the step at the provided index.\n            state.steps[action.payload.index] = action.payload.step;\n            return {\n                ...state,\n                steps: deepClone(state.steps),\n                error: null,\n                pending: false\n            };\n        }\n        case WizardActionTypes.StepError: {\n            return {\n                ...state,\n                error: action.payload,\n                pending: false\n            };\n        }\n        case WizardActionTypes.StepPending: {\n            return {\n                ...state,\n                error: null,\n                pending: action.payload\n            };\n        }\n        case WizardActionTypes.GoOn: {\n            // Updates the step at the provided index.\n            state.steps[action.payload.index] = action.payload.step;\n            return {\n                ...state,\n                steps: deepClone(state.steps),\n                currentStep: action.payload.nextIndex\n            };\n        }\n        case WizardActionTypes.Reset: {\n            return deepClone(initialWizardState);\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\nexport const getSteps: (state: WizardState) => Step[] = (state: WizardState) => state.steps;\n\nexport const getCurrentStep: (state: WizardState) => number = (state: WizardState) => state.currentStep;\n\nexport const getError: (state: WizardState) => string = (state: WizardState) => state.error;\n\nexport const getPending: (state: WizardState) => string | boolean = (state: WizardState) => state.pending;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 7.0.4\n        \n            @angular/common : 7.0.4\n        \n            @angular/compiler : 7.0.4\n        \n            @angular/core : 7.0.4\n        \n            @angular/forms : 7.0.4\n        \n            @angular/http : 7.0.4\n        \n            @angular/platform-browser : 7.0.4\n        \n            @angular/platform-browser-dynamic : 7.0.4\n        \n            @angular/router : 7.0.4\n        \n            @angular/material : 7.0.4\n        \n            @angular/cdk : 7.0.4\n        \n            @angular/flex-layout : 7.0.0-beta.19\n        \n            @ngrx/store : 6.1.2\n        \n            @turf/area : 6.0.1\n        \n            @turf/helpers : 6.1.4\n        \n            @turf/invariant : 6.1.2\n        \n            @turf/bearing : 6.0.1\n        \n            @turf/distance : 6.0.1\n        \n            @turf/transform-translate : 5.1.5\n        \n            @turf/centroid : 6.0.2\n        \n            @turf/center : 6.0.1\n        \n            ng-pick-datetime : 7.0.0\n        \n            mout : 1.1.0\n        \n            everpolate : 0.0.3\n        \n            chart.js : 2.7.3\n        \n            chartjs-plugin-annotation : 0.5.7\n        \n            web-animations-js : 2.3.1\n        \n            hammerjs : 2.0.8\n        \n            animejs : 2.2.0\n        \n            qs : 6.5.2\n        \n            core-js : 2.5.7\n        \n            rxjs : 6.3.3\n        \n            zone.js : 0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Control   (src/.../clock.service.ts)\n                        \n                        \n                            MapActionTypes   (src/.../map.actions.ts)\n                        \n                        \n                            PathType   (src/.../graph.ts)\n                        \n                        \n                            SimulationActionTypes   (src/.../simulation.actions.ts)\n                        \n                        \n                            WeatherDescription   (src/.../weather.ts)\n                        \n                        \n                            WizardActionTypes   (src/.../wizard.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/simulation/clock.service.ts\n    \n        \n            \n                \n                    \n                        \n                        Control\n                    \n                \n                        \n                            \n                                 start\n                            \n                        \n                        \n                            \n                                Value : start\n                            \n                        \n                        \n                            \n                                 pause\n                            \n                        \n                        \n                            \n                                Value : pause\n                            \n                        \n                        \n                            \n                                 stop\n                            \n                        \n                        \n                            \n                                Value : stop\n                            \n                        \n                        \n                            \n                                 step\n                            \n                        \n                        \n                            \n                                Value : step\n                            \n                        \n                        \n                            \n                                 slow\n                            \n                        \n                        \n                            \n                                Value : slow\n                            \n                        \n                        \n                            \n                                 quick\n                            \n                        \n                        \n                            \n                                Value : quick\n                            \n                        \n            \n        \n\n    src/app/ui/models/actions/map.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        MapActionTypes\n                    \n                \n                    \n                        \n                            ngrx: map Actions.\n\n                        \n                    \n                        \n                            \n                                 MapChanged\n                            \n                        \n                        \n                            \n                                Value : [Map] Map Changed\n                            \n                        \n                        \n                            \n                                 Reset\n                            \n                        \n                        \n                            \n                                Value : [Map] Reset\n                            \n                        \n            \n        \n\n    src/app/network/graph.ts\n    \n        \n            \n                \n                    \n                        \n                        PathType\n                    \n                \n                        \n                            \n                                 distance\n                            \n                        \n                        \n                            \n                                Value : distance\n                            \n                        \n                        \n                            \n                                 duration\n                            \n                        \n                        \n                            \n                                Value : duration\n                            \n                        \n            \n        \n\n    src/app/simulation/models/actions/simulation.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        SimulationActionTypes\n                    \n                \n                    \n                        \n                            ngrx: simulation Actions.\n\n                        \n                    \n                        \n                            \n                                 SimulationChanged\n                            \n                        \n                        \n                            \n                                Value : [Simulation] Simulation Changed\n                            \n                        \n                        \n                            \n                                 SimulationEnded\n                            \n                        \n                        \n                            \n                                Value : [Simulation] Simulation Ended\n                            \n                        \n                        \n                            \n                                 PeriodsChanged\n                            \n                        \n                        \n                            \n                                Value : [Simulation] Periods Changed\n                            \n                        \n                        \n                            \n                                 Reset\n                            \n                        \n                        \n                            \n                                Value : [Simulation] Reset\n                            \n                        \n            \n        \n\n    src/app/network/weather/weather.ts\n    \n        \n            \n                \n                    \n                        \n                        WeatherDescription\n                    \n                \n                        \n                            \n                                 clearSky\n                            \n                        \n                        \n                            \n                                Value : clear sky\n                            \n                        \n                        \n                            \n                                 fewClouds\n                            \n                        \n                        \n                            \n                                Value : few clouds\n                            \n                        \n                        \n                            \n                                 scatteredClouds\n                            \n                        \n                        \n                            \n                                Value : scattered clouds\n                            \n                        \n                        \n                            \n                                 brokenClouds\n                            \n                        \n                        \n                            \n                                Value : broken clouds\n                            \n                        \n                        \n                            \n                                 showerRain\n                            \n                        \n                        \n                            \n                                Value : shower rain\n                            \n                        \n                        \n                            \n                                 rain\n                            \n                        \n                        \n                            \n                                Value : rain\n                            \n                        \n                        \n                            \n                                 thunderstorm\n                            \n                        \n                        \n                            \n                                Value : thunderstorm\n                            \n                        \n                        \n                            \n                                 snow\n                            \n                        \n                        \n                            \n                                Value : snow\n                            \n                        \n                        \n                            \n                                 mist\n                            \n                        \n                        \n                            \n                                Value : mist\n                            \n                        \n            \n        \n\n    src/app/ui/models/actions/wizard.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        WizardActionTypes\n                    \n                \n                    \n                        \n                            ngrx: wizard Actions.\n\n                        \n                    \n                        \n                            \n                                 StepChanged\n                            \n                        \n                        \n                            \n                                Value : [Wizard] Step Changed\n                            \n                        \n                        \n                            \n                                 StepError\n                            \n                        \n                        \n                            \n                                Value : [Wizard] Step Error\n                            \n                        \n                        \n                            \n                                 StepPending\n                            \n                        \n                        \n                            \n                                Value : [Wizard] Step Pending\n                            \n                        \n                        \n                            \n                                 GoOn\n                            \n                        \n                        \n                            \n                                Value : [Wizard] Go On\n                            \n                        \n                        \n                            \n                                 Reset\n                            \n                        \n                        \n                            \n                                Value : [Wizard] Reset\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            formatTimeFromMilliseconds   (src/.../utils.ts)\n                        \n                        \n                            formatTimeFromSeconds   (src/.../utils.ts)\n                        \n                        \n                            getScript   (src/.../utils.ts)\n                        \n                        \n                            loadScripts   (src/.../utils.ts)\n                        \n                        \n                            mapReducer   (src/.../map.reducer.ts)\n                        \n                        \n                            pairsValidator   (src/.../pairs.directive.ts)\n                        \n                        \n                            round   (src/.../utils.ts)\n                        \n                        \n                            simulationReducer   (src/.../simulation.reducer.ts)\n                        \n                        \n                            toSeconds   (src/.../utils.ts)\n                        \n                        \n                            wizardReducer   (src/.../wizard.reducer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/ui/utils.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            formatTimeFromMilliseconds\n                            \n                            \n                        \n                    \n                \n                \n                    \nformatTimeFromMilliseconds(ms)\n                    \n                \n\n\n\n\n                \n                    \n                            Format time to M:SS.mmm\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ms\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Milliseconds\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formatTimeFromSeconds\n                            \n                            \n                        \n                    \n                \n                \n                    \nformatTimeFromSeconds(s)\n                    \n                \n\n\n\n\n                \n                    \n                            Format time to M:SS\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        s\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Seconds\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toSeconds\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoSeconds(value)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/utils.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getScript\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetScript(src)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        src\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadScripts\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadScripts()\n                    \n                \n\n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            round\n                            \n                            \n                        \n                    \n                \n                \n                    \nround(value, decimals?)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        decimals\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/ui/models/reducers/map.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mapReducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nmapReducer(state, action)\n                    \n                \n\n\n\n\n                \n                    \n                            ngrx: map Reducer.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/ui/directives/pairs.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            pairsValidator\n                            \n                            \n                        \n                    \n                \n                \n                    \npairsValidator()\n                    \n                \n\n\n\n\n            \n        \n\n    src/app/simulation/models/reducers/simulation.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            simulationReducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nsimulationReducer(state, action)\n                    \n                \n\n\n\n\n                \n                    \n                            ngrx: simulation Reducer.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/ui/models/reducers/wizard.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            wizardReducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nwizardReducer(state, action)\n                    \n                \n\n\n\n\n                \n                    \n                            ngrx: wizard Reducer.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSTRADA\n\n\nSTRADA (Simulation of TRAffic DAta) is an urban traffic web simulator that uses data in real time built with Angular, TypeScript & Firebase.\n\n\nProject developed for the dissertation of my bachelor's degree in computer engineering.\n\nDocumentation\nOfficial docs: STRADA documentation\nMotivation\nA widespread cliché wants urban traffic to be created because roads and public transport are insufficient or not working. Indeed, those who participated in the design of complex systems know perfectly that overdimensioning beyond average demand often does not give the expected results, or is not economically sustainable or for other factors. Traffic is due to population density and human activities that are concentrated in the same place or time. Even the Romans or medieval cities had busy roads: a sign of vitality, productivity, the ability of some centers to attract people and activities. In fact, over time, various meanings have been attributed to traffic: from \"trade\" to \"circulation\", but only in the automobile age the effect of congestion has replaced its original meanings to become the common use.\nAlthough traffic is inevitable in some situations, it is possible to study it in order to reduce the effect of congestion - as well as traffic accidents and pollution.\nSoftware simulators allow you to analyze, design, plan and manage urban mobility in order to find the best solutions for the traffic problems before adopting them in reality.\nThe STRADA simulator - Simulation of TRAffic DAta - is a web application that can process any transport network, obtain traffic data in real time and offer a simulation of traffic flow, with the purpose of controlling, estimating or predict traffic considering different conditions, such as different weather conditions.\nFeatures\n\nGraph generation of any transport network on a real map\nTransport demand calculation without extensive statistical surveys or expensive traffic sensors\nReal time factors such as weather conditions\nA macroscopic simulation model (LTM - Link Transmission Model) in the context of urban traffic\n\nArchitecture\n\nDevelopment\nRequirements\n\nNode.js and npm\nUpdate npm: npm install npm@latest -g\nAngular CLI: npm install -g @angular/cli\nFirebase\nCreate a Firebase project in the Firebase console\nFirebase CLI: npm install -g firebase-tools\nLogin: firebase login\n\n\nGoogle Maps \nGet your API keys: https://cloud.google.com/maps-platform/\nEnable Maps JavaScript API, Geocoding API and Directions API\n\n\nOpenWeatherMap\nGet your API key: https://openweathermap.org/\n\n\n\nPrerequisites\n\nUpdate .firebaserc file\nUpdate src/app/app-config.json file\nUpdate functions/src/functions-config.json file\n\nFirebase Functions\ncd functions\nnpm install\nnpm run serve:devApp\nnpm install\nnpm startTest\nnpm testLicense\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Roberto Simonetti\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DemandModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LocationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NetworkModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SimulationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WeatherModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_DemandModule\n\n\n\ncluster_DemandModule_providers\n\n\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_providers\n\n\n\ncluster_NetworkModule\n\n\n\ncluster_NetworkModule_imports\n\n\n\ncluster_NetworkModule_providers\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SimulationModule\n\n\n\ncluster_SimulationModule_providers\n\n\n\ncluster_UiModule\n\n\n\ncluster_UiModule_declarations\n\n\n\ncluster_UiModule_imports\n\n\n\ncluster_UiModule_providers\n\n\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_providers\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nPrivacyComponent\n\nPrivacyComponent\n\nAppModule -->\n\nPrivacyComponent->AppModule\n\n\n\n\n\nTermsComponent\n\nTermsComponent\n\nAppModule -->\n\nTermsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nDemandModule\n\nDemandModule\n\nAppModule -->\n\nDemandModule->AppModule\n\n\n\n\n\nLocationModule\n\nLocationModule\n\nAppModule -->\n\nLocationModule->AppModule\n\n\n\n\n\nNetworkModule\n\nNetworkModule\n\nAppModule -->\n\nNetworkModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nSharedModule->FooterComponent \n\n\n\n\n\nInfoDialogComponent \n\nInfoDialogComponent \n\nInfoDialogComponent  -->\n\nSharedModule->InfoDialogComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nMessageArchivedComponent \n\nMessageArchivedComponent \n\nMessageArchivedComponent  -->\n\nSharedModule->MessageArchivedComponent \n\n\n\n\n\nUiModule\n\nUiModule\n\nUiModule -->\n\nSharedModule->UiModule\n\n\n\n\n\nSimulationModule\n\nSimulationModule\n\nAppModule -->\n\nSimulationModule->AppModule\n\n\n\n\n\nDemandService\n\nDemandService\n\nDemandModule -->\n\nDemandService->DemandModule\n\n\n\n\n\nLocationService\n\nLocationService\n\nLocationModule -->\n\nLocationService->LocationModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nNetworkModule -->\n\nWeatherModule->NetworkModule\n\n\n\n\n\nNetworkService\n\nNetworkService\n\nNetworkModule -->\n\nNetworkService->NetworkModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nSharedModule -->\n\nFooterComponent->SharedModule\n\n\n\n\n\nInfoDialogComponent\n\nInfoDialogComponent\n\nSharedModule -->\n\nInfoDialogComponent->SharedModule\n\n\n\n\n\nMessageArchivedComponent\n\nMessageArchivedComponent\n\nSharedModule -->\n\nMessageArchivedComponent->SharedModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\nClockService\n\nClockService\n\nSimulationModule -->\n\nClockService->SimulationModule\n\n\n\n\n\nSimulationService\n\nSimulationService\n\nSimulationModule -->\n\nSimulationService->SimulationModule\n\n\n\n\n\nChangeOfConditionsComponent\n\nChangeOfConditionsComponent\n\nUiModule -->\n\nChangeOfConditionsComponent->UiModule\n\n\n\n\n\nChartsComponent\n\nChartsComponent\n\nUiModule -->\n\nChartsComponent->UiModule\n\n\n\n\n\nEstimateOfDemandComponent\n\nEstimateOfDemandComponent\n\nUiModule -->\n\nEstimateOfDemandComponent->UiModule\n\n\n\n\n\nGoogleMapComponent\n\nGoogleMapComponent\n\nUiModule -->\n\nGoogleMapComponent->UiModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nUiModule -->\n\nMapComponent->UiModule\n\n\n\n\n\nNumericComponent\n\nNumericComponent\n\nUiModule -->\n\nNumericComponent->UiModule\n\n\n\n\n\nSearchForTheAreaComponent\n\nSearchForTheAreaComponent\n\nUiModule -->\n\nSearchForTheAreaComponent->UiModule\n\n\n\n\n\nSelectionOfTheAreaComponent\n\nSelectionOfTheAreaComponent\n\nUiModule -->\n\nSelectionOfTheAreaComponent->UiModule\n\n\n\n\n\nSimulationComponent\n\nSimulationComponent\n\nUiModule -->\n\nSimulationComponent->UiModule\n\n\n\n\n\nStatisticsComponent\n\nStatisticsComponent\n\nUiModule -->\n\nStatisticsComponent->UiModule\n\n\n\n\n\nUiComponent\n\nUiComponent\n\nUiModule -->\n\nUiComponent->UiModule\n\n\n\n\n\nWeatherComponent\n\nWeatherComponent\n\nUiModule -->\n\nWeatherComponent->UiModule\n\n\n\n\n\nWizardComponent\n\nWizardComponent\n\nUiModule -->\n\nWizardComponent->UiModule\n\n\n\n\n\nUiRoutingModule\n\nUiRoutingModule\n\nUiModule -->\n\nUiRoutingModule->UiModule\n\n\n\n\n\nMapService\n\nMapService\n\nUiModule -->\n\nMapService->UiModule\n\n\n\n\n\nSchedulerService\n\nSchedulerService\n\nUiModule -->\n\nSchedulerService->UiModule\n\n\n\n\n\nWizardService\n\nWizardService\n\nUiModule -->\n\nWizardService->UiModule\n\n\n\n\n\nWeatherService\n\nWeatherService\n\nWeatherModule -->\n\nWeatherService->WeatherModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        11 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    21 Components\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    23 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    17 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EnumValueType   (src/.../utils.ts)\n                        \n                        \n                            MapActions   (src/.../map.actions.ts)\n                        \n                        \n                            SimulationActions   (src/.../simulation.actions.ts)\n                        \n                        \n                            WizardActions   (src/.../wizard.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/ui/utils.ts\n    \n        \n            \n                \n                    \n                        \n                        EnumValueType\n                    \n                \n                \n                    \n                        EnumValueType:     string | number\n\n                    \n                \n            \n        \n\n    src/app/ui/models/actions/map.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        MapActions\n                    \n                \n                \n                    \n                        MapActions:     MapChanged | Reset\n\n                    \n                \n            \n        \n\n    src/app/simulation/models/actions/simulation.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        SimulationActions\n                    \n                \n                \n                    \n                        SimulationActions:     SimulationChanged | SimulationEnded | PeriodsChanged | Reset\n\n                    \n                \n            \n        \n\n    src/app/ui/models/actions/wizard.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        WizardActions\n                    \n                \n                \n                    \n                        WizardActions:     StepChanged | StepError | StepPending | GoOn | Reset\n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            busiestChartOptions   (src/.../charts-config.ts)\n                        \n                        \n                            busiestColor   (src/.../charts-config.ts)\n                        \n                        \n                            currentStep   (src/.../reducers.ts)\n                        \n                        \n                            end   (src/.../reducers.ts)\n                        \n                        \n                            environment   (src/.../environment.test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            error   (src/.../reducers.ts)\n                        \n                        \n                            featureSimulationState   (src/.../reducers.ts)\n                        \n                        \n                            featureUiState   (src/.../reducers.ts)\n                        \n                        \n                            getCurrentStep   (src/.../wizard.reducer.ts)\n                        \n                        \n                            getEnd   (src/.../simulation.reducer.ts)\n                        \n                        \n                            getError   (src/.../wizard.reducer.ts)\n                        \n                        \n                            getMap   (src/.../map.reducer.ts)\n                        \n                        \n                            getPending   (src/.../wizard.reducer.ts)\n                        \n                        \n                            getPeriods   (src/.../simulation.reducer.ts)\n                        \n                        \n                            getSimulation   (src/.../simulation.reducer.ts)\n                        \n                        \n                            getSteps   (src/.../wizard.reducer.ts)\n                        \n                        \n                            HOME_TRANSITION   (src/.../home.transition.ts)\n                        \n                        \n                            initialMapState   (src/.../map.reducer.ts)\n                        \n                        \n                            initialSimulationState   (src/.../simulation.reducer.ts)\n                        \n                        \n                            initialWizardState   (src/.../wizard.reducer.ts)\n                        \n                        \n                            map   (src/.../reducers.ts)\n                        \n                        \n                            mapState   (src/.../reducers.ts)\n                        \n                        \n                            mapStyle   (src/.../map.style.ts)\n                        \n                        \n                            materialModules   (src/.../material.module.ts)\n                        \n                        \n                            pending   (src/.../reducers.ts)\n                        \n                        \n                            periods   (src/.../reducers.ts)\n                        \n                        \n                            reducers   (src/.../reducers.ts)\n                        \n                        \n                            reducers   (src/.../reducers.ts)\n                        \n                        \n                            sharedModules   (src/.../shared.module.ts)\n                        \n                        \n                            simulation   (src/.../reducers.ts)\n                        \n                        \n                            simulationState   (src/.../reducers.ts)\n                        \n                        \n                            steps   (src/.../reducers.ts)\n                        \n                        \n                            STEPS   (src/.../ui-state.ts)\n                        \n                        \n                            trafficChartOptions   (src/.../charts-config.ts)\n                        \n                        \n                            uiConfig   (src/.../ui-config.ts)\n                        \n                        \n                            wizardState   (src/.../reducers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/ui/charts/charts-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            busiestChartOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        busiestChartOptions:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    legend: {\n        display: true\n    },\n    title: {\n        display: true\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n        xAxes: [{\n            id: 'x-axis-0',\n            type: 'category',\n            scaleLabel: {\n                display: true,\n                labelString: 'Time'\n            },\n            ticks: {\n                beginAtZero: true\n            }\n        }],\n        yAxes: [{\n            id: 'y-axis-0',\n            type: 'linear',\n            ticks: {\n                stepSize: 10\n            }\n        }]\n    },\n    annotation: {\n        drawTime: 'afterDatasetsDraw',\n        annotations: []\n    }\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            busiestColor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        busiestColor:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '#63a4ff'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trafficChartOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trafficChartOptions:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    legend: {\n        display: false\n    },\n    title: {\n        display: true\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n        xAxes: [{\n            scaleLabel: {\n                display: true,\n                labelString: 'Time (s)'\n            },\n            ticks: {\n                beginAtZero: true\n            }\n        }],\n        yAxes: [{\n            display: true,\n            maxBarThickness: 40\n        }]\n    }\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/ui/models/reducers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            currentStep\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentStep:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    wizardState,\n    fromWizard.getCurrentStep\n)\n                        \n                    \n\n                \n                    \n                        Exports the current step state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    wizardState,\n    fromWizard.getError\n)\n                        \n                    \n\n                \n                    \n                        Exports the error state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            featureUiState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        featureUiState:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createFeatureSelector('ui')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            map\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        map:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    mapState,\n    fromMap.getMap\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mapState:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    featureUiState,\n    (state: UiState) => state.map\n)\n                        \n                    \n\n                \n                    \n                        Exports the map state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pending\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pending:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    wizardState,\n    fromWizard.getPending\n)\n                        \n                    \n\n                \n                    \n                        Exports the pending state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reducers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reducers:     ActionReducerMap\n\n                    \n                \n                    \n                        \n                            Type :     ActionReducerMap\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    wizard: fromWizard.wizardReducer,\n    map: fromMap.mapReducer\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            steps\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        steps:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    wizardState,\n    fromWizard.getSteps\n)\n                        \n                    \n\n                \n                    \n                        Exports the steps state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wizardState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        wizardState:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    featureUiState,\n    (state: UiState) => state.wizard\n)\n                        \n                    \n\n                \n                    \n                        Exports the wizard state.\n\n                    \n                \n\n            \n        \n\n    src/app/simulation/models/reducers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            end\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        end:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    simulationState,\n    fromSimulation.getEnd\n)\n                        \n                    \n\n                \n                    \n                        Exports the end state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            featureSimulationState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        featureSimulationState:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createFeatureSelector('simulation')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            periods\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        periods:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    simulationState,\n    fromSimulation.getPeriods\n)\n                        \n                    \n\n                \n                    \n                        Exports the periods state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reducers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reducers:     ActionReducerMap\n\n                    \n                \n                    \n                        \n                            Type :     ActionReducerMap\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    simulation: fromSimulation.simulationReducer\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            simulation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        simulation:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    simulationState,\n    fromSimulation.getSimulation\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            simulationState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        simulationState:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    featureSimulationState,\n    (state: SimulationState) => state.simulation\n)\n                        \n                    \n\n                \n                    \n                        Exports the simulation state.\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    production: false,\n    testing: true,\n    functions: {\n        networkData: {\n            url: ''\n        },\n        trafficData: {\n            url: ''\n        }\n    }\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    production: true,\n    testing: false,\n    functions: {\n        networkData: {\n            url: 'https://us-central1-' + appConfig.firebase.projectId + '.cloudfunctions.net/networkData'\n        },\n        trafficData: {\n            url: 'https://us-central1-' + appConfig.firebase.projectId + '.cloudfunctions.net/trafficData'\n        }\n    }\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    production: false,\n    testing: false,\n    functions: {\n        networkData: {\n            url: 'http://localhost:4201/' + appConfig.firebase.projectId + '/us-central1/networkData'\n        },\n        trafficData: {\n            url: 'http://localhost:4201/' + appConfig.firebase.projectId + '/us-central1/trafficData'\n        }\n    }\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/ui/models/reducers/wizard.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getCurrentStep\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getCurrentStep:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : (state: WizardState) => state.currentStep\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getError:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : (state: WizardState) => state.error\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPending\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getPending:     string | boolean\n\n                    \n                \n                    \n                        \n                            Type :     string | boolean\n\n                        \n                    \n                    \n                        \n                            Default value : (state: WizardState) => state.pending\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSteps\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getSteps:     Step[]\n\n                    \n                \n                    \n                        \n                            Type :     Step[]\n\n                        \n                    \n                    \n                        \n                            Default value : (state: WizardState) => state.steps\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialWizardState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        initialWizardState:     WizardState\n\n                    \n                \n                    \n                        \n                            Type :     WizardState\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    steps: STEPS,\n    currentStep: 0,\n    error: null,\n    pending: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/simulation/models/reducers/simulation.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getEnd\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getEnd:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : (state: SimulationState) => state.end\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPeriods\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getPeriods:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : (state: SimulationState) => state.periods\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSimulation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getSimulation:     Simulation\n\n                    \n                \n                    \n                        \n                            Type :     Simulation\n\n                        \n                    \n                    \n                        \n                            Default value : (state: SimulationState) => state.simulation\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialSimulationState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        initialSimulationState:     SimulationState\n\n                    \n                \n                    \n                        \n                            Type :     SimulationState\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    simulation: null,\n    end: false,\n    periods: null\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/ui/models/reducers/map.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getMap:     Map\n\n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : (state: MapState) => state.map\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialMapState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        initialMapState:     MapState\n\n                    \n                \n                    \n                        \n                            Type :     MapState\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    map: null\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/home/home.transition.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            HOME_TRANSITION\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        HOME_TRANSITION:     AnimationTriggerMetadata\n\n                    \n                \n                    \n                        \n                            Type :     AnimationTriggerMetadata\n\n                        \n                    \n                    \n                        \n                            Default value : trigger('homeTransition', [\n    transition('void => *', [\n        style({\n            opacity: 0\n        }),\n        animate('500ms 0ms ease-in',\n            style({\n                opacity: 1\n            })\n        )\n    ])\n])\n                        \n                    \n\n\n            \n        \n\n    src/app/ui/map/map.style.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mapStyle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mapStyle:     google.maps.MapTypeStyle[]\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.MapTypeStyle[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        \"featureType\": \"administrative\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road\",\n        \"elementType\": \"labels.icon\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"transit\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    }\n]\n                        \n                    \n\n                \n                    \n                        Styled Maps: https://developers.google.com/maps/documentation/javascript/styling\n\n                    \n                \n\n            \n        \n\n    src/app/shared/material.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            materialModules\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        materialModules:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    MatSidenavModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    MatMenuModule,\n    MatStepperModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule,\n    MatDialogModule,\n    MatGridListModule,\n    MatSelectModule,\n    MatExpansionModule,\n    MatTableModule\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/shared/shared.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            sharedModules\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sharedModules:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    CommonModule,\n    RouterModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    FlexLayoutModule\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/ui/models/ui-state.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            STEPS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        STEPS:     Step[]\n\n                    \n                \n                    \n                        \n                            Type :     Step[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n                \n                    \n                        Initial steps.\n\n                    \n                \n\n            \n        \n\n    src/app/ui/ui-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            uiConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uiConfig:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    /**\n     * Initial map.\n     */\n    map: {\n        center: { lat: 41.910943, lng: 12.476358 },\n        zoom: 4\n    },\n    /**\n     * Time of simulation limit in hours.\n     */\n    timeLimit: 24,\n    /**\n     * Area limit in hectares.\n     */\n    areaMaxLimit: 30,\n    areaMinLimit: 3,\n    links: {\n        baseColor: '#babdbe',\n        noTrafficColor: '#76d219',\n        moderateTrafficColor: '#d27519',\n        heavyTrafficColor: '#d2191a'\n    },\n    /**\n     * Minimum edge distance for traffic data.\n     */\n    minDistance: 20,\n    /**\n     * Minimum edge duration for traffic data.\n     */\n    minDuration: 2,\n    /**\n     * Maximum number of O/D pairs that the user can select.\n     */\n    maxOdPairs: 5,\n    /**\n     * The number of shortest paths to compute.\n     */\n    k: 3,\n    /**\n     * Multinomial logit parameter.\n     */\n    theta: 2,\n    /**\n     * Minimum spacing between subsequent vehicles.\n     */\n    sp: 5,\n    /**\n     * Shortest paths.\n     */\n    paths: {\n        /**\n         * Highly, Medium, Poorly\n         */\n        colors: [\n            '#004ba0',\n            '#1976d2',\n            '#63a4ff'\n        ]\n    },\n    /**\n     * Maximum No. vehicles for O/D pair.\n     */\n    maxDemand: 10000,\n    /**\n     * Weather Adjustment Factor Coefficients.\n     * \"Traffic Analysis Toolbox. Volume XI: Weather and Traffic Analysis, Modeling and Simulation\"\n     */\n    adjustmentFactorCoefficients: {\n        maxFlow: [0.91, 0.009, -0.404, -1.455, 0, 0]\n    },\n    /**\n     * Visibility (m).\n     */\n    visibility: {\n        max: 10000,\n        default: 10000 // Normal value\n    },\n    /**\n     * Rain rating (mm).\n     */\n    rainIntensity: {\n        max: 70\n    },\n    /**\n     * Snow rating (mm).\n     */\n    snowIntensity: {\n        max: 20\n    },\n    weatherIcons: ['01d', '02d', '03d', '04d', '09d', '10d', '11d', '13d', '50d'],\n    /**\n     * Minimum fraction of the capacity of the moderate traffic level.\n     */\n    moderateTraffic: 0.25,\n    /**\n     * Minimum fraction of the capacity of the heavy traffic level.\n     */\n    heavyTraffic: 0.75,\n    /**\n     * Simulated time interval (ms).\n     */\n    simulatedTimeInterval: 500,\n    timeIntervalIncrement: 100,\n    timeIntervalDecrement: 100,\n    /**\n     * Maximum time interval in seconds for LTM.\n     */\n    maxTimeInterval: 10\n}\n                        \n                    \n\n                \n                    \n                        User interface configuration.\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
