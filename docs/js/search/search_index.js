var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AboutComponent.html",[0,0.601,1,1.2]],["body/components/AboutComponent.html",[0,1.095,1,2.105,2,0.258,3,0.289,4,1.636,5,1.636,6,1.636,7,0.142,8,3.864,9,1.645,10,2.608,11,1.636,12,2.997,13,2.469,14,2.435,15,5.852,16,2.435,17,5.852,18,0.356,19,0.851,20,6.435,21,1.526,22,2.771,23,1.525,24,0.951,25,5.852,26,4.449,27,0.763,28,0.015,29,1.266,30,1.121,31,0.422,32,1.118,33,1,34,2.334,35,5.083,36,0.293,37,0.733,38,0.16,39,0.008,40,5.314,41,4.576,42,2.334,43,4.197,44,2.151,45,2.658,46,1.365,47,4.576,48,3.072,49,3.864,50,3.864,51,4.576,52,5.083,53,5.083,54,3.864,55,5.083,56,2.784,57,5.083,58,2.784,59,5.852,60,4.197,61,5.083,62,3.156,63,5.852,64,5.083,65,5.852,66,5.083,67,1.161,68,2.151,69,1.584,70,2.068,71,2.554,72,1.636,73,3.479,74,3.479,75,3.479,76,4.449,77,1.044,78,1.636,79,1.4,80,1.636,81,1.4,82,1.762,83,1.161,84,1.636,85,1.4,86,1.572,87,1.636,88,1.4,89,1.636,90,1.4,91,1.512,92,2.151,93,1.348,94,1.636,95,1.4,96,1.636,97,1.4,98,2.138,99,1.4,100,1.636,101,1.636,102,1.4,103,1.572,104,2.151,105,1.4,106,1.512,107,1.4,108,1.636,109,1.4,110,1.636,111,1.348,112,1.636,113,1.4,114,1.636,115,1.4,116,1.636,117,0.01,118,0.01]],["title/components/AppComponent.html",[0,0.601,79,1.246]],["body/components/AppComponent.html",[0,1.149,1,1.578,2,0.286,3,0.23,4,1.915,5,1.915,6,1.915,7,0.166,11,1.915,12,3.04,13,2.56,14,2.693,16,2.693,28,0.014,36,0.344,37,0.858,38,0.187,39,0.009,40,4.643,67,1.359,68,2.38,69,1.753,70,2.287,71,2.708,72,1.915,77,1.155,78,1.915,79,2.318,80,1.915,81,1.639,82,1.826,83,1.359,84,1.915,85,1.639,86,1.841,87,1.915,88,1.639,89,1.915,90,1.639,91,1.77,92,2.38,93,1.578,94,1.915,95,1.639,96,1.915,97,1.639,98,2.302,99,1.639,100,1.915,101,1.915,102,1.639,103,1.841,104,2.38,105,1.639,106,1.77,107,1.639,108,1.915,109,1.639,110,1.915,111,1.578,112,1.915,113,1.639,114,1.915,115,1.639,116,1.915,117,0.011,118,0.011,119,4.525,120,6.473,121,6.473,122,6.473]],["title/modules/AppModule.html",[123,1.072,124,2.84]],["body/modules/AppModule.html",[1,2.273,2,0.205,3,0.205,7,0.148,13,1.522,28,0.015,36,0.537,37,0.766,38,0.216,39,0.008,67,1.214,79,2.514,93,2.273,117,0.011,118,0.011,123,1.632,124,5.915,125,2.214,126,3.508,127,3.508,128,2.904,129,4.042,130,4.042,131,4.042,132,4.042,133,4.993,134,4.993,135,4.993,136,4.993,137,4.053,138,4.993,139,2.738,140,1.127,141,2.323,142,4.654,143,2.867,144,6.027,145,6.027,146,4.712,147,3.338,148,6.027,149,4.654,150,4.042,151,1.645,152,4.042,153,3.639,154,4.042,155,4.042,156,4.654,157,4.042,158,4.042,159,4.654,160,4.654,161,4.654,162,4.654,163,4.712,164,3.639,165,4.654,166,4.654,167,4.654,168,4.654,169,4.654,170,2.443,171,1.645]],["title/classes/AppPreloadingStrategy.html",[39,0.007,172,2.84]],["body/classes/AppPreloadingStrategy.html",[2,0.255,3,0.255,7,0.184,9,1.938,18,0.462,21,1.799,24,0.84,27,1.182,28,0.015,31,0.548,36,0.455,38,0.207,39,0.012,77,1.031,117,0.012,118,0.012,172,4.946,173,4.946,174,5.969,175,5.02,176,6.402,177,6.896,178,3.111,179,7.633,180,3.869,181,5.78,182,0.952,183,1.115,184,2.94,185,3.199,186,2.125,187,5.78,188,5.78,189,2.885]],["title/modules/AppRoutingModule.html",[123,1.072,133,2.636]],["body/modules/AppRoutingModule.html",[0,1.018,1,2.034,2,0.244,3,0.244,7,0.176,13,1.807,28,0.015,36,0.517,37,0.91,38,0.241,39,0.01,44,2.032,46,1.289,93,2.034,117,0.012,118,0.012,123,1.496,128,2.401,133,4.468,143,3.193,157,4.8,158,4.8,172,5.186,173,3.964,174,5.249,176,4.8,178,2.884,185,3.059,190,4.8,191,4.815,192,5.527,193,1.289,194,2.519,195,6.713,196,6.279,197,4.8,198,4.8,199,5.527,200,5.527,201,2.116,202,5.527]],["title/classes/BaseComponent.html",[39,0.007,203,2.079]],["body/classes/BaseComponent.html",[0,1.16,2,0.221,3,0.221,7,0.16,9,1.777,10,2.762,18,0.401,19,0.919,21,1.649,22,2.899,24,1.112,27,1.285,28,0.015,29,1.728,31,0.476,32,1.261,33,1.127,36,0.417,37,0.826,38,0.18,39,0.013,83,1.649,98,2.067,117,0.011,118,0.011,186,1.845,203,3.319,204,4.358,205,1.579,206,7.766,207,3.704,208,6.013,209,4.42,210,4.023,211,4.023,212,4.023,213,4.023,214,5.017,215,5.017,216,5.017,217,5.017,218,4.481,219,2.672,220,4.257,221,5.017,222,5.017,223,3.156,224,4.358,225,4.358]],["title/interfaces/CanComponentDeactivate.html",[226,0.825,227,2.636]],["body/interfaces/CanComponentDeactivate.html",[2,0.257,3,0.257,7,0.185,9,1.635,18,0.465,19,1.006,27,0.998,28,0.015,31,0.552,36,0.487,37,0.958,38,0.248,39,0.01,117,0.012,118,0.012,171,2.056,180,3.634,184,2.761,185,3.22,186,2.139,226,1.442,227,4.919,228,4.549,229,3.622,230,4.549,231,5.686,232,2.352,233,5.053,234,1.762,235,3.622,236,5.053,237,6.013]],["title/injectables/CanDeactivateGuard.html",[232,1.346,235,2.465]],["body/injectables/CanDeactivateGuard.html",[0,0.868,2,0.253,3,0.253,7,0.182,9,1.608,18,0.458,21,1.788,24,0.832,27,1.176,28,0.015,31,0.543,36,0.484,37,0.943,38,0.246,39,0.01,77,1.021,117,0.012,118,0.012,171,2.022,182,0.943,183,1.104,184,2.735,185,3.168,186,2.104,226,1.192,227,5.064,228,5.361,229,4.268,230,4.475,231,5.58,232,2.494,233,4.971,234,1.734,235,4.268,236,5.955,237,5.955,238,5.724]],["title/components/ChangeOfConditionsComponent.html",[0,0.601,81,1.246]],["body/components/ChangeOfConditionsComponent.html",[0,1.009,1,0.865,2,0.189,3,0.126,4,1.05,5,1.05,6,1.05,7,0.091,9,1.203,10,2.048,11,1.05,12,2.844,13,1.998,14,1.781,16,1.781,18,0.489,19,0.622,21,1.116,22,2.653,23,0.998,24,1.119,27,1.283,28,0.015,29,1.603,30,0.88,31,0.631,32,1.076,33,1.646,36,0.493,37,0.47,38,0.102,39,0.005,46,0.998,67,0.745,68,1.574,69,1.159,70,1.512,71,2.097,72,1.05,77,1.145,78,1.05,79,0.898,80,1.05,81,1.795,82,1.709,83,1.859,84,1.05,85,0.898,86,1.009,87,1.05,88,0.898,89,1.05,90,0.898,91,0.97,92,1.574,93,0.865,94,1.05,95,0.898,96,1.05,97,0.898,98,1.865,99,0.898,100,1.05,101,1.05,102,0.898,103,1.009,104,1.574,105,0.898,106,1.454,107,0.898,108,1.05,109,0.898,110,1.05,111,0.865,112,1.05,113,0.898,114,1.05,115,0.898,116,1.05,117,0.008,118,0.008,140,0.691,151,1.009,164,2.232,182,0.939,183,1.1,193,1.551,194,1.399,203,3.673,205,2.093,207,3.758,209,3.382,210,2.842,211,3.682,212,3.551,213,3.682,218,3.008,219,1.574,220,2.507,223,1.425,239,6.436,240,5.794,241,2.48,242,1.781,243,1.86,244,4.28,245,4.28,246,4.28,247,4.28,248,4.28,249,3.579,250,3.896,251,2.048,252,4.601,253,3.682,254,2.373,255,1.965,256,2.847,257,2.373,258,3.157,259,3.096,260,3.341,261,2.855,262,2.855,263,2.855,264,2.855,265,2.855,266,2.437,267,5.135,268,6.111,269,2.855,270,1.944,271,0.641,272,2.855,273,2.855,274,2.855,275,2.855,276,2.855,277,2.855,278,1.777,279,1.777,280,1.777,281,1.777,282,1.777,283,4.46,284,2.855,285,1.777,286,2.048,287,2.48,288,2.855,289,4.46,290,2.048,291,1.499,292,1.672,293,1.672,294,2.232,295,2.48,296,1.58,297,1.499,298,0.898,299,1.9,300,2.332,301,2.048,302,3.008,303,2.48,304,1.9,305,1.05,306,1.093,307,1.777,308,3.718,309,1.803,310,1.777,311,2.48,312,2.855,313,1.9,314,1.672,315,1.672,316,2.036,317,2.507,318,2.48,319,2.855,320,2.855,321,2.855,322,2.855,323,2.855,324,2.855,325,3.07,326,2.855,327,2.855,328,2.855,329,2.048,330,2.855,331,2.855,332,2.855,333,1.58,334,1.58,335,2.369,336,1.938,337,2.232,338,4.28,339,1.093,340,2.855,341,1.139,342,2.232,343,2.48,344,2.855,345,2.136,346,2.136,347,3.718,348,3.718,349,4.28,350,6.842,351,3.718,352,4.954,353,3.07,354,3.07]],["title/classes/Clock.html",[39,0.007,355,3.096]],["body/classes/Clock.html",[2,0.281,3,0.281,7,0.203,28,0.014,38,0.229,39,0.013,117,0.013,118,0.013,355,5.709,356,5.535]],["title/modules/DemandModule.html",[123,1.072,134,2.636]],["body/modules/DemandModule.html",[2,0.262,3,0.262,7,0.189,28,0.015,36,0.492,37,0.977,38,0.251,39,0.01,67,1.548,117,0.012,118,0.012,123,1.897,125,2.823,126,3.677,127,3.115,128,3.238,134,5.3,139,3.182,140,1.437,141,2.962,143,3.332,260,4.664,357,5.155,358,5.155,359,5.935,360,5.935]],["title/injectables/DemandService.html",[232,1.346,260,2.32]],["body/injectables/DemandService.html",[2,0.118,3,0.118,7,0.085,18,0.476,19,0.593,21,1.064,23,0.625,24,1.074,27,1.327,28,0.015,29,1.355,30,1.402,31,0.665,32,1.025,33,1.11,36,0.413,37,0.441,38,0.096,39,0.005,42,1.628,58,2.979,77,1.197,86,2.213,117,0.007,118,0.007,140,1.337,171,0.947,180,2.142,182,1.105,183,1.295,184,1.971,186,0.985,189,1.338,193,1.46,194,2.128,201,1.026,205,2.049,232,1.679,234,1.236,255,2.275,256,2.757,259,3.435,260,2.39,270,3.283,293,1.57,301,1.922,305,0.985,306,1.026,309,2.165,336,2.555,361,2.328,362,3.211,363,3.825,364,5.524,365,4.08,366,1.915,367,5.524,368,4.08,369,5.524,370,5.524,371,5.524,372,4.08,373,4.08,374,7.128,375,2.68,376,4.08,377,4.08,378,3.548,379,7.228,380,2.68,381,4.941,382,2.351,383,2.979,384,3.651,385,2.68,386,2.757,387,4.08,388,2.68,389,2.68,390,7.228,391,2.68,392,6.511,393,2.68,394,2.68,395,4.08,396,3.608,397,2.68,398,3.19,399,4.08,400,2.899,401,2.735,402,5.524,403,4.08,404,2.68,405,3.19,406,2.498,407,4.08,408,4.08,409,2.68,410,4.08,411,2.68,412,4.941,413,2.979,414,4.08,415,2.68,416,2.142,417,2.68,418,4.08,419,1.338,420,1.275,421,1.338,422,1.922,423,5.524,424,4.08,425,2.056,426,2.68,427,4.08,428,2.68,429,4.08,430,2.68,431,2.917,432,2.899,433,2.68,434,2.68,435,5.524,436,4.08,437,2.68,438,1.338,439,2.68,440,2.68,441,2.68,442,2.147,443,2.68,444,4.08,445,2.899,446,2.68,447,4.08,448,2.68,449,4.941,450,2.68]],["title/classes/Edge.html",[39,0.007,406,1.58]],["body/classes/Edge.html",[2,0.077,3,0.164,7,0.056,18,0.232,19,0.54,21,0.756,23,0.407,24,1.031,27,1.261,28,0.015,29,1.243,30,1.393,31,0.678,32,0.934,33,1.34,34,0.696,36,0.317,38,0.221,39,0.008,42,1.156,44,1.065,45,0.792,46,0.676,56,0.83,58,2.733,62,0.792,69,0.784,77,0.517,117,0.005,118,0.005,170,0.916,171,1.313,178,0.696,182,0.791,183,0.559,184,1.726,186,0.641,189,1.855,193,1.654,194,2.356,201,1.422,205,0.912,226,1,234,1.455,242,0.726,243,1.259,255,0.668,257,1.205,259,0.758,266,2.379,270,2.709,271,1.079,300,0.792,305,0.641,306,0.668,309,1.848,336,2.549,339,1.657,341,0.696,345,1.446,346,1.446,362,2.385,363,2.16,366,2.047,378,2.464,382,1.378,383,3.128,384,1.446,386,3.47,396,0.916,400,0.916,406,3.039,413,0.83,416,1.521,419,0.871,420,0.83,421,0.871,425,1.8,431,2.625,432,3.386,438,0.871,442,2.086,445,1.521,451,0.871,452,2.16,453,2.057,454,3.107,455,3.282,456,2.867,457,3.227,458,3.069,459,2.658,460,3.069,461,2.395,462,3.301,463,3.016,464,2.585,465,3.282,466,3.493,467,2.897,468,2.395,469,2.395,470,1.604,471,1.744,472,1.744,473,1.378,474,1.744,475,1.744,476,1.744,477,2.867,478,1.521,479,1.804,480,1.744,481,1.744,482,1.604,483,1.744,484,2.057,485,1.604,486,1.604,487,1.205,488,1.744,489,1.744,490,1.744,491,1.744,492,1.744,493,1.744,494,1.744,495,1.951,496,2.395,497,1.604,498,1.744,499,1.446,500,2.284,501,1.446,502,1.744,503,1.744,504,2.395,505,1.604,506,1.006,507,0.916,508,0.966,509,0.966,510,2.353,511,2.719,512,2.25,513,0.696,514,2.585,515,1.604,516,0.966,517,0.966,518,1.604,519,0.966,520,0.966,521,0.916,522,0.966,523,0.916,524,0.966,525,2.16,526,0.966,527,0.966,528,0.966,529,0.916,530,0.966,531,0.966,532,0.966,533,0.916,534,0.916,535,2.057,536,1.604,537,0.871,538,0.966,539,0.966,540,0.966,541,0.966,542,0.966,543,2.395,544,0.966,545,0.966,546,0.966,547,0.916,548,0.966,549,0.966,550,2.057,551,2.057,552,2.057,553,2.057,554,1.604,555,1.604,556,2.395,557,0.966,558,0.966,559,1.604,560,1.604,561,0.966,562,0.966,563,0.966,564,2.397,565,0.916,566,0.871,567,0.966,568,0.966,569,1.604,570,0.966,571,0.966,572,1.546,573,0.966,574,1.604,575,0.966,576,0.966,577,0.966,578,1.604,579,0.966,580,1.604,581,0.966,582,0.966,583,0.966,584,0.916,585,1.604,586,1.604,587,0.966,588,1.604,589,0.966,590,0.966,591,0.966,592,0.966,593,0.966,594,0.966,595,0.966,596,0.966,597,0.966,598,0.966,599,0.966,600,0.966,601,0.966,602,0.966,603,0.966,604,0.966,605,0.966,606,1.604,607,0.966,608,0.966,609,0.966,610,1.446,611,0.966,612,2.057,613,2.057,614,0.966,615,2.057,616,0.966,617,0.966,618,0.966,619,1.604,620,0.966,621,0.966,622,0.966,623,1.521,624,0.966,625,0.966,626,1.951,627,0.966,628,0.871,629,1.604,630,0.966,631,0.871,632,1.604,633,0.916,634,0.966,635,0.966,636,0.966,637,0.916,638,1.604,639,0.966,640,1.604,641,1.604,642,0.966,643,0.966,644,0.966,645,2.057,646,0.966,647,0.966,648,0.916,649,0.966,650,0.916,651,0.966,652,0.966,653,0.966,654,0.966,655,0.966,656,0.966,657,0.966,658,0.83,659,1.855,660,0.966,661,0.871,662,0.966,663,0.966,664,0.966,665,0.966,666,0.966,667,0.966,668,0.966,669,0.966,670,0.916,671,0.966,672,0.966,673,0.966,674,0.966,675,0.916,676,0.916,677,0.792,678,0.966,679,1.604,680,0.966,681,0.916,682,0.966,683,0.916,684,0.966,685,0.966,686,0.966,687,0.966,688,0.966,689,0.966,690,0.966,691,0.966,692,0.966,693,0.792,694,0.966,695,0.966]],["title/classes/EnumValues.html",[39,0.007,304,2.636]],["body/classes/EnumValues.html",[2,0.25,3,0.25,7,0.181,18,0.453,21,1.778,24,0.991,27,1.3,28,0.015,30,0.972,31,0.719,38,0.245,39,0.012,77,1.216,117,0.012,118,0.012,182,1.204,183,1.315,271,1.743,304,4.537,366,1.713,696,4.432,697,6.844,698,6.816,699,6.816,700,6.816,701,5.669,702,6.816,703,6.816,704,5.669,705,7.584,706,4.923,707,5.669,708,5.669,709,5.669,710,5.669]],["title/components/EstimateOfDemandComponent.html",[0,0.601,85,1.246]],["body/components/EstimateOfDemandComponent.html",[0,0.972,1,0.775,2,0.174,3,0.113,4,0.941,5,0.941,6,0.941,7,0.082,9,1.107,10,1.916,11,0.941,12,2.798,13,1.904,14,1.639,16,1.639,18,0.431,19,0.573,21,1.028,22,2.555,23,0.919,24,1.106,27,1.256,28,0.015,29,1.664,30,1.279,31,0.643,32,0.643,33,0.885,36,0.465,37,0.422,38,0.092,39,0.005,46,0.597,67,0.668,68,1.448,69,1.067,70,1.392,71,1.983,72,0.941,77,1.143,78,0.941,79,0.805,80,0.941,81,0.805,82,1.668,83,1.253,84,0.941,85,1.697,86,2.264,87,0.941,88,0.805,89,0.941,90,0.805,91,0.87,92,1.448,93,0.775,94,0.941,95,0.805,96,0.941,97,0.805,98,1.763,99,0.805,100,0.941,101,0.941,102,0.805,103,0.904,104,1.448,105,0.805,106,1.632,107,0.805,108,0.941,109,0.805,110,0.941,111,0.775,112,0.941,113,0.805,114,0.941,115,0.805,116,0.941,117,0.007,118,0.007,140,0.62,151,0.904,164,2.001,182,0.959,183,1.123,193,1.358,194,1.763,203,3.561,207,3.602,209,3.223,210,2.658,211,3.546,212,3.546,213,3.546,218,2.813,219,1.448,220,2.307,223,1.278,242,1.639,249,3.411,250,3.602,251,1.836,252,4.411,253,3.546,254,2.244,255,2.064,256,2.692,259,1.711,266,2.638,270,2.45,278,1.594,279,1.594,280,1.594,281,1.594,282,1.594,285,1.594,286,1.836,287,2.223,289,5.593,290,2.825,291,1.344,292,1.499,293,1.499,296,1.417,297,1.344,298,1.24,299,1.704,301,1.836,304,1.704,305,0.941,306,0.98,307,1.594,308,4.684,309,1.516,310,1.594,313,1.704,314,1.499,315,1.499,316,2.566,317,1.499,318,2.223,329,1.836,333,1.417,334,1.417,335,1.417,336,2.247,337,5.009,339,1.508,341,1.021,342,2.001,345,1.966,346,1.966,347,3.422,348,3.422,353,2.825,354,2.825,362,2.086,401,2.985,405,4.553,442,1.112,454,2.932,457,3.561,463,3.881,473,1.218,506,1.79,514,3.457,623,2.831,711,6.36,712,5.726,713,2.223,714,3.94,715,3.94,716,3.94,717,3.94,718,3.94,719,3.94,720,2.56,721,2.56,722,2.56,723,3.94,724,2.56,725,3.94,726,2.56,727,3.94,728,2.56,729,2.56,730,2.56,731,2.56,732,3.94,733,2.56,734,2.56,735,2.56,736,2.56,737,1.401,738,2.56,739,2.56,740,2.56,741,3.94,742,3.94,743,2.223,744,2.56,745,2.56,746,2.181,747,2.223,748,3.94,749,3.94,750,2.56,751,1.836,752,3.94,753,2.56,754,2.56,755,4.802,756,2.56,757,3.94,758,2.56,759,2.223,760,4.171,761,3.94,762,3.94,763,4.802,764,2.56,765,2.56,766,2.56,767,2.56,768,2.56,769,2.56,770,2.56,771,2.56,772,2.56,773,2.56,774,2.56,775,2.56,776,3.94]],["title/components/FooterComponent.html",[0,0.601,88,1.246]],["body/components/FooterComponent.html",[0,1.122,1,1.456,2,0.271,3,0.212,4,1.767,5,1.767,6,1.767,7,0.153,9,1.729,10,2.707,11,1.767,12,3.019,13,2.514,14,2.56,16,2.56,18,0.384,19,0.894,20,6.571,21,1.605,22,2.854,24,0.894,27,0.824,28,0.015,29,1.331,30,1.164,31,0.456,32,1.208,33,1.08,34,2.454,35,5.344,36,0.317,37,0.791,38,0.172,39,0.009,49,4.174,50,4.174,67,1.254,68,2.262,69,1.666,70,2.174,71,2.63,72,1.767,73,3.758,74,3.758,75,3.758,77,1.098,78,1.767,79,1.512,80,1.767,81,1.512,82,1.794,83,1.254,84,1.767,85,1.512,86,1.698,87,1.767,88,2.251,89,1.767,90,1.512,91,1.633,92,2.262,93,1.456,94,1.767,95,1.512,96,1.767,97,1.512,98,2.218,99,1.512,100,1.767,101,1.767,102,1.512,103,1.698,104,2.262,105,1.512,106,1.633,107,1.512,108,1.767,109,1.512,110,1.767,111,1.456,112,1.767,113,1.512,114,1.767,115,1.512,116,1.767,117,0.011,118,0.011,317,3.604,777,4.174,778,6.153,779,6.153,780,6.153,781,4.806,782,4.806,783,6.153,784,6.153]],["title/classes/GoOn.html",[39,0.007,785,1.884]],["body/classes/GoOn.html",[2,0.198,3,0.198,7,0.143,9,2.127,18,0.525,19,0.856,23,1.047,24,0.955,28,0.015,30,1.126,31,0.77,32,1.128,33,1.008,36,0.388,38,0.276,39,0.013,77,0.801,82,1.791,83,1.535,117,0.01,118,0.01,140,1.688,151,1.586,182,0.739,183,0.866,219,2.855,234,1.36,271,1.761,298,2.416,366,1.97,479,4.34,506,1.215,513,1.791,737,2.034,785,3.316,786,2.356,787,4.591,788,4.781,789,2.795,790,5.886,791,4.489,792,3.258,793,2.356,794,2.356,795,3.278,796,3.278,797,3.278,798,3.278,799,1.95,800,2.629,801,2.485,802,4.351,803,2.485,804,2.485,805,2.485,806,2.356,807,2.485,808,2.485]],["title/components/GoogleMapComponent.html",[0,0.601,90,1.246]],["body/components/GoogleMapComponent.html",[0,0.982,1,0.996,2,0.21,3,0.145,4,1.746,5,1.209,6,1.209,7,0.105,9,1.334,10,2.223,11,1.209,12,2.898,13,2.117,18,0.263,19,0.69,21,1.239,22,2.435,23,0.767,24,1.115,27,0.956,28,0.015,29,1.46,30,1.244,31,0.741,32,1.79,36,0.313,37,0.541,38,0.118,39,0.006,67,0.857,68,1.746,69,1.509,70,1.678,71,2.244,72,1.209,77,1.155,78,1.209,79,1.034,80,1.209,81,1.034,82,1.623,83,1.592,84,1.209,85,1.034,86,1.162,87,1.209,88,1.034,89,1.209,90,1.921,91,1.894,92,1.746,93,0.996,94,1.209,95,1.034,96,1.209,97,1.034,98,2.117,99,1.034,100,1.209,101,1.209,102,1.034,103,1.162,104,1.746,105,1.034,106,1.117,107,1.034,108,1.209,109,1.034,110,1.209,111,0.996,112,1.209,113,1.034,114,1.209,115,1.034,116,1.209,117,0.008,118,0.008,139,3.484,182,0.918,183,1.075,193,0.767,234,1.85,249,4.417,271,1.371,309,1.716,316,2.259,337,3.713,366,1.193,382,2.259,413,2.259,425,1.368,473,2.259,479,2.956,529,1.726,626,2.492,737,2.349,802,1.926,809,6.708,810,2.855,811,5.574,812,4.749,813,4.749,814,4.587,815,5.302,816,5.302,817,5.302,818,5.861,819,5.302,820,5.302,821,4.491,822,3.288,823,4.201,824,5.44,825,4.749,826,4.774,827,3.406,828,3.288,829,6.105,830,3.288,831,4.749,832,4.749,833,4.124,834,3.288,835,4.749,836,4.749,837,3.288,838,4.063,839,4.749,840,4.124,841,3.288,842,5.861,843,6.105,844,3.288,845,3.288,846,4.124,847,3.713,848,3.288,849,4.749,850,4.774,851,3.288,852,4.124,853,4.749,854,3.288,855,3.288,856,4.749,857,3.406,858,3.288,859,4.749,860,2.855,861,3.288,862,2.855,863,3.288,864,3.288,865,3.288,866,3.288,867,3.288,868,3.288,869,3.288,870,3.288,871,2.855,872,2.855,873,2.855,874,2.855,875,2.855,876,2.855,877,2.855,878,2.855,879,2.855]],["title/classes/Heap.html",[39,0.007,510,1.799]],["body/classes/Heap.html",[2,0.199,3,0.199,7,0.144,18,0.472,19,0.859,21,1.54,24,1.054,27,1.299,28,0.015,29,1.511,30,1.243,31,0.624,32,1.134,33,1.014,36,0.298,38,0.212,39,0.01,46,1.377,77,1.054,117,0.01,118,0.01,182,0.973,183,1.139,193,1.052,194,2.722,205,2.072,226,0.94,309,1.85,339,1.727,366,1.986,398,3.528,406,2.786,431,2.457,454,3.016,464,2.948,510,3.564,512,3.34,566,2.948,572,1.877,610,2.948,631,3.486,658,3.323,659,3.486,661,3.619,880,5.816,881,3.528,882,5.129,883,6.584,884,5.906,885,5.906,886,4.512,887,4.512,888,4.512,889,5.129,890,4.512,891,4.618,892,5.129,893,4.512,894,3.919,895,5.129,896,3.919,897,3.919,898,3.919,899,3.919,900,3.919,901,3.919,902,3.919,903,3.919]],["title/components/HomeComponent.html",[0,0.601,93,1.2]],["body/components/HomeComponent.html",[0,1.059,1,1.222,2,0.242,3,0.178,4,1.483,5,1.483,6,1.483,7,0.129,9,1.54,10,2.483,11,1.483,12,2.967,13,2.409,14,2.28,16,2.28,18,0.323,19,0.797,21,1.429,22,2.664,23,0.941,24,0.971,27,1.145,28,0.015,29,1.445,31,0.383,32,1.014,33,0.906,36,0.411,37,0.664,38,0.145,39,0.007,40,3.931,41,4.285,42,2.664,43,3.931,44,2.455,45,2.489,46,1.558,47,4.285,48,2.877,67,1.052,68,2.015,69,1.685,70,1.936,71,2.455,72,1.483,77,1.111,78,1.483,79,1.269,80,1.483,81,1.269,82,1.719,83,1.052,84,1.483,85,1.269,86,1.425,87,1.483,88,1.269,89,1.483,90,1.269,91,1.37,92,2.015,93,2.023,94,1.483,95,1.269,96,1.483,97,1.269,98,2.035,99,1.269,100,1.483,101,1.483,102,1.269,103,1.425,104,2.015,105,1.269,106,1.37,107,1.269,108,1.483,109,1.269,110,1.483,111,1.222,112,1.483,113,1.269,114,1.483,115,1.269,116,1.483,117,0.01,118,0.01,171,1.425,182,0.664,183,0.778,193,1.629,196,4.76,201,2.098,271,1.231,336,2.115,339,2.673,422,2.893,759,3.503,760,4.76,824,5.632,850,3.154,852,4.76,904,3.503,905,5.406,906,5.481,907,5.481,908,5.8,909,5.8,910,3.503,911,5.481,912,4.033,913,4.033,914,5.8,915,3.503,916,4.285,917,4.033,918,4.033,919,7.203,920,4.033,921,4.033,922,4.033,923,6.225,924,4.033,925,5.481,926,4.033,927,5.481,928,5.481,929,4.033,930,4.033,931,4.76,932,4.033,933,4.76,934,5.481,935,5.481,936,4.76,937,4.033,938,4.033,939,4.033,940,3.503,941,4.033,942,5.481,943,4.033,944,4.285]],["title/components/InfoDialogComponent.html",[0,0.601,95,1.246]],["body/components/InfoDialogComponent.html",[0,1.116,1,1.435,2,0.338,3,0.209,4,2.24,5,1.741,6,1.741,7,0.151,11,1.741,12,3.014,13,2.407,18,0.379,19,0.886,23,1.421,24,0.98,28,0.015,31,0.639,36,0.402,37,0.78,38,0.17,39,0.008,46,1.83,67,1.235,68,2.24,69,1.65,70,2.153,71,2.616,72,1.741,77,1.202,78,1.741,79,1.49,80,1.741,81,1.49,82,1.788,83,1.235,84,1.741,85,1.49,86,1.673,87,1.741,88,1.49,89,1.741,90,1.49,91,1.609,92,2.24,93,1.435,94,1.741,95,2.239,96,1.741,97,1.49,98,2.203,99,1.49,100,1.741,101,1.741,102,1.49,103,1.673,104,2.24,105,1.49,106,1.609,107,1.49,108,1.741,109,1.49,110,1.741,111,1.435,112,1.741,113,1.49,114,1.741,115,1.49,116,1.741,117,0.011,118,0.011,182,0.78,183,0.914,232,2.071,366,1.894,821,3.152,945,6.18,946,4.113,947,5.293,948,5.269,949,6.394,950,4.735,951,7.536,952,4.735,953,3.703,954,4.735,955,4.735,956,4.735,957,2.774,958,4.735]],["title/interfaces/LinkFlow.html",[226,0.825,378,1.884]],["body/interfaces/LinkFlow.html",[2,0.088,3,0.18,7,0.063,18,0.258,19,0.592,24,0.289,27,1.266,28,0.015,29,1.193,30,1.381,31,0.444,33,1.359,34,0.793,36,0.34,38,0.231,39,0.008,42,0.793,44,0.731,45,0.903,46,0.752,56,0.945,58,2.449,62,0.903,69,0.873,117,0.006,118,0.006,170,1.043,171,1.438,178,0.793,182,0.67,184,1.868,186,0.731,189,2.031,193,1.698,194,2.415,201,1.558,226,1.148,234,1.56,242,0.827,243,0.863,255,0.761,257,0.827,259,0.863,266,2.494,270,2.841,271,1.157,300,0.903,305,0.731,306,0.761,309,1.916,336,2.588,339,1.792,341,0.793,345,1.61,346,1.61,362,2.523,363,2.337,366,2.001,378,2.449,382,1.534,383,2.763,384,1.61,386,3.497,396,1.043,400,1.043,406,3.05,413,0.945,416,1.693,419,0.992,420,0.945,421,0.992,425,1.693,431,2.735,432,3.518,438,0.992,442,2.237,445,1.693,451,0.992,452,2.031,453,1.785,454,3.092,455,3.02,456,2.592,457,3.049,458,2.752,459,1.785,460,2.763,461,1.1,462,2.85,463,2.702,464,1.61,465,3.02,466,3.215,468,1.1,469,1.1,470,1.1,473,0.945,477,2.253,478,1.043,482,1.1,484,1.785,485,1.1,486,1.1,487,0.827,495,1.693,496,2.253,497,1.1,499,0.992,500,1.936,501,0.992,504,3.215,505,1.1,506,0.873,507,1.043,508,1.1,509,1.1,510,2.505,511,2.894,512,2.395,513,0.793,514,2.752,515,1.785,516,1.1,517,1.1,518,2.253,519,1.785,520,1.1,521,1.043,522,1.1,523,1.043,524,1.1,525,2.337,526,1.1,527,1.1,528,1.1,529,1.043,530,1.1,531,1.1,532,1.1,533,1.043,534,1.043,535,2.253,536,1.785,537,0.992,538,1.1,539,1.1,540,1.1,541,1.1,542,1.1,543,2.592,544,1.1,545,1.1,546,1.1,547,1.043,548,1.1,549,1.1,550,2.253,551,2.253,552,2.253,553,2.253,554,1.785,555,1.785,556,2.592,557,1.1,558,1.1,559,1.785,560,1.785,561,1.1,562,1.1,563,1.1,564,2.57,565,1.043,566,0.992,567,1.1,568,1.1,569,1.785,570,1.1,571,1.1,572,1.693,573,1.1,574,1.785,575,1.1,576,1.1,577,1.1,578,1.785,579,1.1,580,1.785,581,1.1,582,1.1,583,1.1,584,1.043,585,1.785,586,1.785,587,1.1,588,1.785,589,1.1,590,1.1,591,1.1,592,1.1,593,1.1,594,1.1,595,1.1,596,1.1,597,1.1,598,1.1,599,1.1,600,1.1,601,1.1,602,1.1,603,1.1,604,1.1,605,1.1,606,1.785,607,1.1,608,1.1,609,1.1,610,1.61,611,1.1,612,2.253,613,2.253,614,1.1,615,2.253,616,1.1,617,1.1,618,1.1,619,1.785,620,1.1,621,1.1,622,1.1,623,1.693,624,1.1,625,1.1,626,2.136,627,1.1,628,0.992,629,1.785,630,1.1,631,0.992,632,1.785,633,1.043,634,1.1,635,1.1,636,1.1,637,1.043,638,1.785,639,1.1,640,1.785,641,1.785,642,1.1,643,1.1,644,1.1,645,2.253,646,1.1,647,1.1,648,1.043,649,1.1,650,1.043,651,1.1,652,1.1,653,1.1,654,1.1,655,1.1,656,1.1,657,1.1,658,0.945,659,2.031,660,1.1,661,0.992,662,1.1,663,1.1,664,1.1,665,1.1,666,1.1,667,1.1,668,1.1,669,1.1,670,1.043,671,1.1,672,1.1,673,1.1,674,1.1,675,1.043,676,1.043,677,0.903,678,1.1,679,1.785,680,1.1,681,1.043,682,1.1,683,1.043,684,1.1,685,1.1,686,1.1,687,1.1,688,1.1,689,1.1,690,1.1,691,1.1,692,1.1,693,0.903,694,1.1,695,1.1]],["title/modules/LocationModule.html",[123,1.072,135,2.636]],["body/modules/LocationModule.html",[2,0.262,3,0.262,7,0.189,28,0.015,36,0.492,37,0.977,38,0.251,39,0.01,67,1.548,117,0.012,118,0.012,123,1.897,125,2.823,126,3.677,127,3.115,128,3.238,135,5.3,139,3.182,140,1.437,141,2.962,143,3.332,959,5.155,960,5.155,961,4.408,962,5.935,963,5.935]],["title/injectables/LocationService.html",[232,1.346,961,2.192]],["body/injectables/LocationService.html",[2,0.178,3,0.178,7,0.128,18,0.322,19,0.795,21,1.74,23,1.45,24,1.089,27,1.317,28,0.015,29,1.443,31,0.633,34,1.605,36,0.41,37,0.663,38,0.144,39,0.007,44,2.012,77,0.976,91,2.113,103,1.933,117,0.011,118,0.01,140,1.615,182,0.901,183,1.056,184,3.185,186,1.479,205,1.722,232,2.113,271,1.397,309,2.023,317,3.908,366,1.998,401,2.227,431,1.674,506,1.089,533,2.872,534,2.872,628,2.731,737,1.814,814,3.407,827,5.282,961,3.029,964,3.495,965,4.753,966,4.753,967,4.753,968,4.753,969,4.154,970,5.472,971,6.787,972,6.396,973,7.199,974,5.472,975,6.061,976,6.672,977,5.472,978,5.472,979,5.472,980,4.024,981,6.672,982,6.252,983,5.629,984,5.472,985,4.024,986,5.472,987,5.795,988,4.024,989,4.024,990,5.472,991,4.024,992,4.024,993,6.672,994,4.024,995,3.147,996,4.024,997,4.024,998,4.024,999,6.218,1000,5.472,1001,5.472,1002,4.024,1003,3.495,1004,5.472,1005,3.495,1006,4.024,1007,4.024,1008,5.472,1009,4.024,1010,4.024,1011,4.024,1012,3.495,1013,4.024]],["title/interfaces/Map.html",[226,0.825,737,1.155]],["body/interfaces/Map.html",[2,0.259,3,0.259,7,0.187,18,0.47,19,1.012,28,0.015,31,0.557,38,0.266,46,1.886,117,0.012,118,0.012,193,1.37,205,1.849,223,2.933,226,1.546,298,2.415,677,3.371,737,2.318,838,3.911,1014,4.214]],["title/classes/MapChanged.html",[39,0.007,796,1.977]],["body/classes/MapChanged.html",[2,0.198,3,0.198,7,0.143,9,2.127,18,0.525,19,0.856,23,1.047,24,0.955,28,0.015,30,1.126,31,0.77,32,1.128,33,1.008,36,0.388,38,0.276,39,0.013,77,0.801,82,1.791,83,1.535,117,0.01,118,0.01,140,1.688,151,1.586,182,0.739,183,0.866,219,2.855,234,1.36,271,1.761,298,2.416,366,1.97,479,4.34,506,1.215,513,1.791,737,2.034,785,3.124,786,2.356,787,4.591,788,4.781,789,2.795,792,2.485,793,2.356,794,2.356,795,3.278,796,3.48,797,3.278,798,3.278,799,1.95,800,2.629,801,2.485,802,4.351,803,3.258,804,2.485,805,2.485,806,2.356,807,2.485,808,2.485,1015,5.886,1016,4.489]],["title/components/MapComponent.html",[0,0.601,97,1.246]],["body/components/MapComponent.html",[0,1.032,1,0.928,2,0.199,3,0.135,4,1.126,5,1.126,6,1.126,7,0.098,9,1.267,10,2.135,11,1.126,12,2.872,13,2.057,14,1.876,16,1.876,18,0.245,19,0.656,21,1.176,22,2.715,23,1.052,24,1.14,27,1.222,28,0.015,29,1.625,30,1.243,31,0.697,32,0.77,33,0.688,36,0.485,37,0.504,38,0.11,39,0.005,67,0.799,68,1.658,69,1.221,70,1.593,71,2.17,72,1.126,77,0.955,78,1.126,79,0.964,80,1.126,81,0.964,82,1.691,83,1.176,84,1.126,85,0.964,86,1.082,87,1.126,88,0.964,89,1.126,90,0.964,91,1.041,92,1.658,93,0.928,94,1.126,95,0.964,96,1.126,97,1.858,98,2.152,99,0.964,100,1.126,101,1.126,102,0.964,103,1.082,104,1.658,105,0.964,106,1.532,107,0.964,108,1.126,109,0.964,110,1.126,111,0.928,112,1.126,113,0.964,114,1.126,115,0.964,116,1.126,117,0.008,118,0.008,139,2.859,151,1.082,171,1.082,182,0.504,183,0.87,193,1.248,194,1.474,201,1.172,203,3.742,207,3.856,209,3.483,210,2.963,211,3.767,212,3.767,213,3.767,218,3.135,219,1.658,220,2.641,223,1.529,234,1.994,242,1.876,253,3.643,254,2.456,255,2.049,256,2.947,266,2.355,271,1.202,278,1.907,279,1.907,280,1.907,281,1.907,282,1.907,285,1.907,293,1.794,296,1.695,297,1.608,298,1.419,299,2.038,300,2.048,301,2.197,305,1.126,306,1.172,307,1.907,309,1.659,310,1.907,314,1.794,315,1.794,316,1.457,329,2.197,333,2.496,334,1.695,335,3.767,336,1.532,339,1.172,341,2.715,362,1.959,442,1.959,454,1.274,637,1.608,693,1.391,737,2.08,814,4.098,815,5.128,816,5.128,817,5.128,818,5.128,819,5.128,820,5.128,821,3.929,823,3.676,826,3.526,827,3.839,838,3.001,840,4.649,842,2.66,847,4.185,860,2.66,871,3.917,872,2.66,873,2.66,874,2.66,875,2.66,876,2.66,877,2.66,878,2.66,879,3.917,908,2.66,1017,2.66,1018,3.526,1019,3.526,1020,4.509,1021,4.509,1022,2.395,1023,4.509,1024,3.063,1025,3.063,1026,3.063,1027,3.063,1028,3.063,1029,3.063,1030,3.063,1031,3.063,1032,3.063,1033,3.063,1034,3.063,1035,3.063,1036,2.395,1037,2.395,1038,3.526,1039,3.063,1040,3.063,1041,2.66,1042,3.234,1043,3.063,1044,3.063,1045,3.063,1046,4.509,1047,2.395,1048,2.66,1049,3.063,1050,3.063,1051,4.509,1052,3.063,1053,3.063,1054,3.063,1055,3.063,1056,3.063,1057,3.063,1058,2.66,1059,3.063,1060,4.509,1061,3.063,1062,3.063,1063,3.063,1064,4.509,1065,3.063]],["title/modules/MaterialModule.html",[123,1.072,1066,2.32]],["body/modules/MaterialModule.html",[2,0.249,3,0.249,7,0.18,28,0.015,36,0.5,37,0.931,38,0.244,39,0.01,60,4.053,117,0.012,118,0.012,123,1.53,143,3.236,146,4.418,147,4.053,193,1.318,957,3.31,1066,4.541,1067,4.418,1068,5.909,1069,5.909,1070,5.909,1071,6.803,1072,5.909,1073,5.909,1074,5.909,1075,5.909,1076,5.909,1077,5.909,1078,5.909,1079,5.909,1080,5.909,1081,5.909,1082,5.909,1083,5.909,1084,7.3,1085,5.65,1086,6.803,1087,5.65,1088,5.65,1089,5.65]],["title/interfaces/Member.html",[226,0.825,525,1.977]],["body/interfaces/Member.html",[2,0.087,3,0.179,7,0.063,18,0.257,19,0.59,24,0.288,27,1.266,28,0.015,29,1.191,30,1.378,31,0.573,33,1.155,34,0.79,36,0.339,38,0.23,39,0.008,42,0.79,44,0.729,45,0.9,46,0.75,56,0.943,58,2.446,62,0.9,69,0.871,117,0.006,118,0.006,170,1.04,171,1.435,178,0.79,182,0.669,184,1.865,186,0.729,189,2.027,193,1.697,194,2.413,201,1.555,205,0.624,226,1.147,234,1.557,242,0.825,243,0.861,255,0.759,257,0.825,259,0.861,266,2.492,270,2.838,271,1.403,300,0.9,305,0.729,306,0.759,309,1.914,336,2.587,339,1.79,341,0.79,345,1.606,346,1.606,362,2.52,363,2.333,366,2.001,378,1.932,382,1.531,383,2.76,384,1.606,386,3.494,396,1.04,400,1.04,406,3.048,413,0.943,416,1.689,419,0.989,420,0.943,421,0.989,425,1.69,431,2.733,432,3.516,438,0.989,442,2.233,445,1.689,451,0.989,452,2.027,453,1.781,454,3.091,455,3.017,456,2.248,457,3.045,458,2.748,459,1.781,460,2.76,461,1.097,462,2.846,463,2.698,464,1.606,465,3.017,466,3.211,468,1.097,469,1.097,470,1.097,473,0.943,477,2.248,478,1.04,482,1.097,484,1.781,485,1.097,486,1.097,487,0.825,495,1.689,496,2.248,497,1.097,499,0.989,500,1.932,501,0.989,504,2.248,505,1.097,506,0.871,507,1.04,508,1.097,509,1.097,510,2.501,511,2.89,512,2.392,513,0.79,514,2.748,515,1.781,516,1.097,517,1.097,518,1.781,519,1.097,520,1.097,521,1.04,522,1.097,523,1.04,524,1.781,525,2.748,526,2.588,527,2.588,528,1.097,529,1.04,530,1.097,531,1.097,532,1.097,533,1.04,534,1.04,535,2.248,536,1.781,537,0.989,538,1.097,539,1.097,540,1.097,541,1.097,542,1.097,543,2.588,544,1.097,545,1.097,546,1.097,547,1.04,548,1.097,549,1.097,550,2.248,551,2.248,552,2.248,553,2.248,554,1.781,555,1.781,556,2.588,557,1.097,558,1.097,559,1.781,560,1.781,561,1.097,562,1.097,563,1.097,564,2.566,565,1.04,566,0.989,567,1.097,568,1.097,569,1.781,570,1.097,571,1.097,572,1.69,573,1.097,574,1.781,575,1.097,576,1.097,577,1.097,578,1.781,579,1.097,580,1.781,581,1.097,582,1.097,583,1.097,584,1.04,585,1.781,586,1.781,587,1.097,588,1.781,589,1.097,590,1.097,591,1.097,592,1.097,593,1.097,594,1.097,595,1.097,596,1.097,597,1.097,598,1.097,599,1.097,600,1.097,601,1.097,602,1.097,603,1.097,604,1.097,605,1.097,606,1.781,607,1.097,608,1.097,609,1.097,610,1.606,611,1.097,612,2.248,613,2.248,614,1.097,615,2.248,616,1.097,617,1.097,618,1.097,619,1.781,620,1.097,621,1.097,622,1.097,623,1.689,624,1.097,625,1.097,626,2.132,627,1.097,628,0.989,629,1.781,630,1.097,631,0.989,632,1.781,633,1.04,634,1.097,635,1.097,636,1.097,637,1.04,638,1.781,639,1.097,640,1.781,641,1.781,642,1.097,643,1.097,644,1.097,645,2.248,646,1.097,647,1.097,648,1.04,649,1.097,650,1.04,651,1.097,652,1.097,653,1.097,654,1.097,655,1.097,656,1.097,657,1.097,658,0.943,659,2.027,660,1.097,661,0.989,662,1.097,663,1.097,664,1.097,665,1.097,666,1.097,667,1.097,668,1.097,669,1.097,670,1.04,671,1.097,672,1.097,673,1.097,674,1.097,675,1.04,676,1.04,677,0.9,678,1.097,679,1.781,680,1.097,681,1.04,682,1.097,683,1.04,684,1.097,685,1.097,686,1.097,687,1.097,688,1.097,689,1.097,690,1.097,691,1.097,692,1.097,693,0.9,694,1.097,695,1.097]],["title/components/MessageArchivedComponent.html",[0,0.601,99,1.246]],["body/components/MessageArchivedComponent.html",[0,1.129,1,1.488,2,0.275,3,0.217,4,2.294,5,1.806,6,1.806,7,0.157,11,1.806,12,3.024,13,2.434,18,0.393,19,0.907,23,1.146,24,0.907,28,0.015,31,0.592,36,0.411,37,0.809,38,0.176,39,0.009,46,1.825,67,1.281,68,2.294,69,1.689,70,2.205,71,2.652,72,1.806,77,1.223,78,1.806,79,1.546,80,1.806,81,1.546,82,1.803,83,1.281,84,1.806,85,1.546,86,1.736,87,1.806,88,1.546,89,1.806,90,1.546,91,1.669,92,2.294,93,1.488,94,1.806,95,1.546,96,1.806,97,1.546,98,2.241,99,2.27,100,2.521,101,1.806,102,1.546,103,1.736,104,2.294,105,1.546,106,1.669,107,1.546,108,1.806,109,1.546,110,1.806,111,1.488,112,1.806,113,1.546,114,1.806,115,1.546,116,1.806,117,0.011,118,0.011,182,0.809,183,0.948,232,2.12,366,1.723,821,3.27,953,3.841,957,2.878,1090,5.955,1091,4.267,1092,6.239,1093,4.913,1094,4.913,1095,4.913,1096,4.913,1097,4.913]],["title/modules/NetworkModule.html",[123,1.072,136,2.636]],["body/modules/NetworkModule.html",[2,0.256,3,0.256,7,0.185,28,0.015,36,0.515,37,0.955,38,0.248,39,0.01,67,1.512,117,0.012,118,0.012,123,1.871,125,2.758,126,3.627,127,3.044,128,3.207,136,5.37,139,3.139,140,1.404,141,2.894,143,3.287,256,3.954,1098,5.036,1099,5.036,1100,5.036,1101,5.272,1102,5.799,1103,5.799,1104,5.799]],["title/classes/Node.html",[39,0.007,454,1.648]],["body/classes/Node.html",[2,0.082,3,0.171,7,0.059,18,0.244,19,0.564,23,0.432,24,0.955,27,1.25,28,0.015,29,1.154,30,1.385,31,0.644,32,1.247,33,1.41,34,0.739,36,0.327,38,0.225,39,0.009,42,0.739,44,0.681,45,1.384,46,0.71,56,0.882,58,2.36,62,0.842,69,0.825,77,0.331,117,0.005,118,0.005,170,0.973,171,1.37,178,1.215,182,0.74,183,0.357,184,1.791,186,0.681,189,1.935,193,1.675,194,2.4,201,1.484,205,0.583,226,1.034,234,1.503,242,0.771,243,0.805,255,0.709,257,0.771,259,0.805,266,2.433,270,2.77,271,1.115,300,0.842,305,0.681,306,0.709,309,1.88,336,2.572,339,1.719,341,0.739,345,1.52,346,1.52,362,2.449,363,2.242,366,2.031,378,1.845,382,1.449,383,2.682,384,1.52,386,3.438,396,0.973,400,0.973,406,3.063,413,0.882,416,1.599,419,0.925,420,0.882,421,0.925,425,1.613,431,2.677,432,3.448,438,0.925,442,2.156,445,1.599,451,0.925,452,1.935,453,1.686,454,3.091,455,2.939,456,2.146,457,2.959,458,2.663,459,2.747,460,2.682,461,1.026,462,2.747,463,2.604,464,1.52,465,3.338,466,3.121,468,1.026,469,1.026,470,1.026,473,0.882,477,2.146,478,0.973,479,1.896,482,1.026,484,1.686,485,1.026,486,1.026,487,0.771,495,1.599,496,2.146,497,1.026,499,0.925,500,1.845,501,0.925,504,2.146,505,1.026,506,0.825,507,0.973,508,1.026,509,1.026,510,2.423,511,2.959,512,2.449,513,0.739,514,2.663,515,1.686,516,1.026,517,1.026,518,1.686,519,1.026,520,1.026,521,0.973,522,1.026,523,0.973,524,1.026,525,2.242,526,1.026,527,1.026,528,1.686,529,1.599,530,1.686,531,1.686,532,1.686,533,1.599,534,1.599,535,3.121,536,2.747,537,2.242,538,2.486,539,2.486,540,2.486,541,1.026,542,1.026,543,3.121,544,1.686,545,1.026,546,1.026,547,0.973,548,1.026,549,1.026,550,2.146,551,2.146,552,2.146,553,2.146,554,1.686,555,1.686,556,2.486,557,1.026,558,1.026,559,1.686,560,1.686,561,1.026,562,1.026,563,1.026,564,2.477,565,0.973,566,0.925,567,1.026,568,1.026,569,1.686,570,1.026,571,1.026,572,1.613,573,1.026,574,1.686,575,1.026,576,1.026,577,1.026,578,1.686,579,1.026,580,1.686,581,1.026,582,1.026,583,1.026,584,0.973,585,1.686,586,1.686,587,1.026,588,1.686,589,1.026,590,1.026,591,1.026,592,1.026,593,1.026,594,1.026,595,1.026,596,1.026,597,1.026,598,1.026,599,1.026,600,1.026,601,1.026,602,1.026,603,1.026,604,1.026,605,1.026,606,1.686,607,1.026,608,1.026,609,1.026,610,1.52,611,1.026,612,2.146,613,2.146,614,1.026,615,2.146,616,1.026,617,1.026,618,1.026,619,1.686,620,1.026,621,1.026,622,1.026,623,1.599,624,1.026,625,1.026,626,2.035,627,1.026,628,0.925,629,1.686,630,1.026,631,0.925,632,1.686,633,0.973,634,1.026,635,1.026,636,1.026,637,0.973,638,1.686,639,1.026,640,1.686,641,1.686,642,1.026,643,1.026,644,1.026,645,2.146,646,1.026,647,1.026,648,0.973,649,1.026,650,0.973,651,1.026,652,1.026,653,1.026,654,1.026,655,1.026,656,1.026,657,1.026,658,0.882,659,1.935,660,1.026,661,0.925,662,1.026,663,1.026,664,1.026,665,1.026,666,1.026,667,1.026,668,1.026,669,1.026,670,0.973,671,1.026,672,1.026,673,1.026,674,1.026,675,0.973,676,0.973,677,0.842,678,1.026,679,1.686,680,1.026,681,0.973,682,1.026,683,0.973,684,1.026,685,1.026,686,1.026,687,1.026,688,1.026,689,1.026,690,1.026,691,1.026,692,1.026,693,0.842,694,1.026,695,1.026,1105,3.046,1106,1.853,1107,1.853,1108,1.853,1109,1.853,1110,1.853,1111,1.853,1112,1.853,1113,1.853]],["title/interfaces/OdPair.html",[226,0.825,266,1.58]],["body/interfaces/OdPair.html",[2,0.087,3,0.178,7,0.063,18,0.256,19,0.587,24,0.286,27,1.264,28,0.015,29,1.186,30,1.383,31,0.548,33,1.15,34,0.783,36,0.337,38,0.23,39,0.008,42,0.783,44,0.722,45,0.892,46,0.745,56,0.934,58,2.434,62,0.892,69,0.865,117,0.006,118,0.006,170,1.031,171,1.426,178,0.783,182,0.665,183,0.616,184,1.855,186,0.722,189,2.015,193,1.694,194,2.425,201,1.545,205,0.618,226,1.142,234,1.55,242,0.817,243,0.853,255,0.752,257,0.817,259,2.02,266,2.553,270,2.908,271,1.15,300,0.892,305,0.722,306,0.752,309,1.91,336,2.583,339,1.78,341,0.783,345,1.594,346,1.594,362,2.617,363,2.321,366,1.999,378,1.92,382,1.52,383,2.749,384,1.594,386,3.487,396,1.031,400,1.031,406,3.045,413,0.934,416,1.677,419,0.98,420,0.934,421,0.98,425,1.68,431,2.725,432,3.507,438,0.98,442,2.223,445,1.677,451,0.98,452,2.015,453,1.768,454,3.104,455,3.006,456,2.235,457,3.439,458,2.737,459,1.768,460,2.749,461,1.087,462,2.832,463,3.269,464,1.594,465,3.006,466,3.199,468,1.087,469,1.087,470,1.087,473,0.934,477,2.235,478,1.031,482,1.087,484,1.768,485,1.087,486,1.087,487,0.817,495,1.677,496,2.235,497,1.087,499,0.98,500,1.92,501,0.98,504,2.235,505,1.087,506,0.865,507,1.031,508,1.087,509,1.087,510,2.491,511,2.878,512,2.382,513,0.783,514,3.27,515,2.235,516,1.768,517,1.087,518,1.768,519,1.087,520,1.087,521,1.031,522,1.087,523,1.031,524,1.087,525,2.321,526,1.087,527,1.087,528,1.087,529,1.031,530,1.087,531,1.087,532,1.087,533,1.031,534,1.031,535,2.235,536,1.768,537,0.98,538,1.087,539,1.087,540,1.087,541,1.087,542,1.087,543,2.574,544,1.087,545,1.087,546,1.087,547,1.031,548,1.087,549,1.087,550,2.235,551,2.235,552,2.235,553,2.235,554,1.768,555,1.768,556,2.574,557,1.087,558,1.087,559,1.768,560,1.768,561,1.087,562,1.087,563,1.087,564,2.554,565,1.031,566,0.98,567,1.087,568,1.087,569,1.768,570,1.087,571,1.087,572,1.68,573,1.087,574,1.768,575,1.087,576,1.087,577,1.087,578,1.768,579,1.087,580,1.768,581,1.087,582,1.087,583,1.087,584,1.031,585,1.768,586,1.768,587,1.087,588,1.768,589,1.087,590,1.087,591,1.087,592,1.087,593,1.087,594,1.087,595,1.087,596,1.087,597,1.087,598,1.087,599,1.087,600,1.087,601,1.087,602,1.087,603,1.087,604,1.087,605,1.087,606,1.768,607,1.087,608,1.087,609,1.087,610,1.594,611,1.087,612,2.235,613,2.235,614,1.087,615,2.235,616,1.087,617,1.087,618,1.087,619,1.768,620,1.087,621,1.087,622,1.087,623,1.677,624,1.087,625,1.087,626,2.119,627,1.087,628,0.98,629,1.768,630,1.087,631,0.98,632,1.768,633,1.031,634,1.087,635,1.087,636,1.087,637,1.031,638,1.768,639,1.087,640,1.768,641,1.768,642,1.087,643,1.087,644,1.087,645,2.235,646,1.087,647,1.087,648,1.031,649,1.087,650,1.031,651,1.087,652,1.087,653,1.087,654,1.087,655,1.087,656,1.087,657,1.087,658,0.934,659,2.015,660,1.087,661,0.98,662,1.087,663,1.087,664,1.087,665,1.087,666,1.087,667,1.087,668,1.087,669,1.087,670,1.031,671,1.087,672,1.087,673,1.087,674,1.087,675,1.031,676,1.031,677,0.892,678,1.087,679,1.768,680,1.087,681,1.031,682,1.087,683,1.031,684,1.087,685,1.087,686,1.087,687,1.087,688,1.087,689,1.087,690,1.087,691,1.087,692,1.087,693,0.892,694,1.087,695,1.087]],["title/interfaces/OdPairShowing.html",[226,0.825,300,1.799]],["body/interfaces/OdPairShowing.html",[2,0.088,3,0.18,7,0.064,18,0.259,19,0.594,24,0.291,27,1.268,28,0.015,29,1.196,30,1.375,31,0.387,33,1.16,34,0.797,36,0.341,38,0.231,39,0.008,42,0.797,44,0.735,45,0.908,46,0.756,56,0.951,58,2.456,62,0.908,69,0.877,117,0.006,118,0.006,170,1.049,171,1.443,178,0.797,182,0.673,184,1.874,186,0.735,189,2.039,193,1.7,194,2.417,201,1.564,226,1.151,234,1.764,242,1.348,243,0.868,255,0.765,257,0.831,259,0.868,266,2.568,270,2.846,271,1.16,300,1.472,305,0.735,306,0.765,309,1.918,336,2.59,339,1.798,341,0.797,345,1.617,346,1.617,362,2.529,363,2.345,366,2.002,378,1.943,382,1.541,383,2.77,384,1.617,386,3.501,396,1.049,400,1.049,406,3.052,413,0.951,416,1.7,419,0.998,420,0.951,421,0.998,425,1.7,431,2.74,432,3.524,438,0.998,442,2.243,445,1.7,451,0.998,452,2.039,453,1.793,454,3.095,455,3.026,456,2.261,457,3.056,458,2.759,459,1.793,460,2.77,461,1.106,462,2.858,463,2.71,464,1.617,465,3.026,466,3.222,468,1.106,469,1.106,470,1.106,473,0.951,477,2.261,478,1.049,482,1.106,484,1.793,485,1.106,486,1.106,487,0.831,495,1.7,496,2.261,497,1.106,499,0.998,500,1.943,501,0.998,504,2.261,505,1.106,506,0.877,507,1.049,508,1.106,509,1.106,510,2.511,511,2.902,512,2.402,513,0.797,514,2.759,515,1.793,516,1.106,517,2.601,518,1.793,519,1.106,520,1.106,521,1.049,522,1.106,523,1.049,524,1.106,525,2.345,526,1.106,527,1.106,528,1.106,529,1.049,530,1.106,531,1.106,532,1.106,533,1.049,534,1.049,535,2.261,536,1.793,537,0.998,538,1.106,539,1.106,540,1.106,541,1.106,542,1.106,543,2.601,544,1.106,545,1.106,546,1.106,547,1.049,548,1.106,549,1.106,550,2.261,551,2.261,552,2.261,553,2.261,554,1.793,555,1.793,556,2.601,557,1.106,558,1.106,559,1.793,560,1.793,561,1.106,562,1.106,563,1.106,564,2.577,565,1.049,566,0.998,567,1.106,568,1.106,569,1.793,570,1.106,571,1.106,572,1.7,573,1.106,574,1.793,575,1.106,576,1.106,577,1.106,578,1.793,579,1.106,580,1.793,581,1.106,582,1.106,583,1.106,584,1.049,585,1.793,586,1.793,587,1.106,588,1.793,589,1.106,590,1.106,591,1.106,592,1.106,593,1.106,594,1.106,595,1.106,596,1.106,597,1.106,598,1.106,599,1.106,600,1.106,601,1.106,602,1.106,603,1.106,604,1.106,605,1.106,606,1.793,607,1.106,608,1.106,609,1.106,610,1.617,611,1.106,612,2.261,613,2.261,614,1.106,615,2.261,616,1.106,617,1.106,618,1.106,619,1.793,620,1.106,621,1.106,622,1.106,623,1.7,624,1.106,625,1.106,626,2.144,627,1.106,628,0.998,629,1.793,630,1.106,631,0.998,632,1.793,633,1.049,634,1.106,635,1.106,636,1.106,637,1.049,638,1.793,639,1.106,640,1.793,641,1.793,642,1.106,643,1.106,644,1.106,645,2.261,646,1.106,647,1.106,648,1.049,649,1.106,650,1.049,651,1.106,652,1.106,653,1.106,654,1.106,655,1.106,656,1.106,657,1.106,658,0.951,659,2.039,660,1.106,661,0.998,662,1.106,663,1.106,664,1.106,665,1.106,666,1.106,667,1.106,668,1.106,669,1.106,670,1.049,671,1.106,672,1.106,673,1.106,674,1.106,675,1.049,676,1.049,677,0.908,678,1.106,679,1.793,680,1.106,681,1.049,682,1.106,683,1.049,684,1.106,685,1.106,686,1.106,687,1.106,688,1.106,689,1.106,690,1.106,691,1.106,692,1.106,693,0.908,694,1.106,695,1.106]],["title/interfaces/Path.html",[194,1.295,226,0.825]],["body/interfaces/Path.html",[2,0.22,3,0.22,7,0.159,18,0.504,19,0.917,27,1.081,28,0.015,29,1.364,30,1.33,31,0.688,36,0.329,38,0.226,39,0.009,46,1.165,117,0.011,118,0.011,193,1.165,194,2.693,205,1.572,226,1.314,309,1.404,339,1.912,366,1.736,398,4.931,406,3.16,431,2.624,454,3.34,464,2.494,510,3.399,512,2.74,566,2.494,572,2.079,610,2.494,631,2.494,658,3,659,3.814,661,3.873,880,3.906,881,3.906,882,4.339,889,4.339,891,3.906,892,4.339,894,4.339,895,5.477,896,4.339,897,4.339,898,4.339,899,4.339,900,4.339,901,4.339,902,4.339,903,4.339]],["title/classes/Relation.html",[39,0.007,564,1.977]],["body/classes/Relation.html",[2,0.086,3,0.177,7,0.062,18,0.253,19,0.582,23,0.453,24,0.739,27,1.261,28,0.015,29,1.18,30,1.379,31,0.517,32,0.488,33,1.225,34,0.774,36,0.335,38,0.229,39,0.009,42,0.774,44,0.713,45,0.881,46,1.077,56,0.923,58,2.419,62,1.437,69,1.084,77,0.346,117,0.006,118,0.006,170,1.66,171,1.415,178,0.774,182,0.76,183,0.374,184,1.842,186,0.713,189,1.998,193,1.69,194,2.404,201,1.532,205,0.611,226,1.059,234,1.54,242,0.807,243,0.843,255,0.743,257,0.807,259,0.843,266,2.473,270,2.817,271,1.142,300,0.881,305,0.713,306,0.743,309,1.903,336,2.579,339,1.767,341,0.774,345,1.579,346,1.579,362,2.498,363,2.305,366,2.013,378,1.905,382,1.505,383,2.735,384,1.579,386,3.477,396,1.019,400,1.019,406,3.04,413,0.923,416,1.66,419,0.969,420,0.923,421,0.969,425,1.666,431,2.715,432,3.495,438,0.969,442,2.209,445,1.66,451,0.969,452,2.305,453,2.216,454,3.079,455,2.992,456,2.216,457,3.018,458,2.722,459,1.751,460,2.735,461,1.074,462,2.814,463,2.669,464,1.579,465,3.381,466,3.183,468,1.074,469,1.074,470,1.074,473,0.923,477,2.216,478,1.019,482,1.074,484,1.751,485,1.074,486,1.074,487,0.807,495,1.66,496,2.216,497,1.074,499,0.969,500,1.905,501,0.969,504,2.216,505,1.074,506,0.856,507,1.019,508,1.074,509,1.074,510,2.477,511,2.862,512,2.369,513,0.774,514,2.722,515,1.751,516,1.074,517,1.074,518,1.751,519,1.074,520,1.074,521,1.019,522,1.074,523,1.019,524,1.074,525,3.095,526,1.074,527,1.074,528,1.074,529,1.019,530,1.074,531,1.074,532,1.074,533,1.019,534,1.019,535,2.216,536,1.751,537,0.969,538,1.074,539,1.074,540,1.074,541,1.074,542,1.074,543,2.556,544,1.074,545,1.074,546,1.074,547,1.019,548,1.074,549,1.074,550,2.216,551,2.216,552,2.216,553,2.216,554,1.751,555,1.751,556,2.556,557,1.074,558,1.074,559,1.751,560,1.751,561,1.074,562,1.074,563,1.074,564,2.87,565,1.66,566,1.579,567,1.751,568,1.751,569,3.018,570,1.751,571,1.074,572,1.666,573,1.074,574,1.751,575,1.074,576,1.074,577,1.074,578,1.751,579,1.074,580,1.751,581,1.074,582,1.074,583,1.074,584,1.019,585,1.751,586,1.751,587,1.074,588,1.751,589,1.074,590,1.074,591,1.074,592,1.074,593,1.074,594,1.074,595,1.074,596,1.074,597,1.074,598,1.074,599,1.074,600,1.074,601,1.074,602,1.074,603,1.074,604,1.074,605,1.074,606,1.751,607,1.074,608,1.074,609,1.074,610,1.579,611,1.074,612,2.216,613,2.216,614,1.074,615,2.216,616,1.074,617,1.074,618,1.074,619,1.751,620,1.074,621,1.074,622,1.074,623,1.66,624,1.074,625,1.074,626,2.101,627,1.074,628,0.969,629,1.751,630,1.074,631,0.969,632,1.751,633,1.019,634,1.074,635,1.074,636,1.074,637,1.019,638,1.751,639,1.074,640,1.751,641,1.751,642,1.074,643,1.074,644,1.074,645,2.216,646,1.074,647,1.074,648,1.019,649,1.074,650,1.019,651,1.074,652,1.074,653,1.074,654,1.074,655,1.074,656,1.074,657,1.074,658,0.923,659,1.998,660,1.074,661,0.969,662,1.074,663,1.074,664,1.074,665,1.074,666,1.074,667,1.074,668,1.074,669,1.074,670,1.019,671,1.074,672,1.074,673,1.074,674,1.074,675,1.019,676,1.019,677,0.881,678,1.074,679,1.751,680,1.074,681,1.019,682,1.074,683,1.019,684,1.074,685,1.074,686,1.074,687,1.074,688,1.074,689,1.074,690,1.074,691,1.074,692,1.074,693,0.881,694,1.074,695,1.074,1114,3.163,1115,1.94,1116,1.94]],["title/classes/Reset.html",[39,0.007,140,0.959]],["body/classes/Reset.html",[2,0.2,3,0.2,7,0.145,9,2.132,18,0.528,19,0.861,23,1.058,24,0.96,28,0.015,30,1.132,31,0.759,32,1.14,33,1.019,36,0.391,38,0.276,39,0.013,77,0.809,82,1.795,83,1.546,117,0.01,118,0.01,140,1.758,151,1.602,182,0.747,183,0.875,219,2.861,234,1.374,271,1.764,298,2.422,366,1.973,506,1.228,513,1.809,737,2.042,785,3.14,786,2.38,787,4.599,788,4.791,789,2.823,792,2.51,793,2.38,794,2.38,795,3.294,796,3.294,797,3.294,798,3.294,799,1.97,800,2.656,801,2.51,802,4.363,803,2.51,804,2.51,805,2.51,806,2.38,807,3.28,808,2.51,1117,5.926,1118,4.535]],["title/injectables/SchedulerService.html",[232,1.346,1119,2.32]],["body/injectables/SchedulerService.html",[2,0.122,3,0.223,7,0.088,18,0.589,21,1.093,23,0.977,24,0.877,27,1.306,28,0.015,29,1.467,30,1.314,31,0.533,32,1.268,36,0.458,37,0.457,38,0.1,39,0.005,42,2.531,44,1.855,46,1.828,48,1.456,51,3.275,58,1.993,77,1.003,82,1.177,117,0.007,118,0.007,140,1.536,178,1.107,182,0.926,183,1.085,193,1.537,194,2.075,232,1.715,254,2.339,255,2.751,256,2.806,257,2.741,258,3.112,259,2.443,260,3.293,266,1.107,271,1.134,292,1.625,293,1.625,294,2.169,295,2.41,309,1.852,316,3.019,317,1.625,333,2.793,335,3.647,341,2.628,343,2.41,362,1.82,363,3.168,366,1.268,383,1.993,384,2.091,405,2.169,406,1.671,413,2.675,425,2.822,455,2.519,500,1.32,506,1.879,512,2.622,547,2.199,572,3.03,628,3.012,633,2.199,650,2.199,737,1.852,751,3.004,806,3.823,823,3.5,857,3.62,891,3.946,961,3.112,969,3.142,1119,2.454,1120,2.41,1121,4.189,1122,4.189,1123,4.189,1124,2.41,1125,3.946,1126,3.5,1127,2.774,1128,2.774,1129,4.189,1130,4.189,1131,4.189,1132,2.774,1133,6.346,1134,6.346,1135,5.512,1136,6.346,1137,7.284,1138,4.189,1139,4.189,1140,2.774,1141,3.638,1142,4.189,1143,4.189,1144,2.774,1145,7.075,1146,2.169,1147,2.41,1148,2.169,1149,2.774,1150,2.774,1151,2.774,1152,2.774,1153,2.774,1154,2.774,1155,2.774,1156,2.774,1157,2.774,1158,4.883,1159,5.047,1160,2.774,1161,5.622,1162,2.774,1163,2.774,1164,2.774,1165,4.189,1166,2.774,1167,2.774,1168,2.774,1169,2.774,1170,2.774,1171,2.774,1172,2.774,1173,5.047,1174,4.904,1175,2.774,1176,5.622,1177,2.774,1178,2.41,1179,2.774,1180,2.774,1181,2.774,1182,4.883,1183,5.622,1184,2.774,1185,4.189,1186,4.189,1187,4.189,1188,4.189,1189,4.189,1190,3.638,1191,2.774,1192,2.41,1193,2.41,1194,5.047,1195,4.383,1196,5.047,1197,5.047,1198,5.047,1199,5.047,1200,4.189,1201,5.047,1202,2.774,1203,2.774,1204,2.774,1205,2.774,1206,2.774,1207,2.774,1208,2.774,1209,2.774,1210,2.774,1211,2.774,1212,2.774,1213,2.774]],["title/components/SearchForTheAreaComponent.html",[0,0.601,102,1.246]],["body/components/SearchForTheAreaComponent.html",[0,1.044,1,0.964,2,0.205,3,0.14,4,1.169,5,1.169,6,1.169,7,0.101,9,1.303,10,2.182,11,1.169,12,2.886,13,2.089,14,1.929,16,1.929,18,0.481,19,0.674,21,1.209,22,2.747,23,1.081,24,1.117,27,1.271,28,0.015,29,1.682,30,0.795,31,0.606,32,0.799,33,1.042,36,0.421,37,0.524,38,0.114,39,0.006,46,0.742,67,0.83,68,1.705,69,1.255,70,1.638,71,2.21,72,1.169,77,1.073,78,1.169,79,1.001,80,1.169,81,1.001,82,1.728,83,1.427,84,1.169,85,1.001,86,1.124,87,1.169,88,1.001,89,1.169,90,1.001,91,1.081,92,1.705,93,0.964,94,1.169,95,1.001,96,1.169,97,1.001,98,1.788,99,1.001,100,1.169,101,1.169,102,1.892,103,2.618,104,1.705,105,1.001,106,1.081,107,1.001,108,1.169,109,1.001,110,1.169,111,0.964,112,1.169,113,1.001,114,1.169,115,1.001,116,1.169,117,0.011,118,0.008,182,0.764,183,0.894,203,3.778,207,3.908,209,3.537,210,3.028,211,3.812,212,3.812,213,3.812,218,3.204,219,1.705,220,2.716,223,1.588,242,1.929,249,3.743,250,3.908,254,2.501,271,1.351,278,1.98,279,1.98,280,1.98,281,1.98,282,1.98,285,1.98,291,1.67,292,1.863,298,1.459,307,1.98,309,1.303,310,1.98,313,2.117,314,1.863,315,1.863,316,3.424,317,1.863,333,1.761,335,3.028,336,1.081,341,2.182,342,3.625,353,3.325,354,3.325,487,1.929,506,1.806,537,2.314,746,3.907,747,4.027,799,2.014,814,1.98,827,2.282,961,3.328,967,2.763,968,2.763,969,2.887,972,2.763,975,5.221,983,4.701,987,5.982,1003,2.763,1005,2.763,1012,2.763,1124,2.763,1125,4.701,1148,2.487,1158,2.763,1174,4.001,1195,2.763,1214,6.352,1215,5.718,1216,2.487,1217,4.027,1218,4.027,1219,4.637,1220,3.181,1221,3.181,1222,3.181,1223,3.181,1224,4.637,1225,3.181,1226,3.181,1227,3.181,1228,3.181,1229,3.181,1230,3.181,1231,2.763,1232,3.181,1233,4.637,1234,3.181,1235,4.027,1236,3.181,1237,3.181,1238,3.181,1239,3.181,1240,3.181,1241,3.181,1242,3.181,1243,3.181,1244,3.181,1245,3.181,1246,3.181,1247,3.181,1248,3.181,1249,3.181,1250,4.637,1251,3.181,1252,2.763,1253,3.181,1254,3.181,1255,3.181,1256,3.181,1257,3.181,1258,3.181,1259,3.181,1260,2.763]],["title/components/SelectionOfTheAreaComponent.html",[0,0.601,105,1.246]],["body/components/SelectionOfTheAreaComponent.html",[0,1.054,1,0.994,2,0.209,3,0.145,4,1.206,5,1.206,6,1.206,7,0.105,9,1.333,10,2.221,11,1.206,12,2.897,13,2.115,14,1.973,16,1.973,18,0.488,19,0.689,21,1.237,22,2.773,23,1.106,24,1.122,27,1.304,28,0.015,29,1.646,30,0.813,31,0.579,32,0.825,33,1.065,34,1.892,36,0.478,37,0.54,38,0.118,39,0.006,46,0.765,48,3.915,67,0.856,68,1.743,69,1.284,70,1.676,71,2.243,72,1.206,77,0.994,78,1.206,79,1.032,80,1.206,81,1.032,82,1.758,83,1.452,84,1.206,85,1.032,86,1.159,87,1.206,88,1.032,89,1.206,90,1.032,91,1.115,92,1.743,93,0.994,94,1.206,95,1.032,96,1.206,97,1.032,98,1.994,99,1.032,100,1.206,101,1.206,102,1.032,103,1.159,104,1.743,105,1.919,106,2.503,107,1.032,108,1.206,109,1.032,110,1.206,111,0.994,112,1.206,113,1.032,114,1.206,115,1.032,116,1.206,117,0.008,118,0.008,151,1.159,182,0.54,183,1.074,203,3.807,207,3.95,209,3.581,210,3.082,211,3.849,212,3.849,213,3.849,218,3.262,219,1.743,220,2.778,223,1.638,242,1.973,249,3.79,250,3.95,253,3.733,254,2.538,255,2.335,256,3.045,278,2.043,279,2.043,280,2.043,281,2.043,282,2.043,285,2.043,286,2.353,290,3.401,291,1.722,292,1.922,293,1.922,296,1.816,297,1.722,299,2.184,305,1.206,306,1.256,307,2.043,309,1.565,310,2.043,313,2.184,314,1.922,315,1.922,316,1.561,317,1.922,353,3.401,354,3.401,452,2.367,487,2.962,499,3.045,658,2.256,737,1.625,743,2.85,969,2.952,1022,2.566,1047,2.566,1048,2.85,1182,5.298,1216,2.566,1217,4.119,1218,4.119,1261,6.397,1262,5.759,1263,3.281,1264,3.281,1265,3.281,1266,3.281,1267,3.281,1268,3.281,1269,3.281,1270,6.1,1271,3.281,1272,3.281,1273,6.1,1274,6.039,1275,3.281,1276,3.281,1277,4.742,1278,3.281,1279,3.281,1280,3.281,1281,3.281,1282,3.281,1283,3.281,1284,3.281,1285,3.281,1286,3.281,1287,3.281,1288,3.281,1289,3.281,1290,4.742,1291,4.742,1292,4.742,1293,4.742,1294,4.742,1295,4.119,1296,4.119]],["title/modules/SharedModule.html",[123,1.072,137,2.192]],["body/modules/SharedModule.html",[2,0.27,3,0.21,7,0.151,27,0.815,28,0.015,36,0.531,37,0.783,38,0.256,39,0.008,67,1.24,88,2.522,95,2.544,99,2.544,117,0.011,118,0.011,123,1.654,125,2.262,126,3.544,127,2.496,128,2.654,137,4.549,139,2.775,140,1.151,141,2.373,143,3.212,185,2.632,191,4.382,193,1.109,229,2.96,235,3.804,291,2.496,366,1.195,697,4.129,1066,4.668,1174,3.164,1297,4.129,1298,4.129,1299,4.129,1300,4.129,1301,3.717,1302,6.11,1303,6.11,1304,5.307,1305,4.129,1306,5.307,1307,4.129,1308,5.307,1309,5.307,1310,5.307,1311,4.129,1312,4.129,1313,4.754,1314,4.754,1315,4.129,1316,4.129,1317,3.717,1318,4.754]],["title/components/SimulationComponent.html",[0,0.601,107,1.246]],["body/components/SimulationComponent.html",[0,1.086,1,1.316,2,0.254,3,0.192,4,1.598,5,1.598,6,1.598,7,0.138,9,1.619,10,2.578,11,1.598,12,2.99,13,2.341,14,2.397,16,2.397,18,0.551,21,1.503,22,2.746,23,1.344,24,1.092,27,1.18,28,0.015,29,1.65,30,0.988,31,0.613,36,0.472,37,0.716,38,0.156,39,0.008,44,2.118,67,1.133,68,2.118,69,1.56,70,2.036,71,2.531,72,1.598,77,1.153,78,1.598,79,1.367,80,1.598,81,1.367,82,1.845,83,1.133,84,1.598,85,1.367,86,1.535,87,1.598,88,1.367,89,1.598,90,1.367,91,1.477,92,2.118,93,1.316,94,1.598,95,1.367,96,1.598,97,1.367,98,2.113,99,1.367,100,1.598,101,1.598,102,1.367,103,1.535,104,2.118,105,1.367,106,1.958,107,2.166,108,1.598,109,1.367,110,1.598,111,1.316,112,1.598,113,1.367,114,1.598,115,1.367,116,1.598,117,0.01,118,0.01,151,1.535,182,0.716,183,0.838,211,3.81,212,3.81,213,3.81,249,4.195,250,4.311,251,3.117,252,5.279,253,4.157,254,2.864,291,2.281,292,2.545,296,2.405,297,2.281,309,1.817,313,2.892,314,2.545,315,2.545,1319,3.774,1320,5.762,1321,5.762,1322,5.762,1323,4.346,1324,4.346,1325,4.346,1326,4.346,1327,4.346,1328,5.004]],["title/modules/SimulationModule.html",[123,1.072,138,2.636]],["body/modules/SimulationModule.html",[2,0.262,3,0.262,7,0.189,28,0.015,36,0.492,37,0.977,38,0.251,39,0.01,67,1.548,117,0.012,118,0.012,123,1.897,125,2.823,126,3.677,127,3.115,128,3.238,138,5.3,139,3.182,140,1.437,141,2.962,143,3.332,1126,4.957,1329,5.155,1330,5.155,1331,5.935,1332,5.935]],["title/injectables/SimulationService.html",[232,1.346,1126,2.465]],["body/injectables/SimulationService.html",[2,0.263,3,0.263,7,0.19,18,0.476,21,1.831,24,0.866,27,1.021,28,0.015,29,1.519,36,0.393,37,0.981,38,0.214,39,0.011,42,2.8,117,0.012,118,0.012,140,1.866,205,1.874,232,2.536,366,1.876,383,3.339,648,3.684,846,6.096,1126,4.37,1333,5.172,1334,7.019,1335,5.955]],["title/components/StatisticsComponent.html",[0,0.601,109,1.246]],["body/components/StatisticsComponent.html",[0,1.124,1,1.466,2,0.273,3,0.214,4,1.779,5,1.779,6,1.779,7,0.154,9,1.737,10,2.716,11,1.779,12,3.02,13,2.423,14,2.571,16,2.571,18,0.574,21,1.612,22,2.861,23,1.588,24,1.043,27,0.83,28,0.015,29,1.337,30,1.06,31,0.586,36,0.408,37,0.797,38,0.174,39,0.009,67,1.262,68,2.272,69,1.673,70,2.183,71,2.637,72,1.779,77,1.103,78,1.779,79,1.523,80,1.779,81,1.523,82,1.837,83,1.262,84,1.779,85,1.523,86,1.71,87,1.779,88,1.523,89,1.779,90,1.523,91,1.644,92,2.272,93,1.466,94,1.779,95,1.523,96,1.779,97,1.523,98,2.226,99,1.523,100,1.779,101,1.779,102,1.523,103,1.71,104,2.272,105,1.523,106,1.644,107,1.523,108,1.779,109,2.257,110,1.779,111,1.466,112,1.779,113,1.523,114,1.779,115,1.523,116,1.779,117,0.011,118,0.011,249,4.341,250,4.439,291,2.54,1328,5.367,1336,4.203,1337,5.367,1338,6.179,1339,6.179,1340,6.179,1341,4.839,1342,4.839]],["title/interfaces/Step.html",[226,0.825,298,1.246]],["body/interfaces/Step.html",[2,0.259,3,0.259,7,0.187,18,0.469,19,1.011,28,0.015,31,0.556,38,0.266,46,1.886,117,0.012,118,0.012,193,1.368,205,1.846,223,3.472,226,1.545,298,2.499,677,3.484,737,2.164,838,3.904,1014,4.207]],["title/classes/StepChanged.html",[39,0.007,795,1.977]],["body/classes/StepChanged.html",[2,0.198,3,0.198,7,0.143,9,2.127,18,0.525,19,0.856,23,1.047,24,0.955,28,0.015,30,1.126,31,0.77,32,1.128,33,1.008,36,0.388,38,0.276,39,0.013,77,0.801,82,1.791,83,1.535,117,0.01,118,0.01,140,1.688,151,1.586,182,0.739,183,0.866,219,2.855,234,1.36,271,1.761,298,2.416,366,1.97,479,4.34,506,1.215,513,1.791,737,2.034,785,3.124,786,2.356,787,4.591,788,4.781,789,2.795,792,2.485,793,2.356,794,2.356,795,3.48,796,3.278,797,3.278,798,3.278,799,1.95,800,2.629,801,3.258,802,4.351,803,2.485,804,2.485,805,2.485,806,2.356,807,2.485,808,2.485,1343,5.886,1344,4.489]],["title/classes/StepError.html",[39,0.007,797,1.977]],["body/classes/StepError.html",[2,0.199,3,0.199,7,0.144,9,2.13,18,0.527,19,0.859,23,1.052,24,0.957,28,0.015,30,1.129,31,0.758,32,1.134,33,1.014,36,0.39,38,0.276,39,0.013,77,0.805,82,1.793,83,1.54,117,0.01,118,0.01,140,1.691,151,1.594,182,0.743,183,0.87,219,2.858,234,1.367,271,1.805,298,2.419,366,1.971,506,1.221,513,1.8,737,2.038,785,3.132,786,2.368,787,4.595,788,4.786,789,2.809,792,2.497,793,2.368,794,2.368,795,3.286,796,3.286,797,3.486,798,3.286,799,1.96,800,2.643,801,2.497,802,4.357,803,2.497,804,3.269,805,2.497,806,2.368,807,2.497,808,2.497,1345,5.906,1346,4.512]],["title/classes/StepPending.html",[39,0.007,798,1.977]],["body/classes/StepPending.html",[2,0.197,3,0.197,7,0.142,9,2.125,18,0.524,19,0.853,23,1.042,24,0.952,28,0.015,30,1.123,31,0.757,32,1.122,33,1.003,36,0.387,38,0.275,39,0.013,77,0.797,82,1.789,83,1.53,117,0.01,118,0.01,140,1.684,151,1.578,182,0.736,183,0.862,219,2.853,234,2.189,271,1.802,298,2.414,366,1.968,506,1.209,513,1.781,737,2.03,785,3.117,786,2.344,787,4.587,788,4.776,789,2.781,792,2.472,793,2.344,794,2.344,795,3.27,796,3.27,797,3.27,798,3.473,799,1.94,800,2.616,801,2.472,802,4.345,803,2.472,804,2.472,805,3.247,806,2.344,807,2.472,808,2.472,1347,5.867,1348,4.466]],["title/interfaces/Tag.html",[226,0.825,465,1.977]],["body/interfaces/Tag.html",[2,0.088,3,0.179,7,0.063,18,0.258,19,0.591,24,0.289,27,1.266,28,0.015,29,1.192,30,1.375,31,0.444,33,1.359,34,0.792,36,0.339,38,0.231,39,0.008,42,0.792,44,0.73,45,0.902,46,0.751,56,0.944,58,2.448,62,0.902,69,1.101,117,0.006,118,0.006,170,1.042,171,1.437,178,0.792,182,0.67,184,1.867,186,0.73,189,2.03,193,1.698,194,2.414,201,1.557,205,0.625,226,1.148,234,1.559,242,0.826,243,0.862,255,0.76,257,0.826,259,0.862,266,2.493,270,2.84,271,1.404,300,0.902,305,0.73,306,0.76,309,1.915,336,2.587,339,1.791,341,0.792,345,1.608,346,1.608,362,2.522,363,2.336,366,2.001,378,1.934,382,1.533,383,2.762,384,1.608,386,3.496,396,1.042,400,1.042,406,3.049,413,0.944,416,1.691,419,0.991,420,0.944,421,0.991,425,1.692,431,2.734,432,3.517,438,0.991,442,2.235,445,1.691,451,0.991,452,2.03,453,1.783,454,3.091,455,3.019,456,2.251,457,3.047,458,2.751,459,1.783,460,2.762,461,1.099,462,2.848,463,2.701,464,1.608,465,3.206,466,3.213,468,1.099,469,1.099,470,1.099,473,0.944,477,2.251,478,1.042,482,1.099,484,1.783,485,1.099,486,1.099,487,0.826,495,1.691,496,2.251,497,1.099,499,0.991,500,1.934,501,0.991,504,2.251,505,1.099,506,0.872,507,1.042,508,1.099,509,1.099,510,2.503,511,2.893,512,2.394,513,0.792,514,2.751,515,2.251,516,1.099,517,1.099,518,1.783,519,1.099,520,1.783,521,1.691,522,1.783,523,2.456,524,1.099,525,2.336,526,1.099,527,1.099,528,1.099,529,1.042,530,1.099,531,1.099,532,1.099,533,1.042,534,1.042,535,2.251,536,1.783,537,0.991,538,1.099,539,1.099,540,1.099,541,1.099,542,1.099,543,2.59,544,1.099,545,1.099,546,1.099,547,1.042,548,1.099,549,1.099,550,2.251,551,2.251,552,2.251,553,2.251,554,1.783,555,1.783,556,2.59,557,1.099,558,1.099,559,1.783,560,1.783,561,1.099,562,1.099,563,1.099,564,2.568,565,1.042,566,0.991,567,1.099,568,1.099,569,1.783,570,1.099,571,1.099,572,1.692,573,1.099,574,1.783,575,1.099,576,1.099,577,1.099,578,1.783,579,1.099,580,1.783,581,1.099,582,1.099,583,1.099,584,1.042,585,1.783,586,1.783,587,1.099,588,1.783,589,1.099,590,1.099,591,1.099,592,1.099,593,1.099,594,1.099,595,1.099,596,1.099,597,1.099,598,1.099,599,1.099,600,1.099,601,1.099,602,1.099,603,1.099,604,1.099,605,1.099,606,1.783,607,1.099,608,1.099,609,1.099,610,1.608,611,1.099,612,2.251,613,2.251,614,1.099,615,2.251,616,1.099,617,1.099,618,1.099,619,1.783,620,1.099,621,1.099,622,1.099,623,1.691,624,1.099,625,1.099,626,2.134,627,1.099,628,0.991,629,1.783,630,1.099,631,0.991,632,1.783,633,1.042,634,1.099,635,1.099,636,1.099,637,1.042,638,1.783,639,1.099,640,1.783,641,1.783,642,1.099,643,1.099,644,1.099,645,2.251,646,1.099,647,1.099,648,1.042,649,1.099,650,1.042,651,1.099,652,1.099,653,1.099,654,1.099,655,1.099,656,1.099,657,1.099,658,0.944,659,2.03,660,1.099,661,0.991,662,1.099,663,1.099,664,1.099,665,1.099,666,1.099,667,1.099,668,1.099,669,1.099,670,1.042,671,1.099,672,1.099,673,1.099,674,1.099,675,1.042,676,1.042,677,0.902,678,1.099,679,1.783,680,1.099,681,1.042,682,1.099,683,1.042,684,1.099,685,1.099,686,1.099,687,1.099,688,1.099,689,1.099,690,1.099,691,1.099,692,1.099,693,0.902,694,1.099,695,1.099]],["title/components/UiComponent.html",[0,0.601,111,1.2]],["body/components/UiComponent.html",[0,0.996,1,1.033,2,0.251,3,0.151,4,1.254,5,1.254,6,1.254,7,0.109,9,1.37,10,2.27,11,1.254,12,2.911,13,2.299,14,2.029,16,2.029,18,0.273,19,0.709,21,1.272,22,2.477,23,1.137,24,1.08,27,1.255,28,0.015,29,1.607,31,0.589,32,1.225,33,1.095,36,0.496,37,0.562,38,0.122,39,0.006,46,1.448,67,0.89,68,1.793,69,1.32,70,1.723,71,2.283,72,1.254,77,1.172,78,1.254,79,1.073,80,1.254,81,1.073,82,1.641,83,0.89,84,1.254,85,1.073,86,1.205,87,1.254,88,1.073,89,1.254,90,1.073,91,1.159,92,1.793,93,1.033,94,1.254,95,1.534,96,1.254,97,1.073,98,2.147,99,1.534,100,1.254,101,1.254,102,1.073,103,1.205,104,1.793,105,1.073,106,1.657,107,1.073,108,1.254,109,1.073,110,1.254,111,1.881,112,1.254,113,1.073,114,1.254,115,1.073,116,1.254,117,0.009,118,0.009,140,1.703,151,1.205,171,1.205,182,0.937,183,1.098,184,2.62,185,1.888,186,1.254,193,0.796,201,1.867,208,4.943,209,4.112,210,3.437,224,2.963,225,2.963,227,3.788,229,2.124,231,4.454,234,1.99,253,3.893,255,1.867,271,1.58,296,1.888,297,1.79,309,1.846,460,1.623,506,1.541,746,2.699,799,3.125,947,5.393,949,2.963,957,1.998,1018,3.813,1019,3.813,1036,2.667,1119,3.637,1146,2.667,1174,3.245,1315,2.963,1316,2.963,1317,2.667,1349,2.963,1350,4.876,1351,4.876,1352,6.109,1353,4.876,1354,4.876,1355,3.411,1356,6.832,1357,6.21,1358,6.21,1359,6.21,1360,4.943,1361,4.876,1362,3.411,1363,3.411,1364,3.411,1365,3.411,1366,4.876,1367,3.411,1368,4.876,1369,3.411,1370,3.411,1371,3.411,1372,3.411,1373,2.963,1374,2.963,1375,3.411,1376,3.411,1377,3.411,1378,3.411,1379,3.411,1380,3.411,1381,4.876,1382,4.876,1383,4.876,1384,3.411,1385,3.411,1386,5.691,1387,4.876,1388,3.411,1389,3.411,1390,3.411,1391,3.411,1392,4.876,1393,3.411,1394,3.411,1395,3.411,1396,3.411,1397,3.411]],["title/modules/UiModule.html",[123,1.072,1398,2.84]],["body/modules/UiModule.html",[2,0.186,3,0.186,7,0.135,28,0.015,36,0.54,37,0.696,38,0.203,39,0.007,67,1.102,81,2.298,85,2.298,90,2.298,97,2.298,98,1.382,102,2.298,105,2.298,107,2.298,109,2.298,111,2.212,113,2.298,115,2.298,117,0.01,118,0.01,123,1.531,125,2.01,126,3.346,127,2.218,128,2.769,137,4.042,139,2.569,140,1.023,141,2.109,143,2.69,150,3.67,151,1.493,152,3.67,153,3.304,154,3.67,155,3.67,240,3.304,254,3.038,297,2.218,712,3.304,823,4.546,1037,3.304,1119,4.277,1147,3.67,1215,3.304,1262,3.304,1374,3.67,1398,5.961,1399,3.67,1400,3.67,1401,3.67,1402,3.67,1403,4.86,1404,4.226,1405,5.656,1406,5.656,1407,3.67,1408,3.67,1409,3.67,1410,3.67,1411,4.226,1412,4.226,1413,5.656,1414,4.226,1415,4.226,1416,4.226,1417,4.226,1418,4.226,1419,4.226,1420,4.226,1421,4.226,1422,4.226,1423,4.226,1424,4.226,1425,3.521,1426,4.226,1427,4.226]],["title/modules/UiRoutingModule.html",[123,1.072,1403,2.636]],["body/modules/UiRoutingModule.html",[0,0.893,2,0.26,3,0.26,7,0.188,28,0.015,36,0.517,37,0.969,38,0.25,39,0.01,111,2.112,117,0.012,118,0.012,123,1.593,143,3.316,178,2.963,185,3.258,190,5.112,191,5,193,1.373,194,1.924,197,5.112,198,5.112,229,3.664,231,4.221,235,4.34,1317,4.602,1373,5.112,1403,4.64,1410,5.112,1428,4.602,1429,5.886]],["title/interfaces/UiState.html",[226,0.825,1430,2.84]],["body/interfaces/UiState.html",[2,0.221,3,0.221,7,0.16,18,0.401,19,0.918,28,0.015,31,0.475,36,0.456,38,0.293,82,1.811,117,0.011,118,0.011,151,1.77,193,1.832,205,1.576,226,1.513,298,2.286,334,2.773,487,2.084,506,1.71,737,2.019,746,4.387,799,2.744,1425,3.119,1430,4.962,1431,3.918,1432,5.487,1433,5.487,1434,6.919,1435,5.487,1436,5.01,1437,6.743,1438,6.821,1439,5.01,1440,5.01,1441,4.351,1442,4.94,1443,4.351,1444,4.761,1445,4.351,1446,4.351,1447,4.351,1448,4.351,1449,4.351,1450,4.351]],["title/components/WeatherComponent.html",[0,0.601,113,1.246]],["body/components/WeatherComponent.html",[0,1.036,1,0.939,2,0.201,3,0.137,4,1.14,5,1.14,6,1.14,7,0.099,9,1.279,10,2.15,11,1.14,12,2.876,13,2.161,14,1.893,16,1.893,18,0.248,19,0.661,21,1.187,22,2.725,23,1.061,24,1.137,27,1.302,28,0.015,29,1.693,30,0.532,31,0.665,32,1.355,33,1.211,34,1.237,36,0.479,37,0.511,38,0.111,39,0.005,48,3.47,60,3.866,67,0.809,68,1.673,69,1.232,70,1.608,71,2.183,72,1.14,77,1.128,78,1.14,79,0.975,80,1.14,81,0.975,82,1.695,83,1.187,84,1.14,85,0.975,86,1.095,87,1.14,88,0.975,89,1.14,90,0.975,91,1.053,92,1.673,93,0.939,94,1.14,95,0.975,96,1.14,97,0.975,98,2.068,99,0.975,100,1.14,101,1.14,102,0.975,103,1.095,104,1.673,105,0.975,106,1.546,107,0.975,108,1.14,109,0.975,110,1.14,111,0.939,112,1.14,113,1.869,114,1.14,115,0.975,116,1.14,117,0.008,118,0.008,151,1.095,182,0.888,183,1.04,193,1.061,203,3.753,205,2.08,207,3.872,209,3.501,210,2.984,211,3.782,212,3.782,213,3.782,218,3.157,219,1.673,220,2.665,223,1.547,242,1.893,253,3.782,254,2.471,255,2.063,256,2.964,257,2.916,258,3.287,271,1.574,278,1.93,279,1.93,280,1.93,281,1.93,282,1.93,285,1.93,293,1.816,294,2.424,296,1.716,297,1.627,298,0.975,299,2.063,302,3.705,303,2.693,306,1.187,307,1.93,309,1.858,310,1.93,311,3.952,314,1.816,315,1.816,325,4.742,329,2.224,333,1.716,334,1.716,335,2.984,336,1.053,341,2.15,401,1.716,693,1.408,824,5.169,850,4.215,905,4.682,909,5.158,910,2.693,1037,2.424,1042,2.224,1451,2.693,1452,4.55,1453,4.55,1454,5.939,1455,4.55,1456,5.939,1457,4.55,1458,5.39,1459,5.939,1460,4.55,1461,4.55,1462,3.1,1463,4.55,1464,3.1,1465,3.1,1466,3.1,1467,3.1,1468,3.1,1469,4.55,1470,3.1,1471,3.1,1472,3.1,1473,3.1,1474,3.1,1475,2.693,1476,3.1,1477,3.1,1478,3.1,1479,5.39,1480,4.55,1481,3.1,1482,6.325,1483,3.1,1484,3.1,1485,4.55,1486,3.1,1487,3.1,1488,3.1,1489,3.1,1490,3.1,1491,3.1,1492,4.55]],["title/interfaces/WeatherConditions.html",[226,0.825,302,2.32]],["body/interfaces/WeatherConditions.html",[2,0.232,3,0.232,7,0.167,18,0.42,19,0.945,28,0.015,30,1.37,31,0.72,38,0.233,46,1.224,60,4.664,117,0.012,118,0.012,183,1.529,205,2.389,226,1.355,243,2.28,257,2.183,271,1.738,283,4.104,302,3.809,325,5.549,478,3.413,513,2.093,1493,4.104,1494,5.775,1495,5.775,1496,5.775,1497,7.386,1498,4.558,1499,4.558,1500,4.558,1501,4.558,1502,4.558,1503,6.137,1504,4.558,1505,4.558,1506,4.558,1507,4.558,1508,4.558,1509,4.558,1510,5.525,1511,5.648,1512,5.085,1513,5.648]],["title/modules/WeatherModule.html",[123,1.072,1101,2.636]],["body/modules/WeatherModule.html",[2,0.262,3,0.262,7,0.189,28,0.015,36,0.492,37,0.977,38,0.251,39,0.01,67,1.548,117,0.012,118,0.012,123,1.897,125,2.823,126,3.677,127,3.115,128,3.238,139,3.182,140,1.437,141,2.962,143,3.332,258,4.408,1101,5.3,1514,5.155,1515,5.155,1516,5.935,1517,5.935]],["title/injectables/WeatherService.html",[232,1.346,258,2.192]],["body/injectables/WeatherService.html",[2,0.156,3,0.156,7,0.113,13,1.155,18,0.283,19,0.727,21,1.304,23,0.824,24,1.088,27,1.283,28,0.015,29,1.365,30,1.219,31,0.674,33,1.304,34,1.41,36,0.487,37,0.582,38,0.127,39,0.006,46,1.821,48,3.929,77,1.233,83,0.922,117,0.009,118,0.009,128,2.172,140,1.527,182,1.269,183,1.487,184,2.656,186,1.299,193,1.471,205,1.985,232,1.972,243,3.003,257,3.309,258,2.768,271,0.794,302,4.477,305,1.299,306,1.914,309,2.04,316,2.379,336,1.201,339,1.353,366,1.973,386,1.764,401,2.768,419,1.764,420,1.681,421,1.764,422,2.535,425,2.625,431,2.625,438,2.496,487,1.47,500,3.001,501,1.764,507,1.855,572,2.08,737,1.031,940,3.069,948,3.91,961,3.492,965,3.069,1125,4.537,1146,2.763,1148,2.763,1193,4.343,1231,3.069,1274,6.004,1307,3.069,1475,3.069,1518,3.069,1519,7.485,1520,6.913,1521,5,1522,5,1523,5,1524,5.803,1525,6.309,1526,5,1527,5,1528,3.534,1529,6.309,1530,5,1531,5,1532,3.534,1533,3.534,1534,3.534,1535,3.534,1536,3.534,1537,3.069,1538,3.534,1539,5,1540,3.534,1541,5,1542,5,1543,3.534,1544,3.534,1545,3.534,1546,5,1547,3.534,1548,4.343,1549,4.343,1550,3.534,1551,5,1552,3.534,1553,5,1554,3.069,1555,3.534,1556,3.534,1557,3.534,1558,3.534,1559,3.534,1560,3.534,1561,3.534,1562,3.534,1563,3.534,1564,3.534,1565,3.534,1566,3.534,1567,3.534,1568,3.534,1569,5,1570,3.534,1571,3.534,1572,5,1573,3.534,1574,3.534,1575,5.803,1576,3.534,1577,3.534,1578,3.534,1579,3.534,1580,3.534,1581,3.534,1582,3.534,1583,3.534]],["title/components/WizardComponent.html",[0,0.601,115,1.246]],["body/components/WizardComponent.html",[0,1.002,1,1.05,2,0.218,3,0.153,4,1.274,5,1.274,6,1.274,7,0.11,9,1.386,10,2.29,11,1.274,12,2.917,13,2.16,14,2.051,16,2.051,18,0.565,19,0.717,21,1.286,22,2.494,23,1.15,24,1.027,27,1.072,28,0.015,29,1.486,30,0.845,31,0.593,32,0.871,36,0.476,37,0.571,38,0.124,39,0.006,44,1.813,46,1.458,48,1.819,67,0.904,68,1.813,69,1.335,70,1.742,71,2.299,72,1.274,77,1.116,78,1.274,79,1.09,80,1.274,81,1.09,82,1.776,83,1.497,84,1.274,85,1.09,86,2.028,87,1.274,88,1.09,89,1.274,90,1.09,91,1.177,92,1.813,93,1.05,94,1.274,95,1.09,96,1.274,97,1.09,98,2.245,99,1.09,100,1.274,101,1.274,102,1.09,103,2.028,104,1.813,105,1.09,106,1.95,107,1.09,108,1.274,109,1.09,110,1.274,111,1.05,112,1.274,113,1.09,114,1.274,115,1.968,116,1.274,117,0.009,118,0.009,171,1.224,182,0.812,183,0.951,193,1.339,205,1.551,223,1.729,243,2.142,250,3.663,251,2.485,252,4.926,254,2.602,259,2.142,266,1.967,286,2.485,289,4.488,290,2.485,291,1.819,292,2.029,298,1.968,302,2.029,305,1.274,306,1.326,309,1.613,316,2.345,325,2.485,333,1.918,335,3.177,341,2.29,401,3.998,431,1.441,442,1.505,487,2.051,677,1.574,693,1.574,806,3.709,814,2.157,857,2.485,953,2.709,957,2.029,969,3.893,983,2.709,1018,3.855,1019,3.855,1036,2.709,1042,2.485,1047,2.709,1119,3.663,1337,4.282,1352,5.431,1360,4.985,1494,2.709,1495,2.709,1496,2.709,1584,3.009,1585,4.931,1586,4.931,1587,5.965,1588,6.254,1589,4.931,1590,3.465,1591,3.465,1592,3.465,1593,4.931,1594,6.254,1595,3.465,1596,5.431,1597,4.931,1598,5.431,1599,4.931,1600,3.465,1601,3.465,1602,5.74,1603,3.465,1604,3.465,1605,3.465,1606,3.465,1607,3.855,1608,3.465,1609,3.465,1610,3.465,1611,3.465,1612,7.223,1613,5.74,1614,6.608,1615,5.74,1616,3.465,1617,5.74,1618,4.985,1619,3.465,1620,3.465,1621,3.465,1622,3.465,1623,3.465,1624,3.465,1625,3.465,1626,3.465,1627,3.465,1628,3.465,1629,3.465,1630,3.465,1631,3.465,1632,3.465]],["title/injectables/WizardService.html",[232,1.346,254,1.648]],["body/injectables/WizardService.html",[2,0.178,3,0.178,7,0.129,18,0.621,19,0.797,21,1.431,23,0.942,24,1.118,27,1.264,28,0.015,29,1.712,30,1.304,31,0.755,36,0.475,37,0.665,38,0.145,39,0.007,46,1.773,77,1.286,98,1.32,106,1.372,117,0.01,118,0.01,140,1.618,151,1.427,171,1.427,182,1.187,183,1.39,201,1.546,232,2.116,253,3.989,254,2.282,271,1.619,296,2.235,297,2.12,298,1.726,366,2.063,422,2.896,506,1.485,737,1.178,746,3.989,785,2.609,787,4.221,792,2.235,794,2.12,801,2.235,803,2.235,804,2.235,805,3.036,806,3.667,807,2.235,948,3.157,957,2.365,1022,3.157,1174,3.65,1444,4.35,1587,6.068,1598,5.803,1633,3.507,1634,5.485,1635,5.485,1636,6.682,1637,5.485,1638,5.485,1639,5.485,1640,5.485,1641,4.038,1642,5.485,1643,4.038,1644,5.485,1645,4.038,1646,4.038,1647,4.038,1648,5.485,1649,4.038,1650,5.485,1651,4.038,1652,4.038,1653,4.038,1654,4.038,1655,4.038,1656,4.038,1657,4.038,1658,7.371]],["title/interfaces/WizardState.html",[226,0.825,1444,2.465]],["body/interfaces/WizardState.html",[2,0.189,3,0.189,7,0.136,18,0.513,19,0.828,27,1.282,28,0.015,30,1.172,31,0.675,32,1.074,36,0.423,38,0.273,82,1.594,117,0.01,118,0.01,128,2.475,180,2.242,193,1.708,201,2.453,205,1.344,219,1.571,226,1.187,234,2.071,271,1.707,298,2.531,316,2.71,333,2.365,334,4.055,335,4.055,336,1.452,401,4.139,506,2.057,737,2.286,746,4.482,792,2.365,793,2.242,794,2.242,799,3.3,801,2.365,803,2.365,804,2.365,805,2.365,807,2.365,808,3.153,1425,2.66,1433,4.948,1444,4.988,1659,3.064,1660,4.272,1661,4.272,1662,4.272,1663,3.34,1664,3.71,1665,5.697,1666,4.272,1667,5.697,1668,5.697,1669,5.697,1670,4.272,1671,5.697,1672,4.272,1673,3.34,1674,3.71,1675,3.34,1676,3.71,1677,3.34,1678,3.71,1679,3.34,1680,3.71,1681,3.34,1682,3.71]],["title/coverage.html",[1683,4.701]],["body/coverage.html",[0,1.187,1,1.01,7,0.106,8,2.896,28,0.015,31,0.316,34,1.33,39,0.014,62,1.514,79,1.049,81,1.049,85,1.049,88,1.049,90,1.049,93,1.01,95,1.049,97,1.049,99,1.049,102,1.049,105,1.049,107,1.049,109,1.049,111,1.01,113,1.049,115,1.049,117,0.008,118,0.008,119,2.896,137,1.845,140,0.807,163,2.607,172,2.391,173,2.391,174,2.607,175,2.896,180,3.417,194,1.09,203,1.75,204,2.896,226,1.575,227,2.219,228,3.751,229,2.986,230,3.751,232,2.474,235,2.076,239,2.896,240,2.607,241,2.896,254,1.387,256,1.664,258,1.845,260,1.953,266,1.33,298,1.768,300,1.514,302,1.953,304,2.219,305,1.226,334,1.845,336,2.795,355,2.607,356,2.896,361,2.896,378,1.586,406,1.33,451,3.635,454,1.387,465,1.664,506,0.903,510,1.514,512,2.084,525,1.664,564,1.664,572,1.387,683,3.969,696,2.607,711,2.896,712,2.607,713,2.896,737,1.399,777,2.896,785,1.586,786,3.559,795,1.664,796,1.664,797,1.664,798,1.664,799,1.448,809,2.896,810,2.896,823,2.076,880,3.751,881,3.751,904,2.896,916,2.607,945,2.896,946,2.896,961,1.845,964,2.896,966,2.896,995,4.393,1014,4.03,1017,2.896,1038,2.607,1041,4.166,1058,4.166,1066,1.953,1067,2.607,1090,2.896,1091,2.896,1119,1.953,1120,2.896,1126,2.076,1214,2.896,1215,2.607,1216,3.751,1261,2.896,1262,2.607,1301,2.607,1319,2.896,1333,2.896,1336,2.896,1349,2.896,1425,2.076,1428,2.607,1430,2.391,1431,5.694,1442,2.607,1444,2.986,1451,2.896,1493,2.607,1518,2.896,1584,2.896,1607,2.607,1633,2.896,1659,5.128,1663,2.607,1673,2.607,1675,2.607,1677,2.607,1679,2.607,1681,2.607,1683,2.896,1684,3.334,1685,7.15,1686,6.145,1687,7.927,1688,5.619,1689,3.334,1690,4.797,1691,2.896,1692,6.258,1693,3.334,1694,3.334,1695,3.334,1696,3.334,1697,4.797,1698,3.334,1699,3.334,1700,4.88,1701,5.619,1702,3.334,1703,3.334,1704,3.334,1705,3.334,1706,3.334,1707,4.797,1708,4.797,1709,3.334,1710,3.334,1711,3.334,1712,3.334,1713,3.334,1714,5.619,1715,4.797,1716,4.797,1717,2.896,1718,3.334,1719,3.334,1720,4.797,1721,3.334,1722,3.334,1723,3.334,1724,2.896,1725,7.391,1726,3.334,1727,3.334,1728,3.334,1729,2.896,1730,4.797,1731,2.896,1732,4.797,1733,4.166,1734,3.334,1735,3.334,1736,3.334,1737,3.334,1738,3.334,1739,3.334,1740,3.334,1741,3.334,1742,3.334,1743,4.88,1744,2.896,1745,2.896,1746,2.896,1747,2.896,1748,2.896,1749,3.334,1750,3.334]],["title/dependencies.html",[125,2.267,1751,3.303]],["body/dependencies.html",[28,0.015,37,0.893,43,3.891,117,0.012,118,0.012,125,2.581,146,5.19,147,4.76,151,1.917,153,4.242,185,3.003,186,1.994,291,2.848,420,2.581,914,4.712,915,4.712,957,3.178,1305,4.712,1311,4.712,1312,4.712,1407,4.712,1408,4.712,1409,4.712,1752,5.425,1753,8.033,1754,5.425,1755,5.425,1756,5.425,1757,6.637,1758,5.425,1759,5.425,1760,5.425,1761,7.799,1762,5.425,1763,5.425,1764,5.425,1765,5.425,1766,5.425,1767,5.425,1768,5.425,1769,5.425,1770,5.425,1771,5.425,1772,5.425,1773,5.425,1774,5.425,1775,5.425,1776,5.425,1777,5.425,1778,5.425,1779,6.637,1780,5.425,1781,5.425,1782,5.425,1783,5.425,1784,5.425,1785,5.425,1786,5.425,1787,5.425,1788,5.425,1789,5.425,1790,5.425]],["title/miscellaneous/enumerations.html",[1791,1.828,1792,4.138]],["body/miscellaneous/enumerations.html",[18,0.451,28,0.012,33,1.863,82,1.856,83,1.771,117,0.012,118,0.012,140,1.644,219,2.071,283,5.309,298,2.294,451,2.811,458,3.389,460,3.23,506,1.525,514,3.389,737,1.643,785,2.679,786,2.956,793,2.956,794,3.564,795,2.811,796,2.811,797,2.811,798,2.811,799,2.447,800,3.299,1493,4.404,1498,4.892,1499,4.892,1500,4.892,1501,4.892,1502,4.892,1503,6.331,1504,4.892,1505,4.892,1506,4.892,1507,4.892,1508,4.892,1509,4.892,1510,5.7,1511,5.897,1512,5.309,1513,5.897,1791,3.118,1792,4.892,1793,5.632,1794,5.632,1795,4.892]],["title/miscellaneous/functions.html",[180,2.501,1791,1.828]],["body/miscellaneous/functions.html",[18,0.481,28,0.014,77,1.26,82,1.403,117,0.012,118,0.012,163,5.861,180,3.157,182,1.163,183,1.362,219,2.596,584,3.934,746,3.33,793,3.157,1425,3.745,1607,5.861,1659,4.314,1664,5.225,1717,5.225,1729,6.133,1743,5.225,1744,6.51,1745,6.133,1791,3.33,1796,6.51,1797,6.016,1798,5.225,1799,6.016,1800,6.016]],["title/index.html",[18,0.264,425,1.374,944,2.583]],["body/index.html",[7,0.229,28,0.012,40,5.154,41,4.262,42,2.655,43,3.909,44,2.447,45,2.476,46,1.552,47,4.262,48,2.861,51,5.204,52,5.781,53,4.734,54,4.734,55,4.734,56,2.593,57,4.734,61,4.734,62,3.023,64,4.734,66,6.866,70,1.926,91,1.852,117,0.012,118,0.012,173,3.909,180,3.494,316,3.56,523,3.494,737,1.942,826,4.262,833,4.734,857,3.909,971,4.734,982,6.666,1190,6.666,1549,4.734,1801,5.45,1802,5.45,1803,5.45,1804,5.45,1805,8.087,1806,5.45,1807,7.186,1808,6.656,1809,5.45,1810,5.45,1811,5.45,1812,6.656,1813,5.45,1814,5.45,1815,5.45,1816,5.45,1817,5.45,1818,5.45,1819,6.656,1820,5.45,1821,5.45,1822,5.45,1823,5.45,1824,5.45,1825,5.45,1826,4.734]],["title/license.html",[425,1.374,944,2.583,1827,2.869]],["body/license.html",[7,0.177,28,0.012,45,3.058,62,2.522,73,5.665,74,4.342,75,4.342,117,0.012,118,0.012,128,2.412,141,2.772,219,2.041,243,2.412,495,2.915,521,2.915,565,2.915,670,3.803,751,4.828,1135,4.823,1141,4.823,1178,4.823,1252,5.847,1548,4.823,1596,4.823,1826,4.823,1827,4.823,1828,5.553,1829,5.553,1830,5.553,1831,5.553,1832,5.553,1833,6.732,1834,7.532,1835,8.064,1836,6.732,1837,5.553,1838,7.245,1839,5.553,1840,5.553,1841,5.553,1842,5.553,1843,5.553,1844,5.553,1845,5.553,1846,5.553,1847,5.553,1848,5.553,1849,5.553,1850,5.553,1851,6.732,1852,6.732,1853,5.553,1854,5.553,1855,6.732,1856,5.553,1857,5.553,1858,5.553,1859,5.553,1860,5.553,1861,5.553,1862,5.553,1863,5.553,1864,5.553,1865,5.553,1866,5.553,1867,5.553,1868,5.553,1869,5.553,1870,5.553,1871,5.553,1872,5.553]],["title/modules.html",[123,1.465]],["body/modules.html",[28,0.012,117,0.012,118,0.012,123,1.604,124,4.249,133,3.943,134,3.943,135,3.943,136,3.943,137,3.28,138,3.943,147,5.809,572,3.099,1066,3.47,1101,3.943,1192,6.469,1260,7.034,1398,4.249,1403,3.943,1873,8.099,1874,8.216]],["title/overview.html",[1875,4.701]],["body/overview.html",[0,0.644,1,1.936,28,0.015,38,0.152,39,0.008,67,1.108,79,2.349,81,2.011,85,2.011,88,2.349,90,2.011,93,1.936,95,2.349,97,2.011,99,2.349,102,2.011,105,2.011,107,2.011,109,2.011,111,1.936,113,2.011,115,2.011,117,0.01,118,0.01,123,1.536,124,5.848,125,2.02,126,2.229,127,2.229,128,1.845,129,3.688,130,3.688,131,3.688,132,3.688,133,4.253,134,4.73,135,4.73,136,4.97,137,4.449,138,4.73,139,2.577,140,1.028,141,2.12,178,1.694,226,0.885,232,1.443,254,2.658,256,3.189,258,3.537,260,3.743,357,3.688,358,3.688,823,3.978,959,3.688,960,3.688,961,3.537,1066,4.373,1098,3.688,1099,3.688,1100,3.688,1101,4.73,1119,3.743,1126,3.978,1297,3.688,1298,3.688,1299,3.688,1300,3.688,1329,3.688,1330,3.688,1398,5.953,1399,3.688,1400,3.688,1401,3.688,1402,3.688,1403,4.253,1514,3.688,1515,3.688,1618,3.688,1733,3.688,1875,3.688,1876,4.246,1877,4.246,1878,4.246,1879,4.246]],["title/routes.html",[178,2.159]],["body/routes.html",[28,0.013,117,0.013,118,0.013,178,2.589]],["title/miscellaneous/typealiases.html",[1791,1.828,1880,4.765]],["body/miscellaneous/typealiases.html",[18,0.495,28,0.014,30,1.06,31,0.587,117,0.013,118,0.013,140,1.497,271,1.389,696,4.835,706,6.584,785,2.942,786,3.246,795,3.086,796,3.086,797,3.086,798,3.086,808,4.196,1791,3.423,1795,5.371,1796,5.371,1881,6.184]],["title/miscellaneous/variables.html",[1692,3.726,1791,1.828]],["body/miscellaneous/variables.html",[18,0.221,28,0.015,30,0.961,31,0.743,32,1.975,33,1.766,38,0.227,42,2.236,44,1.533,46,0.972,48,1.447,56,1.312,82,0.972,106,0.937,117,0.007,118,0.007,137,2.783,139,1.252,171,1.473,180,2.639,182,0.454,191,1.977,194,1.644,201,2.304,226,0.574,234,1.263,257,1.735,270,1.894,271,1.259,298,2.359,305,1.848,334,3.102,336,1.904,339,1.055,351,2.395,352,3.621,362,1.811,382,2.392,401,2.308,406,2.005,442,1.811,452,1.376,455,1.376,458,1.376,460,1.312,473,1.312,487,1.147,499,2.797,500,1.312,501,1.376,506,1.63,511,1.447,512,1.811,537,1.376,675,1.447,676,1.447,677,1.252,681,1.447,693,1.894,737,2.061,746,4.026,751,2.99,799,2.615,814,1.717,821,3.346,838,2.775,847,3.26,862,5.88,916,3.931,931,3.621,933,2.395,936,2.395,969,1.717,995,5.419,1014,1.977,1038,3.931,1042,1.977,1066,3.283,1067,2.156,1068,2.395,1069,2.395,1070,2.395,1072,2.395,1073,2.395,1074,2.395,1075,2.395,1076,2.395,1077,2.395,1078,2.395,1079,2.395,1080,2.395,1081,2.395,1082,2.395,1083,2.395,1235,2.395,1295,2.395,1296,2.395,1301,2.156,1304,2.395,1306,2.395,1308,2.395,1309,2.395,1310,2.395,1425,3.13,1428,2.156,1430,1.977,1431,2.156,1432,3.621,1435,3.621,1437,5.499,1438,6.455,1441,2.395,1442,4.382,1443,2.395,1444,4.668,1445,2.395,1446,2.395,1447,2.395,1448,2.395,1449,2.395,1450,2.395,1494,2.156,1495,2.156,1496,4.95,1510,2.156,1512,2.156,1537,2.395,1554,5.499,1659,1.977,1663,3.931,1673,3.931,1674,2.395,1675,3.931,1676,2.395,1677,3.931,1678,2.395,1679,3.931,1680,2.395,1681,3.931,1682,2.395,1691,2.395,1692,2.156,1700,3.621,1724,2.395,1731,3.621,1746,2.395,1747,2.395,1748,2.395,1791,1.526,1798,5.499,1882,6.77,1883,2.757,1884,2.757,1885,2.757,1886,2.757,1887,2.757,1888,2.757,1889,2.757,1890,2.757,1891,2.757,1892,5.028,1893,5.028,1894,5.028,1895,4.169,1896,4.169,1897,5.605,1898,2.757,1899,5.028,1900,2.757,1901,4.169,1902,2.757,1903,2.757,1904,4.169,1905,2.757,1906,2.757,1907,2.757,1908,2.757,1909,5.605,1910,2.757,1911,4.169,1912,2.757,1913,5.605,1914,2.757,1915,2.757,1916,2.757,1917,2.757,1918,2.757,1919,2.757,1920,2.757,1921,2.757,1922,2.757,1923,2.757,1924,2.757,1925,2.757,1926,2.757,1927,2.757,1928,2.757,1929,2.757,1930,2.757,1931,2.757,1932,2.757,1933,2.757,1934,2.757,1935,2.757,1936,2.757,1937,4.169,1938,2.757,1939,2.757,1940,4.169,1941,2.757,1942,2.757,1943,2.757,1944,2.757,1945,2.757,1946,2.757,1947,2.757,1948,2.757,1949,5.028,1950,2.757,1951,4.169,1952,2.757,1953,2.757,1954,2.757,1955,2.757,1956,2.757,1957,2.757,1958,2.757,1959,2.757,1960,2.757,1961,4.169,1962,2.757,1963,2.757,1964,2.757,1965,2.757,1966,2.757,1967,2.757,1968,2.757,1969,2.757,1970,2.757,1971,2.757,1972,2.757]]],"invertedIndex":[["",{"_index":28,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"classes/Clock.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":336,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"interfaces/Tag.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.009",{"_index":1957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.3",{"_index":930,"title":{},"body":{"components/HomeComponent.html":{}}}],["0.404",{"_index":1958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.5",{"_index":939,"title":{},"body":{"components/HomeComponent.html":{}}}],["0.8.26",{"_index":1790,"title":{},"body":{"dependencies.html":{}}}],["0.91",{"_index":1956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0/1",{"_index":1687,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1732,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1686,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1714,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1685,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1690,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1741,"title":{},"body":{"coverage.html":{}}}],["004ba0",{"_index":1945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["01d",{"_index":1963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["02d",{"_index":1964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["03d",{"_index":1965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["04d",{"_index":1966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["09d",{"_index":1967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0m",{"_index":1908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":339,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["1.1.0",{"_index":1777,"title":{},"body":{"dependencies.html":{}}}],["1.455",{"_index":1959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1/1",{"_index":1725,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1716,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1706,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1704,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1701,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1728,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1742,"title":{},"body":{"coverage.html":{}}}],["10/15",{"_index":1689,"title":{},"body":{"coverage.html":{}}}],["10/19",{"_index":1696,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":683,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"coverage.html":{}}}],["1000",{"_index":1572,"title":{},"body":{"injectables/WeatherService.html":{}}}],["10000",{"_index":1949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10d",{"_index":1968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11",{"_index":1876,"title":{},"body":{"overview.html":{}}}],["11/15",{"_index":1719,"title":{},"body":{"coverage.html":{}}}],["11/32",{"_index":1723,"title":{},"body":{"coverage.html":{}}}],["11d",{"_index":1969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12",{"_index":1878,"title":{},"body":{"overview.html":{}}}],["12.476358",{"_index":1920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12/35",{"_index":1698,"title":{},"body":{"coverage.html":{}}}],["13d",{"_index":1970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14",{"_index":1720,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":1733,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["16",{"_index":1058,"title":{},"body":{"components/MapComponent.html":{},"coverage.html":{}}}],["17",{"_index":1877,"title":{},"body":{"overview.html":{}}}],["18",{"_index":1041,"title":{},"body":{"components/MapComponent.html":{},"coverage.html":{}}}],["1976d2",{"_index":1946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1]).patchvalu",{"_index":774,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["1].destin",{"_index":754,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["2",{"_index":442,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["2.0.8",{"_index":1782,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":1783,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":1780,"title":{},"body":{"dependencies.html":{}}}],["2.5.7",{"_index":1787,"title":{},"body":{"dependencies.html":{}}}],["2/11",{"_index":1699,"title":{},"body":{"coverage.html":{}}}],["2/2",{"_index":1730,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":1702,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1700,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["2018",{"_index":1829,"title":{},"body":{"license.html":{}}}],["21",{"_index":1739,"title":{},"body":{"coverage.html":{}}}],["21/44",{"_index":1711,"title":{},"body":{"coverage.html":{}}}],["24",{"_index":1295,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{},"miscellaneous/variables.html":{}}}],["25",{"_index":1703,"title":{},"body":{"coverage.html":{}}}],["250px",{"_index":1395,"title":{},"body":{"components/UiComponent.html":{}}}],["3",{"_index":693,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["3/14",{"_index":1740,"title":{},"body":{"coverage.html":{}}}],["3/16",{"_index":1738,"title":{},"body":{"coverage.html":{}}}],["3/18",{"_index":1735,"title":{},"body":{"coverage.html":{}}}],["3/19",{"_index":1736,"title":{},"body":{"coverage.html":{}}}],["3/20",{"_index":1734,"title":{},"body":{"coverage.html":{}}}],["3/21",{"_index":1721,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["33",{"_index":1705,"title":{},"body":{"coverage.html":{}}}],["34",{"_index":1697,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1042,"title":{},"body":{"components/MapComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["4/6",{"_index":1737,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":1727,"title":{},"body":{"coverage.html":{}}}],["4/9",{"_index":1694,"title":{},"body":{"coverage.html":{}}}],["41.910943",{"_index":1919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["44",{"_index":1693,"title":{},"body":{"coverage.html":{}}}],["45",{"_index":1712,"title":{},"body":{"coverage.html":{}}}],["47",{"_index":1710,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":1937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.0.3",{"_index":1778,"title":{},"body":{"dependencies.html":{}}}],["5.1.5",{"_index":1771,"title":{},"body":{"dependencies.html":{}}}],["5/11",{"_index":1713,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":1708,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1715,"title":{},"body":{"coverage.html":{}}}],["5000",{"_index":1391,"title":{},"body":{"components/UiComponent.html":{}}}],["50d",{"_index":1971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["52",{"_index":1695,"title":{},"body":{"coverage.html":{}}}],["57",{"_index":1726,"title":{},"body":{"coverage.html":{}}}],["6.0.0",{"_index":1759,"title":{},"body":{"dependencies.html":{}}}],["6.0.1",{"_index":1761,"title":{},"body":{"dependencies.html":{}}}],["6.0.2",{"_index":1773,"title":{},"body":{"dependencies.html":{}}}],["6.0.3",{"_index":1753,"title":{},"body":{"dependencies.html":{}}}],["6.0.5",{"_index":1775,"title":{},"body":{"dependencies.html":{}}}],["6.1.2",{"_index":1766,"title":{},"body":{"dependencies.html":{}}}],["6.1.4",{"_index":1764,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":1788,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":1757,"title":{},"body":{"dependencies.html":{}}}],["6.5.2",{"_index":1785,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1571,"title":{},"body":{"injectables/WeatherService.html":{}}}],["63a4ff",{"_index":1947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["66",{"_index":1688,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1879,"title":{},"body":{"overview.html":{}}}],["70",{"_index":936,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["73",{"_index":1718,"title":{},"body":{"coverage.html":{}}}],["76d219",{"_index":1929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["83",{"_index":1707,"title":{},"body":{"coverage.html":{}}}],["840",{"_index":941,"title":{},"body":{"components/HomeComponent.html":{}}}],["9",{"_index":1618,"title":{},"body":{"components/WizardComponent.html":{},"overview.html":{}}}],["about'},{'nam",{"_index":78,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["about.component.html",{"_index":17,"title":{},"body":{"components/AboutComponent.html":{}}}],["about.component.scss",{"_index":15,"title":{},"body":{"components/AboutComponent.html":{}}}],["about/about.compon",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["aboutcompon",{"_index":1,"title":{"components/AboutComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["abov",{"_index":1850,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":206,"title":{},"body":{"classes/BaseComponent.html":{}}}],["abstractcontrol",{"_index":268,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["accessor",{"_index":286,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WizardComponent.html":{}}}],["account",{"_index":486,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["action",{"_index":219,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/WeatherComponent.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["action.payload",{"_index":1671,"title":{},"body":{"interfaces/WizardState.html":{}}}],["action.payload.map",{"_index":1670,"title":{},"body":{"interfaces/WizardState.html":{}}}],["action.payload.nextindex",{"_index":1672,"title":{},"body":{"interfaces/WizardState.html":{}}}],["action.payload.step",{"_index":1668,"title":{},"body":{"interfaces/WizardState.html":{}}}],["action.typ",{"_index":1666,"title":{},"body":{"interfaces/WizardState.html":{}}}],["actionreducermap",{"_index":1435,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["actions/wizard.act",{"_index":1662,"title":{},"body":{"interfaces/WizardState.html":{}}}],["activ",{"_index":1802,"title":{},"body":{"index.html":{}}}],["actual_compon",{"_index":116,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["add",{"_index":760,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/HomeComponent.html":{}}}],["adddestin",{"_index":716,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["adddestination(control",{"_index":723,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["addedge(edg",{"_index":607,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["addorigin",{"_index":717,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["addorigin(control",{"_index":725,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["addorupdatenode(nod",{"_index":587,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["address",{"_index":983,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{},"components/WizardComponent.html":{}}}],["addweathercondit",{"_index":1522,"title":{},"body":{"injectables/WeatherService.html":{}}}],["addweatherconditions(data",{"_index":1532,"title":{},"body":{"injectables/WeatherService.html":{}}}],["adjust",{"_index":501,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["adjustmentfactorcoeffici",{"_index":1955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["administr",{"_index":1910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["afterviewinit",{"_index":905,"title":{},"body":{"components/HomeComponent.html":{},"components/WeatherComponent.html":{}}}],["again",{"_index":1179,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["algorithm",{"_index":648,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"injectables/SimulationService.html":{},"interfaces/Tag.html":{}}}],["alias",{"_index":1881,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alreadi",{"_index":768,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["analysi",{"_index":1951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["and/or",{"_index":1845,"title":{},"body":{"license.html":{}}}],["angular",{"_index":64,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["angular/anim",{"_index":1752,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1758,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/stepp",{"_index":1605,"title":{},"body":{"components/WizardComponent.html":{}}}],["angular/cli",{"_index":1809,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":1305,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":1307,"title":{},"body":{"modules/SharedModule.html":{},"injectables/WeatherService.html":{}}}],["angular/compil",{"_index":1754,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":37,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"modules/MaterialModule.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":1311,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/form",{"_index":291,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WizardComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1755,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":957,"title":{},"body":{"components/InfoDialogComponent.html":{},"modules/MaterialModule.html":{},"components/MessageArchivedComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":185,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"modules/SharedModule.html":{},"components/UiComponent.html":{},"modules/UiRoutingModule.html":{},"dependencies.html":{}}}],["anim",{"_index":914,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{}}}],["animate('500m",{"_index":1907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animationtriggermetadata",{"_index":1904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["anime.timelin",{"_index":926,"title":{},"body":{"components/HomeComponent.html":{}}}],["animej",{"_index":915,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{}}}],["anoth",{"_index":1183,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["api",{"_index":982,"title":{},"body":{"injectables/LocationService.html":{},"index.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{}}}],["app.compon",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":121,"title":{},"body":{"components/AppComponent.html":{}}}],["app_initi",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":79,"title":{"components/AppComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appconfig",{"_index":1475,"title":{},"body":{"components/WeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["appconfig.apis.openweathermap.apikey",{"_index":1562,"title":{},"body":{"injectables/WeatherService.html":{}}}],["appconfig.apis.openweathermap.forecasturl",{"_index":1555,"title":{},"body":{"injectables/WeatherService.html":{}}}],["appconfig.apis.openweathermap.iconurl",{"_index":1490,"title":{},"body":{"components/WeatherComponent.html":{}}}],["appconfig.apis.openweathermap.weatherurl",{"_index":1556,"title":{},"body":{"injectables/WeatherService.html":{}}}],["appconfig.firebase.projectid",{"_index":1897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appli",{"_index":846,"title":{},"body":{"components/GoogleMapComponent.html":{},"injectables/SimulationService.html":{}}}],["applic",{"_index":1130,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["appmodul",{"_index":124,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppreloadingstrategi",{"_index":172,"title":{"classes/AppPreloadingStrategy.html":{}},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["approutingmodul",{"_index":133,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["archived.compon",{"_index":1315,"title":{},"body":{"modules/SharedModule.html":{},"components/UiComponent.html":{}}}],["archived.component.t",{"_index":1091,"title":{},"body":{"components/MessageArchivedComponent.html":{},"coverage.html":{}}}],["archived.component.ts:11",{"_index":1094,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["archived.component.ts:13",{"_index":1095,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["area",{"_index":969,"title":{},"body":{"injectables/LocationService.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["area'},{'nam",{"_index":104,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["area.compon",{"_index":1413,"title":{},"body":{"modules/UiModule.html":{}}}],["area.component.html",{"_index":1218,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.scss",{"_index":1217,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.t",{"_index":1216,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"coverage.html":{}}}],["area.component.ts:16",{"_index":1220,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:18",{"_index":1219,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:21",{"_index":1264,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:23",{"_index":1265,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:27",{"_index":1222,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:28",{"_index":1272,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:33",{"_index":1227,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:35",{"_index":1276,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:42",{"_index":1223,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:43",{"_index":1263,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:46",{"_index":1226,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:50",{"_index":1225,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:53",{"_index":1266,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:59",{"_index":1269,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:73",{"_index":1267,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:78",{"_index":1221,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:81",{"_index":1268,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area/search",{"_index":1215,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"modules/UiModule.html":{},"coverage.html":{}}}],["area/select",{"_index":1262,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{},"modules/UiModule.html":{},"coverage.html":{}}}],["areamaxlimit",{"_index":1923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["areaminlimit",{"_index":1925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["argmin",{"_index":365,"title":{},"body":{"injectables/DemandService.html":{}}}],["argmin(linkflow",{"_index":377,"title":{},"body":{"injectables/DemandService.html":{}}}],["argument",{"_index":381,"title":{},"body":{"injectables/DemandService.html":{}}}],["aris",{"_index":1872,"title":{},"body":{"license.html":{}}}],["array",{"_index":402,"title":{},"body":{"injectables/DemandService.html":{}}}],["assign",{"_index":384,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{}}}],["assignmentmatrix",{"_index":396,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["assignmentmatrix[z",{"_index":434,"title":{},"body":{"injectables/DemandService.html":{}}}],["associ",{"_index":1141,"title":{},"body":{"injectables/SchedulerService.html":{},"license.html":{}}}],["attach",{"_index":522,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["attribut",{"_index":518,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["author",{"_index":1862,"title":{},"body":{"license.html":{}}}],["avail",{"_index":1192,"title":{},"body":{"injectables/SchedulerService.html":{},"modules.html":{}}}],["b",{"_index":689,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["babdb",{"_index":1927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bachelor'",{"_index":54,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["bachelor\\'",{"_index":76,"title":{},"body":{"components/AboutComponent.html":{}}}],["bar",{"_index":1092,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["bar'},{'nam",{"_index":101,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["base",{"_index":438,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{}}}],["basecolor",{"_index":1926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basecompon",{"_index":203,"title":{"classes/BaseComponent.html":{}},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{}}}],["basecomponent:11",{"_index":279,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WeatherComponent.html":{}}}],["basecomponent:13",{"_index":278,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WeatherComponent.html":{}}}],["basecomponent:22",{"_index":282,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WeatherComponent.html":{}}}],["basecomponent:27",{"_index":280,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WeatherComponent.html":{}}}],["basecomponent:32",{"_index":281,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WeatherComponent.html":{}}}],["basecomponent:9",{"_index":285,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WeatherComponent.html":{}}}],["basictimelin",{"_index":925,"title":{},"body":{"components/HomeComponent.html":{}}}],["becom",{"_index":1187,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["belong",{"_index":407,"title":{},"body":{"injectables/DemandService.html":{}}}],["beta.15",{"_index":1760,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":452,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["blur",{"_index":1622,"title":{},"body":{"components/WizardComponent.html":{}}}],["boolean",{"_index":234,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"interfaces/LinkFlow.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["bound",{"_index":1047,"title":{},"body":{"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WizardComponent.html":{}}}],["break",{"_index":341,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"interfaces/Tag.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["broken",{"_index":1507,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["brokencloud",{"_index":1506,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["brows",{"_index":1874,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":637,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["buildodpair",{"_index":246,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["buildodpair(odpair",{"_index":264,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["built",{"_index":63,"title":{},"body":{"components/AboutComponent.html":{}}}],["c",{"_index":1828,"title":{},"body":{"license.html":{}}}],["calc",{"_index":1137,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["calcassignmentmatrix(odpair",{"_index":644,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["calccapac",{"_index":467,"title":{},"body":{"classes/Edge.html":{}}}],["calccapacity(factor",{"_index":497,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["calcincidencematrix",{"_index":634,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["calclinkflow",{"_index":468,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["calcodmatrix",{"_index":367,"title":{},"body":{"injectables/DemandService.html":{}}}],["calcpathcosts(odpair",{"_index":695,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["calcshortestpath",{"_index":1210,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["calcshortestpaths(odpair",{"_index":627,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["calcshortestpathsprobabilities(odpair",{"_index":678,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["calcul",{"_index":386,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{}}}],["calendar_today",{"_index":1290,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["call",{"_index":1541,"title":{},"body":{"injectables/WeatherService.html":{}}}],["cancomponentdeactiv",{"_index":227,"title":{"interfaces/CanComponentDeactivate.html":{}},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/UiComponent.html":{},"coverage.html":{}}}],["candeactiv",{"_index":231,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/UiComponent.html":{},"modules/UiRoutingModule.html":{}}}],["candeactivate(compon",{"_index":236,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{}}}],["candeactivateguard",{"_index":235,"title":{"injectables/CanDeactivateGuard.html":{}},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"modules/SharedModule.html":{},"modules/UiRoutingModule.html":{},"coverage.html":{}}}],["cannnot",{"_index":1181,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["capac",{"_index":455,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["case",{"_index":335,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{}}}],["catch",{"_index":630,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["catch((error",{"_index":1237,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["catcherror",{"_index":1552,"title":{},"body":{"injectables/WeatherService.html":{}}}],["catcherror((error",{"_index":1566,"title":{},"body":{"injectables/WeatherService.html":{}}}],["cd",{"_index":1821,"title":{},"body":{"index.html":{}}}],["center",{"_index":814,"title":{},"body":{"components/GoogleMapComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["central1",{"_index":1896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["central1/networkdata",{"_index":1902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["central1/trafficdata",{"_index":1903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chang",{"_index":83,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"miscellaneous/enumerations.html":{}}}],["changedemand",{"_index":368,"title":{},"body":{"injectables/DemandService.html":{}}}],["changedemand(demand",{"_index":387,"title":{},"body":{"injectables/DemandService.html":{}}}],["changeofconditionscompon",{"_index":81,"title":{"components/ChangeOfConditionsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["changes['cent",{"_index":866,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["changes['zoom",{"_index":868,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["changeweath",{"_index":1523,"title":{},"body":{"injectables/WeatherService.html":{}}}],["changeweather(weath",{"_index":1534,"title":{},"body":{"injectables/WeatherService.html":{}}}],["charg",{"_index":1832,"title":{},"body":{"license.html":{}}}],["check",{"_index":405,"title":{},"body":{"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"injectables/SchedulerService.html":{}}}],["circular",{"_index":621,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["claim",{"_index":1865,"title":{},"body":{"license.html":{}}}],["class",{"_index":39,"title":{"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"classes/Clock.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"classes/GoOn.html":{},"classes/Heap.html":{},"classes/MapChanged.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"classes/Clock.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"coverage.html":{},"overview.html":{}}}],["clear",{"_index":1499,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["clearski",{"_index":1498,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["cli",{"_index":1808,"title":{},"body":{"index.html":{}}}],["click",{"_index":832,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["clock",{"_index":355,"title":{"classes/Clock.html":{}},"body":{"classes/Clock.html":{},"coverage.html":{}}}],["cloud",{"_index":1503,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["cloudfunctions.net/networkdata",{"_index":1898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cloudfunctions.net/trafficdata",{"_index":1900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_appmodul",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_demandmodul",{"_index":357,"title":{},"body":{"modules/DemandModule.html":{},"overview.html":{}}}],["cluster_demandmodule_provid",{"_index":358,"title":{},"body":{"modules/DemandModule.html":{},"overview.html":{}}}],["cluster_locationmodul",{"_index":959,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_provid",{"_index":960,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_networkmodul",{"_index":1098,"title":{},"body":{"modules/NetworkModule.html":{},"overview.html":{}}}],["cluster_networkmodule_import",{"_index":1099,"title":{},"body":{"modules/NetworkModule.html":{},"overview.html":{}}}],["cluster_networkmodule_provid",{"_index":1100,"title":{},"body":{"modules/NetworkModule.html":{},"overview.html":{}}}],["cluster_sharedmodul",{"_index":1297,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declar",{"_index":1298,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_export",{"_index":1300,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_import",{"_index":1299,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_simulationmodul",{"_index":1329,"title":{},"body":{"modules/SimulationModule.html":{},"overview.html":{}}}],["cluster_simulationmodule_provid",{"_index":1330,"title":{},"body":{"modules/SimulationModule.html":{},"overview.html":{}}}],["cluster_uimodul",{"_index":1399,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_uimodule_declar",{"_index":1400,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_uimodule_import",{"_index":1401,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_uimodule_provid",{"_index":1402,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_weathermodul",{"_index":1514,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["cluster_weathermodule_provid",{"_index":1515,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["code",{"_index":60,"title":{},"body":{"components/AboutComponent.html":{},"modules/MaterialModule.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{}}}],["codeaddress",{"_index":974,"title":{},"body":{"injectables/LocationService.html":{}}}],["codeaddress(address",{"_index":979,"title":{},"body":{"injectables/LocationService.html":{}}}],["coeffici",{"_index":1950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["color",{"_index":1944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["combin",{"_index":508,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["combine(existingnode.incomingedg",{"_index":598,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["combine(existingnode.outgoingedg",{"_index":601,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["combine(existingnode.tag",{"_index":595,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["commonmodul",{"_index":1304,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["complet",{"_index":759,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/HomeComponent.html":{}}}],["compon",{"_index":0,"title":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiRoutingModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component.candeactiv",{"_index":237,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{}}}],["component_templ",{"_index":72,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["comput",{"_index":56,"title":{},"body":{"components/AboutComponent.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["condit",{"_index":243,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"license.html":{}}}],["conditions'},{'nam",{"_index":84,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["conditions.compon",{"_index":1418,"title":{},"body":{"modules/UiModule.html":{}}}],["conditions.component.html",{"_index":245,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.scss",{"_index":244,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.t",{"_index":241,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"coverage.html":{}}}],["conditions.component.ts:102",{"_index":274,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:106",{"_index":276,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:113",{"_index":269,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:117",{"_index":265,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:26",{"_index":262,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:28",{"_index":263,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:30",{"_index":284,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:32",{"_index":288,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:34",{"_index":261,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:49",{"_index":272,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:55",{"_index":277,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:76",{"_index":273,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions/chang",{"_index":240,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"modules/UiModule.html":{},"coverage.html":{}}}],["config",{"_index":306,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{}}}],["config.json",{"_index":1819,"title":{},"body":{"index.html":{}}}],["config.t",{"_index":1731,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configur",{"_index":1972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connect",{"_index":1178,"title":{},"body":{"injectables/SchedulerService.html":{},"license.html":{}}}],["consol",{"_index":1810,"title":{},"body":{"index.html":{}}}],["const",{"_index":193,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Map.html":{},"components/MapComponent.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"modules/SharedModule.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"components/AboutComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["constructor(@inject(mat_snack_bar_data",{"_index":1097,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["constructor(data",{"_index":1093,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["constructor(dialogref",{"_index":950,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["constructor(edgeid",{"_index":470,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["constructor(elementref",{"_index":910,"title":{},"body":{"components/HomeComponent.html":{},"components/WeatherComponent.html":{}}}],["constructor(formbuild",{"_index":251,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SimulationComponent.html":{},"components/WizardComponent.html":{}}}],["constructor(http",{"_index":1528,"title":{},"body":{"injectables/WeatherService.html":{}}}],["constructor(map",{"_index":822,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["constructor(maticonregistri",{"_index":1085,"title":{},"body":{"modules/MaterialModule.html":{}}}],["constructor(network",{"_index":375,"title":{},"body":{"injectables/DemandService.html":{}}}],["constructor(nodeid",{"_index":544,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["constructor(payload",{"_index":789,"title":{},"body":{"classes/GoOn.html":{},"classes/MapChanged.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{}}}],["constructor(priv",{"_index":422,"title":{},"body":{"injectables/DemandService.html":{},"components/HomeComponent.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{}}}],["constructor(publ",{"_index":802,"title":{},"body":{"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/MapChanged.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{}}}],["constructor(relationid",{"_index":570,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["constructor(rout",{"_index":1355,"title":{},"body":{"components/UiComponent.html":{}}}],["constructor(stor",{"_index":1022,"title":{},"body":{"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"injectables/WizardService.html":{}}}],["constructor(wizard",{"_index":1124,"title":{},"body":{"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["contain",{"_index":882,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["continu",{"_index":353,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["contract",{"_index":1869,"title":{},"body":{"license.html":{}}}],["control",{"_index":337,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{}}}],["control.get([control.length",{"_index":773,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["control.length",{"_index":741,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["control.push(this.formbuilder.group",{"_index":772,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["control.removeat(i",{"_index":742,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["control.valu",{"_index":748,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["convert",{"_index":1231,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"injectables/WeatherService.html":{}}}],["cooper",{"_index":1043,"title":{},"body":{"components/MapComponent.html":{}}}],["coordin",{"_index":968,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["copi",{"_index":1834,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":73,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"license.html":{}}}],["copyright&nbsp;©&nbsp",{"_index":49,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{}}}],["core",{"_index":1786,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":1142,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["correctgraph",{"_index":1191,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["cost",{"_index":659,"title":{},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["count",{"_index":543,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["coverag",{"_index":1683,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":857,"title":{},"body":{"components/GoogleMapComponent.html":{},"injectables/SchedulerService.html":{},"components/WizardComponent.html":{},"index.html":{}}}],["createfeatureselector",{"_index":1436,"title":{},"body":{"interfaces/UiState.html":{}}}],["createfeatureselector('ui",{"_index":1443,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["creategraph",{"_index":1180,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["createmap",{"_index":812,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["createmap(el",{"_index":849,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["createselector",{"_index":1437,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["cross",{"_index":640,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["curr",{"_index":902,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["current",{"_index":487,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{},"interfaces/UiState.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["currentstep",{"_index":334,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["currentyear",{"_index":20,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{}}}],["d",{"_index":346,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["d.count",{"_index":666,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["d2191a",{"_index":1933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d27519",{"_index":1931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damag",{"_index":1866,"title":{},"body":{"license.html":{}}}],["data",{"_index":46,"title":{},"body":{"components/AboutComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Map.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["data.list.length",{"_index":1568,"title":{},"body":{"injectables/WeatherService.html":{}}}],["data.list[0",{"_index":1582,"title":{},"body":{"injectables/WeatherService.html":{}}}],["data.list[0].dt",{"_index":1578,"title":{},"body":{"injectables/WeatherService.html":{}}}],["date",{"_index":1274,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{},"injectables/WeatherService.html":{}}}],["date().getfullyear",{"_index":35,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{}}}],["datetim",{"_index":1409,"title":{},"body":{"modules/UiModule.html":{},"dependencies.html":{}}}],["day",{"_index":1277,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["deactiv",{"_index":229,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"modules/SharedModule.html":{},"components/UiComponent.html":{},"modules/UiRoutingModule.html":{},"coverage.html":{}}}],["deal",{"_index":1836,"title":{},"body":{"license.html":{}}}],["declar",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["decor",{"_index":953,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/MessageArchivedComponent.html":{},"components/WizardComponent.html":{}}}],["deepclon",{"_index":1660,"title":{},"body":{"interfaces/WizardState.html":{}}}],["deepclone(initialwizardst",{"_index":1665,"title":{},"body":{"interfaces/WizardState.html":{}}}],["deepclone(state.step",{"_index":1669,"title":{},"body":{"interfaces/WizardState.html":{}}}],["default",{"_index":32,"title":{},"body":{"components/AboutComponent.html":{},"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":24,"title":{},"body":{"components/AboutComponent.html":{},"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["degre",{"_index":55,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["delay",{"_index":935,"title":{},"body":{"components/HomeComponent.html":{}}}],["delet",{"_index":776,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["deleteodpair",{"_index":718,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["deleteodpair(i",{"_index":727,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand",{"_index":259,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"components/WizardComponent.html":{}}}],["demand'},{'nam",{"_index":87,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["demand.compon",{"_index":1416,"title":{},"body":{"modules/UiModule.html":{}}}],["demand.component.html",{"_index":715,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.scss",{"_index":714,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.t",{"_index":713,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"coverage.html":{}}}],["demand.component.ts:142",{"_index":726,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:150",{"_index":724,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:23",{"_index":721,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:25",{"_index":722,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:27",{"_index":735,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:29",{"_index":736,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:31",{"_index":720,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:44",{"_index":729,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:50",{"_index":734,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:59",{"_index":730,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:81",{"_index":731,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:85",{"_index":728,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:93",{"_index":733,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.length",{"_index":430,"title":{},"body":{"injectables/DemandService.html":{}}}],["demand.servic",{"_index":360,"title":{},"body":{"modules/DemandModule.html":{}}}],["demand/demand.modul",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["demand/demand.servic",{"_index":295,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/SchedulerService.html":{}}}],["demand/estim",{"_index":712,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"modules/UiModule.html":{},"coverage.html":{}}}],["demandmodul",{"_index":134,"title":{"modules/DemandModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"modules.html":{},"overview.html":{}}}],["demandservic",{"_index":260,"title":{"injectables/DemandService.html":{}},"body":{"components/ChangeOfConditionsComponent.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"injectables/SchedulerService.html":{},"coverage.html":{},"overview.html":{}}}],["deni",{"_index":1253,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["denomin",{"_index":687,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["densiti",{"_index":456,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["dep",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["depend",{"_index":125,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{},"overview.html":{}}}],["describ",{"_index":515,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["descript",{"_index":205,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/Heap.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SimulationService.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{}}}],["destin",{"_index":457,"title":{},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["develop",{"_index":52,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["dialog",{"_index":947,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/UiComponent.html":{}}}],["dialog'},{'nam",{"_index":96,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["dialog.compon",{"_index":1316,"title":{},"body":{"modules/SharedModule.html":{},"components/UiComponent.html":{}}}],["dialog.component.t",{"_index":946,"title":{},"body":{"components/InfoDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:18",{"_index":952,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:21",{"_index":955,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:22",{"_index":954,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialogref",{"_index":949,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/UiComponent.html":{}}}],["dialogref.afterclos",{"_index":1397,"title":{},"body":{"components/UiComponent.html":{}}}],["dialogresult",{"_index":1386,"title":{},"body":{"components/UiComponent.html":{}}}],["direct",{"_index":70,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"index.html":{}}}],["directives/pairs.direct",{"_index":1608,"title":{},"body":{"components/WizardComponent.html":{}}}],["disabledefaultui",{"_index":815,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["disabledoubleclickzoom",{"_index":816,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["display",{"_index":843,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["dissert",{"_index":53,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["distanc",{"_index":458,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["distribut",{"_index":1843,"title":{},"body":{"license.html":{}}}],["doc",{"_index":1803,"title":{},"body":{"index.html":{}}}],["document",{"_index":62,"title":{},"body":{"components/AboutComponent.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["doesn't",{"_index":1259,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["domand",{"_index":516,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["domsanit",{"_index":1084,"title":{},"body":{"modules/MaterialModule.html":{}}}],["domsanitizer.bypasssecuritytrustresourceurl('./assets/images/ic_code_24px.svg",{"_index":1089,"title":{},"body":{"modules/MaterialModule.html":{}}}],["domsanitizer.bypasssecuritytrustresourceurl('./assets/images/ic_more_vert_24px.svg",{"_index":1088,"title":{},"body":{"modules/MaterialModule.html":{}}}],["doubl",{"_index":831,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["draw",{"_index":1138,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["drawingopt",{"_index":459,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["durat",{"_index":460,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["durationintraff",{"_index":461,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["dynam",{"_index":1756,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":702,"title":{},"body":{"classes/EnumValues.html":{}}}],["e[nam",{"_index":710,"title":{},"body":{"classes/EnumValues.html":{}}}],["each",{"_index":413,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"components/GoogleMapComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{}}}],["earth'",{"_index":531,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["eas",{"_index":933,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["edg",{"_index":406,"title":{"classes/Edge.html":{}},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["edge.calccapacity(factor",{"_index":647,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["edge.edgeid",{"_index":606,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["edge.origin.nodeid",{"_index":667,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["edgeid",{"_index":462,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["edges.find(valu",{"_index":673,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["edges.push(edg",{"_index":674,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["effectsmodul",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"modules/UiModule.html":{}}}],["effectsmodule.forfeatur",{"_index":1427,"title":{},"body":{"modules/UiModule.html":{}}}],["effectsmodule.forroot",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["el",{"_index":852,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{}}}],["element",{"_index":69,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["element.innerhtml",{"_index":924,"title":{},"body":{"components/HomeComponent.html":{}}}],["element.innertext",{"_index":921,"title":{},"body":{"components/HomeComponent.html":{}}}],["elementref",{"_index":824,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/WeatherComponent.html":{}}}],["elementtyp",{"_index":1911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["empti",{"_index":1292,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["enabl",{"_index":833,"title":{},"body":{"components/GoogleMapComponent.html":{},"index.html":{}}}],["enables/dis",{"_index":829,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["encapsul",{"_index":1018,"title":{},"body":{"components/MapComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["engin",{"_index":57,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["enter",{"_index":1293,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["entrycompon",{"_index":1302,"title":{},"body":{"modules/SharedModule.html":{}}}],["enum",{"_index":513,"title":{},"body":{"classes/Edge.html":{},"classes/GoOn.html":{},"interfaces/LinkFlow.html":{},"classes/MapChanged.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"interfaces/WeatherConditions.html":{}}}],["enumer",{"_index":1792,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumvalu",{"_index":304,"title":{"classes/EnumValues.html":{}},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"coverage.html":{}}}],["enumvalues.getvalues(pathtyp",{"_index":739,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["enumvalues.getvalues(weatherdescript",{"_index":312,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["enumvaluetyp",{"_index":706,"title":{},"body":{"classes/EnumValues.html":{},"miscellaneous/typealiases.html":{}}}],["environ",{"_index":995,"title":{},"body":{"injectables/LocationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.test",{"_index":997,"title":{},"body":{"injectables/LocationService.html":{}}}],["environments/environ",{"_index":996,"title":{},"body":{"injectables/LocationService.html":{}}}],["eppstein",{"_index":649,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["error",{"_index":506,"title":{},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["error.cod",{"_index":1250,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["error.permission_deni",{"_index":1251,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["error.position_unavail",{"_index":1254,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["error.timeout",{"_index":1256,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["estim",{"_index":86,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["estimate(linkflow",{"_index":389,"title":{},"body":{"injectables/DemandService.html":{}}}],["estimateofdemandcompon",{"_index":85,"title":{"components/EstimateOfDemandComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["estimations[x",{"_index":435,"title":{},"body":{"injectables/DemandService.html":{}}}],["evalu",{"_index":1542,"title":{},"body":{"injectables/WeatherService.html":{}}}],["event",{"_index":1596,"title":{},"body":{"components/WizardComponent.html":{},"license.html":{}}}],["event.previouslyselectedindex",{"_index":1625,"title":{},"body":{"components/WizardComponent.html":{}}}],["event.selectedindex",{"_index":1626,"title":{},"body":{"components/WizardComponent.html":{}}}],["existingnod",{"_index":588,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["existingnode.incomingedg",{"_index":597,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["existingnode.lat",{"_index":590,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["existingnode.lon",{"_index":592,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["existingnode.outgoingedg",{"_index":600,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["existingnode.tag",{"_index":594,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["exit",{"_index":1352,"title":{},"body":{"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["exp",{"_index":685,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["export",{"_index":38,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"classes/Clock.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["express",{"_index":1857,"title":{},"body":{"license.html":{}}}],["extend",{"_index":242,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{},"components/WeatherComponent.html":{}}}],["extract",{"_index":664,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["factor",{"_index":500,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["fals",{"_index":201,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["featuretyp",{"_index":1909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["featureuist",{"_index":1442,"title":{},"body":{"interfaces/UiState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["few",{"_index":1502,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["fewcloud",{"_index":1501,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"classes/Clock.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["firebas",{"_index":66,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["firebaserc",{"_index":1818,"title":{},"body":{"index.html":{}}}],["fit",{"_index":1860,"title":{},"body":{"license.html":{}}}],["flexlayoutmodul",{"_index":1310,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["flow",{"_index":383,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"injectables/SimulationService.html":{},"interfaces/Tag.html":{}}}],["follow",{"_index":1135,"title":{},"body":{"injectables/SchedulerService.html":{},"license.html":{}}}],["footer",{"_index":778,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'nam",{"_index":89,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["footer.component.html",{"_index":780,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":779,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.compon",{"_index":1314,"title":{},"body":{"modules/SharedModule.html":{}}}],["footercompon",{"_index":88,"title":{"components/FooterComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forecast",{"_index":1519,"title":{},"body":{"injectables/WeatherService.html":{}}}],["form",{"_index":223,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/Map.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Step.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["formarray",{"_index":289,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/WizardComponent.html":{}}}],["formbuild",{"_index":252,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SimulationComponent.html":{},"components/WizardComponent.html":{}}}],["formgroup",{"_index":250,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WizardComponent.html":{}}}],["formsmodul",{"_index":1308,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["formstep",{"_index":1602,"title":{},"body":{"components/WizardComponent.html":{}}}],["forroot",{"_index":1318,"title":{},"body":{"modules/SharedModule.html":{}}}],["free",{"_index":495,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"license.html":{}}}],["fromui",{"_index":296,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WizardService.html":{}}}],["fromwizard",{"_index":1439,"title":{},"body":{"interfaces/UiState.html":{}}}],["fromwizard.getcurrentstep",{"_index":1448,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["fromwizard.geterror",{"_index":1449,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["fromwizard.getmap",{"_index":1447,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["fromwizard.getpend",{"_index":1450,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["fromwizard.getstep",{"_index":1446,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["fromwizard.wizardreduc",{"_index":1441,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["fromwizard.wizardst",{"_index":1434,"title":{},"body":{"interfaces/UiState.html":{}}}],["full",{"_index":198,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/UiRoutingModule.html":{}}}],["function",{"_index":180,"title":{"miscellaneous/functions.html":{}},"body":{"classes/AppPreloadingStrategy.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/DemandService.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["functions/src/funct",{"_index":1820,"title":{},"body":{"index.html":{}}}],["furnish",{"_index":1848,"title":{},"body":{"license.html":{}}}],["g",{"_index":1807,"title":{},"body":{"index.html":{}}}],["gener",{"_index":398,"title":{},"body":{"injectables/DemandService.html":{},"classes/Heap.html":{},"interfaces/Path.html":{}}}],["geocod",{"_index":971,"title":{},"body":{"injectables/LocationService.html":{},"index.html":{}}}],["geocoderresult",{"_index":984,"title":{},"body":{"injectables/LocationService.html":{}}}],["geograph",{"_index":967,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["geoloc",{"_index":972,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["geometri",{"_index":1912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gestur",{"_index":835,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["gesturehandl",{"_index":817,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["get",{"_index":425,"title":{"index.html":{},"license.html":{}},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"components/GoogleMapComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{}}}],["getcurrentposit",{"_index":975,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["getcurrentstep",{"_index":1677,"title":{},"body":{"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getdemand",{"_index":369,"title":{},"body":{"injectables/DemandService.html":{}}}],["getedg",{"_index":579,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getedge(edgeid",{"_index":604,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getedgesfromshortestpath",{"_index":672,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["geterror",{"_index":1679,"title":{},"body":{"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getfactor",{"_index":1524,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getformstep",{"_index":1603,"title":{},"body":{"components/WizardComponent.html":{}}}],["geticon",{"_index":1455,"title":{},"body":{"components/WeatherComponent.html":{}}}],["geticon(cod",{"_index":1461,"title":{},"body":{"components/WeatherComponent.html":{}}}],["getincidencematrix",{"_index":642,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getlatlng",{"_index":976,"title":{},"body":{"injectables/LocationService.html":{}}}],["getmap",{"_index":1675,"title":{},"body":{"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getmax",{"_index":1275,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["getmin",{"_index":1271,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["getnam",{"_index":698,"title":{},"body":{"classes/EnumValues.html":{}}}],["getnames(",{"_index":700,"title":{},"body":{"classes/EnumValues.html":{}}}],["getnetwork",{"_index":1175,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["getnetworkdata",{"_index":1184,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["getnod",{"_index":577,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getnode(nodeid",{"_index":583,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getodmatrix",{"_index":370,"title":{},"body":{"injectables/DemandService.html":{}}}],["getodnod",{"_index":624,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getodnode(label",{"_index":622,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getodpair",{"_index":287,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{}}}],["getpath",{"_index":883,"title":{},"body":{"classes/Heap.html":{}}}],["getpend",{"_index":1681,"title":{},"body":{"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getrandomcolor",{"_index":1744,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getrel",{"_index":581,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getscript",{"_index":1745,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getscript(src",{"_index":1799,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getshortestpath",{"_index":631,"title":{},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getstep",{"_index":1673,"title":{},"body":{"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gettrafficdata",{"_index":1211,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["getvalu",{"_index":699,"title":{},"body":{"classes/EnumValues.html":{}}}],["getvalues(",{"_index":703,"title":{},"body":{"classes/EnumValues.html":{}}}],["getvari",{"_index":469,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getvis",{"_index":247,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["getvisibility(pair",{"_index":267,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["getweathercondit",{"_index":1525,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getweatherdata",{"_index":1193,"title":{},"body":{"injectables/SchedulerService.html":{},"injectables/WeatherService.html":{}}}],["getweatherdata(tim",{"_index":1539,"title":{},"body":{"injectables/WeatherService.html":{}}}],["gl",{"_index":371,"title":{},"body":{"injectables/DemandService.html":{}}}],["gls(linkflow",{"_index":395,"title":{},"body":{"injectables/DemandService.html":{}}}],["go",{"_index":800,"title":{},"body":{"classes/GoOn.html":{},"classes/MapChanged.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"miscellaneous/enumerations.html":{}}}],["googl",{"_index":91,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"index.html":{}}}],["google.maps.geocod",{"_index":993,"title":{},"body":{"injectables/LocationService.html":{}}}],["google.maps.geocoderresult",{"_index":1003,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["google.maps.geocoderstatu",{"_index":1005,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["google.maps.geocoderstatus.ok",{"_index":1006,"title":{},"body":{"injectables/LocationService.html":{}}}],["google.maps.geocoderstatus.zero_result",{"_index":1238,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["google.maps.latlng",{"_index":546,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["google.maps.latlngboundsliter",{"_index":1048,"title":{},"body":{"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["google.maps.latlngliter",{"_index":827,"title":{},"body":{"components/GoogleMapComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{}}}],["google.maps.maptypeid",{"_index":840,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["google.maps.maptypeid.roadmap",{"_index":1040,"title":{},"body":{"components/MapComponent.html":{}}}],["google.maps.maptypestyl",{"_index":847,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["google.maps.mark",{"_index":542,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["google.maps.polylin",{"_index":548,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["googlemapcompon",{"_index":90,"title":{"components/GoogleMapComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["goon",{"_index":785,"title":{"classes/GoOn.html":{}},"body":{"classes/GoOn.html":{},"classes/MapChanged.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["goon(data",{"_index":1640,"title":{},"body":{"injectables/WizardService.html":{}}}],["grant",{"_index":1831,"title":{},"body":{"license.html":{}}}],["graph",{"_index":572,"title":{},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"modules.html":{}}}],["graph.calcassignmentmatrix(odpair",{"_index":1204,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["graph.calccapacities(factors[0]).pip",{"_index":1213,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["graph.calcincidencematrix",{"_index":1203,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["graph.calcshortestpaths(odpairs).pip",{"_index":1202,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["guard.servic",{"_index":1317,"title":{},"body":{"modules/SharedModule.html":{},"components/UiComponent.html":{},"modules/UiRoutingModule.html":{}}}],["guard.service.t",{"_index":230,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"coverage.html":{}}}],["guard.service.ts:11",{"_index":238,"title":{},"body":{"injectables/CanDeactivateGuard.html":{}}}],["hammerj",{"_index":1781,"title":{},"body":{"dependencies.html":{}}}],["handl",{"_index":836,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["hasbackdrop",{"_index":1396,"title":{},"body":{"components/UiComponent.html":{}}}],["headlin",{"_index":928,"title":{},"body":{"components/HomeComponent.html":{}}}],["heap",{"_index":510,"title":{"classes/Heap.html":{}},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"coverage.html":{}}}],["heavytrafficcolor",{"_index":1932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hectar",{"_index":1922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["herebi",{"_index":1830,"title":{},"body":{"license.html":{}}}],["hide",{"_index":1051,"title":{},"body":{"components/MapComponent.html":{}}}],["highli",{"_index":1941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["holder",{"_index":1863,"title":{},"body":{"license.html":{}}}],["home",{"_index":196,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{}}}],["home'},{'nam",{"_index":94,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["home.component.html",{"_index":907,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":906,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.transit",{"_index":917,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.compon",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["home_transit",{"_index":916,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["homecompon",{"_index":93,"title":{"components/HomeComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hour",{"_index":1296,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{},"miscellaneous/variables.html":{}}}],["html",{"_index":68,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["html5",{"_index":986,"title":{},"body":{"injectables/LocationService.html":{}}}],["htmlelement",{"_index":850,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/WeatherComponent.html":{}}}],["htmlimageel",{"_index":1463,"title":{},"body":{"components/WeatherComponent.html":{}}}],["http",{"_index":1531,"title":{},"body":{"injectables/WeatherService.html":{}}}],["http://localhost:4201",{"_index":1901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":1529,"title":{},"body":{"injectables/WeatherService.html":{}}}],["httpclientmodul",{"_index":1306,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["httpheader",{"_index":1550,"title":{},"body":{"injectables/WeatherService.html":{}}}],["httpparam",{"_index":1551,"title":{},"body":{"injectables/WeatherService.html":{}}}],["https://cloud.google.com/map",{"_index":1813,"title":{},"body":{"index.html":{}}}],["https://developers.google.com/maps/documentation/javascript/styl",{"_index":1918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://openweathermap.org",{"_index":1816,"title":{},"body":{"index.html":{}}}],["https://u",{"_index":1895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://wiki.openstreetmap.org/wiki/key:oneway",{"_index":609,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["https://wiki.openstreetmap.org/wiki/tag:junction%3droundabout",{"_index":617,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["icon",{"_index":325,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"components/WizardComponent.html":{}}}],["icon.src",{"_index":1489,"title":{},"body":{"components/WeatherComponent.html":{}}}],["iconcontain",{"_index":1454,"title":{},"body":{"components/WeatherComponent.html":{}}}],["id",{"_index":610,"title":{},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["identifi",{"_index":966,"title":{},"body":{"injectables/LocationService.html":{},"coverage.html":{}}}],["imag",{"_index":1488,"title":{},"body":{"components/WeatherComponent.html":{}}}],["implement",{"_index":9,"title":{},"body":{"components/AboutComponent.html":{},"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["impli",{"_index":1858,"title":{},"body":{"license.html":{}}}],["import",{"_index":36,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["incid",{"_index":633,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{}}}],["incidencematrix",{"_index":576,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["includ",{"_index":1838,"title":{},"body":{"license.html":{}}}],["incomingedg",{"_index":539,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["index",{"_index":18,"title":{"index.html":{}},"body":{"components/AboutComponent.html":{},"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indic",{"_index":477,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"classes/Clock.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["infodialogcompon",{"_index":95,"title":{"components/InfoDialogComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["inherit",{"_index":207,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WeatherComponent.html":{}}}],["init",{"_index":856,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["initi",{"_index":838,"title":{},"body":{"components/GoogleMapComponent.html":{},"interfaces/Map.html":{},"components/MapComponent.html":{},"interfaces/Step.html":{},"miscellaneous/variables.html":{}}}],["initialwizardst",{"_index":1663,"title":{},"body":{"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":232,"title":{"injectables/CanDeactivateGuard.html":{},"injectables/DemandService.html":{},"injectables/LocationService.html":{},"injectables/SchedulerService.html":{},"injectables/SimulationService.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{}},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"injectables/DemandService.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"components/MessageArchivedComponent.html":{},"injectables/SchedulerService.html":{},"injectables/SimulationService.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{},"coverage.html":{},"overview.html":{}}}],["inject(mat_dialog_data",{"_index":958,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["input",{"_index":249,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{}}}],["insert",{"_index":658,"title":{},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{}}}],["instal",{"_index":1190,"title":{},"body":{"injectables/SchedulerService.html":{},"index.html":{}}}],["instanti",{"_index":656,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["interfac",{"_index":226,"title":{"interfaces/CanComponentDeactivate.html":{},"interfaces/LinkFlow.html":{},"interfaces/Map.html":{},"interfaces/Member.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"interfaces/Path.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"interfaces/UiState.html":{},"interfaces/WeatherConditions.html":{},"interfaces/WizardState.html":{}},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Map.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"interfaces/UiState.html":{},"interfaces/WeatherConditions.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["internet",{"_index":1177,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["invalid",{"_index":350,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["invalid_request",{"_index":1240,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["invers",{"_index":519,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["invok",{"_index":1001,"title":{},"body":{"injectables/LocationService.html":{}}}],["isnan(+key",{"_index":708,"title":{},"body":{"classes/EnumValues.html":{}}}],["isoneway(edgeid",{"_index":611,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["isonpath",{"_index":372,"title":{},"body":{"injectables/DemandService.html":{}}}],["isonpath(odmatrixassign",{"_index":403,"title":{},"body":{"injectables/DemandService.html":{}}}],["isroundabout(edgeid",{"_index":618,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["javascript",{"_index":1815,"title":{},"body":{"index.html":{}}}],["js",{"_index":1779,"title":{},"body":{"dependencies.html":{}}}],["junction",{"_index":619,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["k",{"_index":511,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["key",{"_index":523,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"index.html":{}}}],["kind",{"_index":1856,"title":{},"body":{"license.html":{}}}],["kjam",{"_index":554,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["ksp(origin",{"_index":651,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["l",{"_index":942,"title":{},"body":{"components/HomeComponent.html":{}}}],["label",{"_index":536,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["labels.icon",{"_index":1916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["last",{"_index":758,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["lat",{"_index":537,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["latitud",{"_index":533,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["latlng",{"_index":973,"title":{},"body":{"injectables/LocationService.html":{}}}],["layout",{"_index":1312,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["leav",{"_index":1291,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["legend",{"_index":67,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangeOfConditionsComponent.html":{},"modules/DemandModule.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"modules/LocationModule.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["letter",{"_index":919,"title":{},"body":{"components/HomeComponent.html":{}}}],["level",{"_index":842,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["liabil",{"_index":1867,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":1864,"title":{},"body":{"license.html":{}}}],["licens",{"_index":1827,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":751,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"injectables/SchedulerService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["line",{"_index":937,"title":{},"body":{"components/HomeComponent.html":{}}}],["linear",{"_index":934,"title":{},"body":{"components/HomeComponent.html":{}}}],["link",{"_index":58,"title":{},"body":{"components/AboutComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{}}}],["linkflow",{"_index":378,"title":{"interfaces/LinkFlow.html":{}},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"coverage.html":{}}}],["linkflows[i].valu",{"_index":439,"title":{},"body":{"injectables/DemandService.html":{}}}],["linkflows[i].vari",{"_index":443,"title":{},"body":{"injectables/DemandService.html":{}}}],["liter",{"_index":479,"title":{},"body":{"classes/Edge.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/MapChanged.html":{},"classes/Node.html":{},"classes/StepChanged.html":{}}}],["lng",{"_index":1235,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":179,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["loadchildren",{"_index":199,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loadscript",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["locat",{"_index":1125,"title":{},"body":{"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"injectables/WeatherService.html":{}}}],["location.servic",{"_index":963,"title":{},"body":{"modules/LocationModule.html":{}}}],["location/location.modul",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["location/location.servic",{"_index":1148,"title":{},"body":{"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"injectables/WeatherService.html":{}}}],["locationmodul",{"_index":135,"title":{"modules/LocationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LocationModule.html":{},"modules.html":{},"overview.html":{}}}],["locationservic",{"_index":961,"title":{"injectables/LocationService.html":{}},"body":{"modules/LocationModule.html":{},"injectables/LocationService.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"overview.html":{}}}],["login",{"_index":1812,"title":{},"body":{"index.html":{}}}],["logit",{"_index":676,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["lon",{"_index":538,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["longitud",{"_index":534,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["m",{"_index":351,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"miscellaneous/variables.html":{}}}],["m/",{"_index":496,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["manag",{"_index":1433,"title":{},"body":{"interfaces/UiState.html":{},"interfaces/WizardState.html":{}}}],["map",{"_index":737,"title":{"interfaces/Map.html":{}},"body":{"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/UiState.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["map'},{'nam",{"_index":92,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["map((respons",{"_index":1565,"title":{},"body":{"injectables/WeatherService.html":{}}}],["map.compon",{"_index":1423,"title":{},"body":{"modules/UiModule.html":{}}}],["map.component.html",{"_index":1021,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.scss",{"_index":1020,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.t",{"_index":810,"title":{},"body":{"components/GoogleMapComponent.html":{},"coverage.html":{}}}],["map.component.ts:17",{"_index":828,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:26",{"_index":848,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:30",{"_index":830,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:34",{"_index":834,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:38",{"_index":841,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:42",{"_index":844,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:46",{"_index":845,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:50",{"_index":837,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:54",{"_index":825,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:56",{"_index":858,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:61",{"_index":855,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:71",{"_index":854,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:76",{"_index":851,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.data.bound",{"_index":1288,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["map.data.selectednod",{"_index":744,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["map.servic",{"_index":860,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["map.styl",{"_index":1039,"title":{},"body":{"components/MapComponent.html":{}}}],["map/googl",{"_index":1422,"title":{},"body":{"modules/UiModule.html":{}}}],["map/map.compon",{"_index":1421,"title":{},"body":{"modules/UiModule.html":{}}}],["map/map.servic",{"_index":1147,"title":{},"body":{"injectables/SchedulerService.html":{},"modules/UiModule.html":{}}}],["mapchang",{"_index":796,"title":{"classes/MapChanged.html":{}},"body":{"classes/GoOn.html":{},"classes/MapChanged.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["mapcompon",{"_index":97,"title":{"components/MapComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mapopt",{"_index":861,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["mapservic",{"_index":823,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{},"injectables/SchedulerService.html":{},"modules/UiModule.html":{},"coverage.html":{},"overview.html":{}}}],["mapstyl",{"_index":1038,"title":{},"body":{"components/MapComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["maptypeid",{"_index":818,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["marker",{"_index":541,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["mat_dialog_data",{"_index":956,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["mat_snack_bar_data",{"_index":1096,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["matbuttonmodul",{"_index":1072,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matcardmodul",{"_index":1070,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["match",{"_index":118,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"classes/Clock.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":1359,"title":{},"body":{"components/UiComponent.html":{}}}],["matdialogmodul",{"_index":1080,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matdialogref",{"_index":951,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["material.modul",{"_index":1313,"title":{},"body":{"modules/SharedModule.html":{}}}],["materialmodul",{"_index":1066,"title":{"modules/MaterialModule.html":{}},"body":{"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["matexpansionmodul",{"_index":1083,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matgridlistmodul",{"_index":1081,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["math",{"_index":419,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{}}}],["math.exp",{"_index":686,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["math.pow(bas",{"_index":441,"title":{},"body":{"injectables/DemandService.html":{}}}],["math.round(1",{"_index":563,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["math.round(exps[z][n",{"_index":691,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["math.round(kjam",{"_index":557,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["math.round(p",{"_index":448,"title":{},"body":{"injectables/DemandService.html":{}}}],["math.round(sum",{"_index":444,"title":{},"body":{"injectables/DemandService.html":{}}}],["math.round(this.dens",{"_index":559,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["math.round(this.dist",{"_index":553,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["mathj",{"_index":420,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"dependencies.html":{}}}],["maticonmodul",{"_index":1073,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["maticonregistri",{"_index":1071,"title":{},"body":{"modules/MaterialModule.html":{}}}],["maticonregistry.addsvgicon",{"_index":1086,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodul",{"_index":1076,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matmenumodul",{"_index":1074,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matprogressspinnermodul",{"_index":1078,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matrix",{"_index":363,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{}}}],["matselectmodul",{"_index":1082,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matsidenavmodul",{"_index":1068,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matsnackbar",{"_index":1358,"title":{},"body":{"components/UiComponent.html":{}}}],["matsnackbarmodul",{"_index":1077,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matstepp",{"_index":1598,"title":{},"body":{"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["matsteppermodul",{"_index":1075,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattoolbarmodul",{"_index":1069,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattooltipmodul",{"_index":1079,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":499,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["maxdemand",{"_index":1948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maximum",{"_index":473,"title":{},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["maxodpair",{"_index":1936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxzoom",{"_index":819,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["mean",{"_index":520,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["measur",{"_index":505,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["medium",{"_index":1942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["member",{"_index":525,"title":{"interfaces/Member.html":{}},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"coverage.html":{}}}],["memoizedselector",{"_index":1438,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["merchant",{"_index":1859,"title":{},"body":{"license.html":{}}}],["merg",{"_index":1841,"title":{},"body":{"license.html":{}}}],["messag",{"_index":1174,"title":{},"body":{"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/UiComponent.html":{},"injectables/WizardService.html":{}}}],["messagearchivedcompon",{"_index":99,"title":{"components/MessageArchivedComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["meter",{"_index":478,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"interfaces/WeatherConditions.html":{}}}],["method",{"_index":21,"title":{},"body":{"components/AboutComponent.html":{},"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["millimet",{"_index":1497,"title":{},"body":{"interfaces/WeatherConditions.html":{}}}],["millisecond",{"_index":1574,"title":{},"body":{"injectables/WeatherService.html":{}}}],["millisencod",{"_index":1581,"title":{},"body":{"injectables/WeatherService.html":{}}}],["min",{"_index":1270,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["mindist",{"_index":1934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mindur",{"_index":1935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minimum",{"_index":382,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"components/GoogleMapComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["minzoom",{"_index":820,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["miscellan",{"_index":1791,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mist",{"_index":1513,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["mit",{"_index":1826,"title":{},"body":{"index.html":{},"license.html":{}}}],["mm",{"_index":352,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":677,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Map.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["models/actions/wizard.act",{"_index":1653,"title":{},"body":{"injectables/WizardService.html":{}}}],["models/base.compon",{"_index":307,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WeatherComponent.html":{}}}],["models/reduc",{"_index":297,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"injectables/WizardService.html":{}}}],["models/reducers/wizard.reduc",{"_index":1654,"title":{},"body":{"injectables/WizardService.html":{}}}],["models/wizard",{"_index":299,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WeatherComponent.html":{}}}],["moderatetrafficcolor",{"_index":1930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modifi",{"_index":1840,"title":{},"body":{"license.html":{}}}],["modul",{"_index":123,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/MaterialModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"modules/WeatherModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/MaterialModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithprovid",{"_index":1303,"title":{},"body":{"modules/SharedModule.html":{}}}],["moment",{"_index":1273,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["more",{"_index":568,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["more_vert",{"_index":1087,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mout",{"_index":1776,"title":{},"body":{"dependencies.html":{}}}],["mout/array/combin",{"_index":509,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["mout/lang/deepclon",{"_index":1661,"title":{},"body":{"interfaces/WizardState.html":{}}}],["multi",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["multinomi",{"_index":675,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["n",{"_index":445,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["name",{"_index":77,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"classes/AppPreloadingStrategy.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"miscellaneous/functions.html":{}}}],["navigate_next",{"_index":354,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["navigator.geoloc",{"_index":1246,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["navigator.geolocation.getcurrentposit",{"_index":1010,"title":{},"body":{"injectables/LocationService.html":{}}}],["network",{"_index":255,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{}}}],["network.servic",{"_index":1104,"title":{},"body":{"modules/NetworkModule.html":{}}}],["network/graph",{"_index":301,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{}}}],["network/network.modul",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["network/network.servic",{"_index":293,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"injectables/SchedulerService.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WeatherComponent.html":{}}}],["network/weather/weath",{"_index":303,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/WeatherComponent.html":{}}}],["network/weather/weather.servic",{"_index":294,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/SchedulerService.html":{},"components/WeatherComponent.html":{}}}],["networkdata",{"_index":1894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["networkmodul",{"_index":136,"title":{"modules/NetworkModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NetworkModule.html":{},"modules.html":{},"overview.html":{}}}],["networkservic",{"_index":256,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"modules/NetworkModule.html":{},"injectables/SchedulerService.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"overview.html":{}}}],["new",{"_index":34,"title":{},"body":{"components/AboutComponent.html":{},"classes/Edge.html":{},"components/FooterComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["next",{"_index":1294,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["nextdt",{"_index":1583,"title":{},"body":{"injectables/WeatherService.html":{}}}],["nextindex",{"_index":806,"title":{},"body":{"classes/GoOn.html":{},"classes/MapChanged.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["ng",{"_index":1407,"title":{},"body":{"modules/UiModule.html":{},"dependencies.html":{}}}],["ngafterviewinit",{"_index":909,"title":{},"body":{"components/HomeComponent.html":{},"components/WeatherComponent.html":{}}}],["ngmodul",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/MaterialModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"modules/WeatherModule.html":{}}}],["ngonchang",{"_index":813,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["ngonchanges(chang",{"_index":853,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["ngondestroy",{"_index":210,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{}}}],["ngoninit",{"_index":22,"title":{},"body":{"components/AboutComponent.html":{},"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["ngrx",{"_index":793,"title":{},"body":{"classes/GoOn.html":{},"classes/MapChanged.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["ngrx/effect",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"modules/UiModule.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"classes/Reset.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"injectables/WizardService.html":{},"dependencies.html":{}}}],["node",{"_index":454,"title":{"classes/Node.html":{}},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"coverage.html":{}}}],["node.count",{"_index":669,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.incomingedg",{"_index":599,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.incomingedges.length",{"_index":756,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["node.j",{"_index":1804,"title":{},"body":{"index.html":{}}}],["node.label",{"_index":623,"title":{},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.label).length",{"_index":767,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["node.lat",{"_index":591,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.lon",{"_index":593,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.nodeid",{"_index":586,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.outgoingedg",{"_index":602,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.outgoingedges.length",{"_index":757,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["node.tag",{"_index":596,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["nodeid",{"_index":535,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["noninfring",{"_index":1861,"title":{},"body":{"license.html":{}}}],["normal",{"_index":1960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notic",{"_index":1851,"title":{},"body":{"license.html":{}}}],["notrafficcolor",{"_index":1928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["npm",{"_index":1805,"title":{},"body":{"index.html":{}}}],["npm@latest",{"_index":1806,"title":{},"body":{"index.html":{}}}],["null",{"_index":401,"title":{},"body":{"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"injectables/LocationService.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":30,"title":{},"body":{"components/AboutComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["numer",{"_index":684,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["o",{"_index":345,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["o/d",{"_index":362,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":862,"title":{},"body":{"components/GoogleMapComponent.html":{},"miscellaneous/variables.html":{}}}],["object.keys(e).filter((key",{"_index":707,"title":{},"body":{"classes/EnumValues.html":{}}}],["observ",{"_index":184,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"injectables/WeatherService.html":{}}}],["observable.create((observ",{"_index":1000,"title":{},"body":{"injectables/LocationService.html":{}}}],["observer.complet",{"_index":1008,"title":{},"body":{"injectables/LocationService.html":{}}}],["observer.error(error",{"_index":1013,"title":{},"body":{"injectables/LocationService.html":{}}}],["observer.error(statu",{"_index":1009,"title":{},"body":{"injectables/LocationService.html":{}}}],["observer.next(posit",{"_index":1011,"title":{},"body":{"injectables/LocationService.html":{}}}],["observer.next(result",{"_index":1007,"title":{},"body":{"injectables/LocationService.html":{}}}],["obtain",{"_index":1548,"title":{},"body":{"injectables/WeatherService.html":{},"license.html":{}}}],["odmatrix",{"_index":364,"title":{},"body":{"injectables/DemandService.html":{}}}],["odmatrixassign",{"_index":379,"title":{},"body":{"injectables/DemandService.html":{}}}],["odmatrixassignment[n][i",{"_index":446,"title":{},"body":{"injectables/DemandService.html":{}}}],["odpair",{"_index":266,"title":{"interfaces/OdPair.html":{}},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"components/WizardComponent.html":{},"coverage.html":{}}}],["odpair.destin",{"_index":755,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["odpair.origin",{"_index":763,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["odpairs.filter(pair",{"_index":764,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["odpairs.length",{"_index":749,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["odpairs.map((pair",{"_index":319,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["odpairs[odpairs.length",{"_index":750,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["odpairs[uiconfig.maxodpair",{"_index":753,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["odpairscontrol",{"_index":330,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["odpairscontrol.length",{"_index":338,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["odpairscontrol.removeat(i",{"_index":340,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["odpairshow",{"_index":300,"title":{"interfaces/OdPairShowing.html":{}},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"coverage.html":{}}}],["of(nul",{"_index":189,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["offici",{"_index":61,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["offset",{"_index":940,"title":{},"body":{"components/HomeComponent.html":{},"injectables/WeatherService.html":{}}}],["on",{"_index":408,"title":{},"body":{"injectables/DemandService.html":{}}}],["onchang",{"_index":811,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["ondestroy",{"_index":208,"title":{},"body":{"classes/BaseComponent.html":{},"components/UiComponent.html":{}}}],["oneway",{"_index":614,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["oninit",{"_index":10,"title":{},"body":{"components/AboutComponent.html":{},"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["opac",{"_index":931,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["open",{"_index":1189,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["opendialog",{"_index":1353,"title":{},"body":{"components/UiComponent.html":{}}}],["opendialog(data",{"_index":1366,"title":{},"body":{"components/UiComponent.html":{}}}],["opensnackbar",{"_index":1354,"title":{},"body":{"components/UiComponent.html":{}}}],["opensnackbar(messag",{"_index":1368,"title":{},"body":{"components/UiComponent.html":{}}}],["openweathermap",{"_index":1549,"title":{},"body":{"injectables/WeatherService.html":{},"index.html":{}}}],["oper",{"_index":1136,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["option",{"_index":183,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"miscellaneous/functions.html":{}}}],["options).pip",{"_index":1564,"title":{},"body":{"injectables/WeatherService.html":{}}}],["origin",{"_index":463,"title":{},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["otherwis",{"_index":1871,"title":{},"body":{"license.html":{}}}],["out",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"license.html":{},"overview.html":{}}}],["outgoingedg",{"_index":540,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["over_query_limit",{"_index":1241,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["overview",{"_index":1875,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owldatetimemodul",{"_index":1405,"title":{},"body":{"modules/UiModule.html":{}}}],["owlnativedatetimemodul",{"_index":1406,"title":{},"body":{"modules/UiModule.html":{}}}],["packag",{"_index":1751,"title":{"dependencies.html":{}},"body":{}}],["paid",{"_index":1188,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["pair",{"_index":270,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["pair.demand",{"_index":320,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["pair.destin",{"_index":766,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["pair.origin",{"_index":765,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["pair.value.destin",{"_index":348,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{}}}],["pair.value.origin",{"_index":347,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{}}}],["pair.value.pathtyp",{"_index":349,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["pairs,path",{"_index":418,"title":{},"body":{"injectables/DemandService.html":{}}}],["pairs,paths,edg",{"_index":400,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["pairsvalid",{"_index":1607,"title":{},"body":{"components/WizardComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["panelclass",{"_index":1392,"title":{},"body":{"components/UiComponent.html":{}}}],["param",{"_index":431,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{}}}],["paramet",{"_index":182,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["particular",{"_index":521,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"license.html":{}}}],["past",{"_index":1185,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["path",{"_index":194,"title":{"interfaces/Path.html":{}},"body":{"modules/AppRoutingModule.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"modules/UiRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["path.cost",{"_index":898,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["path.edg",{"_index":897,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["path.nod",{"_index":896,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["path.pathid",{"_index":895,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["path.t",{"_index":881,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{},"coverage.html":{}}}],["path.ts:23",{"_index":886,"title":{},"body":{"classes/Heap.html":{}}}],["path.ts:29",{"_index":893,"title":{},"body":{"classes/Heap.html":{}}}],["path.ts:37",{"_index":890,"title":{},"body":{"classes/Heap.html":{}}}],["path.ts:45",{"_index":888,"title":{},"body":{"classes/Heap.html":{}}}],["path.ts:49",{"_index":887,"title":{},"body":{"classes/Heap.html":{}}}],["pathcost",{"_index":679,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["pathid",{"_index":661,"title":{},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["pathmatch",{"_index":197,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/UiRoutingModule.html":{}}}],["pathtyp",{"_index":514,"title":{},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/enumerations.html":{}}}],["pathtype.dist",{"_index":775,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["payload",{"_index":787,"title":{},"body":{"classes/GoOn.html":{},"classes/MapChanged.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{}}}],["pend",{"_index":799,"title":{},"body":{"classes/GoOn.html":{},"classes/MapChanged.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["perform",{"_index":1133,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["permiss",{"_index":1252,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"license.html":{}}}],["permit",{"_index":1847,"title":{},"body":{"license.html":{}}}],["person",{"_index":1833,"title":{},"body":{"license.html":{}}}],["pick",{"_index":1408,"title":{},"body":{"modules/UiModule.html":{},"dependencies.html":{}}}],["platform",{"_index":1814,"title":{},"body":{"index.html":{}}}],["pleas",{"_index":1182,"title":{},"body":{"injectables/SchedulerService.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["png",{"_index":1491,"title":{},"body":{"components/WeatherComponent.html":{}}}],["poi",{"_index":1914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["point",{"_index":530,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["polylin",{"_index":547,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{}}}],["poorli",{"_index":1943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pop",{"_index":884,"title":{},"body":{"classes/Heap.html":{}}}],["pop(pathid",{"_index":889,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["portion",{"_index":1854,"title":{},"body":{"license.html":{}}}],["posit",{"_index":987,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["position.coords.latitud",{"_index":1248,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["position.coords.longitud",{"_index":1249,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["positionerror",{"_index":1012,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["predt",{"_index":1577,"title":{},"body":{"injectables/WeatherService.html":{}}}],["preload",{"_index":174,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["preload(rout",{"_index":177,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["preloadingstrategi",{"_index":176,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{}}}],["prerequisit",{"_index":1817,"title":{},"body":{"index.html":{}}}],["prev.cost",{"_index":903,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["privaci",{"_index":783,"title":{},"body":{"components/FooterComponent.html":{}}}],["privat",{"_index":309,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{}}}],["probabl",{"_index":416,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["product",{"_index":1892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":51,"title":{},"body":{"components/AboutComponent.html":{},"injectables/SchedulerService.html":{},"index.html":{}}}],["promis",{"_index":233,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{}}}],["propag",{"_index":1334,"title":{},"body":{"injectables/SimulationService.html":{}}}],["properti",{"_index":19,"title":{},"body":{"components/AboutComponent.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["propertynam",{"_index":865,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["provid",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"interfaces/WizardState.html":{},"license.html":{},"overview.html":{}}}],["public",{"_index":366,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"modules/SharedModule.html":{},"injectables/SimulationService.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{}}}],["publish",{"_index":1842,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":565,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"license.html":{}}}],["push",{"_index":885,"title":{},"body":{"classes/Heap.html":{}}}],["push(path",{"_index":892,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["putinerror",{"_index":1634,"title":{},"body":{"injectables/WizardService.html":{}}}],["putinerror(error",{"_index":1642,"title":{},"body":{"injectables/WizardService.html":{}}}],["putonhold",{"_index":1635,"title":{},"body":{"injectables/WizardService.html":{}}}],["putonhold(messag",{"_index":1644,"title":{},"body":{"injectables/WizardService.html":{}}}],["qs",{"_index":1784,"title":{},"body":{"dependencies.html":{}}}],["queue",{"_index":464,"title":{},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["quota",{"_index":1186,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["rain",{"_index":1510,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["rainintens",{"_index":1494,"title":{},"body":{"interfaces/WeatherConditions.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["rate",{"_index":1961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reactiveformsmodul",{"_index":1309,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["readonli",{"_index":788,"title":{},"body":{"classes/GoOn.html":{},"classes/MapChanged.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{}}}],["real",{"_index":47,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["receiveact",{"_index":211,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/WeatherComponent.html":{}}}],["rectangl",{"_index":1046,"title":{},"body":{"components/MapComponent.html":{}}}],["redirectto",{"_index":195,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reduc",{"_index":1425,"title":{},"body":{"modules/UiModule.html":{},"interfaces/UiState.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["reducers/wizard.reduc",{"_index":1440,"title":{},"body":{"interfaces/UiState.html":{}}}],["reduct",{"_index":1521,"title":{},"body":{"injectables/WeatherService.html":{}}}],["ref",{"_index":526,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["relat",{"_index":564,"title":{"classes/Relation.html":{}},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"coverage.html":{}}}],["relation'",{"_index":524,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["relationid",{"_index":569,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["relationship",{"_index":567,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["remov",{"_index":891,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{},"injectables/SchedulerService.html":{}}}],["removefromwait",{"_index":1636,"title":{},"body":{"injectables/WizardService.html":{}}}],["render",{"_index":1458,"title":{},"body":{"components/WeatherComponent.html":{}}}],["renderer2",{"_index":1459,"title":{},"body":{"components/WeatherComponent.html":{}}}],["repetit",{"_index":671,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["repositori",{"_index":59,"title":{},"body":{"components/AboutComponent.html":{}}}],["repres",{"_index":528,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["request",{"_index":1245,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["request_deni",{"_index":1242,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["requir",{"_index":826,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{},"index.html":{}}}],["reset",{"_index":140,"title":{"classes/Reset.html":{}},"body":{"modules/AppModule.html":{},"components/ChangeOfConditionsComponent.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"modules/NetworkModule.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["resetcondit",{"_index":1456,"title":{},"body":{"components/WeatherComponent.html":{}}}],["resetcount",{"_index":668,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["resourc",{"_index":1520,"title":{},"body":{"injectables/WeatherService.html":{}}}],["respons",{"_index":965,"title":{},"body":{"injectables/LocationService.html":{},"injectables/WeatherService.html":{}}}],["restrict",{"_index":1837,"title":{},"body":{"license.html":{}}}],["result",{"_index":117,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"classes/Clock.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results[0].geometry.location.lat",{"_index":1234,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["results[0].geometry.location.lng",{"_index":1236,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["retriev",{"_index":1176,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["return",{"_index":27,"title":{},"body":{"components/AboutComponent.html":{},"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["right",{"_index":1839,"title":{},"body":{"license.html":{}}}],["road",{"_index":1915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roadmap",{"_index":839,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["roberto",{"_index":74,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"license.html":{}}}],["roberto&nbsp;simonetti",{"_index":50,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{}}}],["role",{"_index":527,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["root",{"_index":120,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'nam",{"_index":80,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["roundabout",{"_index":620,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["rout",{"_index":178,"title":{"routes.html":{}},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"modules/UiRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["route.data",{"_index":187,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["route.data.preload",{"_index":188,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["router",{"_index":1356,"title":{},"body":{"components/UiComponent.html":{}}}],["routermodul",{"_index":191,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UiRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["routermodule.forchild(rout",{"_index":1429,"title":{},"body":{"modules/UiRoutingModule.html":{}}}],["routermodule.forroot(rout",{"_index":202,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.modul",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"modules/UiModule.html":{}}}],["routing.module.t",{"_index":190,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/UiRoutingModule.html":{}}}],["run",{"_index":1822,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":186,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"injectables/WeatherService.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":1146,"title":{},"body":{"injectables/SchedulerService.html":{},"components/UiComponent.html":{},"injectables/WeatherService.html":{}}}],["s/map.html\">google.maps.latlngliter",{"_index":991,"title":{},"body":{"injectables/LocationService.html":{}}}],["same",{"_index":762,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["scale",{"_index":929,"title":{},"body":{"components/HomeComponent.html":{}}}],["scalex",{"_index":938,"title":{},"body":{"components/HomeComponent.html":{}}}],["scatter",{"_index":1505,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["scatteredcloud",{"_index":1504,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["schedul",{"_index":1360,"title":{},"body":{"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["scheduledemand",{"_index":1121,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["scheduledemand(data",{"_index":1131,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["schedulenetwork",{"_index":1122,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["schedulenetwork(data",{"_index":1139,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["scheduler.servic",{"_index":1606,"title":{},"body":{"components/WizardComponent.html":{}}}],["schedulerservic",{"_index":1119,"title":{"injectables/SchedulerService.html":{}},"body":{"injectables/SchedulerService.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["schedulesimul",{"_index":1123,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["schedulesimulation(data",{"_index":1143,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["search",{"_index":103,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["search(address",{"_index":1224,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["searchfortheareacompon",{"_index":102,"title":{"components/SearchForTheAreaComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["second",{"_index":482,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["select",{"_index":106,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"miscellaneous/variables.html":{}}}],["selectionchang",{"_index":1597,"title":{},"body":{"components/WizardComponent.html":{}}}],["selectionoftheareacompon",{"_index":105,"title":{"components/SelectionOfTheAreaComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["sell",{"_index":1846,"title":{},"body":{"license.html":{}}}],["sendact",{"_index":212,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/WeatherComponent.html":{}}}],["sent",{"_index":220,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WeatherComponent.html":{}}}],["sequenc",{"_index":1134,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["serve:devapp",{"_index":1823,"title":{},"body":{"index.html":{}}}],["servic",{"_index":317,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"injectables/LocationService.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["set",{"_index":626,"title":{},"body":{"classes/Edge.html":{},"components/GoogleMapComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["set('appid",{"_index":1561,"title":{},"body":{"injectables/WeatherService.html":{}}}],["set('lat",{"_index":1557,"title":{},"body":{"injectables/WeatherService.html":{}}}],["set('lon",{"_index":1559,"title":{},"body":{"injectables/WeatherService.html":{}}}],["setcondit",{"_index":1457,"title":{},"body":{"components/WeatherComponent.html":{}}}],["setconditions(weath",{"_index":1469,"title":{},"body":{"components/WeatherComponent.html":{}}}],["setlatlng",{"_index":977,"title":{},"body":{"injectables/LocationService.html":{}}}],["setlatlng(latlng",{"_index":990,"title":{},"body":{"injectables/LocationService.html":{}}}],["settimeout",{"_index":1150,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["shall",{"_index":1852,"title":{},"body":{"license.html":{}}}],["share",{"_index":412,"title":{},"body":{"injectables/DemandService.html":{}}}],["shared/can",{"_index":1373,"title":{},"body":{"components/UiComponent.html":{},"modules/UiRoutingModule.html":{}}}],["shared/info",{"_index":1376,"title":{},"body":{"components/UiComponent.html":{}}}],["shared/messag",{"_index":1375,"title":{},"body":{"components/UiComponent.html":{}}}],["shared/shared.modul",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"modules/UiModule.html":{}}}],["sharedemand",{"_index":373,"title":{},"body":{"injectables/DemandService.html":{}}}],["sharedemand(assignmentmatrix",{"_index":410,"title":{},"body":{"injectables/DemandService.html":{}}}],["sharedmodul",{"_index":137,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/UiModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["sharedmodule.forroot",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["shortest",{"_index":512,"title":{},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["shortestpath",{"_index":574,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["shortestpathsedg",{"_index":575,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["shortestpathsprob",{"_index":645,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["shortestpathsprobabilities[z].push(p",{"_index":694,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["show",{"_index":908,"title":{},"body":{"components/HomeComponent.html":{},"components/MapComponent.html":{}}}],["shower",{"_index":1509,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["showerrain",{"_index":1508,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["showpath",{"_index":517,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["shows/hid",{"_index":1060,"title":{},"body":{"components/MapComponent.html":{}}}],["simonetti",{"_index":75,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"license.html":{}}}],["simplechang",{"_index":859,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["simul",{"_index":44,"title":{},"body":{"components/AboutComponent.html":{},"modules/AppRoutingModule.html":{},"classes/Edge.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"components/SimulationComponent.html":{},"interfaces/Tag.html":{},"components/WizardComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["simulation'},{'nam",{"_index":108,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["simulation.component.html",{"_index":1321,"title":{},"body":{"components/SimulationComponent.html":{}}}],["simulation.component.scss",{"_index":1320,"title":{},"body":{"components/SimulationComponent.html":{}}}],["simulation.servic",{"_index":1332,"title":{},"body":{"modules/SimulationModule.html":{}}}],["simulation/simulation.modul",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["simulation/simulation.servic",{"_index":1149,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["simulation?').pip",{"_index":1384,"title":{},"body":{"components/UiComponent.html":{}}}],["simulation?').subscrib",{"_index":1388,"title":{},"body":{"components/UiComponent.html":{}}}],["simulationcompon",{"_index":107,"title":{"components/SimulationComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["simulationmodul",{"_index":138,"title":{"modules/SimulationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SimulationModule.html":{},"modules.html":{},"overview.html":{}}}],["simulationservic",{"_index":1126,"title":{"injectables/SimulationService.html":{}},"body":{"injectables/SchedulerService.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"coverage.html":{},"overview.html":{}}}],["ski",{"_index":1500,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["snack",{"_index":100,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["snackbar",{"_index":1357,"title":{},"body":{"components/UiComponent.html":{}}}],["snow",{"_index":1512,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["snowintens",{"_index":1495,"title":{},"body":{"interfaces/WeatherConditions.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["softwar",{"_index":1835,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"classes/Clock.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["sp",{"_index":1537,"title":{},"body":{"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["space",{"_index":1938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specif",{"_index":529,"title":{},"body":{"classes/Edge.html":{},"components/GoogleMapComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["squar",{"_index":399,"title":{},"body":{"injectables/DemandService.html":{}}}],["src",{"_index":1800,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.prod.t",{"_index":1883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":1884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.test.t",{"_index":1885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../graph.t",{"_index":1793,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../home.transition.t",{"_index":1886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../map.style.t",{"_index":1887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../material.module.t",{"_index":1888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../pairs.directive.t",{"_index":1797,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../reducers.t",{"_index":1882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../shared.module.t",{"_index":1889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ui",{"_index":1891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../utils.t",{"_index":1796,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../weather.t",{"_index":1794,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../wizard.actions.t",{"_index":1795,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../wizard.reducer.t",{"_index":1798,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../wizard.t",{"_index":1890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/about/about.component.t",{"_index":8,"title":{},"body":{"components/AboutComponent.html":{},"coverage.html":{}}}],["src/app/about/about.component.ts:10",{"_index":25,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/about/about.component.ts:14",{"_index":26,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/app",{"_index":173,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{},"index.html":{}}}],["src/app/app.component.t",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.t",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/demand/demand.module.t",{"_index":359,"title":{},"body":{"modules/DemandModule.html":{}}}],["src/app/demand/demand.service.t",{"_index":361,"title":{},"body":{"injectables/DemandService.html":{},"coverage.html":{}}}],["src/app/demand/demand.service.ts:105",{"_index":391,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:123",{"_index":415,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:138",{"_index":404,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:151",{"_index":411,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:18",{"_index":417,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:23",{"_index":376,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:27",{"_index":409,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:35",{"_index":385,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:47",{"_index":393,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:51",{"_index":394,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:55",{"_index":388,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:71",{"_index":397,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:85",{"_index":380,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/home/home.component.t",{"_index":904,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:15",{"_index":911,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:19",{"_index":913,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:23",{"_index":912,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.transition.t",{"_index":1691,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/location/location.module.t",{"_index":962,"title":{},"body":{"modules/LocationModule.html":{}}}],["src/app/location/location.service.t",{"_index":964,"title":{},"body":{"injectables/LocationService.html":{},"coverage.html":{}}}],["src/app/location/location.service.ts:15",{"_index":994,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:17",{"_index":978,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:25",{"_index":989,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:35",{"_index":980,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:57",{"_index":985,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:72",{"_index":988,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:76",{"_index":992,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/network/graph.t",{"_index":451,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/network/graph.ts:103",{"_index":488,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:105",{"_index":491,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:107",{"_index":475,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:109",{"_index":493,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:114",{"_index":476,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:119",{"_index":481,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:124",{"_index":483,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:129",{"_index":494,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:131",{"_index":474,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:133",{"_index":489,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:135",{"_index":490,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:140",{"_index":472,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:145",{"_index":492,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:147",{"_index":480,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:150",{"_index":471,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:159",{"_index":502,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:183",{"_index":498,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:192",{"_index":503,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:203",{"_index":1116,"title":{},"body":{"classes/Relation.html":{}}}],["src/app/network/graph.ts:205",{"_index":1115,"title":{},"body":{"classes/Relation.html":{}}}],["src/app/network/graph.ts:207",{"_index":1114,"title":{},"body":{"classes/Relation.html":{}}}],["src/app/network/graph.ts:71",{"_index":1111,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:73",{"_index":1108,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:75",{"_index":1109,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:77",{"_index":1110,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:79",{"_index":1113,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:81",{"_index":1107,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:83",{"_index":1112,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:85",{"_index":1106,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:90",{"_index":1105,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/k",{"_index":880,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{},"coverage.html":{}}}],["src/app/network/network.module.t",{"_index":1102,"title":{},"body":{"modules/NetworkModule.html":{}}}],["src/app/network/network.service.t",{"_index":1709,"title":{},"body":{"coverage.html":{}}}],["src/app/network/weather/weather.module.t",{"_index":1516,"title":{},"body":{"modules/WeatherModule.html":{}}}],["src/app/network/weather/weather.service.t",{"_index":1518,"title":{},"body":{"injectables/WeatherService.html":{},"coverage.html":{}}}],["src/app/network/weather/weather.service.ts:111",{"_index":1533,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:121",{"_index":1545,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:19",{"_index":1530,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:23",{"_index":1543,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:27",{"_index":1538,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:35",{"_index":1540,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:55",{"_index":1547,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:82",{"_index":1535,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:96",{"_index":1536,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.t",{"_index":1493,"title":{},"body":{"interfaces/WeatherConditions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/shared/can",{"_index":228,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"coverage.html":{}}}],["src/app/shared/footer/footer.component.t",{"_index":777,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/shared/footer/footer.component.ts:10",{"_index":782,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/footer/footer.component.ts:12",{"_index":781,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/info",{"_index":945,"title":{},"body":{"components/InfoDialogComponent.html":{},"coverage.html":{}}}],["src/app/shared/material.module.t",{"_index":1067,"title":{},"body":{"modules/MaterialModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/messag",{"_index":1090,"title":{},"body":{"components/MessageArchivedComponent.html":{},"coverage.html":{}}}],["src/app/shared/shared.module.t",{"_index":1301,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/simulation/clock.t",{"_index":356,"title":{},"body":{"classes/Clock.html":{},"coverage.html":{}}}],["src/app/simulation/simulation.module.t",{"_index":1331,"title":{},"body":{"modules/SimulationModule.html":{}}}],["src/app/simulation/simulation.service.t",{"_index":1333,"title":{},"body":{"injectables/SimulationService.html":{},"coverage.html":{}}}],["src/app/simulation/simulation.service.ts:8",{"_index":1335,"title":{},"body":{"injectables/SimulationService.html":{}}}],["src/app/ui/directives/pairs.directive.t",{"_index":1717,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/ui/map/googl",{"_index":809,"title":{},"body":{"components/GoogleMapComponent.html":{},"coverage.html":{}}}],["src/app/ui/map/map.component.t",{"_index":1017,"title":{},"body":{"components/MapComponent.html":{},"coverage.html":{}}}],["src/app/ui/map/map.component.ts:113",{"_index":1026,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:25",{"_index":1028,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:28",{"_index":1035,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:30",{"_index":1029,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:31",{"_index":1030,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:32",{"_index":1032,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:33",{"_index":1033,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:34",{"_index":1034,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:35",{"_index":1031,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:36",{"_index":1023,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:55",{"_index":1024,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:60",{"_index":1027,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:64",{"_index":1025,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.service.t",{"_index":1722,"title":{},"body":{"coverage.html":{}}}],["src/app/ui/map/map.style.t",{"_index":1724,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/ui/models/actions/wizard.actions.t",{"_index":786,"title":{},"body":{"classes/GoOn.html":{},"classes/MapChanged.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:21",{"_index":1343,"title":{},"body":{"classes/StepChanged.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:23",{"_index":1344,"title":{},"body":{"classes/StepChanged.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:29",{"_index":1015,"title":{},"body":{"classes/MapChanged.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:31",{"_index":1016,"title":{},"body":{"classes/MapChanged.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:37",{"_index":1345,"title":{},"body":{"classes/StepError.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:39",{"_index":1346,"title":{},"body":{"classes/StepError.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:45",{"_index":1347,"title":{},"body":{"classes/StepPending.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:47",{"_index":1348,"title":{},"body":{"classes/StepPending.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:53",{"_index":790,"title":{},"body":{"classes/GoOn.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:55",{"_index":791,"title":{},"body":{"classes/GoOn.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:61",{"_index":1117,"title":{},"body":{"classes/Reset.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:63",{"_index":1118,"title":{},"body":{"classes/Reset.html":{}}}],["src/app/ui/models/base.component.t",{"_index":204,"title":{},"body":{"classes/BaseComponent.html":{},"coverage.html":{}}}],["src/app/ui/models/base.component.ts:11",{"_index":216,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/base.component.ts:13",{"_index":215,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/base.component.ts:22",{"_index":222,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/base.component.ts:27",{"_index":217,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/base.component.ts:32",{"_index":221,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/base.component.ts:9",{"_index":214,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/reducers.t",{"_index":1431,"title":{},"body":{"interfaces/UiState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/ui/models/reducers/wizard.reducer.t",{"_index":1659,"title":{},"body":{"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/ui/models/wizard.t",{"_index":1014,"title":{},"body":{"interfaces/Map.html":{},"interfaces/Step.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/ui/ui",{"_index":1428,"title":{},"body":{"modules/UiRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/ui/ui.component.t",{"_index":1349,"title":{},"body":{"components/UiComponent.html":{},"coverage.html":{}}}],["src/app/ui/ui.component.ts:24",{"_index":1371,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:26",{"_index":1361,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:36",{"_index":1365,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:49",{"_index":1364,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:55",{"_index":1362,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:65",{"_index":1370,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:74",{"_index":1363,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:78",{"_index":1369,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:86",{"_index":1367,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.module.t",{"_index":1404,"title":{},"body":{"modules/UiModule.html":{}}}],["src/app/ui/utils.t",{"_index":696,"title":{},"body":{"classes/EnumValues.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/ui/utils.ts:5",{"_index":701,"title":{},"body":{"classes/EnumValues.html":{}}}],["src/app/ui/utils.ts:9",{"_index":704,"title":{},"body":{"classes/EnumValues.html":{}}}],["src/app/ui/weather/weather.component.t",{"_index":1451,"title":{},"body":{"components/WeatherComponent.html":{},"coverage.html":{}}}],["src/app/ui/weather/weather.component.ts:22",{"_index":1472,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:24",{"_index":1474,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:26",{"_index":1473,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:28",{"_index":1460,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:41",{"_index":1465,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:46",{"_index":1464,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:50",{"_index":1471,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:54",{"_index":1466,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:73",{"_index":1468,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:77",{"_index":1470,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:84",{"_index":1467,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:93",{"_index":1462,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/wizard/chang",{"_index":239,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"coverage.html":{}}}],["src/app/ui/wizard/estim",{"_index":711,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"coverage.html":{}}}],["src/app/ui/wizard/scheduler.service.t",{"_index":1120,"title":{},"body":{"injectables/SchedulerService.html":{},"coverage.html":{}}}],["src/app/ui/wizard/scheduler.service.ts:12",{"_index":1127,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["src/app/ui/wizard/scheduler.service.ts:128",{"_index":1132,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["src/app/ui/wizard/scheduler.service.ts:187",{"_index":1144,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["src/app/ui/wizard/scheduler.service.ts:27",{"_index":1128,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["src/app/ui/wizard/scheduler.service.ts:51",{"_index":1140,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["src/app/ui/wizard/search",{"_index":1214,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"coverage.html":{}}}],["src/app/ui/wizard/select",{"_index":1261,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{},"coverage.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.t",{"_index":1319,"title":{},"body":{"components/SimulationComponent.html":{},"coverage.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:16",{"_index":1323,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:18",{"_index":1322,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:26",{"_index":1324,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:32",{"_index":1327,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:36",{"_index":1325,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:40",{"_index":1326,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.t",{"_index":1336,"title":{},"body":{"components/StatisticsComponent.html":{},"coverage.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:11",{"_index":1341,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:13",{"_index":1340,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:17",{"_index":1342,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/wizard.component.t",{"_index":1584,"title":{},"body":{"components/WizardComponent.html":{},"coverage.html":{}}}],["src/app/ui/wizard/wizard.component.ts:119",{"_index":1591,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:19",{"_index":1600,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:21",{"_index":1601,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:23",{"_index":1604,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:25",{"_index":1590,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:33",{"_index":1592,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:92",{"_index":1595,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.service.t",{"_index":1633,"title":{},"body":{"injectables/WizardService.html":{},"coverage.html":{}}}],["src/app/ui/wizard/wizard.service.ts:12",{"_index":1652,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:14",{"_index":1639,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:22",{"_index":1647,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:31",{"_index":1651,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:38",{"_index":1649,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:45",{"_index":1643,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:52",{"_index":1645,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:59",{"_index":1646,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:66",{"_index":1641,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/utils.t",{"_index":1743,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/environments/environment.prod.t",{"_index":1746,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":1748,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.test.t",{"_index":1747,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":944,"title":{"index.html":{},"license.html":{}},"body":{"components/HomeComponent.html":{}}}],["starttest",{"_index":1824,"title":{},"body":{"index.html":{}}}],["state",{"_index":746,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["state.currentstep",{"_index":1678,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["state.error",{"_index":1680,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["state.map",{"_index":1676,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["state.pend",{"_index":1682,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["state.step",{"_index":1674,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["state.steps[action.payload.index",{"_index":1667,"title":{},"body":{"interfaces/WizardState.html":{}}}],["state.wizard",{"_index":1445,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["statement",{"_index":1684,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":697,"title":{},"body":{"classes/EnumValues.html":{},"modules/SharedModule.html":{}}}],["statist",{"_index":1337,"title":{},"body":{"components/StatisticsComponent.html":{},"components/WizardComponent.html":{}}}],["statistics'},{'nam",{"_index":110,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["statistics.component.html",{"_index":1339,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["statistics.component.scss",{"_index":1338,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["statisticscompon",{"_index":109,"title":{"components/StatisticsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["statu",{"_index":1004,"title":{},"body":{"injectables/LocationService.html":{}}}],["step",{"_index":298,"title":{"interfaces/Step.html":{}},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["stepchang",{"_index":795,"title":{"classes/StepChanged.html":{}},"body":{"classes/GoOn.html":{},"classes/MapChanged.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["stepclick",{"_index":1589,"title":{},"body":{"components/WizardComponent.html":{}}}],["stepclick(ev",{"_index":1593,"title":{},"body":{"components/WizardComponent.html":{}}}],["steperror",{"_index":797,"title":{"classes/StepError.html":{}},"body":{"classes/GoOn.html":{},"classes/MapChanged.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["steppend",{"_index":798,"title":{"classes/StepPending.html":{}},"body":{"classes/GoOn.html":{},"classes/MapChanged.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["stepper",{"_index":1587,"title":{},"body":{"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["stepperselectionev",{"_index":1594,"title":{},"body":{"components/WizardComponent.html":{}}}],["steps[0",{"_index":1056,"title":{},"body":{"components/MapComponent.html":{}}}],["steps[0].data.cent",{"_index":1057,"title":{},"body":{"components/MapComponent.html":{}}}],["steps[2",{"_index":1059,"title":{},"body":{"components/MapComponent.html":{}}}],["steps[2].data.odpair",{"_index":1061,"title":{},"body":{"components/MapComponent.html":{}}}],["steps[3",{"_index":1063,"title":{},"body":{"components/MapComponent.html":{}}}],["steps[3].data.odpair",{"_index":1064,"title":{},"body":{"components/MapComponent.html":{}}}],["store",{"_index":253,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WizardService.html":{}}}],["storemodul",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"modules/UiModule.html":{}}}],["storemodule.forfeature('ui",{"_index":1426,"title":{},"body":{"modules/UiModule.html":{}}}],["storemodule.forroot",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["strada",{"_index":40,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["strategi",{"_index":192,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["strategy.t",{"_index":175,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"coverage.html":{}}}],["strategy.ts:6",{"_index":181,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["stream",{"_index":1159,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["stream.subscrib",{"_index":1173,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["string",{"_index":271,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["structur",{"_index":566,"title":{},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["style",{"_index":821,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"miscellaneous/variables.html":{}}}],["styler",{"_index":1913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["styleurl",{"_index":14,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["subject",{"_index":1849,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":1844,"title":{},"body":{"license.html":{}}}],["subscrib",{"_index":218,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WeatherComponent.html":{}}}],["subscript",{"_index":209,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{}}}],["subscription.unsubscrib",{"_index":225,"title":{},"body":{"classes/BaseComponent.html":{},"components/UiComponent.html":{}}}],["subsequ",{"_index":1939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["substanti",{"_index":1853,"title":{},"body":{"license.html":{}}}],["sum",{"_index":374,"title":{},"body":{"injectables/DemandService.html":{}}}],["sum(odmatrixassign",{"_index":414,"title":{},"body":{"injectables/DemandService.html":{}}}],["sumexp",{"_index":688,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["sumexps.push(sum",{"_index":690,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["sumexps[z",{"_index":692,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["super",{"_index":310,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WeatherComponent.html":{}}}],["support",{"_index":1260,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"modules.html":{}}}],["sure",{"_index":1382,"title":{},"body":{"components/UiComponent.html":{}}}],["surfac",{"_index":532,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["svg",{"_index":1873,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":333,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{}}}],["switchmap",{"_index":1145,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["switchmap((respons",{"_index":1161,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["t",{"_index":705,"title":{},"body":{"classes/EnumValues.html":{}}}],["tabl",{"_index":1750,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1749,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":465,"title":{"interfaces/Tag.html":{}},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"coverage.html":{}}}],["tag.key",{"_index":613,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["tag.valu",{"_index":615,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["take",{"_index":485,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["tap",{"_index":1372,"title":{},"body":{"components/UiComponent.html":{}}}],["tap((dialogresult",{"_index":1385,"title":{},"body":{"components/UiComponent.html":{}}}],["target",{"_index":927,"title":{},"body":{"components/HomeComponent.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["templateurl",{"_index":16,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["term",{"_index":784,"title":{},"body":{"components/FooterComponent.html":{}}}],["test",{"_index":1893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testlicens",{"_index":1825,"title":{},"body":{"index.html":{}}}],["text",{"_index":920,"title":{},"body":{"components/HomeComponent.html":{}}}],["text.split",{"_index":922,"title":{},"body":{"components/HomeComponent.html":{}}}],["theta",{"_index":681,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["this.adddestination(control",{"_index":769,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.addorigin(control",{"_index":761,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.argmin(linkflow",{"_index":433,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.calcpathcosts(odpair",{"_index":680,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.calcshortestpathsprobabilities(odpair",{"_index":646,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.capac",{"_index":562,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.cent",{"_index":871,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.createmap(el",{"_index":864,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["this.demand",{"_index":423,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.demand.calcodmatrix",{"_index":1207,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.demand.changedemand(demand",{"_index":321,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["this.demand.getdemand",{"_index":344,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["this.demand.reset",{"_index":1156,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.demand[z",{"_index":449,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.dens",{"_index":556,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.descript",{"_index":311,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/WeatherComponent.html":{}}}],["this.descriptions.findindex(descript",{"_index":323,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["this.dialog.open(infodialogcompon",{"_index":1393,"title":{},"body":{"components/UiComponent.html":{}}}],["this.disabledefaultui",{"_index":872,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.disabledoubleclickzoom",{"_index":873,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.dist",{"_index":561,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.dur",{"_index":551,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.durationintraff",{"_index":550,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.edg",{"_index":580,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.edgeid",{"_index":549,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.edges.find((edg",{"_index":605,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.edges.push(edg",{"_index":608,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.elementref.nativeelement.queryselector('#iconcontain",{"_index":1477,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.elementref.nativeelement.queryselector('#map",{"_index":863,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["this.elementref.nativeelement.queryselector('.headlin",{"_index":918,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.estimate(linkflow",{"_index":436,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.flow",{"_index":558,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.formbuilder.array",{"_index":1613,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.formbuilder.group",{"_index":1612,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.formgroup.get('bounds').setvalue(map.data.bound",{"_index":1289,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.formgroup.get('center').setvalu",{"_index":1233,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.formgroup.get('odpair",{"_index":308,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{}}}],["this.formgroup.get('weathercondit",{"_index":332,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["this.geocod",{"_index":998,"title":{},"body":{"injectables/LocationService.html":{}}}],["this.geocoder.geocod",{"_index":1002,"title":{},"body":{"injectables/LocationService.html":{}}}],["this.gesturehandl",{"_index":877,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.getedge(edgeid).tags.find(tag",{"_index":612,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.getedgesfromshortestpath",{"_index":636,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.geticon(weather.icon",{"_index":1483,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.getnames(e).map((nam",{"_index":709,"title":{},"body":{"classes/EnumValues.html":{}}}],["this.getnode(node.nodeid",{"_index":589,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.getodnode(destin",{"_index":653,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.getodnode(origin",{"_index":652,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.gls(linkflow",{"_index":428,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.heap",{"_index":657,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.heap.push",{"_index":660,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.http.get(url",{"_index":1563,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.icon",{"_index":1482,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.iconcontain",{"_index":1476,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.incidencematrix",{"_index":643,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.incidencematrix[z][n][m",{"_index":641,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.index",{"_index":342,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{}}}],["this.isonpath(odmatrixassign",{"_index":437,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.isroundabout(edgeid",{"_index":616,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.latlng",{"_index":999,"title":{},"body":{"injectables/LocationService.html":{}}}],["this.linkflow",{"_index":560,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.location.codeaddress(address).foreach",{"_index":1232,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.location.getcurrentposition().subscrib",{"_index":1247,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.location.getlatlng().lat.tostr",{"_index":1558,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.location.getlatlng().lng.tostr",{"_index":1560,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.location.reset",{"_index":1153,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.location.setlatlng(cent",{"_index":1229,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.map.buildbounds(this.cent",{"_index":1049,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.drawpath",{"_index":1209,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.map.hidepath",{"_index":1053,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.hiderect",{"_index":1052,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.initmap(el",{"_index":870,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["this.map.reset",{"_index":1152,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.map.setcenter(this.cent",{"_index":867,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["this.map.setzoom(this.zoom",{"_index":869,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["this.map.shownodes(odpair",{"_index":1062,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.showpaths(odpair",{"_index":1065,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.showrect(bound",{"_index":1050,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.updatemap",{"_index":1172,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.maptypeid",{"_index":874,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.maxzoom",{"_index":875,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.min.getd",{"_index":1280,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.min.getfullyear",{"_index":1278,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.min.gethour",{"_index":1281,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.min.getminut",{"_index":1283,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.min.getmonth",{"_index":1279,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.minzoom",{"_index":876,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.network.calclinkflows(respons",{"_index":1206,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.correctgraph",{"_index":1168,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.creategraph(respons",{"_index":1163,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.getassignmentmatrix",{"_index":427,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.network.getgraph",{"_index":1200,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.getlinkflow",{"_index":426,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.network.getnetwork().pip",{"_index":1160,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.getnetworkdata",{"_index":1164,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.getodpair",{"_index":343,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/SchedulerService.html":{}}}],["this.network.gettim",{"_index":1171,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.gettimestr",{"_index":1486,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.network.gettrafficdata",{"_index":1205,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.reset",{"_index":1154,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.setbounds(bound",{"_index":1285,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.network.setodpairs(odpair",{"_index":740,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.network.settime(tim",{"_index":1287,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.network.updategraph(respons",{"_index":1166,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.nod",{"_index":578,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.nodeid",{"_index":545,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.nodes.filter((nod",{"_index":625,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.nodes.find((nod",{"_index":585,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.nodes.push(nod",{"_index":603,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.odmatrix",{"_index":424,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.odmatrix[z][0",{"_index":450,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.odmatrix[z][n",{"_index":447,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.opendialog('ar",{"_index":1381,"title":{},"body":{"components/UiComponent.html":{}}}],["this.opensnackbar(error",{"_index":1380,"title":{},"body":{"components/UiComponent.html":{}}}],["this.paths.findindex((path",{"_index":899,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["this.paths.push",{"_index":894,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["this.paths.reduce((prev",{"_index":901,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["this.paths.splice(index",{"_index":900,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["this.pathtyp",{"_index":738,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.pend",{"_index":1378,"title":{},"body":{"components/UiComponent.html":{}}}],["this.receiveact",{"_index":314,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/WeatherComponent.html":{}}}],["this.rel",{"_index":582,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.relationid",{"_index":571,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.renderer.appendchild(this.iconcontain",{"_index":1484,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.renderer.removechild(this.iconcontain",{"_index":1487,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.reset",{"_index":1196,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.resetcondit",{"_index":1479,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.resetcount",{"_index":655,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.router.navigate(['/hom",{"_index":1389,"title":{},"body":{"components/UiComponent.html":{}}}],["this.scheduler.reset",{"_index":1387,"title":{},"body":{"components/UiComponent.html":{}}}],["this.scheduler.scheduledemand(data",{"_index":1630,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.scheduler.schedulenetwork(data",{"_index":1629,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.scheduler.schedulesimulation(data",{"_index":1631,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.sendact",{"_index":315,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/WeatherComponent.html":{}}}],["this.setconditions(weathercondit",{"_index":1480,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.sharedemand(assignmentmatrix",{"_index":429,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.shortestpath",{"_index":632,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.shortestpaths[i",{"_index":665,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.shortestpathsedg",{"_index":635,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.shortestpathsedges[m].edgeid",{"_index":639,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.show",{"_index":943,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.simulation.reset",{"_index":1157,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.snackbar.openfromcomponent(messagearchivedcompon",{"_index":1390,"title":{},"body":{"components/UiComponent.html":{}}}],["this.stat",{"_index":1656,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.stepp",{"_index":1624,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.stepper.reset",{"_index":1657,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.stepper.selected.complet",{"_index":1628,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.store.dispatch",{"_index":1658,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.store.pipe(select(fromui.wizardstate)).subscribe((st",{"_index":1655,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.styl",{"_index":878,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.subscriptions.foreach((subscript",{"_index":224,"title":{},"body":{"classes/BaseComponent.html":{},"components/UiComponent.html":{}}}],["this.subscriptions.push(this.formgroup.get('bounds').valuechanges.subscrib",{"_index":1284,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.subscriptions.push(this.formgroup.get('center').valuechanges.subscrib",{"_index":1228,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.subscriptions.push(this.formgroup.get('odpairs').valuechanges.subscrib",{"_index":318,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{}}}],["this.subscriptions.push(this.formgroup.get('time').valuechanges.subscrib",{"_index":1286,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.subscriptions.push(this.formgroup.get('weatherconditions').valuechanges.subscrib",{"_index":322,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromui.currentstep)).subscribe((currentstep",{"_index":329,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/WeatherComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromui.error)).subscribe((error",{"_index":1379,"title":{},"body":{"components/UiComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromui.map)).subscribe((map",{"_index":743,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromui.pending)).subscribe((pend",{"_index":1377,"title":{},"body":{"components/UiComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromui.steps)).subscribe((step",{"_index":1054,"title":{},"body":{"components/MapComponent.html":{}}}],["this.sum(odmatrixassign",{"_index":440,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.tim",{"_index":1485,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.updateodpairs(map.data.selectednod",{"_index":745,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.valuechang",{"_index":313,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{}}}],["this.veloc",{"_index":552,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.walk(o",{"_index":663,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.weather.changeweather(weathercondit",{"_index":328,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["this.weather.getfactor",{"_index":1212,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.weather.getweathercondit",{"_index":1478,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.weather.getweatherdata(this.network.gettim",{"_index":1169,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.weather.reset",{"_index":1155,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.weather.updateweatherdata(respons",{"_index":1170,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.weathercondit",{"_index":1553,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.wizard.goon",{"_index":1632,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.wizard.goon(data",{"_index":1199,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.wizard.putinerror(\"brows",{"_index":1258,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.putinerror('invalid",{"_index":1244,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.putinerror('zero",{"_index":1239,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.putinerror(error",{"_index":770,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.wizard.putinerror(messag",{"_index":1195,"title":{},"body":{"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.putonhold('check",{"_index":1167,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.wizard.putonhold('comput",{"_index":1201,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.wizard.putonhold('cr",{"_index":1162,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.wizard.putonhold('draw",{"_index":1208,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.wizard.putonhold('get",{"_index":1158,"title":{},"body":{"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.putonhold('search",{"_index":1230,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.putonhold('upd",{"_index":1165,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.wizard.removefromwait",{"_index":1198,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.wizard.reset",{"_index":1151,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.wizard.state.currentstep",{"_index":1055,"title":{},"body":{"components/MapComponent.html":{}}}],["this.wizard.stepp",{"_index":1623,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.wizard.updatestep",{"_index":771,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.wizard.updatestep(this.formgroup.valu",{"_index":747,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{}}}],["this.wizardform",{"_index":1611,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.wizardform.get('formstep",{"_index":1610,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.wizardform.get('formsteps').get([index]).valu",{"_index":1627,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.zoom",{"_index":879,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["through",{"_index":970,"title":{},"body":{"injectables/LocationService.html":{}}}],["throwerror",{"_index":507,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{}}}],["throwerror('calcshortestpath",{"_index":629,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["throwerror('getweatherdata",{"_index":1567,"title":{},"body":{"injectables/WeatherService.html":{}}}],["thunderstorm",{"_index":1511,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["time",{"_index":48,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{},"injectables/SchedulerService.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["time.gettim",{"_index":1576,"title":{},"body":{"injectables/WeatherService.html":{}}}],["time.gettimezoneoffset",{"_index":1570,"title":{},"body":{"injectables/WeatherService.html":{}}}],["timelimit",{"_index":1921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["timeout",{"_index":1257,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["timezon",{"_index":1573,"title":{},"body":{"injectables/WeatherService.html":{}}}],["timezoneoffset",{"_index":1569,"title":{},"body":{"injectables/WeatherService.html":{}}}],["togglevalu",{"_index":248,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["togglevalue(pair",{"_index":275,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["toinch",{"_index":1526,"title":{},"body":{"injectables/WeatherService.html":{}}}],["toinches(valu",{"_index":1544,"title":{},"body":{"injectables/WeatherService.html":{}}}],["tool",{"_index":1811,"title":{},"body":{"index.html":{}}}],["toolbox",{"_index":1952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tort",{"_index":1870,"title":{},"body":{"license.html":{}}}],["total",{"_index":484,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["traffic",{"_index":42,"title":{},"body":{"components/AboutComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"injectables/SimulationService.html":{},"interfaces/Tag.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["trafficdata",{"_index":1899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transit",{"_index":1917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('void",{"_index":1906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translat",{"_index":1770,"title":{},"body":{"dependencies.html":{}}}],["translatez",{"_index":932,"title":{},"body":{"components/HomeComponent.html":{}}}],["transport",{"_index":573,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["tri",{"_index":628,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{}}}],["trigger('hometransit",{"_index":1905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"miscellaneous/variables.html":{}}}],["turf/area",{"_index":1762,"title":{},"body":{"dependencies.html":{}}}],["turf/bear",{"_index":1767,"title":{},"body":{"dependencies.html":{}}}],["turf/cent",{"_index":1774,"title":{},"body":{"dependencies.html":{}}}],["turf/centroid",{"_index":1772,"title":{},"body":{"dependencies.html":{}}}],["turf/dist",{"_index":1768,"title":{},"body":{"dependencies.html":{}}}],["turf/help",{"_index":1763,"title":{},"body":{"dependencies.html":{}}}],["turf/invari",{"_index":1765,"title":{},"body":{"dependencies.html":{}}}],["turf/transform",{"_index":1769,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":453,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["type",{"_index":31,"title":{},"body":{"components/AboutComponent.html":{},"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealias",{"_index":1880,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typescript",{"_index":65,"title":{},"body":{"components/AboutComponent.html":{}}}],["ui",{"_index":98,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["ui'},{'nam",{"_index":112,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["ui.compon",{"_index":1410,"title":{},"body":{"modules/UiModule.html":{},"modules/UiRoutingModule.html":{}}}],["ui.component.html",{"_index":1351,"title":{},"body":{"components/UiComponent.html":{}}}],["ui.component.scss",{"_index":1350,"title":{},"body":{"components/UiComponent.html":{}}}],["ui/ui",{"_index":421,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{}}}],["ui/ui.module#uimodul",{"_index":200,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["uicompon",{"_index":111,"title":{"components/UiComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uiconfig",{"_index":305,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uiconfig.map.cent",{"_index":1044,"title":{},"body":{"components/MapComponent.html":{}}}],["uiconfig.map.zoom",{"_index":1045,"title":{},"body":{"components/MapComponent.html":{}}}],["uiconfig.maxodpair",{"_index":752,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["uiconfig.sp",{"_index":555,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["uiconfig.theta",{"_index":682,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["uiconfig.timelimit",{"_index":1282,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["uiconfig.weathericons[index",{"_index":326,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["uimodul",{"_index":1398,"title":{"modules/UiModule.html":{}},"body":{"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["uiroutingmodul",{"_index":1403,"title":{"modules/UiRoutingModule.html":{}},"body":{"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["uistat",{"_index":1430,"title":{"interfaces/UiState.html":{}},"body":{"interfaces/UiState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unavail",{"_index":1255,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["undefin",{"_index":584,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/functions.html":{}}}],["under",{"_index":1801,"title":{},"body":{"index.html":{}}}],["unexpect",{"_index":1194,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["unix",{"_index":1579,"title":{},"body":{"injectables/WeatherService.html":{}}}],["unknown",{"_index":392,"title":{},"body":{"injectables/DemandService.html":{}}}],["unknown_error",{"_index":1243,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["updat",{"_index":316,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"components/MapComponent.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{},"index.html":{}}}],["updatemap",{"_index":1637,"title":{},"body":{"injectables/WizardService.html":{}}}],["updatemap(data",{"_index":1648,"title":{},"body":{"injectables/WizardService.html":{}}}],["updateodpair",{"_index":719,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["updateodpairs(nod",{"_index":732,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["updateon",{"_index":1621,"title":{},"body":{"components/WizardComponent.html":{}}}],["updatestep",{"_index":1638,"title":{},"body":{"injectables/WizardService.html":{}}}],["updatestep(data",{"_index":1650,"title":{},"body":{"injectables/WizardService.html":{}}}],["updateweatherdata",{"_index":1527,"title":{},"body":{"injectables/WeatherService.html":{}}}],["updateweatherdata(data",{"_index":1546,"title":{},"body":{"injectables/WeatherService.html":{}}}],["uppercas",{"_index":1492,"title":{},"body":{"components/WeatherComponent.html":{}}}],["urban",{"_index":41,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["url",{"_index":1554,"title":{},"body":{"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["us",{"_index":45,"title":{},"body":{"components/AboutComponent.html":{},"classes/Edge.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"index.html":{},"license.html":{}}}],["usefactori",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":1432,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["utc",{"_index":1580,"title":{},"body":{"injectables/WeatherService.html":{}}}],["utctim",{"_index":1575,"title":{},"body":{"injectables/WeatherService.html":{}}}],["util",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{}}}],["valid",{"_index":290,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WizardComponent.html":{}}}],["validators.max(uiconfig.rainintensity.max",{"_index":1619,"title":{},"body":{"components/WizardComponent.html":{}}}],["validators.max(uiconfig.snowintensity.max",{"_index":1620,"title":{},"body":{"components/WizardComponent.html":{}}}],["validators.max(uiconfig.visibility.max",{"_index":1616,"title":{},"body":{"components/WizardComponent.html":{}}}],["validators.min(0",{"_index":1615,"title":{},"body":{"components/WizardComponent.html":{}}}],["validators.pattern('^[0",{"_index":1617,"title":{},"body":{"components/WizardComponent.html":{}}}],["validators.requir",{"_index":1614,"title":{},"body":{"components/WizardComponent.html":{}}}],["valu",{"_index":33,"title":{},"body":{"components/AboutComponent.html":{},"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.edgeid",{"_index":638,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["valuechang",{"_index":213,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/WeatherComponent.html":{}}}],["var",{"_index":71,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["variabl",{"_index":1692,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["varianc",{"_index":504,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["vehicl",{"_index":1940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["veloc",{"_index":466,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["version",{"_index":650,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{}}}],["viewchild",{"_index":1599,"title":{},"body":{"components/WizardComponent.html":{}}}],["viewchild('stepp",{"_index":1609,"title":{},"body":{"components/WizardComponent.html":{}}}],["viewencapsul",{"_index":1036,"title":{},"body":{"components/MapComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["viewencapsulation.non",{"_index":1019,"title":{},"body":{"components/MapComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["visibl",{"_index":1496,"title":{},"body":{"interfaces/WeatherConditions.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":29,"title":{},"body":{"components/AboutComponent.html":{},"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["volum",{"_index":1953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wait",{"_index":1197,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["walk",{"_index":662,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["want",{"_index":1383,"title":{},"body":{"components/UiComponent.html":{}}}],["warranti",{"_index":1855,"title":{},"body":{"license.html":{}}}],["weather",{"_index":257,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["weather'},{'nam",{"_index":114,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["weather.component.html",{"_index":1453,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.component.scss",{"_index":1452,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.descript",{"_index":1481,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.servic",{"_index":1517,"title":{},"body":{"modules/WeatherModule.html":{}}}],["weather/weather.compon",{"_index":1424,"title":{},"body":{"modules/UiModule.html":{}}}],["weather/weather.modul",{"_index":1103,"title":{},"body":{"modules/NetworkModule.html":{}}}],["weathercompon",{"_index":113,"title":{"components/WeatherComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weathercondit",{"_index":302,"title":{"interfaces/WeatherConditions.html":{}},"body":{"components/ChangeOfConditionsComponent.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"coverage.html":{}}}],["weatherconditions.descript",{"_index":324,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["weatherconditions.icon",{"_index":327,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["weatherconditionscontrol",{"_index":331,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["weatherdescript",{"_index":283,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["weathericon",{"_index":1962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weathermodul",{"_index":1101,"title":{"modules/WeatherModule.html":{}},"body":{"modules/NetworkModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["weatherservic",{"_index":258,"title":{"injectables/WeatherService.html":{}},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/SchedulerService.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"overview.html":{}}}],["web",{"_index":43,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{},"dependencies.html":{},"index.html":{}}}],["whether",{"_index":1868,"title":{},"body":{"license.html":{}}}],["whole",{"_index":1129,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["width",{"_index":1394,"title":{},"body":{"components/UiComponent.html":{}}}],["wip",{"_index":1328,"title":{},"body":{"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{}}}],["without",{"_index":670,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"license.html":{}}}],["wizard",{"_index":82,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["wizard.component.html",{"_index":1586,"title":{},"body":{"components/WizardComponent.html":{}}}],["wizard.component.scss",{"_index":1585,"title":{},"body":{"components/WizardComponent.html":{}}}],["wizard.servic",{"_index":292,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/WizardComponent.html":{}}}],["wizard/chang",{"_index":1417,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/estim",{"_index":1415,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/scheduler.servic",{"_index":1374,"title":{},"body":{"components/UiComponent.html":{},"modules/UiModule.html":{}}}],["wizard/search",{"_index":1412,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/select",{"_index":1414,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/simulation/simulation.compon",{"_index":1419,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/statistics/statistics.compon",{"_index":1420,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/wizard.compon",{"_index":1411,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/wizard.servic",{"_index":1037,"title":{},"body":{"components/MapComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{}}}],["wizardact",{"_index":808,"title":{},"body":{"classes/GoOn.html":{},"classes/MapChanged.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/WizardState.html":{},"miscellaneous/typealiases.html":{}}}],["wizardactiontyp",{"_index":794,"title":{},"body":{"classes/GoOn.html":{},"classes/MapChanged.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{}}}],["wizardactiontypes.goon",{"_index":792,"title":{},"body":{"classes/GoOn.html":{},"classes/MapChanged.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["wizardactiontypes.mapchang",{"_index":803,"title":{},"body":{"classes/GoOn.html":{},"classes/MapChanged.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["wizardactiontypes.reset",{"_index":807,"title":{},"body":{"classes/GoOn.html":{},"classes/MapChanged.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["wizardactiontypes.stepchang",{"_index":801,"title":{},"body":{"classes/GoOn.html":{},"classes/MapChanged.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["wizardactiontypes.steperror",{"_index":804,"title":{},"body":{"classes/GoOn.html":{},"classes/MapChanged.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["wizardactiontypes.steppend",{"_index":805,"title":{},"body":{"classes/GoOn.html":{},"classes/MapChanged.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["wizardcompon",{"_index":115,"title":{"components/WizardComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["wizardform",{"_index":1588,"title":{},"body":{"components/WizardComponent.html":{}}}],["wizardreduc",{"_index":1729,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["wizardreducer(st",{"_index":1664,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/functions.html":{}}}],["wizardservic",{"_index":254,"title":{"injectables/WizardService.html":{}},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"coverage.html":{},"overview.html":{}}}],["wizardst",{"_index":1444,"title":{"interfaces/WizardState.html":{}},"body":{"interfaces/UiState.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wrap",{"_index":981,"title":{},"body":{"injectables/LocationService.html":{}}}],["wrappedtext",{"_index":923,"title":{},"body":{"components/HomeComponent.html":{}}}],["x",{"_index":390,"title":{},"body":{"injectables/DemandService.html":{}}}],["xi",{"_index":1954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ye",{"_index":948,"title":{},"body":{"components/InfoDialogComponent.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{}}}],["z",{"_index":432,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["zero",{"_index":654,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/OdPairShowing.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["zone.j",{"_index":1789,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"components/GoogleMapComponent.html":{},"modules/LocationModule.html":{},"components/MapComponent.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutComponent.html":{"url":"components/AboutComponent.html","title":"component - AboutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AboutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/about/about.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n            \n                styleUrls\n                about.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./about.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentYear\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/about/about.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/about/about.component.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentYear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentYear:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : new Date().getFullYear()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/about/about.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-about',\n    templateUrl: './about.component.html',\n    styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n\n    currentYear: number = new Date().getFullYear();\n\n    constructor() { }\n\n    ngOnInit(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    STRADA\n    An urban traffic web simulator that uses data in real time\n    Copyright&nbsp;©&nbsp;{{ currentYear }} Roberto&nbsp;Simonetti\n    Project developed for the dissertation of my bachelor's degree in computer engineering\n    Links\n    \n        \n            \n                Repository:\n                STRADA source code\n            \n        \n        \n            \n                Official documentation:\n                STRADA documentation\n            \n        \n    \n    Built with\n    \n        \n            \n                Angular, TypeScript & Firebase\n            \n        \n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    STRADA    An urban traffic web simulator that uses data in real time    Copyright © {{ currentYear }} Roberto Simonetti    Project developed for the dissertation of my bachelor\\'s degree in computer engineering    Links                                        Repository:                STRADA source code                                                        Official documentation:                STRADA documentation                            Built with                                        Angular, TypeScript & Firebase                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent { }\n\n    \n\n    \n        \n\n    \n        \n            \n            \n                STRADA\n            \n\n            \n\n            \n                \n            \n            \n                \n                    About\n                \n            \n        \n    \n\n    \n\n        \n            \n        \n\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    STRADA                                                                                                                About                                                                            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nDemandModule\n\nDemandModule\n\nAppModule -->\n\nDemandModule->AppModule\n\n\n\n\n\nLocationModule\n\nLocationModule\n\nAppModule -->\n\nLocationModule->AppModule\n\n\n\n\n\nNetworkModule\n\nNetworkModule\n\nAppModule -->\n\nNetworkModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nSimulationModule\n\nSimulationModule\n\nAppModule -->\n\nSimulationModule->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AboutComponent\n                            \n                            \n                                AppComponent\n                            \n                            \n                                HomeComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                            \n                                    DemandModule\n                            \n                            \n                                    LocationModule\n                            \n                            \n                                    NetworkModule\n                            \n                            \n                                    SharedModule\n                            \n                            \n                                    SimulationModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule, APP_INITIALIZER } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { SharedModule } from './shared/shared.module';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { AboutComponent } from './about/about.component';\nimport { LocationModule } from './location/location.module';\nimport { NetworkModule } from './network/network.module';\nimport { DemandModule } from './demand/demand.module';\nimport { SimulationModule } from './simulation/simulation.module';\n\nimport { loadScripts } from './utils';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        HomeComponent,\n        AboutComponent\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        SharedModule.forRoot(),\n        StoreModule.forRoot({}),\n        EffectsModule.forRoot([]),\n        LocationModule,\n        NetworkModule,\n        DemandModule,\n        SimulationModule\n    ],\n    providers: [\n        {\n            provide: APP_INITIALIZER,\n            useFactory: loadScripts,\n            deps: [],\n            multi: true\n        }\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPreloadingStrategy.html":{"url":"classes/AppPreloadingStrategy.html","title":"class - AppPreloadingStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPreloadingStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app-preloading-strategy.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        PreloadingStrategy\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                preload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            preload\n                            \n                            \n                        \n                    \n                \n                \n                    \npreload(route: Route, load: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app-preloading-strategy.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    Route\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        load\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { PreloadingStrategy, Route } from \"@angular/router\";\nimport { Observable, of } from \"rxjs\";\n\nexport class AppPreloadingStrategy implements PreloadingStrategy {\n\n    preload(route: Route, load: Function): Observable {\n        return route.data && route.data.preload ? load() : of(null);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppPreloadingStrategy } from './app-preloading-strategy';\n\nimport { HomeComponent } from './home/home.component';\nimport { AboutComponent } from './about/about.component';\n\nconst routes: Routes = [\n    { path: '', redirectTo: 'home', pathMatch: 'full' },\n    { path: 'home', component: HomeComponent },\n    { path: 'about', component: AboutComponent },\n    {\n        path: 'simulation',\n        loadChildren: './ui/ui.module#UiModule',\n        data: { preload: false }\n    },\n    { path: '**', redirectTo: 'home' }\n];\n\n@NgModule({\n    providers: [AppPreloadingStrategy],\n    imports: [\n        RouterModule.forRoot(routes, {\n            preloadingStrategy: AppPreloadingStrategy\n        })\n    ],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseComponent.html":{"url":"classes/BaseComponent.html","title":"class - BaseComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/base.component.ts\n        \n\n            \n                Description\n            \n            \n                Abstract class inherited from UI components.\n\n            \n\n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { OnInit, OnDestroy } from \"@angular/core\";\nimport { Subscription } from \"rxjs\";\n\n/**\n * Abstract class inherited from UI components.\n */\nexport abstract class BaseComponent implements OnInit, OnDestroy {\n\n    subscriptions: Subscription[] = [];\n\n    abstract ngOnInit(): void;\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach((subscription: Subscription) => {\n            if (subscription) { subscription.unsubscribe(); }\n        });\n    }\n\n    /**\n     * Subscribes to the form changes.\n     */\n    abstract valueChanges(): void;\n\n    /**\n     * Subscribes to the actions sent by other components.\n     */\n    abstract receiveActions(): void;\n\n    /**\n     * Subscribes to the actions sent to other components.\n     */\n    abstract sendActions(): void;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CanComponentDeactivate.html":{"url":"interfaces/CanComponentDeactivate.html","title":"interface - CanComponentDeactivate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CanComponentDeactivate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/can-deactivate-guard.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        canDeactivate\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canDeactivate\n                                    \n                                \n                                \n                                    \n                                        canDeactivate:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nexport interface CanComponentDeactivate {\n    canDeactivate: () => Observable | Promise | boolean;\n}\n\n@Injectable()\nexport class CanDeactivateGuard implements CanDeactivate {\n    canDeactivate(component: CanComponentDeactivate) {\n        return component.canDeactivate ? component.canDeactivate() : true;\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CanDeactivateGuard.html":{"url":"injectables/CanDeactivateGuard.html","title":"injectable - CanDeactivateGuard","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  CanDeactivateGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/can-deactivate-guard.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canDeactivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canDeactivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanDeactivate(component: CanComponentDeactivate)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/can-deactivate-guard.service.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        component\n                                                        \n                                                                    CanComponentDeactivate\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nexport interface CanComponentDeactivate {\n    canDeactivate: () => Observable | Promise | boolean;\n}\n\n@Injectable()\nexport class CanDeactivateGuard implements CanDeactivate {\n    canDeactivate(component: CanComponentDeactivate) {\n        return component.canDeactivate ? component.canDeactivate() : true;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangeOfConditionsComponent.html":{"url":"components/ChangeOfConditionsComponent.html","title":"component - ChangeOfConditionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChangeOfConditionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-change-of-conditions\n            \n\n            \n                styleUrls\n                change-of-conditions.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./change-of-conditions.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                descriptions\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildOdPair\n                            \n                            \n                                getVisibility\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                toggleValue\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, wizard: WizardService, network: NetworkService, weather: WeatherService, demand: DemandService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        weather\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        demand\n                                                  \n                                                        \n                                                                    DemandService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:28\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buildOdPair\n                            \n                            \n                        \n                    \n                \n                \n                    \nbuildOdPair(odPair: , demand: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:117\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        odPair\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        demand\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FormGroup\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getVisibility\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetVisibility(pair: AbstractControl)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:113\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pair\n                                                        \n                                                                    AbstractControl\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:102\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleValue\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleValue(pair: AbstractControl)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:106\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pair\n                                                        \n                                                                    AbstractControl\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            descriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        descriptions:     WeatherDescription[]\n\n                    \n                \n                    \n                        \n                            Type :     WeatherDescription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        odPairs\n                    \n                \n\n                \n                    \n                        getodPairs()\n                    \n                \n                            \n                                \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:32\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, FormArray, AbstractControl, Validators } from '@angular/forms';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { WizardService } from '../wizard.service';\nimport { NetworkService } from '../../../network/network.service';\nimport { WeatherService } from '../../../network/weather/weather.service';\nimport { DemandService } from '../../../demand/demand.service';\nimport * as fromUi from '../../models/reducers';\nimport { Step } from '../../models/wizard';\nimport { OdPairShowing } from '../../../network/graph';\nimport { WeatherDescription, WeatherConditions } from '../../../network/weather/weather';\nimport { EnumValues } from '../../utils';\nimport { uiConfig } from '../../ui-config';\n\nimport { BaseComponent } from '../../models/base.component';\n\n@Component({\n    selector: 'wizard-change-of-conditions',\n    templateUrl: './change-of-conditions.component.html',\n    styleUrls: ['./change-of-conditions.component.scss']\n})\nexport class ChangeOfConditionsComponent extends BaseComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    descriptions: WeatherDescription[] = [];\n\n    get odPairs(): FormArray {\n        return this.formGroup.get('odPairs') as FormArray;\n    }\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private store: Store,\n        private wizard: WizardService,\n        private network: NetworkService,\n        private weather: WeatherService,\n        private demand: DemandService\n    ) {\n        super();\n\n        this.descriptions = EnumValues.getValues(WeatherDescription);\n    }\n\n    ngOnInit(): void {\n        this.valueChanges();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        // Updates demand service data on value changes.\n        this.subscriptions.push(this.formGroup.get('odPairs').valueChanges.subscribe(\n            (odPairs: OdPairShowing[]) => {\n                const demand = odPairs.map((pair: OdPairShowing) => {\n                    return pair.demand;\n                });\n                this.demand.changeDemand(demand);\n            }\n        ));\n        // Updates weather service data on value changes.\n        this.subscriptions.push(this.formGroup.get('weatherConditions').valueChanges.subscribe(\n            (weatherConditions: WeatherConditions) => {\n                const index = this.descriptions.findIndex(description => description == weatherConditions.description);\n                const icon = uiConfig.weatherIcons[index];\n                weatherConditions.icon = icon;\n                this.weather.changeWeather(weatherConditions);\n            }\n        ));\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.currentStep)).subscribe((currentStep: number) => {\n            const odPairsControl = this.formGroup.get('odPairs') as FormArray;\n            const weatherConditionsControl = this.formGroup.get('weatherConditions');\n            switch (currentStep) {\n                case 0:\n                    // Resets control.\n                    if (odPairsControl.length > 0) {\n                        for (let i = odPairsControl.length - 1; i >= 0; i--) {\n                            odPairsControl.removeAt(i);\n                        }\n                    }\n                    break;\n                case this.index:\n                    const odPairs = this.network.getOdPairs();\n                    const demand = this.demand.getDemand();\n                    for (let i = 0; i \n    \n\n    \n        \n    \n        \n            \n                \n                    O\n                    D\n                    Path\n                    Demand\n                    \n                \n                \n                    \n                        {{ pair.value.origin }}\n                    \n                    \n                        {{ pair.value.destination }}\n                    \n                    \n                        {{ pair.value.pathType }}\n                    \n                    \n                        \n                            \n                            \n                                Invalid value\n                            \n                        \n                    \n                    \n                        \n                            {{ getVisibility(pair) }}\n                        \n                    \n                \n            \n        \n        \n        \n            \n                \n                    \n                        {{ description }}\n                    \n                \n            \n            \n                \n                m\n                \n                    Invalid value\n                \n            \n            \n                \n                mm\n                \n                    Invalid value\n                \n            \n            \n                \n                mm\n                \n                    Invalid value\n                \n            \n        \n    \n\n    \n        Continue\n            navigate_next\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            O                    D                    Path                    Demand                                                                                                {{ pair.value.origin }}                                                                {{ pair.value.destination }}                                                                {{ pair.value.pathType }}                                                                                                                                                        Invalid value                                                                                                                                                {{ getVisibility(pair) }}                                                                                                                                                                        {{ description }}                                                                                            m                                    Invalid value                                                                        mm                                    Invalid value                                                                        mm                                    Invalid value                                                    Continue            navigate_next            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChangeOfConditionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Clock.html":{"url":"classes/Clock.html","title":"class - Clock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Clock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/clock.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Clock {\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DemandModule.html":{"url":"modules/DemandModule.html","title":"module - DemandModule","body":"\n                   \n\n\n\n\n  Modules\n  DemandModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DemandModule\n\n\n\ncluster_DemandModule_providers\n\n\n\n\nDemandService\n\nDemandService\n\n\n\nDemandModule\n\nDemandModule\n\nDemandModule -->\n\nDemandService->DemandModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/demand/demand.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     DemandService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { DemandService } from './demand.service';\n\n@NgModule({\n    imports: [],\n    declarations: [],\n    providers: [DemandService]\n})\nexport class DemandModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DemandService.html":{"url":"injectables/DemandService.html","title":"injectable - DemandService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  DemandService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/demand/demand.service.ts\n        \n\n            \n                Description\n            \n            \n                Estimates the O/D matrix of the traffic demand.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                demand\n                            \n                            \n                                    Private\n                                odMatrix\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                argmin\n                            \n                            \n                                    Public\n                                calcOdMatrix\n                            \n                            \n                                    Public\n                                changeDemand\n                            \n                            \n                                    Private\n                                estimate\n                            \n                            \n                                    Public\n                                getDemand\n                            \n                            \n                                    Public\n                                getOdMatrix\n                            \n                            \n                                    Public\n                                gls\n                            \n                            \n                                    Private\n                                isOnPath\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Private\n                                shareDemand\n                            \n                            \n                                    Private\n                                sum\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(network: NetworkService)\n                    \n                \n                        \n                            \n                                Defined in src/app/demand/demand.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            argmin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        argmin(linkFlows: LinkFlow[], odMatrixAssignment: number[][])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:85\n                            \n                        \n\n\n                \n                    \n                            Argument of the minimum function.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        linkFlows\n                                                        \n                                                                    LinkFlow[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The link flows\n\n                                                        \n                                                \n                                                \n                                                        odMatrixAssignment\n                                                        \n                                                                    number[][]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Assignment matrix of the O/D pair\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            calcOdMatrix\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        calcOdMatrix()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:35\n                            \n                        \n\n\n                \n                    \n                            Calculates O/D matrix.\n\n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            changeDemand\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        changeDemand(demand: number[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        demand\n                                                        \n                                                                    number[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            estimate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        estimate(linkFlows: LinkFlow[], odMatrixAssignment: number[][], x: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:105\n                            \n                        \n\n\n                \n                    \n                            Estimates the sum for the unknown demand.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        linkFlows\n                                                        \n                                                                    LinkFlow[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The link flows\n\n                                                        \n                                                \n                                                \n                                                        odMatrixAssignment\n                                                        \n                                                                    number[][]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Assignment matrix of the O/D pair\n\n                                                        \n                                                \n                                                \n                                                        x\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The unknown demand\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getDemand\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getDemand()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     number[]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getOdMatrix\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getOdMatrix()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     [][]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gls\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        gls(linkFlows: LinkFlow[], assignmentMatrix: [][][])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:71\n                            \n                        \n\n\n                \n                    \n                            Generalized Least Squares (GLS).\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        linkFlows\n                                                        \n                                                                    LinkFlow[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The link flows\n\n                                                        \n                                                \n                                                \n                                                        assignmentMatrix\n                                                        \n                                                                    [][][]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Assignment matrix [pairs,paths,edges]\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     [] | null\n\n                            \n                                \n                                    The array of the demand\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isOnPath\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isOnPath(odMatrixAssignment: number[][], i: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:138\n                            \n                        \n\n\n                \n                    \n                            Checks that the edge belongs to one of the paths of the O/D pair.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        odMatrixAssignment\n                                                        \n                                                                    number[][]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Assignment matrix of the O/D pair\n\n                                                        \n                                                \n                                                \n                                                        i\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The index of the edge\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            shareDemand\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        shareDemand(assignmentMatrix: [][][])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:151\n                            \n                        \n\n\n                \n                    \n                            Shares the demand on each path.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        assignmentMatrix\n                                                        \n                                                                    [][][]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Assignment matrix [pairs,paths,edges]\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sum\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sum(odMatrixAssignment: number[][], i: number, x: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:123\n                            \n                        \n\n\n                \n                    \n                            Sums the unknown demand probability for each path.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        odMatrixAssignment\n                                                        \n                                                                    number[][]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Assignment matrix of the O/D pair\n\n                                                        \n                                                \n                                                \n                                                        i\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The index of the edge\n\n                                                        \n                                                \n                                                \n                                                        x\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The unknown demand\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            demand\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        demand:     number[]\n\n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:18\n                            \n                        \n\n                \n                    \n                        The array of the demand [pairs].\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            odMatrix\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        odMatrix:     number[][]\n\n                    \n                \n                    \n                        \n                            Type :     number[][]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:23\n                            \n                        \n\n                \n                    \n                        The matrix of the demand [pairs,paths]\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\nimport * as math from 'mathjs';\n\nimport { NetworkService } from '../network/network.service';\nimport { LinkFlow } from '../network/graph';\nimport { uiConfig } from '../ui/ui-config';\n\n/**\n * Estimates the O/D matrix of the traffic demand.\n */\n@Injectable() export class DemandService {\n\n    /**\n     * The array of the demand [pairs].\n     */\n    private demand: number[] = [];\n\n    /**\n     * The matrix of the demand [pairs,paths]\n     */\n    private odMatrix: number[][] = [];\n\n    constructor(private network: NetworkService) { }\n\n    public reset(): void {\n        this.demand = [];\n        this.odMatrix = [];\n    }\n\n    /**\n     * Calculates O/D matrix.\n     */\n    public calcOdMatrix(): Observable {\n        // Gets link flows from network.\n        const linkFlows = this.network.getLinkFlows();\n        // Gets assignment matrix from network.\n        const assignmentMatrix = this.network.getAssignmentMatrix();\n        // Calculates demand.\n        this.demand = this.gls(linkFlows, assignmentMatrix);\n        // Shares the demand on each path.\n        this.shareDemand(assignmentMatrix);\n        return of(null);\n    }\n\n    public getDemand(): number[] {\n        return this.demand;\n    }\n\n    public getOdMatrix(): number[][] {\n        return this.odMatrix;\n    }\n\n    public changeDemand(demand: number[]): void {\n        if (demand.length > 0) {\n            // Gets assignment matrix from network.\n            const assignmentMatrix = this.network.getAssignmentMatrix();\n\n            this.demand = demand;\n            this.shareDemand(assignmentMatrix);\n        }\n    }\n\n    /**\n     * Generalized Least Squares (GLS).\n     * @param linkFlows The link flows\n     * @param assignmentMatrix Assignment matrix [pairs,paths,edges]\n     * @returns The array of the demand\n     */\n    public gls(linkFlows: LinkFlow[], assignmentMatrix: number[][][]): number[] | null {\n        const demand: number[] = [];\n        // Calculates argument of the minimum for each O/D pair.\n        for (let z = 0; z  0 ? this.argmin(linkFlows, assignmentMatrix[z]) : null;\n        }\n        return demand;\n    }\n\n    /**\n     * Argument of the minimum function.\n     * @param linkFlows The link flows\n     * @param odMatrixAssignment Assignment matrix of the O/D pair\n     */\n    private argmin(linkFlows: LinkFlow[], odMatrixAssignment: number[][]): number {\n        const estimations: number[] = [];\n\n        // The unknown demand.\n        let x = 0;\n        estimations[x] = this.estimate(linkFlows, odMatrixAssignment, x);\n        if (estimations[x] == 0) { return 0; }\n        do {\n            x++;\n            estimations[x] = this.estimate(linkFlows, odMatrixAssignment, x);\n        } while (estimations[x]  0 && this.isOnPath(odMatrixAssignment, i)) {\n                const base = linkFlows[i].value - this.sum(odMatrixAssignment, i, x);\n                sum += math.pow(base, 2) as number\n                    / linkFlows[i].variance;\n            }\n        }\n        return math.round(sum, 2) as number;\n    }\n\n    /**\n     * Sums the unknown demand probability for each path.\n     * @param odMatrixAssignment Assignment matrix of the O/D pair\n     * @param i The index of the edge\n     * @param x The unknown demand\n     */\n    private sum(odMatrixAssignment: number[][], i: number, x: number): number {\n        let sum = 0;\n        for (let n = 0; n  0) {\n                sum += odMatrixAssignment[n][i] * x;\n            }\n        }\n        return math.round(sum, 2) as number;\n    }\n\n    /**\n     * Checks that the edge belongs to one of the paths of the O/D pair.\n     * @param odMatrixAssignment Assignment matrix of the O/D pair\n     * @param i The index of the edge\n     */\n    private isOnPath(odMatrixAssignment: number[][], i: number): boolean {\n        for (let n = 0; n  0) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Shares the demand on each path.\n     * @param assignmentMatrix Assignment matrix [pairs,paths,edges]\n     */\n    private shareDemand(assignmentMatrix: number[][][]): void {\n        for (let z = 0; z  value > 0) || 0;\n                    this.odMatrix[z][n] = math.round(p * this.demand[z]) as number;\n                    sum += this.odMatrix[z][n];\n                }\n                if (this.demand[z] - sum > 0) { this.odMatrix[z][0] = this.demand[z] - sum; }\n            }\n        }\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Edge.html":{"url":"classes/Edge.html","title":"class - Edge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Edge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                Link between two nodes.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                capacity\n                            \n                            \n                                    Public\n                                density\n                            \n                            \n                                    Public\n                                destination\n                            \n                            \n                                    Public\n                                distance\n                            \n                            \n                                    Public\n                                drawingOptions\n                            \n                            \n                                    Public\n                                duration\n                            \n                            \n                                    Public\n                                durationInTraffic\n                            \n                            \n                                    Public\n                                edgeId\n                            \n                            \n                                    Public\n                                flow\n                            \n                            \n                                    Public\n                                linkFlow\n                            \n                            \n                                    Public\n                                origin\n                            \n                            \n                                    Public\n                                queue\n                            \n                            \n                                    Public\n                                tags\n                            \n                            \n                                    Public\n                                velocity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                calcCapacity\n                            \n                            \n                                    Public\n                                calcLinkFlow\n                            \n                            \n                                    Public\n                                getVariance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(edgeId: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/graph.ts:150\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edgeId\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            capacity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        capacity:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:140\n                            \n                        \n\n                \n                    \n                        Maximum capacity of the edge.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            density\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        density:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:131\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            destination\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        destination:     Node\n\n                    \n                \n                    \n                        \n                            Type :     Node\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:107\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            distance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        distance:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:114\n                            \n                        \n\n                \n                    \n                        Indicates the distance in meters.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            drawingOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        drawingOptions:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:147\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            duration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        duration:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:119\n                            \n                        \n\n                \n                    \n                        Indicates the duration in seconds.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            durationInTraffic\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        durationInTraffic:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:124\n                            \n                        \n\n                \n                    \n                        Indicates the total duration of the edge, taking into account current traffic conditions.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            edgeId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        edgeId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:103\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            flow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        flow:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:133\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            linkFlow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        linkFlow:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:135\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            origin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        origin:     Node\n\n                    \n                \n                    \n                        \n                            Type :     Node\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:105\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            queue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        queue:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:145\n                            \n                        \n\n                \n                    \n                        Simulation queue.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tags:     Tag[]\n\n                    \n                \n                    \n                        \n                            Type :     Tag[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:109\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            velocity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        velocity:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:129\n                            \n                        \n\n                \n                    \n                        Free flow velocity (m/s).\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            calcCapacity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        calcCapacity(factor: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:183\n                            \n                        \n\n\n                \n                    \n                            Calculates the max capacity of the edge.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        factor\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Weather Adjustment Factor\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            calcLinkFlow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        calcLinkFlow()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:159\n                            \n                        \n\n\n                \n                    \n                            Calculates the value of the link flow.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getVariance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getVariance()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:192\n                            \n                        \n\n\n                \n                    \n                            Gets the variance of measurement error of link flow.\n\n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\n\nimport * as combine from 'mout/array/combine';\nimport * as math from 'mathjs';\n\nimport { Heap, Path } from './k-shortest-path';\nimport { uiConfig } from '../ui/ui-config';\n\nexport enum PathType {\n    distance = 'distance',\n    duration = 'duration'\n}\n\n/**\n * An O/D pair is described by the origin and destination nodes, the type of path and the domand.\n */\nexport interface OdPair {\n\n    origin: number;\n    destination: number;\n    pathType: PathType;\n    demand?: number;\n\n}\n\nexport interface OdPairShowing extends OdPair {\n\n    showPaths: boolean;\n\n}\n\nexport interface LinkFlow {\n\n    /**\n     * linkFlow attribute.\n     */\n    value: number;\n    /**\n     * Variance is the inverse of density.\n     */\n    variance: number;\n\n}\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public label: number;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    public drawingOptions: { marker?: google.maps.Marker } = {};\n\n    /**\n     * Used by the k shortest path routing.\n     */\n    public count = 0;\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    /**\n     * Free flow velocity (m/s).\n     */\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    public linkFlow: number;\n\n    /**\n     * Maximum capacity of the edge.\n     */\n    public capacity: number;\n\n    /**\n     * Simulation queue.\n     */\n    public queue = 0;\n\n    public drawingOptions: {\n        path?: google.maps.LatLng[],\n        polyline?: google.maps.Polyline\n    } = {};\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the link flow.\n     */\n    public calcLinkFlow(): void {\n        if (this.durationInTraffic > 0 && this.duration > 0 && this.durationInTraffic >= this.duration) {\n            // Calculates free flow velocity (m/s).\n            this.velocity = math.round(this.distance / this.duration, 2) as number;\n            // Calculates velocity (m/s).\n            const velocity = math.round(this.distance / this.durationInTraffic, 2) as number;\n            // Calculates kjam.\n            const kjam = 1 / uiConfig.sp;\n            // Calculates density.\n            this.density = math.round(kjam * (this.velocity - velocity) / this.velocity, 2) as number;\n            // Calculates flow.\n            this.flow = math.round(this.density * velocity, 2) as number;\n            // Calculates link flow.\n            this.linkFlow = math.round(this.density * this.distance) as number;\n        } else {\n            this.density = 0;\n            this.linkFlow = 0;\n        }\n    }\n\n    /**\n     * Calculates the max capacity of the edge.\n     * @param factor Weather Adjustment Factor\n     */\n    public calcCapacity(factor: number): void {\n        let capacity = math.round(this.distance / uiConfig.sp) as number;\n        capacity = capacity * factor;\n        this.capacity = capacity >= 1 ? capacity : 1;\n    }\n\n    /**\n     * Gets the variance of measurement error of link flow.\n     */\n    public getVariance(): number {\n        return this.density > 0 ? math.round(1 / this.density, 2) as number : 1;\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    private nodes: Node[] = [];\n\n    private edges: Edge[] = [];\n\n    private relations: Relation[] = [];\n\n    /**\n     * Paths for each O/D pair [pairs,paths,edges].\n     */\n    private shortestPaths: Edge[][][] = [];\n\n    private shortestPathsEdges: Edge[] = [];\n\n    private incidenceMatrix: boolean[][][] = [];\n\n    private assignmentMatrix: number[][][] = [];\n\n    private heap: Heap;\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.lat = node.lat;\n            existingNode.lon = node.lon;\n            existingNode.tags = combine(existingNode.tags, node.tags);\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public getEdge(edgeId: number): Edge {\n        return this.edges.find((edge: Edge) => edge.edgeId == edgeId);\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Key:oneway\n     * @param edgeId Id of the edge\n     */\n    public isOneway(edgeId: number): boolean {\n        return !!this.getEdge(edgeId).tags.find(tag => tag.key == 'oneway' && tag.value != 'no') ||\n            this.isRoundabout(edgeId);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Tag:junction%3Droundabout\n     * @param edgeId Id of the edge\n     */\n    public isRoundabout(edgeId: number): boolean {\n        return this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'roundabout') ||\n            this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'circular') ?\n            true : false;\n    }\n\n    public getOdNode(label: number): Node {\n        return this.nodes.find((node: Node) => node.label == label);\n    }\n\n    public getOdNodes(): Node[] {\n        return this.nodes.filter((node: Node) => node.label);\n    }\n\n    /**\n     * Calculates the set of minimum paths.\n     * @param odPairs The O/D pairs\n     */\n    public calcShortestPaths(odPairs: OdPair[]): Observable {\n        try {\n            for (let i = 0; i  0) {\n                    count++;\n                    break;\n                }\n            }\n            if (count == 0) { return throwError('calcShortestPaths'); }\n        } catch (error) {\n            return throwError('calcShortestPaths');\n        }\n        return of(null);\n    }\n\n    public getShortestPaths(): Edge[][][] {\n        return this.shortestPaths;\n    }\n\n    /**\n     * Calculates the incidence matrix of paths for O/D pairs.\n     */\n    public calcIncidenceMatrix(): Observable {\n        // Gets the edges in the paths.\n        this.shortestPathsEdges = this.getEdgesfromShortestPaths();\n\n        // Builds the matrix.\n        for (let z = 0; z  value.edgeId == this.shortestPathsEdges[m].edgeId)) {\n                        // The path crosses the edge.\n                        this.incidenceMatrix[z][n][m] = true;\n                    } else {\n                        // The path does not cross the edge.\n                        this.incidenceMatrix[z][n][m] = false;\n                    }\n                }\n            }\n        }\n        return of(null);\n    }\n\n    public getIncidenceMatrix(): boolean[][][] {\n        return this.incidenceMatrix;\n    }\n\n    /**\n     * Calculates the assignment matrix.\n     * @param odPairs The O/D pairs\n     */\n    public calcAssignmentMatrix(odPairs: OdPair[]): Observable {\n        // Calculates the probabilities of shortest paths.\n        const shortestPathsProbabilities = this.calcShortestPathsProbabilities(odPairs);\n\n        // Assignment matrix.\n        for (let z = 0; z  {\n        for (const edge of this.edges) {\n            edge.calcCapacity(factor);\n        }\n        return of(null);\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link distance or duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param origin Source node\n     * @param destination Destination node\n     * @param pathType Distance or duration\n     * @param k The number of shortest paths to compute\n     * @param i Index of O/D pair\n     */\n    private ksp(origin: number, destination: number, pathType: String, k: number, i: number): void {\n        const o = this.getOdNode(origin);\n        const d = this.getOdNode(destination);\n        // Sets to zero the count property of the nodes.\n        this.resetCount();\n        // Instantiates the heap.\n        this.heap = new Heap();\n        // Inserts the path of origin into heap with cost 0.\n        this.heap.push({ pathId: 0, node: o, edges: [], cost: 0 });\n        // Walks the graph.\n        const shortestPaths = this.walk(o, d, pathType, k);\n        // Extracts the paths.\n        this.shortestPaths[i] = [];\n        for (let n = 0; n  0 && d.count  edge.origin.nodeId == node.nodeId) ? false : true;\n    }\n\n    private resetCount(): void {\n        for (const node of this.nodes) {\n            node.count = 0;\n        }\n    }\n\n    /**\n     * Returns the edges without repetitions in the shortest paths.\n     */\n    private getEdgesfromShortestPaths(): Edge[] {\n        const edges: Edge[] = [];\n        for (const pair of this.shortestPaths) {\n            for (const path of pair) {\n                for (const edge of path) {\n                    if (!edges.find(value => value.edgeId == edge.edgeId)) {\n                        edges.push(edge);\n                    }\n                }\n            }\n        }\n        return edges;\n    }\n\n    /**\n     * Multinomial logit model.\n     * @param odPairs The O/D pairs\n     */\n    private calcShortestPathsProbabilities(odPairs: OdPair[]): number[][] {\n        // Gets the the total cost of paths.\n        const pathCosts = this.calcPathCosts(odPairs);\n        const shortestPathsProbabilities: number[][] = [];\n        // Theta parameter.\n        const parameter = uiConfig.theta * 100;\n        // Calculates numerator.\n        const exps: number[][] = [];\n        for (let z = 0; z  {\n                return value > 0 ? math.exp(-value / parameter) : 0;\n            });\n        }\n        // Calculates denominator.\n        const sumExps: number[] = [];\n        for (let z = 0; z  a + b, 0);\n            sumExps.push(sum);\n        }\n        // Probabilities.\n        for (let z = 0; z  0 ? math.round(exps[z][n] / sumExps[z], 3) as number : 0;\n                shortestPathsProbabilities[z].push(p);\n            }\n        }\n        return shortestPathsProbabilities;\n    }\n\n    private calcPathCosts(odPairs: OdPair[]): number[][] {\n        const pathCosts: number[][] = [];\n        for (let z = 0; z \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnumValues.html":{"url":"classes/EnumValues.html","title":"class - EnumValues","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnumValues\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/utils.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getNames\n                            \n                            \n                                    Static\n                                getValues\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getNames\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getNames(e: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/utils.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getValues\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getValues(e: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/utils.ts:9\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     T[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export type EnumValueType = string | number;\n\nexport class EnumValues {\n\n    public static getNames(e: any): string[] {\n        return Object.keys(e).filter((key: string) => isNaN(+key));\n    }\n\n    public static getValues(e: any): T[] {\n        return this.getNames(e).map((name: string) => e[name]) as T[];\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EstimateOfDemandComponent.html":{"url":"components/EstimateOfDemandComponent.html","title":"component - EstimateOfDemandComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EstimateOfDemandComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-estimate-of-demand\n            \n\n            \n                styleUrls\n                estimate-of-demand.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./estimate-of-demand.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pathTypes\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addDestination\n                            \n                            \n                                addOrigin\n                            \n                            \n                                deleteOdPair\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                updateOdPairs\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, wizard: WizardService, network: NetworkService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addDestination\n                            \n                            \n                        \n                    \n                \n                \n                    \naddDestination(control: FormArray, origin: number, destination: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:150\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        control\n                                                        \n                                                                    FormArray\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        origin\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        destination\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addOrigin\n                            \n                            \n                        \n                    \n                \n                \n                    \naddOrigin(control: FormArray, origin: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:142\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        control\n                                                        \n                                                                    FormArray\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        origin\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteOdPair\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteOdPair(i: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:85\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        i\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateOdPairs\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateOdPairs(node: Node)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:93\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                                    Node\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pathTypes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pathTypes:     PathType[]\n\n                    \n                \n                    \n                        \n                            Type :     PathType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        odPairs\n                    \n                \n\n                \n                    \n                        getodPairs()\n                    \n                \n                            \n                                \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:29\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, FormArray } from '@angular/forms';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { WizardService } from '../wizard.service';\nimport { NetworkService } from '../../../network/network.service';\nimport * as fromUi from '../../models/reducers';\nimport { Map } from '../../models/wizard';\nimport { PathType, OdPair, Node } from '../../../network/graph';\nimport { EnumValues } from '../../utils';\nimport { uiConfig } from '../../ui-config';\n\nimport { BaseComponent } from '../../models/base.component';\n\n@Component({\n    selector: 'wizard-estimate-of-demand',\n    templateUrl: './estimate-of-demand.component.html',\n    styleUrls: ['./estimate-of-demand.component.scss']\n})\nexport class EstimateOfDemandComponent extends BaseComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    pathTypes: PathType[];\n\n    get odPairs(): FormArray {\n        return this.formGroup.get('odPairs') as FormArray;\n    }\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private store: Store,\n        private wizard: WizardService,\n        private network: NetworkService\n    ) {\n        super();\n\n        this.pathTypes = EnumValues.getValues(PathType);\n    }\n\n    ngOnInit(): void {\n        this.valueChanges();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        // Updates network service data on value changes.\n        this.subscriptions.push(this.formGroup.get('odPairs').valueChanges.subscribe(\n            (odPairs: OdPair[]) => {\n                this.network.setOdPairs(odPairs);\n            }\n        ));\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.currentStep)).subscribe((currentStep: number) => {\n            switch (currentStep) {\n                case 0:\n                    // Resets control.\n                    const control = this.formGroup.get('odPairs') as FormArray;\n                    if (control.length > 0) {\n                        for (let i = control.length - 1; i >= 0; i--) {\n                            control.removeAt(i);\n                        }\n                    }\n                    break;\n            }\n        }));\n        this.subscriptions.push(this.store.pipe(select(fromUi.map)).subscribe((map: Map) => {\n            if (map && map.data.selectedNode) {\n                this.updateOdPairs(map.data.selectedNode);\n\n            }\n        }));\n    }\n\n    sendActions(): void {\n        //\n    }\n\n    deleteOdPair(i: number): void {\n        // Updates control.\n        const control = this.formGroup.get('odPairs') as FormArray;\n        control.removeAt(i);\n        // Updates step state.\n        this.wizard.updateStep(this.formGroup.value, this.index);\n    }\n\n    updateOdPairs(node: Node): void {\n        const control = this.formGroup.get('odPairs') as FormArray;\n        const odPairs = control.value;\n\n        let error = null;\n\n        if (odPairs.length > 0) {\n            const odPair = odPairs[odPairs.length - 1];\n            // Checks limit.\n            if (odPairs.length == uiConfig.maxOdPairs && odPairs[uiConfig.maxOdPairs - 1].destination) {\n                error = `The maximum number of O/D pairs is ${uiConfig.maxOdPairs}`;\n                // Checks if valid node.\n            } else if (odPair.destination == null && node.incomingEdges.length == 0) {\n                error = `The node cannot be a destination`;\n            } else if (odPair.destination && node.outgoingEdges.length == 0) {\n                error = `The node cannot be an origin`;\n                // Checks if last O/D pair is completed.\n            } else if (odPair.destination) {\n                // Adds origin.\n                this.addOrigin(control, node.label);\n                // Checks if same node.\n            } else if (odPair.origin == node.label) {\n                error = `The origin and destination nodes can not be the same`;\n            } else {\n                // Checks if the pair is valid.\n                if (odPairs.filter(pair => pair.origin == odPair.origin && pair.destination == node.label).length > 0) {\n                    error = `O/D pair already selected`;\n                } else {\n                    // Adds destination.\n                    this.addDestination(control, odPair.origin, node.label);\n                }\n            }\n        } else {\n            if (node.outgoingEdges.length == 0) {\n                error = `The node cannot be an origin`;\n            } else {\n                // Adds origin.\n                this.addOrigin(control, node.label);\n            }\n        }\n\n        if (error) {\n            this.wizard.putInError(error);\n        } else {\n            // Updates step state.\n            this.wizard.updateStep({ odPairs: control.value }, 2);\n        }\n    }\n\n    addOrigin(control: FormArray, origin: number): void {\n        control.push(this.formBuilder.group({\n            origin: origin,\n            destination: null,\n            pathType: null\n        }));\n    }\n\n    addDestination(control: FormArray, origin: number, destination: number): void {\n        control.get([control.length - 1]).patchValue({\n            origin: origin,\n            destination: destination,\n            pathType: PathType.distance\n        });\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                O\n                D\n                Path\n                \n            \n            \n                \n                    {{ pair.value.origin }}\n                \n                \n                    {{ pair.value.destination }}\n                \n                \n                    \n                        \n                            {{ path }}\n                        \n                    \n                \n                \n                    \n                        delete\n                    \n                \n            \n        \n    \n\n    \n        Continue\n            navigate_next\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        O                D                Path                                                                            {{ pair.value.origin }}                                                    {{ pair.value.destination }}                                                                                                        {{ path }}                                                                                                                        delete                                                                        Continue            navigate_next            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EstimateOfDemandComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/footer/footer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentYear\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/footer/footer.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentYear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentYear:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : new Date().getFullYear()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/footer/footer.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-footer',\n    templateUrl: './footer.component.html',\n    styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n    currentYear: number = new Date().getFullYear();\n\n    ngOnInit(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n        \n            \n                \n                    \n                        Privacy\n                    \n                \n                \n                    \n                        Terms of service\n                    \n                \n            \n        \n    \n\n    \n\n    \n        \n            Copyright&nbsp;©&nbsp;{{ currentYear }} Roberto&nbsp;Simonetti\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                Privacy                                                                                                Terms of service                                                                                        Copyright © {{ currentYear }} Roberto Simonetti            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GoOn.html":{"url":"classes/GoOn.html","title":"class - GoOn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  GoOn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/actions/wizard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/models/actions/wizard.actions.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : WizardActionTypes.GoOn\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:53\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Step, Map } from '../wizard';\n\n/**\n * ngrx: wizard Actions.\n */\nexport enum WizardActionTypes {\n\n    StepChanged = '[Wizard] Step Changed',\n    MapChanged = '[Wizard] Map Changed',\n    StepError = '[Wizard] Step Error',\n    StepPending = '[Wizard] Step Pending',\n    GoOn = '[Wizard] Go On',\n    Reset = '[Wizard] Reset'\n\n}\n\nexport class StepChanged implements Action {\n\n    public readonly type: string = WizardActionTypes.StepChanged;\n\n    constructor(public payload: { step: Step, index: number }) { }\n\n}\n\nexport class MapChanged implements Action {\n\n    public readonly type: string = WizardActionTypes.MapChanged;\n\n    constructor(public payload: { map: Map }) { }\n\n}\n\nexport class StepError implements Action {\n\n    public readonly type: string = WizardActionTypes.StepError;\n\n    constructor(public payload: string) { }\n\n}\n\nexport class StepPending implements Action {\n\n    public readonly type: string = WizardActionTypes.StepPending;\n\n    constructor(public payload: string | boolean) { }\n\n}\n\nexport class GoOn implements Action {\n\n    public readonly type: string = WizardActionTypes.GoOn;\n\n    constructor(public payload: { step: Step, index: number, nextIndex: number }) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = WizardActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type WizardActions = StepChanged | MapChanged | StepError | StepPending | GoOn | Reset;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GoogleMapComponent.html":{"url":"components/GoogleMapComponent.html","title":"component - GoogleMapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GoogleMapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/map/google-map.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                google-map\n            \n\n\n\n            \n                template\n                \n\n\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                map\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createMap\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                center\n                            \n                            \n                                disableDefaultUI\n                            \n                            \n                                disableDoubleClickZoom\n                            \n                            \n                                gestureHandling\n                            \n                            \n                                mapTypeId\n                            \n                            \n                                maxZoom\n                            \n                            \n                                minZoom\n                            \n                            \n                                styles\n                            \n                            \n                                zoom\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(map: MapService, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/map/google-map.component.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                    MapService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        center\n                    \n                    \n                        Center map. Required.\n\n                            \n                            Type:    google.maps.LatLngLiteral\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableDefaultUI\n                    \n                    \n                        Enables/disables all default UI.\n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableDoubleClickZoom\n                    \n                    \n                        Enables/disables zoom and center on double click. Enabled by default.\n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        gestureHandling\n                    \n                    \n                        This setting controls how gestures on the map are handled.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapTypeId\n                    \n                    \n                        The initial map mapTypeId. Defaults to ROADMAP.\n\n                            \n                            Type:    google.maps.MapTypeId\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxZoom\n                    \n                    \n                        The maximum zoom level which will be displayed on the map.\n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minZoom\n                    \n                    \n                        The minimum zoom level which will be displayed on the map.\n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        styles\n                    \n                    \n                        Styles to apply to each of the default map types.\n\n                            \n                            Type:    google.maps.MapTypeStyle[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:54\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zoom\n                    \n                    \n                        The initial map zoom level. Required.\n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:26\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createMap(el: HTMLElement)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                        \n                                                                    HTMLElement\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:71\n                            \n                        \n\n\n                \n                    \n                            On changes, updates center map & zoom.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:61\n                            \n                        \n\n\n                \n                    \n                            On init, creates map.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            map\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        map:     MapService\n\n                    \n                \n                    \n                        \n                            Type :     MapService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:56\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit, OnChanges, SimpleChange, ElementRef } from '@angular/core';\n\nimport { MapService } from './/map.service';\n\n@Component({\n    selector: 'google-map',\n    template: `\n        \n        \n        `\n})\nexport class GoogleMapComponent implements OnInit, OnChanges {\n\n    /**\n     * Center map. Required.\n     */\n    @Input() center: google.maps.LatLngLiteral;\n\n    /*\n     * MapOptions object specification.\n     */\n\n    /**\n     * The initial map zoom level. Required.\n     */\n    @Input() zoom: number;\n    /**\n     * Enables/disables all default UI.\n     */\n    @Input() disableDefaultUI: boolean;\n    /**\n     * Enables/disables zoom and center on double click. Enabled by default.\n     */\n    @Input() disableDoubleClickZoom: boolean;\n    /**\n     * The initial map mapTypeId. Defaults to ROADMAP.\n     */\n    @Input() mapTypeId: google.maps.MapTypeId;\n    /**\n     * The maximum zoom level which will be displayed on the map.\n     */\n    @Input() maxZoom: number;\n    /**\n     * The minimum zoom level which will be displayed on the map.\n     */\n    @Input() minZoom: number;\n    /**\n     * This setting controls how gestures on the map are handled.\n     */\n    @Input() gestureHandling: string;\n    /**\n     * Styles to apply to each of the default map types.\n     */\n    @Input() styles: google.maps.MapTypeStyle[];\n\n    constructor(public map: MapService, private elementRef: ElementRef) { }\n\n    /**\n     * On init, creates map.\n     */\n    ngOnInit(): void {\n        // Gets the map element.\n        const el: HTMLElement = this.elementRef.nativeElement.querySelector('#map');\n\n        this.createMap(el);\n    }\n\n    /**\n     * On changes, updates center map & zoom.\n     */\n    ngOnChanges(changes: { [propertyName: string]: SimpleChange }): void {\n        if (changes['center']) { this.map.setCenter(this.center); }\n        if (changes['zoom']) { this.map.setZoom(this.zoom); }\n    }\n\n    private createMap(el: HTMLElement): void {\n        this.map.initMap(el, {\n            center: this.center,\n            disableDefaultUI: this.disableDefaultUI,\n            disableDoubleClickZoom: this.disableDoubleClickZoom,\n            mapTypeId: this.mapTypeId,\n            maxZoom: this.maxZoom as number,\n            minZoom: this.minZoom as number,\n            gestureHandling: this.gestureHandling as string,\n            styles: this.styles,\n            zoom: this.zoom as number\n        });\n    }\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GoogleMapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Heap.html":{"url":"classes/Heap.html","title":"class - Heap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Heap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/k-shortest-path.ts\n        \n\n            \n                Description\n            \n            \n                Heap data structure containing paths.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                paths\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getPaths\n                            \n                            \n                                    Public\n                                getShortestPath\n                            \n                            \n                                    Public\n                                pop\n                            \n                            \n                                    Public\n                                push\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            paths\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paths:     Path[]\n\n                    \n                \n                    \n                        \n                            Type :     Path[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/k-shortest-path.ts:23\n                            \n                        \n\n                \n                    \n                        The queue of paths.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getPaths\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getPaths()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/k-shortest-path.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Path[]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getShortestPath\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getShortestPath()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/k-shortest-path.ts:45\n                            \n                        \n\n\n                \n                    \n                            Returns the shortest path in the heap by cost.\n\n\n                            \n                                Returns :     Path\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pop\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        pop(pathId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/k-shortest-path.ts:37\n                            \n                        \n\n\n                \n                    \n                            Removes a path from the heap.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pathId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The id of the path\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            push\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        push(path: Path)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/k-shortest-path.ts:29\n                            \n                        \n\n\n                \n                    \n                            Inserts a path into the heap.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                        \n                                                                    Path\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The path to insert\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Edge, Node } from \"./graph\";\n\n/**\n * Path to generic node.\n */\nexport interface Path {\n\n    pathId: number;\n    node: Node;\n    edges: Edge[];\n    cost: number;\n\n}\n\n/**\n * Heap data structure containing paths.\n */\nexport class Heap {\n\n    /**\n     * The queue of paths.\n     */\n    private paths: Path[] = [];\n\n    /**\n     * Inserts a path into the heap.\n     * @param path The path to insert\n     */\n    public push(path: Path): void {\n        this.paths.push({ pathId: path.pathId, node: path.node, edges: path.edges, cost: path.cost });\n    }\n\n    /**\n     * Removes a path from the heap.\n     * @param pathId The id of the path\n     */\n    public pop(pathId: number): void {\n        const index = this.paths.findIndex((path: Path) => path.pathId == pathId);\n        this.paths.splice(index, 1);\n    }\n\n    /**\n     * Returns the shortest path in the heap by cost.\n     */\n    public getShortestPath(): Path {\n        return this.paths.reduce((prev: Path, curr: Path) => prev.cost \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home/home.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home/home.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        show:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, ElementRef } from '@angular/core';\n\nimport * as anime from 'animejs';\n\nimport { HOME_TRANSITION } from './home.transition';\n\n@Component({\n    selector: 'app-home',\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.scss'],\n    animations: [HOME_TRANSITION]\n})\nexport class HomeComponent implements OnInit, AfterViewInit {\n\n    show = false;\n\n    constructor(private elementRef: ElementRef) { }\n\n    ngOnInit(): void {\n        //\n    }\n\n    ngAfterViewInit(): void {\n        const element: HTMLElement = this.elementRef.nativeElement.querySelector('.headline .letters');\n        const text: string = element.innerText;\n        const letters: string[] = text.split('');\n\n        let wrappedText = '';\n        for (const letter of letters) {\n            wrappedText += `${letter}`;\n        }\n\n        element.innerHTML = wrappedText;\n\n        // Anime.\n        const basicTimeline = anime.timeline();\n        basicTimeline\n            .add({\n                targets: '.headline .letter',\n                scale: [0.3, 1],\n                opacity: [0, 1],\n                translateZ: 0,\n                easing: 'linear',\n                delay: (el, i) => {\n                    return 70 * (i + 1);\n                }\n            }).add({\n                targets: '.headline .line',\n                scaleX: [0, 1],\n                opacity: [0.5, 1],\n                easing: 'linear',\n                offset: '-=840',\n                delay: (el, i, l) => {\n                    return 70 * (l - i);\n                },\n                complete: (anim) => {\n                    this.show = true;\n                }\n            });\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                STRADA\n                \n            \n        \n        \n            \n                Simulation of TRAffic DAta\n                An urban traffic web simulator that uses data in real time\n                GET STARTED\n            \n        \n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        STRADA                                                                        Simulation of TRAffic DAta                An urban traffic web simulator that uses data in real time                GET STARTED                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoDialogComponent.html":{"url":"components/InfoDialogComponent.html","title":"component - InfoDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InfoDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/info-dialog.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                info-dialog\n            \n\n\n\n            \n                template\n                Info\n\n    {{ data }}\n\n\n    No\n    Yes\n\n\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/info-dialog.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/info-dialog.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/info-dialog.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n    selector: 'info-dialog',\n    template: `\n        Info\n        \n            {{ data }}\n        \n        \n            No\n            Yes\n        \n    `,\n    styles: []\n})\nexport class InfoDialogComponent {\n\n    constructor(\n        public dialogRef: MatDialogRef,\n        @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Info    {{ data }}    No    Yes'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InfoDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LinkFlow.html":{"url":"interfaces/LinkFlow.html","title":"interface - LinkFlow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LinkFlow\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        value\n                                \n                                \n                                        variance\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    linkFlow attribute.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        variance\n                                    \n                                \n                                \n                                    \n                                        variance:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Variance is the inverse of density.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\n\nimport * as combine from 'mout/array/combine';\nimport * as math from 'mathjs';\n\nimport { Heap, Path } from './k-shortest-path';\nimport { uiConfig } from '../ui/ui-config';\n\nexport enum PathType {\n    distance = 'distance',\n    duration = 'duration'\n}\n\n/**\n * An O/D pair is described by the origin and destination nodes, the type of path and the domand.\n */\nexport interface OdPair {\n\n    origin: number;\n    destination: number;\n    pathType: PathType;\n    demand?: number;\n\n}\n\nexport interface OdPairShowing extends OdPair {\n\n    showPaths: boolean;\n\n}\n\nexport interface LinkFlow {\n\n    /**\n     * linkFlow attribute.\n     */\n    value: number;\n    /**\n     * Variance is the inverse of density.\n     */\n    variance: number;\n\n}\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public label: number;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    public drawingOptions: { marker?: google.maps.Marker } = {};\n\n    /**\n     * Used by the k shortest path routing.\n     */\n    public count = 0;\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    /**\n     * Free flow velocity (m/s).\n     */\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    public linkFlow: number;\n\n    /**\n     * Maximum capacity of the edge.\n     */\n    public capacity: number;\n\n    /**\n     * Simulation queue.\n     */\n    public queue = 0;\n\n    public drawingOptions: {\n        path?: google.maps.LatLng[],\n        polyline?: google.maps.Polyline\n    } = {};\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the link flow.\n     */\n    public calcLinkFlow(): void {\n        if (this.durationInTraffic > 0 && this.duration > 0 && this.durationInTraffic >= this.duration) {\n            // Calculates free flow velocity (m/s).\n            this.velocity = math.round(this.distance / this.duration, 2) as number;\n            // Calculates velocity (m/s).\n            const velocity = math.round(this.distance / this.durationInTraffic, 2) as number;\n            // Calculates kjam.\n            const kjam = 1 / uiConfig.sp;\n            // Calculates density.\n            this.density = math.round(kjam * (this.velocity - velocity) / this.velocity, 2) as number;\n            // Calculates flow.\n            this.flow = math.round(this.density * velocity, 2) as number;\n            // Calculates link flow.\n            this.linkFlow = math.round(this.density * this.distance) as number;\n        } else {\n            this.density = 0;\n            this.linkFlow = 0;\n        }\n    }\n\n    /**\n     * Calculates the max capacity of the edge.\n     * @param factor Weather Adjustment Factor\n     */\n    public calcCapacity(factor: number): void {\n        let capacity = math.round(this.distance / uiConfig.sp) as number;\n        capacity = capacity * factor;\n        this.capacity = capacity >= 1 ? capacity : 1;\n    }\n\n    /**\n     * Gets the variance of measurement error of link flow.\n     */\n    public getVariance(): number {\n        return this.density > 0 ? math.round(1 / this.density, 2) as number : 1;\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    private nodes: Node[] = [];\n\n    private edges: Edge[] = [];\n\n    private relations: Relation[] = [];\n\n    /**\n     * Paths for each O/D pair [pairs,paths,edges].\n     */\n    private shortestPaths: Edge[][][] = [];\n\n    private shortestPathsEdges: Edge[] = [];\n\n    private incidenceMatrix: boolean[][][] = [];\n\n    private assignmentMatrix: number[][][] = [];\n\n    private heap: Heap;\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.lat = node.lat;\n            existingNode.lon = node.lon;\n            existingNode.tags = combine(existingNode.tags, node.tags);\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public getEdge(edgeId: number): Edge {\n        return this.edges.find((edge: Edge) => edge.edgeId == edgeId);\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Key:oneway\n     * @param edgeId Id of the edge\n     */\n    public isOneway(edgeId: number): boolean {\n        return !!this.getEdge(edgeId).tags.find(tag => tag.key == 'oneway' && tag.value != 'no') ||\n            this.isRoundabout(edgeId);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Tag:junction%3Droundabout\n     * @param edgeId Id of the edge\n     */\n    public isRoundabout(edgeId: number): boolean {\n        return this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'roundabout') ||\n            this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'circular') ?\n            true : false;\n    }\n\n    public getOdNode(label: number): Node {\n        return this.nodes.find((node: Node) => node.label == label);\n    }\n\n    public getOdNodes(): Node[] {\n        return this.nodes.filter((node: Node) => node.label);\n    }\n\n    /**\n     * Calculates the set of minimum paths.\n     * @param odPairs The O/D pairs\n     */\n    public calcShortestPaths(odPairs: OdPair[]): Observable {\n        try {\n            for (let i = 0; i  0) {\n                    count++;\n                    break;\n                }\n            }\n            if (count == 0) { return throwError('calcShortestPaths'); }\n        } catch (error) {\n            return throwError('calcShortestPaths');\n        }\n        return of(null);\n    }\n\n    public getShortestPaths(): Edge[][][] {\n        return this.shortestPaths;\n    }\n\n    /**\n     * Calculates the incidence matrix of paths for O/D pairs.\n     */\n    public calcIncidenceMatrix(): Observable {\n        // Gets the edges in the paths.\n        this.shortestPathsEdges = this.getEdgesfromShortestPaths();\n\n        // Builds the matrix.\n        for (let z = 0; z  value.edgeId == this.shortestPathsEdges[m].edgeId)) {\n                        // The path crosses the edge.\n                        this.incidenceMatrix[z][n][m] = true;\n                    } else {\n                        // The path does not cross the edge.\n                        this.incidenceMatrix[z][n][m] = false;\n                    }\n                }\n            }\n        }\n        return of(null);\n    }\n\n    public getIncidenceMatrix(): boolean[][][] {\n        return this.incidenceMatrix;\n    }\n\n    /**\n     * Calculates the assignment matrix.\n     * @param odPairs The O/D pairs\n     */\n    public calcAssignmentMatrix(odPairs: OdPair[]): Observable {\n        // Calculates the probabilities of shortest paths.\n        const shortestPathsProbabilities = this.calcShortestPathsProbabilities(odPairs);\n\n        // Assignment matrix.\n        for (let z = 0; z  {\n        for (const edge of this.edges) {\n            edge.calcCapacity(factor);\n        }\n        return of(null);\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link distance or duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param origin Source node\n     * @param destination Destination node\n     * @param pathType Distance or duration\n     * @param k The number of shortest paths to compute\n     * @param i Index of O/D pair\n     */\n    private ksp(origin: number, destination: number, pathType: String, k: number, i: number): void {\n        const o = this.getOdNode(origin);\n        const d = this.getOdNode(destination);\n        // Sets to zero the count property of the nodes.\n        this.resetCount();\n        // Instantiates the heap.\n        this.heap = new Heap();\n        // Inserts the path of origin into heap with cost 0.\n        this.heap.push({ pathId: 0, node: o, edges: [], cost: 0 });\n        // Walks the graph.\n        const shortestPaths = this.walk(o, d, pathType, k);\n        // Extracts the paths.\n        this.shortestPaths[i] = [];\n        for (let n = 0; n  0 && d.count  edge.origin.nodeId == node.nodeId) ? false : true;\n    }\n\n    private resetCount(): void {\n        for (const node of this.nodes) {\n            node.count = 0;\n        }\n    }\n\n    /**\n     * Returns the edges without repetitions in the shortest paths.\n     */\n    private getEdgesfromShortestPaths(): Edge[] {\n        const edges: Edge[] = [];\n        for (const pair of this.shortestPaths) {\n            for (const path of pair) {\n                for (const edge of path) {\n                    if (!edges.find(value => value.edgeId == edge.edgeId)) {\n                        edges.push(edge);\n                    }\n                }\n            }\n        }\n        return edges;\n    }\n\n    /**\n     * Multinomial logit model.\n     * @param odPairs The O/D pairs\n     */\n    private calcShortestPathsProbabilities(odPairs: OdPair[]): number[][] {\n        // Gets the the total cost of paths.\n        const pathCosts = this.calcPathCosts(odPairs);\n        const shortestPathsProbabilities: number[][] = [];\n        // Theta parameter.\n        const parameter = uiConfig.theta * 100;\n        // Calculates numerator.\n        const exps: number[][] = [];\n        for (let z = 0; z  {\n                return value > 0 ? math.exp(-value / parameter) : 0;\n            });\n        }\n        // Calculates denominator.\n        const sumExps: number[] = [];\n        for (let z = 0; z  a + b, 0);\n            sumExps.push(sum);\n        }\n        // Probabilities.\n        for (let z = 0; z  0 ? math.round(exps[z][n] / sumExps[z], 3) as number : 0;\n                shortestPathsProbabilities[z].push(p);\n            }\n        }\n        return shortestPathsProbabilities;\n    }\n\n    private calcPathCosts(odPairs: OdPair[]): number[][] {\n        const pathCosts: number[][] = [];\n        for (let z = 0; z \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LocationModule.html":{"url":"modules/LocationModule.html","title":"module - LocationModule","body":"\n                   \n\n\n\n\n  Modules\n  LocationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_providers\n\n\n\n\nLocationService\n\nLocationService\n\n\n\nLocationModule\n\nLocationModule\n\nLocationModule -->\n\nLocationService->LocationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/location/location.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     LocationService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { LocationService } from './location.service';\n\n@NgModule({\n    imports: [],\n    declarations: [],\n    providers: [LocationService]\n})\nexport class LocationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocationService.html":{"url":"injectables/LocationService.html","title":"injectable - LocationService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  LocationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/location/location.service.ts\n        \n\n            \n                Description\n            \n            \n                Responsible for identifying the geographic coordinates of the simulation area,\nthrough geocoding or geolocation.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                geocoder\n                            \n                            \n                                    Private\n                                latLng\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                codeAddress\n                            \n                            \n                                    Public\n                                getCurrentPosition\n                            \n                            \n                                    Public\n                                getLatLng\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Public\n                                setLatLng\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/location/location.service.ts:17\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            codeAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        codeAddress(address: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/location/location.service.ts:35\n                            \n                        \n\n\n                \n                    \n                            Geocoding service.\nWraps the Google Maps API geocoding service into an observable.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        address\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The address to be searched\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    An observable of GeocoderResult\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getCurrentPosition\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getCurrentPosition()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/location/location.service.ts:57\n                            \n                        \n\n\n                \n                    \n                            Tries HTML5 geolocation.\nWraps the Geolocation API into an observable.\n\n\n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    An observable of Position\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getLatLng\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getLatLng()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/location/location.service.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     google.maps.LatLngLiteral\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/location/location.service.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setLatLng\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setLatLng(latLng: s/map.html\">google.maps.LatLngLiteral)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/location/location.service.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        latLng\n                                                        \n                                                                    google.maps.LatLngLiteral\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            geocoder\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        geocoder:     google.maps.Geocoder\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.Geocoder\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/location/location.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            latLng\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        latLng:     google.maps.LatLngLiteral\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.LatLngLiteral\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/location/location.service.ts:15\n                            \n                        \n\n                \n                    \n                        Center of the area (latitude, longitude).\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\nimport { environment } from '../../environments/environment';\n\n/**\n * Responsible for identifying the geographic coordinates of the simulation area,\n * through geocoding or geolocation.\n */\n@Injectable() export class LocationService {\n\n    /**\n     * Center of the area (latitude, longitude).\n     */\n    private latLng: google.maps.LatLngLiteral;\n\n    private geocoder: google.maps.Geocoder;\n\n    constructor() {\n        if (!environment.testing) {\n            this.geocoder = new google.maps.Geocoder();\n        }\n    }\n\n    public reset(): void {\n        this.latLng = null;\n    }\n\n    /**\n     * Geocoding service.\n     * Wraps the Google Maps API geocoding service into an observable.\n     * @param address The address to be searched\n     * @return An observable of GeocoderResult\n     */\n    public codeAddress(address: string): Observable {\n        return Observable.create((observer: Observer) => {\n            // Invokes geocode method of Google Maps API geocoding.\n            this.geocoder.geocode({ address: address }, (\n                (results: google.maps.GeocoderResult[], status: google.maps.GeocoderStatus) => {\n                    if (status === google.maps.GeocoderStatus.OK) {\n                        observer.next(results);\n                        observer.complete();\n                    } else {\n                        observer.error(status);\n                    }\n                })\n            );\n        });\n    }\n\n    /**\n     * Tries HTML5 geolocation.\n     * Wraps the Geolocation API into an observable.\n     *\n     * @return An observable of Position\n     */\n    public getCurrentPosition(): Observable {\n        return Observable.create((observer: Observer) => {\n            // Invokes getCurrentPosition method of Geolocation API.\n            navigator.geolocation.getCurrentPosition(\n                (position: Position) => {\n                    observer.next(position);\n                    observer.complete();\n                },\n                (error: PositionError) => {\n                    observer.error(error);\n                }\n            );\n        });\n    }\n\n    public getLatLng(): google.maps.LatLngLiteral {\n        return this.latLng;\n    }\n\n    public setLatLng(latLng: google.maps.LatLngLiteral): void {\n        this.latLng = latLng;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Map.html":{"url":"interfaces/Map.html","title":"interface - Map","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Map\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/wizard.ts\n        \n\n            \n                Description\n            \n            \n                Map model.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Map data.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Step {\n\n    /**\n     * Form model data.\n     */\n    data: any;\n\n}\n\n/**\n * Map model.\n */\nexport interface Map {\n\n    /**\n     * Map data.\n     */\n    data: any;\n\n}\n\n/**\n * Initial steps.\n */\nexport const STEPS: Step[] = [];\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MapChanged.html":{"url":"classes/MapChanged.html","title":"class - MapChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  MapChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/actions/wizard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/models/actions/wizard.actions.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : WizardActionTypes.MapChanged\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Step, Map } from '../wizard';\n\n/**\n * ngrx: wizard Actions.\n */\nexport enum WizardActionTypes {\n\n    StepChanged = '[Wizard] Step Changed',\n    MapChanged = '[Wizard] Map Changed',\n    StepError = '[Wizard] Step Error',\n    StepPending = '[Wizard] Step Pending',\n    GoOn = '[Wizard] Go On',\n    Reset = '[Wizard] Reset'\n\n}\n\nexport class StepChanged implements Action {\n\n    public readonly type: string = WizardActionTypes.StepChanged;\n\n    constructor(public payload: { step: Step, index: number }) { }\n\n}\n\nexport class MapChanged implements Action {\n\n    public readonly type: string = WizardActionTypes.MapChanged;\n\n    constructor(public payload: { map: Map }) { }\n\n}\n\nexport class StepError implements Action {\n\n    public readonly type: string = WizardActionTypes.StepError;\n\n    constructor(public payload: string) { }\n\n}\n\nexport class StepPending implements Action {\n\n    public readonly type: string = WizardActionTypes.StepPending;\n\n    constructor(public payload: string | boolean) { }\n\n}\n\nexport class GoOn implements Action {\n\n    public readonly type: string = WizardActionTypes.GoOn;\n\n    constructor(public payload: { step: Step, index: number, nextIndex: number }) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = WizardActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type WizardActions = StepChanged | MapChanged | StepError | StepPending | GoOn | Reset;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapComponent.html":{"url":"components/MapComponent.html","title":"component - MapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/map/map.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                ui-map\n            \n\n            \n                styleUrls\n                map.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./map.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                center\n                            \n                            \n                                disableDefaultUI\n                            \n                            \n                                disableDoubleClickZoom\n                            \n                            \n                                gestureHandling\n                            \n                            \n                                mapTypeId\n                            \n                            \n                                maxZoom\n                            \n                            \n                                minZoom\n                            \n                            \n                                styles\n                            \n                            \n                                zoom\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, wizard: WizardService, map: MapService, network: NetworkService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/map/map.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                    MapService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:113\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            center\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        center:     google.maps.LatLngLiteral\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.LatLngLiteral\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableDefaultUI\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        disableDefaultUI:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableDoubleClickZoom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        disableDoubleClickZoom:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gestureHandling\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gestureHandling:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapTypeId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mapTypeId:     google.maps.MapTypeId\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.MapTypeId\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxZoom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maxZoom:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minZoom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        minZoom:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            styles\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        styles:     google.maps.MapTypeStyle[]\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.MapTypeStyle[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            zoom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zoom:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { WizardService } from '../wizard/wizard.service';\nimport { MapService } from './map.service';\nimport { NetworkService } from '../../network/network.service';\nimport * as fromUi from '../models/reducers';\nimport { Step } from '../models/wizard';\nimport { MapStyle } from './map.style';\nimport { OdPair, OdPairShowing } from '../../network/graph';\nimport { uiConfig } from '../ui-config';\n\nimport { BaseComponent } from '../models/base.component';\n\n@Component({\n    selector: 'ui-map',\n    templateUrl: './map.component.html',\n    styleUrls: ['./map.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class MapComponent extends BaseComponent implements OnInit {\n\n    // Center map. Required.\n    center: google.maps.LatLngLiteral;\n\n    // The initial map zoom level. Required.\n    zoom: number;\n\n    disableDefaultUI: boolean;\n    disableDoubleClickZoom: boolean;\n    mapTypeId: google.maps.MapTypeId;\n    maxZoom: number;\n    minZoom: number;\n    gestureHandling: string;\n    styles: google.maps.MapTypeStyle[];\n\n    constructor(\n        private store: Store,\n        private wizard: WizardService,\n        private map: MapService,\n        private network: NetworkService\n    ) {\n        super();\n        // Map options.\n        this.disableDefaultUI = true;\n        this.disableDoubleClickZoom = false;\n        this.mapTypeId = google.maps.MapTypeId.ROADMAP;\n        this.maxZoom = 18;\n        this.minZoom = 4;\n        this.gestureHandling = 'cooperative';\n        this.styles = MapStyle;\n    }\n\n    ngOnInit(): void {\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        //\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.currentStep)).subscribe((currentStep: number) => {\n            switch (currentStep) {\n                case 0:\n                    this.center = uiConfig.map.center;\n                    this.zoom = uiConfig.map.zoom;\n                    break;\n                case 1:\n                    // Builds & shows initial rectangle.\n                    const bounds: google.maps.LatLngBoundsLiteral = this.map.buildBounds(this.center);\n                    this.map.showRect(bounds);\n                    break;\n                case 2:\n                    // Hides the rectangle.\n                    this.map.hideRect();\n                    break;\n                case 4:\n                    // Hides paths.\n                    this.map.hidePaths();\n                    break;\n            }\n        }));\n        this.subscriptions.push(this.store.pipe(select(fromUi.steps)).subscribe((steps: Step[]) => {\n            switch (this.wizard.state.currentStep) {\n                case 0:\n                    if (steps[0]) {\n                        // Updates center map.\n                        this.center = steps[0].data.center;\n                        this.zoom = 16;\n                    }\n                    break;\n                case 2:\n                    if (steps[2]) {\n                        // Shows/hides O/D nodes.\n                        const odPairs: OdPair[] = steps[2].data.odPairs;\n                        this.map.showNodes(odPairs);\n                    }\n                    break;\n                case 3:\n                    if (steps[3] && steps[3].data.odPairs) {\n                        // Shows/hides O/D paths.\n                        const odPairs: OdPairShowing[] = steps[3].data.odPairs;\n                        this.map.showPaths(odPairs);\n                    }\n                    break;\n            }\n        }));\n    }\n\n    sendActions(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n  Modules\n  MaterialModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/material.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport {\n    MatSidenavModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatIconRegistry,\n    MatButtonModule,\n    MatIconModule,\n    MatMenuModule,\n    MatStepperModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule,\n    MatDialogModule,\n    MatGridListModule,\n    MatSelectModule,\n    MatExpansionModule\n} from '@angular/material';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nconst materialModules: any[] = [\n    MatSidenavModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    MatMenuModule,\n    MatStepperModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule,\n    MatDialogModule,\n    MatGridListModule,\n    MatSelectModule,\n    MatExpansionModule\n];\n\n@NgModule({\n    imports: materialModules,\n    exports: materialModules\n})\nexport class MaterialModule {\n\n    constructor(matIconRegistry: MatIconRegistry, domSanitizer: DomSanitizer) {\n        matIconRegistry.addSvgIcon(\n            'more_vert', domSanitizer.bypassSecurityTrustResourceUrl('./assets/images/ic_more_vert_24px.svg')\n        );\n        matIconRegistry.addSvgIcon(\n            'code', domSanitizer.bypassSecurityTrustResourceUrl('./assets/images/ic_code_24px.svg')\n        );\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Member.html":{"url":"interfaces/Member.html","title":"interface - Member","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Member\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                Relation's member.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ref\n                                \n                                \n                                        role\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ref\n                                    \n                                \n                                \n                                    \n                                        ref:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\n\nimport * as combine from 'mout/array/combine';\nimport * as math from 'mathjs';\n\nimport { Heap, Path } from './k-shortest-path';\nimport { uiConfig } from '../ui/ui-config';\n\nexport enum PathType {\n    distance = 'distance',\n    duration = 'duration'\n}\n\n/**\n * An O/D pair is described by the origin and destination nodes, the type of path and the domand.\n */\nexport interface OdPair {\n\n    origin: number;\n    destination: number;\n    pathType: PathType;\n    demand?: number;\n\n}\n\nexport interface OdPairShowing extends OdPair {\n\n    showPaths: boolean;\n\n}\n\nexport interface LinkFlow {\n\n    /**\n     * linkFlow attribute.\n     */\n    value: number;\n    /**\n     * Variance is the inverse of density.\n     */\n    variance: number;\n\n}\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public label: number;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    public drawingOptions: { marker?: google.maps.Marker } = {};\n\n    /**\n     * Used by the k shortest path routing.\n     */\n    public count = 0;\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    /**\n     * Free flow velocity (m/s).\n     */\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    public linkFlow: number;\n\n    /**\n     * Maximum capacity of the edge.\n     */\n    public capacity: number;\n\n    /**\n     * Simulation queue.\n     */\n    public queue = 0;\n\n    public drawingOptions: {\n        path?: google.maps.LatLng[],\n        polyline?: google.maps.Polyline\n    } = {};\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the link flow.\n     */\n    public calcLinkFlow(): void {\n        if (this.durationInTraffic > 0 && this.duration > 0 && this.durationInTraffic >= this.duration) {\n            // Calculates free flow velocity (m/s).\n            this.velocity = math.round(this.distance / this.duration, 2) as number;\n            // Calculates velocity (m/s).\n            const velocity = math.round(this.distance / this.durationInTraffic, 2) as number;\n            // Calculates kjam.\n            const kjam = 1 / uiConfig.sp;\n            // Calculates density.\n            this.density = math.round(kjam * (this.velocity - velocity) / this.velocity, 2) as number;\n            // Calculates flow.\n            this.flow = math.round(this.density * velocity, 2) as number;\n            // Calculates link flow.\n            this.linkFlow = math.round(this.density * this.distance) as number;\n        } else {\n            this.density = 0;\n            this.linkFlow = 0;\n        }\n    }\n\n    /**\n     * Calculates the max capacity of the edge.\n     * @param factor Weather Adjustment Factor\n     */\n    public calcCapacity(factor: number): void {\n        let capacity = math.round(this.distance / uiConfig.sp) as number;\n        capacity = capacity * factor;\n        this.capacity = capacity >= 1 ? capacity : 1;\n    }\n\n    /**\n     * Gets the variance of measurement error of link flow.\n     */\n    public getVariance(): number {\n        return this.density > 0 ? math.round(1 / this.density, 2) as number : 1;\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    private nodes: Node[] = [];\n\n    private edges: Edge[] = [];\n\n    private relations: Relation[] = [];\n\n    /**\n     * Paths for each O/D pair [pairs,paths,edges].\n     */\n    private shortestPaths: Edge[][][] = [];\n\n    private shortestPathsEdges: Edge[] = [];\n\n    private incidenceMatrix: boolean[][][] = [];\n\n    private assignmentMatrix: number[][][] = [];\n\n    private heap: Heap;\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.lat = node.lat;\n            existingNode.lon = node.lon;\n            existingNode.tags = combine(existingNode.tags, node.tags);\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public getEdge(edgeId: number): Edge {\n        return this.edges.find((edge: Edge) => edge.edgeId == edgeId);\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Key:oneway\n     * @param edgeId Id of the edge\n     */\n    public isOneway(edgeId: number): boolean {\n        return !!this.getEdge(edgeId).tags.find(tag => tag.key == 'oneway' && tag.value != 'no') ||\n            this.isRoundabout(edgeId);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Tag:junction%3Droundabout\n     * @param edgeId Id of the edge\n     */\n    public isRoundabout(edgeId: number): boolean {\n        return this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'roundabout') ||\n            this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'circular') ?\n            true : false;\n    }\n\n    public getOdNode(label: number): Node {\n        return this.nodes.find((node: Node) => node.label == label);\n    }\n\n    public getOdNodes(): Node[] {\n        return this.nodes.filter((node: Node) => node.label);\n    }\n\n    /**\n     * Calculates the set of minimum paths.\n     * @param odPairs The O/D pairs\n     */\n    public calcShortestPaths(odPairs: OdPair[]): Observable {\n        try {\n            for (let i = 0; i  0) {\n                    count++;\n                    break;\n                }\n            }\n            if (count == 0) { return throwError('calcShortestPaths'); }\n        } catch (error) {\n            return throwError('calcShortestPaths');\n        }\n        return of(null);\n    }\n\n    public getShortestPaths(): Edge[][][] {\n        return this.shortestPaths;\n    }\n\n    /**\n     * Calculates the incidence matrix of paths for O/D pairs.\n     */\n    public calcIncidenceMatrix(): Observable {\n        // Gets the edges in the paths.\n        this.shortestPathsEdges = this.getEdgesfromShortestPaths();\n\n        // Builds the matrix.\n        for (let z = 0; z  value.edgeId == this.shortestPathsEdges[m].edgeId)) {\n                        // The path crosses the edge.\n                        this.incidenceMatrix[z][n][m] = true;\n                    } else {\n                        // The path does not cross the edge.\n                        this.incidenceMatrix[z][n][m] = false;\n                    }\n                }\n            }\n        }\n        return of(null);\n    }\n\n    public getIncidenceMatrix(): boolean[][][] {\n        return this.incidenceMatrix;\n    }\n\n    /**\n     * Calculates the assignment matrix.\n     * @param odPairs The O/D pairs\n     */\n    public calcAssignmentMatrix(odPairs: OdPair[]): Observable {\n        // Calculates the probabilities of shortest paths.\n        const shortestPathsProbabilities = this.calcShortestPathsProbabilities(odPairs);\n\n        // Assignment matrix.\n        for (let z = 0; z  {\n        for (const edge of this.edges) {\n            edge.calcCapacity(factor);\n        }\n        return of(null);\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link distance or duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param origin Source node\n     * @param destination Destination node\n     * @param pathType Distance or duration\n     * @param k The number of shortest paths to compute\n     * @param i Index of O/D pair\n     */\n    private ksp(origin: number, destination: number, pathType: String, k: number, i: number): void {\n        const o = this.getOdNode(origin);\n        const d = this.getOdNode(destination);\n        // Sets to zero the count property of the nodes.\n        this.resetCount();\n        // Instantiates the heap.\n        this.heap = new Heap();\n        // Inserts the path of origin into heap with cost 0.\n        this.heap.push({ pathId: 0, node: o, edges: [], cost: 0 });\n        // Walks the graph.\n        const shortestPaths = this.walk(o, d, pathType, k);\n        // Extracts the paths.\n        this.shortestPaths[i] = [];\n        for (let n = 0; n  0 && d.count  edge.origin.nodeId == node.nodeId) ? false : true;\n    }\n\n    private resetCount(): void {\n        for (const node of this.nodes) {\n            node.count = 0;\n        }\n    }\n\n    /**\n     * Returns the edges without repetitions in the shortest paths.\n     */\n    private getEdgesfromShortestPaths(): Edge[] {\n        const edges: Edge[] = [];\n        for (const pair of this.shortestPaths) {\n            for (const path of pair) {\n                for (const edge of path) {\n                    if (!edges.find(value => value.edgeId == edge.edgeId)) {\n                        edges.push(edge);\n                    }\n                }\n            }\n        }\n        return edges;\n    }\n\n    /**\n     * Multinomial logit model.\n     * @param odPairs The O/D pairs\n     */\n    private calcShortestPathsProbabilities(odPairs: OdPair[]): number[][] {\n        // Gets the the total cost of paths.\n        const pathCosts = this.calcPathCosts(odPairs);\n        const shortestPathsProbabilities: number[][] = [];\n        // Theta parameter.\n        const parameter = uiConfig.theta * 100;\n        // Calculates numerator.\n        const exps: number[][] = [];\n        for (let z = 0; z  {\n                return value > 0 ? math.exp(-value / parameter) : 0;\n            });\n        }\n        // Calculates denominator.\n        const sumExps: number[] = [];\n        for (let z = 0; z  a + b, 0);\n            sumExps.push(sum);\n        }\n        // Probabilities.\n        for (let z = 0; z  0 ? math.round(exps[z][n] / sumExps[z], 3) as number : 0;\n                shortestPathsProbabilities[z].push(p);\n            }\n        }\n        return shortestPathsProbabilities;\n    }\n\n    private calcPathCosts(odPairs: OdPair[]): number[][] {\n        const pathCosts: number[][] = [];\n        for (let z = 0; z \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MessageArchivedComponent.html":{"url":"components/MessageArchivedComponent.html","title":"component - MessageArchivedComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MessageArchivedComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/message-archived.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snack-bar\n            \n\n\n\n            \n                template\n                {{ data }}\n\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/message-archived.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/message-archived.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material';\n\n@Component({\n    selector: 'snack-bar',\n    template: `\n        {{ data }}\n    `,\n    styles: []\n})\nexport class MessageArchivedComponent {\n\n    constructor(@Inject(MAT_SNACK_BAR_DATA) public data: any) { }\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ data }}'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MessageArchivedComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NetworkModule.html":{"url":"modules/NetworkModule.html","title":"module - NetworkModule","body":"\n                   \n\n\n\n\n  Modules\n  NetworkModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NetworkModule\n\n\n\ncluster_NetworkModule_imports\n\n\n\ncluster_NetworkModule_providers\n\n\n\n\nWeatherModule\n\nWeatherModule\n\n\n\nNetworkModule\n\nNetworkModule\n\nNetworkModule -->\n\nWeatherModule->NetworkModule\n\n\n\n\n\nNetworkService\n\nNetworkService\n\nNetworkModule -->\n\nNetworkService->NetworkModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/network/network.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     NetworkService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    WeatherModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { WeatherModule } from './weather/weather.module';\n\nimport { NetworkService } from './network.service';\n\n@NgModule({\n    imports: [WeatherModule],\n    declarations: [],\n    providers: [NetworkService]\n})\nexport class NetworkModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Node.html":{"url":"classes/Node.html","title":"class - Node","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Node\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                Node represents a specific point on the earth's surface defined by its latitude and longitude.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                count\n                            \n                            \n                                    Public\n                                drawingOptions\n                            \n                            \n                                    Public\n                                incomingEdges\n                            \n                            \n                                    Public\n                                label\n                            \n                            \n                                    Public\n                                lat\n                            \n                            \n                                    Public\n                                lon\n                            \n                            \n                                    Public\n                                nodeId\n                            \n                            \n                                    Public\n                                outgoingEdges\n                            \n                            \n                                    Public\n                                tags\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(nodeId: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/graph.ts:90\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        nodeId\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            count\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        count:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:90\n                            \n                        \n\n                \n                    \n                        Used by the k shortest path routing.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            drawingOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        drawingOptions:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            incomingEdges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        incomingEdges:     Edge[]\n\n                    \n                \n                    \n                        \n                            Type :     Edge[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:81\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            label\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        label:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lat\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lat:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lon:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nodeId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nodeId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            outgoingEdges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        outgoingEdges:     Edge[]\n\n                    \n                \n                    \n                        \n                            Type :     Edge[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tags:     Tag[]\n\n                    \n                \n                    \n                        \n                            Type :     Tag[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:79\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\n\nimport * as combine from 'mout/array/combine';\nimport * as math from 'mathjs';\n\nimport { Heap, Path } from './k-shortest-path';\nimport { uiConfig } from '../ui/ui-config';\n\nexport enum PathType {\n    distance = 'distance',\n    duration = 'duration'\n}\n\n/**\n * An O/D pair is described by the origin and destination nodes, the type of path and the domand.\n */\nexport interface OdPair {\n\n    origin: number;\n    destination: number;\n    pathType: PathType;\n    demand?: number;\n\n}\n\nexport interface OdPairShowing extends OdPair {\n\n    showPaths: boolean;\n\n}\n\nexport interface LinkFlow {\n\n    /**\n     * linkFlow attribute.\n     */\n    value: number;\n    /**\n     * Variance is the inverse of density.\n     */\n    variance: number;\n\n}\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public label: number;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    public drawingOptions: { marker?: google.maps.Marker } = {};\n\n    /**\n     * Used by the k shortest path routing.\n     */\n    public count = 0;\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    /**\n     * Free flow velocity (m/s).\n     */\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    public linkFlow: number;\n\n    /**\n     * Maximum capacity of the edge.\n     */\n    public capacity: number;\n\n    /**\n     * Simulation queue.\n     */\n    public queue = 0;\n\n    public drawingOptions: {\n        path?: google.maps.LatLng[],\n        polyline?: google.maps.Polyline\n    } = {};\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the link flow.\n     */\n    public calcLinkFlow(): void {\n        if (this.durationInTraffic > 0 && this.duration > 0 && this.durationInTraffic >= this.duration) {\n            // Calculates free flow velocity (m/s).\n            this.velocity = math.round(this.distance / this.duration, 2) as number;\n            // Calculates velocity (m/s).\n            const velocity = math.round(this.distance / this.durationInTraffic, 2) as number;\n            // Calculates kjam.\n            const kjam = 1 / uiConfig.sp;\n            // Calculates density.\n            this.density = math.round(kjam * (this.velocity - velocity) / this.velocity, 2) as number;\n            // Calculates flow.\n            this.flow = math.round(this.density * velocity, 2) as number;\n            // Calculates link flow.\n            this.linkFlow = math.round(this.density * this.distance) as number;\n        } else {\n            this.density = 0;\n            this.linkFlow = 0;\n        }\n    }\n\n    /**\n     * Calculates the max capacity of the edge.\n     * @param factor Weather Adjustment Factor\n     */\n    public calcCapacity(factor: number): void {\n        let capacity = math.round(this.distance / uiConfig.sp) as number;\n        capacity = capacity * factor;\n        this.capacity = capacity >= 1 ? capacity : 1;\n    }\n\n    /**\n     * Gets the variance of measurement error of link flow.\n     */\n    public getVariance(): number {\n        return this.density > 0 ? math.round(1 / this.density, 2) as number : 1;\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    private nodes: Node[] = [];\n\n    private edges: Edge[] = [];\n\n    private relations: Relation[] = [];\n\n    /**\n     * Paths for each O/D pair [pairs,paths,edges].\n     */\n    private shortestPaths: Edge[][][] = [];\n\n    private shortestPathsEdges: Edge[] = [];\n\n    private incidenceMatrix: boolean[][][] = [];\n\n    private assignmentMatrix: number[][][] = [];\n\n    private heap: Heap;\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.lat = node.lat;\n            existingNode.lon = node.lon;\n            existingNode.tags = combine(existingNode.tags, node.tags);\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public getEdge(edgeId: number): Edge {\n        return this.edges.find((edge: Edge) => edge.edgeId == edgeId);\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Key:oneway\n     * @param edgeId Id of the edge\n     */\n    public isOneway(edgeId: number): boolean {\n        return !!this.getEdge(edgeId).tags.find(tag => tag.key == 'oneway' && tag.value != 'no') ||\n            this.isRoundabout(edgeId);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Tag:junction%3Droundabout\n     * @param edgeId Id of the edge\n     */\n    public isRoundabout(edgeId: number): boolean {\n        return this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'roundabout') ||\n            this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'circular') ?\n            true : false;\n    }\n\n    public getOdNode(label: number): Node {\n        return this.nodes.find((node: Node) => node.label == label);\n    }\n\n    public getOdNodes(): Node[] {\n        return this.nodes.filter((node: Node) => node.label);\n    }\n\n    /**\n     * Calculates the set of minimum paths.\n     * @param odPairs The O/D pairs\n     */\n    public calcShortestPaths(odPairs: OdPair[]): Observable {\n        try {\n            for (let i = 0; i  0) {\n                    count++;\n                    break;\n                }\n            }\n            if (count == 0) { return throwError('calcShortestPaths'); }\n        } catch (error) {\n            return throwError('calcShortestPaths');\n        }\n        return of(null);\n    }\n\n    public getShortestPaths(): Edge[][][] {\n        return this.shortestPaths;\n    }\n\n    /**\n     * Calculates the incidence matrix of paths for O/D pairs.\n     */\n    public calcIncidenceMatrix(): Observable {\n        // Gets the edges in the paths.\n        this.shortestPathsEdges = this.getEdgesfromShortestPaths();\n\n        // Builds the matrix.\n        for (let z = 0; z  value.edgeId == this.shortestPathsEdges[m].edgeId)) {\n                        // The path crosses the edge.\n                        this.incidenceMatrix[z][n][m] = true;\n                    } else {\n                        // The path does not cross the edge.\n                        this.incidenceMatrix[z][n][m] = false;\n                    }\n                }\n            }\n        }\n        return of(null);\n    }\n\n    public getIncidenceMatrix(): boolean[][][] {\n        return this.incidenceMatrix;\n    }\n\n    /**\n     * Calculates the assignment matrix.\n     * @param odPairs The O/D pairs\n     */\n    public calcAssignmentMatrix(odPairs: OdPair[]): Observable {\n        // Calculates the probabilities of shortest paths.\n        const shortestPathsProbabilities = this.calcShortestPathsProbabilities(odPairs);\n\n        // Assignment matrix.\n        for (let z = 0; z  {\n        for (const edge of this.edges) {\n            edge.calcCapacity(factor);\n        }\n        return of(null);\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link distance or duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param origin Source node\n     * @param destination Destination node\n     * @param pathType Distance or duration\n     * @param k The number of shortest paths to compute\n     * @param i Index of O/D pair\n     */\n    private ksp(origin: number, destination: number, pathType: String, k: number, i: number): void {\n        const o = this.getOdNode(origin);\n        const d = this.getOdNode(destination);\n        // Sets to zero the count property of the nodes.\n        this.resetCount();\n        // Instantiates the heap.\n        this.heap = new Heap();\n        // Inserts the path of origin into heap with cost 0.\n        this.heap.push({ pathId: 0, node: o, edges: [], cost: 0 });\n        // Walks the graph.\n        const shortestPaths = this.walk(o, d, pathType, k);\n        // Extracts the paths.\n        this.shortestPaths[i] = [];\n        for (let n = 0; n  0 && d.count  edge.origin.nodeId == node.nodeId) ? false : true;\n    }\n\n    private resetCount(): void {\n        for (const node of this.nodes) {\n            node.count = 0;\n        }\n    }\n\n    /**\n     * Returns the edges without repetitions in the shortest paths.\n     */\n    private getEdgesfromShortestPaths(): Edge[] {\n        const edges: Edge[] = [];\n        for (const pair of this.shortestPaths) {\n            for (const path of pair) {\n                for (const edge of path) {\n                    if (!edges.find(value => value.edgeId == edge.edgeId)) {\n                        edges.push(edge);\n                    }\n                }\n            }\n        }\n        return edges;\n    }\n\n    /**\n     * Multinomial logit model.\n     * @param odPairs The O/D pairs\n     */\n    private calcShortestPathsProbabilities(odPairs: OdPair[]): number[][] {\n        // Gets the the total cost of paths.\n        const pathCosts = this.calcPathCosts(odPairs);\n        const shortestPathsProbabilities: number[][] = [];\n        // Theta parameter.\n        const parameter = uiConfig.theta * 100;\n        // Calculates numerator.\n        const exps: number[][] = [];\n        for (let z = 0; z  {\n                return value > 0 ? math.exp(-value / parameter) : 0;\n            });\n        }\n        // Calculates denominator.\n        const sumExps: number[] = [];\n        for (let z = 0; z  a + b, 0);\n            sumExps.push(sum);\n        }\n        // Probabilities.\n        for (let z = 0; z  0 ? math.round(exps[z][n] / sumExps[z], 3) as number : 0;\n                shortestPathsProbabilities[z].push(p);\n            }\n        }\n        return shortestPathsProbabilities;\n    }\n\n    private calcPathCosts(odPairs: OdPair[]): number[][] {\n        const pathCosts: number[][] = [];\n        for (let z = 0; z \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OdPair.html":{"url":"interfaces/OdPair.html","title":"interface - OdPair","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OdPair\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                An O/D pair is described by the origin and destination nodes, the type of path and the domand.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        demand\n                                \n                                \n                                        destination\n                                \n                                \n                                        origin\n                                \n                                \n                                        pathType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        demand\n                                    \n                                \n                                \n                                    \n                                        demand:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                    \n                                \n                                \n                                    \n                                        destination:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        origin\n                                    \n                                \n                                \n                                    \n                                        origin:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pathType\n                                    \n                                \n                                \n                                    \n                                        pathType:     PathType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PathType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\n\nimport * as combine from 'mout/array/combine';\nimport * as math from 'mathjs';\n\nimport { Heap, Path } from './k-shortest-path';\nimport { uiConfig } from '../ui/ui-config';\n\nexport enum PathType {\n    distance = 'distance',\n    duration = 'duration'\n}\n\n/**\n * An O/D pair is described by the origin and destination nodes, the type of path and the domand.\n */\nexport interface OdPair {\n\n    origin: number;\n    destination: number;\n    pathType: PathType;\n    demand?: number;\n\n}\n\nexport interface OdPairShowing extends OdPair {\n\n    showPaths: boolean;\n\n}\n\nexport interface LinkFlow {\n\n    /**\n     * linkFlow attribute.\n     */\n    value: number;\n    /**\n     * Variance is the inverse of density.\n     */\n    variance: number;\n\n}\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public label: number;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    public drawingOptions: { marker?: google.maps.Marker } = {};\n\n    /**\n     * Used by the k shortest path routing.\n     */\n    public count = 0;\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    /**\n     * Free flow velocity (m/s).\n     */\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    public linkFlow: number;\n\n    /**\n     * Maximum capacity of the edge.\n     */\n    public capacity: number;\n\n    /**\n     * Simulation queue.\n     */\n    public queue = 0;\n\n    public drawingOptions: {\n        path?: google.maps.LatLng[],\n        polyline?: google.maps.Polyline\n    } = {};\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the link flow.\n     */\n    public calcLinkFlow(): void {\n        if (this.durationInTraffic > 0 && this.duration > 0 && this.durationInTraffic >= this.duration) {\n            // Calculates free flow velocity (m/s).\n            this.velocity = math.round(this.distance / this.duration, 2) as number;\n            // Calculates velocity (m/s).\n            const velocity = math.round(this.distance / this.durationInTraffic, 2) as number;\n            // Calculates kjam.\n            const kjam = 1 / uiConfig.sp;\n            // Calculates density.\n            this.density = math.round(kjam * (this.velocity - velocity) / this.velocity, 2) as number;\n            // Calculates flow.\n            this.flow = math.round(this.density * velocity, 2) as number;\n            // Calculates link flow.\n            this.linkFlow = math.round(this.density * this.distance) as number;\n        } else {\n            this.density = 0;\n            this.linkFlow = 0;\n        }\n    }\n\n    /**\n     * Calculates the max capacity of the edge.\n     * @param factor Weather Adjustment Factor\n     */\n    public calcCapacity(factor: number): void {\n        let capacity = math.round(this.distance / uiConfig.sp) as number;\n        capacity = capacity * factor;\n        this.capacity = capacity >= 1 ? capacity : 1;\n    }\n\n    /**\n     * Gets the variance of measurement error of link flow.\n     */\n    public getVariance(): number {\n        return this.density > 0 ? math.round(1 / this.density, 2) as number : 1;\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    private nodes: Node[] = [];\n\n    private edges: Edge[] = [];\n\n    private relations: Relation[] = [];\n\n    /**\n     * Paths for each O/D pair [pairs,paths,edges].\n     */\n    private shortestPaths: Edge[][][] = [];\n\n    private shortestPathsEdges: Edge[] = [];\n\n    private incidenceMatrix: boolean[][][] = [];\n\n    private assignmentMatrix: number[][][] = [];\n\n    private heap: Heap;\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.lat = node.lat;\n            existingNode.lon = node.lon;\n            existingNode.tags = combine(existingNode.tags, node.tags);\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public getEdge(edgeId: number): Edge {\n        return this.edges.find((edge: Edge) => edge.edgeId == edgeId);\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Key:oneway\n     * @param edgeId Id of the edge\n     */\n    public isOneway(edgeId: number): boolean {\n        return !!this.getEdge(edgeId).tags.find(tag => tag.key == 'oneway' && tag.value != 'no') ||\n            this.isRoundabout(edgeId);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Tag:junction%3Droundabout\n     * @param edgeId Id of the edge\n     */\n    public isRoundabout(edgeId: number): boolean {\n        return this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'roundabout') ||\n            this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'circular') ?\n            true : false;\n    }\n\n    public getOdNode(label: number): Node {\n        return this.nodes.find((node: Node) => node.label == label);\n    }\n\n    public getOdNodes(): Node[] {\n        return this.nodes.filter((node: Node) => node.label);\n    }\n\n    /**\n     * Calculates the set of minimum paths.\n     * @param odPairs The O/D pairs\n     */\n    public calcShortestPaths(odPairs: OdPair[]): Observable {\n        try {\n            for (let i = 0; i  0) {\n                    count++;\n                    break;\n                }\n            }\n            if (count == 0) { return throwError('calcShortestPaths'); }\n        } catch (error) {\n            return throwError('calcShortestPaths');\n        }\n        return of(null);\n    }\n\n    public getShortestPaths(): Edge[][][] {\n        return this.shortestPaths;\n    }\n\n    /**\n     * Calculates the incidence matrix of paths for O/D pairs.\n     */\n    public calcIncidenceMatrix(): Observable {\n        // Gets the edges in the paths.\n        this.shortestPathsEdges = this.getEdgesfromShortestPaths();\n\n        // Builds the matrix.\n        for (let z = 0; z  value.edgeId == this.shortestPathsEdges[m].edgeId)) {\n                        // The path crosses the edge.\n                        this.incidenceMatrix[z][n][m] = true;\n                    } else {\n                        // The path does not cross the edge.\n                        this.incidenceMatrix[z][n][m] = false;\n                    }\n                }\n            }\n        }\n        return of(null);\n    }\n\n    public getIncidenceMatrix(): boolean[][][] {\n        return this.incidenceMatrix;\n    }\n\n    /**\n     * Calculates the assignment matrix.\n     * @param odPairs The O/D pairs\n     */\n    public calcAssignmentMatrix(odPairs: OdPair[]): Observable {\n        // Calculates the probabilities of shortest paths.\n        const shortestPathsProbabilities = this.calcShortestPathsProbabilities(odPairs);\n\n        // Assignment matrix.\n        for (let z = 0; z  {\n        for (const edge of this.edges) {\n            edge.calcCapacity(factor);\n        }\n        return of(null);\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link distance or duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param origin Source node\n     * @param destination Destination node\n     * @param pathType Distance or duration\n     * @param k The number of shortest paths to compute\n     * @param i Index of O/D pair\n     */\n    private ksp(origin: number, destination: number, pathType: String, k: number, i: number): void {\n        const o = this.getOdNode(origin);\n        const d = this.getOdNode(destination);\n        // Sets to zero the count property of the nodes.\n        this.resetCount();\n        // Instantiates the heap.\n        this.heap = new Heap();\n        // Inserts the path of origin into heap with cost 0.\n        this.heap.push({ pathId: 0, node: o, edges: [], cost: 0 });\n        // Walks the graph.\n        const shortestPaths = this.walk(o, d, pathType, k);\n        // Extracts the paths.\n        this.shortestPaths[i] = [];\n        for (let n = 0; n  0 && d.count  edge.origin.nodeId == node.nodeId) ? false : true;\n    }\n\n    private resetCount(): void {\n        for (const node of this.nodes) {\n            node.count = 0;\n        }\n    }\n\n    /**\n     * Returns the edges without repetitions in the shortest paths.\n     */\n    private getEdgesfromShortestPaths(): Edge[] {\n        const edges: Edge[] = [];\n        for (const pair of this.shortestPaths) {\n            for (const path of pair) {\n                for (const edge of path) {\n                    if (!edges.find(value => value.edgeId == edge.edgeId)) {\n                        edges.push(edge);\n                    }\n                }\n            }\n        }\n        return edges;\n    }\n\n    /**\n     * Multinomial logit model.\n     * @param odPairs The O/D pairs\n     */\n    private calcShortestPathsProbabilities(odPairs: OdPair[]): number[][] {\n        // Gets the the total cost of paths.\n        const pathCosts = this.calcPathCosts(odPairs);\n        const shortestPathsProbabilities: number[][] = [];\n        // Theta parameter.\n        const parameter = uiConfig.theta * 100;\n        // Calculates numerator.\n        const exps: number[][] = [];\n        for (let z = 0; z  {\n                return value > 0 ? math.exp(-value / parameter) : 0;\n            });\n        }\n        // Calculates denominator.\n        const sumExps: number[] = [];\n        for (let z = 0; z  a + b, 0);\n            sumExps.push(sum);\n        }\n        // Probabilities.\n        for (let z = 0; z  0 ? math.round(exps[z][n] / sumExps[z], 3) as number : 0;\n                shortestPathsProbabilities[z].push(p);\n            }\n        }\n        return shortestPathsProbabilities;\n    }\n\n    private calcPathCosts(odPairs: OdPair[]): number[][] {\n        const pathCosts: number[][] = [];\n        for (let z = 0; z \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OdPairShowing.html":{"url":"interfaces/OdPairShowing.html","title":"interface - OdPairShowing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OdPairShowing\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n\n            \n                Extends\n            \n            \n                    OdPair\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        showPaths\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        showPaths\n                                    \n                                \n                                \n                                    \n                                        showPaths:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\n\nimport * as combine from 'mout/array/combine';\nimport * as math from 'mathjs';\n\nimport { Heap, Path } from './k-shortest-path';\nimport { uiConfig } from '../ui/ui-config';\n\nexport enum PathType {\n    distance = 'distance',\n    duration = 'duration'\n}\n\n/**\n * An O/D pair is described by the origin and destination nodes, the type of path and the domand.\n */\nexport interface OdPair {\n\n    origin: number;\n    destination: number;\n    pathType: PathType;\n    demand?: number;\n\n}\n\nexport interface OdPairShowing extends OdPair {\n\n    showPaths: boolean;\n\n}\n\nexport interface LinkFlow {\n\n    /**\n     * linkFlow attribute.\n     */\n    value: number;\n    /**\n     * Variance is the inverse of density.\n     */\n    variance: number;\n\n}\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public label: number;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    public drawingOptions: { marker?: google.maps.Marker } = {};\n\n    /**\n     * Used by the k shortest path routing.\n     */\n    public count = 0;\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    /**\n     * Free flow velocity (m/s).\n     */\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    public linkFlow: number;\n\n    /**\n     * Maximum capacity of the edge.\n     */\n    public capacity: number;\n\n    /**\n     * Simulation queue.\n     */\n    public queue = 0;\n\n    public drawingOptions: {\n        path?: google.maps.LatLng[],\n        polyline?: google.maps.Polyline\n    } = {};\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the link flow.\n     */\n    public calcLinkFlow(): void {\n        if (this.durationInTraffic > 0 && this.duration > 0 && this.durationInTraffic >= this.duration) {\n            // Calculates free flow velocity (m/s).\n            this.velocity = math.round(this.distance / this.duration, 2) as number;\n            // Calculates velocity (m/s).\n            const velocity = math.round(this.distance / this.durationInTraffic, 2) as number;\n            // Calculates kjam.\n            const kjam = 1 / uiConfig.sp;\n            // Calculates density.\n            this.density = math.round(kjam * (this.velocity - velocity) / this.velocity, 2) as number;\n            // Calculates flow.\n            this.flow = math.round(this.density * velocity, 2) as number;\n            // Calculates link flow.\n            this.linkFlow = math.round(this.density * this.distance) as number;\n        } else {\n            this.density = 0;\n            this.linkFlow = 0;\n        }\n    }\n\n    /**\n     * Calculates the max capacity of the edge.\n     * @param factor Weather Adjustment Factor\n     */\n    public calcCapacity(factor: number): void {\n        let capacity = math.round(this.distance / uiConfig.sp) as number;\n        capacity = capacity * factor;\n        this.capacity = capacity >= 1 ? capacity : 1;\n    }\n\n    /**\n     * Gets the variance of measurement error of link flow.\n     */\n    public getVariance(): number {\n        return this.density > 0 ? math.round(1 / this.density, 2) as number : 1;\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    private nodes: Node[] = [];\n\n    private edges: Edge[] = [];\n\n    private relations: Relation[] = [];\n\n    /**\n     * Paths for each O/D pair [pairs,paths,edges].\n     */\n    private shortestPaths: Edge[][][] = [];\n\n    private shortestPathsEdges: Edge[] = [];\n\n    private incidenceMatrix: boolean[][][] = [];\n\n    private assignmentMatrix: number[][][] = [];\n\n    private heap: Heap;\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.lat = node.lat;\n            existingNode.lon = node.lon;\n            existingNode.tags = combine(existingNode.tags, node.tags);\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public getEdge(edgeId: number): Edge {\n        return this.edges.find((edge: Edge) => edge.edgeId == edgeId);\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Key:oneway\n     * @param edgeId Id of the edge\n     */\n    public isOneway(edgeId: number): boolean {\n        return !!this.getEdge(edgeId).tags.find(tag => tag.key == 'oneway' && tag.value != 'no') ||\n            this.isRoundabout(edgeId);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Tag:junction%3Droundabout\n     * @param edgeId Id of the edge\n     */\n    public isRoundabout(edgeId: number): boolean {\n        return this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'roundabout') ||\n            this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'circular') ?\n            true : false;\n    }\n\n    public getOdNode(label: number): Node {\n        return this.nodes.find((node: Node) => node.label == label);\n    }\n\n    public getOdNodes(): Node[] {\n        return this.nodes.filter((node: Node) => node.label);\n    }\n\n    /**\n     * Calculates the set of minimum paths.\n     * @param odPairs The O/D pairs\n     */\n    public calcShortestPaths(odPairs: OdPair[]): Observable {\n        try {\n            for (let i = 0; i  0) {\n                    count++;\n                    break;\n                }\n            }\n            if (count == 0) { return throwError('calcShortestPaths'); }\n        } catch (error) {\n            return throwError('calcShortestPaths');\n        }\n        return of(null);\n    }\n\n    public getShortestPaths(): Edge[][][] {\n        return this.shortestPaths;\n    }\n\n    /**\n     * Calculates the incidence matrix of paths for O/D pairs.\n     */\n    public calcIncidenceMatrix(): Observable {\n        // Gets the edges in the paths.\n        this.shortestPathsEdges = this.getEdgesfromShortestPaths();\n\n        // Builds the matrix.\n        for (let z = 0; z  value.edgeId == this.shortestPathsEdges[m].edgeId)) {\n                        // The path crosses the edge.\n                        this.incidenceMatrix[z][n][m] = true;\n                    } else {\n                        // The path does not cross the edge.\n                        this.incidenceMatrix[z][n][m] = false;\n                    }\n                }\n            }\n        }\n        return of(null);\n    }\n\n    public getIncidenceMatrix(): boolean[][][] {\n        return this.incidenceMatrix;\n    }\n\n    /**\n     * Calculates the assignment matrix.\n     * @param odPairs The O/D pairs\n     */\n    public calcAssignmentMatrix(odPairs: OdPair[]): Observable {\n        // Calculates the probabilities of shortest paths.\n        const shortestPathsProbabilities = this.calcShortestPathsProbabilities(odPairs);\n\n        // Assignment matrix.\n        for (let z = 0; z  {\n        for (const edge of this.edges) {\n            edge.calcCapacity(factor);\n        }\n        return of(null);\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link distance or duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param origin Source node\n     * @param destination Destination node\n     * @param pathType Distance or duration\n     * @param k The number of shortest paths to compute\n     * @param i Index of O/D pair\n     */\n    private ksp(origin: number, destination: number, pathType: String, k: number, i: number): void {\n        const o = this.getOdNode(origin);\n        const d = this.getOdNode(destination);\n        // Sets to zero the count property of the nodes.\n        this.resetCount();\n        // Instantiates the heap.\n        this.heap = new Heap();\n        // Inserts the path of origin into heap with cost 0.\n        this.heap.push({ pathId: 0, node: o, edges: [], cost: 0 });\n        // Walks the graph.\n        const shortestPaths = this.walk(o, d, pathType, k);\n        // Extracts the paths.\n        this.shortestPaths[i] = [];\n        for (let n = 0; n  0 && d.count  edge.origin.nodeId == node.nodeId) ? false : true;\n    }\n\n    private resetCount(): void {\n        for (const node of this.nodes) {\n            node.count = 0;\n        }\n    }\n\n    /**\n     * Returns the edges without repetitions in the shortest paths.\n     */\n    private getEdgesfromShortestPaths(): Edge[] {\n        const edges: Edge[] = [];\n        for (const pair of this.shortestPaths) {\n            for (const path of pair) {\n                for (const edge of path) {\n                    if (!edges.find(value => value.edgeId == edge.edgeId)) {\n                        edges.push(edge);\n                    }\n                }\n            }\n        }\n        return edges;\n    }\n\n    /**\n     * Multinomial logit model.\n     * @param odPairs The O/D pairs\n     */\n    private calcShortestPathsProbabilities(odPairs: OdPair[]): number[][] {\n        // Gets the the total cost of paths.\n        const pathCosts = this.calcPathCosts(odPairs);\n        const shortestPathsProbabilities: number[][] = [];\n        // Theta parameter.\n        const parameter = uiConfig.theta * 100;\n        // Calculates numerator.\n        const exps: number[][] = [];\n        for (let z = 0; z  {\n                return value > 0 ? math.exp(-value / parameter) : 0;\n            });\n        }\n        // Calculates denominator.\n        const sumExps: number[] = [];\n        for (let z = 0; z  a + b, 0);\n            sumExps.push(sum);\n        }\n        // Probabilities.\n        for (let z = 0; z  0 ? math.round(exps[z][n] / sumExps[z], 3) as number : 0;\n                shortestPathsProbabilities[z].push(p);\n            }\n        }\n        return shortestPathsProbabilities;\n    }\n\n    private calcPathCosts(odPairs: OdPair[]): number[][] {\n        const pathCosts: number[][] = [];\n        for (let z = 0; z \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Path.html":{"url":"interfaces/Path.html","title":"interface - Path","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Path\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/k-shortest-path.ts\n        \n\n            \n                Description\n            \n            \n                Path to generic node.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        cost\n                                \n                                \n                                        edges\n                                \n                                \n                                        node\n                                \n                                \n                                        pathId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cost\n                                    \n                                \n                                \n                                    \n                                        cost:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        edges\n                                    \n                                \n                                \n                                    \n                                        edges:     Edge[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Edge[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        node\n                                    \n                                \n                                \n                                    \n                                        node:     Node\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Node\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pathId\n                                    \n                                \n                                \n                                    \n                                        pathId:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Edge, Node } from \"./graph\";\n\n/**\n * Path to generic node.\n */\nexport interface Path {\n\n    pathId: number;\n    node: Node;\n    edges: Edge[];\n    cost: number;\n\n}\n\n/**\n * Heap data structure containing paths.\n */\nexport class Heap {\n\n    /**\n     * The queue of paths.\n     */\n    private paths: Path[] = [];\n\n    /**\n     * Inserts a path into the heap.\n     * @param path The path to insert\n     */\n    public push(path: Path): void {\n        this.paths.push({ pathId: path.pathId, node: path.node, edges: path.edges, cost: path.cost });\n    }\n\n    /**\n     * Removes a path from the heap.\n     * @param pathId The id of the path\n     */\n    public pop(pathId: number): void {\n        const index = this.paths.findIndex((path: Path) => path.pathId == pathId);\n        this.paths.splice(index, 1);\n    }\n\n    /**\n     * Returns the shortest path in the heap by cost.\n     */\n    public getShortestPath(): Path {\n        return this.paths.reduce((prev: Path, curr: Path) => prev.cost \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Relation.html":{"url":"classes/Relation.html","title":"class - Relation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Relation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                members\n                            \n                            \n                                    Public\n                                relationId\n                            \n                            \n                                    Public\n                                tags\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(relationId: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/graph.ts:207\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        relationId\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            members\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        members:     Member[]\n\n                    \n                \n                    \n                        \n                            Type :     Member[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:205\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            relationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        relationId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:203\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tags:     Tag[]\n\n                    \n                \n                    \n                        \n                            Type :     Tag[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:207\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\n\nimport * as combine from 'mout/array/combine';\nimport * as math from 'mathjs';\n\nimport { Heap, Path } from './k-shortest-path';\nimport { uiConfig } from '../ui/ui-config';\n\nexport enum PathType {\n    distance = 'distance',\n    duration = 'duration'\n}\n\n/**\n * An O/D pair is described by the origin and destination nodes, the type of path and the domand.\n */\nexport interface OdPair {\n\n    origin: number;\n    destination: number;\n    pathType: PathType;\n    demand?: number;\n\n}\n\nexport interface OdPairShowing extends OdPair {\n\n    showPaths: boolean;\n\n}\n\nexport interface LinkFlow {\n\n    /**\n     * linkFlow attribute.\n     */\n    value: number;\n    /**\n     * Variance is the inverse of density.\n     */\n    variance: number;\n\n}\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public label: number;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    public drawingOptions: { marker?: google.maps.Marker } = {};\n\n    /**\n     * Used by the k shortest path routing.\n     */\n    public count = 0;\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    /**\n     * Free flow velocity (m/s).\n     */\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    public linkFlow: number;\n\n    /**\n     * Maximum capacity of the edge.\n     */\n    public capacity: number;\n\n    /**\n     * Simulation queue.\n     */\n    public queue = 0;\n\n    public drawingOptions: {\n        path?: google.maps.LatLng[],\n        polyline?: google.maps.Polyline\n    } = {};\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the link flow.\n     */\n    public calcLinkFlow(): void {\n        if (this.durationInTraffic > 0 && this.duration > 0 && this.durationInTraffic >= this.duration) {\n            // Calculates free flow velocity (m/s).\n            this.velocity = math.round(this.distance / this.duration, 2) as number;\n            // Calculates velocity (m/s).\n            const velocity = math.round(this.distance / this.durationInTraffic, 2) as number;\n            // Calculates kjam.\n            const kjam = 1 / uiConfig.sp;\n            // Calculates density.\n            this.density = math.round(kjam * (this.velocity - velocity) / this.velocity, 2) as number;\n            // Calculates flow.\n            this.flow = math.round(this.density * velocity, 2) as number;\n            // Calculates link flow.\n            this.linkFlow = math.round(this.density * this.distance) as number;\n        } else {\n            this.density = 0;\n            this.linkFlow = 0;\n        }\n    }\n\n    /**\n     * Calculates the max capacity of the edge.\n     * @param factor Weather Adjustment Factor\n     */\n    public calcCapacity(factor: number): void {\n        let capacity = math.round(this.distance / uiConfig.sp) as number;\n        capacity = capacity * factor;\n        this.capacity = capacity >= 1 ? capacity : 1;\n    }\n\n    /**\n     * Gets the variance of measurement error of link flow.\n     */\n    public getVariance(): number {\n        return this.density > 0 ? math.round(1 / this.density, 2) as number : 1;\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    private nodes: Node[] = [];\n\n    private edges: Edge[] = [];\n\n    private relations: Relation[] = [];\n\n    /**\n     * Paths for each O/D pair [pairs,paths,edges].\n     */\n    private shortestPaths: Edge[][][] = [];\n\n    private shortestPathsEdges: Edge[] = [];\n\n    private incidenceMatrix: boolean[][][] = [];\n\n    private assignmentMatrix: number[][][] = [];\n\n    private heap: Heap;\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.lat = node.lat;\n            existingNode.lon = node.lon;\n            existingNode.tags = combine(existingNode.tags, node.tags);\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public getEdge(edgeId: number): Edge {\n        return this.edges.find((edge: Edge) => edge.edgeId == edgeId);\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Key:oneway\n     * @param edgeId Id of the edge\n     */\n    public isOneway(edgeId: number): boolean {\n        return !!this.getEdge(edgeId).tags.find(tag => tag.key == 'oneway' && tag.value != 'no') ||\n            this.isRoundabout(edgeId);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Tag:junction%3Droundabout\n     * @param edgeId Id of the edge\n     */\n    public isRoundabout(edgeId: number): boolean {\n        return this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'roundabout') ||\n            this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'circular') ?\n            true : false;\n    }\n\n    public getOdNode(label: number): Node {\n        return this.nodes.find((node: Node) => node.label == label);\n    }\n\n    public getOdNodes(): Node[] {\n        return this.nodes.filter((node: Node) => node.label);\n    }\n\n    /**\n     * Calculates the set of minimum paths.\n     * @param odPairs The O/D pairs\n     */\n    public calcShortestPaths(odPairs: OdPair[]): Observable {\n        try {\n            for (let i = 0; i  0) {\n                    count++;\n                    break;\n                }\n            }\n            if (count == 0) { return throwError('calcShortestPaths'); }\n        } catch (error) {\n            return throwError('calcShortestPaths');\n        }\n        return of(null);\n    }\n\n    public getShortestPaths(): Edge[][][] {\n        return this.shortestPaths;\n    }\n\n    /**\n     * Calculates the incidence matrix of paths for O/D pairs.\n     */\n    public calcIncidenceMatrix(): Observable {\n        // Gets the edges in the paths.\n        this.shortestPathsEdges = this.getEdgesfromShortestPaths();\n\n        // Builds the matrix.\n        for (let z = 0; z  value.edgeId == this.shortestPathsEdges[m].edgeId)) {\n                        // The path crosses the edge.\n                        this.incidenceMatrix[z][n][m] = true;\n                    } else {\n                        // The path does not cross the edge.\n                        this.incidenceMatrix[z][n][m] = false;\n                    }\n                }\n            }\n        }\n        return of(null);\n    }\n\n    public getIncidenceMatrix(): boolean[][][] {\n        return this.incidenceMatrix;\n    }\n\n    /**\n     * Calculates the assignment matrix.\n     * @param odPairs The O/D pairs\n     */\n    public calcAssignmentMatrix(odPairs: OdPair[]): Observable {\n        // Calculates the probabilities of shortest paths.\n        const shortestPathsProbabilities = this.calcShortestPathsProbabilities(odPairs);\n\n        // Assignment matrix.\n        for (let z = 0; z  {\n        for (const edge of this.edges) {\n            edge.calcCapacity(factor);\n        }\n        return of(null);\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link distance or duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param origin Source node\n     * @param destination Destination node\n     * @param pathType Distance or duration\n     * @param k The number of shortest paths to compute\n     * @param i Index of O/D pair\n     */\n    private ksp(origin: number, destination: number, pathType: String, k: number, i: number): void {\n        const o = this.getOdNode(origin);\n        const d = this.getOdNode(destination);\n        // Sets to zero the count property of the nodes.\n        this.resetCount();\n        // Instantiates the heap.\n        this.heap = new Heap();\n        // Inserts the path of origin into heap with cost 0.\n        this.heap.push({ pathId: 0, node: o, edges: [], cost: 0 });\n        // Walks the graph.\n        const shortestPaths = this.walk(o, d, pathType, k);\n        // Extracts the paths.\n        this.shortestPaths[i] = [];\n        for (let n = 0; n  0 && d.count  edge.origin.nodeId == node.nodeId) ? false : true;\n    }\n\n    private resetCount(): void {\n        for (const node of this.nodes) {\n            node.count = 0;\n        }\n    }\n\n    /**\n     * Returns the edges without repetitions in the shortest paths.\n     */\n    private getEdgesfromShortestPaths(): Edge[] {\n        const edges: Edge[] = [];\n        for (const pair of this.shortestPaths) {\n            for (const path of pair) {\n                for (const edge of path) {\n                    if (!edges.find(value => value.edgeId == edge.edgeId)) {\n                        edges.push(edge);\n                    }\n                }\n            }\n        }\n        return edges;\n    }\n\n    /**\n     * Multinomial logit model.\n     * @param odPairs The O/D pairs\n     */\n    private calcShortestPathsProbabilities(odPairs: OdPair[]): number[][] {\n        // Gets the the total cost of paths.\n        const pathCosts = this.calcPathCosts(odPairs);\n        const shortestPathsProbabilities: number[][] = [];\n        // Theta parameter.\n        const parameter = uiConfig.theta * 100;\n        // Calculates numerator.\n        const exps: number[][] = [];\n        for (let z = 0; z  {\n                return value > 0 ? math.exp(-value / parameter) : 0;\n            });\n        }\n        // Calculates denominator.\n        const sumExps: number[] = [];\n        for (let z = 0; z  a + b, 0);\n            sumExps.push(sum);\n        }\n        // Probabilities.\n        for (let z = 0; z  0 ? math.round(exps[z][n] / sumExps[z], 3) as number : 0;\n                shortestPathsProbabilities[z].push(p);\n            }\n        }\n        return shortestPathsProbabilities;\n    }\n\n    private calcPathCosts(odPairs: OdPair[]): number[][] {\n        const pathCosts: number[][] = [];\n        for (let z = 0; z \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reset.html":{"url":"classes/Reset.html","title":"class - Reset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/actions/wizard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/models/actions/wizard.actions.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : WizardActionTypes.Reset\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:61\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Step, Map } from '../wizard';\n\n/**\n * ngrx: wizard Actions.\n */\nexport enum WizardActionTypes {\n\n    StepChanged = '[Wizard] Step Changed',\n    MapChanged = '[Wizard] Map Changed',\n    StepError = '[Wizard] Step Error',\n    StepPending = '[Wizard] Step Pending',\n    GoOn = '[Wizard] Go On',\n    Reset = '[Wizard] Reset'\n\n}\n\nexport class StepChanged implements Action {\n\n    public readonly type: string = WizardActionTypes.StepChanged;\n\n    constructor(public payload: { step: Step, index: number }) { }\n\n}\n\nexport class MapChanged implements Action {\n\n    public readonly type: string = WizardActionTypes.MapChanged;\n\n    constructor(public payload: { map: Map }) { }\n\n}\n\nexport class StepError implements Action {\n\n    public readonly type: string = WizardActionTypes.StepError;\n\n    constructor(public payload: string) { }\n\n}\n\nexport class StepPending implements Action {\n\n    public readonly type: string = WizardActionTypes.StepPending;\n\n    constructor(public payload: string | boolean) { }\n\n}\n\nexport class GoOn implements Action {\n\n    public readonly type: string = WizardActionTypes.GoOn;\n\n    constructor(public payload: { step: Step, index: number, nextIndex: number }) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = WizardActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type WizardActions = StepChanged | MapChanged | StepError | StepPending | GoOn | Reset;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SchedulerService.html":{"url":"injectables/SchedulerService.html","title":"injectable - SchedulerService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SchedulerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/wizard/scheduler.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                reset\n                            \n                            \n                                scheduleDemand\n                            \n                            \n                                scheduleNetwork\n                            \n                            \n                                scheduleSimulation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(wizard: WizardService, map: MapService, location: LocationService, network: NetworkService, weather: WeatherService, demand: DemandService, simulation: SimulationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/scheduler.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                    MapService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    LocationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        weather\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        demand\n                                                  \n                                                        \n                                                                    DemandService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        simulation\n                                                  \n                                                        \n                                                                    SimulationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/scheduler.service.ts:27\n                            \n                        \n\n\n                \n                    \n                            Resets the whole application.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scheduleDemand\n                            \n                            \n                        \n                    \n                \n                \n                    \nscheduleDemand(data: any, index: number, nextIndex: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/scheduler.service.ts:128\n                            \n                        \n\n\n                \n                    \n                            Performs in sequence the following operations:\n\nCalcs shortest paths\nCalcs incidence matrix\nCalcs assignment matrix\nGets and updates traffic data\nCalcs link flows\nCalcs O/D matrix\nDraws the polyline for each shortest path\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        nextIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scheduleNetwork\n                            \n                            \n                        \n                    \n                \n                \n                    \nscheduleNetwork(data: any, index: number, nextIndex: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/scheduler.service.ts:51\n                            \n                        \n\n\n                \n                    \n                            Performs in sequence the following operations:\n\nGets network\nCreates the graph\nGets network data\nAssociates data to the graph\nCorrects graph data\nGets and updates weather data\nUpdates map\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        nextIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scheduleSimulation\n                            \n                            \n                        \n                    \n                \n                \n                    \nscheduleSimulation(data: any, index: number, nextIndex: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/scheduler.service.ts:187\n                            \n                        \n\n\n                \n                    \n                            Performs in sequence the following operations:\n\nCalcs capacity for each edge.\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        nextIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { switchMap } from \"rxjs/operators\";\n\nimport { WizardService } from \"./wizard.service\";\nimport { MapService } from \"../map/map.service\";\nimport { LocationService } from \"../../location/location.service\";\nimport { NetworkService } from \"../../network/network.service\";\nimport { WeatherService } from \"../../network/weather/weather.service\";\nimport { DemandService } from \"../../demand/demand.service\";\nimport { SimulationService } from \"../../simulation/simulation.service\";\n\n@Injectable() export class SchedulerService {\n\n    constructor(\n        private wizard: WizardService,\n        private map: MapService,\n        private location: LocationService,\n        private network: NetworkService,\n        private weather: WeatherService,\n        private demand: DemandService,\n        private simulation: SimulationService\n    ) { }\n\n    /**\n     * Resets the whole application.\n     */\n    public reset(): void {\n        setTimeout(() => {\n            // Wizard.\n            this.wizard.reset();\n            // Services.\n            this.map.reset();\n            this.location.reset();\n            this.network.reset();\n            this.weather.reset();\n            this.demand.reset();\n            this.simulation.reset();\n        });\n    }\n\n    /**\n     * Performs in sequence the following operations:\n     * - Gets network\n     * - Creates the graph\n     * - Gets network data\n     * - Associates data to the graph\n     * - Corrects graph data\n     * - Gets and updates weather data\n     * - Updates map\n     */\n    scheduleNetwork(data: any, index: number, nextIndex: number): void {\n        this.wizard.putOnHold('Getting the network');\n        const stream = this.network.getNetwork().pipe(\n            switchMap((response: any) => {\n                this.wizard.putOnHold('Creating the graph');\n                return this.network.createGraph(response);\n            }),\n            switchMap(() => {\n                this.wizard.putOnHold('Getting network data');\n                return this.network.getNetworkData();\n            }),\n            switchMap((response: any) => {\n                this.wizard.putOnHold('Updating the graph');\n                return this.network.updateGraph(response);\n            }),\n            switchMap(() => {\n                this.wizard.putOnHold('Checking the data');\n                return this.network.correctGraph();\n            }),\n            switchMap(() => {\n                this.wizard.putOnHold('Getting weather data');\n                return this.weather.getWeatherData(this.network.getTime());\n            }),\n            switchMap((response: any) => {\n                return this.weather.updateWeatherData(response, this.network.getTime());\n            }),\n            switchMap(() => {\n                this.wizard.putOnHold('Updating map');\n                return this.map.updateMap();\n            })\n        );\n\n        stream.subscribe(\n            () => { },\n            (error: any) => {\n                let message: string;\n                switch (error) {\n                    case 'getNetwork':\n                        message = 'Network cannot be retrieved. Check your Internet connection and try again';\n                        break;\n                    case 'createGraph':\n                        message = 'Graph cannnot be created. Please, try with another area';\n                        break;\n                    case 'getNetworkData':\n                        message = 'Network data cannot be retrieved. Past the quota limits traffic data become paid.' +\n                            'This is an open source project: install your own version of it';\n                        break;\n                    case 'correctGraph':\n                        message = 'Graph data is not available. Please, try with another area';\n                        break;\n                    case 'getWeatherData':\n                        message = 'Weather data cannot be retrieved. Please, try at another time';\n                        break;\n                    default:\n                        message = 'Unexpected error';\n                }\n                this.wizard.putInError(message);\n                this.reset();\n            },\n            () => {\n                // Removes from waiting.\n                this.wizard.removeFromWaiting();\n                this.wizard.goOn(data, index, nextIndex);\n            }\n        );\n    }\n\n    /**\n     * Performs in sequence the following operations:\n     * - Calcs shortest paths\n     * - Calcs incidence matrix\n     * - Calcs assignment matrix\n     * - Gets and updates traffic data\n     * - Calcs link flows\n     * - Calcs O/D matrix\n     * - Draws the polyline for each shortest path\n     */\n    scheduleDemand(data: any, index: number, nextIndex: number): void {\n        const graph = this.network.getGraph();\n        const odPairs = this.network.getOdPairs();\n\n        this.wizard.putOnHold('Computing shortest paths');\n        const stream = graph.calcShortestPaths(odPairs).pipe(\n            switchMap(() => {\n                return graph.calcIncidenceMatrix();\n            }),\n            switchMap(() => {\n                return graph.calcAssignmentMatrix(odPairs);\n            }),\n            switchMap(() => {\n                this.wizard.putOnHold('Getting traffic data');\n                return this.network.getTrafficData();\n            }),\n            switchMap((response: any) => {\n                return this.network.calcLinkFlows(response);\n            }),\n            switchMap(() => {\n                this.wizard.putOnHold('Computing demand');\n                return this.demand.calcOdMatrix();\n            }),\n            switchMap(() => {\n                this.wizard.putOnHold('Drawing paths');\n                return this.map.drawPaths();\n            })\n        );\n\n        stream.subscribe(\n            () => { },\n            (error: any) => {\n                let message: string;\n                switch (error) {\n                    case 'calcShortestPaths':\n                        message = 'There are no routes. Please, try with another area';\n                        break;\n                    case 'getTrafficData':\n                        message = 'Traffic data cannot be retrieved. Past the quota limits traffic data become paid.' +\n                            'This is an open source project: install your own version of it';\n                        break;\n                    default:\n                        message = 'Unexpected error';\n                }\n                this.wizard.putInError(message);\n                this.reset();\n            },\n            () => {\n                // Removes from waiting.\n                this.wizard.removeFromWaiting();\n                this.wizard.goOn(data, index, nextIndex);\n            }\n        );\n    }\n\n    /**\n     * Performs in sequence the following operations:\n     * - Calcs capacity for each edge.\n     */\n    scheduleSimulation(data: any, index: number, nextIndex: number): void {\n        const graph = this.network.getGraph();\n        const factors = this.weather.getFactors();\n\n        this.wizard.putOnHold('Computing capacities');\n        const stream = graph.calcCapacities(factors[0]).pipe();\n\n        stream.subscribe(\n            () => { },\n            (error: any) => {\n                let message: string;\n                switch (error) {\n                    default:\n                        message = 'Unexpected error';\n                }\n                this.wizard.putInError(message);\n                this.reset();\n            },\n            () => {\n                // Removes from waiting.\n                this.wizard.removeFromWaiting();\n                this.wizard.goOn(data, index, nextIndex);\n            }\n        );\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchForTheAreaComponent.html":{"url":"components/SearchForTheAreaComponent.html","title":"component - SearchForTheAreaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SearchForTheAreaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-search-for-the-area\n            \n\n            \n                styleUrls\n                search-for-the-area.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./search-for-the-area.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentPosition\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                search\n                            \n                            \n                                sendActions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(wizard: WizardService, location: LocationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    LocationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCurrentPosition\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCurrentPosition()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            search\n                            \n                            \n                        \n                    \n                \n                \n                    \nsearch(address: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        address\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { WizardService } from '../wizard.service';\nimport { LocationService } from '../../../location/location.service';\n\nimport { BaseComponent } from '../../models/base.component';\n\n@Component({\n    selector: 'wizard-search-for-the-area',\n    templateUrl: './search-for-the-area.component.html',\n    styleUrls: ['./search-for-the-area.component.scss']\n})\nexport class SearchForTheAreaComponent extends BaseComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    constructor(\n        private wizard: WizardService,\n        private location: LocationService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.valueChanges();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        // Updates location service data on value changes.\n        this.subscriptions.push(this.formGroup.get('center').valueChanges.subscribe(\n            (center: google.maps.LatLngLiteral) => {\n                this.location.setLatLng(center);\n            }\n        ));\n    }\n\n    receiveActions(): void {\n        //\n    }\n\n    sendActions(): void {\n        //\n    }\n\n    search(address: string): void {\n        if (!!address) {\n            // Updates pending state.\n            this.wizard.putOnHold('Searching address');\n            // Converts the address into geographic coordinates.\n            this.location.codeAddress(address).forEach(\n                (results: google.maps.GeocoderResult[]) => {\n                    this.formGroup.get('center').setValue({\n                        lat: results[0].geometry.location.lat(),\n                        lng: results[0].geometry.location.lng()\n                    });\n                    // Updates step state.\n                    this.wizard.updateStep(this.formGroup.value, this.index);\n                })\n                .then()\n                .catch((error: google.maps.GeocoderStatus) => {\n                    if (error === google.maps.GeocoderStatus.ZERO_RESULTS) {\n                        // Updates error state.\n                        this.wizard.putInError('Zero results');\n                    } else {\n                        // INVALID_REQUEST, OVER_QUERY_LIMIT, REQUEST_DENIED, UNKNOWN_ERROR\n                        // Updates error state.\n                        this.wizard.putInError('Invalid request');\n                    }\n                });\n        }\n    }\n\n    getCurrentPosition(): void {\n        if (navigator.geolocation) {\n            // Updates pending state.\n            this.wizard.putOnHold('Getting position');\n            this.location.getCurrentPosition().subscribe(\n                (position: Position) => {\n                    this.formGroup.get('center').setValue({ lat: position.coords.latitude, lng: position.coords.longitude });\n                    // Updates step state.\n                    this.wizard.updateStep(this.formGroup.value, this.index);\n                },\n                (error: PositionError) => {\n                    if (error.code > 0) {\n                        let message: string;\n                        switch (error.code) {\n                            case error.PERMISSION_DENIED:\n                                message = 'Permission denied';\n                                break;\n                            case error.POSITION_UNAVAILABLE:\n                                message = 'Position unavailable';\n                                break;\n                            case error.TIMEOUT:\n                                message = 'Position timeout';\n                                break;\n                        }\n                        // Updates error state.\n                        this.wizard.putInError(message);\n                    }\n                });\n\n        } else {\n            // Updates error state.\n            this.wizard.putInError(\"Browser doesn't support geolocation\");\n        }\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n            \n                search\n            \n        \n        Get current position\n    \n\n    \n        Continue\n            navigate_next\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    search                            Get current position                Continue            navigate_next            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchForTheAreaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectionOfTheAreaComponent.html":{"url":"components/SelectionOfTheAreaComponent.html","title":"component - SelectionOfTheAreaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SelectionOfTheAreaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-selection-of-the-area\n            \n\n            \n                styleUrls\n                selection-of-the-area.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./selection-of-the-area.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, wizard: WizardService, network: NetworkService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n\n                \n                    \n                        getmin()\n                    \n                \n                            \n                                \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:28\n                                \n                            \n                    \n                        \n                                Min moment: current time.\n\n\n                                \n                                    Returns :     Date\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n\n                \n                    \n                        getmax()\n                    \n                \n                            \n                                \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:35\n                                \n                            \n                    \n                        \n                                Max moment: current day.\n\n\n                                \n                                    Returns :     Date\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { WizardService } from '../wizard.service';\nimport { NetworkService } from '../../../network/network.service';\nimport * as fromUi from '../../models/reducers';\nimport { Map } from '../../models/wizard';\nimport { uiConfig } from '../../ui-config';\n\nimport { BaseComponent } from '../../models/base.component';\n\n@Component({\n    selector: 'wizard-selection-of-the-area',\n    templateUrl: './selection-of-the-area.component.html',\n    styleUrls: ['./selection-of-the-area.component.scss']\n})\nexport class SelectionOfTheAreaComponent extends BaseComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    /**\n     * Min moment: current time.\n     */\n    get min(): Date {\n        return new Date();\n    }\n\n    /**\n     * Max moment: current day.\n     */\n    get max(): Date {\n        return new Date(\n            this.min.getFullYear(),\n            this.min.getMonth(),\n            this.min.getDate(),\n            this.min.getHours() + uiConfig.timeLimit,\n            this.min.getMinutes()\n        );\n    }\n\n    constructor(\n        private store: Store,\n        private wizard: WizardService,\n        private network: NetworkService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.valueChanges();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        // Updates network service data on value changes.\n        this.subscriptions.push(this.formGroup.get('bounds').valueChanges.subscribe(\n            (bounds: google.maps.LatLngBoundsLiteral) => {\n                this.network.setBounds(bounds);\n            }\n        ));\n        this.subscriptions.push(this.formGroup.get('time').valueChanges.subscribe(\n            (time: Date) => {\n                this.network.setTime(time);\n            }\n        ));\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.map)).subscribe((map: Map) => {\n            if (map && map.data.bounds) {\n                this.formGroup.get('bounds').setValue(map.data.bounds);\n            }\n        }));\n    }\n\n    sendActions(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n            \n                calendar_today\n            \n            Optional. Leave it empty for the current time\n            \n                \n                \n                    Please, enter a time between the current time and the next 24 hours\n                \n                \n                    Please, insert a valid time or select it\n                \n            \n        \n        \n    \n\n    \n        Continue\n            navigate_next\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    calendar_today                        Optional. Leave it empty for the current time                                                                Please, enter a time between the current time and the next 24 hours                                                    Please, insert a valid time or select it                                                            Continue            navigate_next            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SelectionOfTheAreaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n  Modules\n  SharedModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nFooterComponent\n\nFooterComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nFooterComponent->SharedModule\n\n\n\n\n\nInfoDialogComponent\n\nInfoDialogComponent\n\nSharedModule -->\n\nInfoDialogComponent->SharedModule\n\n\n\n\n\nMessageArchivedComponent\n\nMessageArchivedComponent\n\nSharedModule -->\n\nMessageArchivedComponent->SharedModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nSharedModule->FooterComponent \n\n\n\n\n\nInfoDialogComponent \n\nInfoDialogComponent \n\nInfoDialogComponent  -->\n\nSharedModule->InfoDialogComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nMessageArchivedComponent \n\nMessageArchivedComponent \n\nMessageArchivedComponent  -->\n\nSharedModule->MessageArchivedComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                FooterComponent\n                            \n                            \n                                InfoDialogComponent\n                            \n                            \n                                MessageArchivedComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                InfoDialogComponent\n                            \n                            \n                                MessageArchivedComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    MaterialModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    FooterComponent\n                            \n                            \n                                    InfoDialogComponent\n                            \n                            \n                                    MaterialModule\n                            \n                            \n                                    MessageArchivedComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { MaterialModule } from './material.module';\n\nimport { FooterComponent } from './footer/footer.component';\nimport { MessageArchivedComponent } from './message-archived.component';\nimport { InfoDialogComponent } from './info-dialog.component';\n\nimport { CanDeactivateGuard } from './can-deactivate-guard.service';\n\nconst sharedModules: any[] = [\n    CommonModule,\n    RouterModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    FlexLayoutModule\n];\n\n@NgModule({\n    entryComponents: [\n        MessageArchivedComponent,\n        InfoDialogComponent\n    ],\n    declarations: [\n        FooterComponent,\n        MessageArchivedComponent,\n        InfoDialogComponent\n    ],\n    imports: sharedModules,\n    exports: [\n        sharedModules,\n        FooterComponent,\n        MessageArchivedComponent,\n        InfoDialogComponent\n    ]\n})\nexport class SharedModule {\n    public static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: SharedModule,\n            providers: [\n                CanDeactivateGuard\n            ]\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SimulationComponent.html":{"url":"components/SimulationComponent.html","title":"component - SimulationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SimulationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/simulation/simulation.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-simulation\n            \n\n            \n                styleUrls\n                simulation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./simulation.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, wizard: WizardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/simulation/simulation.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { WizardService } from '../wizard.service';\nimport * as fromUi from '../../models/reducers';\n\n@Component({\n    selector: 'wizard-simulation',\n    templateUrl: './simulation.component.html',\n    styleUrls: ['./simulation.component.scss']\n})\nexport class SimulationComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private store: Store,\n        private wizard: WizardService\n    ) { }\n\n    ngOnInit(): void {\n        this.valueChanges();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        //\n    }\n\n    receiveActions(): void {\n        //\n    }\n\n    sendActions(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        WIP\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'WIP'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SimulationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SimulationModule.html":{"url":"modules/SimulationModule.html","title":"module - SimulationModule","body":"\n                   \n\n\n\n\n  Modules\n  SimulationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SimulationModule\n\n\n\ncluster_SimulationModule_providers\n\n\n\n\nSimulationService\n\nSimulationService\n\n\n\nSimulationModule\n\nSimulationModule\n\nSimulationModule -->\n\nSimulationService->SimulationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/simulation/simulation.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     SimulationService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { SimulationService } from './simulation.service';\n\n@NgModule({\n    imports: [],\n    declarations: [],\n    providers: [SimulationService]\n})\nexport class SimulationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SimulationService.html":{"url":"injectables/SimulationService.html","title":"injectable - SimulationService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SimulationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/simulation.service.ts\n        \n\n            \n                Description\n            \n            \n                Applies the traffic flow propagation algorithm.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/simulation.service.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Applies the traffic flow propagation algorithm.\n */\n@Injectable() export class SimulationService {\n\n    public reset(): void {\n        //\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatisticsComponent.html":{"url":"components/StatisticsComponent.html","title":"component - StatisticsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StatisticsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/statistics/statistics.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-statistics\n            \n\n            \n                styleUrls\n                statistics.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./statistics.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/statistics/statistics.component.ts:13\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'wizard-statistics',\n    templateUrl: './statistics.component.html',\n    styleUrls: ['./statistics.component.scss']\n})\nexport class StatisticsComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    constructor() { }\n\n    ngOnInit(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        WIP\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'WIP'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatisticsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Step.html":{"url":"interfaces/Step.html","title":"interface - Step","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Step\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/wizard.ts\n        \n\n            \n                Description\n            \n            \n                Step model.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Form model data.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Step {\n\n    /**\n     * Form model data.\n     */\n    data: any;\n\n}\n\n/**\n * Map model.\n */\nexport interface Map {\n\n    /**\n     * Map data.\n     */\n    data: any;\n\n}\n\n/**\n * Initial steps.\n */\nexport const STEPS: Step[] = [];\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StepChanged.html":{"url":"classes/StepChanged.html","title":"class - StepChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  StepChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/actions/wizard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/models/actions/wizard.actions.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : WizardActionTypes.StepChanged\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Step, Map } from '../wizard';\n\n/**\n * ngrx: wizard Actions.\n */\nexport enum WizardActionTypes {\n\n    StepChanged = '[Wizard] Step Changed',\n    MapChanged = '[Wizard] Map Changed',\n    StepError = '[Wizard] Step Error',\n    StepPending = '[Wizard] Step Pending',\n    GoOn = '[Wizard] Go On',\n    Reset = '[Wizard] Reset'\n\n}\n\nexport class StepChanged implements Action {\n\n    public readonly type: string = WizardActionTypes.StepChanged;\n\n    constructor(public payload: { step: Step, index: number }) { }\n\n}\n\nexport class MapChanged implements Action {\n\n    public readonly type: string = WizardActionTypes.MapChanged;\n\n    constructor(public payload: { map: Map }) { }\n\n}\n\nexport class StepError implements Action {\n\n    public readonly type: string = WizardActionTypes.StepError;\n\n    constructor(public payload: string) { }\n\n}\n\nexport class StepPending implements Action {\n\n    public readonly type: string = WizardActionTypes.StepPending;\n\n    constructor(public payload: string | boolean) { }\n\n}\n\nexport class GoOn implements Action {\n\n    public readonly type: string = WizardActionTypes.GoOn;\n\n    constructor(public payload: { step: Step, index: number, nextIndex: number }) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = WizardActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type WizardActions = StepChanged | MapChanged | StepError | StepPending | GoOn | Reset;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StepError.html":{"url":"classes/StepError.html","title":"class - StepError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  StepError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/actions/wizard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/models/actions/wizard.actions.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : WizardActionTypes.StepError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Step, Map } from '../wizard';\n\n/**\n * ngrx: wizard Actions.\n */\nexport enum WizardActionTypes {\n\n    StepChanged = '[Wizard] Step Changed',\n    MapChanged = '[Wizard] Map Changed',\n    StepError = '[Wizard] Step Error',\n    StepPending = '[Wizard] Step Pending',\n    GoOn = '[Wizard] Go On',\n    Reset = '[Wizard] Reset'\n\n}\n\nexport class StepChanged implements Action {\n\n    public readonly type: string = WizardActionTypes.StepChanged;\n\n    constructor(public payload: { step: Step, index: number }) { }\n\n}\n\nexport class MapChanged implements Action {\n\n    public readonly type: string = WizardActionTypes.MapChanged;\n\n    constructor(public payload: { map: Map }) { }\n\n}\n\nexport class StepError implements Action {\n\n    public readonly type: string = WizardActionTypes.StepError;\n\n    constructor(public payload: string) { }\n\n}\n\nexport class StepPending implements Action {\n\n    public readonly type: string = WizardActionTypes.StepPending;\n\n    constructor(public payload: string | boolean) { }\n\n}\n\nexport class GoOn implements Action {\n\n    public readonly type: string = WizardActionTypes.GoOn;\n\n    constructor(public payload: { step: Step, index: number, nextIndex: number }) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = WizardActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type WizardActions = StepChanged | MapChanged | StepError | StepPending | GoOn | Reset;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StepPending.html":{"url":"classes/StepPending.html","title":"class - StepPending","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  StepPending\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/actions/wizard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string | boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/models/actions/wizard.actions.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string | boolean\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     string | boolean\n\n                    \n                \n                    \n                        \n                            Type :     string | boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : WizardActionTypes.StepPending\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:45\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Step, Map } from '../wizard';\n\n/**\n * ngrx: wizard Actions.\n */\nexport enum WizardActionTypes {\n\n    StepChanged = '[Wizard] Step Changed',\n    MapChanged = '[Wizard] Map Changed',\n    StepError = '[Wizard] Step Error',\n    StepPending = '[Wizard] Step Pending',\n    GoOn = '[Wizard] Go On',\n    Reset = '[Wizard] Reset'\n\n}\n\nexport class StepChanged implements Action {\n\n    public readonly type: string = WizardActionTypes.StepChanged;\n\n    constructor(public payload: { step: Step, index: number }) { }\n\n}\n\nexport class MapChanged implements Action {\n\n    public readonly type: string = WizardActionTypes.MapChanged;\n\n    constructor(public payload: { map: Map }) { }\n\n}\n\nexport class StepError implements Action {\n\n    public readonly type: string = WizardActionTypes.StepError;\n\n    constructor(public payload: string) { }\n\n}\n\nexport class StepPending implements Action {\n\n    public readonly type: string = WizardActionTypes.StepPending;\n\n    constructor(public payload: string | boolean) { }\n\n}\n\nexport class GoOn implements Action {\n\n    public readonly type: string = WizardActionTypes.GoOn;\n\n    constructor(public payload: { step: Step, index: number, nextIndex: number }) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = WizardActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type WizardActions = StepChanged | MapChanged | StepError | StepPending | GoOn | Reset;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tag.html":{"url":"interfaces/Tag.html","title":"interface - Tag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Tag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                Tag describes the meaning of the particular element to which it is attached.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        key\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\n\nimport * as combine from 'mout/array/combine';\nimport * as math from 'mathjs';\n\nimport { Heap, Path } from './k-shortest-path';\nimport { uiConfig } from '../ui/ui-config';\n\nexport enum PathType {\n    distance = 'distance',\n    duration = 'duration'\n}\n\n/**\n * An O/D pair is described by the origin and destination nodes, the type of path and the domand.\n */\nexport interface OdPair {\n\n    origin: number;\n    destination: number;\n    pathType: PathType;\n    demand?: number;\n\n}\n\nexport interface OdPairShowing extends OdPair {\n\n    showPaths: boolean;\n\n}\n\nexport interface LinkFlow {\n\n    /**\n     * linkFlow attribute.\n     */\n    value: number;\n    /**\n     * Variance is the inverse of density.\n     */\n    variance: number;\n\n}\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public label: number;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    public drawingOptions: { marker?: google.maps.Marker } = {};\n\n    /**\n     * Used by the k shortest path routing.\n     */\n    public count = 0;\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    /**\n     * Free flow velocity (m/s).\n     */\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    public linkFlow: number;\n\n    /**\n     * Maximum capacity of the edge.\n     */\n    public capacity: number;\n\n    /**\n     * Simulation queue.\n     */\n    public queue = 0;\n\n    public drawingOptions: {\n        path?: google.maps.LatLng[],\n        polyline?: google.maps.Polyline\n    } = {};\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the link flow.\n     */\n    public calcLinkFlow(): void {\n        if (this.durationInTraffic > 0 && this.duration > 0 && this.durationInTraffic >= this.duration) {\n            // Calculates free flow velocity (m/s).\n            this.velocity = math.round(this.distance / this.duration, 2) as number;\n            // Calculates velocity (m/s).\n            const velocity = math.round(this.distance / this.durationInTraffic, 2) as number;\n            // Calculates kjam.\n            const kjam = 1 / uiConfig.sp;\n            // Calculates density.\n            this.density = math.round(kjam * (this.velocity - velocity) / this.velocity, 2) as number;\n            // Calculates flow.\n            this.flow = math.round(this.density * velocity, 2) as number;\n            // Calculates link flow.\n            this.linkFlow = math.round(this.density * this.distance) as number;\n        } else {\n            this.density = 0;\n            this.linkFlow = 0;\n        }\n    }\n\n    /**\n     * Calculates the max capacity of the edge.\n     * @param factor Weather Adjustment Factor\n     */\n    public calcCapacity(factor: number): void {\n        let capacity = math.round(this.distance / uiConfig.sp) as number;\n        capacity = capacity * factor;\n        this.capacity = capacity >= 1 ? capacity : 1;\n    }\n\n    /**\n     * Gets the variance of measurement error of link flow.\n     */\n    public getVariance(): number {\n        return this.density > 0 ? math.round(1 / this.density, 2) as number : 1;\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    private nodes: Node[] = [];\n\n    private edges: Edge[] = [];\n\n    private relations: Relation[] = [];\n\n    /**\n     * Paths for each O/D pair [pairs,paths,edges].\n     */\n    private shortestPaths: Edge[][][] = [];\n\n    private shortestPathsEdges: Edge[] = [];\n\n    private incidenceMatrix: boolean[][][] = [];\n\n    private assignmentMatrix: number[][][] = [];\n\n    private heap: Heap;\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.lat = node.lat;\n            existingNode.lon = node.lon;\n            existingNode.tags = combine(existingNode.tags, node.tags);\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public getEdge(edgeId: number): Edge {\n        return this.edges.find((edge: Edge) => edge.edgeId == edgeId);\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Key:oneway\n     * @param edgeId Id of the edge\n     */\n    public isOneway(edgeId: number): boolean {\n        return !!this.getEdge(edgeId).tags.find(tag => tag.key == 'oneway' && tag.value != 'no') ||\n            this.isRoundabout(edgeId);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Tag:junction%3Droundabout\n     * @param edgeId Id of the edge\n     */\n    public isRoundabout(edgeId: number): boolean {\n        return this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'roundabout') ||\n            this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'circular') ?\n            true : false;\n    }\n\n    public getOdNode(label: number): Node {\n        return this.nodes.find((node: Node) => node.label == label);\n    }\n\n    public getOdNodes(): Node[] {\n        return this.nodes.filter((node: Node) => node.label);\n    }\n\n    /**\n     * Calculates the set of minimum paths.\n     * @param odPairs The O/D pairs\n     */\n    public calcShortestPaths(odPairs: OdPair[]): Observable {\n        try {\n            for (let i = 0; i  0) {\n                    count++;\n                    break;\n                }\n            }\n            if (count == 0) { return throwError('calcShortestPaths'); }\n        } catch (error) {\n            return throwError('calcShortestPaths');\n        }\n        return of(null);\n    }\n\n    public getShortestPaths(): Edge[][][] {\n        return this.shortestPaths;\n    }\n\n    /**\n     * Calculates the incidence matrix of paths for O/D pairs.\n     */\n    public calcIncidenceMatrix(): Observable {\n        // Gets the edges in the paths.\n        this.shortestPathsEdges = this.getEdgesfromShortestPaths();\n\n        // Builds the matrix.\n        for (let z = 0; z  value.edgeId == this.shortestPathsEdges[m].edgeId)) {\n                        // The path crosses the edge.\n                        this.incidenceMatrix[z][n][m] = true;\n                    } else {\n                        // The path does not cross the edge.\n                        this.incidenceMatrix[z][n][m] = false;\n                    }\n                }\n            }\n        }\n        return of(null);\n    }\n\n    public getIncidenceMatrix(): boolean[][][] {\n        return this.incidenceMatrix;\n    }\n\n    /**\n     * Calculates the assignment matrix.\n     * @param odPairs The O/D pairs\n     */\n    public calcAssignmentMatrix(odPairs: OdPair[]): Observable {\n        // Calculates the probabilities of shortest paths.\n        const shortestPathsProbabilities = this.calcShortestPathsProbabilities(odPairs);\n\n        // Assignment matrix.\n        for (let z = 0; z  {\n        for (const edge of this.edges) {\n            edge.calcCapacity(factor);\n        }\n        return of(null);\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link distance or duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param origin Source node\n     * @param destination Destination node\n     * @param pathType Distance or duration\n     * @param k The number of shortest paths to compute\n     * @param i Index of O/D pair\n     */\n    private ksp(origin: number, destination: number, pathType: String, k: number, i: number): void {\n        const o = this.getOdNode(origin);\n        const d = this.getOdNode(destination);\n        // Sets to zero the count property of the nodes.\n        this.resetCount();\n        // Instantiates the heap.\n        this.heap = new Heap();\n        // Inserts the path of origin into heap with cost 0.\n        this.heap.push({ pathId: 0, node: o, edges: [], cost: 0 });\n        // Walks the graph.\n        const shortestPaths = this.walk(o, d, pathType, k);\n        // Extracts the paths.\n        this.shortestPaths[i] = [];\n        for (let n = 0; n  0 && d.count  edge.origin.nodeId == node.nodeId) ? false : true;\n    }\n\n    private resetCount(): void {\n        for (const node of this.nodes) {\n            node.count = 0;\n        }\n    }\n\n    /**\n     * Returns the edges without repetitions in the shortest paths.\n     */\n    private getEdgesfromShortestPaths(): Edge[] {\n        const edges: Edge[] = [];\n        for (const pair of this.shortestPaths) {\n            for (const path of pair) {\n                for (const edge of path) {\n                    if (!edges.find(value => value.edgeId == edge.edgeId)) {\n                        edges.push(edge);\n                    }\n                }\n            }\n        }\n        return edges;\n    }\n\n    /**\n     * Multinomial logit model.\n     * @param odPairs The O/D pairs\n     */\n    private calcShortestPathsProbabilities(odPairs: OdPair[]): number[][] {\n        // Gets the the total cost of paths.\n        const pathCosts = this.calcPathCosts(odPairs);\n        const shortestPathsProbabilities: number[][] = [];\n        // Theta parameter.\n        const parameter = uiConfig.theta * 100;\n        // Calculates numerator.\n        const exps: number[][] = [];\n        for (let z = 0; z  {\n                return value > 0 ? math.exp(-value / parameter) : 0;\n            });\n        }\n        // Calculates denominator.\n        const sumExps: number[] = [];\n        for (let z = 0; z  a + b, 0);\n            sumExps.push(sum);\n        }\n        // Probabilities.\n        for (let z = 0; z  0 ? math.round(exps[z][n] / sumExps[z], 3) as number : 0;\n                shortestPathsProbabilities[z].push(p);\n            }\n        }\n        return shortestPathsProbabilities;\n    }\n\n    private calcPathCosts(odPairs: OdPair[]): number[][] {\n        const pathCosts: number[][] = [];\n        for (let z = 0; z \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UiComponent.html":{"url":"components/UiComponent.html","title":"component - UiComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UiComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/ui.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                CanComponentDeactivate\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ui\n            \n\n            \n                styleUrls\n                ui.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ui.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pending\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canDeactivate\n                            \n                            \n                                exit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDialog\n                            \n                            \n                                openSnackBar\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, snackBar: MatSnackBar, dialog: MatDialog, store: Store, scheduler: SchedulerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/ui.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        scheduler\n                                                  \n                                                        \n                                                                    SchedulerService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canDeactivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanDeactivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable | boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            exit\n                            \n                            \n                        \n                    \n                \n                \n                    \nexit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:74\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenDialog(data: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:86\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openSnackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenSnackBar(message: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pending\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pending:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy, ViewEncapsulation } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatSnackBar, MatDialog } from '@angular/material';\nimport { Subscription, Observable, of } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { CanComponentDeactivate } from '../shared/can-deactivate-guard.service';\nimport { SchedulerService } from './wizard/scheduler.service';\nimport * as fromUi from './models/reducers';\n\nimport { MessageArchivedComponent } from '../shared/message-archived.component';\nimport { InfoDialogComponent } from '../shared/info-dialog.component';\n\n@Component({\n    selector: 'app-ui',\n    templateUrl: './ui.component.html',\n    styleUrls: ['./ui.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class UiComponent implements OnInit, OnDestroy, CanComponentDeactivate {\n\n    pending = false;\n\n    subscriptions: Subscription[] = [];\n\n    constructor(\n        private router: Router,\n        private snackBar: MatSnackBar,\n        private dialog: MatDialog,\n        private store: Store,\n        private scheduler: SchedulerService\n    ) { }\n\n    ngOnInit(): void {\n        // Pending state.\n        this.subscriptions.push(this.store.pipe(select(fromUi.pending)).subscribe((pending: boolean) => {\n            this.pending = pending;\n        }));\n        // Error state.\n        this.subscriptions.push(this.store.pipe(select(fromUi.error)).subscribe((error: string) => {\n            if (error) {\n                this.openSnackBar(error);\n            }\n        }));\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach((subscription: Subscription) => {\n            if (subscription) { subscription.unsubscribe(); }\n        });\n    }\n\n    canDeactivate(): Observable | boolean {\n        return this.openDialog('Are you sure you want to exit the simulation?').pipe(\n            tap((dialogResult: boolean) => {\n                if (dialogResult) {\n                    this.scheduler.reset();\n                }\n            })\n        );\n    }\n\n    reset(): void {\n        this.openDialog('Are you sure you want to reset the simulation?').subscribe(\n            (dialogResult: boolean) => {\n                if (dialogResult) {\n                    this.scheduler.reset();\n                }\n            });\n    }\n\n    exit(): void {\n        this.router.navigate(['/home']);\n    }\n\n    openSnackBar(message: string): void {\n        this.snackBar.openFromComponent(MessageArchivedComponent, {\n            data: message,\n            duration: 5000,\n            panelClass: ['error-snackbar']\n        });\n    }\n\n    openDialog(data: string): Observable {\n        const dialogRef = this.dialog.open(InfoDialogComponent, {\n            width: '250px',\n            data: data,\n            hasBackdrop: true,\n            panelClass: 'info-dialog'\n        });\n\n        return dialogRef.afterClosed();\n    }\n\n}\n\n    \n\n    \n        \n    \n    \n    \n        {{ pending }}\n    \n\n\n\n    \n        \n            \n        \n        \n            \n                \n                    \n                        \n                            Network\n                        \n                    \n                    \n                \n            \n        \n    \n    \n        \n        \n            Reset\n            Exit\n        \n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ pending }}                                                                                                                                                Network                                                                                                                                        Reset            Exit            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UiComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiModule.html":{"url":"modules/UiModule.html","title":"module - UiModule","body":"\n                   \n\n\n\n\n  Modules\n  UiModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UiModule\n\n\n\ncluster_UiModule_declarations\n\n\n\ncluster_UiModule_imports\n\n\n\ncluster_UiModule_providers\n\n\n\n\nChangeOfConditionsComponent\n\nChangeOfConditionsComponent\n\n\n\nUiModule\n\nUiModule\n\nUiModule -->\n\nChangeOfConditionsComponent->UiModule\n\n\n\n\n\nEstimateOfDemandComponent\n\nEstimateOfDemandComponent\n\nUiModule -->\n\nEstimateOfDemandComponent->UiModule\n\n\n\n\n\nGoogleMapComponent\n\nGoogleMapComponent\n\nUiModule -->\n\nGoogleMapComponent->UiModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nUiModule -->\n\nMapComponent->UiModule\n\n\n\n\n\nSearchForTheAreaComponent\n\nSearchForTheAreaComponent\n\nUiModule -->\n\nSearchForTheAreaComponent->UiModule\n\n\n\n\n\nSelectionOfTheAreaComponent\n\nSelectionOfTheAreaComponent\n\nUiModule -->\n\nSelectionOfTheAreaComponent->UiModule\n\n\n\n\n\nSimulationComponent\n\nSimulationComponent\n\nUiModule -->\n\nSimulationComponent->UiModule\n\n\n\n\n\nStatisticsComponent\n\nStatisticsComponent\n\nUiModule -->\n\nStatisticsComponent->UiModule\n\n\n\n\n\nUiComponent\n\nUiComponent\n\nUiModule -->\n\nUiComponent->UiModule\n\n\n\n\n\nWeatherComponent\n\nWeatherComponent\n\nUiModule -->\n\nWeatherComponent->UiModule\n\n\n\n\n\nWizardComponent\n\nWizardComponent\n\nUiModule -->\n\nWizardComponent->UiModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nUiModule -->\n\nSharedModule->UiModule\n\n\n\n\n\nUiRoutingModule\n\nUiRoutingModule\n\nUiModule -->\n\nUiRoutingModule->UiModule\n\n\n\n\n\nMapService\n\nMapService\n\nUiModule -->\n\nMapService->UiModule\n\n\n\n\n\nSchedulerService\n\nSchedulerService\n\nUiModule -->\n\nSchedulerService->UiModule\n\n\n\n\n\nWizardService\n\nWizardService\n\nUiModule -->\n\nWizardService->UiModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/ui/ui.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ChangeOfConditionsComponent\n                            \n                            \n                                EstimateOfDemandComponent\n                            \n                            \n                                GoogleMapComponent\n                            \n                            \n                                MapComponent\n                            \n                            \n                                SearchForTheAreaComponent\n                            \n                            \n                                SelectionOfTheAreaComponent\n                            \n                            \n                                SimulationComponent\n                            \n                            \n                                StatisticsComponent\n                            \n                            \n                                UiComponent\n                            \n                            \n                                WeatherComponent\n                            \n                            \n                                WizardComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     MapService\n                            \n                            \n                                     SchedulerService\n                            \n                            \n                                     WizardService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                            \n                                    UiRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { UiRoutingModule } from './ui-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { StoreModule } from \"@ngrx/store\";\nimport { EffectsModule } from \"@ngrx/effects\";\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\n\nimport { UiComponent } from './ui.component';\nimport { WizardComponent } from './wizard/wizard.component';\nimport { SearchForTheAreaComponent } from './wizard/search-for-the-area/search-for-the-area.component';\nimport { SelectionOfTheAreaComponent } from './wizard/selection-of-the-area/selection-of-the-area.component';\nimport { EstimateOfDemandComponent } from './wizard/estimate-of-demand/estimate-of-demand.component';\nimport { ChangeOfConditionsComponent } from './wizard/change-of-conditions/change-of-conditions.component';\nimport { SimulationComponent } from './wizard/simulation/simulation.component';\nimport { StatisticsComponent } from './wizard/statistics/statistics.component';\nimport { MapComponent } from './map/map.component';\nimport { GoogleMapComponent } from './map/google-map.component';\nimport { WeatherComponent } from './weather/weather.component';\n\nimport { WizardService } from './wizard/wizard.service';\nimport { SchedulerService } from './wizard/scheduler.service';\nimport { MapService } from './map/map.service';\nimport { reducers } from './models/reducers';\n\n@NgModule({\n    imports: [\n        UiRoutingModule,\n        SharedModule,\n        StoreModule.forFeature('ui', reducers),\n        EffectsModule.forFeature([]),\n        OwlDateTimeModule,\n        OwlNativeDateTimeModule\n    ],\n    declarations: [\n        UiComponent,\n        WizardComponent,\n        SearchForTheAreaComponent,\n        SelectionOfTheAreaComponent,\n        EstimateOfDemandComponent,\n        ChangeOfConditionsComponent,\n        SimulationComponent,\n        StatisticsComponent,\n        MapComponent,\n        GoogleMapComponent,\n        WeatherComponent\n    ],\n    providers: [\n        WizardService,\n        SchedulerService,\n        MapService\n    ]\n})\nexport class UiModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiRoutingModule.html":{"url":"modules/UiRoutingModule.html","title":"module - UiRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  UiRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/ui/ui-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CanDeactivateGuard } from '../shared/can-deactivate-guard.service';\n\nimport { UiComponent } from './ui.component';\n\nconst routes: Routes = [\n    { path: '', component: UiComponent, pathMatch: 'full', canDeactivate: [CanDeactivateGuard] },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class UiRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UiState.html":{"url":"interfaces/UiState.html","title":"interface - UiState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UiState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/reducers.ts\n        \n\n            \n                Description\n            \n            \n                User interface state management.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        wizard\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        wizard\n                                    \n                                \n                                \n                                    \n                                        wizard:     fromWizard.WizardState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromWizard.WizardState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, createFeatureSelector, createSelector, MemoizedSelector } from \"@ngrx/store\";\n\nimport * as fromWizard from './reducers/wizard.reducer';\nimport { Step, Map } from \"./wizard\";\n\n/**\n * User interface state management.\n */\nexport interface UiState {\n\n    wizard: fromWizard.WizardState;\n\n}\n\nexport const reducers: ActionReducerMap = {\n    wizard: fromWizard.wizardReducer\n};\n\nexport const featureUiState: MemoizedSelector = createFeatureSelector('ui');\n\n/**\n * Exports the wizard state.\n */\nexport const wizardState: MemoizedSelector = createSelector(\n    featureUiState,\n    (state: UiState) => state.wizard\n);\n\n/**\n * Exports the steps state.\n */\nexport const steps: MemoizedSelector = createSelector(\n    wizardState,\n    fromWizard.getSteps\n);\n\n/**\n * Exports the map state.\n */\nexport const map: MemoizedSelector = createSelector(\n    wizardState,\n    fromWizard.getMap\n);\n\n/**\n * Exports the current step state.\n */\nexport const currentStep: MemoizedSelector = createSelector(\n    wizardState,\n    fromWizard.getCurrentStep\n);\n\n/**\n * Exports the error state.\n */\nexport const error: MemoizedSelector = createSelector(\n    wizardState,\n    fromWizard.getError\n);\n\n/**\n * Exports the pending state.\n */\nexport const pending: MemoizedSelector = createSelector(\n    wizardState,\n    fromWizard.getPending\n);\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherComponent.html":{"url":"components/WeatherComponent.html","title":"component - WeatherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/weather/weather.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ui-weather\n            \n\n            \n                styleUrls\n                weather.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                icon\n                            \n                            \n                                iconContainer\n                            \n                            \n                                time\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getIcon\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                resetConditions\n                            \n                            \n                                sendActions\n                            \n                            \n                                setConditions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, renderer: Renderer2, store: Store, wizard: WizardService, weather: WeatherService, network: NetworkService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/weather/weather.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        weather\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIcon(code: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:93\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        code\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     HTMLImageElement\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetConditions\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetConditions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:84\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setConditions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetConditions(weather: WeatherConditions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        weather\n                                                        \n                                                                    WeatherConditions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        description:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '-'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icon:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iconContainer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iconContainer:     HTMLElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            time\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        time:     any | string\n\n                    \n                \n                    \n                        \n                            Type :     any | string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, ElementRef, Renderer2 } from '@angular/core';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { WizardService } from '../wizard/wizard.service';\nimport { WeatherService } from '../../network/weather/weather.service';\nimport { NetworkService } from '../../network/network.service';\nimport * as fromUi from '../models/reducers';\nimport { Step } from '../models/wizard';\nimport { WeatherConditions } from '../../network/weather/weather';\nimport { appConfig } from '../../app-config';\n\nimport { BaseComponent } from '../models/base.component';\n\n@Component({\n    selector: 'ui-weather',\n    templateUrl: './weather.component.html',\n    styleUrls: ['./weather.component.scss']\n})\nexport class WeatherComponent extends BaseComponent implements OnInit, AfterViewInit {\n\n    description = '-';\n\n    iconContainer: HTMLElement;\n\n    icon: any;\n\n    time: any | string = '';\n\n    constructor(\n        private elementRef: ElementRef,\n        private renderer: Renderer2,\n        private store: Store,\n        private wizard: WizardService,\n        private weather: WeatherService,\n        private network: NetworkService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    ngAfterViewInit(): void {\n        this.iconContainer = this.elementRef.nativeElement.querySelector('#iconContainer');\n    }\n\n    valueChanges(): void {\n        //\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.currentStep)).subscribe((currentStep: number) => {\n            const weatherConditions = this.weather.getWeatherConditions();\n            switch (currentStep) {\n                case 0:\n                    this.resetConditions();\n                    break;\n                case 3:\n                    this.resetConditions();\n                    this.setConditions(weatherConditions);\n                    break;\n                case 4:\n                    this.resetConditions();\n                    this.setConditions(weatherConditions);\n                    break;\n            }\n        }));\n    }\n\n    sendActions(): void {\n        //\n    }\n\n    setConditions(weather: WeatherConditions): void {\n        this.description = weather.description;\n        this.icon = this.getIcon(weather.icon);\n        this.renderer.appendChild(this.iconContainer, this.icon);\n        this.time = this.network.getTimeString();\n    }\n\n    resetConditions(): void {\n        this.description = '-';\n        if (this.icon) {\n            this.renderer.removeChild(this.iconContainer, this.icon);\n            this.icon = null;\n            this.time = '';\n        }\n    }\n\n    getIcon(code: string): HTMLImageElement {\n        const icon = new Image();\n        if (!!code) {\n            icon.src = appConfig.apis.openWeatherMap.iconUrl + '/' + code + '.png';\n        }\n        return icon;\n    }\n\n}\n\n    \n\n    \n        \n    \n        Weather {{ description | uppercase }}\n        \n        {{ time }}\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Weather {{ description | uppercase }}                {{ time }}    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WeatherConditions.html":{"url":"interfaces/WeatherConditions.html","title":"interface - WeatherConditions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WeatherConditions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/weather/weather.ts\n        \n\n            \n                Description\n            \n            \n                Weather conditions data.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                            Optional\n                                        rainIntensity\n                                \n                                \n                                            Optional\n                                        snowIntensity\n                                \n                                \n                                            Optional\n                                        visibility\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The code of the icon.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rainIntensity\n                                    \n                                \n                                \n                                    \n                                        rainIntensity:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Millimeters.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        snowIntensity\n                                    \n                                \n                                \n                                    \n                                        snowIntensity:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Millimeters.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visibility\n                                    \n                                \n                                \n                                    \n                                        visibility:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Meters.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface WeatherConditions {\n\n    description: string;\n    /**\n     * The code of the icon.\n     */\n    icon?: string;\n    /**\n     * Meters.\n     */\n    visibility?: number;\n    /**\n     * Millimeters.\n     */\n    rainIntensity?: number;\n    /**\n     * Millimeters.\n     */\n    snowIntensity?: number;\n\n}\n\nexport enum WeatherDescription {\n    clearSky = 'clear sky',\n    fewClouds = 'few clouds',\n    scatteredClouds = 'scattered clouds',\n    brokenClouds = 'broken clouds',\n    showerRain = 'shower rain',\n    rain = 'rain',\n    thunderstorm = 'thunderstorm',\n    snow = 'snow',\n    mist = 'mist',\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WeatherModule.html":{"url":"modules/WeatherModule.html","title":"module - WeatherModule","body":"\n                   \n\n\n\n\n  Modules\n  WeatherModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_providers\n\n\n\n\nWeatherService\n\nWeatherService\n\n\n\nWeatherModule\n\nWeatherModule\n\nWeatherModule -->\n\nWeatherService->WeatherModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/network/weather/weather.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     WeatherService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { WeatherService } from './weather.service';\n\n@NgModule({\n    imports: [],\n    declarations: [],\n    providers: [WeatherService]\n})\nexport class WeatherModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherService.html":{"url":"injectables/WeatherService.html","title":"injectable - WeatherService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  WeatherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/weather/weather.service.ts\n        \n\n            \n                Description\n            \n            \n                Gets the weather data from the Weather or Forecast resources\nand provides reduction factors for graph values based on weather conditions.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                weatherConditions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addWeatherConditions\n                            \n                            \n                                    Public\n                                changeWeather\n                            \n                            \n                                    Public\n                                getFactors\n                            \n                            \n                                    Public\n                                getWeatherConditions\n                            \n                            \n                                    Public\n                                getWeatherData\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Private\n                                toInches\n                            \n                            \n                                    Public\n                                updateWeatherData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, location: LocationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/weather/weather.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    LocationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            addWeatherConditions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addWeatherConditions(data: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:111\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            changeWeather\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        changeWeather(weather: WeatherConditions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:82\n                            \n                        \n\n\n                \n                    \n                            Changes the current weather conditions.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weather\n                                                        \n                                                                    WeatherConditions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The weather conditions\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFactors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFactors()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:96\n                            \n                        \n\n\n                \n                    \n                            Calculates Weather Adjustment Factors.\n\n\n                            \n                            \n                            \n                                Returns :     number[]\n\n                            \n                                \n                                    The factor for sp parameter\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getWeatherConditions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getWeatherConditions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     WeatherConditions\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getWeatherData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getWeatherData(time?: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:35\n                            \n                        \n\n\n                \n                    \n                            Gets weather data from the Weather resource. The Forecast resource is called only if the optional parameter 'time' is evaluated.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        time\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                Optional parameter for forecasting data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            toInches\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toInches(value: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:121\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updateWeatherData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateWeatherData(data: any, time?: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:55\n                            \n                        \n\n\n                \n                    \n                            Updates weather conditions with the data obtained from OpenWeatherMap.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Weather data\n\n                                                        \n                                                \n                                                \n                                                        time\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                Optional parameter for forecasting data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            weatherConditions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherConditions:     WeatherConditions\n\n                    \n                \n                    \n                        \n                            Type :     WeatherConditions\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable, throwError, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport * as math from 'mathjs';\n\nimport { LocationService } from '../../location/location.service';\nimport { WeatherConditions } from './weather';\nimport { appConfig } from '../../app-config';\nimport { uiConfig } from '../../ui/ui-config';\n\n/**\n * Gets the weather data from the Weather or Forecast resources\n * and provides reduction factors for graph values based on weather conditions.\n */\n@Injectable() export class WeatherService {\n\n    private weatherConditions: WeatherConditions;\n\n    constructor(private http: HttpClient, private location: LocationService) { }\n\n    public reset(): void {\n        this.weatherConditions = null;\n    }\n\n    public getWeatherConditions(): WeatherConditions {\n        return this.weatherConditions;\n    }\n\n    /**\n     * Gets weather data from the Weather resource. The Forecast resource is called only if the optional parameter 'time' is evaluated.\n     * @param time Optional parameter for forecasting data\n     */\n    public getWeatherData(time?: Date): Observable {\n        const url: string = time ? appConfig.apis.openWeatherMap.forecastUrl : appConfig.apis.openWeatherMap.weatherUrl;\n        const options = {\n            params: new HttpParams()\n                .set('lat', this.location.getLatLng().lat.toString())\n                .set('lon', this.location.getLatLng().lng.toString())\n                .set('appid', appConfig.apis.openWeatherMap.apiKey)\n        };\n\n        return this.http.get(url, options).pipe(\n            map((response: any) => response),\n            catchError((error: any) => throwError('getWeatherData'))\n        );\n    }\n\n    /**\n     * Updates weather conditions with the data obtained from OpenWeatherMap.\n     * @param data Weather data\n     * @param time Optional parameter for forecasting data\n     */\n    public updateWeatherData(data: any, time?: Date): Observable {\n        if (time != null && data.list.length > 0) {\n            const timezoneOffset: number = time.getTimezoneOffset() * 60 * 1000; // Timezone offset in milliseconds\n            const utcTime: number = time.getTime() + timezoneOffset;\n\n            let preDt: number = data.list[0].dt * 1000; // Converts Unix UTC in millisencods\n            let forecast: any = data.list[0];\n            for (let i = 1; i = utcTime) {\n                    forecast = nextDt - utcTime \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WizardComponent.html":{"url":"components/WizardComponent.html","title":"component - WizardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WizardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/wizard.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                ui-wizard\n            \n\n            \n                styleUrls\n                wizard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./wizard.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                stepper\n                            \n                            \n                                wizardForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                exit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                stepClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, wizard: WizardService, scheduler: SchedulerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/wizard.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        scheduler\n                                                  \n                                                        \n                                                                    SchedulerService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            exit\n                            \n                            \n                        \n                    \n                \n                \n                    \nexit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.component.ts:119\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stepClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nstepClick(event: StepperSelectionEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.component.ts:92\n                            \n                        \n\n\n                \n                    \n                            Updates current step and step data.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    StepperSelectionEvent\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                SelectionChange stepper event.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stepper\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stepper:     MatStepper\n\n                    \n                \n                    \n                        \n                            Type :     MatStepper\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wizardForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        wizardForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        formSteps\n                    \n                \n\n                \n                    \n                        getformSteps()\n                    \n                \n                            \n                                \n                                    Defined in src/app/ui/wizard/wizard.component.ts:23\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, FormArray, Validators } from '@angular/forms';\nimport { MatStepper } from '@angular/material';\nimport { StepperSelectionEvent } from '@angular/cdk/stepper';\n\nimport { WizardService } from './wizard.service';\nimport { SchedulerService } from './scheduler.service';\nimport { pairsValidator } from '../directives/pairs.directive';\nimport { uiConfig } from '../ui-config';\n\n@Component({\n    selector: 'ui-wizard',\n    templateUrl: './wizard.component.html',\n    styleUrls: ['./wizard.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class WizardComponent implements OnInit {\n\n    @ViewChild('stepper') stepper: MatStepper;\n\n    wizardForm: FormGroup;\n\n    get formSteps(): FormArray {\n        return this.wizardForm.get('formSteps') as FormArray;\n    }\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private wizard: WizardService,\n        private scheduler: SchedulerService\n    ) { }\n\n    ngOnInit(): void {\n        // Creates form model.\n        this.wizardForm = this.formBuilder.group({\n            formSteps: this.formBuilder.array([\n                this.formBuilder.group({\n                    address: [''],\n                    center: [null, [Validators.required]]\n                }),\n                this.formBuilder.group({\n                    bounds: [null, [Validators.required]],\n                    time: [null]\n                }),\n                this.formBuilder.group({\n                    odPairs: this.formBuilder.array([], pairsValidator())\n                }),\n                this.formBuilder.group({\n                    odPairs: this.formBuilder.array([]),\n                    weatherConditions: this.formBuilder.group({\n                        description: [null],\n                        icon: [null],\n                        visibility: [\n                            null,\n                            [Validators.required,\n                            Validators.min(0),\n                            Validators.max(uiConfig.visibility.max),\n                            Validators.pattern('^[0-9]*$')]\n                        ],\n                        rainIntensity: [\n                            null,\n                            [Validators.required,\n                            Validators.min(0),\n                            Validators.max(uiConfig.rainIntensity.max),\n                            Validators.pattern('^[0-9]*$')]\n                        ],\n                        snowIntensity: [\n                            null,\n                            [Validators.required,\n                            Validators.min(0),\n                            Validators.max(uiConfig.snowIntensity.max),\n                            Validators.pattern('^[0-9]*$')]\n                        ]\n                    })\n                }),\n                this.formBuilder.group({\n\n                }),\n                this.formBuilder.group({\n\n                })\n            ])\n        }, { updateOn: 'blur' });\n\n        this.wizard.stepper = this.stepper;\n    }\n\n    /**\n     * Updates current step and step data.\n     * @param event SelectionChange stepper event.\n     */\n    stepClick(event: StepperSelectionEvent): void {\n        const index: number = event.previouslySelectedIndex;\n        const nextIndex: number = event.selectedIndex;\n        const data = this.wizardForm.get('formSteps').get([index]).value;\n\n        if (nextIndex > index) {\n            this.stepper.selected.completed = true;\n            switch (nextIndex) {\n                case 2:\n                    this.scheduler.scheduleNetwork(data, index, nextIndex);\n                    break;\n                case 3:\n                    this.scheduler.scheduleDemand(data, index, nextIndex);\n                    break;\n                case 4:\n                    this.scheduler.scheduleSimulation(data, index, nextIndex);\n                    break;\n                default:\n                    this.wizard.goOn(\n                        data,\n                        index,\n                        nextIndex\n                    );\n            }\n        }\n    }\n\n    exit(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    \n                        Search for the area\n                    \n                    \n                \n                \n                    \n                        Selection of the area\n                    \n                    \n                \n                \n                    \n                        Estimate of demand\n                    \n                    \n                \n                \n                    \n                        Change of conditions\n                    \n                    \n                \n                \n                    Simulation\n                    \n                \n                \n                    Statistics\n                    \n                \n            \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    Search for the area                                                                                                                    Selection of the area                                                                                                                    Estimate of demand                                                                                                                    Change of conditions                                                                                            Simulation                                                                        Statistics                                                            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WizardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WizardService.html":{"url":"injectables/WizardService.html","title":"injectable - WizardService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  WizardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/wizard/wizard.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                state\n                            \n                            \n                                    Public\n                                stepper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                goOn\n                            \n                            \n                                    Public\n                                putInError\n                            \n                            \n                                    Public\n                                putOnHold\n                            \n                            \n                                    Public\n                                removeFromWaiting\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Public\n                                updateMap\n                            \n                            \n                                    Public\n                                updateStep\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/wizard.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            goOn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        goOn(data: any, index: number, nextIndex: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        nextIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            putInError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        putInError(error: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            putOnHold\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        putOnHold(message?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            removeFromWaiting\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeFromWaiting()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updateMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateMap(data: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updateStep\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateStep(data: any, index: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            state\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        state:     WizardState\n\n                    \n                \n                    \n                        \n                            Type :     WizardState\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stepper\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stepper:     MatStepper\n\n                    \n                \n                    \n                        \n                            Type :     MatStepper\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { MatStepper } from \"@angular/material\";\n\nimport { Store, select } from '@ngrx/store';\n\nimport * as fromUi from '../models/reducers';\nimport { WizardActionTypes } from '../models/actions/wizard.actions';\nimport { WizardState } from \"../models/reducers/wizard.reducer\";\n\n@Injectable() export class WizardService {\n\n    public state: WizardState;\n\n    public stepper: MatStepper;\n\n    constructor(private store: Store) {\n        this.store.pipe(select(fromUi.wizardState)).subscribe((state: WizardState) => {\n            this.state = state;\n        });\n    }\n\n    public reset(): void {\n        // Stepper.\n        this.stepper.reset();\n        // UI state.\n        this.store.dispatch({\n            type: WizardActionTypes.Reset\n        });\n    }\n\n    public updateStep(data: any, index: number): void {\n        this.store.dispatch({\n            type: WizardActionTypes.StepChanged,\n            payload: { step: { data: data }, index: index }\n        });\n    }\n\n    public updateMap(data: any): void {\n        this.store.dispatch({\n            type: WizardActionTypes.MapChanged,\n            payload: { map: { data: data } }\n        });\n    }\n\n    public putInError(error: string): void {\n        this.store.dispatch({\n            type: WizardActionTypes.StepError,\n            payload: error\n        });\n    }\n\n    public putOnHold(message?: string): void {\n        this.store.dispatch({\n            type: WizardActionTypes.StepPending,\n            payload: message || true\n        });\n    }\n\n    public removeFromWaiting(): void {\n        this.store.dispatch({\n            type: WizardActionTypes.StepPending,\n            payload: false\n        });\n    }\n\n    public goOn(data: any, index: number, nextIndex: number): void {\n        this.store.dispatch({\n            type: WizardActionTypes.GoOn,\n            payload: { step: { data: data }, index: index, nextIndex: nextIndex }\n        });\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WizardState.html":{"url":"interfaces/WizardState.html","title":"interface - WizardState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WizardState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/reducers/wizard.reducer.ts\n        \n\n            \n                Description\n            \n            \n                Wizard state management.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        currentStep\n                                \n                                \n                                        error\n                                \n                                \n                                        map\n                                \n                                \n                                        pending\n                                \n                                \n                                        steps\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentStep\n                                    \n                                \n                                \n                                    \n                                        currentStep:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        map\n                                    \n                                \n                                \n                                    \n                                        map:     Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pending\n                                    \n                                \n                                \n                                    \n                                        pending:     string | boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        steps\n                                    \n                                \n                                \n                                    \n                                        steps:     Step[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Step[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import deepClone from 'mout/lang/deepClone';\n\nimport { Step, STEPS, Map } from \"../wizard\";\nimport { WizardActions, WizardActionTypes } from '../actions/wizard.actions';\n\n/**\n * Wizard state management.\n */\nexport interface WizardState {\n\n    steps: Step[];\n    map: Map;\n    currentStep: number;\n    error: string | null;\n    pending: string | boolean;\n\n}\n\nexport const initialWizardState: WizardState = {\n    steps: STEPS,\n    map: null,\n    currentStep: 0,\n    error: null,\n    pending: false\n};\n\n/**\n * ngrx: wizard Reducer.\n */\nexport function wizardReducer(state: WizardState = deepClone(initialWizardState), action: WizardActions): WizardState {\n    switch (action.type) {\n        case WizardActionTypes.StepChanged: {\n            // Updates the step at the provided index.\n            state.steps[action.payload.index] = action.payload.step;\n            return {\n                ...state,\n                steps: deepClone(state.steps),\n                error: null,\n                pending: false\n            };\n        }\n        case WizardActionTypes.MapChanged: {\n            return {\n                ...state,\n                map: action.payload.map\n            };\n        }\n        case WizardActionTypes.StepError: {\n            return {\n                ...state,\n                error: action.payload,\n                pending: false\n            };\n        }\n        case WizardActionTypes.StepPending: {\n            return {\n                ...state,\n                error: null,\n                pending: action.payload\n            };\n        }\n        case WizardActionTypes.GoOn: {\n            // Updates the step at the provided index.\n            state.steps[action.payload.index] = action.payload.step;\n            return {\n                ...state,\n                steps: deepClone(state.steps),\n                currentStep: action.payload.nextIndex\n            };\n        }\n        case WizardActionTypes.Reset: {\n            return deepClone(initialWizardState);\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\nexport const getSteps: (state: WizardState) => Step[] = (state: WizardState) => state.steps;\n\nexport const getMap: (state: WizardState) => Map = (state: WizardState) => state.map;\n\nexport const getCurrentStep: (state: WizardState) => number = (state: WizardState) => state.currentStep;\n\nexport const getError: (state: WizardState) => string = (state: WizardState) => state.error;\n\nexport const getPending: (state: WizardState) => string | boolean = (state: WizardState) => state.pending;\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/app/about/about.component.ts\n            \n            \n                component\n            \n            \n                AboutComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/app-preloading-strategy.ts\n            \n            \n                class\n            \n            \n                AppPreloadingStrategy\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/demand/demand.service.ts\n            \n            \n                injectable\n            \n            \n                DemandService\n            \n            \n                66 %\n                (10/15)\n            \n        \n        \n            \n                \n                    src/app/home/home.component.ts\n            \n            \n                component\n            \n            \n                HomeComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/home/home.transition.ts\n            \n            \n                variable\n            \n            \n                HOME_TRANSITION\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/location/location.service.ts\n            \n            \n                injectable\n            \n            \n                LocationService\n            \n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                    src/app/network/graph.ts\n            \n            \n                class\n            \n            \n                Edge\n            \n            \n                52 %\n                (10/19)\n            \n        \n        \n            \n                \n                    src/app/network/graph.ts\n            \n            \n                class\n            \n            \n                Graph\n            \n            \n                34 %\n                (12/35)\n            \n        \n        \n            \n                \n                    src/app/network/graph.ts\n            \n            \n                class\n            \n            \n                Node\n            \n            \n                18 %\n                (2/11)\n            \n        \n        \n            \n                \n                    src/app/network/graph.ts\n            \n            \n                class\n            \n            \n                Relation\n            \n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                    src/app/network/graph.ts\n            \n            \n                interface\n            \n            \n                LinkFlow\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    src/app/network/graph.ts\n            \n            \n                interface\n            \n            \n                Member\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                    src/app/network/graph.ts\n            \n            \n                interface\n            \n            \n                OdPair\n            \n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                    src/app/network/graph.ts\n            \n            \n                interface\n            \n            \n                OdPairShowing\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/network/graph.ts\n            \n            \n                interface\n            \n            \n                Tag\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    src/app/network/k-shortest-path.ts\n            \n            \n                class\n            \n            \n                Heap\n            \n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                    src/app/network/k-shortest-path.ts\n            \n            \n                interface\n            \n            \n                Path\n            \n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                    src/app/network/network.service.ts\n            \n            \n                injectable\n            \n            \n                NetworkService\n            \n            \n                47 %\n                (21/44)\n            \n        \n        \n            \n                \n                    src/app/network/weather/weather.service.ts\n            \n            \n                injectable\n            \n            \n                WeatherService\n            \n            \n                45 %\n                (5/11)\n            \n        \n        \n            \n                \n                    src/app/network/weather/weather.ts\n            \n            \n                interface\n            \n            \n                WeatherConditions\n            \n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                    src/app/shared/can-deactivate-guard.service.ts\n            \n            \n                injectable\n            \n            \n                CanDeactivateGuard\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/shared/can-deactivate-guard.service.ts\n            \n            \n                interface\n            \n            \n                CanComponentDeactivate\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/shared/footer/footer.component.ts\n            \n            \n                component\n            \n            \n                FooterComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/shared/info-dialog.component.ts\n            \n            \n                component\n            \n            \n                InfoDialogComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/shared/material.module.ts\n            \n            \n                variable\n            \n            \n                materialModules\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/shared/message-archived.component.ts\n            \n            \n                component\n            \n            \n                MessageArchivedComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/shared/shared.module.ts\n            \n            \n                variable\n            \n            \n                sharedModules\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/simulation/clock.ts\n            \n            \n                class\n            \n            \n                Clock\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/simulation/simulation.service.ts\n            \n            \n                injectable\n            \n            \n                SimulationService\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    src/app/ui/directives/pairs.directive.ts\n            \n            \n                function\n            \n            \n                pairsValidator\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/ui/map/google-map.component.ts\n            \n            \n                component\n            \n            \n                GoogleMapComponent\n            \n            \n                73 %\n                (11/15)\n            \n        \n        \n            \n                \n                    src/app/ui/map/map.component.ts\n            \n            \n                component\n            \n            \n                MapComponent\n            \n            \n                14 %\n                (3/21)\n            \n        \n        \n            \n                \n                    src/app/ui/map/map.service.ts\n            \n            \n                injectable\n            \n            \n                MapService\n            \n            \n                34 %\n                (11/32)\n            \n        \n        \n            \n                \n                    src/app/ui/map/map.style.ts\n            \n            \n                variable\n            \n            \n                MapStyle\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/actions/wizard.actions.ts\n            \n            \n                class\n            \n            \n                GoOn\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/ui/models/actions/wizard.actions.ts\n            \n            \n                class\n            \n            \n                MapChanged\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/ui/models/actions/wizard.actions.ts\n            \n            \n                class\n            \n            \n                Reset\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/ui/models/actions/wizard.actions.ts\n            \n            \n                class\n            \n            \n                StepChanged\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/ui/models/actions/wizard.actions.ts\n            \n            \n                class\n            \n            \n                StepError\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/ui/models/actions/wizard.actions.ts\n            \n            \n                class\n            \n            \n                StepPending\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/ui/models/base.component.ts\n            \n            \n                class\n            \n            \n                BaseComponent\n            \n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers.ts\n            \n            \n                interface\n            \n            \n                UiState\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers.ts\n            \n            \n                variable\n            \n            \n                currentStep\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers.ts\n            \n            \n                variable\n            \n            \n                error\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers.ts\n            \n            \n                variable\n            \n            \n                featureUiState\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers.ts\n            \n            \n                variable\n            \n            \n                map\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers.ts\n            \n            \n                variable\n            \n            \n                pending\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers.ts\n            \n            \n                variable\n            \n            \n                reducers\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers.ts\n            \n            \n                variable\n            \n            \n                steps\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers.ts\n            \n            \n                variable\n            \n            \n                wizardState\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers/wizard.reducer.ts\n            \n            \n                interface\n            \n            \n                WizardState\n            \n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers/wizard.reducer.ts\n            \n            \n                function\n            \n            \n                wizardReducer\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers/wizard.reducer.ts\n            \n            \n                variable\n            \n            \n                getCurrentStep\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers/wizard.reducer.ts\n            \n            \n                variable\n            \n            \n                getError\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers/wizard.reducer.ts\n            \n            \n                variable\n            \n            \n                getMap\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers/wizard.reducer.ts\n            \n            \n                variable\n            \n            \n                getPending\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers/wizard.reducer.ts\n            \n            \n                variable\n            \n            \n                getSteps\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers/wizard.reducer.ts\n            \n            \n                variable\n            \n            \n                initialWizardState\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/wizard.ts\n            \n            \n                interface\n            \n            \n                Map\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    src/app/ui/models/wizard.ts\n            \n            \n                interface\n            \n            \n                Step\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    src/app/ui/models/wizard.ts\n            \n            \n                variable\n            \n            \n                STEPS\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/ui/ui-config.ts\n            \n            \n                variable\n            \n            \n                uiConfig\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/ui/ui.component.ts\n            \n            \n                component\n            \n            \n                UiComponent\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                    src/app/ui/utils.ts\n            \n            \n                class\n            \n            \n                EnumValues\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/ui/weather/weather.component.ts\n            \n            \n                component\n            \n            \n                WeatherComponent\n            \n            \n                15 %\n                (3/20)\n            \n        \n        \n            \n                \n                    src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts\n            \n            \n                component\n            \n            \n                ChangeOfConditionsComponent\n            \n            \n                16 %\n                (3/18)\n            \n        \n        \n            \n                \n                    src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts\n            \n            \n                component\n            \n            \n                EstimateOfDemandComponent\n            \n            \n                15 %\n                (3/19)\n            \n        \n        \n            \n                \n                    src/app/ui/wizard/scheduler.service.ts\n            \n            \n                injectable\n            \n            \n                SchedulerService\n            \n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                    src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts\n            \n            \n                component\n            \n            \n                SearchForTheAreaComponent\n            \n            \n                18 %\n                (3/16)\n            \n        \n        \n            \n                \n                    src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts\n            \n            \n                component\n            \n            \n                SelectionOfTheAreaComponent\n            \n            \n                21 %\n                (3/14)\n            \n        \n        \n            \n                \n                    src/app/ui/wizard/simulation/simulation.component.ts\n            \n            \n                component\n            \n            \n                SimulationComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                    src/app/ui/wizard/statistics/statistics.component.ts\n            \n            \n                component\n            \n            \n                StatisticsComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/ui/wizard/wizard.component.ts\n            \n            \n                component\n            \n            \n                WizardComponent\n            \n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                    src/app/ui/wizard/wizard.service.ts\n            \n            \n                injectable\n            \n            \n                WizardService\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                    src/app/utils.ts\n            \n            \n                function\n            \n            \n                getRandomColor\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/utils.ts\n            \n            \n                function\n            \n            \n                getScript\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/utils.ts\n            \n            \n                function\n            \n            \n                loadScripts\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.test.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 6.0.3\n        \n            @angular/common : 6.0.3\n        \n            @angular/compiler : 6.0.3\n        \n            @angular/core : 6.0.3\n        \n            @angular/forms : 6.0.3\n        \n            @angular/http : 6.0.3\n        \n            @angular/platform-browser : 6.0.3\n        \n            @angular/platform-browser-dynamic : 6.0.3\n        \n            @angular/router : 6.0.3\n        \n            @angular/material : 6.2.1\n        \n            @angular/cdk : 6.2.1\n        \n            @angular/flex-layout : 6.0.0-beta.15\n        \n            @ngrx/store : 6.0.1\n        \n            @ngrx/effects : 6.0.1\n        \n            @turf/area : 6.0.1\n        \n            @turf/helpers : 6.1.4\n        \n            @turf/invariant : 6.1.2\n        \n            @turf/bearing : 6.0.1\n        \n            @turf/distance : 6.0.1\n        \n            @turf/transform-translate : 5.1.5\n        \n            @turf/centroid : 6.0.2\n        \n            @turf/center : 6.0.1\n        \n            ng-pick-datetime : 6.0.5\n        \n            mout : 1.1.0\n        \n            mathjs : 5.0.3\n        \n            web-animations-js : 2.3.1\n        \n            hammerjs : 2.0.8\n        \n            animejs : 2.2.0\n        \n            qs : 6.5.2\n        \n            core-js : 2.5.7\n        \n            rxjs : 6.2.0\n        \n            zone.js : 0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PathType   (src/.../graph.ts)\n                        \n                        \n                            WeatherDescription   (src/.../weather.ts)\n                        \n                        \n                            WizardActionTypes   (src/.../wizard.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/network/graph.ts\n    \n        \n            \n                \n                    \n                        \n                        PathType\n                    \n                \n                        \n                            \n                                 distance\n                            \n                        \n                        \n                            \n                                Value: distance\n                            \n                        \n                        \n                            \n                                 duration\n                            \n                        \n                        \n                            \n                                Value: duration\n                            \n                        \n            \n        \n\n    src/app/network/weather/weather.ts\n    \n        \n            \n                \n                    \n                        \n                        WeatherDescription\n                    \n                \n                        \n                            \n                                 clearSky\n                            \n                        \n                        \n                            \n                                Value: clear sky\n                            \n                        \n                        \n                            \n                                 fewClouds\n                            \n                        \n                        \n                            \n                                Value: few clouds\n                            \n                        \n                        \n                            \n                                 scatteredClouds\n                            \n                        \n                        \n                            \n                                Value: scattered clouds\n                            \n                        \n                        \n                            \n                                 brokenClouds\n                            \n                        \n                        \n                            \n                                Value: broken clouds\n                            \n                        \n                        \n                            \n                                 showerRain\n                            \n                        \n                        \n                            \n                                Value: shower rain\n                            \n                        \n                        \n                            \n                                 rain\n                            \n                        \n                        \n                            \n                                Value: rain\n                            \n                        \n                        \n                            \n                                 thunderstorm\n                            \n                        \n                        \n                            \n                                Value: thunderstorm\n                            \n                        \n                        \n                            \n                                 snow\n                            \n                        \n                        \n                            \n                                Value: snow\n                            \n                        \n                        \n                            \n                                 mist\n                            \n                        \n                        \n                            \n                                Value: mist\n                            \n                        \n            \n        \n\n    src/app/ui/models/actions/wizard.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        WizardActionTypes\n                    \n                \n                    \n                        \n                            ngrx: wizard Actions.\n\n                        \n                    \n                        \n                            \n                                 StepChanged\n                            \n                        \n                        \n                            \n                                Value: [Wizard] Step Changed\n                            \n                        \n                        \n                            \n                                 MapChanged\n                            \n                        \n                        \n                            \n                                Value: [Wizard] Map Changed\n                            \n                        \n                        \n                            \n                                 StepError\n                            \n                        \n                        \n                            \n                                Value: [Wizard] Step Error\n                            \n                        \n                        \n                            \n                                 StepPending\n                            \n                        \n                        \n                            \n                                Value: [Wizard] Step Pending\n                            \n                        \n                        \n                            \n                                 GoOn\n                            \n                        \n                        \n                            \n                                Value: [Wizard] Go On\n                            \n                        \n                        \n                            \n                                 Reset\n                            \n                        \n                        \n                            \n                                Value: [Wizard] Reset\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getRandomColor   (src/.../utils.ts)\n                        \n                        \n                            getScript   (src/.../utils.ts)\n                        \n                        \n                            loadScripts   (src/.../utils.ts)\n                        \n                        \n                            pairsValidator   (src/.../pairs.directive.ts)\n                        \n                        \n                            wizardReducer   (src/.../wizard.reducer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/utils.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getRandomColor\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRandomColor()\n                    \n                \n\n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getScript\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetScript(src: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        src\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadScripts\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadScripts()\n                    \n                \n\n\n\n\n            \n        \n\n    src/app/ui/directives/pairs.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            pairsValidator\n                            \n                            \n                        \n                    \n                \n                \n                    \npairsValidator()\n                    \n                \n\n\n\n\n            \n        \n\n    src/app/ui/models/reducers/wizard.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            wizardReducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nwizardReducer(state: undefined, action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n                            ngrx: wizard Reducer.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSTRADA\n\n\nSTRADA (Simulation of TRAffic DAta) is an urban traffic web simulator that uses data in real time.\n\n\nThis project is under active development for the dissertation of my bachelor's degree in computer engineering.\n\nDocumentation\nOfficial docs: STRADA documentation\nDevelopment\nRequirements\n\nNode.js and npm\nUpdate npm: npm install npm@latest -g\nAngular CLI: npm install -g @angular/cli\nFirebase\nCreate a Firebase project in the Firebase console\nFirebase CLI: npm install -g firebase-tools\nLogin: firebase login\n\n\nGoogle Maps \nGet your API keys: https://cloud.google.com/maps-platform/\nEnable Maps JavaScript API, Geocoding API and Directions API\n\n\nOpenWeatherMap\nGet your API key: https://openweathermap.org/\n\n\n\nPrerequisites\n\nUpdate .firebaserc file\nUpdate src/app/app-config.json file\nUpdate functions/src/functions-config.json file\n\nFirebase Functions\ncd functions\nnpm install\nnpm run serve:devApp\nnpm install\nnpm startTest\nnpm testLicense\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Roberto Simonetti\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DemandModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LocationModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NetworkModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SimulationModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WeatherModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_DemandModule\n\n\n\ncluster_DemandModule_providers\n\n\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_providers\n\n\n\ncluster_NetworkModule\n\n\n\ncluster_NetworkModule_imports\n\n\n\ncluster_NetworkModule_providers\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SimulationModule\n\n\n\ncluster_SimulationModule_providers\n\n\n\ncluster_UiModule\n\n\n\ncluster_UiModule_declarations\n\n\n\ncluster_UiModule_imports\n\n\n\ncluster_UiModule_providers\n\n\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_providers\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nDemandModule\n\nDemandModule\n\nAppModule -->\n\nDemandModule->AppModule\n\n\n\n\n\nLocationModule\n\nLocationModule\n\nAppModule -->\n\nLocationModule->AppModule\n\n\n\n\n\nNetworkModule\n\nNetworkModule\n\nAppModule -->\n\nNetworkModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nSharedModule->FooterComponent \n\n\n\n\n\nInfoDialogComponent \n\nInfoDialogComponent \n\nInfoDialogComponent  -->\n\nSharedModule->InfoDialogComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nMessageArchivedComponent \n\nMessageArchivedComponent \n\nMessageArchivedComponent  -->\n\nSharedModule->MessageArchivedComponent \n\n\n\n\n\nUiModule\n\nUiModule\n\nUiModule -->\n\nSharedModule->UiModule\n\n\n\n\n\nSimulationModule\n\nSimulationModule\n\nAppModule -->\n\nSimulationModule->AppModule\n\n\n\n\n\nDemandService\n\nDemandService\n\nDemandModule -->\n\nDemandService->DemandModule\n\n\n\n\n\nLocationService\n\nLocationService\n\nLocationModule -->\n\nLocationService->LocationModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nNetworkModule -->\n\nWeatherModule->NetworkModule\n\n\n\n\n\nNetworkService\n\nNetworkService\n\nNetworkModule -->\n\nNetworkService->NetworkModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nSharedModule -->\n\nFooterComponent->SharedModule\n\n\n\n\n\nInfoDialogComponent\n\nInfoDialogComponent\n\nSharedModule -->\n\nInfoDialogComponent->SharedModule\n\n\n\n\n\nMessageArchivedComponent\n\nMessageArchivedComponent\n\nSharedModule -->\n\nMessageArchivedComponent->SharedModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\nSimulationService\n\nSimulationService\n\nSimulationModule -->\n\nSimulationService->SimulationModule\n\n\n\n\n\nChangeOfConditionsComponent\n\nChangeOfConditionsComponent\n\nUiModule -->\n\nChangeOfConditionsComponent->UiModule\n\n\n\n\n\nEstimateOfDemandComponent\n\nEstimateOfDemandComponent\n\nUiModule -->\n\nEstimateOfDemandComponent->UiModule\n\n\n\n\n\nGoogleMapComponent\n\nGoogleMapComponent\n\nUiModule -->\n\nGoogleMapComponent->UiModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nUiModule -->\n\nMapComponent->UiModule\n\n\n\n\n\nSearchForTheAreaComponent\n\nSearchForTheAreaComponent\n\nUiModule -->\n\nSearchForTheAreaComponent->UiModule\n\n\n\n\n\nSelectionOfTheAreaComponent\n\nSelectionOfTheAreaComponent\n\nUiModule -->\n\nSelectionOfTheAreaComponent->UiModule\n\n\n\n\n\nSimulationComponent\n\nSimulationComponent\n\nUiModule -->\n\nSimulationComponent->UiModule\n\n\n\n\n\nStatisticsComponent\n\nStatisticsComponent\n\nUiModule -->\n\nStatisticsComponent->UiModule\n\n\n\n\n\nUiComponent\n\nUiComponent\n\nUiModule -->\n\nUiComponent->UiModule\n\n\n\n\n\nWeatherComponent\n\nWeatherComponent\n\nUiModule -->\n\nWeatherComponent->UiModule\n\n\n\n\n\nWizardComponent\n\nWizardComponent\n\nUiModule -->\n\nWizardComponent->UiModule\n\n\n\n\n\nUiRoutingModule\n\nUiRoutingModule\n\nUiModule -->\n\nUiRoutingModule->UiModule\n\n\n\n\n\nMapService\n\nMapService\n\nUiModule -->\n\nMapService->UiModule\n\n\n\n\n\nSchedulerService\n\nSchedulerService\n\nUiModule -->\n\nSchedulerService->UiModule\n\n\n\n\n\nWizardService\n\nWizardService\n\nUiModule -->\n\nWizardService->UiModule\n\n\n\n\n\nWeatherService\n\nWeatherService\n\nWeatherModule -->\n\nWeatherService->WeatherModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            11 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        17 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        9 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        15 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        12 interfaces\n                    \n                \n            \n            \n                \n                    \n                        \n                        \n                            7 routes\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EnumValueType   (src/.../utils.ts)\n                        \n                        \n                            WizardActions   (src/.../wizard.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/ui/utils.ts\n    \n        \n            \n                \n                    \n                        \n                        EnumValueType\n                    \n                \n                \n                    \n                        EnumValueType:     string | number\n\n                    \n                \n            \n        \n\n    src/app/ui/models/actions/wizard.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        WizardActions\n                    \n                \n                \n                    \n                        WizardActions:     StepChanged | MapChanged | StepError | StepPending | GoOn | Reset\n\n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            currentStep   (src/.../reducers.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.test.ts)\n                        \n                        \n                            error   (src/.../reducers.ts)\n                        \n                        \n                            featureUiState   (src/.../reducers.ts)\n                        \n                        \n                            getCurrentStep   (src/.../wizard.reducer.ts)\n                        \n                        \n                            getError   (src/.../wizard.reducer.ts)\n                        \n                        \n                            getMap   (src/.../wizard.reducer.ts)\n                        \n                        \n                            getPending   (src/.../wizard.reducer.ts)\n                        \n                        \n                            getSteps   (src/.../wizard.reducer.ts)\n                        \n                        \n                            HOME_TRANSITION   (src/.../home.transition.ts)\n                        \n                        \n                            initialWizardState   (src/.../wizard.reducer.ts)\n                        \n                        \n                            map   (src/.../reducers.ts)\n                        \n                        \n                            MapStyle   (src/.../map.style.ts)\n                        \n                        \n                            materialModules   (src/.../material.module.ts)\n                        \n                        \n                            pending   (src/.../reducers.ts)\n                        \n                        \n                            reducers   (src/.../reducers.ts)\n                        \n                        \n                            sharedModules   (src/.../shared.module.ts)\n                        \n                        \n                            steps   (src/.../reducers.ts)\n                        \n                        \n                            STEPS   (src/.../wizard.ts)\n                        \n                        \n                            uiConfig   (src/.../ui-config.ts)\n                        \n                        \n                            wizardState   (src/.../reducers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/ui/models/reducers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            currentStep\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentStep:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    wizardState,\n    fromWizard.getCurrentStep\n)\n                        \n                    \n\n                \n                    \n                        Exports the current step state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    wizardState,\n    fromWizard.getError\n)\n                        \n                    \n\n                \n                    \n                        Exports the error state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            featureUiState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        featureUiState:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createFeatureSelector('ui')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            map\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        map:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    wizardState,\n    fromWizard.getMap\n)\n                        \n                    \n\n                \n                    \n                        Exports the map state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pending\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pending:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    wizardState,\n    fromWizard.getPending\n)\n                        \n                    \n\n                \n                    \n                        Exports the pending state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reducers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reducers:     ActionReducerMap\n\n                    \n                \n                    \n                        \n                            Type :     ActionReducerMap\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    wizard: fromWizard.wizardReducer\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            steps\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        steps:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    wizardState,\n    fromWizard.getSteps\n)\n                        \n                    \n\n                \n                    \n                        Exports the steps state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wizardState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        wizardState:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    featureUiState,\n    (state: UiState) => state.wizard\n)\n                        \n                    \n\n                \n                    \n                        Exports the wizard state.\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    production: true,\n    testing: false,\n    functions: {\n        networkData: {\n            url: 'https://us-central1-' + appConfig.firebase.projectId + '.cloudfunctions.net/networkData'\n        },\n        trafficData: {\n            url: 'https://us-central1-' + appConfig.firebase.projectId + '.cloudfunctions.net/trafficData'\n        }\n    }\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    production: false,\n    testing: false,\n    functions: {\n        networkData: {\n            url: 'http://localhost:4201/' + appConfig.firebase.projectId + '/us-central1/networkData'\n        },\n        trafficData: {\n            url: 'http://localhost:4201/' + appConfig.firebase.projectId + '/us-central1/trafficData'\n        }\n    }\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    production: false,\n    testing: true,\n    functions: {\n        networkData: {\n            url: ''\n        },\n        trafficData: {\n            url: ''\n        }\n    }\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/ui/models/reducers/wizard.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getCurrentStep\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getCurrentStep:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : (state: WizardState) => state.currentStep\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getError:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : (state: WizardState) => state.error\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getMap:     Map\n\n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : (state: WizardState) => state.map\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPending\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getPending:     string | boolean\n\n                    \n                \n                    \n                        \n                            Type :     string | boolean\n\n                        \n                    \n                    \n                        \n                            Default value : (state: WizardState) => state.pending\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSteps\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getSteps:     Step[]\n\n                    \n                \n                    \n                        \n                            Type :     Step[]\n\n                        \n                    \n                    \n                        \n                            Default value : (state: WizardState) => state.steps\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialWizardState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        initialWizardState:     WizardState\n\n                    \n                \n                    \n                        \n                            Type :     WizardState\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    steps: STEPS,\n    map: null,\n    currentStep: 0,\n    error: null,\n    pending: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/home/home.transition.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            HOME_TRANSITION\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        HOME_TRANSITION:     AnimationTriggerMetadata\n\n                    \n                \n                    \n                        \n                            Type :     AnimationTriggerMetadata\n\n                        \n                    \n                    \n                        \n                            Default value : trigger('homeTransition', [\n    transition('void => *', [\n        style({\n            opacity: 0\n        }),\n        animate('500ms 0ms ease-in',\n            style({\n                opacity: 1\n            })\n        )\n    ])\n])\n                        \n                    \n\n\n            \n        \n\n    src/app/ui/map/map.style.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MapStyle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        MapStyle:     google.maps.MapTypeStyle[]\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.MapTypeStyle[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        \"featureType\": \"administrative\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road\",\n        \"elementType\": \"labels.icon\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"transit\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    }\n]\n                        \n                    \n\n                \n                    \n                        Styled Maps: https://developers.google.com/maps/documentation/javascript/styling\n\n                    \n                \n\n            \n        \n\n    src/app/shared/material.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            materialModules\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        materialModules:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    MatSidenavModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    MatMenuModule,\n    MatStepperModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule,\n    MatDialogModule,\n    MatGridListModule,\n    MatSelectModule,\n    MatExpansionModule\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/shared/shared.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            sharedModules\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sharedModules:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    CommonModule,\n    RouterModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    FlexLayoutModule\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/ui/models/wizard.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            STEPS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        STEPS:     Step[]\n\n                    \n                \n                    \n                        \n                            Type :     Step[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n                \n                    \n                        Initial steps.\n\n                    \n                \n\n            \n        \n\n    src/app/ui/ui-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            uiConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uiConfig:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    /**\n     * Initial map.\n     */\n    map: {\n        center: { lat: 41.910943, lng: 12.476358 },\n        zoom: 4\n    },\n    /**\n     * Time of simulation limit in hours.\n     */\n    timeLimit: 24,\n    /**\n     * Area limit in hectares.\n     */\n    areaMaxLimit: 30,\n    areaMinLimit: 3,\n    edges: {\n        baseColor: '#babdbe',\n        noTrafficColor: '#76d219',\n        moderateTrafficColor: '#d27519',\n        heavyTrafficColor: '#d2191a'\n    },\n    /**\n     * Minimum edge distance for traffic data.\n     */\n    minDistance: 20,\n    /**\n     * Minimum edge duration for traffic data.\n     */\n    minDuration: 2,\n    /**\n     * Maximum number of O/D pairs that the user can select.\n     */\n    maxOdPairs: 5,\n    /**\n     * The number of shortest paths to compute.\n     */\n    k: 3,\n    /**\n     * Multinomial logit parameter.\n     */\n    theta: 2,\n    /**\n     * Minimum spacing between subsequent vehicles.\n     */\n    sp: 5,\n    /**\n     * Shortest paths.\n     */\n    paths: {\n        /**\n         * Highly, Medium, Poorly\n         */\n        colors: [\n            '#004ba0',\n            '#1976d2',\n            '#63a4ff'\n        ]\n    },\n    /**\n     * Max No. vehicles for O/D pair.\n     */\n    maxDemand: 10000,\n    /**\n     * Weather Adjustment Factor Coefficients for capacity.\n     * \"Traffic Analysis Toolbox. Volume XI: Weather and Traffic Analysis, Modeling and Simulation\"\n     */\n    adjustmentFactorCoefficients: [0.91, 0.009, -0.404, -1.455, 0, 0],\n    /**\n     * Visibility (m).\n     */\n    visibility: {\n        max: 10000,\n        default: 10000 // Normal value\n    },\n    /**\n     * Rain rating (mm).\n     */\n    rainIntensity: {\n        max: 70\n    },\n    /**\n     * Snow rating (mm).\n     */\n    snowIntensity: {\n        max: 20\n    },\n    weatherIcons: ['01d', '02d', '03d', '04d', '09d', '10d', '11d', '13d', '50d']\n}\n                        \n                    \n\n                \n                    \n                        User interface configuration.\n\n                    \n                \n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
