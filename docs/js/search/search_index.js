var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.535,1,1.179]],["body/components/AppComponent.html",[0,1.004,1,2.143,2,0.313,3,0.246,4,1.734,5,1.734,6,1.734,7,0.177,8,4.121,9,1.734,10,2.897,11,2.26,12,6.053,13,2.524,14,6.053,15,2.524,16,6.053,17,0.345,18,0.016,19,0.73,20,0.2,21,0.03,22,4.692,23,1.183,24,2.202,25,1.704,26,2.108,27,2.546,28,1.734,29,1.163,30,1.734,31,1.459,32,1.785,33,1.287,34,1.734,35,1.459,36,1.66,37,1.734,38,1.459,39,1.734,40,1.459,41,1.589,42,2.202,43,1.399,44,1.734,45,1.459,46,1.734,47,1.459,48,2.125,49,1.459,50,1.734,51,1.734,52,1.459,53,1.66,54,2.202,55,1.459,56,1.589,57,1.459,58,1.734,59,1.459,60,1.734,61,1.399,62,1.734,63,1.459,64,1.734,65,1.459,66,1.734,67,0.012,68,0.012]],["title/modules/AppModule.html",[69,0.956,70,2.728]],["body/modules/AppModule.html",[1,2.349,2,0.217,3,0.217,7,0.156,11,1.288,17,0.565,18,0.017,19,0.644,20,0.234,21,0.026,23,1.045,43,2.095,67,0.011,68,0.011,69,1.386,70,5.615,71,1.934,72,3.197,73,3.197,74,2.613,75,3.637,76,3.637,77,3.637,78,3.637,79,4.677,80,4.677,81,4.677,82,4.677,83,3.748,84,4.677,85,2.442,86,1.089,87,2.035,88,4.208,89,2.566,90,5.583,91,5.583,92,4.328,93,2.981,94,5.583,95,4.208,96,3.637,97,1.6,98,3.637,99,3.262,100,3.637,101,3.637,102,4.208,103,3.637,104,4.208,105,4.208,106,4.208,107,4.208,108,4.328,109,3.637,110,4.208,111,4.208,112,4.208,113,4.208,114,4.208,115,2.411,116,1.675]],["title/classes/AppPreloadingStrategy.html",[21,0.024,117,2.728]],["body/classes/AppPreloadingStrategy.html",[2,0.279,3,0.279,7,0.201,17,0.472,18,0.016,20,0.226,21,0.04,29,1.037,67,0.013,68,0.013,117,4.63,118,4.63,119,5.666,120,4.662,121,1.84,122,6.079,123,0.51,124,1.764,125,6.535,126,4.29,127,7.31,128,3.796,129,0.866,130,5.393,131,1.284,132,0.608,133,1.231,134,1.256,135,2.932,136,2.911,137,2.051,138,5.393,139,5.393,140,2.911]],["title/modules/AppRoutingModule.html",[69,0.956,79,2.523]],["body/modules/AppRoutingModule.html",[0,0.722,2,0.269,3,0.269,7,0.193,11,1.592,17,0.536,18,0.017,19,0.796,20,0.268,21,0.032,43,1.876,67,0.013,68,0.013,69,1.29,74,2.168,79,4.187,89,2.937,103,4.493,117,4.902,118,3.683,119,4.953,122,4.493,126,3.964,136,2.806,141,4.493,142,4.527,143,5.198,144,1.463,145,3.491,146,6.39,147,5.981,148,4.493,149,4.493,150,2.806,151,5.198,152,5.198,153,1.592,154,2.168,155,5.198]],["title/classes/BaseComponent.html",[21,0.024,156,2.078]],["body/classes/BaseComponent.html",[0,1.011,2,0.233,3,0.233,7,0.168,17,0.423,18,0.017,19,0.692,20,0.189,21,0.042,33,1.579,48,1.868,67,0.012,68,0.012,121,1.646,123,0.427,124,1.579,129,1.168,132,0.509,134,1.365,137,1.718,156,3.156,157,3.904,158,1.573,159,7.407,160,3.573,161,2.581,162,5.606,163,1.028,164,4.384,165,3.93,166,2.73,167,4.19,168,4.19,169,4.19,170,1.326,171,1.169,172,4.517,173,4.517,174,1.9,175,4.517,176,4.517,177,4.446,178,2.609,179,4.19,180,4.517,181,4.517,182,3.156,183,3.904,184,3.904]],["title/interfaces/CanComponentDeactivate.html",[185,1.039,186,2.523]],["body/interfaces/CanComponentDeactivate.html",[2,0.281,3,0.281,7,0.202,17,0.51,18,0.017,19,0.833,20,0.275,21,0.034,67,0.013,68,0.013,116,2.165,121,1.531,123,0.515,128,3.546,132,0.613,134,1.045,135,2.739,136,2.936,137,2.069,163,1.155,185,1.773,186,4.625,187,4.216,188,3.323,189,4.216,190,5.402,191,2.287,192,4.701,193,1.813,194,3.323,195,4.701,196,5.678]],["title/injectables/CanDeactivateGuard.html",[191,1.341,194,2.352]],["body/injectables/CanDeactivateGuard.html",[0,0.74,2,0.275,3,0.275,7,0.198,17,0.506,18,0.017,19,0.816,20,0.272,21,0.033,29,1.024,67,0.013,68,0.013,116,2.12,121,1.499,123,0.504,124,1.751,129,0.855,131,1.268,132,0.6,133,1.216,134,1.247,135,2.705,136,2.875,137,2.026,185,1.438,186,4.769,187,5.028,188,3.963,189,4.129,190,5.286,191,2.435,192,4.605,193,1.776,194,3.963,195,5.607,196,5.607,197,5.327]],["title/components/ChangeOfConditionsComponent.html",[0,0.535,31,1.179]],["body/components/ChangeOfConditionsComponent.html",[0,0.968,1,1.299,2,0.29,3,0.219,4,1.543,5,1.543,6,1.543,7,0.158,9,1.543,10,2.864,11,2.05,13,2.341,15,2.341,17,0.406,18,0.016,19,0.65,20,0.178,21,0.026,23,1.053,24,2.042,25,1.58,26,1.954,27,2.435,28,1.543,29,1.079,30,1.543,31,2.05,32,1.785,33,1.97,34,1.543,35,1.299,36,1.477,37,1.543,38,1.299,39,1.543,40,1.299,41,1.414,42,2.042,43,1.245,44,1.543,45,1.299,46,1.543,47,1.299,48,2.009,49,1.299,50,1.543,51,1.543,52,1.299,53,1.477,54,2.042,55,1.299,56,1.414,57,1.299,58,1.543,59,1.299,60,1.543,61,1.245,62,1.543,63,1.299,64,1.543,65,1.299,66,1.543,67,0.012,68,0.012,121,1.58,123,0.634,124,1.515,129,1.074,132,0.633,134,0.815,161,2.504,166,2.665,174,1.394,198,6.019,199,5.397,200,3.667,201,2.579,202,5.613,203,5.613,204,3.989,205,4.099,206,1.562,207,5.613,208,4.242,209,1.177,210,4.242,211,2.165]],["title/classes/Clock.html",[21,0.024,212,2.985]],["body/classes/Clock.html",[2,0.316,3,0.316,7,0.228,18,0.016,20,0.257,21,0.044,67,0.014,68,0.014,212,5.46,213,5.292]],["title/modules/DemandModule.html",[69,0.956,80,2.523]],["body/modules/DemandModule.html",[2,0.288,3,0.288,7,0.207,17,0.516,18,0.016,19,0.854,20,0.28,21,0.035,23,1.385,67,0.014,68,0.014,69,1.656,71,2.564,72,3.404,73,2.847,74,2.976,80,5.026,85,2.918,86,1.444,87,2.699,89,3.065,214,4.823,215,4.823,216,4.686,217,5.58,218,5.58]],["title/injectables/DemandService.html",[191,1.341,216,2.352]],["body/injectables/DemandService.html",[2,0.25,3,0.25,7,0.18,17,0.442,18,0.017,19,0.742,20,0.203,21,0.03,36,2.13,67,0.013,68,0.013,86,1.823,123,0.459,124,1.651,129,1.13,132,0.546,134,1.395,135,2.796,137,1.844,140,2.616,158,1.688,163,1.076,170,1.423,171,1.255,174,1.519,191,2.334,209,1.476,216,3.738,219,4.19,220,3.236,221,3.8,222,2.811,223,4.334,224,2.235,225,7.041,226,2.256,227,6.086,228,7.041,229,4.847,230,3.302,231,4.847,232,4.847,233,4.847,234,6.118]],["title/classes/Edge.html",[21,0.024,235,1.965]],["body/classes/Edge.html",[2,0.097,3,0.201,7,0.07,17,0.222,18,0.017,20,0.244,21,0.031,25,0.865,29,0.363,67,0.006,68,0.006,115,1.081,116,0.751,123,0.178,124,0.83,129,1.085,131,0.449,132,0.779,133,0.43,134,1.328,135,1.87,137,0.717,140,2.099,144,1.262,145,2.388,153,0.941,154,0.787,158,0.657,163,0.54,170,0.902,171,1.278,174,1.315,185,1.05,193,1.495,201,1.412,206,0.468,209,1.621,220,1.787,221,1.659,222,1.412,224,1.861,226,2.32,230,2.858,235,3.526,236,1.018,237,2.228,238,2.569,239,2.376,240,3.787,241,2.74,242,3.546,243,3.63,244,3.017,245,3.488,246,2.74,247,3.948,248,2.858,249,3.235,250,3.199,251,3.549,252,2.74,253,2.74,254,1.878,255,3.073,256,1.886,257,1.886,258,1.886,259,3.235,260,1.878,261,2.014,262,1.886,263,1.878,264,1.886,265,1.878,266,1.878,267,1.878,268,1.412,269,1.886,270,1.886,271,1.886,272,1.886,273,1.886,274,1.886,275,1.886,276,1.878,277,2.228,278,2.376,279,1.152,280,1.152,281,0.867,282,2.665,283,1.984,284,1.878,285,1.701,286,1.152,287,1.081,288,1.152,289,1.081,290,1.226,291,1.152,292,2.42,293,1.152,294,1.152,295,1.152,296,1.081,297,1.152,298,1.152,299,1.152,300,1.081,301,1.081,302,2.376,303,1.878,304,1.018,305,1.152,306,1.152,307,1.152,308,1.152,309,1.152,310,1.152,311,1.152,312,1.152,313,1.152,314,1.152,315,2.665,316,1.081,317,1.152,318,0.962,319,1.152,320,1.152,321,1.878,322,1.152,323,1.152,324,1.486,325,1.152,326,0.912,327,1.152,328,1.152,329,1.152,330,1.152,331,1.878,332,1.152,333,1.152,334,1.152,335,1.152,336,1.152,337,1.081,338,1.878,339,1.152,340,1.152,341,1.878,342,1.152,343,1.152,344,1.152,345,1.152,346,1.152,347,1.152,348,1.152,349,1.152,350,1.152,351,1.152,352,1.152,353,1.152,354,1.152,355,1.152,356,1.152,357,1.152,358,1.152,359,1.152,360,1.152,361,1.152,362,1.152,363,2.702,364,1.878,365,1.152,366,2.376,367,2.376,368,1.152,369,2.376,370,1.152,371,1.152,372,1.152,373,1.878,374,1.152,375,1.152,376,1.659,377,1.622,378,1.152,379,1.659,380,1.878,381,1.878,382,2.354,383,2.815,384,1.152,385,1.152,386,1.152,387,1.761,388,1.152,389,1.152,390,1.761,391,1.152,392,1.152,393,1.878,394,1.316,395,1.878,396,1.152,397,1.152,398,1.152,399,1.878,400,1.152,401,1.152,402,1.152,403,1.152,404,1.761,405,1.152,406,1.152,407,1.761,408,1.761,409,1.152,410,1.152,411,1.152,412,1.081,413,1.152,414,1.152,415,1.152,416,1.152,417,1.152,418,1.152,419,1.081,420,1.152,421,1.081,422,1.081,423,1.152,424,1.081,425,1.152]],["title/classes/EnumValues.html",[21,0.024,426,2.728]],["body/classes/EnumValues.html",[2,0.272,3,0.272,7,0.196,18,0.016,20,0.27,21,0.04,29,1.237,67,0.013,68,0.013,123,0.498,124,1.738,129,1.033,131,1.656,132,0.817,133,1.469,134,1.393,209,1.103,226,1.89,290,1.846,426,4.561,427,4.079,428,6.54,429,6.438,430,6.438,431,6.438,432,5.261,433,6.438,434,6.438,435,5.261,436,7.248,437,4.548,438,5.261,439,5.261,440,5.261,441,5.261]],["title/components/EstimateOfDemandComponent.html",[0,0.535,35,1.179]],["body/components/EstimateOfDemandComponent.html",[0,0.889,1,0.828,2,0.211,3,0.14,4,0.983,5,0.983,6,0.983,7,0.101,9,0.983,10,2.705,11,1.674,13,1.7,15,1.7,17,0.497,18,0.017,19,0.414,20,0.113,21,0.017,23,0.671,24,1.483,25,1.148,26,1.419,27,1.988,28,0.983,29,1.051,30,0.983,31,0.828,32,1.684,33,1.325,34,0.983,35,1.674,36,2.229,37,0.983,38,0.828,39,0.983,40,0.828,41,0.901,42,1.483,43,0.793,44,0.983,45,0.828,46,0.983,47,0.828,48,1.568,49,0.828,50,0.983,51,0.983,52,0.828,53,0.941,54,1.483,55,0.828,56,1.359,57,0.828,58,0.983,59,0.828,60,0.983,61,0.793,62,0.983,63,0.828,64,0.983,65,0.828,66,0.983,67,0.008,68,0.008,97,1.028,109,2.336,121,1.148,123,0.517,124,1.1,129,1.178,131,0.971,132,0.695,133,0.93,134,1.341,144,1.539,145,2.644,153,0.828,156,3.639,160,3.767,161,1.954,163,0.717,164,3.361,165,2.812,166,2.548,167,3.911,168,3.767,169,3.911,170,0.793,171,1.055,174,1.794,177,2.999,178,1.551,179,2.491,182,1.459,204,3.361,205,3.533,206,1.012,209,1.342,211,1.379,220,1.242,223,2.888,224,1.822,282,3.556,283,1.379,285,2.697,326,2.644,382,1.028,426,1.915,442,6.034,443,5.41,444,2.336,445,2.671,446,4.077,447,4.077,448,4.077,449,2.336,450,5.331,451,3.911,452,2.391,453,3.132,454,2.703,455,2.703,456,2.703,457,4.077,458,2.703,459,2.703,460,2.703,461,2.703,462,2.703,463,1.771,464,1.771,465,1.771,466,1.771,467,1.771,468,2.703,469,1.771,470,2.095,471,2.703,472,2.703,473,5.071,474,1.915,475,1.915,476,1.651,477,1.549,478,1.568,479,1.915,480,2.336,481,1.771,482,4.908,483,1.771,484,2.703,485,2.703,486,2.095,487,1.771,488,1.771,489,2.374,490,4.243,491,2.703,492,1.379,493,2.336,494,2.336,495,2.703,496,2.336,497,2.095,498,1.771,499,2.095,500,2.703,501,1.915,502,2.336,503,2.703,504,2.336,505,2.336,506,1.651,507,2.703,508,4.077,509,4.077,510,4.077,511,4.077,512,4.077,513,3.16,514,3.16]],["title/components/FooterComponent.html",[0,0.535,38,1.179]],["body/components/FooterComponent.html",[0,0.973,1,1.321,2,0.293,3,0.223,4,1.569,5,1.569,6,1.569,7,0.16,9,1.569,10,2.869,11,2.2,13,2.366,15,2.366,17,0.312,18,0.016,19,0.66,20,0.181,21,0.027,23,1.071,24,2.064,25,1.597,26,1.976,27,2.451,28,1.569,29,1.091,30,1.569,31,1.321,32,1.744,33,1.164,34,1.569,35,1.321,36,1.502,37,1.569,38,2.063,39,1.569,40,1.321,41,1.438,42,2.064,43,1.266,44,1.569,45,1.321,46,1.569,47,1.321,48,2.026,49,1.321,50,1.569,51,1.569,52,1.321,53,1.502,54,2.064,55,1.321,56,1.438,57,1.321,58,1.569,59,1.321,60,1.569,61,1.266,62,1.569,63,1.321,64,1.569,65,1.321,66,1.569,67,0.012,68,0.012,121,1.597,123,0.408,124,1.532,129,0.911,132,0.486,134,0.829,161,2.524,163,0.998,166,2.682,170,1.266,171,1.117,174,1.409,209,1.329,498,3.718,506,3.467,515,3.729,516,5.674,517,5.674,518,5.674,519,7.187,520,4.313,521,5.674,522,4.313,523,5.674,524,5.674,525,4.313,526,4.313,527,3.729,528,3.729,529,3.729]],["title/classes/GoOn.html",[21,0.024,530,1.863]],["body/classes/GoOn.html",[2,0.213,3,0.213,7,0.153,17,0.398,18,0.017,20,0.304,21,0.044,29,0.793,32,1.725,33,1.114,67,0.011,68,0.011,86,1.714,97,1.57,121,1.998,123,0.587,129,0.996,131,0.983,132,0.879,133,0.942,163,0.969,170,1.211,171,1.068,178,2.801,193,1.376,206,1.025,209,1.301,226,2.189,261,4.339,281,1.897,290,1.851,394,1.211,478,2.352,530,3.203,531,2.228,532,4.555,533,4.749,534,2.704,535,5.511,536,4.127,537,3.158,538,2.228,539,2.228,540,3.166,541,3.166,542,3.166,543,1.805,544,2.521,545,2.365,546,4.215,547,2.365,548,2.365,549,2.365,550,2.365,551,2.365]],["title/components/GoogleMapComponent.html",[0,0.535,40,1.179]],["body/components/GoogleMapComponent.html",[0,0.821,1,0.843,2,0.213,3,0.142,4,1.503,5,1.001,6,1.001,7,0.102,9,1.001,10,2.713,11,1.689,17,0.299,18,0.017,19,0.421,20,0.115,21,0.017,23,0.683,24,1.503,25,1.397,26,1.439,27,2.006,28,1.001,29,1.136,30,1.001,31,0.843,32,1.533,33,1.489,34,1.001,35,0.843,36,0.958,37,1.001,38,0.843,39,1.001,40,1.689,41,1.654,42,1.503,43,0.808,44,1.001,45,0.843,46,1.001,47,0.843,48,1.888,49,0.843,50,1.001,51,1.001,52,0.843,53,0.958,54,1.503,55,0.843,56,0.917,57,0.843,58,1.001,59,0.843,60,1.001,61,0.808,62,1.001,63,0.843,64,1.001,65,0.843,66,1.001,67,0.008,68,0.008,85,3.171,121,1.163,123,0.26,124,1.115,129,1.163,131,1.181,132,0.836,133,1.132,134,0.954,144,0.775,161,1.975,163,0.727,166,2.195,170,1.945,174,1.541,193,1.839,204,4.068,206,0.683,209,1.42,224,1.839,226,1.213,261,2.708,290,1.369,296,1.577,407,2.368,408,2.368,489,1.999,490,3.572,546,1.681,552,6.32,553,2.379,554,4.962,555,4.409,556,4.132,557,4.132,558,4.523,559,4.768,560,4.768,561,4.768,562,5.367,563,4.768,564,4.768,565,4.068,566,2.752,567,3.793,568,4.992,569,4.132,570,4.276,571,3.203,572,2.752,573,5.516,574,2.752,575,4.132,576,4.132,577,3.572,578,2.752,579,4.132,580,4.132,581,2.752,582,3.908,583,4.132,584,3.572,585,2.752,586,3.203,587,5.367,588,5.516,589,2.752,590,2.752,591,3.572,592,4.132,593,3.203,594,2.752,595,4.132,596,4.276,597,2.752,598,3.572,599,4.132,600,2.752,601,2.752,602,4.132,603,2.928,604,2.752,605,4.132,606,2.379,607,2.752,608,2.379,609,1.803,610,2.752,611,2.752,612,2.752,613,2.752,614,2.752,615,2.752,616,2.752,617,2.752,618,2.379,619,2.379,620,2.379,621,2.379,622,2.379,623,2.379,624,2.379,625,2.379,626,2.379]],["title/components/HomeComponent.html",[0,0.535,43,1.13]],["body/components/HomeComponent.html",[0,0.904,1,1.069,2,0.254,3,0.18,4,1.27,5,1.27,6,1.27,7,0.13,9,1.27,10,2.802,11,2.065,13,2.049,15,2.049,17,0.411,18,0.017,19,0.535,20,0.146,21,0.022,22,3.809,23,0.867,24,1.788,25,1.6,26,1.711,27,2.245,28,1.27,29,1.093,30,1.27,31,1.069,32,1.65,33,0.942,34,1.27,35,1.069,36,1.216,37,1.27,38,1.069,39,1.27,40,1.069,41,1.164,42,1.788,43,1.811,44,1.27,45,1.069,46,1.27,47,1.069,48,1.816,49,1.069,50,1.27,51,1.27,52,1.069,53,1.216,54,1.788,55,1.069,56,1.164,57,1.069,58,1.27,59,1.069,60,1.27,61,1.025,62,1.27,63,1.069,64,1.27,65,1.069,66,1.27,67,0.01,68,0.01,116,1.39,121,1.383,123,0.33,124,1.326,129,0.99,131,0.831,132,0.394,133,0.797,134,1.186,144,1.831,147,4.248,150,3.331,153,1.889,154,2.049,161,2.263,163,0.864,166,2.456,170,1.025,171,0.904,174,1.532,206,0.867,222,2.836,290,1.22,382,2.163,383,3.146,505,4.248,568,5.229,596,2.707,598,4.248,627,3.018,628,4.915,629,4.914,630,4.914,631,5.334,632,5.334,633,3.018,634,4.914,635,3.491,636,3.491,637,5.334,638,3.018,639,3.809,640,3.491,641,3.018,642,3.491,643,6.746,644,3.491,645,3.491,646,3.491,647,5.686,648,3.491,649,4.914,650,3.491,651,4.914,652,4.914,653,3.491,654,3.491,655,4.248,656,3.491,657,4.248,658,4.914,659,4.914,660,4.914,661,3.491,662,3.491,663,3.491,664,3.018,665,3.491,666,4.914,667,3.018,668,3.491,669,4.248,670,3.809,671,3.809,672,4.248,673,2.652,674,3.809]],["title/components/InfoDialogComponent.html",[0,0.535,45,1.179]],["body/components/InfoDialogComponent.html",[0,0.967,1,1.297,2,0.377,3,0.219,4,2.04,5,1.541,6,1.541,7,0.157,9,1.541,10,2.864,11,2.048,17,0.405,18,0.016,19,0.648,20,0.178,21,0.026,23,1.052,24,2.04,25,1.578,26,1.952,27,2.434,28,1.541,29,1.208,30,1.541,31,1.297,32,1.736,33,1.143,34,1.541,35,1.297,36,1.475,37,1.541,38,1.297,39,1.541,40,1.297,41,1.412,42,2.04,43,1.243,44,1.541,45,2.048,46,1.541,47,1.297,48,2.008,49,1.297,50,1.541,51,1.541,52,1.297,53,1.475,54,2.04,55,1.297,56,1.412,57,1.297,58,1.541,59,1.297,60,1.541,61,1.243,62,1.541,63,1.297,64,1.541,65,1.297,66,1.541,67,0.011,68,0.011,123,0.401,129,1.009,131,1.008,132,0.709,133,0.967,153,2.295,163,0.986,191,1.952,206,1.392,226,2.099,565,2.775,675,5.783,676,3.661,677,4.847,678,4.872,679,6.016,680,4.235,681,7.15,682,4.235,683,3.283,684,4.235,685,4.235,686,4.235,687,2.427,688,4.235]],["title/modules/LocationModule.html",[69,0.956,81,2.523]],["body/modules/LocationModule.html",[2,0.288,3,0.288,7,0.207,17,0.516,18,0.016,19,0.854,20,0.28,21,0.035,23,1.385,67,0.014,68,0.014,69,1.656,71,2.564,72,3.404,73,2.847,74,2.976,81,5.026,85,2.918,86,1.444,87,2.699,89,3.065,689,4.823,690,4.823,691,4.14,692,5.58,693,5.58]],["title/injectables/LocationService.html",[191,1.341,691,2.078]],["body/injectables/LocationService.html",[2,0.181,3,0.181,7,0.13,17,0.356,18,0.017,19,0.536,20,0.147,21,0.022,29,0.946,41,1.899,53,1.714,67,0.012,68,0.01,86,1.599,123,0.331,124,1.668,129,1.136,131,1.172,132,0.696,133,1.124,134,1.402,135,3.185,137,1.332,150,2.657,158,1.714,163,0.866,174,1.534,191,1.983,206,1.414,224,2.251,226,2.23,290,1.414,300,2.821,301,2.821,363,1.786,377,1.46,379,2.657,394,1.028,498,4.048,506,2.139,555,3.263,558,3.226,571,5.489,691,2.657,694,3.026,695,4.256,696,4.256,697,4.256,698,4.256,699,3.54,700,4.923,701,6.434,702,5.996,703,6.752,704,4.923,705,5.628,706,6.178,707,4.923,708,4.923,709,4.923,710,3.501,711,6.178,712,5.837,713,5.234,714,4.923,715,3.501,716,4.923,717,5.341,718,3.501,719,3.501,720,4.923,721,3.501,722,6.178,723,3.501,724,3.501,725,5.694,726,4.923,727,4.923,728,3.501,729,3.026,730,4.923,731,3.026,732,3.501,733,3.501,734,4.923,735,3.501,736,3.501,737,3.501,738,3.026,739,3.501]],["title/components/MapComponent.html",[0,0.535,47,1.179]],["body/components/MapComponent.html",[0,0.822,1,0.665,2,0.178,3,0.112,4,0.791,5,0.791,6,0.791,7,0.081,9,0.791,10,2.608,11,1.49,13,1.436,15,1.436,17,0.477,18,0.017,19,0.333,20,0.091,21,0.013,23,0.54,24,1.253,25,0.969,26,1.199,27,1.77,28,0.791,29,0.935,30,0.791,31,0.665,32,1.54,33,0.93,34,0.791,35,0.665,36,0.757,37,0.791,38,0.665,39,0.791,40,0.665,41,0.725,42,1.253,43,0.638,44,0.791,45,0.665,46,0.791,47,1.49,48,1.803,49,0.665,50,0.791,51,0.791,52,0.665,53,0.757,54,1.253,55,0.665,56,1.426,57,0.665,58,0.791,59,0.665,60,0.791,61,0.638,62,0.791,63,0.665,64,0.791,65,0.665,66,0.791,67,0.007,68,0.007,85,2.32,97,0.827,116,0.865,121,0.969,123,0.206,124,0.93,129,1.173,131,0.82,132,0.757,133,0.976,134,1.244,144,1.37,154,0.906,156,3.409,160,3.448,161,1.703,163,0.606,164,3.039,165,2.451,166,2.354,167,3.613,168,3.613,169,3.613,170,0.638,171,0.563,174,1.733,177,2.613,178,1.31,179,2.104,182,1.173,193,1.882,206,0.855,209,1.447,220,2.236,224,1.426,240,3.478,242,1.973,250,2.451,283,2.483,285,2.129,290,1.062,376,1.173,377,0.906,382,2.018,383,2.069,387,1.245,390,1.973,394,1.8,404,1.245,445,2.257,451,3.448,452,2.129,463,1.424,464,1.424,465,1.424,466,1.424,467,1.424,469,1.424,476,1.328,477,1.245,478,1.366,479,1.54,480,1.879,481,1.424,483,1.424,487,1.424,488,1.424,489,2.069,492,1.109,493,2.977,494,2.977,496,1.879,497,4.375,501,1.54,504,2.977,555,3.619,558,3.698,559,4.207,560,4.207,561,4.207,562,4.207,563,4.207,564,4.207,565,3.189,567,2.973,570,2.67,571,3.316,582,2.44,584,3.698,586,1.685,587,1.879,593,3.316,606,1.879,618,3.698,619,1.879,620,1.879,621,1.879,622,1.879,623,1.879,624,1.879,625,1.879,626,3.698,631,1.879,667,1.879,699,2.451,740,1.879,741,2.67,742,2.67,743,3.444,744,3.444,745,3.444,746,1.685,747,3.444,748,2.173,749,2.173,750,2.173,751,3.444,752,2.173,753,2.173,754,2.173,755,2.173,756,2.173,757,2.173,758,2.173,759,2.173,760,2.173,761,2.173,762,1.685,763,2.173,764,2.173,765,1.54,766,2.67,767,2.173,768,1.54,769,1.685,770,2.173,771,1.879,772,1.879,773,2.173,774,3.444,775,3.444,776,2.104,777,1.879,778,2.613,779,2.173,780,2.173,781,1.685,782,2.803,783,3.444,784,2.173,785,2.173,786,2.173,787,4.879,788,2.44,789,2.173,790,2.173,791,2.173,792,2.67,793,2.173,794,2.173,795,2.173,796,1.424,797,2.173,798,2.173,799,1.879,800,2.173,801,2.173,802,2.173,803,2.173,804,2.173,805,3.444,806,2.173,807,2.173,808,2.67,809,4.277,810,2.173,811,3.444,812,3.444,813,2.173,814,2.173,815,2.173,816,2.173,817,2.173,818,2.173,819,2.173,820,2.173,821,2.173]],["title/modules/MaterialModule.html",[69,0.956,822,2.206]],["body/modules/MaterialModule.html",[2,0.272,3,0.272,7,0.196,17,0.524,18,0.016,19,0.806,20,0.27,21,0.033,67,0.013,68,0.013,69,1.306,89,2.959,92,4.079,93,3.728,144,1.481,687,3.015,822,4.26,823,4.079,824,5.565,825,5.565,826,5.565,827,6.438,828,5.565,829,5.565,830,5.565,831,5.565,832,5.565,833,5.565,834,5.565,835,5.565,836,5.565,837,5.565,838,5.565,839,6.956,840,5.261,841,6.438,842,5.261,843,5.261,844,5.261,845,5.261]],["title/interfaces/Member.html",[185,1.039,292,2.078]],["body/interfaces/Member.html",[2,0.111,3,0.22,7,0.08,17,0.247,18,0.017,20,0.256,21,0.03,25,0.962,67,0.007,68,0.007,115,1.233,116,0.856,123,0.204,129,0.345,132,0.689,134,1.352,135,2.018,137,0.818,140,2.294,144,1.362,145,2.553,153,1.046,154,0.897,158,0.749,163,0.601,171,0.884,174,1.311,185,1.306,193,1.613,201,0.989,209,1.591,220,1.953,221,1.844,222,0.989,224,1.964,226,2.282,230,2.849,235,3.555,236,1.161,237,1.958,238,2.435,239,2.087,240,3.781,241,1.314,242,3.375,243,3.375,244,2.087,245,3.179,246,1.314,247,3.734,248,1.844,249,2.087,250,2.773,251,3.299,252,1.314,253,1.314,254,1.314,259,2.596,260,1.314,263,1.314,265,1.314,266,1.314,267,1.314,268,0.989,276,1.314,277,1.958,278,2.087,279,1.314,280,1.314,281,0.989,282,2.849,283,2.168,284,2.087,285,1.859,286,1.314,287,1.233,288,1.314,289,1.233,290,1.563,291,2.087,292,3.033,293,2.956,294,2.956,295,1.314,296,1.233,297,1.314,298,1.314,299,1.314,300,1.233,301,1.233,302,2.596,303,2.087,304,1.161,305,1.314,306,1.314,307,1.314,308,1.314,309,1.314,310,1.314,311,1.314,312,1.314,313,1.314,314,1.314,315,2.849,316,1.233,317,1.314,318,1.098,319,1.314,320,1.314,321,2.087,322,1.314,323,1.314,324,1.653,325,1.314,326,1.041,327,1.314,328,1.314,329,1.314,330,1.314,331,2.087,332,1.314,333,1.314,334,1.314,335,1.314,336,1.314,337,1.233,338,2.087,339,1.314,340,1.314,341,2.087,342,1.314,343,1.314,344,1.314,345,1.314,346,1.314,347,1.314,348,1.314,349,1.314,350,1.314,351,1.314,352,1.314,353,1.314,354,1.314,355,1.314,356,1.314,357,1.314,358,1.314,359,1.314,360,1.314,361,1.314,362,1.314,363,2.867,364,2.087,365,1.314,366,2.596,367,2.596,368,1.314,369,2.596,370,1.314,371,1.314,372,1.314,373,2.087,374,1.314,375,1.314,376,1.844,377,1.772,378,1.314,379,1.844,380,2.087,381,2.087,382,2.454,383,2.956,384,1.314,385,1.314,386,1.314,387,1.958,388,1.314,389,1.314,390,1.958,391,1.314,392,1.314,393,2.087,394,1.42,395,2.087,396,1.314,397,1.314,398,1.314,399,2.087,400,1.314,401,1.314,402,1.314,403,1.314,404,1.958,405,1.314,406,1.314,407,1.958,408,1.958,409,1.314,410,1.314,411,1.314,412,1.233,413,1.314,414,1.314,415,1.314,416,1.314,417,1.314,418,1.314,419,1.233,420,1.314,421,1.233,422,1.233,423,1.314,424,1.233,425,1.314]],["title/components/MessageArchivedComponent.html",[0,0.535,49,1.179]],["body/components/MessageArchivedComponent.html",[0,0.981,1,1.357,2,0.298,3,0.229,4,2.101,5,1.612,6,1.612,7,0.165,9,1.612,10,2.877,11,2.085,17,0.417,18,0.016,19,0.679,20,0.186,21,0.027,23,1.1,24,2.101,25,1.626,26,2.011,27,2.477,28,1.612,29,1.235,30,1.612,31,1.357,32,1.755,33,1.196,34,1.612,35,1.357,36,1.543,37,1.612,38,1.357,39,1.612,40,1.357,41,1.478,42,2.101,43,1.301,44,1.612,45,1.357,46,1.612,47,1.357,48,2.053,49,2.085,50,2.338,51,1.612,52,1.357,53,1.543,54,2.101,55,1.357,56,1.478,57,1.357,58,1.612,59,1.357,60,1.612,61,1.301,62,1.612,63,1.357,64,1.612,65,1.357,66,1.612,67,0.012,68,0.012,123,0.419,129,0.927,131,1.055,132,0.651,133,1.011,153,2.289,163,1.016,191,2.011,206,1.1,226,1.886,565,2.904,683,3.435,687,2.539,846,5.555,847,3.831,848,5.776,849,4.431,850,4.431,851,4.431,852,4.431,853,4.431]],["title/modules/NetworkModule.html",[69,0.956,82,2.523]],["body/modules/NetworkModule.html",[2,0.28,3,0.28,7,0.201,17,0.542,18,0.016,19,0.829,20,0.275,21,0.034,23,1.345,67,0.013,68,0.013,69,1.627,71,2.489,72,3.343,73,2.763,74,2.938,82,5.095,85,2.866,86,1.402,87,2.62,89,3.011,453,4.365,854,4.682,855,4.682,856,4.682,857,4.991,858,5.416,859,5.416,860,5.416]],["title/classes/Node.html",[21,0.024,240,1.965]],["body/classes/Node.html",[2,0.102,3,0.208,7,0.074,17,0.231,18,0.017,20,0.249,21,0.031,25,0.9,29,0.381,67,0.007,68,0.007,115,1.135,116,0.788,123,0.187,129,1.032,131,0.471,132,0.751,133,0.452,134,1.329,135,1.924,137,0.753,140,2.17,144,1.299,145,2.449,153,0.979,154,0.826,158,0.689,163,0.562,170,1.355,171,1.402,174,1.257,185,1.085,193,1.539,201,0.91,206,0.492,209,1.607,220,1.847,221,1.725,222,0.91,224,1.9,226,2.309,230,2.733,235,3.623,236,1.069,237,1.832,238,2.303,239,1.953,240,3.769,241,1.21,242,3.264,243,3.264,244,3.094,245,3.075,246,1.21,247,3.622,248,1.725,249,1.953,250,2.644,251,3.594,252,1.21,253,1.21,254,1.21,259,2.456,260,1.21,261,2.095,263,1.21,265,1.21,266,1.21,267,1.21,268,0.91,276,1.21,277,1.832,278,1.953,279,1.21,280,1.21,281,0.91,282,2.733,283,2.051,284,1.953,285,1.759,286,1.21,287,1.135,288,1.21,289,1.135,290,1.257,291,1.21,292,2.491,293,1.21,294,1.21,295,1.953,296,1.832,297,1.953,298,1.953,299,1.953,300,1.832,301,1.832,302,3.481,303,3.094,304,2.491,305,2.819,306,2.819,307,2.819,308,1.21,309,1.21,310,1.953,311,1.21,312,1.21,313,1.21,314,1.21,315,2.733,316,1.135,317,1.21,318,1.01,319,1.21,320,1.21,321,1.953,322,1.21,323,1.21,324,1.546,325,1.21,326,0.958,327,1.21,328,1.21,329,1.21,330,1.21,331,1.953,332,1.21,333,1.21,334,1.21,335,1.21,336,1.21,337,1.135,338,1.953,339,1.21,340,1.21,341,1.953,342,1.21,343,1.21,344,1.21,345,1.21,346,1.21,347,1.21,348,1.21,349,1.21,350,1.21,351,1.21,352,1.21,353,1.21,354,1.21,355,1.21,356,1.21,357,1.21,358,1.21,359,1.21,360,1.21,361,1.21,362,1.21,363,2.763,364,1.953,365,1.21,366,2.456,367,2.456,368,1.21,369,2.456,370,1.21,371,1.21,372,1.21,373,1.953,374,1.21,375,1.21,376,1.725,377,1.676,378,1.21,379,1.725,380,1.953,381,1.953,382,2.392,383,2.868,384,1.21,385,1.21,386,1.21,387,1.832,388,1.21,389,1.21,390,1.832,391,1.21,392,1.21,393,1.953,394,1.355,395,1.953,396,1.21,397,1.21,398,1.21,399,1.953,400,1.21,401,1.21,402,1.21,403,1.21,404,1.832,405,1.21,406,1.21,407,1.832,408,1.832,409,1.21,410,1.21,411,1.21,412,1.135,413,1.21,414,1.21,415,1.21,416,1.21,417,1.21,418,1.21,419,1.135,420,1.21,421,1.135,422,1.135,423,1.21,424,1.135,425,1.21,861,3.197,862,1.98,863,1.98,864,1.98,865,1.98,866,1.98,867,1.98,868,1.98]],["title/interfaces/OdPair.html",[185,1.039,285,1.684]],["body/interfaces/OdPair.html",[2,0.111,3,0.219,7,0.08,17,0.246,18,0.017,20,0.256,21,0.03,25,0.958,67,0.007,68,0.007,115,1.227,116,0.852,123,0.203,129,0.344,132,0.632,134,1.351,135,2.012,137,0.814,140,2.286,144,1.358,145,2.712,153,1.042,154,0.893,158,0.745,163,0.598,171,0.881,174,1.307,185,1.303,193,1.609,201,0.984,209,1.599,220,2.218,221,1.837,222,0.984,224,1.96,226,2.281,230,2.842,235,3.551,236,1.156,237,1.95,238,2.427,239,2.079,240,3.795,241,1.308,242,3.767,243,3.368,244,2.079,245,3.173,246,1.308,247,3.727,248,1.837,249,2.079,250,3.495,251,3.293,252,1.308,253,1.308,254,1.308,259,2.588,260,1.308,263,1.308,265,1.308,266,1.308,267,1.308,268,0.984,276,1.308,277,1.95,278,2.079,279,1.308,280,1.308,281,0.984,282,3.477,283,2.462,284,2.588,285,2.111,286,1.308,287,1.227,288,1.308,289,1.227,290,1.307,291,1.308,292,2.605,293,1.308,294,1.308,295,1.308,296,1.227,297,1.308,298,1.308,299,1.308,300,1.227,301,1.227,302,2.588,303,2.079,304,1.156,305,1.308,306,1.308,307,1.308,308,1.308,309,1.308,310,1.308,311,1.308,312,1.308,313,1.308,314,1.308,315,2.842,316,1.227,317,1.308,318,1.092,319,1.308,320,1.308,321,2.079,322,1.308,323,1.308,324,1.646,325,1.308,326,1.036,327,1.308,328,1.308,329,1.308,330,1.308,331,2.079,332,1.308,333,1.308,334,1.308,335,1.308,336,1.308,337,1.227,338,2.079,339,1.308,340,1.308,341,2.079,342,1.308,343,1.308,344,1.308,345,1.308,346,1.308,347,1.308,348,1.308,349,1.308,350,1.308,351,1.308,352,1.308,353,1.308,354,1.308,355,1.308,356,1.308,357,1.308,358,1.308,359,1.308,360,1.308,361,1.308,362,1.308,363,2.861,364,2.079,365,1.308,366,2.588,367,2.588,368,1.308,369,2.588,370,1.308,371,1.308,372,1.308,373,2.079,374,1.308,375,1.308,376,1.837,377,1.766,378,1.308,379,1.837,380,2.079,381,2.079,382,2.45,383,2.951,384,1.308,385,1.308,386,1.308,387,1.95,388,1.308,389,1.308,390,1.95,391,1.308,392,1.308,393,2.079,394,1.416,395,2.079,396,1.308,397,1.308,398,1.308,399,2.079,400,1.308,401,1.308,402,1.308,403,1.308,404,1.95,405,1.308,406,1.308,407,1.95,408,1.95,409,1.308,410,1.308,411,1.308,412,1.227,413,1.308,414,1.308,415,1.308,416,1.308,417,1.308,418,1.308,419,1.227,420,1.308,421,1.227,422,1.227,423,1.308,424,1.227,425,1.308]],["title/classes/Relation.html",[21,0.024,315,2.078]],["body/classes/Relation.html",[2,0.108,3,0.215,7,0.078,17,0.241,18,0.017,20,0.253,21,0.032,25,1.172,29,0.401,67,0.007,68,0.007,115,1.91,116,0.83,123,0.197,129,0.834,131,0.496,132,0.625,133,0.476,134,1.344,135,1.983,137,0.793,140,2.247,144,1.338,145,2.514,153,1.456,154,0.87,158,0.726,163,0.586,170,0.612,171,1.078,174,1.291,185,1.124,193,1.585,201,0.958,206,0.518,209,1.594,220,1.913,221,1.799,222,0.958,224,1.94,226,2.295,230,2.806,235,3.53,236,1.126,237,1.91,238,2.724,239,2.543,240,3.764,241,1.274,242,3.334,243,3.334,244,2.036,245,3.14,246,1.274,247,3.692,248,1.799,249,2.036,250,2.724,251,3.642,252,1.274,253,1.274,254,1.274,259,2.543,260,1.274,263,1.274,265,1.274,266,1.274,267,1.274,268,0.958,276,1.274,277,1.91,278,2.036,279,1.274,280,1.274,281,0.958,282,2.806,283,2.124,284,2.036,285,1.821,286,1.274,287,1.195,288,1.274,289,1.195,290,1.291,291,1.274,292,3.363,293,1.274,294,1.274,295,1.274,296,1.195,297,1.274,298,1.274,299,1.274,300,1.195,301,1.195,302,2.543,303,2.036,304,1.126,305,1.274,306,1.274,307,1.274,308,1.274,309,1.274,310,1.274,311,1.274,312,1.274,313,1.274,314,1.274,315,3.14,316,1.91,317,2.036,318,1.701,319,2.036,320,2.036,321,3.386,322,2.036,323,1.274,324,1.612,325,1.274,326,1.009,327,1.274,328,1.274,329,1.274,330,1.274,331,2.036,332,1.274,333,1.274,334,1.274,335,1.274,336,1.274,337,1.195,338,2.036,339,1.274,340,1.274,341,2.036,342,1.274,343,1.274,344,1.274,345,1.274,346,1.274,347,1.274,348,1.274,349,1.274,350,1.274,351,1.274,352,1.274,353,1.274,354,1.274,355,1.274,356,1.274,357,1.274,358,1.274,359,1.274,360,1.274,361,1.274,362,1.274,363,2.828,364,2.036,365,1.274,366,2.543,367,2.543,368,1.274,369,2.543,370,1.274,371,1.274,372,1.274,373,2.036,374,1.274,375,1.274,376,1.799,377,1.736,378,1.274,379,1.799,380,2.036,381,2.036,382,2.431,383,2.923,384,1.274,385,1.274,386,1.274,387,1.91,388,1.274,389,1.274,390,1.91,391,1.274,392,1.274,393,2.036,394,1.396,395,2.036,396,1.274,397,1.274,398,1.274,399,2.036,400,1.274,401,1.274,402,1.274,403,1.274,404,1.91,405,1.274,406,1.274,407,1.91,408,1.91,409,1.274,410,1.274,411,1.274,412,1.195,413,1.274,414,1.274,415,1.274,416,1.274,417,1.274,418,1.274,419,1.195,420,1.274,421,1.195,422,1.195,423,1.274,424,1.195,425,1.274,869,3.333,870,2.086,871,2.086]],["title/classes/Reset.html",[21,0.024,86,0.997]],["body/classes/Reset.html",[2,0.216,3,0.216,7,0.155,17,0.402,18,0.017,20,0.305,21,0.044,29,0.804,32,1.731,33,1.129,67,0.011,68,0.011,86,1.794,97,1.59,121,2.005,123,0.591,129,1.002,131,0.995,132,0.864,133,0.954,163,0.978,170,1.227,171,1.082,178,2.809,193,1.394,206,1.038,209,1.309,226,2.194,281,1.921,290,1.856,394,1.227,478,2.359,530,3.021,531,2.256,532,4.567,533,4.764,534,2.739,537,2.395,538,2.256,539,2.256,540,3.186,541,3.186,542,3.186,543,1.829,544,2.554,545,2.395,546,4.233,547,2.395,548,2.395,549,2.395,550,3.185,551,2.395,872,5.559,873,4.181]],["title/components/SearchForTheAreaComponent.html",[0,0.535,52,1.179]],["body/components/SearchForTheAreaComponent.html",[0,0.884,1,0.814,2,0.208,3,0.137,4,0.967,5,0.967,6,0.967,7,0.099,9,0.967,10,2.699,11,1.66,13,1.679,15,1.679,17,0.421,18,0.017,19,0.407,20,0.111,21,0.016,23,0.66,24,1.465,25,1.133,26,1.402,27,1.972,28,0.967,29,1.042,30,0.967,31,0.814,32,1.655,33,1.312,34,0.967,35,0.814,36,0.926,37,0.967,38,0.814,39,0.967,40,0.814,41,0.886,42,1.465,43,0.78,44,0.967,45,0.814,46,0.967,47,0.814,48,1.552,49,0.814,50,0.967,51,0.967,52,1.66,53,2.421,54,1.465,55,0.814,56,0.886,57,0.814,58,0.967,59,0.814,60,0.967,61,0.78,62,0.967,63,0.814,64,0.967,65,0.814,66,0.967,67,0.011,68,0.008,121,1.133,123,0.513,124,1.087,129,1.166,131,0.958,132,0.656,133,0.919,134,1.336,153,0.814,156,3.623,160,3.744,161,1.934,163,0.708,164,3.337,165,2.784,166,2.534,167,3.888,168,3.888,169,3.888,170,0.78,171,1.042,174,1.83,177,2.969,178,1.531,179,2.46,182,1.435,204,3.337,205,3.511,206,1,209,0.844,211,1.356,224,1.342,268,1.85,290,1.346,304,2.173,382,1.011,394,1.799,445,2.638,452,2.371,463,1.742,464,1.742,465,1.742,466,1.742,467,1.742,469,1.742,474,1.883,478,1.286,481,1.742,483,1.742,486,2.061,487,1.742,488,1.742,489,3.246,492,3.345,498,1.742,499,2.061,513,3.121,514,3.121,543,1.761,691,2.926,697,2.298,698,2.298,699,2.307,702,2.298,705,4.685,713,3.767,717,5.297,729,2.298,731,2.298,738,2.298,776,1.624,778,2.969,782,3.184,874,5.914,875,5.304,876,2.061,877,3.48,878,3.48,879,2.658,880,4.202,881,4.026,882,2.658,883,2.658,884,2.658,885,2.658,886,4.026,887,2.658,888,2.658,889,2.658,890,2.061,891,2.658,892,4.026,893,2.298,894,2.658,895,4.026,896,2.658,897,3.48,898,2.658,899,4.026,900,4.026,901,2.658,902,2.658,903,2.658,904,2.658,905,2.658,906,2.658,907,2.658,908,2.658,909,2.298,910,2.658,911,2.658,912,2.658,913,2.658,914,4.026,915,3.84,916,2.658,917,2.298,918,2.658,919,2.658,920,2.658,921,2.658,922,2.658,923,2.658,924,2.658,925,2.658,926,2.298]],["title/components/SelectionOfTheAreaComponent.html",[0,0.535,55,1.179]],["body/components/SelectionOfTheAreaComponent.html",[0,0.897,1,0.85,2,0.215,3,0.143,4,1.01,5,1.01,6,1.01,7,0.103,9,1.01,10,2.716,11,1.696,13,1.734,15,1.734,17,0.491,18,0.017,19,0.425,20,0.116,21,0.017,23,0.689,24,1.513,25,1.171,26,1.448,27,2.015,28,1.01,29,0.959,30,1.01,31,0.85,32,1.693,33,1.346,34,1.01,35,0.85,36,0.966,37,1.01,38,0.85,39,1.01,40,0.85,41,0.925,42,1.513,43,0.815,44,1.01,45,0.85,46,1.01,47,0.85,48,1.769,49,0.85,50,1.01,51,1.01,52,0.85,53,0.966,54,1.513,55,1.696,56,2.306,57,0.85,58,1.01,59,0.85,60,1.01,61,0.815,62,1.01,63,0.85,64,1.01,65,0.85,66,1.01,67,0.009,68,0.009,97,1.056,121,1.171,123,0.524,124,1.123,129,1.175,131,0.661,132,0.624,133,1.138,134,1.382,153,0.85,156,3.666,160,3.805,161,1.985,163,0.731,164,3.399,165,2.858,166,2.571,167,3.945,168,3.945,169,3.945,170,0.815,171,1.077,174,1.786,177,3.047,178,1.582,179,2.541,182,1.498,204,3.399,205,3.569,206,1.032,209,0.872,211,1.416,224,1.663,238,2.383,268,3.052,326,2.679,445,2.725,451,3.805,452,2.423,453,3.174,463,1.819,464,1.819,465,1.819,466,1.819,467,1.819,469,1.819,470,2.151,474,1.966,475,1.966,476,1.696,477,1.59,478,1.328,479,1.966,481,1.819,483,1.819,486,2.151,487,1.819,488,1.819,489,1.342,498,1.819,499,2.151,501,1.966,502,2.399,506,2.541,513,3.224,514,3.224,673,3.733,699,2.383,746,2.151,768,1.966,769,2.151,808,3.224,876,2.151,877,3.595,878,3.595,927,5.979,928,5.362,929,2.775,930,2.775,931,2.775,932,2.775,933,2.775,934,2.775,935,2.775,936,5.539,937,2.775,938,2.775,939,5.539,940,5.384,941,5.539,942,2.775,943,2.775,944,4.159,945,2.775,946,2.775,947,2.775,948,2.775,949,2.775,950,2.775,951,2.775,952,2.775,953,2.775,954,4.159,955,4.159,956,4.159,957,4.788,958,4.159,959,4.159,960,3.224,961,3.595,962,4.159]],["title/modules/SharedModule.html",[69,0.956,83,2.078]],["body/modules/SharedModule.html",[2,0.289,3,0.218,7,0.157,17,0.558,18,0.017,19,0.647,20,0.28,21,0.026,23,1.05,38,2.35,45,2.376,49,2.376,67,0.011,68,0.011,69,1.39,71,1.943,72,3.204,73,2.158,74,2.336,83,4.27,85,2.45,86,1.095,87,2.045,89,2.886,134,0.813,136,2.282,142,3.968,144,1.19,188,2.583,194,3.422,211,2.158,226,1.241,428,3.655,822,4.369,915,2.996,963,3.655,964,3.655,965,3.655,966,3.655,967,3.278,968,5.601,969,5.601,970,4.842,971,3.655,972,4.842,973,3.655,974,4.842,975,4.842,976,4.842,977,3.655,978,3.655,979,4.228,980,4.228,981,3.655,982,3.655,983,3.278,984,4.228]],["title/components/SimulationComponent.html",[0,0.535,57,1.179]],["body/components/SimulationComponent.html",[0,0.976,1,1.334,2,0.295,3,0.225,4,1.585,5,1.585,6,1.585,7,0.162,9,1.585,10,2.872,11,2.071,13,2.382,15,2.382,17,0.413,18,0.016,19,0.667,20,0.183,21,0.027,23,1.082,24,2.078,25,1.608,26,1.989,27,2.461,28,1.585,29,1.098,30,1.585,31,1.334,32,1.794,33,1.176,34,1.585,35,1.334,36,1.517,37,1.585,38,1.334,39,1.585,40,1.334,41,1.453,42,2.078,43,1.279,44,1.585,45,1.334,46,1.585,47,1.334,48,2.036,49,1.334,50,1.585,51,1.585,52,1.334,53,1.517,54,2.078,55,1.334,56,1.453,57,2.071,58,1.585,59,1.334,60,1.585,61,1.279,62,1.585,63,1.334,64,1.585,65,1.334,66,1.585,67,0.012,68,0.012,121,1.608,123,0.64,124,1.542,129,1.086,132,0.644,134,0.837,150,3.083,161,2.537,166,2.693,174,1.418,204,4.024,205,4.129,206,1.582,209,1.197,211,2.223,985,3.766,986,5.712,987,5.712,988,5.712,989,4.357,990,4.357]],["title/modules/SimulationModule.html",[69,0.956,84,2.523]],["body/modules/SimulationModule.html",[2,0.288,3,0.288,7,0.207,17,0.516,18,0.016,19,0.854,20,0.28,21,0.035,23,1.385,67,0.014,68,0.014,69,1.656,71,2.564,72,3.404,73,2.847,74,2.976,84,5.026,85,2.918,86,1.444,87,2.699,89,3.065,991,4.823,992,4.823,993,4.686,994,5.58,995,5.58]],["title/injectables/SimulationService.html",[191,1.341,993,2.352]],["body/injectables/SimulationService.html",[2,0.289,3,0.289,7,0.208,17,0.405,18,0.016,19,0.858,20,0.235,21,0.035,67,0.014,68,0.014,86,1.917,123,0.53,124,1.805,129,0.899,134,1.077,158,1.951,174,1.66,191,2.489,222,3.073,226,2.098,248,3.61,422,3.832,591,5.781,993,4.086,996,4.844,997,6.688,998,5.604]],["title/components/StatisticsComponent.html",[0,0.535,59,1.179]],["body/components/StatisticsComponent.html",[0,0.976,1,1.334,2,0.295,3,0.225,4,1.585,5,1.585,6,1.585,7,0.162,9,1.585,10,2.872,11,2.071,13,2.382,15,2.382,17,0.413,18,0.016,19,0.667,20,0.183,21,0.027,23,1.082,24,2.078,25,1.608,26,1.989,27,2.461,28,1.585,29,1.098,30,1.585,31,1.334,32,1.794,33,1.176,34,1.585,35,1.334,36,1.517,37,1.585,38,1.334,39,1.585,40,1.334,41,1.453,42,2.078,43,1.279,44,1.585,45,1.334,46,1.585,47,1.334,48,2.036,49,1.334,50,1.585,51,1.585,52,1.334,53,1.517,54,2.078,55,1.334,56,1.453,57,1.334,58,1.585,59,2.071,60,1.585,61,1.279,62,1.585,63,1.334,64,1.585,65,1.334,66,1.585,67,0.012,68,0.012,121,1.608,123,0.64,124,1.542,129,1.086,132,0.644,134,0.837,161,2.537,166,2.693,174,1.418,204,4.024,205,4.129,206,1.582,209,1.197,211,2.223,999,3.766,1000,4.938,1001,5.712,1002,5.712,1003,5.712,1004,4.357,1005,4.357]],["title/interfaces/Step.html",[185,1.039,478,1.23]],["body/interfaces/Step.html",[2,0.294,3,0.294,7,0.212,18,0.016,20,0.283,67,0.014,68,0.014,123,0.538,132,0.641,144,1.602,153,2.359,158,1.981,163,1.187,182,3.643,185,1.822,478,2.461,582,4.031,1006,4.411,1007,6.22]],["title/classes/StepChanged.html",[21,0.024,540,1.965]],["body/classes/StepChanged.html",[2,0.213,3,0.213,7,0.153,17,0.398,18,0.017,20,0.304,21,0.044,29,0.793,32,1.725,33,1.114,67,0.011,68,0.011,86,1.714,97,1.57,121,1.998,123,0.587,129,0.996,131,0.983,132,0.879,133,0.942,163,0.969,170,1.211,171,1.068,178,2.801,193,1.376,206,1.025,209,1.301,226,2.189,261,4.339,281,1.897,290,1.851,394,1.211,478,2.352,530,3.001,531,2.228,532,4.555,533,4.749,534,2.704,537,2.365,538,2.228,539,2.228,540,3.379,541,3.166,542,3.166,543,1.805,544,2.521,545,3.158,546,4.215,547,2.365,548,2.365,549,2.365,550,2.365,551,2.365,1008,5.511,1009,4.127]],["title/classes/StepError.html",[21,0.024,541,1.965]],["body/classes/StepError.html",[2,0.215,3,0.215,7,0.154,17,0.4,18,0.017,20,0.304,21,0.044,29,0.798,32,1.728,33,1.121,67,0.011,68,0.011,86,1.719,97,1.58,121,2.002,123,0.589,129,0.999,131,0.989,132,0.863,133,0.948,163,0.973,170,1.219,171,1.075,178,2.805,193,1.385,206,1.031,209,1.305,226,2.191,281,1.909,290,1.912,394,1.219,478,2.355,530,3.011,531,2.242,532,4.561,533,4.756,534,2.722,537,2.38,538,2.242,539,2.242,540,3.176,541,3.387,542,3.176,543,1.817,544,2.538,545,2.38,546,4.224,547,3.171,548,2.38,549,2.38,550,2.38,551,2.38,1010,5.535,1011,4.154]],["title/classes/StepPending.html",[21,0.024,542,1.965]],["body/classes/StepPending.html",[2,0.212,3,0.212,7,0.152,17,0.397,18,0.017,20,0.303,21,0.044,29,0.788,32,1.722,33,1.107,67,0.011,68,0.011,86,1.71,97,1.56,121,1.994,123,0.585,129,0.993,131,0.976,132,0.861,133,0.936,163,0.965,170,1.204,171,1.062,178,2.797,193,2.295,206,1.018,209,1.296,226,2.186,281,1.885,290,1.909,394,1.204,478,2.349,530,2.992,531,2.214,532,4.549,533,4.741,534,2.687,537,2.35,538,2.214,539,2.214,540,3.156,541,3.156,542,3.37,543,1.794,544,2.505,545,2.35,546,4.206,547,2.35,548,3.144,549,2.35,550,2.35,551,2.35,1012,5.488,1013,4.101]],["title/interfaces/Tag.html",[185,1.039,251,2.078]],["body/interfaces/Tag.html",[2,0.111,3,0.22,7,0.08,17,0.247,18,0.017,20,0.256,21,0.03,25,1.198,67,0.007,68,0.007,115,1.236,116,0.859,123,0.204,129,0.346,132,0.546,134,1.353,135,2.021,137,0.82,140,2.297,144,1.364,145,2.556,153,1.048,154,0.899,158,0.751,163,0.602,171,1.368,174,1.312,185,1.308,193,1.616,201,0.991,209,1.583,220,1.956,221,1.848,222,0.991,224,1.966,226,2.283,230,2.853,235,3.556,236,1.164,237,1.961,238,2.439,239,2.091,240,3.783,241,1.318,242,3.378,243,3.378,244,2.091,245,3.182,246,1.318,247,3.737,248,1.848,249,2.091,250,2.777,251,3.484,252,1.318,253,1.318,254,1.318,259,2.6,260,1.318,263,1.318,265,1.318,266,1.318,267,1.318,268,0.991,276,1.318,277,1.961,278,2.091,279,1.318,280,1.318,281,0.991,282,2.853,283,2.172,284,2.6,285,1.862,286,2.091,287,1.961,288,2.091,289,2.777,290,1.564,291,1.318,292,2.616,293,1.318,294,1.318,295,1.318,296,1.236,297,1.318,298,1.318,299,1.318,300,1.236,301,1.236,302,2.6,303,2.091,304,1.164,305,1.318,306,1.318,307,1.318,308,1.318,309,1.318,310,1.318,311,1.318,312,1.318,313,1.318,314,1.318,315,2.853,316,1.236,317,1.318,318,1.101,319,1.318,320,1.318,321,2.091,322,1.318,323,1.318,324,1.656,325,1.318,326,1.043,327,1.318,328,1.318,329,1.318,330,1.318,331,2.091,332,1.318,333,1.318,334,1.318,335,1.318,336,1.318,337,1.236,338,2.091,339,1.318,340,1.318,341,2.091,342,1.318,343,1.318,344,1.318,345,1.318,346,1.318,347,1.318,348,1.318,349,1.318,350,1.318,351,1.318,352,1.318,353,1.318,354,1.318,355,1.318,356,1.318,357,1.318,358,1.318,359,1.318,360,1.318,361,1.318,362,1.318,363,2.87,364,2.091,365,1.318,366,2.6,367,2.6,368,1.318,369,2.6,370,1.318,371,1.318,372,1.318,373,2.091,374,1.318,375,1.318,376,1.848,377,1.775,378,1.318,379,1.848,380,2.091,381,2.091,382,2.455,383,2.959,384,1.318,385,1.318,386,1.318,387,1.961,388,1.318,389,1.318,390,1.961,391,1.318,392,1.318,393,2.091,394,1.422,395,2.091,396,1.318,397,1.318,398,1.318,399,2.091,400,1.318,401,1.318,402,1.318,403,1.318,404,1.961,405,1.318,406,1.318,407,1.961,408,1.961,409,1.318,410,1.318,411,1.318,412,1.236,413,1.318,414,1.318,415,1.318,416,1.318,417,1.318,418,1.318,419,1.236,420,1.318,421,1.236,422,1.236,423,1.318,424,1.236,425,1.318]],["title/components/UiComponent.html",[0,0.535,61,1.13]],["body/components/UiComponent.html",[0,0.837,1,0.881,2,0.263,3,0.149,4,1.047,5,1.047,6,1.047,7,0.107,9,1.047,10,2.731,11,1.933,13,1.782,15,1.782,17,0.512,18,0.017,19,0.441,20,0.121,21,0.018,23,0.714,24,1.554,25,1.203,26,1.487,27,2.051,28,1.047,29,1.158,30,1.047,31,0.881,32,1.661,33,0.777,34,1.047,35,0.881,36,1.002,37,1.047,38,0.881,39,1.047,40,0.881,41,0.959,42,1.554,43,0.845,44,1.047,45,1.308,46,1.047,47,0.881,48,1.924,49,1.308,50,1.047,51,1.047,52,0.881,53,1.002,54,1.554,55,0.881,56,1.424,57,0.881,58,1.047,59,0.881,60,1.047,61,1.655,62,1.047,63,0.881,64,1.047,65,0.881,66,1.047,67,0.009,68,0.009,86,1.692,97,1.094,116,1.145,121,1.203,123,0.272,124,1.153,129,1.12,131,1.213,132,0.636,133,1.163,134,1.318,135,2.512,136,1.553,137,1.094,144,0.81,153,1.727,154,1.782,161,2.028,162,4.405,163,0.751,164,3.998,165,3.231,166,2.245,170,1.254,171,1.106,174,1.733,183,2.487,184,2.487,186,3.339,188,1.758,190,3.995,193,2.009,206,1.061,224,2.009,245,1.553,290,1.622,394,1.496,451,3.992,452,2.467,476,1.758,477,1.649,492,2.18,543,2.936,677,4.875,679,2.487,687,1.649,741,3.312,742,3.312,762,2.23,765,2.039,915,3.027,981,2.487,982,2.487,983,2.23,1014,2.487,1015,4.272,1016,4.272,1017,5.649,1018,4.272,1019,4.272,1020,2.877,1021,6.312,1022,5.639,1023,5.639,1024,5.639,1025,4.272,1026,2.877,1027,2.877,1028,2.877,1029,2.877,1030,4.272,1031,2.877,1032,4.272,1033,2.877,1034,2.877,1035,2.877,1036,2.877,1037,2.23,1038,2.487,1039,2.877,1040,2.877,1041,2.877,1042,2.877,1043,2.877,1044,2.877,1045,4.272,1046,4.272,1047,4.272,1048,2.877,1049,2.877,1050,5.096,1051,4.272,1052,2.877,1053,2.877,1054,2.877,1055,2.877,1056,4.272,1057,2.877,1058,2.877,1059,2.877,1060,2.877,1061,2.877]],["title/modules/UiModule.html",[69,0.956,1062,2.728]],["body/modules/UiModule.html",[2,0.193,3,0.193,7,0.139,17,0.568,18,0.017,19,0.572,20,0.216,21,0.023,23,0.928,31,2.11,35,2.11,40,2.11,47,2.11,48,1.194,52,2.11,55,2.11,57,2.11,59,2.11,61,2.023,63,2.11,65,2.11,67,0.011,68,0.011,69,1.28,71,1.718,72,3.009,73,1.908,74,2.46,83,3.72,85,2.255,86,0.968,87,1.809,89,2.369,96,3.232,97,1.422,98,3.232,99,2.898,100,3.232,101,3.232,199,2.898,443,2.898,452,3.015,477,2.142,567,4.211,765,2.649,875,2.898,928,2.898,1062,5.672,1063,3.232,1064,3.232,1065,3.232,1066,3.232,1067,4.517,1068,3.739,1069,5.154,1070,5.154,1071,3.232,1072,3.232,1073,3.232,1074,3.232,1075,3.739,1076,3.739,1077,5.154,1078,3.739,1079,3.739,1080,3.739,1081,3.739,1082,3.739,1083,3.739,1084,3.739,1085,3.739,1086,3.739,1087,3.739,1088,3.739,1089,3.232,1090,3.149,1091,3.739,1092,3.739]],["title/modules/UiRoutingModule.html",[69,0.956,1067,2.523]],["body/modules/UiRoutingModule.html",[0,0.767,2,0.285,3,0.285,7,0.205,17,0.545,18,0.017,19,0.845,20,0.278,21,0.034,61,1.945,67,0.014,68,0.014,69,1.37,89,3.046,126,4.07,136,2.979,141,4.772,142,4.696,144,1.554,145,2.67,148,4.772,149,4.772,188,3.372,190,3.911,194,4.049,983,4.279,1038,4.772,1067,4.343,1074,4.772,1093,4.279,1094,5.52]],["title/interfaces/UiState.html",[185,1.039,1095,2.728]],["body/interfaces/UiState.html",[2,0.24,3,0.24,7,0.172,17,0.475,18,0.017,20,0.328,32,1.774,67,0.012,68,0.012,97,1.764,123,0.439,132,0.523,144,2.098,158,1.615,163,1.046,185,1.87,268,2.132,394,1.746,478,2.213,492,3.852,543,2.602,796,3.039,1090,2.834,1095,4.653,1096,3.595,1097,5.143,1098,5.143,1099,6.567,1100,5.143,1101,4.638,1102,6.336,1103,6.443,1104,4.638,1105,4.638,1106,4.01,1107,4.611,1108,4.01,1109,4.376,1110,4.01,1111,4.01,1112,4.01,1113,4.01,1114,4.01]],["title/components/WeatherComponent.html",[0,0.535,63,1.179]],["body/components/WeatherComponent.html",[0,0.904,1,0.867,2,0.218,3,0.146,4,1.031,5,1.031,6,1.031,7,0.105,9,1.031,10,2.725,11,1.713,13,1.761,15,1.761,17,0.483,18,0.017,19,0.434,20,0.119,21,0.018,23,0.703,24,1.536,25,1.189,26,1.47,27,2.036,28,1.031,29,0.97,30,1.031,31,0.867,32,1.655,33,1.14,34,1.031,35,0.867,36,0.986,37,1.031,38,0.867,39,1.031,40,0.867,41,0.945,42,1.536,43,0.832,44,1.031,45,0.867,46,1.031,47,0.867,48,1.912,49,0.867,50,1.031,51,1.031,52,0.867,53,0.986,54,1.536,55,0.867,56,1.408,57,0.867,58,1.031,59,0.867,60,1.031,61,0.832,62,1.031,63,1.713,64,1.031,65,0.867,66,1.031,67,0.009,68,0.009,97,1.078,121,1.189,123,0.268,124,1.14,129,1.188,131,0.674,132,0.708,133,0.647,134,1.336,144,0.797,156,3.686,158,2.185,160,3.834,161,2.01,163,0.743,164,3.429,165,2.893,166,2.588,167,3.972,168,3.972,169,3.972,170,1.482,171,1.307,174,1.824,177,3.085,178,1.606,179,2.58,182,1.529,206,1.049,224,2.093,290,1.486,326,2.442,377,1.181,382,1.078,445,2.767,451,3.972,452,2.448,453,3.206,463,1.856,464,1.856,465,1.856,466,1.856,467,1.856,469,1.856,475,2.007,476,1.731,477,1.623,478,1.349,479,2.007,481,1.856,483,1.856,487,1.856,488,1.856,501,2.007,568,4.865,596,3.914,628,4.365,632,4.838,633,2.449,673,3.388,765,2.007,776,1.731,777,2.449,778,2.58,782,2.767,1115,2.449,1116,4.607,1117,4.223,1118,4.223,1119,4.838,1120,5.596,1121,5.049,1122,5.596,1123,3.206,1124,4.223,1125,2.833,1126,2.833,1127,2.833,1128,2.833,1129,2.833,1130,2.833,1131,2.833,1132,2.833,1133,2.449,1134,2.833,1135,2.833,1136,4.223,1137,5.985,1138,2.833,1139,4.223,1140,2.196,1141,1.856,1142,2.833,1143,2.833,1144,2.833,1145,2.833,1146,2.833,1147,4.223]],["title/interfaces/WeatherConditions.html",[185,1.039,1141,2.523]],["body/interfaces/WeatherConditions.html",[2,0.278,3,0.278,7,0.2,18,0.016,20,0.226,67,0.013,68,0.013,123,0.509,132,0.844,133,1.736,153,1.648,158,2.605,163,1.148,185,1.762,201,2.473,209,1.64,290,1.744,1116,3.813,1119,6.314,1141,4.277,1148,4.653,1149,7.304,1150,7.304,1151,6.314,1152,7.026]],["title/modules/WeatherModule.html",[69,0.956,857,2.523]],["body/modules/WeatherModule.html",[2,0.288,3,0.288,7,0.207,17,0.516,18,0.016,19,0.854,20,0.28,21,0.035,23,1.385,67,0.014,68,0.014,69,1.656,71,2.564,72,3.404,73,2.847,74,2.976,85,2.918,86,1.444,87,2.699,89,3.065,857,5.026,1123,4.395,1153,4.823,1154,4.823,1155,5.58,1156,5.58]],["title/injectables/WeatherService.html",[191,1.341,1123,2.206]],["body/injectables/WeatherService.html",[2,0.167,3,0.167,7,0.12,11,0.991,17,0.49,18,0.017,19,0.496,20,0.136,21,0.02,29,1.146,67,0.01,68,0.01,74,1.942,86,1.544,123,0.306,124,1.257,129,1.088,131,1.707,132,0.712,133,1.657,134,1.303,135,2.635,137,1.232,144,1.679,153,2.299,158,1.899,163,0.819,171,1.206,174,1.354,191,1.899,201,2.741,206,0.804,209,1.143,224,2.194,226,2.154,290,0.804,324,2.253,363,3.043,377,1.942,382,1.232,383,1.566,419,2.668,489,2.253,506,1.978,555,1.855,609,3.908,641,2.799,664,2.799,673,3.871,678,3.61,691,3.219,695,2.799,769,2.51,880,4.228,890,2.51,893,2.799,940,5.688,973,2.799,1037,2.51,1116,5.321,1123,2.668,1141,4.7,1157,2.799,1158,7.172,1159,6.58,1160,4.657,1161,4.657,1162,4.657,1163,5.964,1164,4.026,1165,4.657,1166,3.238,1167,5.964,1168,4.657,1169,4.657,1170,3.238,1171,3.238,1172,3.238,1173,4.657,1174,3.238,1175,4.657,1176,4.657,1177,3.238,1178,4.657,1179,3.238,1180,4.026,1181,4.026,1182,3.238,1183,4.657,1184,3.238,1185,3.238,1186,3.238,1187,4.657,1188,2.799,1189,3.238,1190,3.238,1191,3.238,1192,3.238,1193,3.238,1194,3.238,1195,3.238,1196,3.238,1197,3.238,1198,3.238,1199,3.238,1200,3.238,1201,3.238,1202,3.238,1203,4.657,1204,3.238,1205,3.238,1206,4.657,1207,3.238,1208,3.238,1209,5.454,1210,3.238,1211,3.238,1212,3.238,1213,3.238,1214,3.238,1215,3.238,1216,3.238,1217,3.238]],["title/components/WizardComponent.html",[0,0.535,65,1.179]],["body/components/WizardComponent.html",[0,0.872,1,0.974,2,0.238,3,0.164,4,1.158,5,1.158,6,1.158,7,0.118,9,1.158,10,2.769,11,1.811,13,1.918,15,1.918,17,0.473,18,0.017,19,0.487,20,0.133,21,0.02,23,0.79,24,1.673,25,1.295,26,1.601,27,2.152,28,1.158,29,1.137,30,1.158,31,0.974,32,1.741,33,1.458,34,1.158,35,0.974,36,1.88,37,1.158,38,0.974,39,1.158,40,0.974,41,1.061,42,1.673,43,0.934,44,1.158,45,0.974,46,1.158,47,0.974,48,2.005,49,0.974,50,1.158,51,1.158,52,0.974,53,1.88,54,1.673,55,0.974,56,1.801,57,0.974,58,1.158,59,0.974,60,1.158,61,0.934,62,1.158,63,0.974,64,1.158,65,1.811,66,1.158,67,0.009,68,0.009,121,1.295,123,0.56,124,1.241,129,1.082,131,1.095,132,0.667,133,1.05,134,1.137,144,1.295,150,2.482,153,1.408,158,1.108,161,2.15,163,0.809,166,2.355,174,1.624,182,1.718,201,2.114,205,3.39,206,1.142,209,0.964,211,1.624,223,3.258,224,1.533,268,2.114,285,1.392,363,1.624,377,2.252,449,2.751,450,5.654,452,2.588,470,2.467,473,4.669,474,2.254,478,1.89,489,2.225,497,2.467,549,3.39,558,2.085,603,2.254,673,1.718,683,2.467,687,1.823,699,3.39,713,2.467,741,3.565,742,3.565,762,2.467,776,1.944,778,2.81,782,3.014,792,4.586,799,2.751,808,2.467,1000,3.976,1007,2.751,1017,5.115,1140,2.467,1218,2.751,1219,4.599,1220,4.599,1221,5.654,1222,5.916,1223,4.599,1224,3.182,1225,3.182,1226,3.182,1227,4.599,1228,5.916,1229,3.182,1230,4.599,1231,5.115,1232,4.599,1233,3.182,1234,3.182,1235,5.401,1236,3.182,1237,3.182,1238,3.182,1239,3.565,1240,3.182,1241,3.182,1242,3.182,1243,3.182,1244,6.744,1245,4.599,1246,4.599,1247,3.182,1248,3.182,1249,3.182,1250,3.182,1251,3.182,1252,3.182,1253,3.182,1254,3.182,1255,3.182,1256,3.182]],["title/injectables/WizardService.html",[191,1.341,452,1.684]],["body/injectables/WizardService.html",[2,0.11,3,0.217,7,0.079,11,0.649,17,0.49,18,0.017,19,0.325,20,0.089,21,0.013,29,1.007,48,1.079,56,0.707,67,0.007,68,0.007,86,1.242,97,0.806,116,0.844,123,0.62,124,0.911,126,1.215,129,1.052,131,1.247,132,0.764,133,1.196,134,1.382,144,1.571,145,2.035,150,2.271,153,2.253,154,0.884,163,0.594,174,1.742,191,1.465,206,0.838,209,1.313,216,2.932,220,1.552,221,3.013,222,2.566,223,3.713,224,1.952,226,2.171,227,1.832,230,1.144,237,1.935,248,1.822,277,1.935,285,0.927,290,1.509,324,3.277,326,3.106,376,1.822,379,3.161,394,1.639,412,1.935,421,2.411,424,1.935,451,3.411,452,1.477,453,2.749,475,1.502,476,1.295,477,1.215,478,1.079,489,2.535,492,2.849,530,1.633,532,3.201,537,1.215,539,1.144,545,1.215,547,1.215,548,1.935,549,3.002,550,1.215,555,2.411,567,2.932,603,2.981,609,3.983,673,1.144,678,1.643,687,1.215,691,2.59,699,3.002,746,1.643,776,2.063,778,3.827,782,4.105,787,1.832,788,2.392,880,3.262,890,1.643,909,1.832,915,4.8,957,4.826,993,2.932,1037,1.643,1089,1.832,1109,3.201,1116,4.149,1123,2.749,1133,1.832,1164,1.832,1221,4.53,1231,4.148,1257,1.832,1258,4.799,1259,4.799,1260,3.376,1261,3.376,1262,4.799,1263,3.376,1264,3.376,1265,2.12,1266,4.799,1267,4.799,1268,4.148,1269,4.799,1270,6.422,1271,3.376,1272,2.12,1273,2.12,1274,2.919,1275,3.376,1276,2.12,1277,3.376,1278,2.12,1279,2.12,1280,2.12,1281,3.376,1282,2.12,1283,2.12,1284,6.079,1285,2.12,1286,2.12,1287,2.12,1288,2.12,1289,2.12,1290,2.12,1291,2.12,1292,5.583,1293,2.12,1294,2.12,1295,2.12,1296,2.12,1297,2.12,1298,2.12,1299,4.799,1300,3.376,1301,2.12,1302,4.799,1303,2.12,1304,2.12,1305,2.12,1306,2.12,1307,2.12,1308,2.12,1309,2.12,1310,2.12,1311,2.12,1312,2.12,1313,3.376,1314,2.12,1315,2.12,1316,2.12,1317,1.832,1318,2.12,1319,2.12,1320,2.12,1321,5.583,1322,2.12,1323,4.208,1324,3.376,1325,3.376,1326,3.376,1327,3.376,1328,3.376,1329,2.919,1330,2.919,1331,2.12,1332,2.12,1333,1.832,1334,3.376,1335,3.376,1336,3.376,1337,3.376,1338,2.12,1339,2.12,1340,3.376,1341,2.12,1342,2.12,1343,2.12,1344,2.12,1345,2.12,1346,2.12,1347,3.376,1348,2.12,1349,2.12,1350,2.12,1351,2.12,1352,2.12,1353,2.12,1354,2.12,1355,2.12,1356,2.12]],["title/interfaces/WizardState.html",[185,1.039,1109,2.352]],["body/interfaces/WizardState.html",[2,0.202,3,0.202,7,0.145,17,0.436,18,0.017,20,0.3,32,1.542,67,0.011,68,0.011,74,2.216,123,0.571,128,2.11,132,0.73,134,1.343,144,1.906,154,2.517,158,1.361,163,0.934,170,1.147,178,1.487,185,1.434,193,2.159,209,1.357,290,1.805,377,2.913,382,1.487,394,2.135,478,2.475,489,2.57,492,3.937,537,2.24,538,2.11,539,2.11,543,3.181,545,2.24,547,2.24,548,2.24,550,2.24,551,3.044,776,2.388,778,4.138,796,4.578,1090,2.388,1098,4.593,1109,4.663,1357,2.769,1358,3.909,1359,3.909,1360,3.909,1361,3.03,1362,3.379,1363,5.313,1364,3.909,1365,5.313,1366,5.313,1367,5.313,1368,5.313,1369,3.909,1370,3.03,1371,3.379,1372,3.03,1373,3.379,1374,3.03,1375,3.379,1376,3.03,1377,3.379]],["title/coverage.html",[1378,4.546]],["body/coverage.html",[0,1.038,1,0.922,7,0.112,8,2.603,18,0.017,21,0.045,31,0.922,35,0.922,38,0.922,40,0.922,43,0.884,45,0.922,47,0.922,49,0.922,52,0.922,55,0.922,57,0.922,59,0.922,61,0.884,63,0.922,65,0.922,67,0.009,68,0.009,83,1.625,86,0.78,108,2.334,117,2.134,118,2.134,119,2.334,120,2.603,128,3.314,132,0.339,156,1.625,157,2.603,185,1.836,186,1.973,187,3.425,188,2.699,189,3.425,191,2.368,194,1.84,198,2.603,199,2.334,200,2.603,212,2.334,213,2.603,216,1.84,219,2.603,235,1.537,236,3.579,240,1.537,251,1.625,285,1.317,292,1.625,315,1.625,318,1.537,324,1.457,382,3.003,394,0.884,426,2.134,427,2.334,442,2.603,443,2.334,444,2.603,452,1.317,453,1.725,478,1.672,506,1.84,515,2.603,530,1.457,531,3.314,540,1.537,541,1.537,542,1.537,543,1.317,552,2.603,553,2.603,567,1.84,627,2.603,639,2.334,675,2.603,676,2.603,691,1.625,694,2.603,696,2.603,740,2.603,766,2.334,768,2.134,771,3.819,781,3.425,796,1.973,822,1.725,823,2.334,846,2.603,847,2.603,874,2.603,875,2.334,876,3.425,927,2.603,928,2.334,960,2.334,967,2.334,985,2.603,993,1.84,996,2.603,999,2.603,1006,3.425,1014,2.603,1090,1.84,1093,2.334,1095,2.134,1096,5.272,1107,2.334,1109,2.699,1115,2.603,1123,1.725,1141,1.973,1148,2.603,1157,2.603,1218,2.603,1239,2.334,1257,2.603,1357,4.698,1361,2.334,1370,2.334,1372,2.334,1374,2.334,1376,2.334,1378,2.603,1379,3.011,1380,5.233,1381,7.556,1382,3.011,1383,3.011,1384,5.765,1385,2.603,1386,5.909,1387,3.011,1388,3.011,1389,5.233,1390,3.011,1391,3.011,1392,3.011,1393,3.011,1394,4.418,1395,4.418,1396,4.418,1397,4.418,1398,3.011,1399,3.011,1400,5.233,1401,3.011,1402,3.011,1403,3.011,1404,3.011,1405,5.233,1406,6.417,1407,4.418,1408,2.603,1409,3.011,1410,3.011,1411,2.603,1412,3.011,1413,3.011,1414,3.011,1415,2.603,1416,7.055,1417,6.94,1418,3.011,1419,3.011,1420,2.603,1421,3.011,1422,2.603,1423,3.011,1424,3.011,1425,3.011,1426,4.418,1427,3.011,1428,3.011,1429,3.011,1430,3.011,1431,3.011,1432,4.524,1433,2.603,1434,2.603,1435,2.603,1436,3.819,1437,2.603,1438,3.011,1439,3.011]],["title/dependencies.html",[71,2.129,1440,3.214]],["body/dependencies.html",[18,0.017,19,0.771,67,0.013,68,0.013,71,2.314,92,4.857,93,4.44,97,1.915,99,3.904,136,2.718,137,1.915,211,2.57,637,4.353,638,4.353,670,3.904,687,2.885,971,4.353,977,4.353,978,4.353,1071,4.353,1072,4.353,1073,4.353,1441,5.036,1442,7.736,1443,5.036,1444,5.036,1445,5.036,1446,6.266,1447,5.036,1448,5.036,1449,5.036,1450,7.342,1451,5.036,1452,5.036,1453,5.036,1454,5.036,1455,5.036,1456,5.036,1457,5.036,1458,5.036,1459,5.036,1460,5.036,1461,5.036,1462,5.036,1463,5.036,1464,5.036,1465,5.036,1466,6.266,1467,5.036,1468,5.036,1469,5.036,1470,5.036,1471,5.036,1472,5.036,1473,5.036,1474,5.036,1475,5.036,1476,5.036,1477,5.036]],["title/miscellaneous/enumerations.html",[1478,1.735,1479,4.004]],["body/miscellaneous/enumerations.html",[18,0.014,32,1.834,33,1.536,67,0.014,68,0.014,86,1.747,123,0.538,171,2.015,178,2.164,236,3.071,243,3.867,245,3.643,282,3.643,394,1.67,478,2.298,530,2.752,531,3.071,538,3.071,539,3.643,540,2.903,541,2.903,542,2.903,543,2.489,544,3.476,1478,3.071,1479,4.919,1480,5.69,1481,4.919]],["title/miscellaneous/functions.html",[128,2.5,1478,1.735]],["body/miscellaneous/functions.html",[18,0.015,29,1.295,32,1.352,67,0.014,68,0.014,108,5.572,123,0.537,128,3.065,131,1.605,133,1.538,178,2.564,337,4.119,492,2.897,538,3.065,1090,3.469,1239,5.572,1357,4.023,1362,4.908,1408,4.908,1420,5.826,1432,4.908,1433,6.214,1434,5.826,1478,3.065,1482,6.214,1483,5.678,1484,4.908,1485,5.678,1486,5.678]],["title/index.html",[123,0.304,609,2.106,674,2.491]],["body/index.html",[7,0.253,18,0.013,22,5.274,26,1.743,41,1.669,67,0.013,68,0.013,118,3.547,128,3.37,150,3.37,153,1.912,222,2.869,289,3.577,318,3.186,489,3.445,555,3.577,570,3.881,577,4.328,603,3.547,669,4.328,670,3.881,671,3.881,672,4.328,673,2.702,701,4.328,712,6.336,1181,4.328,1329,5.397,1330,6.336,1487,5.007,1488,5.007,1489,6.243,1490,5.007,1491,5.007,1492,5.007,1493,5.007,1494,5.007,1495,5.007,1496,5.007,1497,5.007,1498,7.781,1499,5.007,1500,6.804,1501,5.007,1502,6.243,1503,5.007,1504,7.581,1505,5.007,1506,5.007,1507,6.243,1508,5.007,1509,5.007,1510,5.007,1511,5.007,1512,5.007,1513,5.007,1514,6.243,1515,5.007,1516,5.007,1517,5.007,1518,5.007,1519,5.007,1520,5.007,1521,4.328]],["title/license.html",[609,2.106,674,2.491,1522,2.778]],["body/license.html",[7,0.191,18,0.013,67,0.013,68,0.013,74,2.138,87,2.479,178,1.95,201,2.356,287,2.937,316,2.937,318,2.615,527,5.944,528,4.431,529,4.431,671,4.911,788,4.489,792,3.973,917,5.477,1180,4.431,1268,4.431,1274,4.431,1317,4.431,1521,4.431,1522,4.431,1523,5.126,1524,5.126,1525,5.126,1526,5.126,1527,5.126,1528,5.126,1529,6.335,1530,7.183,1531,7.759,1532,6.335,1533,6.876,1534,5.126,1535,6.876,1536,5.126,1537,5.126,1538,5.126,1539,5.126,1540,5.126,1541,5.126,1542,5.126,1543,5.126,1544,5.126,1545,5.126,1546,5.126,1547,5.126,1548,6.335,1549,6.335,1550,5.126,1551,5.126,1552,6.335,1553,5.126,1554,5.126,1555,5.126,1556,5.126,1557,5.126,1558,5.126,1559,5.126,1560,5.126,1561,5.126,1562,5.126,1563,5.126,1564,5.126,1565,5.126,1566,5.126,1567,5.126,1568,5.126,1569,5.126]],["title/modules.html",[69,1.306]],["body/modules.html",[18,0.014,67,0.014,68,0.014,69,1.382,70,3.945,79,3.648,80,3.648,81,3.648,82,3.648,83,3.005,84,3.648,93,5.536,324,3.448,822,3.19,857,3.648,926,6.755,1062,3.945,1067,3.648,1333,6.163,1570,7.814,1571,7.939]],["title/overview.html",[1572,4.546]],["body/overview.html",[0,0.522,1,2.165,18,0.016,20,0.157,21,0.023,23,0.932,31,1.81,35,1.81,38,2.165,40,1.81,43,1.735,45,2.165,47,1.81,49,2.165,52,1.81,55,1.81,57,1.81,59,1.81,61,1.735,63,1.81,65,1.81,67,0.011,68,0.011,69,1.283,70,5.524,71,1.726,72,1.916,73,1.916,74,1.566,75,3.246,76,3.246,77,3.246,78,3.246,79,3.874,80,4.376,81,4.376,82,4.634,83,4.161,84,4.376,85,2.261,86,0.972,87,1.816,126,2.152,185,1.014,191,1.307,214,3.246,215,3.246,216,3.611,452,2.586,453,3.387,567,3.611,689,3.246,690,3.246,691,3.191,781,2.911,822,4.052,854,3.246,855,3.246,856,3.246,857,4.376,963,3.246,964,3.246,965,3.246,966,3.246,991,3.246,992,3.246,993,3.611,1062,5.661,1063,3.246,1064,3.246,1065,3.246,1066,3.246,1067,3.874,1123,3.387,1153,3.246,1154,3.246,1411,3.246,1572,3.246,1573,3.755,1574,5.169,1575,3.755]],["title/routes.html",[126,3.013]],["body/routes.html",[18,0.015,67,0.015,68,0.015,126,3.592]],["title/miscellaneous/typealiases.html",[1478,1.735,1576,4.632]],["body/miscellaneous/typealiases.html",[18,0.016,67,0.014,68,0.014,86,1.53,123,0.559,132,0.666,209,1.239,290,1.468,427,4.582,437,6.32,530,2.859,531,3.191,540,3.016,541,3.016,542,3.016,551,4.189,1478,3.191,1481,5.11,1482,5.11,1577,5.911]],["title/miscellaneous/variables.html",[1386,3.591,1478,1.735]],["body/miscellaneous/variables.html",[18,0.017,20,0.249,32,0.994,56,0.93,67,0.009,68,0.009,83,2.701,85,1.221,116,1.111,123,0.264,128,2.254,132,0.851,142,1.977,150,1.506,154,1.741,170,2.216,171,1.954,185,0.753,193,1.392,209,1.049,220,1.282,235,1.424,268,1.282,283,1.424,290,1.379,304,1.506,377,1.164,382,1.588,383,1.35,394,1.746,478,2.341,492,3.534,543,2.601,555,2.867,558,1.828,565,3.279,582,2.958,586,2.163,593,3.237,608,5.395,639,3.879,655,3.61,657,2.412,673,1.506,699,1.599,766,3.879,768,3.545,772,2.412,788,2.958,796,3.639,822,3.182,823,2.163,824,2.412,825,2.412,826,2.412,828,2.412,829,2.412,830,2.412,831,2.412,832,2.412,833,2.412,834,2.412,835,2.412,836,2.412,837,2.412,838,2.412,897,2.412,960,2.163,961,2.412,967,2.163,970,2.412,972,2.412,974,2.412,975,2.412,976,2.412,1006,2.163,1090,3.057,1093,2.163,1095,1.977,1096,2.163,1097,3.61,1100,3.61,1102,5.141,1103,6.156,1106,2.412,1107,4.305,1108,2.412,1109,4.399,1110,2.412,1111,2.412,1112,2.412,1113,2.412,1114,2.412,1140,2.163,1151,4.801,1188,4.801,1357,1.977,1361,3.879,1370,3.879,1371,2.412,1372,3.879,1373,2.412,1374,3.879,1375,2.412,1376,3.879,1377,2.412,1385,2.412,1386,2.163,1415,2.412,1422,3.61,1435,2.412,1436,5.395,1437,2.412,1478,1.506,1484,5.141,1578,6.469,1579,2.79,1580,2.79,1581,2.79,1582,2.79,1583,2.79,1584,2.79,1585,2.79,1586,2.79,1587,4.175,1588,4.175,1589,4.175,1590,4.175,1591,5.554,1592,2.79,1593,4.175,1594,2.79,1595,4.175,1596,2.79,1597,2.79,1598,4.175,1599,2.79,1600,2.79,1601,2.79,1602,2.79,1603,5.554,1604,2.79,1605,4.175,1606,2.79,1607,5.554,1608,2.79,1609,2.79,1610,2.79,1611,2.79,1612,2.79,1613,2.79,1614,2.79,1615,2.79,1616,2.79,1617,2.79,1618,2.79,1619,2.79,1620,2.79,1621,2.79,1622,2.79,1623,2.79,1624,2.79,1625,2.79,1626,2.79,1627,2.79,1628,2.79,1629,2.79,1630,2.79]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"classes/Clock.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":382,"title":{},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"interfaces/Tag.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.3",{"_index":654,"title":{},"body":{"components/HomeComponent.html":{}}}],["0.5",{"_index":663,"title":{},"body":{"components/HomeComponent.html":{}}}],["0.8.26",{"_index":1477,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1381,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1423,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1380,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1405,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1406,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1384,"title":{},"body":{"coverage.html":{}}}],["0m",{"_index":1602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":383,"title":{},"body":{"classes/Edge.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["1.1.0",{"_index":1465,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1417,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":1393,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1407,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1398,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1397,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1395,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1404,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1430,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1392,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1416,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":1206,"title":{},"body":{"injectables/WeatherService.html":{}}}],["11",{"_index":1573,"title":{},"body":{"overview.html":{}}}],["11/15",{"_index":1410,"title":{},"body":{"coverage.html":{}}}],["12.476358",{"_index":1614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13",{"_index":1411,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["14",{"_index":1429,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":781,"title":{},"body":{"components/MapComponent.html":{},"coverage.html":{},"overview.html":{}}}],["17",{"_index":1424,"title":{},"body":{"coverage.html":{}}}],["18",{"_index":771,"title":{},"body":{"components/MapComponent.html":{},"coverage.html":{}}}],["1].length",{"_index":807,"title":{},"body":{"components/MapComponent.html":{}}}],["2",{"_index":497,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/WizardComponent.html":{}}}],["2.0.8",{"_index":1469,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":1470,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":1467,"title":{},"body":{"dependencies.html":{}}}],["2.5.7",{"_index":1474,"title":{},"body":{"dependencies.html":{}}}],["2/12",{"_index":1431,"title":{},"body":{"coverage.html":{}}}],["2/2",{"_index":1421,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":1383,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1394,"title":{},"body":{"coverage.html":{}}}],["20/40",{"_index":1401,"title":{},"body":{"coverage.html":{}}}],["2018",{"_index":1524,"title":{},"body":{"license.html":{}}}],["21",{"_index":1427,"title":{},"body":{"coverage.html":{}}}],["24",{"_index":960,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["25",{"_index":1396,"title":{},"body":{"coverage.html":{}}}],["250px",{"_index":1059,"title":{},"body":{"components/UiComponent.html":{}}}],["3",{"_index":1140,"title":{},"body":{"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["3/14",{"_index":1428,"title":{},"body":{"coverage.html":{}}}],["3/16",{"_index":1426,"title":{},"body":{"coverage.html":{}}}],["3/17",{"_index":1425,"title":{},"body":{"coverage.html":{}}}],["3/22",{"_index":1412,"title":{},"body":{"coverage.html":{}}}],["3/8",{"_index":1403,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["33",{"_index":1389,"title":{},"body":{"coverage.html":{}}}],["37",{"_index":1402,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":772,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["4/7",{"_index":1419,"title":{},"body":{"coverage.html":{}}}],["4/9",{"_index":1388,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1382,"title":{},"body":{"coverage.html":{}}}],["41.910943",{"_index":1613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["44",{"_index":1387,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":1629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.1.5",{"_index":1459,"title":{},"body":{"dependencies.html":{}}}],["5/15",{"_index":1390,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1400,"title":{},"body":{"coverage.html":{}}}],["5000",{"_index":1055,"title":{},"body":{"components/UiComponent.html":{}}}],["57",{"_index":1418,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1575,"title":{},"body":{"overview.html":{}}}],["6.0.0",{"_index":1448,"title":{},"body":{"dependencies.html":{}}}],["6.0.1",{"_index":1450,"title":{},"body":{"dependencies.html":{}}}],["6.0.2",{"_index":1461,"title":{},"body":{"dependencies.html":{}}}],["6.0.3",{"_index":1442,"title":{},"body":{"dependencies.html":{}}}],["6.0.5",{"_index":1463,"title":{},"body":{"dependencies.html":{}}}],["6.1.2",{"_index":1455,"title":{},"body":{"dependencies.html":{}}}],["6.1.4",{"_index":1453,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":1475,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":1446,"title":{},"body":{"dependencies.html":{}}}],["6.5.2",{"_index":1472,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1205,"title":{},"body":{"injectables/WeatherService.html":{}}}],["7/29",{"_index":1414,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":660,"title":{},"body":{"components/HomeComponent.html":{}}}],["73",{"_index":1409,"title":{},"body":{"coverage.html":{}}}],["76d219",{"_index":1623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8",{"_index":1574,"title":{},"body":{"overview.html":{}}}],["840",{"_index":665,"title":{},"body":{"components/HomeComponent.html":{}}}],["9/27",{"_index":1391,"title":{},"body":{"coverage.html":{}}}],["abov",{"_index":1547,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":159,"title":{},"body":{"classes/BaseComponent.html":{}}}],["accessor",{"_index":470,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WizardComponent.html":{}}}],["account",{"_index":267,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["action",{"_index":178,"title":{},"body":{"classes/BaseComponent.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"components/MapComponent.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/WeatherComponent.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["action.payload",{"_index":1368,"title":{},"body":{"interfaces/WizardState.html":{}}}],["action.payload.nextindex",{"_index":1369,"title":{},"body":{"interfaces/WizardState.html":{}}}],["action.payload.step",{"_index":1366,"title":{},"body":{"interfaces/WizardState.html":{}}}],["action.typ",{"_index":1364,"title":{},"body":{"interfaces/WizardState.html":{}}}],["actionreducermap",{"_index":1100,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["actions/wizard.act",{"_index":1360,"title":{},"body":{"interfaces/WizardState.html":{}}}],["activ",{"_index":1488,"title":{},"body":{"index.html":{}}}],["actual_compon",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["add",{"_index":505,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/HomeComponent.html":{}}}],["addedge(edg",{"_index":360,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["addorupdatenode(nod",{"_index":340,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["address",{"_index":713,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{},"components/WizardComponent.html":{}}}],["addweathercondit",{"_index":1162,"title":{},"body":{"injectables/WeatherService.html":{}}}],["addweatherconditions(data",{"_index":1170,"title":{},"body":{"injectables/WeatherService.html":{}}}],["administr",{"_index":1604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["afterviewinit",{"_index":628,"title":{},"body":{"components/HomeComponent.html":{},"components/WeatherComponent.html":{}}}],["again",{"_index":1318,"title":{},"body":{"injectables/WizardService.html":{}}}],["algorithm",{"_index":422,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SimulationService.html":{},"interfaces/Tag.html":{}}}],["alias",{"_index":1577,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alreadi",{"_index":819,"title":{},"body":{"components/MapComponent.html":{}}}],["and/or",{"_index":1542,"title":{},"body":{"license.html":{}}}],["angular",{"_index":1501,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":1441,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1447,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/stepp",{"_index":1238,"title":{},"body":{"components/WizardComponent.html":{}}}],["angular/cli",{"_index":1503,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":971,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":973,"title":{},"body":{"modules/SharedModule.html":{},"injectables/WeatherService.html":{}}}],["angular/compil",{"_index":1443,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"modules/MaterialModule.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":977,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/form",{"_index":211,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WizardComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1444,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":687,"title":{},"body":{"components/InfoDialogComponent.html":{},"modules/MaterialModule.html":{},"components/MessageArchivedComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":136,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"modules/SharedModule.html":{},"components/UiComponent.html":{},"modules/UiRoutingModule.html":{},"dependencies.html":{}}}],["anim",{"_index":637,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{}}}],["animate('500m",{"_index":1601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animationtriggermetadata",{"_index":1598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["anime.timelin",{"_index":650,"title":{},"body":{"components/HomeComponent.html":{}}}],["animej",{"_index":638,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{}}}],["anoth",{"_index":1321,"title":{},"body":{"injectables/WizardService.html":{}}}],["api",{"_index":712,"title":{},"body":{"injectables/LocationService.html":{},"index.html":{}}}],["app",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["app.compon",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["app_initi",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appconfig",{"_index":1186,"title":{},"body":{"injectables/WeatherService.html":{}}}],["appconfig.apis.openweathermap.apikey",{"_index":1196,"title":{},"body":{"injectables/WeatherService.html":{}}}],["appconfig.apis.openweathermap.forecasturl",{"_index":1189,"title":{},"body":{"injectables/WeatherService.html":{}}}],["appconfig.apis.openweathermap.weatherurl",{"_index":1190,"title":{},"body":{"injectables/WeatherService.html":{}}}],["appconfig.firebase.projectid",{"_index":1591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appli",{"_index":591,"title":{},"body":{"components/GoogleMapComponent.html":{},"injectables/SimulationService.html":{}}}],["appmodul",{"_index":70,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppreloadingstrategi",{"_index":117,"title":{"classes/AppPreloadingStrategy.html":{}},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["approutingmodul",{"_index":79,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arc",{"_index":276,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["archived.compon",{"_index":981,"title":{},"body":{"modules/SharedModule.html":{},"components/UiComponent.html":{}}}],["archived.component.t",{"_index":847,"title":{},"body":{"components/MessageArchivedComponent.html":{},"coverage.html":{}}}],["archived.component.ts:11",{"_index":850,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["archived.component.ts:13",{"_index":851,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["area",{"_index":699,"title":{},"body":{"injectables/LocationService.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"miscellaneous/variables.html":{}}}],["area'},{'nam",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["area.compon",{"_index":1077,"title":{},"body":{"modules/UiModule.html":{}}}],["area.component.html",{"_index":878,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.scss",{"_index":877,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.t",{"_index":876,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"coverage.html":{}}}],["area.component.ts:16",{"_index":882,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:18",{"_index":881,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:21",{"_index":930,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:23",{"_index":931,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:27",{"_index":884,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:28",{"_index":938,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:33",{"_index":889,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:35",{"_index":943,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:42",{"_index":885,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:43",{"_index":929,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:46",{"_index":888,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:50",{"_index":887,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:53",{"_index":932,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:59",{"_index":935,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:69",{"_index":933,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:77",{"_index":934,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:78",{"_index":883,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area/search",{"_index":875,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"modules/UiModule.html":{},"coverage.html":{}}}],["area/select",{"_index":928,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{},"modules/UiModule.html":{},"coverage.html":{}}}],["areamaxlimit",{"_index":1617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["areaminlimit",{"_index":1619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aris",{"_index":1569,"title":{},"body":{"license.html":{}}}],["assign",{"_index":277,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WizardService.html":{}}}],["assignmentmatrix",{"_index":329,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["associ",{"_index":1274,"title":{},"body":{"injectables/WizardService.html":{},"license.html":{}}}],["attach",{"_index":288,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["attribut",{"_index":278,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["author",{"_index":1559,"title":{},"body":{"license.html":{}}}],["avail",{"_index":1333,"title":{},"body":{"injectables/WizardService.html":{},"modules.html":{}}}],["babdb",{"_index":1621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bachelor'",{"_index":1491,"title":{},"body":{"index.html":{}}}],["bar",{"_index":848,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["bar'},{'nam",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["base",{"_index":419,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{}}}],["basecolor",{"_index":1620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basecompon",{"_index":156,"title":{"classes/BaseComponent.html":{}},"body":{"classes/BaseComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{}}}],["basecomponent:11",{"_index":464,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WeatherComponent.html":{}}}],["basecomponent:13",{"_index":463,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WeatherComponent.html":{}}}],["basecomponent:22",{"_index":467,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WeatherComponent.html":{}}}],["basecomponent:27",{"_index":465,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WeatherComponent.html":{}}}],["basecomponent:32",{"_index":466,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WeatherComponent.html":{}}}],["basecomponent:9",{"_index":469,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WeatherComponent.html":{}}}],["basictimelin",{"_index":649,"title":{},"body":{"components/HomeComponent.html":{}}}],["becom",{"_index":1326,"title":{},"body":{"injectables/WizardService.html":{}}}],["beta.15",{"_index":1449,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":238,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{}}}],["blur",{"_index":1248,"title":{},"body":{"components/WizardComponent.html":{}}}],["boolean",{"_index":193,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"classes/Edge.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["bound",{"_index":799,"title":{},"body":{"components/MapComponent.html":{},"components/WizardComponent.html":{}}}],["break",{"_index":782,"title":{},"body":{"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["brows",{"_index":1571,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":798,"title":{},"body":{"components/MapComponent.html":{}}}],["c",{"_index":1523,"title":{},"body":{"license.html":{}}}],["calc",{"_index":1270,"title":{},"body":{"injectables/WizardService.html":{}}}],["calcassignmentmatrix",{"_index":416,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["calcincidencematrix",{"_index":413,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["calclinkflow",{"_index":253,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["calcodmatrix",{"_index":227,"title":{},"body":{"injectables/DemandService.html":{},"injectables/WizardService.html":{}}}],["calcshortestpath",{"_index":1355,"title":{},"body":{"injectables/WizardService.html":{}}}],["calcshortestpaths(odpair",{"_index":409,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["calcul",{"_index":230,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WizardService.html":{}}}],["calendar_today",{"_index":954,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["call",{"_index":1175,"title":{},"body":{"injectables/WeatherService.html":{}}}],["cancomponentdeactiv",{"_index":186,"title":{"interfaces/CanComponentDeactivate.html":{}},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/UiComponent.html":{},"coverage.html":{}}}],["candeactiv",{"_index":190,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/UiComponent.html":{},"modules/UiRoutingModule.html":{}}}],["candeactivate(compon",{"_index":195,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{}}}],["candeactivateguard",{"_index":194,"title":{"injectables/CanDeactivateGuard.html":{}},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"modules/SharedModule.html":{},"modules/UiRoutingModule.html":{},"coverage.html":{}}}],["cannnot",{"_index":1320,"title":{},"body":{"injectables/WizardService.html":{}}}],["case",{"_index":778,"title":{},"body":{"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["catch",{"_index":393,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["catch((error",{"_index":901,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["catcherror",{"_index":1185,"title":{},"body":{"injectables/WeatherService.html":{}}}],["catcherror((error",{"_index":1200,"title":{},"body":{"injectables/WeatherService.html":{}}}],["cd",{"_index":1516,"title":{},"body":{"index.html":{}}}],["center",{"_index":558,"title":{},"body":{"components/GoogleMapComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["central1",{"_index":1590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["central1/networkdata",{"_index":1596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["central1/trafficdata",{"_index":1597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chang",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"miscellaneous/enumerations.html":{}}}],["changeofconditionscompon",{"_index":31,"title":{"components/ChangeOfConditionsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["changes['cent",{"_index":613,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["changes['zoom",{"_index":615,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["charg",{"_index":1528,"title":{},"body":{"license.html":{}}}],["check",{"_index":787,"title":{},"body":{"components/MapComponent.html":{},"injectables/WizardService.html":{}}}],["circular",{"_index":375,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["claim",{"_index":1562,"title":{},"body":{"license.html":{}}}],["class",{"_index":21,"title":{"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"classes/Clock.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"classes/GoOn.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"classes/Clock.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"coverage.html":{},"overview.html":{}}}],["cleangraph",{"_index":1332,"title":{},"body":{"injectables/WizardService.html":{}}}],["cli",{"_index":1502,"title":{},"body":{"index.html":{}}}],["click",{"_index":576,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["clock",{"_index":212,"title":{"classes/Clock.html":{}},"body":{"classes/Clock.html":{},"coverage.html":{}}}],["cloudfunctions.net/networkdata",{"_index":1592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cloudfunctions.net/trafficdata",{"_index":1594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_appmodul",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_demandmodul",{"_index":214,"title":{},"body":{"modules/DemandModule.html":{},"overview.html":{}}}],["cluster_demandmodule_provid",{"_index":215,"title":{},"body":{"modules/DemandModule.html":{},"overview.html":{}}}],["cluster_locationmodul",{"_index":689,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_provid",{"_index":690,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_networkmodul",{"_index":854,"title":{},"body":{"modules/NetworkModule.html":{},"overview.html":{}}}],["cluster_networkmodule_import",{"_index":855,"title":{},"body":{"modules/NetworkModule.html":{},"overview.html":{}}}],["cluster_networkmodule_provid",{"_index":856,"title":{},"body":{"modules/NetworkModule.html":{},"overview.html":{}}}],["cluster_sharedmodul",{"_index":963,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declar",{"_index":964,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_export",{"_index":966,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_import",{"_index":965,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_simulationmodul",{"_index":991,"title":{},"body":{"modules/SimulationModule.html":{},"overview.html":{}}}],["cluster_simulationmodule_provid",{"_index":992,"title":{},"body":{"modules/SimulationModule.html":{},"overview.html":{}}}],["cluster_uimodul",{"_index":1063,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_uimodule_declar",{"_index":1064,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_uimodule_import",{"_index":1065,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_uimodule_provid",{"_index":1066,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_weathermodul",{"_index":1153,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["cluster_weathermodule_provid",{"_index":1154,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["code",{"_index":844,"title":{},"body":{"modules/MaterialModule.html":{}}}],["codeaddress",{"_index":704,"title":{},"body":{"injectables/LocationService.html":{}}}],["codeaddress(address",{"_index":709,"title":{},"body":{"injectables/LocationService.html":{}}}],["combin",{"_index":279,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["combine(existingnode.incomingedg",{"_index":351,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["combine(existingnode.outgoingedg",{"_index":354,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["combine(existingnode.tag",{"_index":348,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["commonmodul",{"_index":970,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["complet",{"_index":667,"title":{},"body":{"components/HomeComponent.html":{},"components/MapComponent.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiRoutingModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component.candeactiv",{"_index":196,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{}}}],["component_templ",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["comput",{"_index":1493,"title":{},"body":{"index.html":{}}}],["condit",{"_index":201,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"license.html":{}}}],["conditions'},{'nam",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["conditions.compon",{"_index":1082,"title":{},"body":{"modules/UiModule.html":{}}}],["conditions.component.html",{"_index":203,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.scss",{"_index":202,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.t",{"_index":200,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"coverage.html":{}}}],["conditions.component.ts:11",{"_index":208,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:13",{"_index":207,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:17",{"_index":210,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions/chang",{"_index":199,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"modules/UiModule.html":{},"coverage.html":{}}}],["config",{"_index":769,"title":{},"body":{"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"injectables/WeatherService.html":{}}}],["config.json",{"_index":1514,"title":{},"body":{"index.html":{}}}],["config.t",{"_index":1422,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configur",{"_index":1630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connect",{"_index":1317,"title":{},"body":{"injectables/WizardService.html":{},"license.html":{}}}],["consol",{"_index":1505,"title":{},"body":{"index.html":{}}}],["console.log(graph",{"_index":1346,"title":{},"body":{"injectables/WizardService.html":{}}}],["const",{"_index":144,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"modules/SharedModule.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["constructor",{"_index":206,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["constructor(@inject(mat_snack_bar_data",{"_index":853,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["constructor(data",{"_index":849,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["constructor(dialogref",{"_index":680,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["constructor(edgeid",{"_index":254,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["constructor(elementref",{"_index":633,"title":{},"body":{"components/HomeComponent.html":{},"components/WeatherComponent.html":{}}}],["constructor(formbuild",{"_index":449,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/WizardComponent.html":{}}}],["constructor(http",{"_index":1166,"title":{},"body":{"injectables/WeatherService.html":{}}}],["constructor(map",{"_index":566,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["constructor(maticonregistri",{"_index":840,"title":{},"body":{"modules/MaterialModule.html":{}}}],["constructor(nodeid",{"_index":310,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["constructor(payload",{"_index":534,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{}}}],["constructor(priv",{"_index":641,"title":{},"body":{"components/HomeComponent.html":{},"injectables/WeatherService.html":{}}}],["constructor(publ",{"_index":546,"title":{},"body":{"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{}}}],["constructor(relationid",{"_index":322,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["constructor(rout",{"_index":1020,"title":{},"body":{"components/UiComponent.html":{}}}],["constructor(stor",{"_index":746,"title":{},"body":{"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"injectables/WizardService.html":{}}}],["constructor(wizard",{"_index":879,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["continu",{"_index":513,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["contract",{"_index":1566,"title":{},"body":{"license.html":{}}}],["control",{"_index":490,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{}}}],["control.length",{"_index":507,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["control.removeat(i",{"_index":491,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["convert",{"_index":893,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"injectables/WeatherService.html":{}}}],["cooper",{"_index":773,"title":{},"body":{"components/MapComponent.html":{}}}],["coordin",{"_index":698,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["copi",{"_index":1530,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":527,"title":{},"body":{"components/FooterComponent.html":{},"license.html":{}}}],["copyright&nbsp;©&nbsp",{"_index":525,"title":{},"body":{"components/FooterComponent.html":{}}}],["core",{"_index":1473,"title":{},"body":{"dependencies.html":{}}}],["coverag",{"_index":1378,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":603,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"index.html":{}}}],["createfeatureselector",{"_index":1101,"title":{},"body":{"interfaces/UiState.html":{}}}],["createfeatureselector('ui",{"_index":1108,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["creategraph",{"_index":1319,"title":{},"body":{"injectables/WizardService.html":{}}}],["createmap",{"_index":556,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["createmap(el",{"_index":595,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["createselector",{"_index":1102,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["current",{"_index":268,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{},"interfaces/UiState.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["currentstep",{"_index":796,"title":{},"body":{"components/MapComponent.html":{},"interfaces/UiState.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["currentyear",{"_index":519,"title":{},"body":{"components/FooterComponent.html":{}}}],["d",{"_index":509,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["d2191a",{"_index":1627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d27519",{"_index":1625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damag",{"_index":1563,"title":{},"body":{"license.html":{}}}],["data",{"_index":153,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"index.html":{}}}],["data.list.length",{"_index":1202,"title":{},"body":{"injectables/WeatherService.html":{}}}],["data.list[0",{"_index":1216,"title":{},"body":{"injectables/WeatherService.html":{}}}],["data.list[0].dt",{"_index":1212,"title":{},"body":{"injectables/WeatherService.html":{}}}],["date",{"_index":940,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{},"injectables/WeatherService.html":{}}}],["date().getfullyear",{"_index":521,"title":{},"body":{"components/FooterComponent.html":{}}}],["datetim",{"_index":1073,"title":{},"body":{"modules/UiModule.html":{},"dependencies.html":{}}}],["day",{"_index":944,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["deactiv",{"_index":188,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"modules/SharedModule.html":{},"components/UiComponent.html":{},"modules/UiRoutingModule.html":{},"coverage.html":{}}}],["deal",{"_index":1532,"title":{},"body":{"license.html":{}}}],["declar",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["decor",{"_index":683,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/MessageArchivedComponent.html":{},"components/WizardComponent.html":{}}}],["deepclon",{"_index":1358,"title":{},"body":{"interfaces/WizardState.html":{}}}],["deepclone(initialwizardst",{"_index":1363,"title":{},"body":{"interfaces/WizardState.html":{}}}],["deepclone(state.step",{"_index":1367,"title":{},"body":{"interfaces/WizardState.html":{}}}],["default",{"_index":170,"title":{},"body":{"classes/BaseComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":129,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["degre",{"_index":1492,"title":{},"body":{"index.html":{}}}],["delay",{"_index":659,"title":{},"body":{"components/HomeComponent.html":{}}}],["delet",{"_index":512,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["deletepair",{"_index":448,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["deletepair(i",{"_index":457,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand",{"_index":223,"title":{},"body":{"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["demand'},{'nam",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["demand.compon",{"_index":1080,"title":{},"body":{"modules/UiModule.html":{}}}],["demand.component.html",{"_index":447,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.scss",{"_index":446,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.t",{"_index":444,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"coverage.html":{}}}],["demand.component.ts:22",{"_index":455,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:24",{"_index":456,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:26",{"_index":468,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:28",{"_index":472,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:30",{"_index":454,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:43",{"_index":459,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:49",{"_index":458,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:59",{"_index":462,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:68",{"_index":460,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:93",{"_index":461,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.servic",{"_index":218,"title":{},"body":{"modules/DemandModule.html":{}}}],["demand/demand.modul",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["demand/demand.servic",{"_index":1285,"title":{},"body":{"injectables/WizardService.html":{}}}],["demand/estim",{"_index":443,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"modules/UiModule.html":{},"coverage.html":{}}}],["demandmodul",{"_index":80,"title":{"modules/DemandModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"modules.html":{},"overview.html":{}}}],["demandschedul",{"_index":1258,"title":{},"body":{"injectables/WizardService.html":{}}}],["demandservic",{"_index":216,"title":{"injectables/DemandService.html":{}},"body":{"modules/DemandModule.html":{},"injectables/DemandService.html":{},"injectables/WizardService.html":{},"coverage.html":{},"overview.html":{}}}],["deni",{"_index":918,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["densiti",{"_index":241,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["dep",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["depend",{"_index":71,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{},"overview.html":{}}}],["describ",{"_index":284,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["descript",{"_index":158,"title":{},"body":{"classes/BaseComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SimulationService.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{}}}],["destin",{"_index":242,"title":{},"body":{"classes/Edge.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["develop",{"_index":1489,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":677,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/UiComponent.html":{}}}],["dialog'},{'nam",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["dialog.compon",{"_index":982,"title":{},"body":{"modules/SharedModule.html":{},"components/UiComponent.html":{}}}],["dialog.component.t",{"_index":676,"title":{},"body":{"components/InfoDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:18",{"_index":682,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:21",{"_index":685,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:22",{"_index":684,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialogref",{"_index":679,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/UiComponent.html":{}}}],["dialogref.afterclos",{"_index":1061,"title":{},"body":{"components/UiComponent.html":{}}}],["dialogresult",{"_index":1050,"title":{},"body":{"components/UiComponent.html":{}}}],["direct",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"index.html":{}}}],["directives/pairs.direct",{"_index":1240,"title":{},"body":{"components/WizardComponent.html":{}}}],["disabledefaultui",{"_index":559,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["disabledoubleclickzoom",{"_index":560,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["display",{"_index":588,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["dissert",{"_index":1490,"title":{},"body":{"index.html":{}}}],["distanc",{"_index":243,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/enumerations.html":{}}}],["distribut",{"_index":1540,"title":{},"body":{"license.html":{}}}],["doc",{"_index":1496,"title":{},"body":{"index.html":{}}}],["document",{"_index":318,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["doesn't",{"_index":925,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["domsanit",{"_index":839,"title":{},"body":{"modules/MaterialModule.html":{}}}],["domsanitizer.bypasssecuritytrustresourceurl('./assets/images/ic_code_24px.svg",{"_index":845,"title":{},"body":{"modules/MaterialModule.html":{}}}],["domsanitizer.bypasssecuritytrustresourceurl('./assets/images/ic_more_vert_24px.svg",{"_index":843,"title":{},"body":{"modules/MaterialModule.html":{}}}],["doubl",{"_index":575,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["draw",{"_index":1338,"title":{},"body":{"injectables/WizardService.html":{}}}],["drawingopt",{"_index":244,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["durat",{"_index":245,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"miscellaneous/enumerations.html":{}}}],["durationintraff",{"_index":246,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["dynam",{"_index":1445,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":433,"title":{},"body":{"classes/EnumValues.html":{}}}],["e[nam",{"_index":441,"title":{},"body":{"classes/EnumValues.html":{}}}],["each",{"_index":592,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["earth'",{"_index":298,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["eas",{"_index":657,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["edg",{"_index":235,"title":{"classes/Edge.html":{}},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["edge.edgeid",{"_index":359,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["edgeid",{"_index":247,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["effectsmodul",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"modules/UiModule.html":{}}}],["effectsmodule.forfeatur",{"_index":1092,"title":{},"body":{"modules/UiModule.html":{}}}],["effectsmodule.forroot",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["el",{"_index":598,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{}}}],["element",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["element.innerhtml",{"_index":648,"title":{},"body":{"components/HomeComponent.html":{}}}],["element.innertext",{"_index":645,"title":{},"body":{"components/HomeComponent.html":{}}}],["elementref",{"_index":568,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/WeatherComponent.html":{}}}],["elementtyp",{"_index":1605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["empti",{"_index":956,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["enabl",{"_index":577,"title":{},"body":{"components/GoogleMapComponent.html":{},"index.html":{}}}],["enables/dis",{"_index":573,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["encapsul",{"_index":741,"title":{},"body":{"components/MapComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["engin",{"_index":1494,"title":{},"body":{"index.html":{}}}],["enter",{"_index":958,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["entrycompon",{"_index":968,"title":{},"body":{"modules/SharedModule.html":{}}}],["enum",{"_index":281,"title":{},"body":{"classes/Edge.html":{},"classes/GoOn.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{}}}],["enumer",{"_index":1479,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumvalu",{"_index":426,"title":{"classes/EnumValues.html":{}},"body":{"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"coverage.html":{}}}],["enumvalues.getvalues(pathtyp",{"_index":485,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["enumvaluetyp",{"_index":437,"title":{},"body":{"classes/EnumValues.html":{},"miscellaneous/typealiases.html":{}}}],["environ",{"_index":1436,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["eppstein",{"_index":423,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["equal",{"_index":763,"title":{},"body":{"components/MapComponent.html":{}}}],["equals(pair",{"_index":816,"title":{},"body":{"components/MapComponent.html":{}}}],["error",{"_index":394,"title":{},"body":{"classes/Edge.html":{},"classes/GoOn.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["error.cod",{"_index":914,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["error.permission_deni",{"_index":916,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["error.position_unavail",{"_index":919,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["error.timeout",{"_index":921,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["estim",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["estimateofdemandcompon",{"_index":35,"title":{"components/EstimateOfDemandComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["evalu",{"_index":1176,"title":{},"body":{"injectables/WeatherService.html":{}}}],["event",{"_index":792,"title":{},"body":{"components/MapComponent.html":{},"components/WizardComponent.html":{},"license.html":{}}}],["event.previouslyselectedindex",{"_index":1251,"title":{},"body":{"components/WizardComponent.html":{}}}],["event.selectedindex",{"_index":1252,"title":{},"body":{"components/WizardComponent.html":{}}}],["existingnod",{"_index":341,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["existingnode.incomingedg",{"_index":350,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["existingnode.lat",{"_index":343,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["existingnode.lon",{"_index":345,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["existingnode.outgoingedg",{"_index":353,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["existingnode.tag",{"_index":347,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["exit",{"_index":1017,"title":{},"body":{"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["export",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"classes/Clock.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["express",{"_index":1554,"title":{},"body":{"license.html":{}}}],["extend",{"_index":445,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WeatherComponent.html":{}}}],["factor",{"_index":1161,"title":{},"body":{"injectables/WeatherService.html":{}}}],["fals",{"_index":154,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/Edge.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["featuretyp",{"_index":1603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["featureuist",{"_index":1107,"title":{},"body":{"interfaces/UiState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"classes/Clock.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["firebas",{"_index":1504,"title":{},"body":{"index.html":{}}}],["firebaserc",{"_index":1513,"title":{},"body":{"index.html":{}}}],["fit",{"_index":1557,"title":{},"body":{"license.html":{}}}],["flexlayoutmodul",{"_index":976,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["flow",{"_index":248,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SimulationService.html":{},"interfaces/Tag.html":{},"injectables/WizardService.html":{}}}],["follow",{"_index":1268,"title":{},"body":{"injectables/WizardService.html":{},"license.html":{}}}],["footer",{"_index":516,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'nam",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["footer.component.html",{"_index":518,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":517,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.compon",{"_index":980,"title":{},"body":{"modules/SharedModule.html":{}}}],["footercompon",{"_index":38,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forecast",{"_index":1158,"title":{},"body":{"injectables/WeatherService.html":{}}}],["form",{"_index":182,"title":{},"body":{"classes/BaseComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Step.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["formarray",{"_index":473,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/WizardComponent.html":{}}}],["formbuild",{"_index":450,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/WizardComponent.html":{}}}],["formgroup",{"_index":205,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WizardComponent.html":{}}}],["formsmodul",{"_index":974,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["formstep",{"_index":1235,"title":{},"body":{"components/WizardComponent.html":{}}}],["forroot",{"_index":984,"title":{},"body":{"modules/SharedModule.html":{}}}],["free",{"_index":1527,"title":{},"body":{"license.html":{}}}],["fromui",{"_index":476,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WizardService.html":{}}}],["fromwizard",{"_index":1104,"title":{},"body":{"interfaces/UiState.html":{}}}],["fromwizard.getcurrentstep",{"_index":1112,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["fromwizard.geterror",{"_index":1113,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["fromwizard.getpend",{"_index":1114,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["fromwizard.getstep",{"_index":1111,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["fromwizard.wizardreduc",{"_index":1106,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["fromwizard.wizardst",{"_index":1099,"title":{},"body":{"interfaces/UiState.html":{}}}],["full",{"_index":149,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/UiRoutingModule.html":{}}}],["function",{"_index":128,"title":{"miscellaneous/functions.html":{}},"body":{"classes/AppPreloadingStrategy.html":{},"interfaces/CanComponentDeactivate.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["functions/src/funct",{"_index":1515,"title":{},"body":{"index.html":{}}}],["furnish",{"_index":1545,"title":{},"body":{"license.html":{}}}],["g",{"_index":1500,"title":{},"body":{"index.html":{}}}],["geocod",{"_index":701,"title":{},"body":{"injectables/LocationService.html":{},"index.html":{}}}],["geocoderresult",{"_index":714,"title":{},"body":{"injectables/LocationService.html":{}}}],["geograph",{"_index":697,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["geoloc",{"_index":702,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["geometri",{"_index":1606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gestur",{"_index":579,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["gesturehandl",{"_index":561,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["get",{"_index":609,"title":{"index.html":{},"license.html":{}},"body":{"components/GoogleMapComponent.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{}}}],["getassignmentmatrix",{"_index":417,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getcurrentposit",{"_index":705,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["getcurrentstep",{"_index":1372,"title":{},"body":{"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getedg",{"_index":332,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getedge(edgeid",{"_index":357,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["geterror",{"_index":1374,"title":{},"body":{"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getformstep",{"_index":1236,"title":{},"body":{"components/WizardComponent.html":{}}}],["getincidencematrix",{"_index":414,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getlatlng",{"_index":706,"title":{},"body":{"injectables/LocationService.html":{}}}],["getmax",{"_index":942,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["getmin",{"_index":937,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["getnam",{"_index":429,"title":{},"body":{"classes/EnumValues.html":{}}}],["getnames(",{"_index":431,"title":{},"body":{"classes/EnumValues.html":{}}}],["getnetwork",{"_index":1314,"title":{},"body":{"injectables/WizardService.html":{}}}],["getnetworkdata",{"_index":1322,"title":{},"body":{"injectables/WizardService.html":{}}}],["getnod",{"_index":330,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getnode(nodeid",{"_index":336,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getodmatrix",{"_index":228,"title":{},"body":{"injectables/DemandService.html":{}}}],["getodnod",{"_index":405,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getodnode(label",{"_index":403,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getodpair",{"_index":471,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["getpend",{"_index":1376,"title":{},"body":{"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getrandomcolor",{"_index":1433,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getrel",{"_index":334,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getscript",{"_index":1434,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getscript(src",{"_index":1485,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getshortestpath",{"_index":410,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getshortestpath(origin",{"_index":425,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getstep",{"_index":1370,"title":{},"body":{"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gettrafficdata",{"_index":1356,"title":{},"body":{"injectables/WizardService.html":{}}}],["getvalu",{"_index":430,"title":{},"body":{"classes/EnumValues.html":{}}}],["getvalues(",{"_index":434,"title":{},"body":{"classes/EnumValues.html":{}}}],["getweathercondit",{"_index":1163,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getweatherdata",{"_index":1164,"title":{},"body":{"injectables/WeatherService.html":{},"injectables/WizardService.html":{}}}],["getweatherdata(tim",{"_index":1173,"title":{},"body":{"injectables/WeatherService.html":{}}}],["go",{"_index":544,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"miscellaneous/enumerations.html":{}}}],["googl",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"index.html":{}}}],["google.maps.geocod",{"_index":722,"title":{},"body":{"injectables/LocationService.html":{}}}],["google.maps.geocoderresult",{"_index":729,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["google.maps.geocoderstatu",{"_index":731,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["google.maps.geocoderstatus.ok",{"_index":732,"title":{},"body":{"injectables/LocationService.html":{}}}],["google.maps.geocoderstatus.zero_result",{"_index":902,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["google.maps.latlngboundsliter",{"_index":800,"title":{},"body":{"components/MapComponent.html":{}}}],["google.maps.latlngliter",{"_index":571,"title":{},"body":{"components/GoogleMapComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{}}}],["google.maps.maptypeid",{"_index":584,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["google.maps.maptypeid.roadmap",{"_index":770,"title":{},"body":{"components/MapComponent.html":{}}}],["google.maps.maptypestyl",{"_index":593,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["google.maps.mark",{"_index":309,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["google.maps.polylin",{"_index":313,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["googlemapcompon",{"_index":40,"title":{"components/GoogleMapComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["goon",{"_index":530,"title":{"classes/GoOn.html":{}},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["goon(data",{"_index":1271,"title":{},"body":{"injectables/WizardService.html":{}}}],["grant",{"_index":1526,"title":{},"body":{"license.html":{}}}],["graph",{"_index":324,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{},"coverage.html":{},"modules.html":{}}}],["graph.calcassignmentmatrix",{"_index":1351,"title":{},"body":{"injectables/WizardService.html":{}}}],["graph.calcincidencematrix",{"_index":1350,"title":{},"body":{"injectables/WizardService.html":{}}}],["graph.calcshortestpaths(odpairs).pip",{"_index":1349,"title":{},"body":{"injectables/WizardService.html":{}}}],["graph.getodnod",{"_index":1342,"title":{},"body":{"injectables/WizardService.html":{}}}],["guard.servic",{"_index":983,"title":{},"body":{"modules/SharedModule.html":{},"components/UiComponent.html":{},"modules/UiRoutingModule.html":{}}}],["guard.service.t",{"_index":189,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"coverage.html":{}}}],["guard.service.ts:11",{"_index":197,"title":{},"body":{"injectables/CanDeactivateGuard.html":{}}}],["hammerj",{"_index":1468,"title":{},"body":{"dependencies.html":{}}}],["handl",{"_index":580,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["hasbackdrop",{"_index":1060,"title":{},"body":{"components/UiComponent.html":{}}}],["headlin",{"_index":652,"title":{},"body":{"components/HomeComponent.html":{}}}],["heavytrafficcolor",{"_index":1626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hectar",{"_index":1616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["herebi",{"_index":1525,"title":{},"body":{"license.html":{}}}],["holder",{"_index":1560,"title":{},"body":{"license.html":{}}}],["home",{"_index":147,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{}}}],["home'},{'nam",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["home.component.html",{"_index":630,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":629,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.transit",{"_index":640,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.compon",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["home_transit",{"_index":639,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["homecompon",{"_index":43,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hour",{"_index":961,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{},"miscellaneous/variables.html":{}}}],["html",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["html5",{"_index":716,"title":{},"body":{"injectables/LocationService.html":{}}}],["htmlelement",{"_index":596,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/WeatherComponent.html":{}}}],["htmlimageel",{"_index":1152,"title":{},"body":{"interfaces/WeatherConditions.html":{}}}],["http",{"_index":1169,"title":{},"body":{"injectables/WeatherService.html":{}}}],["http://localhost:4201",{"_index":1595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":1167,"title":{},"body":{"injectables/WeatherService.html":{}}}],["httpclientmodul",{"_index":972,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["httpheader",{"_index":1182,"title":{},"body":{"injectables/WeatherService.html":{}}}],["httpparam",{"_index":1183,"title":{},"body":{"injectables/WeatherService.html":{}}}],["https://cloud.google.com/map",{"_index":1508,"title":{},"body":{"index.html":{}}}],["https://developers.google.com/maps/documentation/javascript/styl",{"_index":1612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://openweathermap.org",{"_index":1511,"title":{},"body":{"index.html":{}}}],["https://u",{"_index":1589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://wiki.openstreetmap.org/wiki/key:oneway",{"_index":362,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["https://wiki.openstreetmap.org/wiki/tag:junction%3droundabout",{"_index":371,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["icon",{"_index":1119,"title":{},"body":{"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{}}}],["iconcontain",{"_index":1120,"title":{},"body":{"components/WeatherComponent.html":{}}}],["id",{"_index":364,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["identifi",{"_index":696,"title":{},"body":{"injectables/LocationService.html":{},"coverage.html":{}}}],["implement",{"_index":121,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["impli",{"_index":1555,"title":{},"body":{"license.html":{}}}],["import",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["incid",{"_index":412,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WizardService.html":{}}}],["incidencematrix",{"_index":328,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["includ",{"_index":1535,"title":{},"body":{"license.html":{}}}],["incom",{"_index":397,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["incomingedg",{"_index":306,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["index",{"_index":123,"title":{"index.html":{}},"body":{"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indic",{"_index":259,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"classes/Clock.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["infodialogcompon",{"_index":45,"title":{"components/InfoDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["inherit",{"_index":160,"title":{},"body":{"classes/BaseComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WeatherComponent.html":{}}}],["init",{"_index":602,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["initi",{"_index":582,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{},"interfaces/Step.html":{},"miscellaneous/variables.html":{}}}],["initialwizardst",{"_index":1361,"title":{},"body":{"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":191,"title":{"injectables/CanDeactivateGuard.html":{},"injectables/DemandService.html":{},"injectables/LocationService.html":{},"injectables/SimulationService.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{}},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"injectables/DemandService.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"components/MessageArchivedComponent.html":{},"injectables/SimulationService.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{},"coverage.html":{},"overview.html":{}}}],["inject(mat_dialog_data",{"_index":688,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["input",{"_index":204,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{}}}],["insert",{"_index":962,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["instal",{"_index":1330,"title":{},"body":{"injectables/WizardService.html":{},"index.html":{}}}],["interfac",{"_index":185,"title":{"interfaces/CanComponentDeactivate.html":{},"interfaces/Member.html":{},"interfaces/OdPair.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"interfaces/UiState.html":{},"interfaces/WeatherConditions.html":{},"interfaces/WizardState.html":{}},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"interfaces/UiState.html":{},"interfaces/WeatherConditions.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["internet",{"_index":1316,"title":{},"body":{"injectables/WizardService.html":{}}}],["invalid_request",{"_index":904,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["invok",{"_index":727,"title":{},"body":{"injectables/LocationService.html":{}}}],["isnan(+key",{"_index":439,"title":{},"body":{"classes/EnumValues.html":{}}}],["isoneway(edgeid",{"_index":365,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["isroundabout(edgeid",{"_index":372,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["javascript",{"_index":1510,"title":{},"body":{"index.html":{}}}],["js",{"_index":1466,"title":{},"body":{"dependencies.html":{}}}],["junction",{"_index":373,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["k",{"_index":420,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["key",{"_index":289,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"index.html":{}}}],["kind",{"_index":1553,"title":{},"body":{"license.html":{}}}],["l",{"_index":666,"title":{},"body":{"components/HomeComponent.html":{}}}],["label",{"_index":303,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["labels.icon",{"_index":1610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["last",{"_index":810,"title":{},"body":{"components/MapComponent.html":{}}}],["lastodpair",{"_index":803,"title":{},"body":{"components/MapComponent.html":{}}}],["lastodpair)).length",{"_index":817,"title":{},"body":{"components/MapComponent.html":{}}}],["lastodpair.length",{"_index":809,"title":{},"body":{"components/MapComponent.html":{}}}],["lastodpair.pop",{"_index":818,"title":{},"body":{"components/MapComponent.html":{}}}],["lastodpair.push(node.label",{"_index":814,"title":{},"body":{"components/MapComponent.html":{}}}],["lastodpair[0",{"_index":813,"title":{},"body":{"components/MapComponent.html":{}}}],["lat",{"_index":304,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["latitud",{"_index":300,"title":{},"body":{"classes/Edge.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["latlng",{"_index":703,"title":{},"body":{"injectables/LocationService.html":{}}}],["layout",{"_index":978,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["leav",{"_index":955,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["legend",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangeOfConditionsComponent.html":{},"modules/DemandModule.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"modules/LocationModule.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["letter",{"_index":643,"title":{},"body":{"components/HomeComponent.html":{}}}],["level",{"_index":587,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["liabil",{"_index":1564,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":1561,"title":{},"body":{"license.html":{}}}],["licens",{"_index":1522,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":788,"title":{},"body":{"components/MapComponent.html":{},"injectables/WizardService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["line",{"_index":661,"title":{},"body":{"components/HomeComponent.html":{}}}],["linear",{"_index":658,"title":{},"body":{"components/HomeComponent.html":{}}}],["link",{"_index":237,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WizardService.html":{}}}],["linkflow",{"_index":249,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["liter",{"_index":261,"title":{},"body":{"classes/Edge.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Node.html":{},"classes/StepChanged.html":{}}}],["lng",{"_index":897,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":127,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["loadchildren",{"_index":151,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loadscript",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["locat",{"_index":880,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{}}}],["location.servic",{"_index":693,"title":{},"body":{"modules/LocationModule.html":{}}}],["location/location.modul",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["location/location.servic",{"_index":890,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{}}}],["locationmodul",{"_index":81,"title":{"modules/LocationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LocationModule.html":{},"modules.html":{},"overview.html":{}}}],["locationservic",{"_index":691,"title":{"injectables/LocationService.html":{}},"body":{"modules/LocationModule.html":{},"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{},"coverage.html":{},"overview.html":{}}}],["login",{"_index":1507,"title":{},"body":{"index.html":{}}}],["lon",{"_index":305,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["longitud",{"_index":301,"title":{},"body":{"classes/Edge.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["manag",{"_index":1098,"title":{},"body":{"interfaces/UiState.html":{},"interfaces/WizardState.html":{}}}],["map",{"_index":555,"title":{},"body":{"components/GoogleMapComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["map'},{'nam",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["map((respons",{"_index":1199,"title":{},"body":{"injectables/WeatherService.html":{}}}],["map.compon",{"_index":1087,"title":{},"body":{"modules/UiModule.html":{}}}],["map.component.html",{"_index":744,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.scss",{"_index":743,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.t",{"_index":553,"title":{},"body":{"components/GoogleMapComponent.html":{},"coverage.html":{}}}],["map.component.ts:17",{"_index":572,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:26",{"_index":594,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:30",{"_index":574,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:34",{"_index":578,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:38",{"_index":585,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:42",{"_index":589,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:46",{"_index":590,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:50",{"_index":581,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:54",{"_index":569,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:56",{"_index":604,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:61",{"_index":601,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:71",{"_index":600,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:76",{"_index":597,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.servic",{"_index":606,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["map.styl",{"_index":767,"title":{},"body":{"components/MapComponent.html":{}}}],["map/googl",{"_index":1086,"title":{},"body":{"modules/UiModule.html":{}}}],["map/map.compon",{"_index":1085,"title":{},"body":{"modules/UiModule.html":{}}}],["map/map.servic",{"_index":1089,"title":{},"body":{"modules/UiModule.html":{},"injectables/WizardService.html":{}}}],["mapcompon",{"_index":47,"title":{"components/MapComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mapopt",{"_index":607,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["mapservic",{"_index":567,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{},"modules/UiModule.html":{},"injectables/WizardService.html":{},"coverage.html":{},"overview.html":{}}}],["mapstyl",{"_index":766,"title":{},"body":{"components/MapComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["maptypeid",{"_index":562,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["marker",{"_index":308,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["mat_dialog_data",{"_index":686,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["mat_snack_bar_data",{"_index":852,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["matbuttonmodul",{"_index":828,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matcardmodul",{"_index":826,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["match",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"classes/Clock.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":1024,"title":{},"body":{"components/UiComponent.html":{}}}],["matdialogmodul",{"_index":836,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matdialogref",{"_index":681,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["material.modul",{"_index":979,"title":{},"body":{"modules/SharedModule.html":{}}}],["materialmodul",{"_index":822,"title":{"modules/MaterialModule.html":{}},"body":{"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["matgridlistmodul",{"_index":837,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["maticonmodul",{"_index":829,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["maticonregistri",{"_index":827,"title":{},"body":{"modules/MaterialModule.html":{}}}],["maticonregistry.addsvgicon",{"_index":841,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodul",{"_index":832,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matmenumodul",{"_index":830,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matprogressspinnermodul",{"_index":834,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matrix",{"_index":221,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WizardService.html":{}}}],["matselectmodul",{"_index":838,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matsidenavmodul",{"_index":824,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matsnackbar",{"_index":1023,"title":{},"body":{"components/UiComponent.html":{}}}],["matsnackbarmodul",{"_index":833,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matstepp",{"_index":1231,"title":{},"body":{"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["matsteppermodul",{"_index":831,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattoolbarmodul",{"_index":825,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattooltipmodul",{"_index":835,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":941,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["maximum",{"_index":586,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["maxodpair",{"_index":1628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxzoom",{"_index":563,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["mean",{"_index":286,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["member",{"_index":292,"title":{"interfaces/Member.html":{}},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"coverage.html":{}}}],["memoizedselector",{"_index":1103,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["merchant",{"_index":1556,"title":{},"body":{"license.html":{}}}],["merg",{"_index":1538,"title":{},"body":{"license.html":{}}}],["messag",{"_index":915,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/UiComponent.html":{},"injectables/WizardService.html":{}}}],["messagearchivedcompon",{"_index":49,"title":{"components/MessageArchivedComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["metadata",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["meter",{"_index":260,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["method",{"_index":124,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["millisecond",{"_index":1208,"title":{},"body":{"injectables/WeatherService.html":{}}}],["millisencod",{"_index":1215,"title":{},"body":{"injectables/WeatherService.html":{}}}],["min",{"_index":936,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["minimum",{"_index":408,"title":{},"body":{"classes/Edge.html":{},"components/GoogleMapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["minzoom",{"_index":564,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["miscellan",{"_index":1478,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1521,"title":{},"body":{"index.html":{},"license.html":{}}}],["model",{"_index":1007,"title":{},"body":{"interfaces/Step.html":{},"components/WizardComponent.html":{}}}],["models/actions/wizard.act",{"_index":1287,"title":{},"body":{"injectables/WizardService.html":{}}}],["models/base.compon",{"_index":481,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WeatherComponent.html":{}}}],["models/reduc",{"_index":477,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"injectables/WizardService.html":{}}}],["models/reducers/wizard.reduc",{"_index":1288,"title":{},"body":{"injectables/WizardService.html":{}}}],["models/wizard",{"_index":479,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WeatherComponent.html":{}}}],["moderatetrafficcolor",{"_index":1624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modifi",{"_index":1537,"title":{},"body":{"license.html":{}}}],["modul",{"_index":69,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/MaterialModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"modules/WeatherModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/MaterialModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithprovid",{"_index":969,"title":{},"body":{"modules/SharedModule.html":{}}}],["moment",{"_index":939,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["more",{"_index":320,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["more_vert",{"_index":842,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mout",{"_index":1464,"title":{},"body":{"dependencies.html":{}}}],["mout/array/combin",{"_index":280,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["mout/array/equ",{"_index":764,"title":{},"body":{"components/MapComponent.html":{}}}],["mout/lang/deepclon",{"_index":1359,"title":{},"body":{"interfaces/WizardState.html":{}}}],["multi",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["name",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPreloadingStrategy.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"miscellaneous/functions.html":{}}}],["navigate_next",{"_index":514,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["navigator.geoloc",{"_index":910,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["navigator.geolocation.getcurrentposit",{"_index":736,"title":{},"body":{"injectables/LocationService.html":{}}}],["network",{"_index":326,"title":{},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{},"components/WeatherComponent.html":{},"injectables/WizardService.html":{}}}],["network.servic",{"_index":860,"title":{},"body":{"modules/NetworkModule.html":{}}}],["network/graph",{"_index":480,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{}}}],["network/network.modul",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["network/network.servic",{"_index":475,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WeatherComponent.html":{},"injectables/WizardService.html":{}}}],["network/weather/weather.servic",{"_index":1133,"title":{},"body":{"components/WeatherComponent.html":{},"injectables/WizardService.html":{}}}],["networkdata",{"_index":1588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["networkmodul",{"_index":82,"title":{"modules/NetworkModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NetworkModule.html":{},"modules.html":{},"overview.html":{}}}],["networkschedul",{"_index":1259,"title":{},"body":{"injectables/WizardService.html":{}}}],["networkservic",{"_index":453,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"modules/NetworkModule.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WeatherComponent.html":{},"injectables/WizardService.html":{},"coverage.html":{},"overview.html":{}}}],["new",{"_index":506,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"injectables/LocationService.html":{},"components/SelectionOfTheAreaComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["next",{"_index":959,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["nextdt",{"_index":1217,"title":{},"body":{"injectables/WeatherService.html":{}}}],["nextindex",{"_index":549,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["ng",{"_index":1071,"title":{},"body":{"modules/UiModule.html":{},"dependencies.html":{}}}],["ngafterviewinit",{"_index":632,"title":{},"body":{"components/HomeComponent.html":{},"components/WeatherComponent.html":{}}}],["ngmodul",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/MaterialModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"modules/WeatherModule.html":{}}}],["ngonchang",{"_index":557,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["ngonchanges(chang",{"_index":599,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["ngondestroy",{"_index":165,"title":{},"body":{"classes/BaseComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{}}}],["ngoninit",{"_index":166,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["ngrx",{"_index":538,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["ngrx/effect",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"modules/UiModule.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"components/MapComponent.html":{},"classes/Reset.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"injectables/WizardService.html":{},"dependencies.html":{}}}],["node",{"_index":240,"title":{"classes/Node.html":{}},"body":{"classes/Edge.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"coverage.html":{}}}],["node.incomingedg",{"_index":352,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.incomingedges.length",{"_index":387,"title":{},"body":{"classes/Edge.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.incomingedges.splice(i",{"_index":389,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.incomingedges[i].edgeid",{"_index":388,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.j",{"_index":1497,"title":{},"body":{"index.html":{}}}],["node.label",{"_index":404,"title":{},"body":{"classes/Edge.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.lat",{"_index":344,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.lon",{"_index":346,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.nodeid",{"_index":339,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.outgoingedg",{"_index":355,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.outgoingedges.length",{"_index":390,"title":{},"body":{"classes/Edge.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.outgoingedges.splice(i",{"_index":392,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.outgoingedges[i].edgeid",{"_index":391,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.tag",{"_index":349,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["nodeid",{"_index":302,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["nodeselect",{"_index":791,"title":{},"body":{"components/MapComponent.html":{}}}],["noninfring",{"_index":1558,"title":{},"body":{"license.html":{}}}],["notic",{"_index":1548,"title":{},"body":{"license.html":{}}}],["notrafficcolor",{"_index":1622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["npm",{"_index":1498,"title":{},"body":{"index.html":{}}}],["npm@latest",{"_index":1499,"title":{},"body":{"index.html":{}}}],["null",{"_index":377,"title":{},"body":{"classes/Edge.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":209,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["o",{"_index":508,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["o/d",{"_index":220,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WizardService.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":608,"title":{},"body":{"components/GoogleMapComponent.html":{},"miscellaneous/variables.html":{}}}],["object.keys(e).filter((key",{"_index":438,"title":{},"body":{"classes/EnumValues.html":{}}}],["observ",{"_index":135,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"injectables/WeatherService.html":{}}}],["observable.create((observ",{"_index":726,"title":{},"body":{"injectables/LocationService.html":{}}}],["observer.complet",{"_index":734,"title":{},"body":{"injectables/LocationService.html":{}}}],["observer.error(error",{"_index":739,"title":{},"body":{"injectables/LocationService.html":{}}}],["observer.error(statu",{"_index":735,"title":{},"body":{"injectables/LocationService.html":{}}}],["observer.next(posit",{"_index":737,"title":{},"body":{"injectables/LocationService.html":{}}}],["observer.next(result",{"_index":733,"title":{},"body":{"injectables/LocationService.html":{}}}],["obtain",{"_index":1180,"title":{},"body":{"injectables/WeatherService.html":{},"license.html":{}}}],["odmatrix",{"_index":225,"title":{},"body":{"injectables/DemandService.html":{}}}],["odnod",{"_index":1341,"title":{},"body":{"injectables/WizardService.html":{}}}],["odpair",{"_index":285,"title":{"interfaces/OdPair.html":{}},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"coverage.html":{}}}],["odpairs.filter(pair",{"_index":815,"title":{},"body":{"components/MapComponent.html":{}}}],["odpairs.length",{"_index":504,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{}}}],["odpairs.pop",{"_index":495,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["odpairs.push([node.label",{"_index":811,"title":{},"body":{"components/MapComponent.html":{}}}],["odpairs[odpairs.length",{"_index":804,"title":{},"body":{"components/MapComponent.html":{}}}],["odpairs[uiconfig.maxodpair",{"_index":806,"title":{},"body":{"components/MapComponent.html":{}}}],["of(nul",{"_index":140,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["offici",{"_index":1495,"title":{},"body":{"index.html":{}}}],["offset",{"_index":664,"title":{},"body":{"components/HomeComponent.html":{},"injectables/WeatherService.html":{}}}],["onchang",{"_index":554,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["ondestroy",{"_index":162,"title":{},"body":{"classes/BaseComponent.html":{},"components/UiComponent.html":{}}}],["oneway",{"_index":368,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["oninit",{"_index":161,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["opac",{"_index":655,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["open",{"_index":1328,"title":{},"body":{"injectables/WizardService.html":{}}}],["opendialog",{"_index":1018,"title":{},"body":{"components/UiComponent.html":{}}}],["opendialog(data",{"_index":1030,"title":{},"body":{"components/UiComponent.html":{}}}],["opensnackbar",{"_index":1019,"title":{},"body":{"components/UiComponent.html":{}}}],["opensnackbar(messag",{"_index":1032,"title":{},"body":{"components/UiComponent.html":{}}}],["openweathermap",{"_index":1181,"title":{},"body":{"injectables/WeatherService.html":{},"index.html":{}}}],["oper",{"_index":1269,"title":{},"body":{"injectables/WizardService.html":{}}}],["option",{"_index":133,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"injectables/CanDeactivateGuard.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"miscellaneous/functions.html":{}}}],["options).pip",{"_index":1198,"title":{},"body":{"injectables/WeatherService.html":{}}}],["origin",{"_index":250,"title":{},"body":{"classes/Edge.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["otherwis",{"_index":1568,"title":{},"body":{"license.html":{}}}],["out",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"license.html":{},"overview.html":{}}}],["outgo",{"_index":396,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["outgoingedg",{"_index":307,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["over_query_limit",{"_index":905,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["overview",{"_index":1572,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owldatetimemodul",{"_index":1069,"title":{},"body":{"modules/UiModule.html":{}}}],["owlnativedatetimemodul",{"_index":1070,"title":{},"body":{"modules/UiModule.html":{}}}],["packag",{"_index":1440,"title":{"dependencies.html":{}},"body":{}}],["paid",{"_index":1327,"title":{},"body":{"injectables/WizardService.html":{}}}],["pair",{"_index":283,"title":{},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["pair.value.destin",{"_index":511,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["pair.value.origin",{"_index":510,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["pairsvalid",{"_index":1239,"title":{},"body":{"components/WizardComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["panelclass",{"_index":1056,"title":{},"body":{"components/UiComponent.html":{}}}],["param",{"_index":363,"title":{},"body":{"classes/Edge.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{}}}],["paramet",{"_index":131,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"injectables/CanDeactivateGuard.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":287,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"license.html":{}}}],["past",{"_index":1324,"title":{},"body":{"injectables/WizardService.html":{}}}],["path",{"_index":145,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"modules/UiRoutingModule.html":{},"injectables/WizardService.html":{}}}],["pathmatch",{"_index":148,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/UiRoutingModule.html":{}}}],["pathtyp",{"_index":282,"title":{},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/enumerations.html":{}}}],["payload",{"_index":532,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{}}}],["pend",{"_index":543,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["perform",{"_index":1266,"title":{},"body":{"injectables/WizardService.html":{}}}],["permiss",{"_index":917,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"license.html":{}}}],["permit",{"_index":1544,"title":{},"body":{"license.html":{}}}],["person",{"_index":1529,"title":{},"body":{"license.html":{}}}],["pick",{"_index":1072,"title":{},"body":{"modules/UiModule.html":{},"dependencies.html":{}}}],["platform",{"_index":1509,"title":{},"body":{"index.html":{}}}],["pleas",{"_index":957,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{},"injectables/WizardService.html":{}}}],["poi",{"_index":1608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["point",{"_index":297,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["polylin",{"_index":312,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["portion",{"_index":1551,"title":{},"body":{"license.html":{}}}],["posit",{"_index":717,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["position.coords.latitud",{"_index":912,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["position.coords.longitud",{"_index":913,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["positionerror",{"_index":738,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["predt",{"_index":1211,"title":{},"body":{"injectables/WeatherService.html":{}}}],["preload",{"_index":119,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["preload(rout",{"_index":125,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["preloadingstrategi",{"_index":122,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{}}}],["prerequisit",{"_index":1512,"title":{},"body":{"index.html":{}}}],["privaci",{"_index":523,"title":{},"body":{"components/FooterComponent.html":{}}}],["privat",{"_index":224,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["process",{"_index":1315,"title":{},"body":{"injectables/WizardService.html":{}}}],["product",{"_index":1587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":1329,"title":{},"body":{"injectables/WizardService.html":{},"index.html":{}}}],["promis",{"_index":192,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{}}}],["propag",{"_index":997,"title":{},"body":{"injectables/SimulationService.html":{}}}],["properti",{"_index":163,"title":{},"body":{"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["propertynam",{"_index":612,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["provid",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"interfaces/WizardState.html":{},"license.html":{},"overview.html":{}}}],["public",{"_index":226,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"modules/SharedModule.html":{},"injectables/SimulationService.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{}}}],["publish",{"_index":1539,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":316,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"license.html":{}}}],["putinerror",{"_index":1260,"title":{},"body":{"injectables/WizardService.html":{}}}],["putinerror(error",{"_index":1275,"title":{},"body":{"injectables/WizardService.html":{}}}],["putonhold",{"_index":1261,"title":{},"body":{"injectables/WizardService.html":{}}}],["putonhold(messag",{"_index":1277,"title":{},"body":{"injectables/WizardService.html":{}}}],["qs",{"_index":1471,"title":{},"body":{"dependencies.html":{}}}],["quota",{"_index":1325,"title":{},"body":{"injectables/WizardService.html":{}}}],["rainintens",{"_index":1149,"title":{},"body":{"interfaces/WeatherConditions.html":{}}}],["reactiveformsmodul",{"_index":975,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["readonli",{"_index":533,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{}}}],["real",{"_index":672,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["receiveact",{"_index":167,"title":{},"body":{"classes/BaseComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WeatherComponent.html":{}}}],["rectangl",{"_index":783,"title":{},"body":{"components/MapComponent.html":{}}}],["redirectto",{"_index":146,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reduc",{"_index":1090,"title":{},"body":{"modules/UiModule.html":{},"interfaces/UiState.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["reducers/wizard.reduc",{"_index":1105,"title":{},"body":{"interfaces/UiState.html":{}}}],["reduct",{"_index":1160,"title":{},"body":{"injectables/WeatherService.html":{}}}],["ref",{"_index":293,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["relat",{"_index":315,"title":{"classes/Relation.html":{}},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"coverage.html":{}}}],["relation'",{"_index":291,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["relationid",{"_index":321,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["relationship",{"_index":319,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["remov",{"_index":376,"title":{},"body":{"classes/Edge.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WizardService.html":{}}}],["removedeadnod",{"_index":398,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["removededg",{"_index":380,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["removededges.push(this.edges[i].edgeid",{"_index":385,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["removefromwait",{"_index":1262,"title":{},"body":{"injectables/WizardService.html":{}}}],["removeinvalidatededg",{"_index":378,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["render",{"_index":1121,"title":{},"body":{"components/WeatherComponent.html":{}}}],["renderer2",{"_index":1122,"title":{},"body":{"components/WeatherComponent.html":{}}}],["repres",{"_index":295,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["request",{"_index":909,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"injectables/WizardService.html":{}}}],["request_deni",{"_index":906,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["requir",{"_index":570,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{},"index.html":{}}}],["reset",{"_index":86,"title":{"classes/Reset.html":{}},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/GoOn.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"modules/NetworkModule.html":{},"classes/Reset.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["resourc",{"_index":1159,"title":{},"body":{"injectables/WeatherService.html":{}}}],["respons",{"_index":695,"title":{},"body":{"injectables/LocationService.html":{},"injectables/WeatherService.html":{}}}],["restrict",{"_index":1534,"title":{},"body":{"license.html":{}}}],["result",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"classes/Clock.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results[0].geometry.location.lat",{"_index":896,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["results[0].geometry.location.lng",{"_index":898,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["retriev",{"_index":1323,"title":{},"body":{"injectables/WizardService.html":{}}}],["return",{"_index":134,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["right",{"_index":1536,"title":{},"body":{"license.html":{}}}],["road",{"_index":1609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roadmap",{"_index":583,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["roberto",{"_index":528,"title":{},"body":{"components/FooterComponent.html":{},"license.html":{}}}],["roberto&nbsp;simonetti",{"_index":526,"title":{},"body":{"components/FooterComponent.html":{}}}],["role",{"_index":294,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["root",{"_index":12,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'nam",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["roundabout",{"_index":374,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["rout",{"_index":126,"title":{"routes.html":{}},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"modules/UiRoutingModule.html":{},"injectables/WizardService.html":{},"overview.html":{},"routes.html":{}}}],["route.data",{"_index":138,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["route.data.preload",{"_index":139,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["router",{"_index":1021,"title":{},"body":{"components/UiComponent.html":{}}}],["routermodul",{"_index":142,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UiRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["routermodule.forchild(rout",{"_index":1094,"title":{},"body":{"modules/UiRoutingModule.html":{}}}],["routermodule.forroot(rout",{"_index":155,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.modul",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"modules/UiModule.html":{}}}],["routing.module.t",{"_index":141,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/UiRoutingModule.html":{}}}],["run",{"_index":1517,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":137,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"injectables/WeatherService.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":1037,"title":{},"body":{"components/UiComponent.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{}}}],["same",{"_index":812,"title":{},"body":{"components/MapComponent.html":{}}}],["scale",{"_index":653,"title":{},"body":{"components/HomeComponent.html":{}}}],["scalex",{"_index":662,"title":{},"body":{"components/HomeComponent.html":{}}}],["search",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["search(address",{"_index":886,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["searchfortheareacompon",{"_index":52,"title":{"components/SearchForTheAreaComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["second",{"_index":263,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["select",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"miscellaneous/variables.html":{}}}],["selectionchang",{"_index":1230,"title":{},"body":{"components/WizardComponent.html":{}}}],["selectionoftheareacompon",{"_index":55,"title":{"components/SelectionOfTheAreaComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["selector",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["sell",{"_index":1543,"title":{},"body":{"license.html":{}}}],["send",{"_index":820,"title":{},"body":{"components/MapComponent.html":{}}}],["sendact",{"_index":168,"title":{},"body":{"classes/BaseComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WeatherComponent.html":{}}}],["sent",{"_index":179,"title":{},"body":{"classes/BaseComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WeatherComponent.html":{}}}],["sequenc",{"_index":1267,"title":{},"body":{"injectables/WizardService.html":{}}}],["serve:devapp",{"_index":1518,"title":{},"body":{"index.html":{}}}],["servic",{"_index":498,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["set",{"_index":407,"title":{},"body":{"classes/Edge.html":{},"components/GoogleMapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["set('appid",{"_index":1195,"title":{},"body":{"injectables/WeatherService.html":{}}}],["set('lat",{"_index":1191,"title":{},"body":{"injectables/WeatherService.html":{}}}],["set('lon",{"_index":1193,"title":{},"body":{"injectables/WeatherService.html":{}}}],["setlatlng",{"_index":707,"title":{},"body":{"injectables/LocationService.html":{}}}],["setlatlng(latlng",{"_index":720,"title":{},"body":{"injectables/LocationService.html":{}}}],["shall",{"_index":1549,"title":{},"body":{"license.html":{}}}],["shared/can",{"_index":1038,"title":{},"body":{"components/UiComponent.html":{},"modules/UiRoutingModule.html":{}}}],["shared/info",{"_index":1040,"title":{},"body":{"components/UiComponent.html":{}}}],["shared/messag",{"_index":1039,"title":{},"body":{"components/UiComponent.html":{}}}],["shared/shared.modul",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"modules/UiModule.html":{}}}],["sharedmodul",{"_index":83,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/UiModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["sharedmodule.forroot",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["shortest",{"_index":421,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WizardService.html":{}}}],["shortestpath",{"_index":327,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["show",{"_index":631,"title":{},"body":{"components/HomeComponent.html":{},"components/MapComponent.html":{}}}],["simonetti",{"_index":529,"title":{},"body":{"components/FooterComponent.html":{},"license.html":{}}}],["simplechang",{"_index":605,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["simul",{"_index":150,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"injectables/LocationService.html":{},"components/SimulationComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["simulation'},{'nam",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["simulation.component.html",{"_index":987,"title":{},"body":{"components/SimulationComponent.html":{}}}],["simulation.component.scss",{"_index":986,"title":{},"body":{"components/SimulationComponent.html":{}}}],["simulation.servic",{"_index":995,"title":{},"body":{"modules/SimulationModule.html":{}}}],["simulation/simulation.modul",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["simulation/simulation.servic",{"_index":1286,"title":{},"body":{"injectables/WizardService.html":{}}}],["simulation?').pip",{"_index":1048,"title":{},"body":{"components/UiComponent.html":{}}}],["simulation?').subscrib",{"_index":1052,"title":{},"body":{"components/UiComponent.html":{}}}],["simulationcompon",{"_index":57,"title":{"components/SimulationComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["simulationmodul",{"_index":84,"title":{"modules/SimulationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SimulationModule.html":{},"modules.html":{},"overview.html":{}}}],["simulationservic",{"_index":993,"title":{"injectables/SimulationService.html":{}},"body":{"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"injectables/WizardService.html":{},"coverage.html":{},"overview.html":{}}}],["snack",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["snackbar",{"_index":1022,"title":{},"body":{"components/UiComponent.html":{}}}],["snowintens",{"_index":1150,"title":{},"body":{"interfaces/WeatherConditions.html":{}}}],["softwar",{"_index":1531,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"classes/Clock.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["specif",{"_index":296,"title":{},"body":{"classes/Edge.html":{},"components/GoogleMapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["src",{"_index":1486,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.prod.t",{"_index":1579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":1580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../graph.t",{"_index":1480,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../home.transition.t",{"_index":1581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../map.style.t",{"_index":1582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../material.module.t",{"_index":1583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../pairs.directive.t",{"_index":1483,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../reducers.t",{"_index":1578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../shared.module.t",{"_index":1584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ui",{"_index":1586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../utils.t",{"_index":1482,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../wizard.actions.t",{"_index":1481,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../wizard.reducer.t",{"_index":1484,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../wizard.t",{"_index":1585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":118,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{},"index.html":{}}}],["src/app/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.t",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/demand/demand.module.t",{"_index":217,"title":{},"body":{"modules/DemandModule.html":{}}}],["src/app/demand/demand.service.t",{"_index":219,"title":{},"body":{"injectables/DemandService.html":{},"coverage.html":{}}}],["src/app/demand/demand.service.ts:11",{"_index":232,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:18",{"_index":229,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:22",{"_index":231,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:9",{"_index":233,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/home/home.component.t",{"_index":627,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:15",{"_index":634,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:19",{"_index":636,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:23",{"_index":635,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.transition.t",{"_index":1385,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/location/location.module.t",{"_index":692,"title":{},"body":{"modules/LocationModule.html":{}}}],["src/app/location/location.service.t",{"_index":694,"title":{},"body":{"injectables/LocationService.html":{},"coverage.html":{}}}],["src/app/location/location.service.ts:13",{"_index":723,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:15",{"_index":708,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:21",{"_index":719,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:31",{"_index":710,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:53",{"_index":715,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:68",{"_index":718,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:72",{"_index":721,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/network/graph.t",{"_index":236,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/network/graph.ts:101",{"_index":270,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:103",{"_index":271,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:105",{"_index":255,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:114",{"_index":275,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:125",{"_index":871,"title":{},"body":{"classes/Relation.html":{}}}],["src/app/network/graph.ts:127",{"_index":870,"title":{},"body":{"classes/Relation.html":{}}}],["src/app/network/graph.ts:129",{"_index":869,"title":{},"body":{"classes/Relation.html":{}}}],["src/app/network/graph.ts:47",{"_index":866,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:49",{"_index":863,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:51",{"_index":864,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:53",{"_index":865,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:55",{"_index":868,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:57",{"_index":862,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:59",{"_index":867,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:61",{"_index":861,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:74",{"_index":269,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:76",{"_index":272,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:78",{"_index":257,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:80",{"_index":273,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:85",{"_index":258,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:90",{"_index":262,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:95",{"_index":264,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:97",{"_index":274,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:99",{"_index":256,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/network.module.t",{"_index":858,"title":{},"body":{"modules/NetworkModule.html":{}}}],["src/app/network/network.service.t",{"_index":1399,"title":{},"body":{"coverage.html":{}}}],["src/app/network/weather/weather.module.t",{"_index":1155,"title":{},"body":{"modules/WeatherModule.html":{}}}],["src/app/network/weather/weather.service.t",{"_index":1157,"title":{},"body":{"injectables/WeatherService.html":{},"coverage.html":{}}}],["src/app/network/weather/weather.service.ts:16",{"_index":1168,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:20",{"_index":1177,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:24",{"_index":1172,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:32",{"_index":1174,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:52",{"_index":1179,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:75",{"_index":1171,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.t",{"_index":1148,"title":{},"body":{"interfaces/WeatherConditions.html":{},"coverage.html":{}}}],["src/app/shared/can",{"_index":187,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"coverage.html":{}}}],["src/app/shared/footer/footer.component.t",{"_index":515,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/shared/footer/footer.component.ts:10",{"_index":522,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/footer/footer.component.ts:12",{"_index":520,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/info",{"_index":675,"title":{},"body":{"components/InfoDialogComponent.html":{},"coverage.html":{}}}],["src/app/shared/material.module.t",{"_index":823,"title":{},"body":{"modules/MaterialModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/messag",{"_index":846,"title":{},"body":{"components/MessageArchivedComponent.html":{},"coverage.html":{}}}],["src/app/shared/shared.module.t",{"_index":967,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/simulation/clock.t",{"_index":213,"title":{},"body":{"classes/Clock.html":{},"coverage.html":{}}}],["src/app/simulation/simulation.module.t",{"_index":994,"title":{},"body":{"modules/SimulationModule.html":{}}}],["src/app/simulation/simulation.service.t",{"_index":996,"title":{},"body":{"injectables/SimulationService.html":{},"coverage.html":{}}}],["src/app/simulation/simulation.service.ts:8",{"_index":998,"title":{},"body":{"injectables/SimulationService.html":{}}}],["src/app/ui/directives/pairs.directive.t",{"_index":1408,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/ui/map/googl",{"_index":552,"title":{},"body":{"components/GoogleMapComponent.html":{},"coverage.html":{}}}],["src/app/ui/map/map.component.t",{"_index":740,"title":{},"body":{"components/MapComponent.html":{},"coverage.html":{}}}],["src/app/ui/map/map.component.ts:111",{"_index":750,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:125",{"_index":752,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:25",{"_index":754,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:28",{"_index":761,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:30",{"_index":755,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:31",{"_index":756,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:32",{"_index":758,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:33",{"_index":759,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:34",{"_index":760,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:35",{"_index":757,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:36",{"_index":747,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:54",{"_index":748,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:62",{"_index":753,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:66",{"_index":749,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.service.t",{"_index":1413,"title":{},"body":{"coverage.html":{}}}],["src/app/ui/map/map.style.t",{"_index":1415,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/ui/models/actions/wizard.actions.t",{"_index":531,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:20",{"_index":1008,"title":{},"body":{"classes/StepChanged.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:22",{"_index":1009,"title":{},"body":{"classes/StepChanged.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:28",{"_index":1010,"title":{},"body":{"classes/StepError.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:30",{"_index":1011,"title":{},"body":{"classes/StepError.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:36",{"_index":1012,"title":{},"body":{"classes/StepPending.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:38",{"_index":1013,"title":{},"body":{"classes/StepPending.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:44",{"_index":535,"title":{},"body":{"classes/GoOn.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:46",{"_index":536,"title":{},"body":{"classes/GoOn.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:52",{"_index":872,"title":{},"body":{"classes/Reset.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:54",{"_index":873,"title":{},"body":{"classes/Reset.html":{}}}],["src/app/ui/models/base.component.t",{"_index":157,"title":{},"body":{"classes/BaseComponent.html":{},"coverage.html":{}}}],["src/app/ui/models/base.component.ts:11",{"_index":175,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/base.component.ts:13",{"_index":173,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/base.component.ts:22",{"_index":181,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/base.component.ts:27",{"_index":176,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/base.component.ts:32",{"_index":180,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/base.component.ts:9",{"_index":172,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/reducers.t",{"_index":1096,"title":{},"body":{"interfaces/UiState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/ui/models/reducers/wizard.reducer.t",{"_index":1357,"title":{},"body":{"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/ui/models/wizard.t",{"_index":1006,"title":{},"body":{"interfaces/Step.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/ui/ui",{"_index":1093,"title":{},"body":{"modules/UiRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/ui/ui.component.t",{"_index":1014,"title":{},"body":{"components/UiComponent.html":{},"coverage.html":{}}}],["src/app/ui/ui.component.ts:24",{"_index":1035,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:26",{"_index":1025,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:36",{"_index":1029,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:49",{"_index":1028,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:55",{"_index":1026,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:65",{"_index":1034,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:74",{"_index":1027,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:78",{"_index":1033,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:86",{"_index":1031,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.module.t",{"_index":1068,"title":{},"body":{"modules/UiModule.html":{}}}],["src/app/ui/utils.t",{"_index":427,"title":{},"body":{"classes/EnumValues.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/ui/utils.ts:5",{"_index":432,"title":{},"body":{"classes/EnumValues.html":{}}}],["src/app/ui/utils.ts:9",{"_index":435,"title":{},"body":{"classes/EnumValues.html":{}}}],["src/app/ui/weather/weather.component.t",{"_index":1115,"title":{},"body":{"components/WeatherComponent.html":{},"coverage.html":{}}}],["src/app/ui/weather/weather.component.ts:20",{"_index":1130,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:22",{"_index":1132,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:24",{"_index":1131,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:26",{"_index":1124,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:39",{"_index":1126,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:44",{"_index":1125,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:48",{"_index":1129,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:52",{"_index":1127,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:74",{"_index":1128,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/wizard/chang",{"_index":198,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"coverage.html":{}}}],["src/app/ui/wizard/estim",{"_index":442,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"coverage.html":{}}}],["src/app/ui/wizard/search",{"_index":874,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"coverage.html":{}}}],["src/app/ui/wizard/select",{"_index":927,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{},"coverage.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.t",{"_index":985,"title":{},"body":{"components/SimulationComponent.html":{},"coverage.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:11",{"_index":989,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:13",{"_index":988,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:17",{"_index":990,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.t",{"_index":999,"title":{},"body":{"components/StatisticsComponent.html":{},"coverage.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:11",{"_index":1004,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:13",{"_index":1003,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:17",{"_index":1005,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/wizard.component.t",{"_index":1218,"title":{},"body":{"components/WizardComponent.html":{},"coverage.html":{}}}],["src/app/ui/wizard/wizard.component.ts:17",{"_index":1233,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:19",{"_index":1234,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:21",{"_index":1237,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:23",{"_index":1224,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:30",{"_index":1226,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:64",{"_index":1229,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:85",{"_index":1225,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.service.t",{"_index":1257,"title":{},"body":{"injectables/WizardService.html":{},"coverage.html":{}}}],["src/app/ui/wizard/wizard.service.ts:180",{"_index":1265,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:20",{"_index":1283,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:22",{"_index":1264,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:38",{"_index":1280,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:55",{"_index":1282,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:62",{"_index":1276,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:69",{"_index":1278,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:76",{"_index":1279,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:83",{"_index":1272,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:98",{"_index":1273,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/utils.t",{"_index":1432,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/environments/environment.prod.t",{"_index":1435,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":1437,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":674,"title":{"index.html":{},"license.html":{}},"body":{"components/HomeComponent.html":{}}}],["starttest",{"_index":1519,"title":{},"body":{"index.html":{}}}],["state",{"_index":492,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["state.currentstep",{"_index":1373,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["state.error",{"_index":1375,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["state.pend",{"_index":1377,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["state.step",{"_index":1371,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["state.steps[action.payload.index",{"_index":1365,"title":{},"body":{"interfaces/WizardState.html":{}}}],["state.wizard",{"_index":1110,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["statement",{"_index":1379,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":428,"title":{},"body":{"classes/EnumValues.html":{},"modules/SharedModule.html":{}}}],["statist",{"_index":1000,"title":{},"body":{"components/StatisticsComponent.html":{},"components/WizardComponent.html":{}}}],["statistics'},{'nam",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["statistics.component.html",{"_index":1002,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["statistics.component.scss",{"_index":1001,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["statisticscompon",{"_index":59,"title":{"components/StatisticsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["statu",{"_index":730,"title":{},"body":{"injectables/LocationService.html":{}}}],["step",{"_index":478,"title":{"interfaces/Step.html":{}},"body":{"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"components/MapComponent.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["stepchang",{"_index":540,"title":{"classes/StepChanged.html":{}},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["stepclick",{"_index":1223,"title":{},"body":{"components/WizardComponent.html":{}}}],["stepclick(ev",{"_index":1227,"title":{},"body":{"components/WizardComponent.html":{}}}],["steperror",{"_index":541,"title":{"classes/StepError.html":{}},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["steppend",{"_index":542,"title":{"classes/StepPending.html":{}},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["stepper",{"_index":1221,"title":{},"body":{"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["stepperselectionev",{"_index":1228,"title":{},"body":{"components/WizardComponent.html":{}}}],["steps[0",{"_index":779,"title":{},"body":{"components/MapComponent.html":{}}}],["steps[2",{"_index":785,"title":{},"body":{"components/MapComponent.html":{}}}],["steps[this.index",{"_index":502,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["steps[this.index]['data']['odpair",{"_index":503,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["store",{"_index":451,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WizardService.html":{}}}],["storemodul",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"modules/UiModule.html":{}}}],["storemodule.forfeature('ui",{"_index":1091,"title":{},"body":{"modules/UiModule.html":{}}}],["storemodule.forroot",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["strada",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["strategi",{"_index":143,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["strategy.t",{"_index":120,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"coverage.html":{}}}],["strategy.ts:6",{"_index":130,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["stream",{"_index":1300,"title":{},"body":{"injectables/WizardService.html":{}}}],["stream.subscrib",{"_index":1313,"title":{},"body":{"injectables/WizardService.html":{}}}],["string",{"_index":290,"title":{},"body":{"classes/Edge.html":{},"classes/EnumValues.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["structur",{"_index":317,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["style",{"_index":565,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"miscellaneous/variables.html":{}}}],["styler",{"_index":1607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["styleurl",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["subject",{"_index":1546,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":1541,"title":{},"body":{"license.html":{}}}],["subscrib",{"_index":177,"title":{},"body":{"classes/BaseComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WeatherComponent.html":{}}}],["subscript",{"_index":164,"title":{},"body":{"classes/BaseComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{}}}],["subscription.unsubscrib",{"_index":184,"title":{},"body":{"classes/BaseComponent.html":{},"components/UiComponent.html":{}}}],["substanti",{"_index":1550,"title":{},"body":{"license.html":{}}}],["super",{"_index":483,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WeatherComponent.html":{}}}],["support",{"_index":926,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"modules.html":{}}}],["sure",{"_index":1046,"title":{},"body":{"components/UiComponent.html":{}}}],["surfac",{"_index":299,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["svg",{"_index":1570,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":776,"title":{},"body":{"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["switchmap",{"_index":1284,"title":{},"body":{"injectables/WizardService.html":{}}}],["switchmap((respons",{"_index":1302,"title":{},"body":{"injectables/WizardService.html":{}}}],["t",{"_index":436,"title":{},"body":{"classes/EnumValues.html":{}}}],["tabl",{"_index":1439,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1438,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":251,"title":{"interfaces/Tag.html":{}},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"coverage.html":{}}}],["tag.key",{"_index":367,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["tag.valu",{"_index":369,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["take",{"_index":266,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["tap",{"_index":1036,"title":{},"body":{"components/UiComponent.html":{}}}],["tap((dialogresult",{"_index":1049,"title":{},"body":{"components/UiComponent.html":{}}}],["target",{"_index":651,"title":{},"body":{"components/HomeComponent.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["templateurl",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["term",{"_index":524,"title":{},"body":{"components/FooterComponent.html":{}}}],["testlicens",{"_index":1520,"title":{},"body":{"index.html":{}}}],["text",{"_index":644,"title":{},"body":{"components/HomeComponent.html":{}}}],["text.split",{"_index":646,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.assignmentmatrix",{"_index":418,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.cent",{"_index":618,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.createmap(el",{"_index":611,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["this.demand.calcodmatrix",{"_index":1354,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.demand.reset",{"_index":1297,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.descript",{"_index":1136,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.dialog.open(infodialogcompon",{"_index":1057,"title":{},"body":{"components/UiComponent.html":{}}}],["this.disabledefaultui",{"_index":619,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.disabledoubleclickzoom",{"_index":620,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.edg",{"_index":333,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.edgeid",{"_index":314,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.edges.find((edg",{"_index":358,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.edges.length",{"_index":381,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.edges.push(edg",{"_index":361,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.edges.splice(i",{"_index":386,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.edges[i].dist",{"_index":384,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.elementref.nativeelement.queryselector('#iconcontain",{"_index":1135,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.elementref.nativeelement.queryselector('#map",{"_index":610,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["this.elementref.nativeelement.queryselector('.headlin",{"_index":642,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.formbuilder.array",{"_index":1245,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.formbuilder.group",{"_index":1244,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.formgroup.get('bounds').setvalue(steps[this.index]['data']['bound",{"_index":953,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.formgroup.get('center').setvalu",{"_index":895,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.formgroup.get('odpair",{"_index":482,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.geocod",{"_index":724,"title":{},"body":{"injectables/LocationService.html":{}}}],["this.geocoder.geocod",{"_index":728,"title":{},"body":{"injectables/LocationService.html":{}}}],["this.gesturehandl",{"_index":624,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.getedge(edgeid).tags.find(tag",{"_index":366,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.getnames(e).map((nam",{"_index":440,"title":{},"body":{"classes/EnumValues.html":{}}}],["this.getnode(node.nodeid",{"_index":342,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.http.get(url",{"_index":1197,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.icon",{"_index":1137,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.iconcontain",{"_index":1134,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.incidencematrix",{"_index":415,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.index",{"_index":900,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.isroundabout(edgeid",{"_index":370,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.latlng",{"_index":725,"title":{},"body":{"injectables/LocationService.html":{}}}],["this.location.codeaddress(address).foreach",{"_index":894,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.location.getcurrentposition().subscrib",{"_index":911,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.location.getlatlng().lat.tostr",{"_index":1192,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.location.getlatlng().lng.tostr",{"_index":1194,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.location.reset",{"_index":1294,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.location.setlatlng(this.formgroup.get('center').valu",{"_index":891,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.map.buildbounds(this.cent",{"_index":801,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.drawgraph",{"_index":1339,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.map.initmap(el",{"_index":617,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["this.map.removerect",{"_index":784,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.reset",{"_index":1291,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.map.setcenter(this.cent",{"_index":614,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["this.map.setcenter(this.map.getcentroid",{"_index":1344,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.map.setcentroid(odnod",{"_index":1343,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.map.setzoom(17",{"_index":1345,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.map.setzoom(this.zoom",{"_index":616,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["this.map.showrect(bound",{"_index":802,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.updateodnodes(odpair",{"_index":786,"title":{},"body":{"components/MapComponent.html":{}}}],["this.maptypeid",{"_index":621,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.maxzoom",{"_index":622,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.min.getd",{"_index":947,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.min.getfullyear",{"_index":945,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.min.gethour",{"_index":948,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.min.getminut",{"_index":950,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.min.getmonth",{"_index":946,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.minzoom",{"_index":623,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.network.calclinkflows(respons",{"_index":1353,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.network.cleangraph",{"_index":1309,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.network.creategraph(respons",{"_index":1304,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.network.getgraph",{"_index":1340,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.network.getnetwork().pip",{"_index":1301,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.network.getnetworkdata",{"_index":1305,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.network.getodpair",{"_index":1348,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.network.gettim",{"_index":1312,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.network.gettimestr",{"_index":1146,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.network.gettrafficdata",{"_index":1352,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.network.reset",{"_index":1295,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.network.setbounds(this.formgroup.get('bounds').valu",{"_index":951,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.network.setodpairs(this.formgroup.get('odpairs').valu",{"_index":500,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.network.settime(this.formgroup.get('time').valu",{"_index":952,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.network.updategraph(respons",{"_index":1307,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.nod",{"_index":331,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.nodeid",{"_index":311,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.nodes.filter((nod",{"_index":406,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.nodes.find((nod",{"_index":338,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.nodes.length",{"_index":399,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.nodes.push(nod",{"_index":356,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.nodes.splice(i",{"_index":402,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.nodes[i].incomingedges.length",{"_index":400,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.nodes[i].outgoingedges.length",{"_index":401,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.odmatrix",{"_index":234,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.opendialog('ar",{"_index":1045,"title":{},"body":{"components/UiComponent.html":{}}}],["this.opensnackbar(error",{"_index":1044,"title":{},"body":{"components/UiComponent.html":{}}}],["this.pathtyp",{"_index":484,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.pend",{"_index":1042,"title":{},"body":{"components/UiComponent.html":{}}}],["this.putinerror(messag",{"_index":1334,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.putonhold('clean",{"_index":1308,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.putonhold('comput",{"_index":1347,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.putonhold('cr",{"_index":1303,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.putonhold('get",{"_index":1299,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.putonhold('upd",{"_index":1306,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.receiveact",{"_index":487,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WeatherComponent.html":{}}}],["this.rel",{"_index":335,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.relationid",{"_index":323,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.removefromwait",{"_index":1337,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.renderer.appendchild(this.iconcontain",{"_index":1145,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.renderer.removechild(this.iconcontain",{"_index":1138,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.reset",{"_index":1335,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.router.navigate(['/hom",{"_index":1053,"title":{},"body":{"components/UiComponent.html":{}}}],["this.sendact",{"_index":488,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WeatherComponent.html":{}}}],["this.shortestpath",{"_index":411,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.show",{"_index":668,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.simulation.reset",{"_index":1298,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.snackbar.openfromcomponent(messagearchivedcompon",{"_index":1054,"title":{},"body":{"components/UiComponent.html":{}}}],["this.stat",{"_index":1290,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.stepp",{"_index":1250,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.stepper.reset",{"_index":1293,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.store.dispatch",{"_index":1292,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.store.pipe(select(fromui.wizardstate)).subscribe((st",{"_index":1289,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.styl",{"_index":625,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.subscriptions.foreach((subscript",{"_index":183,"title":{},"body":{"classes/BaseComponent.html":{},"components/UiComponent.html":{}}}],["this.subscriptions.push(this.formgroup.valuechanges.subscrib",{"_index":499,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["this.subscriptions.push(this.map.getarea().subscribe((area",{"_index":789,"title":{},"body":{"components/MapComponent.html":{}}}],["this.subscriptions.push(this.map.nodeselected.subscribe((nod",{"_index":793,"title":{},"body":{"components/MapComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromui.currentstep)).subscribe((currentstep",{"_index":795,"title":{},"body":{"components/MapComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromui.error)).subscribe((error",{"_index":1043,"title":{},"body":{"components/UiComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromui.pending)).subscribe((pend",{"_index":1041,"title":{},"body":{"components/UiComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromui.steps)).subscribe((step",{"_index":501,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WeatherComponent.html":{}}}],["this.tim",{"_index":1139,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.updateodpairs(nod",{"_index":794,"title":{},"body":{"components/MapComponent.html":{}}}],["this.valuechang",{"_index":486,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["this.weather.getweathercondit",{"_index":1142,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.weather.getweatherdata(this.network.gettim",{"_index":1310,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.weather.reset",{"_index":1296,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.weather.updateweatherdata(respons",{"_index":1311,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.weathercondit",{"_index":1187,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.wizard.demandschedul",{"_index":1254,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.wizard.goon",{"_index":1255,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.wizard.networkschedul",{"_index":1253,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.wizard.putinerror(\"brows",{"_index":924,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.putinerror('invalid",{"_index":908,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.putinerror('zero",{"_index":903,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.putinerror(error",{"_index":821,"title":{},"body":{"components/MapComponent.html":{}}}],["this.wizard.putinerror(messag",{"_index":923,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.putonhold",{"_index":892,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.reset",{"_index":1051,"title":{},"body":{"components/UiComponent.html":{}}}],["this.wizard.state.currentstep",{"_index":777,"title":{},"body":{"components/MapComponent.html":{},"components/WeatherComponent.html":{}}}],["this.wizard.state.steps[0].data.cent",{"_index":780,"title":{},"body":{"components/MapComponent.html":{}}}],["this.wizard.state.steps[1",{"_index":797,"title":{},"body":{"components/MapComponent.html":{}}}],["this.wizard.state.steps[2",{"_index":493,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{}}}],["this.wizard.state.steps[2].data.odpair",{"_index":494,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{}}}],["this.wizard.stepp",{"_index":1249,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.wizard.updatestep",{"_index":496,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{}}}],["this.wizard.updatestep(this.formgroup.valu",{"_index":899,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.wizardform",{"_index":1243,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.wizardform.get('formstep",{"_index":1242,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.wizardform.get('formsteps').get([index]).valu",{"_index":1256,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.zoom",{"_index":626,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["through",{"_index":700,"title":{},"body":{"injectables/LocationService.html":{}}}],["throw",{"_index":395,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["throwerror",{"_index":1184,"title":{},"body":{"injectables/WeatherService.html":{}}}],["throwerror('getweatherdata",{"_index":1201,"title":{},"body":{"injectables/WeatherService.html":{}}}],["time",{"_index":673,"title":{},"body":{"components/HomeComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["time.gettim",{"_index":1210,"title":{},"body":{"injectables/WeatherService.html":{}}}],["time.gettimezoneoffset",{"_index":1204,"title":{},"body":{"injectables/WeatherService.html":{}}}],["timelimit",{"_index":1615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["timeout",{"_index":922,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["timezon",{"_index":1207,"title":{},"body":{"injectables/WeatherService.html":{}}}],["timezoneoffset",{"_index":1203,"title":{},"body":{"injectables/WeatherService.html":{}}}],["tool",{"_index":1506,"title":{},"body":{"index.html":{}}}],["tort",{"_index":1567,"title":{},"body":{"license.html":{}}}],["total",{"_index":265,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["traffic",{"_index":222,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"components/HomeComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SimulationService.html":{},"interfaces/Tag.html":{},"injectables/WizardService.html":{},"index.html":{}}}],["trafficdata",{"_index":1593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transit",{"_index":1611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('void",{"_index":1600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translat",{"_index":1458,"title":{},"body":{"dependencies.html":{}}}],["translatez",{"_index":656,"title":{},"body":{"components/HomeComponent.html":{}}}],["transport",{"_index":325,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["tri",{"_index":379,"title":{},"body":{"classes/Edge.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WizardService.html":{}}}],["trigger('hometransit",{"_index":1599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"classes/Edge.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"injectables/WizardService.html":{},"miscellaneous/variables.html":{}}}],["turf/area",{"_index":1451,"title":{},"body":{"dependencies.html":{}}}],["turf/bear",{"_index":1456,"title":{},"body":{"dependencies.html":{}}}],["turf/cent",{"_index":1462,"title":{},"body":{"dependencies.html":{}}}],["turf/centroid",{"_index":1460,"title":{},"body":{"dependencies.html":{}}}],["turf/help",{"_index":1452,"title":{},"body":{"dependencies.html":{}}}],["turf/invari",{"_index":1454,"title":{},"body":{"dependencies.html":{}}}],["turf/transform",{"_index":1457,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":239,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["type",{"_index":132,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealias",{"_index":1576,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["ui",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["ui'},{'nam",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["ui.compon",{"_index":1074,"title":{},"body":{"modules/UiModule.html":{},"modules/UiRoutingModule.html":{}}}],["ui.component.html",{"_index":1016,"title":{},"body":{"components/UiComponent.html":{}}}],["ui.component.scss",{"_index":1015,"title":{},"body":{"components/UiComponent.html":{}}}],["ui/ui.module#uimodul",{"_index":152,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["uicompon",{"_index":61,"title":{"components/UiComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uiconfig",{"_index":768,"title":{},"body":{"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uiconfig.areaminlimit",{"_index":790,"title":{},"body":{"components/MapComponent.html":{}}}],["uiconfig.map.cent",{"_index":774,"title":{},"body":{"components/MapComponent.html":{}}}],["uiconfig.map.zoom",{"_index":775,"title":{},"body":{"components/MapComponent.html":{}}}],["uiconfig.maxodpair",{"_index":805,"title":{},"body":{"components/MapComponent.html":{}}}],["uiconfig.timelimit",{"_index":949,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["uimodul",{"_index":1062,"title":{"modules/UiModule.html":{}},"body":{"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["uiroutingmodul",{"_index":1067,"title":{"modules/UiRoutingModule.html":{}},"body":{"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["uistat",{"_index":1095,"title":{"interfaces/UiState.html":{}},"body":{"interfaces/UiState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unavail",{"_index":920,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["undefin",{"_index":337,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/functions.html":{}}}],["under",{"_index":1487,"title":{},"body":{"index.html":{}}}],["unix",{"_index":1213,"title":{},"body":{"injectables/WeatherService.html":{}}}],["unknown_error",{"_index":907,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["updat",{"_index":489,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"index.html":{}}}],["updategraph",{"_index":1331,"title":{},"body":{"injectables/WizardService.html":{}}}],["updateodpair",{"_index":745,"title":{},"body":{"components/MapComponent.html":{}}}],["updateodpairs(nod",{"_index":751,"title":{},"body":{"components/MapComponent.html":{}}}],["updateon",{"_index":1247,"title":{},"body":{"components/WizardComponent.html":{}}}],["updatestep",{"_index":1263,"title":{},"body":{"injectables/WizardService.html":{}}}],["updatestep(data",{"_index":1281,"title":{},"body":{"injectables/WizardService.html":{}}}],["updateweatherdata",{"_index":1165,"title":{},"body":{"injectables/WeatherService.html":{}}}],["updateweatherdata(data",{"_index":1178,"title":{},"body":{"injectables/WeatherService.html":{}}}],["uppercas",{"_index":1147,"title":{},"body":{"components/WeatherComponent.html":{}}}],["urban",{"_index":669,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["url",{"_index":1188,"title":{},"body":{"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["us",{"_index":671,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{},"license.html":{}}}],["usefactori",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":1097,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["utc",{"_index":1214,"title":{},"body":{"injectables/WeatherService.html":{}}}],["utctim",{"_index":1209,"title":{},"body":{"injectables/WeatherService.html":{}}}],["util",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"components/EstimateOfDemandComponent.html":{}}}],["valid",{"_index":808,"title":{},"body":{"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WizardComponent.html":{}}}],["validators.requir",{"_index":1246,"title":{},"body":{"components/WizardComponent.html":{}}}],["valu",{"_index":171,"title":{},"body":{"classes/BaseComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["valuechang",{"_index":169,"title":{},"body":{"classes/BaseComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WeatherComponent.html":{}}}],["var",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["variabl",{"_index":1386,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["veloc",{"_index":252,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["version",{"_index":424,"title":{},"body":{"classes/Edge.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WizardService.html":{}}}],["viewchild",{"_index":1232,"title":{},"body":{"components/WizardComponent.html":{}}}],["viewchild('stepp",{"_index":1241,"title":{},"body":{"components/WizardComponent.html":{}}}],["viewencapsul",{"_index":762,"title":{},"body":{"components/MapComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["viewencapsulation.non",{"_index":742,"title":{},"body":{"components/MapComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["visibl",{"_index":1151,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":174,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["wait",{"_index":1336,"title":{},"body":{"injectables/WizardService.html":{}}}],["want",{"_index":1047,"title":{},"body":{"components/UiComponent.html":{}}}],["warranti",{"_index":1552,"title":{},"body":{"license.html":{}}}],["weather",{"_index":1116,"title":{},"body":{"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{}}}],["weather'},{'nam",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["weather.component.html",{"_index":1118,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.component.scss",{"_index":1117,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.servic",{"_index":1156,"title":{},"body":{"modules/WeatherModule.html":{}}}],["weather/weather.compon",{"_index":1088,"title":{},"body":{"modules/UiModule.html":{}}}],["weather/weather.modul",{"_index":859,"title":{},"body":{"modules/NetworkModule.html":{}}}],["weathercompon",{"_index":63,"title":{"components/WeatherComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weathercondit",{"_index":1141,"title":{"interfaces/WeatherConditions.html":{}},"body":{"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["weatherconditions.descript",{"_index":1143,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weatherconditions.icon",{"_index":1144,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weathermodul",{"_index":857,"title":{"modules/WeatherModule.html":{}},"body":{"modules/NetworkModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["weatherservic",{"_index":1123,"title":{"injectables/WeatherService.html":{}},"body":{"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{},"coverage.html":{},"overview.html":{}}}],["web",{"_index":670,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{},"index.html":{}}}],["whether",{"_index":1565,"title":{},"body":{"license.html":{}}}],["width",{"_index":1058,"title":{},"body":{"components/UiComponent.html":{}}}],["without",{"_index":1533,"title":{},"body":{"license.html":{}}}],["wizard",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["wizard.component.html",{"_index":1220,"title":{},"body":{"components/WizardComponent.html":{}}}],["wizard.component.scss",{"_index":1219,"title":{},"body":{"components/WizardComponent.html":{}}}],["wizard.servic",{"_index":474,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WizardComponent.html":{}}}],["wizard/chang",{"_index":1081,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/estim",{"_index":1079,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/search",{"_index":1076,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/select",{"_index":1078,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/simulation/simulation.compon",{"_index":1083,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/statistics/statistics.compon",{"_index":1084,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/wizard.compon",{"_index":1075,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/wizard.servic",{"_index":765,"title":{},"body":{"components/MapComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{}}}],["wizardact",{"_index":551,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/WizardState.html":{},"miscellaneous/typealiases.html":{}}}],["wizardactiontyp",{"_index":539,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{}}}],["wizardactiontypes.goon",{"_index":537,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["wizardactiontypes.reset",{"_index":550,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["wizardactiontypes.stepchang",{"_index":545,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["wizardactiontypes.steperror",{"_index":547,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["wizardactiontypes.steppend",{"_index":548,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["wizardcompon",{"_index":65,"title":{"components/WizardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["wizardform",{"_index":1222,"title":{},"body":{"components/WizardComponent.html":{}}}],["wizardreduc",{"_index":1420,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["wizardreducer(st",{"_index":1362,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/functions.html":{}}}],["wizardservic",{"_index":452,"title":{"injectables/WizardService.html":{}},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"coverage.html":{},"overview.html":{}}}],["wizardst",{"_index":1109,"title":{"interfaces/WizardState.html":{}},"body":{"interfaces/UiState.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wrap",{"_index":711,"title":{},"body":{"injectables/LocationService.html":{}}}],["wrappedtext",{"_index":647,"title":{},"body":{"components/HomeComponent.html":{}}}],["ye",{"_index":678,"title":{},"body":{"components/InfoDialogComponent.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{}}}],["zone.j",{"_index":1476,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"components/GoogleMapComponent.html":{},"modules/LocationModule.html":{},"components/MapComponent.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent { }\n\n    \n\n    \n        \n\n    \n        \n            \n            \n                STRADA\n            \n\n            \n\n            \n                \n            \n            \n                \n                    About\n                \n            \n        \n    \n\n    \n\n        \n            \n        \n\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    STRADA                                                                                                                About                                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nDemandModule\n\nDemandModule\n\nAppModule -->\n\nDemandModule->AppModule\n\n\n\n\n\nLocationModule\n\nLocationModule\n\nAppModule -->\n\nLocationModule->AppModule\n\n\n\n\n\nNetworkModule\n\nNetworkModule\n\nAppModule -->\n\nNetworkModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nSimulationModule\n\nSimulationModule\n\nAppModule -->\n\nSimulationModule->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                HomeComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                            \n                                    DemandModule\n                            \n                            \n                                    LocationModule\n                            \n                            \n                                    NetworkModule\n                            \n                            \n                                    SharedModule\n                            \n                            \n                                    SimulationModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule, APP_INITIALIZER } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { SharedModule } from './shared/shared.module';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { LocationModule } from './location/location.module';\nimport { NetworkModule } from './network/network.module';\nimport { DemandModule } from './demand/demand.module';\nimport { SimulationModule } from './simulation/simulation.module';\n\nimport { loadScripts } from './utils';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        HomeComponent\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        SharedModule.forRoot(),\n        StoreModule.forRoot({}),\n        EffectsModule.forRoot([]),\n        LocationModule,\n        NetworkModule,\n        DemandModule,\n        SimulationModule\n    ],\n    providers: [\n        {\n            provide: APP_INITIALIZER,\n            useFactory: loadScripts,\n            deps: [],\n            multi: true\n        }\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPreloadingStrategy.html":{"url":"classes/AppPreloadingStrategy.html","title":"class - AppPreloadingStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPreloadingStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app-preloading-strategy.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        PreloadingStrategy\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                preload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            preload\n                            \n                            \n                        \n                    \n                \n                \n                    \npreload(route: Route, load: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app-preloading-strategy.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    Route\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        load\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { PreloadingStrategy, Route } from \"@angular/router\";\nimport { Observable, of } from \"rxjs\";\n\nexport class AppPreloadingStrategy implements PreloadingStrategy {\n\n    preload(route: Route, load: Function): Observable {\n        return route.data && route.data.preload ? load() : of(null);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppPreloadingStrategy } from './app-preloading-strategy';\n\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [\n    { path: '', redirectTo: 'home', pathMatch: 'full' },\n    { path: 'home', component: HomeComponent },\n    {\n        path: 'simulation',\n        loadChildren: './ui/ui.module#UiModule',\n        data: { preload: false }\n    },\n    { path: '**', redirectTo: 'home' }\n];\n\n@NgModule({\n    providers: [AppPreloadingStrategy],\n    imports: [\n        RouterModule.forRoot(routes, {\n            preloadingStrategy: AppPreloadingStrategy\n        })\n    ],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseComponent.html":{"url":"classes/BaseComponent.html","title":"class - BaseComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/base.component.ts\n        \n\n            \n                Description\n            \n            \n                Abstract class inherited from UI components.\n\n            \n\n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { OnInit, OnDestroy } from \"@angular/core\";\nimport { Subscription } from \"rxjs\";\n\n/**\n * Abstract class inherited from UI components.\n */\nexport abstract class BaseComponent implements OnInit, OnDestroy {\n\n    subscriptions: Subscription[] = [];\n\n    abstract ngOnInit(): void;\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach((subscription: Subscription) => {\n            if (subscription) { subscription.unsubscribe(); }\n        });\n    }\n\n    /**\n     * Subscribes to the form changes.\n     */\n    abstract valueChanges(): void;\n\n    /**\n     * Subscribes to the actions sent by other components.\n     */\n    abstract receiveActions(): void;\n\n    /**\n     * Subscribes to the actions sent to other components.\n     */\n    abstract sendActions(): void;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CanComponentDeactivate.html":{"url":"interfaces/CanComponentDeactivate.html","title":"interface - CanComponentDeactivate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CanComponentDeactivate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/can-deactivate-guard.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        canDeactivate\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canDeactivate\n                                    \n                                \n                                \n                                    \n                                        canDeactivate:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nexport interface CanComponentDeactivate {\n    canDeactivate: () => Observable | Promise | boolean;\n}\n\n@Injectable()\nexport class CanDeactivateGuard implements CanDeactivate {\n    canDeactivate(component: CanComponentDeactivate) {\n        return component.canDeactivate ? component.canDeactivate() : true;\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CanDeactivateGuard.html":{"url":"injectables/CanDeactivateGuard.html","title":"injectable - CanDeactivateGuard","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  CanDeactivateGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/can-deactivate-guard.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canDeactivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canDeactivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanDeactivate(component: CanComponentDeactivate)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/can-deactivate-guard.service.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        component\n                                                        \n                                                                    CanComponentDeactivate\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nexport interface CanComponentDeactivate {\n    canDeactivate: () => Observable | Promise | boolean;\n}\n\n@Injectable()\nexport class CanDeactivateGuard implements CanDeactivate {\n    canDeactivate(component: CanComponentDeactivate) {\n        return component.canDeactivate ? component.canDeactivate() : true;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangeOfConditionsComponent.html":{"url":"components/ChangeOfConditionsComponent.html","title":"component - ChangeOfConditionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChangeOfConditionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-change-of-conditions\n            \n\n            \n                styleUrls\n                change-of-conditions.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./change-of-conditions.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:13\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'wizard-change-of-conditions',\n    templateUrl: './change-of-conditions.component.html',\n    styleUrls: ['./change-of-conditions.component.scss']\n})\nexport class ChangeOfConditionsComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    constructor() { }\n\n    ngOnInit(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChangeOfConditionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Clock.html":{"url":"classes/Clock.html","title":"class - Clock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Clock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/clock.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Clock {\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DemandModule.html":{"url":"modules/DemandModule.html","title":"module - DemandModule","body":"\n                   \n\n\n\n\n  Modules\n  DemandModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DemandModule\n\n\n\ncluster_DemandModule_providers\n\n\n\n\nDemandService\n\nDemandService\n\n\n\nDemandModule\n\nDemandModule\n\nDemandModule -->\n\nDemandService->DemandModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/demand/demand.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     DemandService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { DemandService } from './demand.service';\n\n@NgModule({\n    imports: [],\n    declarations: [],\n    providers: [DemandService]\n})\nexport class DemandModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DemandService.html":{"url":"injectables/DemandService.html","title":"injectable - DemandService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  DemandService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/demand/demand.service.ts\n        \n\n            \n                Description\n            \n            \n                Estimates the O/D matrix of the traffic demand.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                odMatrix\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                calcOdMatrix\n                            \n                            \n                                    Public\n                                getOdMatrix\n                            \n                            \n                                    Public\n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            calcOdMatrix\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        calcOdMatrix()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:18\n                            \n                        \n\n\n                \n                    \n                            Calculates O/D matrix\n\n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getOdMatrix\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getOdMatrix()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     [][]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            odMatrix\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        odMatrix:     number[][]\n\n                    \n                \n                    \n                        \n                            Type :     number[][]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\n/**\n * Estimates the O/D matrix of the traffic demand.\n */\n@Injectable() export class DemandService {\n\n    private odMatrix: number[][] = [];\n\n    public reset(): void {\n        this.odMatrix = [];\n    }\n\n    /**\n     * Calculates O/D matrix\n     */\n    public calcOdMatrix(): Observable {\n        return of(null);\n    }\n\n    public getOdMatrix(): number[][] {\n        return this.odMatrix;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Edge.html":{"url":"classes/Edge.html","title":"class - Edge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Edge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                Link between two nodes.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                density\n                            \n                            \n                                    Public\n                                destination\n                            \n                            \n                                    Public\n                                distance\n                            \n                            \n                                    Public\n                                drawingOptions\n                            \n                            \n                                    Public\n                                duration\n                            \n                            \n                                    Public\n                                durationInTraffic\n                            \n                            \n                                    Public\n                                edgeId\n                            \n                            \n                                    Public\n                                flow\n                            \n                            \n                                    Public\n                                linkFlow\n                            \n                            \n                                    Public\n                                origin\n                            \n                            \n                                    Public\n                                tags\n                            \n                            \n                                    Public\n                                velocity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                calcLinkFlow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(edgeId: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/graph.ts:105\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edgeId\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            density\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        density:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:99\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            destination\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        destination:     Node\n\n                    \n                \n                    \n                        \n                            Type :     Node\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            distance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        distance:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:85\n                            \n                        \n\n                \n                    \n                        Indicates the distance in meters.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            drawingOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        drawingOptions:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:105\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            duration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        duration:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:90\n                            \n                        \n\n                \n                    \n                        Indicates the duration in seconds.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            durationInTraffic\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        durationInTraffic:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:95\n                            \n                        \n\n                \n                    \n                        Indicates the total duration of the edge, taking into account current traffic conditions.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            edgeId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        edgeId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            flow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        flow:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:101\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            linkFlow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        linkFlow:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:103\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            origin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        origin:     Node\n\n                    \n                \n                    \n                        \n                            Type :     Node\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tags:     Tag[]\n\n                    \n                \n                    \n                        \n                            Type :     Tag[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:80\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            velocity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        velocity:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:97\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            calcLinkFlow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        calcLinkFlow()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:114\n                            \n                        \n\n\n                \n                    \n                            Calculates the value of the arc flow and assigns it to the linkFlow attribute.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, of } from 'rxjs';\n\nimport * as combine from 'mout/array/combine';\n\nexport enum PathType {\n    distance = 'distance',\n    duration = 'duration'\n}\n\n/**\n * An O/D pair is described by the origin and destination nodes and the type of path.\n */\nexport interface OdPair {\n\n    origin: number;\n    destination: number;\n    pathType: PathType;\n\n}\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public label: number;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    public drawingOptions: { marker?: google.maps.Marker } = {};\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    public linkFlow: number;\n\n    public drawingOptions: { polyline?: google.maps.Polyline } = {};\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the arc flow and assigns it to the linkFlow attribute.\n     */\n    public calcLinkFlow(): void {\n\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    private nodes: Node[] = [];\n\n    private edges: Edge[] = [];\n\n    private relations: Relation[] = [];\n\n    private shortestPaths: Node[][] = [];\n\n    private incidenceMatrix: boolean[][] = [];\n\n    private assignmentMatrix: number[][] = [];\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.lat = node.lat;\n            existingNode.lon = node.lon;\n            existingNode.tags = combine(existingNode.tags, node.tags);\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public getEdge(edgeId: number): Edge {\n        return this.edges.find((edge: Edge) => edge.edgeId == edgeId);\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Key:oneway\n     * @param edgeId Id of the edge\n     */\n    public isOneway(edgeId: number): boolean {\n        return !!this.getEdge(edgeId).tags.find(tag => tag.key == 'oneway' && tag.value != 'no') ||\n            this.isRoundabout(edgeId);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Tag:junction%3Droundabout\n     * @param edgeId Id of the edge\n     */\n    public isRoundabout(edgeId: number): boolean {\n        return this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'roundabout') ||\n            this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'circular') ?\n            true : false;\n    }\n\n    /**\n     * Removes the edges with null distance.\n     */\n    public removeInvalidatedEdges(): void {\n        try {\n            const removedEdges: number[] = [];\n            if (this.edges.length > 0) {\n                for (let i = this.edges.length - 1; i >= 0; i--) {\n                    if (this.edges[i].distance == null) {\n                        removedEdges.push(this.edges[i].edgeId);\n                        this.edges.splice(i, 1);\n                    }\n                }\n                for (const edgeId of removedEdges) {\n                    for (const node of this.nodes) {\n                        if (node.incomingEdges.length > 0) {\n                            for (let i = node.incomingEdges.length - 1; i >= 0; i--) {\n                                if (node.incomingEdges[i].edgeId == edgeId) {\n                                    node.incomingEdges.splice(i, 1);\n                                }\n                            }\n                        }\n                        if (node.outgoingEdges.length > 0) {\n                            for (let i = node.outgoingEdges.length - 1; i >= 0; i--) {\n                                if (node.outgoingEdges[i].edgeId == edgeId) {\n                                    node.outgoingEdges.splice(i, 1);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        } catch (error) {\n            throw error;\n        }\n    }\n\n    /**\n     * Removes the nodes with no outgoing edges and incoming edges.\n     */\n    public removeDeadNodes(): void {\n        try {\n            if (this.nodes.length > 0) {\n                for (let i = this.nodes.length - 1; i >= 0; i--) {\n                    if (this.nodes[i].incomingEdges.length == 0 && this.nodes[i].outgoingEdges.length == 0) {\n                        this.nodes.splice(i, 1);\n                    }\n                }\n            }\n        } catch (error) {\n            throw error;\n        }\n    }\n\n    public getOdNode(label: number): Node {\n        return this.nodes.find((node: Node) => node.label == label);\n    }\n\n    public getOdNodes(): Node[] {\n        return this.nodes.filter((node: Node) => node.label);\n    }\n\n    /**\n     * Calculates the set of minimum paths.\n     * @param odPairs The O/D pairs\n     */\n    public calcShortestPaths(odPairs: OdPair[]): Observable {\n        return of(null);\n    }\n\n    public getShortestPaths(): Node[][] {\n        return this.shortestPaths;\n    }\n\n    /**\n     * Calculates the incidence matrix of paths for O/D pairs.\n     */\n    public calcIncidenceMatrix(): Observable {\n        return of(null);\n    }\n\n    public getIncidenceMatrix(): boolean[][] {\n        return this.incidenceMatrix;\n    }\n\n    /**\n     * Calculates the assignment matrix.\n     */\n    public calcAssignmentMatrix(): Observable {\n        return of(null);\n    }\n\n    public getAssignmentMatrix(): number[][] {\n        return this.assignmentMatrix;\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link distance or duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param origin Source node\n     * @param destination Destination node\n     * @param pathType Distance or duration\n     */\n    private getShortestPath(origin: number, destination: number, pathType: String): Node[] {\n        return null;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnumValues.html":{"url":"classes/EnumValues.html","title":"class - EnumValues","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnumValues\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/utils.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getNames\n                            \n                            \n                                    Static\n                                getValues\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getNames\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getNames(e: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/utils.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getValues\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getValues(e: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/utils.ts:9\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     T[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export type EnumValueType = string | number;\n\nexport class EnumValues {\n\n    public static getNames(e: any): string[] {\n        return Object.keys(e).filter((key: string) => isNaN(+key));\n    }\n\n    public static getValues(e: any): T[] {\n        return this.getNames(e).map((name: string) => e[name]) as T[];\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EstimateOfDemandComponent.html":{"url":"components/EstimateOfDemandComponent.html","title":"component - EstimateOfDemandComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EstimateOfDemandComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-estimate-of-demand\n            \n\n            \n                styleUrls\n                estimate-of-demand.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./estimate-of-demand.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pathTypes\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deletePair\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, wizard: WizardService, network: NetworkService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:24\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletePair\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeletePair(i: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        i\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:93\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pathTypes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pathTypes:     PathType[]\n\n                    \n                \n                    \n                        \n                            Type :     PathType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        odPairs\n                    \n                \n\n                \n                    \n                        getodPairs()\n                    \n                \n                            \n                                \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:28\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, FormArray } from '@angular/forms';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { WizardService } from '../wizard.service';\nimport { NetworkService } from '../../../network/network.service';\nimport * as fromUi from '../../models/reducers';\nimport { Step } from '../../models/wizard';\nimport { PathType } from '../../../network/graph';\nimport { EnumValues } from '../../utils';\n\nimport { BaseComponent } from '../../models/base.component';\n\n@Component({\n    selector: 'wizard-estimate-of-demand',\n    templateUrl: './estimate-of-demand.component.html',\n    styleUrls: ['./estimate-of-demand.component.scss']\n})\nexport class EstimateOfDemandComponent extends BaseComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    pathTypes: PathType[];\n\n    get odPairs(): FormArray {\n        return this.formGroup.get('odPairs') as FormArray;\n    }\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private store: Store,\n        private wizard: WizardService,\n        private network: NetworkService\n    ) {\n        super();\n\n        this.pathTypes = EnumValues.getValues(PathType);\n    }\n\n    ngOnInit(): void {\n        this.valueChanges();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    deletePair(i: number): void {\n        // Updates control.\n        const control = this.formGroup.get('odPairs') as FormArray;\n        control.removeAt(i);\n        // Updates step state.\n        const odPairs: number[][] = this.wizard.state.steps[2] ? this.wizard.state.steps[2].data.odPairs : [];\n        odPairs.pop();\n        this.wizard.updateStep({ odPairs: odPairs }, 2);\n    }\n\n    valueChanges(): void {\n        // Updates network service data on value changes.\n        this.subscriptions.push(this.formGroup.valueChanges.subscribe(\n            () => {\n                this.network.setOdPairs(this.formGroup.get('odPairs').value);\n            }\n        ));\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.steps)).subscribe((steps: Step[]) => {\n            if (steps[this.index]) {\n                const odPairs: number[][] = steps[this.index]['data']['odPairs'];\n                if (odPairs.length > 0) {\n                    const control = this.formGroup.get('odPairs') as FormArray;\n                    // Adds new O/D pair.\n                    if (control.length \n    \n\n    \n        \n    \n        \n            \n                O\n                D\n                Path\n                \n            \n            \n                \n                    {{ pair.value.origin }}\n                \n                \n                    {{ pair.value.destination }}\n                \n                \n                    \n                        \n                            {{ path }}\n                        \n                    \n                \n                \n                    \n                        delete\n                    \n                \n            \n        \n    \n\n    \n        Continue\n            navigate_next\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        O                D                Path                                                                            {{ pair.value.origin }}                                                    {{ pair.value.destination }}                                                                                                        {{ path }}                                                                                                                        delete                                                                        Continue            navigate_next            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EstimateOfDemandComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/footer/footer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentYear\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/footer/footer.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentYear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentYear:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : new Date().getFullYear()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/footer/footer.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-footer',\n    templateUrl: './footer.component.html',\n    styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n    currentYear: number = new Date().getFullYear();\n\n    ngOnInit(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n        \n            \n                \n                    \n                        Privacy\n                    \n                \n                \n                    \n                        Terms of service\n                    \n                \n            \n        \n    \n\n    \n\n    \n        \n            Copyright&nbsp;©&nbsp;{{ currentYear }} Roberto&nbsp;Simonetti\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                Privacy                                                                                                Terms of service                                                                                        Copyright © {{ currentYear }} Roberto Simonetti            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GoOn.html":{"url":"classes/GoOn.html","title":"class - GoOn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  GoOn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/actions/wizard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/models/actions/wizard.actions.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : WizardActionTypes.GoOn\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Step } from '../wizard';\n\n/**\n * ngrx: wizard Actions.\n */\nexport enum WizardActionTypes {\n\n    StepChanged = '[Wizard] Step Changed',\n    StepError = '[Wizard] Step Error',\n    StepPending = '[Wizard] Step Pending',\n    GoOn = '[Wizard] Go On',\n    Reset = '[Wizard] Reset'\n\n}\n\nexport class StepChanged implements Action {\n\n    public readonly type: string = WizardActionTypes.StepChanged;\n\n    constructor(public payload: { step: Step, index: number }) { }\n\n}\n\nexport class StepError implements Action {\n\n    public readonly type: string = WizardActionTypes.StepError;\n\n    constructor(public payload: string) { }\n\n}\n\nexport class StepPending implements Action {\n\n    public readonly type: string = WizardActionTypes.StepPending;\n\n    constructor(public payload: string | boolean) { }\n\n}\n\nexport class GoOn implements Action {\n\n    public readonly type: string = WizardActionTypes.GoOn;\n\n    constructor(public payload: { step: Step, index: number, nextIndex: number }) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = WizardActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type WizardActions = StepChanged | StepError | StepPending | GoOn | Reset;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GoogleMapComponent.html":{"url":"components/GoogleMapComponent.html","title":"component - GoogleMapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GoogleMapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/map/google-map.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                google-map\n            \n\n\n\n            \n                template\n                \n\n\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                map\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createMap\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                center\n                            \n                            \n                                disableDefaultUI\n                            \n                            \n                                disableDoubleClickZoom\n                            \n                            \n                                gestureHandling\n                            \n                            \n                                mapTypeId\n                            \n                            \n                                maxZoom\n                            \n                            \n                                minZoom\n                            \n                            \n                                styles\n                            \n                            \n                                zoom\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(map: MapService, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/map/google-map.component.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                    MapService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        center\n                    \n                    \n                        Center map. Required.\n\n                            \n                            Type:    google.maps.LatLngLiteral\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableDefaultUI\n                    \n                    \n                        Enables/disables all default UI.\n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableDoubleClickZoom\n                    \n                    \n                        Enables/disables zoom and center on double click. Enabled by default.\n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        gestureHandling\n                    \n                    \n                        This setting controls how gestures on the map are handled.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapTypeId\n                    \n                    \n                        The initial map mapTypeId. Defaults to ROADMAP.\n\n                            \n                            Type:    google.maps.MapTypeId\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxZoom\n                    \n                    \n                        The maximum zoom level which will be displayed on the map.\n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minZoom\n                    \n                    \n                        The minimum zoom level which will be displayed on the map.\n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        styles\n                    \n                    \n                        Styles to apply to each of the default map types.\n\n                            \n                            Type:    google.maps.MapTypeStyle[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:54\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zoom\n                    \n                    \n                        The initial map zoom level. Required.\n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:26\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createMap(el: HTMLElement)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                        \n                                                                    HTMLElement\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:71\n                            \n                        \n\n\n                \n                    \n                            On changes, updates center map & zoom.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:61\n                            \n                        \n\n\n                \n                    \n                            On init, creates map.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            map\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        map:     MapService\n\n                    \n                \n                    \n                        \n                            Type :     MapService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:56\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit, OnChanges, SimpleChange, ElementRef } from '@angular/core';\n\nimport { MapService } from './/map.service';\n\n@Component({\n    selector: 'google-map',\n    template: `\n        \n        \n        `\n})\nexport class GoogleMapComponent implements OnInit, OnChanges {\n\n    /**\n     * Center map. Required.\n     */\n    @Input() center: google.maps.LatLngLiteral;\n\n    /*\n     * MapOptions object specification.\n     */\n\n    /**\n     * The initial map zoom level. Required.\n     */\n    @Input() zoom: number;\n    /**\n     * Enables/disables all default UI.\n     */\n    @Input() disableDefaultUI: boolean;\n    /**\n     * Enables/disables zoom and center on double click. Enabled by default.\n     */\n    @Input() disableDoubleClickZoom: boolean;\n    /**\n     * The initial map mapTypeId. Defaults to ROADMAP.\n     */\n    @Input() mapTypeId: google.maps.MapTypeId;\n    /**\n     * The maximum zoom level which will be displayed on the map.\n     */\n    @Input() maxZoom: number;\n    /**\n     * The minimum zoom level which will be displayed on the map.\n     */\n    @Input() minZoom: number;\n    /**\n     * This setting controls how gestures on the map are handled.\n     */\n    @Input() gestureHandling: string;\n    /**\n     * Styles to apply to each of the default map types.\n     */\n    @Input() styles: google.maps.MapTypeStyle[];\n\n    constructor(public map: MapService, private elementRef: ElementRef) { }\n\n    /**\n     * On init, creates map.\n     */\n    ngOnInit(): void {\n        // Gets the map element.\n        const el: HTMLElement = this.elementRef.nativeElement.querySelector('#map');\n\n        this.createMap(el);\n    }\n\n    /**\n     * On changes, updates center map & zoom.\n     */\n    ngOnChanges(changes: { [propertyName: string]: SimpleChange }): void {\n        if (changes['center']) { this.map.setCenter(this.center); }\n        if (changes['zoom']) { this.map.setZoom(this.zoom); }\n    }\n\n    private createMap(el: HTMLElement): void {\n        this.map.initMap(el, {\n            center: this.center,\n            disableDefaultUI: this.disableDefaultUI,\n            disableDoubleClickZoom: this.disableDoubleClickZoom,\n            mapTypeId: this.mapTypeId,\n            maxZoom: this.maxZoom as number,\n            minZoom: this.minZoom as number,\n            gestureHandling: this.gestureHandling as string,\n            styles: this.styles,\n            zoom: this.zoom as number\n        });\n    }\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GoogleMapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home/home.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home/home.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        show:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, ElementRef } from '@angular/core';\n\nimport * as anime from 'animejs';\n\nimport { HOME_TRANSITION } from './home.transition';\n\n@Component({\n    selector: 'app-home',\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.scss'],\n    animations: [HOME_TRANSITION]\n})\nexport class HomeComponent implements OnInit, AfterViewInit {\n\n    show = false;\n\n    constructor(private elementRef: ElementRef) { }\n\n    ngOnInit(): void {\n        //\n    }\n\n    ngAfterViewInit(): void {\n        const element: HTMLElement = this.elementRef.nativeElement.querySelector('.headline .letters');\n        const text: string = element.innerText;\n        const letters: string[] = text.split('');\n\n        let wrappedText = '';\n        for (const letter of letters) {\n            wrappedText += `${letter}`;\n        }\n\n        element.innerHTML = wrappedText;\n\n        // Anime.\n        const basicTimeline = anime.timeline();\n        basicTimeline\n            .add({\n                targets: '.headline .letter',\n                scale: [0.3, 1],\n                opacity: [0, 1],\n                translateZ: 0,\n                easing: 'linear',\n                delay: (el, i) => {\n                    return 70 * (i + 1);\n                }\n            }).add({\n                targets: '.headline .line',\n                scaleX: [0, 1],\n                opacity: [0.5, 1],\n                easing: 'linear',\n                offset: '-=840',\n                delay: (el, i, l) => {\n                    return 70 * (l - i);\n                },\n                complete: (anim) => {\n                    this.show = true;\n                }\n            });\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                STRADA\n                \n            \n        \n        \n            \n                Simulation of TRAffic DAta\n                An urban traffic web simulator that uses data in real time\n                GET STARTED\n            \n        \n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        STRADA                                                                        Simulation of TRAffic DAta                An urban traffic web simulator that uses data in real time                GET STARTED                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoDialogComponent.html":{"url":"components/InfoDialogComponent.html","title":"component - InfoDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InfoDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/info-dialog.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                info-dialog\n            \n\n\n\n            \n                template\n                Info\n\n    {{ data }}\n\n\n    No\n    Yes\n\n\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/info-dialog.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/info-dialog.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/info-dialog.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n    selector: 'info-dialog',\n    template: `\n        Info\n        \n            {{ data }}\n        \n        \n            No\n            Yes\n        \n    `,\n    styles: []\n})\nexport class InfoDialogComponent {\n\n    constructor(\n        public dialogRef: MatDialogRef,\n        @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Info    {{ data }}    No    Yes'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InfoDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LocationModule.html":{"url":"modules/LocationModule.html","title":"module - LocationModule","body":"\n                   \n\n\n\n\n  Modules\n  LocationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_providers\n\n\n\n\nLocationService\n\nLocationService\n\n\n\nLocationModule\n\nLocationModule\n\nLocationModule -->\n\nLocationService->LocationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/location/location.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     LocationService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { LocationService } from './location.service';\n\n@NgModule({\n    imports: [],\n    declarations: [],\n    providers: [LocationService]\n})\nexport class LocationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocationService.html":{"url":"injectables/LocationService.html","title":"injectable - LocationService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  LocationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/location/location.service.ts\n        \n\n            \n                Description\n            \n            \n                Responsible for identifying the geographic coordinates of the simulation area,\nthrough geocoding or geolocation.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                geocoder\n                            \n                            \n                                    Private\n                                latLng\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                codeAddress\n                            \n                            \n                                    Public\n                                getCurrentPosition\n                            \n                            \n                                    Public\n                                getLatLng\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Public\n                                setLatLng\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/location/location.service.ts:15\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            codeAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        codeAddress(address: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/location/location.service.ts:31\n                            \n                        \n\n\n                \n                    \n                            Geocoding service.\nWraps the Google Maps API geocoding service into an observable.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        address\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The address to be searched\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    An observable of GeocoderResult\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getCurrentPosition\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getCurrentPosition()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/location/location.service.ts:53\n                            \n                        \n\n\n                \n                    \n                            Tries HTML5 geolocation.\nWraps the Geolocation API into an observable.\n\n\n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    An observable of Position\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getLatLng\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getLatLng()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/location/location.service.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     google.maps.LatLngLiteral\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/location/location.service.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setLatLng\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setLatLng(latLng: google.maps.LatLngLiteral)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/location/location.service.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        latLng\n                                                        \n                                                                    google.maps.LatLngLiteral\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            geocoder\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        geocoder:     google.maps.Geocoder\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.Geocoder\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/location/location.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            latLng\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        latLng:     google.maps.LatLngLiteral\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.LatLngLiteral\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/location/location.service.ts:13\n                            \n                        \n\n                \n                    \n                        Center of the area (latitude, longitude).\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\n/**\n * Responsible for identifying the geographic coordinates of the simulation area,\n * through geocoding or geolocation.\n */\n@Injectable() export class LocationService {\n\n    /**\n     * Center of the area (latitude, longitude).\n     */\n    private latLng: google.maps.LatLngLiteral;\n\n    private geocoder: google.maps.Geocoder;\n\n    constructor() {\n        this.geocoder = new google.maps.Geocoder();\n    }\n\n    public reset(): void {\n        this.latLng = null;\n    }\n\n    /**\n     * Geocoding service.\n     * Wraps the Google Maps API geocoding service into an observable.\n     * @param address The address to be searched\n     * @return An observable of GeocoderResult\n     */\n    public codeAddress(address: string): Observable {\n        return Observable.create((observer: Observer) => {\n            // Invokes geocode method of Google Maps API geocoding.\n            this.geocoder.geocode({ address: address }, (\n                (results: google.maps.GeocoderResult[], status: google.maps.GeocoderStatus) => {\n                    if (status === google.maps.GeocoderStatus.OK) {\n                        observer.next(results);\n                        observer.complete();\n                    } else {\n                        observer.error(status);\n                    }\n                })\n            );\n        });\n    }\n\n    /**\n     * Tries HTML5 geolocation.\n     * Wraps the Geolocation API into an observable.\n     *\n     * @return An observable of Position\n     */\n    public getCurrentPosition(): Observable {\n        return Observable.create((observer: Observer) => {\n            // Invokes getCurrentPosition method of Geolocation API.\n            navigator.geolocation.getCurrentPosition(\n                (position: Position) => {\n                    observer.next(position);\n                    observer.complete();\n                },\n                (error: PositionError) => {\n                    observer.error(error);\n                }\n            );\n        });\n    }\n\n    public getLatLng(): google.maps.LatLngLiteral {\n        return this.latLng;\n    }\n\n    public setLatLng(latLng: google.maps.LatLngLiteral): void {\n        this.latLng = latLng;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapComponent.html":{"url":"components/MapComponent.html","title":"component - MapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/map/map.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                ui-map\n            \n\n            \n                styleUrls\n                map.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./map.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                center\n                            \n                            \n                                disableDefaultUI\n                            \n                            \n                                disableDoubleClickZoom\n                            \n                            \n                                gestureHandling\n                            \n                            \n                                mapTypeId\n                            \n                            \n                                maxZoom\n                            \n                            \n                                minZoom\n                            \n                            \n                                styles\n                            \n                            \n                                zoom\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                updateOdPairs\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, wizard: WizardService, map: MapService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/map/map.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                    MapService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:111\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateOdPairs\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateOdPairs(node: Node)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:125\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                                    Node\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            center\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        center:     google.maps.LatLngLiteral\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.LatLngLiteral\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableDefaultUI\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        disableDefaultUI:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableDoubleClickZoom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        disableDoubleClickZoom:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gestureHandling\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gestureHandling:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapTypeId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mapTypeId:     google.maps.MapTypeId\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.MapTypeId\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxZoom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maxZoom:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minZoom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        minZoom:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            styles\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        styles:     google.maps.MapTypeStyle[]\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.MapTypeStyle[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            zoom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zoom:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { Store, select } from '@ngrx/store';\nimport * as equals from 'mout/array/equals';\n\nimport { WizardService } from '../wizard/wizard.service';\nimport { MapService } from './map.service';\nimport { MapStyle } from './map.style';\nimport * as fromUi from '../models/reducers';\nimport { Step } from '../models/wizard';\nimport { uiConfig } from '../ui-config';\nimport { Node } from '../../network/graph';\n\nimport { BaseComponent } from '../models/base.component';\n\n@Component({\n    selector: 'ui-map',\n    templateUrl: './map.component.html',\n    styleUrls: ['./map.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class MapComponent extends BaseComponent implements OnInit {\n\n    // Center map. Required.\n    center: google.maps.LatLngLiteral;\n\n    // The initial map zoom level. Required.\n    zoom: number;\n\n    disableDefaultUI: boolean;\n    disableDoubleClickZoom: boolean;\n    mapTypeId: google.maps.MapTypeId;\n    maxZoom: number;\n    minZoom: number;\n    gestureHandling: string;\n    styles: google.maps.MapTypeStyle[];\n\n    constructor(\n        private store: Store,\n        private wizard: WizardService,\n        private map: MapService\n    ) {\n        super();\n        // Map options.\n        this.disableDefaultUI = true;\n        this.disableDoubleClickZoom = false;\n        this.mapTypeId = google.maps.MapTypeId.ROADMAP;\n        this.maxZoom = 18;\n        this.minZoom = 4;\n        this.gestureHandling = 'cooperative';\n        this.styles = MapStyle;\n    }\n\n    ngOnInit(): void {\n        this.center = uiConfig.map.center;\n        this.zoom = uiConfig.map.zoom;\n\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        //\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.steps)).subscribe((steps: Step[]) => {\n            switch (this.wizard.state.currentStep) {\n                case 0:\n                    if (steps[0]) {\n                        // Updates center map.\n                        this.center = this.wizard.state.steps[0].data.center;\n                        this.zoom = 16;\n                    }\n                    break;\n                case 2:\n                    // Removes the rectangle.\n                    this.map.removeRect();\n                    if (steps[2]) {\n                        // Updated O/D nodes.\n                        const odPairs: number[][] = this.wizard.state.steps[2] ? this.wizard.state.steps[2].data.odPairs : [];\n                        this.map.updateOdNodes(odPairs);\n                    }\n                    break;\n            }\n        }));\n\n        // Checks area limit.\n        this.subscriptions.push(this.map.getArea().subscribe((area: number) => {\n            if (area >= uiConfig.areaMinLimit && area  {\n            this.center = uiConfig.map.center;\n            this.zoom = uiConfig.map.zoom;\n        }));\n\n        // nodeSelected event.\n        this.subscriptions.push(this.map.nodeSelected.subscribe((node: Node) => {\n            this.updateOdPairs(node);\n        }));\n    }\n\n    sendActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.currentStep)).subscribe((currentStep: number) => {\n            switch (currentStep) {\n                case 1:\n                    if (!this.wizard.state.steps[1]) {\n                        // Builds & shows initial rectangle.\n                        const bounds: google.maps.LatLngBoundsLiteral = this.map.buildBounds(this.center);\n                        this.map.showRect(bounds);\n                    }\n                    break;\n            }\n        }));\n    }\n\n    updateOdPairs(node: Node): void {\n        const odPairs: number[][] = this.wizard.state.steps[2] ? this.wizard.state.steps[2].data.odPairs : [];\n\n        let error = null;\n\n        if (odPairs.length > 0) {\n            const lastOdPair = odPairs[odPairs.length - 1];\n            // Checks limit.\n            if (odPairs.length == uiConfig.maxOdPairs && odPairs[uiConfig.maxOdPairs - 1].length == 2) {\n                error = `The maximum number of O/D pairs is ${uiConfig.maxOdPairs}`;\n                // Checks if valid node.\n            } else if (lastOdPair.length == 1 && node.incomingEdges.length == 0) {\n                error = `The node cannot be a destination`;\n            } else if (lastOdPair.length == 2 && node.outgoingEdges.length == 0) {\n                error = `The node cannot be an origin`;\n                // Checks if last O/D pair is completed.\n            } else if (lastOdPair.length == 2) {\n                odPairs.push([node.label]);\n                // Checks if same node.\n            } else if (lastOdPair[0] == node.label) {\n                error = `The origin and destination nodes can not be the same`;\n            } else {\n                lastOdPair.push(node.label);\n                // Checks if the pair is valid.\n                if (odPairs.filter(pair => equals(pair, lastOdPair)).length == 2) {\n                    lastOdPair.pop();\n                    error = `O/D pair already selected`;\n                }\n            }\n        } else {\n            if (node.outgoingEdges.length == 0) {\n                error = `The node cannot be an origin`;\n            } else {\n                odPairs.push([node.label]);\n            }\n        }\n        // Sends events.\n        if (error) {\n            this.wizard.putInError(error);\n        } else {\n            // Updates step state.\n            this.wizard.updateStep({ odPairs: odPairs }, 2);\n        }\n    }\n}\n\n    \n\n    \n        \n    \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n  Modules\n  MaterialModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/material.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport {\n    MatSidenavModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatIconRegistry,\n    MatButtonModule,\n    MatIconModule,\n    MatMenuModule,\n    MatStepperModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule,\n    MatDialogModule,\n    MatGridListModule,\n    MatSelectModule\n} from '@angular/material';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nconst materialModules: any[] = [\n    MatSidenavModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    MatMenuModule,\n    MatStepperModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule,\n    MatDialogModule,\n    MatGridListModule,\n    MatSelectModule\n];\n\n@NgModule({\n    imports: materialModules,\n    exports: materialModules\n})\nexport class MaterialModule {\n\n    constructor(matIconRegistry: MatIconRegistry, domSanitizer: DomSanitizer) {\n        matIconRegistry.addSvgIcon(\n            'more_vert', domSanitizer.bypassSecurityTrustResourceUrl('./assets/images/ic_more_vert_24px.svg')\n        );\n        matIconRegistry.addSvgIcon(\n            'code', domSanitizer.bypassSecurityTrustResourceUrl('./assets/images/ic_code_24px.svg')\n        );\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Member.html":{"url":"interfaces/Member.html","title":"interface - Member","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Member\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                Relation's member.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ref\n                                \n                                \n                                        role\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ref\n                                    \n                                \n                                \n                                    \n                                        ref:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable, of } from 'rxjs';\n\nimport * as combine from 'mout/array/combine';\n\nexport enum PathType {\n    distance = 'distance',\n    duration = 'duration'\n}\n\n/**\n * An O/D pair is described by the origin and destination nodes and the type of path.\n */\nexport interface OdPair {\n\n    origin: number;\n    destination: number;\n    pathType: PathType;\n\n}\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public label: number;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    public drawingOptions: { marker?: google.maps.Marker } = {};\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    public linkFlow: number;\n\n    public drawingOptions: { polyline?: google.maps.Polyline } = {};\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the arc flow and assigns it to the linkFlow attribute.\n     */\n    public calcLinkFlow(): void {\n\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    private nodes: Node[] = [];\n\n    private edges: Edge[] = [];\n\n    private relations: Relation[] = [];\n\n    private shortestPaths: Node[][] = [];\n\n    private incidenceMatrix: boolean[][] = [];\n\n    private assignmentMatrix: number[][] = [];\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.lat = node.lat;\n            existingNode.lon = node.lon;\n            existingNode.tags = combine(existingNode.tags, node.tags);\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public getEdge(edgeId: number): Edge {\n        return this.edges.find((edge: Edge) => edge.edgeId == edgeId);\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Key:oneway\n     * @param edgeId Id of the edge\n     */\n    public isOneway(edgeId: number): boolean {\n        return !!this.getEdge(edgeId).tags.find(tag => tag.key == 'oneway' && tag.value != 'no') ||\n            this.isRoundabout(edgeId);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Tag:junction%3Droundabout\n     * @param edgeId Id of the edge\n     */\n    public isRoundabout(edgeId: number): boolean {\n        return this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'roundabout') ||\n            this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'circular') ?\n            true : false;\n    }\n\n    /**\n     * Removes the edges with null distance.\n     */\n    public removeInvalidatedEdges(): void {\n        try {\n            const removedEdges: number[] = [];\n            if (this.edges.length > 0) {\n                for (let i = this.edges.length - 1; i >= 0; i--) {\n                    if (this.edges[i].distance == null) {\n                        removedEdges.push(this.edges[i].edgeId);\n                        this.edges.splice(i, 1);\n                    }\n                }\n                for (const edgeId of removedEdges) {\n                    for (const node of this.nodes) {\n                        if (node.incomingEdges.length > 0) {\n                            for (let i = node.incomingEdges.length - 1; i >= 0; i--) {\n                                if (node.incomingEdges[i].edgeId == edgeId) {\n                                    node.incomingEdges.splice(i, 1);\n                                }\n                            }\n                        }\n                        if (node.outgoingEdges.length > 0) {\n                            for (let i = node.outgoingEdges.length - 1; i >= 0; i--) {\n                                if (node.outgoingEdges[i].edgeId == edgeId) {\n                                    node.outgoingEdges.splice(i, 1);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        } catch (error) {\n            throw error;\n        }\n    }\n\n    /**\n     * Removes the nodes with no outgoing edges and incoming edges.\n     */\n    public removeDeadNodes(): void {\n        try {\n            if (this.nodes.length > 0) {\n                for (let i = this.nodes.length - 1; i >= 0; i--) {\n                    if (this.nodes[i].incomingEdges.length == 0 && this.nodes[i].outgoingEdges.length == 0) {\n                        this.nodes.splice(i, 1);\n                    }\n                }\n            }\n        } catch (error) {\n            throw error;\n        }\n    }\n\n    public getOdNode(label: number): Node {\n        return this.nodes.find((node: Node) => node.label == label);\n    }\n\n    public getOdNodes(): Node[] {\n        return this.nodes.filter((node: Node) => node.label);\n    }\n\n    /**\n     * Calculates the set of minimum paths.\n     * @param odPairs The O/D pairs\n     */\n    public calcShortestPaths(odPairs: OdPair[]): Observable {\n        return of(null);\n    }\n\n    public getShortestPaths(): Node[][] {\n        return this.shortestPaths;\n    }\n\n    /**\n     * Calculates the incidence matrix of paths for O/D pairs.\n     */\n    public calcIncidenceMatrix(): Observable {\n        return of(null);\n    }\n\n    public getIncidenceMatrix(): boolean[][] {\n        return this.incidenceMatrix;\n    }\n\n    /**\n     * Calculates the assignment matrix.\n     */\n    public calcAssignmentMatrix(): Observable {\n        return of(null);\n    }\n\n    public getAssignmentMatrix(): number[][] {\n        return this.assignmentMatrix;\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link distance or duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param origin Source node\n     * @param destination Destination node\n     * @param pathType Distance or duration\n     */\n    private getShortestPath(origin: number, destination: number, pathType: String): Node[] {\n        return null;\n    }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MessageArchivedComponent.html":{"url":"components/MessageArchivedComponent.html","title":"component - MessageArchivedComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MessageArchivedComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/message-archived.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snack-bar\n            \n\n\n\n            \n                template\n                {{ data }}\n\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/message-archived.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/message-archived.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material';\n\n@Component({\n    selector: 'snack-bar',\n    template: `\n        {{ data }}\n    `,\n    styles: []\n})\nexport class MessageArchivedComponent {\n\n    constructor(@Inject(MAT_SNACK_BAR_DATA) public data: any) { }\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ data }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MessageArchivedComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NetworkModule.html":{"url":"modules/NetworkModule.html","title":"module - NetworkModule","body":"\n                   \n\n\n\n\n  Modules\n  NetworkModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NetworkModule\n\n\n\ncluster_NetworkModule_imports\n\n\n\ncluster_NetworkModule_providers\n\n\n\n\nWeatherModule\n\nWeatherModule\n\n\n\nNetworkModule\n\nNetworkModule\n\nNetworkModule -->\n\nWeatherModule->NetworkModule\n\n\n\n\n\nNetworkService\n\nNetworkService\n\nNetworkModule -->\n\nNetworkService->NetworkModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/network/network.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     NetworkService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    WeatherModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { WeatherModule } from './weather/weather.module';\n\nimport { NetworkService } from './network.service';\n\n@NgModule({\n    imports: [WeatherModule],\n    declarations: [],\n    providers: [NetworkService]\n})\nexport class NetworkModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Node.html":{"url":"classes/Node.html","title":"class - Node","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Node\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                Node represents a specific point on the earth's surface defined by its latitude and longitude.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                drawingOptions\n                            \n                            \n                                    Public\n                                incomingEdges\n                            \n                            \n                                    Public\n                                label\n                            \n                            \n                                    Public\n                                lat\n                            \n                            \n                                    Public\n                                lon\n                            \n                            \n                                    Public\n                                nodeId\n                            \n                            \n                                    Public\n                                outgoingEdges\n                            \n                            \n                                    Public\n                                tags\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(nodeId: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/graph.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        nodeId\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            drawingOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        drawingOptions:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            incomingEdges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        incomingEdges:     Edge[]\n\n                    \n                \n                    \n                        \n                            Type :     Edge[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            label\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        label:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lat\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lat:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lon:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nodeId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nodeId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            outgoingEdges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        outgoingEdges:     Edge[]\n\n                    \n                \n                    \n                        \n                            Type :     Edge[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tags:     Tag[]\n\n                    \n                \n                    \n                        \n                            Type :     Tag[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, of } from 'rxjs';\n\nimport * as combine from 'mout/array/combine';\n\nexport enum PathType {\n    distance = 'distance',\n    duration = 'duration'\n}\n\n/**\n * An O/D pair is described by the origin and destination nodes and the type of path.\n */\nexport interface OdPair {\n\n    origin: number;\n    destination: number;\n    pathType: PathType;\n\n}\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public label: number;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    public drawingOptions: { marker?: google.maps.Marker } = {};\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    public linkFlow: number;\n\n    public drawingOptions: { polyline?: google.maps.Polyline } = {};\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the arc flow and assigns it to the linkFlow attribute.\n     */\n    public calcLinkFlow(): void {\n\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    private nodes: Node[] = [];\n\n    private edges: Edge[] = [];\n\n    private relations: Relation[] = [];\n\n    private shortestPaths: Node[][] = [];\n\n    private incidenceMatrix: boolean[][] = [];\n\n    private assignmentMatrix: number[][] = [];\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.lat = node.lat;\n            existingNode.lon = node.lon;\n            existingNode.tags = combine(existingNode.tags, node.tags);\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public getEdge(edgeId: number): Edge {\n        return this.edges.find((edge: Edge) => edge.edgeId == edgeId);\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Key:oneway\n     * @param edgeId Id of the edge\n     */\n    public isOneway(edgeId: number): boolean {\n        return !!this.getEdge(edgeId).tags.find(tag => tag.key == 'oneway' && tag.value != 'no') ||\n            this.isRoundabout(edgeId);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Tag:junction%3Droundabout\n     * @param edgeId Id of the edge\n     */\n    public isRoundabout(edgeId: number): boolean {\n        return this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'roundabout') ||\n            this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'circular') ?\n            true : false;\n    }\n\n    /**\n     * Removes the edges with null distance.\n     */\n    public removeInvalidatedEdges(): void {\n        try {\n            const removedEdges: number[] = [];\n            if (this.edges.length > 0) {\n                for (let i = this.edges.length - 1; i >= 0; i--) {\n                    if (this.edges[i].distance == null) {\n                        removedEdges.push(this.edges[i].edgeId);\n                        this.edges.splice(i, 1);\n                    }\n                }\n                for (const edgeId of removedEdges) {\n                    for (const node of this.nodes) {\n                        if (node.incomingEdges.length > 0) {\n                            for (let i = node.incomingEdges.length - 1; i >= 0; i--) {\n                                if (node.incomingEdges[i].edgeId == edgeId) {\n                                    node.incomingEdges.splice(i, 1);\n                                }\n                            }\n                        }\n                        if (node.outgoingEdges.length > 0) {\n                            for (let i = node.outgoingEdges.length - 1; i >= 0; i--) {\n                                if (node.outgoingEdges[i].edgeId == edgeId) {\n                                    node.outgoingEdges.splice(i, 1);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        } catch (error) {\n            throw error;\n        }\n    }\n\n    /**\n     * Removes the nodes with no outgoing edges and incoming edges.\n     */\n    public removeDeadNodes(): void {\n        try {\n            if (this.nodes.length > 0) {\n                for (let i = this.nodes.length - 1; i >= 0; i--) {\n                    if (this.nodes[i].incomingEdges.length == 0 && this.nodes[i].outgoingEdges.length == 0) {\n                        this.nodes.splice(i, 1);\n                    }\n                }\n            }\n        } catch (error) {\n            throw error;\n        }\n    }\n\n    public getOdNode(label: number): Node {\n        return this.nodes.find((node: Node) => node.label == label);\n    }\n\n    public getOdNodes(): Node[] {\n        return this.nodes.filter((node: Node) => node.label);\n    }\n\n    /**\n     * Calculates the set of minimum paths.\n     * @param odPairs The O/D pairs\n     */\n    public calcShortestPaths(odPairs: OdPair[]): Observable {\n        return of(null);\n    }\n\n    public getShortestPaths(): Node[][] {\n        return this.shortestPaths;\n    }\n\n    /**\n     * Calculates the incidence matrix of paths for O/D pairs.\n     */\n    public calcIncidenceMatrix(): Observable {\n        return of(null);\n    }\n\n    public getIncidenceMatrix(): boolean[][] {\n        return this.incidenceMatrix;\n    }\n\n    /**\n     * Calculates the assignment matrix.\n     */\n    public calcAssignmentMatrix(): Observable {\n        return of(null);\n    }\n\n    public getAssignmentMatrix(): number[][] {\n        return this.assignmentMatrix;\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link distance or duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param origin Source node\n     * @param destination Destination node\n     * @param pathType Distance or duration\n     */\n    private getShortestPath(origin: number, destination: number, pathType: String): Node[] {\n        return null;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OdPair.html":{"url":"interfaces/OdPair.html","title":"interface - OdPair","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OdPair\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                An O/D pair is described by the origin and destination nodes and the type of path.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        destination\n                                \n                                \n                                        origin\n                                \n                                \n                                        pathType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                    \n                                \n                                \n                                    \n                                        destination:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        origin\n                                    \n                                \n                                \n                                    \n                                        origin:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pathType\n                                    \n                                \n                                \n                                    \n                                        pathType:     PathType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PathType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable, of } from 'rxjs';\n\nimport * as combine from 'mout/array/combine';\n\nexport enum PathType {\n    distance = 'distance',\n    duration = 'duration'\n}\n\n/**\n * An O/D pair is described by the origin and destination nodes and the type of path.\n */\nexport interface OdPair {\n\n    origin: number;\n    destination: number;\n    pathType: PathType;\n\n}\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public label: number;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    public drawingOptions: { marker?: google.maps.Marker } = {};\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    public linkFlow: number;\n\n    public drawingOptions: { polyline?: google.maps.Polyline } = {};\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the arc flow and assigns it to the linkFlow attribute.\n     */\n    public calcLinkFlow(): void {\n\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    private nodes: Node[] = [];\n\n    private edges: Edge[] = [];\n\n    private relations: Relation[] = [];\n\n    private shortestPaths: Node[][] = [];\n\n    private incidenceMatrix: boolean[][] = [];\n\n    private assignmentMatrix: number[][] = [];\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.lat = node.lat;\n            existingNode.lon = node.lon;\n            existingNode.tags = combine(existingNode.tags, node.tags);\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public getEdge(edgeId: number): Edge {\n        return this.edges.find((edge: Edge) => edge.edgeId == edgeId);\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Key:oneway\n     * @param edgeId Id of the edge\n     */\n    public isOneway(edgeId: number): boolean {\n        return !!this.getEdge(edgeId).tags.find(tag => tag.key == 'oneway' && tag.value != 'no') ||\n            this.isRoundabout(edgeId);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Tag:junction%3Droundabout\n     * @param edgeId Id of the edge\n     */\n    public isRoundabout(edgeId: number): boolean {\n        return this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'roundabout') ||\n            this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'circular') ?\n            true : false;\n    }\n\n    /**\n     * Removes the edges with null distance.\n     */\n    public removeInvalidatedEdges(): void {\n        try {\n            const removedEdges: number[] = [];\n            if (this.edges.length > 0) {\n                for (let i = this.edges.length - 1; i >= 0; i--) {\n                    if (this.edges[i].distance == null) {\n                        removedEdges.push(this.edges[i].edgeId);\n                        this.edges.splice(i, 1);\n                    }\n                }\n                for (const edgeId of removedEdges) {\n                    for (const node of this.nodes) {\n                        if (node.incomingEdges.length > 0) {\n                            for (let i = node.incomingEdges.length - 1; i >= 0; i--) {\n                                if (node.incomingEdges[i].edgeId == edgeId) {\n                                    node.incomingEdges.splice(i, 1);\n                                }\n                            }\n                        }\n                        if (node.outgoingEdges.length > 0) {\n                            for (let i = node.outgoingEdges.length - 1; i >= 0; i--) {\n                                if (node.outgoingEdges[i].edgeId == edgeId) {\n                                    node.outgoingEdges.splice(i, 1);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        } catch (error) {\n            throw error;\n        }\n    }\n\n    /**\n     * Removes the nodes with no outgoing edges and incoming edges.\n     */\n    public removeDeadNodes(): void {\n        try {\n            if (this.nodes.length > 0) {\n                for (let i = this.nodes.length - 1; i >= 0; i--) {\n                    if (this.nodes[i].incomingEdges.length == 0 && this.nodes[i].outgoingEdges.length == 0) {\n                        this.nodes.splice(i, 1);\n                    }\n                }\n            }\n        } catch (error) {\n            throw error;\n        }\n    }\n\n    public getOdNode(label: number): Node {\n        return this.nodes.find((node: Node) => node.label == label);\n    }\n\n    public getOdNodes(): Node[] {\n        return this.nodes.filter((node: Node) => node.label);\n    }\n\n    /**\n     * Calculates the set of minimum paths.\n     * @param odPairs The O/D pairs\n     */\n    public calcShortestPaths(odPairs: OdPair[]): Observable {\n        return of(null);\n    }\n\n    public getShortestPaths(): Node[][] {\n        return this.shortestPaths;\n    }\n\n    /**\n     * Calculates the incidence matrix of paths for O/D pairs.\n     */\n    public calcIncidenceMatrix(): Observable {\n        return of(null);\n    }\n\n    public getIncidenceMatrix(): boolean[][] {\n        return this.incidenceMatrix;\n    }\n\n    /**\n     * Calculates the assignment matrix.\n     */\n    public calcAssignmentMatrix(): Observable {\n        return of(null);\n    }\n\n    public getAssignmentMatrix(): number[][] {\n        return this.assignmentMatrix;\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link distance or duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param origin Source node\n     * @param destination Destination node\n     * @param pathType Distance or duration\n     */\n    private getShortestPath(origin: number, destination: number, pathType: String): Node[] {\n        return null;\n    }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Relation.html":{"url":"classes/Relation.html","title":"class - Relation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Relation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                members\n                            \n                            \n                                    Public\n                                relationId\n                            \n                            \n                                    Public\n                                tags\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(relationId: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/graph.ts:129\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        relationId\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            members\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        members:     Member[]\n\n                    \n                \n                    \n                        \n                            Type :     Member[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:127\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            relationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        relationId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:125\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tags:     Tag[]\n\n                    \n                \n                    \n                        \n                            Type :     Tag[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:129\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, of } from 'rxjs';\n\nimport * as combine from 'mout/array/combine';\n\nexport enum PathType {\n    distance = 'distance',\n    duration = 'duration'\n}\n\n/**\n * An O/D pair is described by the origin and destination nodes and the type of path.\n */\nexport interface OdPair {\n\n    origin: number;\n    destination: number;\n    pathType: PathType;\n\n}\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public label: number;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    public drawingOptions: { marker?: google.maps.Marker } = {};\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    public linkFlow: number;\n\n    public drawingOptions: { polyline?: google.maps.Polyline } = {};\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the arc flow and assigns it to the linkFlow attribute.\n     */\n    public calcLinkFlow(): void {\n\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    private nodes: Node[] = [];\n\n    private edges: Edge[] = [];\n\n    private relations: Relation[] = [];\n\n    private shortestPaths: Node[][] = [];\n\n    private incidenceMatrix: boolean[][] = [];\n\n    private assignmentMatrix: number[][] = [];\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.lat = node.lat;\n            existingNode.lon = node.lon;\n            existingNode.tags = combine(existingNode.tags, node.tags);\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public getEdge(edgeId: number): Edge {\n        return this.edges.find((edge: Edge) => edge.edgeId == edgeId);\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Key:oneway\n     * @param edgeId Id of the edge\n     */\n    public isOneway(edgeId: number): boolean {\n        return !!this.getEdge(edgeId).tags.find(tag => tag.key == 'oneway' && tag.value != 'no') ||\n            this.isRoundabout(edgeId);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Tag:junction%3Droundabout\n     * @param edgeId Id of the edge\n     */\n    public isRoundabout(edgeId: number): boolean {\n        return this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'roundabout') ||\n            this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'circular') ?\n            true : false;\n    }\n\n    /**\n     * Removes the edges with null distance.\n     */\n    public removeInvalidatedEdges(): void {\n        try {\n            const removedEdges: number[] = [];\n            if (this.edges.length > 0) {\n                for (let i = this.edges.length - 1; i >= 0; i--) {\n                    if (this.edges[i].distance == null) {\n                        removedEdges.push(this.edges[i].edgeId);\n                        this.edges.splice(i, 1);\n                    }\n                }\n                for (const edgeId of removedEdges) {\n                    for (const node of this.nodes) {\n                        if (node.incomingEdges.length > 0) {\n                            for (let i = node.incomingEdges.length - 1; i >= 0; i--) {\n                                if (node.incomingEdges[i].edgeId == edgeId) {\n                                    node.incomingEdges.splice(i, 1);\n                                }\n                            }\n                        }\n                        if (node.outgoingEdges.length > 0) {\n                            for (let i = node.outgoingEdges.length - 1; i >= 0; i--) {\n                                if (node.outgoingEdges[i].edgeId == edgeId) {\n                                    node.outgoingEdges.splice(i, 1);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        } catch (error) {\n            throw error;\n        }\n    }\n\n    /**\n     * Removes the nodes with no outgoing edges and incoming edges.\n     */\n    public removeDeadNodes(): void {\n        try {\n            if (this.nodes.length > 0) {\n                for (let i = this.nodes.length - 1; i >= 0; i--) {\n                    if (this.nodes[i].incomingEdges.length == 0 && this.nodes[i].outgoingEdges.length == 0) {\n                        this.nodes.splice(i, 1);\n                    }\n                }\n            }\n        } catch (error) {\n            throw error;\n        }\n    }\n\n    public getOdNode(label: number): Node {\n        return this.nodes.find((node: Node) => node.label == label);\n    }\n\n    public getOdNodes(): Node[] {\n        return this.nodes.filter((node: Node) => node.label);\n    }\n\n    /**\n     * Calculates the set of minimum paths.\n     * @param odPairs The O/D pairs\n     */\n    public calcShortestPaths(odPairs: OdPair[]): Observable {\n        return of(null);\n    }\n\n    public getShortestPaths(): Node[][] {\n        return this.shortestPaths;\n    }\n\n    /**\n     * Calculates the incidence matrix of paths for O/D pairs.\n     */\n    public calcIncidenceMatrix(): Observable {\n        return of(null);\n    }\n\n    public getIncidenceMatrix(): boolean[][] {\n        return this.incidenceMatrix;\n    }\n\n    /**\n     * Calculates the assignment matrix.\n     */\n    public calcAssignmentMatrix(): Observable {\n        return of(null);\n    }\n\n    public getAssignmentMatrix(): number[][] {\n        return this.assignmentMatrix;\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link distance or duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param origin Source node\n     * @param destination Destination node\n     * @param pathType Distance or duration\n     */\n    private getShortestPath(origin: number, destination: number, pathType: String): Node[] {\n        return null;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reset.html":{"url":"classes/Reset.html","title":"class - Reset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/actions/wizard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/models/actions/wizard.actions.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : WizardActionTypes.Reset\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:52\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Step } from '../wizard';\n\n/**\n * ngrx: wizard Actions.\n */\nexport enum WizardActionTypes {\n\n    StepChanged = '[Wizard] Step Changed',\n    StepError = '[Wizard] Step Error',\n    StepPending = '[Wizard] Step Pending',\n    GoOn = '[Wizard] Go On',\n    Reset = '[Wizard] Reset'\n\n}\n\nexport class StepChanged implements Action {\n\n    public readonly type: string = WizardActionTypes.StepChanged;\n\n    constructor(public payload: { step: Step, index: number }) { }\n\n}\n\nexport class StepError implements Action {\n\n    public readonly type: string = WizardActionTypes.StepError;\n\n    constructor(public payload: string) { }\n\n}\n\nexport class StepPending implements Action {\n\n    public readonly type: string = WizardActionTypes.StepPending;\n\n    constructor(public payload: string | boolean) { }\n\n}\n\nexport class GoOn implements Action {\n\n    public readonly type: string = WizardActionTypes.GoOn;\n\n    constructor(public payload: { step: Step, index: number, nextIndex: number }) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = WizardActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type WizardActions = StepChanged | StepError | StepPending | GoOn | Reset;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchForTheAreaComponent.html":{"url":"components/SearchForTheAreaComponent.html","title":"component - SearchForTheAreaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SearchForTheAreaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-search-for-the-area\n            \n\n            \n                styleUrls\n                search-for-the-area.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./search-for-the-area.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentPosition\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                search\n                            \n                            \n                                sendActions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(wizard: WizardService, location: LocationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    LocationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCurrentPosition\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCurrentPosition()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            search\n                            \n                            \n                        \n                    \n                \n                \n                    \nsearch(address: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        address\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { WizardService } from '../wizard.service';\nimport { LocationService } from '../../../location/location.service';\n\nimport { BaseComponent } from '../../models/base.component';\n\n@Component({\n    selector: 'wizard-search-for-the-area',\n    templateUrl: './search-for-the-area.component.html',\n    styleUrls: ['./search-for-the-area.component.scss']\n})\nexport class SearchForTheAreaComponent extends BaseComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    constructor(\n        private wizard: WizardService,\n        private location: LocationService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.valueChanges();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        // Updates location service data on value changes.\n        this.subscriptions.push(this.formGroup.valueChanges.subscribe(\n            () => {\n                this.location.setLatLng(this.formGroup.get('center').value);\n            }\n        ));\n    }\n\n    receiveActions(): void {\n        //\n    }\n\n    sendActions(): void {\n        //\n    }\n\n    search(address: string): void {\n        if (!!address) {\n            // Updates pending state.\n            this.wizard.putOnHold();\n            // Converts the address into geographic coordinates.\n            this.location.codeAddress(address).forEach(\n                (results: google.maps.GeocoderResult[]) => {\n                    this.formGroup.get('center').setValue({\n                        lat: results[0].geometry.location.lat(),\n                        lng: results[0].geometry.location.lng()\n                    });\n                    // Updates step state.\n                    this.wizard.updateStep(this.formGroup.value, this.index);\n                })\n                .then()\n                .catch((error: google.maps.GeocoderStatus) => {\n                    if (error === google.maps.GeocoderStatus.ZERO_RESULTS) {\n                        // Updates error state.\n                        this.wizard.putInError('Zero results');\n                    } else {\n                        // INVALID_REQUEST, OVER_QUERY_LIMIT, REQUEST_DENIED, UNKNOWN_ERROR\n                        // Updates error state.\n                        this.wizard.putInError('Invalid request');\n                    }\n                });\n        }\n    }\n\n    getCurrentPosition(): void {\n        if (navigator.geolocation) {\n            // Updates pending state.\n            this.wizard.putOnHold();\n            this.location.getCurrentPosition().subscribe(\n                (position: Position) => {\n                    this.formGroup.get('center').setValue({ lat: position.coords.latitude, lng: position.coords.longitude });\n                    // Updates step state.\n                    this.wizard.updateStep(this.formGroup.value, this.index);\n                },\n                (error: PositionError) => {\n                    if (error.code > 0) {\n                        let message: string;\n                        switch (error.code) {\n                            case error.PERMISSION_DENIED:\n                                message = 'Permission denied';\n                                break;\n                            case error.POSITION_UNAVAILABLE:\n                                message = 'Position unavailable';\n                                break;\n                            case error.TIMEOUT:\n                                message = 'Position timeout';\n                                break;\n                        }\n                        // Updates error state.\n                        this.wizard.putInError(message);\n                    }\n                });\n\n        } else {\n            // Updates error state.\n            this.wizard.putInError(\"Browser doesn't support geolocation\");\n        }\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n            \n                search\n            \n        \n        Get current position\n    \n\n    \n        Continue\n            navigate_next\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    search                            Get current position                Continue            navigate_next            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchForTheAreaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectionOfTheAreaComponent.html":{"url":"components/SelectionOfTheAreaComponent.html","title":"component - SelectionOfTheAreaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SelectionOfTheAreaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-selection-of-the-area\n            \n\n            \n                styleUrls\n                selection-of-the-area.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./selection-of-the-area.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, wizard: WizardService, network: NetworkService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n\n                \n                    \n                        getmin()\n                    \n                \n                            \n                                \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:28\n                                \n                            \n                    \n                        \n                                Min moment: current time.\n\n\n                                \n                                    Returns :     Date\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n\n                \n                    \n                        getmax()\n                    \n                \n                            \n                                \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:35\n                                \n                            \n                    \n                        \n                                Max moment: current day.\n\n\n                                \n                                    Returns :     Date\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { WizardService } from '../wizard.service';\nimport { NetworkService } from '../../../network/network.service';\nimport { uiConfig } from '../../ui-config';\nimport * as fromUi from '../../models/reducers';\nimport { Step } from '../../models/wizard';\n\nimport { BaseComponent } from '../../models/base.component';\n\n@Component({\n    selector: 'wizard-selection-of-the-area',\n    templateUrl: './selection-of-the-area.component.html',\n    styleUrls: ['./selection-of-the-area.component.scss']\n})\nexport class SelectionOfTheAreaComponent extends BaseComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    /**\n     * Min moment: current time.\n     */\n    get min(): Date {\n        return new Date();\n    }\n\n    /**\n     * Max moment: current day.\n     */\n    get max(): Date {\n        return new Date(\n            this.min.getFullYear(),\n            this.min.getMonth(),\n            this.min.getDate(),\n            this.min.getHours() + uiConfig.timeLimit,\n            this.min.getMinutes()\n        );\n    }\n\n    constructor(\n        private store: Store,\n        private wizard: WizardService,\n        private network: NetworkService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.valueChanges();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        // Updates network service data on value changes.\n        this.subscriptions.push(this.formGroup.valueChanges.subscribe(\n            () => {\n                this.network.setBounds(this.formGroup.get('bounds').value);\n                this.network.setTime(this.formGroup.get('time').value);\n            }\n        ));\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.steps)).subscribe((steps: Step[]) => {\n            if (steps[this.index]) {\n                this.formGroup.get('bounds').setValue(steps[this.index]['data']['bounds']);\n            }\n        }));\n    }\n\n    sendActions(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n            \n                calendar_today\n            \n            Optional. Leave it empty for the current time\n            \n                \n                \n                    Please, enter a time between the current time and the next 24 hours\n                \n                \n                    Please, insert a valid time or select it\n                \n            \n        \n        \n    \n\n    \n        Continue\n            navigate_next\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    calendar_today                        Optional. Leave it empty for the current time                                                                Please, enter a time between the current time and the next 24 hours                                                    Please, insert a valid time or select it                                                            Continue            navigate_next            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SelectionOfTheAreaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n  Modules\n  SharedModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nFooterComponent\n\nFooterComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nFooterComponent->SharedModule\n\n\n\n\n\nInfoDialogComponent\n\nInfoDialogComponent\n\nSharedModule -->\n\nInfoDialogComponent->SharedModule\n\n\n\n\n\nMessageArchivedComponent\n\nMessageArchivedComponent\n\nSharedModule -->\n\nMessageArchivedComponent->SharedModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nSharedModule->FooterComponent \n\n\n\n\n\nInfoDialogComponent \n\nInfoDialogComponent \n\nInfoDialogComponent  -->\n\nSharedModule->InfoDialogComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nMessageArchivedComponent \n\nMessageArchivedComponent \n\nMessageArchivedComponent  -->\n\nSharedModule->MessageArchivedComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                FooterComponent\n                            \n                            \n                                InfoDialogComponent\n                            \n                            \n                                MessageArchivedComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                InfoDialogComponent\n                            \n                            \n                                MessageArchivedComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    MaterialModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    FooterComponent\n                            \n                            \n                                    InfoDialogComponent\n                            \n                            \n                                    MaterialModule\n                            \n                            \n                                    MessageArchivedComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { MaterialModule } from './material.module';\n\nimport { FooterComponent } from './footer/footer.component';\nimport { MessageArchivedComponent } from './message-archived.component';\nimport { InfoDialogComponent } from './info-dialog.component';\n\nimport { CanDeactivateGuard } from './can-deactivate-guard.service';\n\nconst sharedModules: any[] = [\n    CommonModule,\n    RouterModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    FlexLayoutModule\n];\n\n@NgModule({\n    entryComponents: [\n        MessageArchivedComponent,\n        InfoDialogComponent\n    ],\n    declarations: [\n        FooterComponent,\n        MessageArchivedComponent,\n        InfoDialogComponent\n    ],\n    imports: sharedModules,\n    exports: [\n        sharedModules,\n        FooterComponent,\n        MessageArchivedComponent,\n        InfoDialogComponent\n    ]\n})\nexport class SharedModule {\n    public static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: SharedModule,\n            providers: [\n                CanDeactivateGuard\n            ]\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SimulationComponent.html":{"url":"components/SimulationComponent.html","title":"component - SimulationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SimulationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/simulation/simulation.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-simulation\n            \n\n            \n                styleUrls\n                simulation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./simulation.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/simulation/simulation.component.ts:13\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'wizard-simulation',\n    templateUrl: './simulation.component.html',\n    styleUrls: ['./simulation.component.scss']\n})\nexport class SimulationComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    constructor() { }\n\n    ngOnInit(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SimulationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SimulationModule.html":{"url":"modules/SimulationModule.html","title":"module - SimulationModule","body":"\n                   \n\n\n\n\n  Modules\n  SimulationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SimulationModule\n\n\n\ncluster_SimulationModule_providers\n\n\n\n\nSimulationService\n\nSimulationService\n\n\n\nSimulationModule\n\nSimulationModule\n\nSimulationModule -->\n\nSimulationService->SimulationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/simulation/simulation.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     SimulationService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { SimulationService } from './simulation.service';\n\n@NgModule({\n    imports: [],\n    declarations: [],\n    providers: [SimulationService]\n})\nexport class SimulationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SimulationService.html":{"url":"injectables/SimulationService.html","title":"injectable - SimulationService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SimulationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/simulation.service.ts\n        \n\n            \n                Description\n            \n            \n                Applies the traffic flow propagation algorithm.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/simulation.service.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Applies the traffic flow propagation algorithm.\n */\n@Injectable() export class SimulationService {\n\n    public reset(): void {\n        //\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatisticsComponent.html":{"url":"components/StatisticsComponent.html","title":"component - StatisticsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StatisticsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/statistics/statistics.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-statistics\n            \n\n            \n                styleUrls\n                statistics.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./statistics.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/statistics/statistics.component.ts:13\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'wizard-statistics',\n    templateUrl: './statistics.component.html',\n    styleUrls: ['./statistics.component.scss']\n})\nexport class StatisticsComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    constructor() { }\n\n    ngOnInit(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatisticsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Step.html":{"url":"interfaces/Step.html","title":"interface - Step","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Step\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/wizard.ts\n        \n\n            \n                Description\n            \n            \n                Step model.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Form model data.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Step {\n\n    /**\n     * Form model data.\n     */\n    data: any;\n\n}\n\n/**\n * Initial steps.\n */\nexport const STEPS: Step[] = [];\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StepChanged.html":{"url":"classes/StepChanged.html","title":"class - StepChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  StepChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/actions/wizard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/models/actions/wizard.actions.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : WizardActionTypes.StepChanged\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Step } from '../wizard';\n\n/**\n * ngrx: wizard Actions.\n */\nexport enum WizardActionTypes {\n\n    StepChanged = '[Wizard] Step Changed',\n    StepError = '[Wizard] Step Error',\n    StepPending = '[Wizard] Step Pending',\n    GoOn = '[Wizard] Go On',\n    Reset = '[Wizard] Reset'\n\n}\n\nexport class StepChanged implements Action {\n\n    public readonly type: string = WizardActionTypes.StepChanged;\n\n    constructor(public payload: { step: Step, index: number }) { }\n\n}\n\nexport class StepError implements Action {\n\n    public readonly type: string = WizardActionTypes.StepError;\n\n    constructor(public payload: string) { }\n\n}\n\nexport class StepPending implements Action {\n\n    public readonly type: string = WizardActionTypes.StepPending;\n\n    constructor(public payload: string | boolean) { }\n\n}\n\nexport class GoOn implements Action {\n\n    public readonly type: string = WizardActionTypes.GoOn;\n\n    constructor(public payload: { step: Step, index: number, nextIndex: number }) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = WizardActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type WizardActions = StepChanged | StepError | StepPending | GoOn | Reset;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StepError.html":{"url":"classes/StepError.html","title":"class - StepError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  StepError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/actions/wizard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/models/actions/wizard.actions.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : WizardActionTypes.StepError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Step } from '../wizard';\n\n/**\n * ngrx: wizard Actions.\n */\nexport enum WizardActionTypes {\n\n    StepChanged = '[Wizard] Step Changed',\n    StepError = '[Wizard] Step Error',\n    StepPending = '[Wizard] Step Pending',\n    GoOn = '[Wizard] Go On',\n    Reset = '[Wizard] Reset'\n\n}\n\nexport class StepChanged implements Action {\n\n    public readonly type: string = WizardActionTypes.StepChanged;\n\n    constructor(public payload: { step: Step, index: number }) { }\n\n}\n\nexport class StepError implements Action {\n\n    public readonly type: string = WizardActionTypes.StepError;\n\n    constructor(public payload: string) { }\n\n}\n\nexport class StepPending implements Action {\n\n    public readonly type: string = WizardActionTypes.StepPending;\n\n    constructor(public payload: string | boolean) { }\n\n}\n\nexport class GoOn implements Action {\n\n    public readonly type: string = WizardActionTypes.GoOn;\n\n    constructor(public payload: { step: Step, index: number, nextIndex: number }) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = WizardActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type WizardActions = StepChanged | StepError | StepPending | GoOn | Reset;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StepPending.html":{"url":"classes/StepPending.html","title":"class - StepPending","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  StepPending\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/actions/wizard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string | boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/models/actions/wizard.actions.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string | boolean\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     string | boolean\n\n                    \n                \n                    \n                        \n                            Type :     string | boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : WizardActionTypes.StepPending\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Step } from '../wizard';\n\n/**\n * ngrx: wizard Actions.\n */\nexport enum WizardActionTypes {\n\n    StepChanged = '[Wizard] Step Changed',\n    StepError = '[Wizard] Step Error',\n    StepPending = '[Wizard] Step Pending',\n    GoOn = '[Wizard] Go On',\n    Reset = '[Wizard] Reset'\n\n}\n\nexport class StepChanged implements Action {\n\n    public readonly type: string = WizardActionTypes.StepChanged;\n\n    constructor(public payload: { step: Step, index: number }) { }\n\n}\n\nexport class StepError implements Action {\n\n    public readonly type: string = WizardActionTypes.StepError;\n\n    constructor(public payload: string) { }\n\n}\n\nexport class StepPending implements Action {\n\n    public readonly type: string = WizardActionTypes.StepPending;\n\n    constructor(public payload: string | boolean) { }\n\n}\n\nexport class GoOn implements Action {\n\n    public readonly type: string = WizardActionTypes.GoOn;\n\n    constructor(public payload: { step: Step, index: number, nextIndex: number }) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = WizardActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type WizardActions = StepChanged | StepError | StepPending | GoOn | Reset;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tag.html":{"url":"interfaces/Tag.html","title":"interface - Tag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Tag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                Tag describes the meaning of the particular element to which it is attached.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        key\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable, of } from 'rxjs';\n\nimport * as combine from 'mout/array/combine';\n\nexport enum PathType {\n    distance = 'distance',\n    duration = 'duration'\n}\n\n/**\n * An O/D pair is described by the origin and destination nodes and the type of path.\n */\nexport interface OdPair {\n\n    origin: number;\n    destination: number;\n    pathType: PathType;\n\n}\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public label: number;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    public drawingOptions: { marker?: google.maps.Marker } = {};\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    public linkFlow: number;\n\n    public drawingOptions: { polyline?: google.maps.Polyline } = {};\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the arc flow and assigns it to the linkFlow attribute.\n     */\n    public calcLinkFlow(): void {\n\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    private nodes: Node[] = [];\n\n    private edges: Edge[] = [];\n\n    private relations: Relation[] = [];\n\n    private shortestPaths: Node[][] = [];\n\n    private incidenceMatrix: boolean[][] = [];\n\n    private assignmentMatrix: number[][] = [];\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.lat = node.lat;\n            existingNode.lon = node.lon;\n            existingNode.tags = combine(existingNode.tags, node.tags);\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public getEdge(edgeId: number): Edge {\n        return this.edges.find((edge: Edge) => edge.edgeId == edgeId);\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Key:oneway\n     * @param edgeId Id of the edge\n     */\n    public isOneway(edgeId: number): boolean {\n        return !!this.getEdge(edgeId).tags.find(tag => tag.key == 'oneway' && tag.value != 'no') ||\n            this.isRoundabout(edgeId);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Tag:junction%3Droundabout\n     * @param edgeId Id of the edge\n     */\n    public isRoundabout(edgeId: number): boolean {\n        return this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'roundabout') ||\n            this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'circular') ?\n            true : false;\n    }\n\n    /**\n     * Removes the edges with null distance.\n     */\n    public removeInvalidatedEdges(): void {\n        try {\n            const removedEdges: number[] = [];\n            if (this.edges.length > 0) {\n                for (let i = this.edges.length - 1; i >= 0; i--) {\n                    if (this.edges[i].distance == null) {\n                        removedEdges.push(this.edges[i].edgeId);\n                        this.edges.splice(i, 1);\n                    }\n                }\n                for (const edgeId of removedEdges) {\n                    for (const node of this.nodes) {\n                        if (node.incomingEdges.length > 0) {\n                            for (let i = node.incomingEdges.length - 1; i >= 0; i--) {\n                                if (node.incomingEdges[i].edgeId == edgeId) {\n                                    node.incomingEdges.splice(i, 1);\n                                }\n                            }\n                        }\n                        if (node.outgoingEdges.length > 0) {\n                            for (let i = node.outgoingEdges.length - 1; i >= 0; i--) {\n                                if (node.outgoingEdges[i].edgeId == edgeId) {\n                                    node.outgoingEdges.splice(i, 1);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        } catch (error) {\n            throw error;\n        }\n    }\n\n    /**\n     * Removes the nodes with no outgoing edges and incoming edges.\n     */\n    public removeDeadNodes(): void {\n        try {\n            if (this.nodes.length > 0) {\n                for (let i = this.nodes.length - 1; i >= 0; i--) {\n                    if (this.nodes[i].incomingEdges.length == 0 && this.nodes[i].outgoingEdges.length == 0) {\n                        this.nodes.splice(i, 1);\n                    }\n                }\n            }\n        } catch (error) {\n            throw error;\n        }\n    }\n\n    public getOdNode(label: number): Node {\n        return this.nodes.find((node: Node) => node.label == label);\n    }\n\n    public getOdNodes(): Node[] {\n        return this.nodes.filter((node: Node) => node.label);\n    }\n\n    /**\n     * Calculates the set of minimum paths.\n     * @param odPairs The O/D pairs\n     */\n    public calcShortestPaths(odPairs: OdPair[]): Observable {\n        return of(null);\n    }\n\n    public getShortestPaths(): Node[][] {\n        return this.shortestPaths;\n    }\n\n    /**\n     * Calculates the incidence matrix of paths for O/D pairs.\n     */\n    public calcIncidenceMatrix(): Observable {\n        return of(null);\n    }\n\n    public getIncidenceMatrix(): boolean[][] {\n        return this.incidenceMatrix;\n    }\n\n    /**\n     * Calculates the assignment matrix.\n     */\n    public calcAssignmentMatrix(): Observable {\n        return of(null);\n    }\n\n    public getAssignmentMatrix(): number[][] {\n        return this.assignmentMatrix;\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link distance or duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param origin Source node\n     * @param destination Destination node\n     * @param pathType Distance or duration\n     */\n    private getShortestPath(origin: number, destination: number, pathType: String): Node[] {\n        return null;\n    }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UiComponent.html":{"url":"components/UiComponent.html","title":"component - UiComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UiComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/ui.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                CanComponentDeactivate\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ui\n            \n\n            \n                styleUrls\n                ui.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ui.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pending\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canDeactivate\n                            \n                            \n                                exit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDialog\n                            \n                            \n                                openSnackBar\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, snackBar: MatSnackBar, dialog: MatDialog, store: Store, wizard: WizardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/ui.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canDeactivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanDeactivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable | boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            exit\n                            \n                            \n                        \n                    \n                \n                \n                    \nexit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:74\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenDialog(data: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:86\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openSnackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenSnackBar(message: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pending\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pending:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy, ViewEncapsulation } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatSnackBar, MatDialog } from '@angular/material';\nimport { Subscription, Observable, of } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { CanComponentDeactivate } from '../shared/can-deactivate-guard.service';\nimport { WizardService } from './wizard/wizard.service';\nimport * as fromUi from './models/reducers';\n\nimport { MessageArchivedComponent } from '../shared/message-archived.component';\nimport { InfoDialogComponent } from '../shared/info-dialog.component';\n\n@Component({\n    selector: 'app-ui',\n    templateUrl: './ui.component.html',\n    styleUrls: ['./ui.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class UiComponent implements OnInit, OnDestroy, CanComponentDeactivate {\n\n    pending = false;\n\n    subscriptions: Subscription[] = [];\n\n    constructor(\n        private router: Router,\n        private snackBar: MatSnackBar,\n        private dialog: MatDialog,\n        private store: Store,\n        private wizard: WizardService\n    ) { }\n\n    ngOnInit(): void {\n        // Pending state.\n        this.subscriptions.push(this.store.pipe(select(fromUi.pending)).subscribe((pending: boolean) => {\n            this.pending = pending;\n        }));\n        // Error state.\n        this.subscriptions.push(this.store.pipe(select(fromUi.error)).subscribe((error: string) => {\n            if (error) {\n                this.openSnackBar(error);\n            }\n        }));\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach((subscription: Subscription) => {\n            if (subscription) { subscription.unsubscribe(); }\n        });\n    }\n\n    canDeactivate(): Observable | boolean {\n        return this.openDialog('Are you sure you want to exit the simulation?').pipe(\n            tap((dialogResult: boolean) => {\n                if (dialogResult) {\n                    this.wizard.reset();\n                }\n            })\n        );\n    }\n\n    reset(): void {\n        this.openDialog('Are you sure you want to reset the simulation?').subscribe(\n            (dialogResult: boolean) => {\n                if (dialogResult) {\n                    this.wizard.reset();\n                }\n            });\n    }\n\n    exit(): void {\n        this.router.navigate(['/home']);\n    }\n\n    openSnackBar(message: string): void {\n        this.snackBar.openFromComponent(MessageArchivedComponent, {\n            data: message,\n            duration: 5000,\n            panelClass: ['error-snackbar']\n        });\n    }\n\n    openDialog(data: string): Observable {\n        const dialogRef = this.dialog.open(InfoDialogComponent, {\n            width: '250px',\n            data: data,\n            hasBackdrop: true,\n            panelClass: 'info-dialog'\n        });\n\n        return dialogRef.afterClosed();\n    }\n\n}\n\n    \n\n    \n        \n    \n    \n    \n        {{ pending }}\n    \n\n\n\n    \n        \n            \n        \n        \n            \n        \n    \n    \n        \n        \n            Reset\n            Exit\n        \n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ pending }}                                                                                                    Reset            Exit            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UiComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiModule.html":{"url":"modules/UiModule.html","title":"module - UiModule","body":"\n                   \n\n\n\n\n  Modules\n  UiModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UiModule\n\n\n\ncluster_UiModule_declarations\n\n\n\ncluster_UiModule_imports\n\n\n\ncluster_UiModule_providers\n\n\n\n\nChangeOfConditionsComponent\n\nChangeOfConditionsComponent\n\n\n\nUiModule\n\nUiModule\n\nUiModule -->\n\nChangeOfConditionsComponent->UiModule\n\n\n\n\n\nEstimateOfDemandComponent\n\nEstimateOfDemandComponent\n\nUiModule -->\n\nEstimateOfDemandComponent->UiModule\n\n\n\n\n\nGoogleMapComponent\n\nGoogleMapComponent\n\nUiModule -->\n\nGoogleMapComponent->UiModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nUiModule -->\n\nMapComponent->UiModule\n\n\n\n\n\nSearchForTheAreaComponent\n\nSearchForTheAreaComponent\n\nUiModule -->\n\nSearchForTheAreaComponent->UiModule\n\n\n\n\n\nSelectionOfTheAreaComponent\n\nSelectionOfTheAreaComponent\n\nUiModule -->\n\nSelectionOfTheAreaComponent->UiModule\n\n\n\n\n\nSimulationComponent\n\nSimulationComponent\n\nUiModule -->\n\nSimulationComponent->UiModule\n\n\n\n\n\nStatisticsComponent\n\nStatisticsComponent\n\nUiModule -->\n\nStatisticsComponent->UiModule\n\n\n\n\n\nUiComponent\n\nUiComponent\n\nUiModule -->\n\nUiComponent->UiModule\n\n\n\n\n\nWeatherComponent\n\nWeatherComponent\n\nUiModule -->\n\nWeatherComponent->UiModule\n\n\n\n\n\nWizardComponent\n\nWizardComponent\n\nUiModule -->\n\nWizardComponent->UiModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nUiModule -->\n\nSharedModule->UiModule\n\n\n\n\n\nUiRoutingModule\n\nUiRoutingModule\n\nUiModule -->\n\nUiRoutingModule->UiModule\n\n\n\n\n\nMapService\n\nMapService\n\nUiModule -->\n\nMapService->UiModule\n\n\n\n\n\nWizardService\n\nWizardService\n\nUiModule -->\n\nWizardService->UiModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/ui/ui.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ChangeOfConditionsComponent\n                            \n                            \n                                EstimateOfDemandComponent\n                            \n                            \n                                GoogleMapComponent\n                            \n                            \n                                MapComponent\n                            \n                            \n                                SearchForTheAreaComponent\n                            \n                            \n                                SelectionOfTheAreaComponent\n                            \n                            \n                                SimulationComponent\n                            \n                            \n                                StatisticsComponent\n                            \n                            \n                                UiComponent\n                            \n                            \n                                WeatherComponent\n                            \n                            \n                                WizardComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     MapService\n                            \n                            \n                                     WizardService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                            \n                                    UiRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { UiRoutingModule } from './ui-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { StoreModule } from \"@ngrx/store\";\nimport { EffectsModule } from \"@ngrx/effects\";\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\n\nimport { UiComponent } from './ui.component';\nimport { WizardComponent } from './wizard/wizard.component';\nimport { SearchForTheAreaComponent } from './wizard/search-for-the-area/search-for-the-area.component';\nimport { SelectionOfTheAreaComponent } from './wizard/selection-of-the-area/selection-of-the-area.component';\nimport { EstimateOfDemandComponent } from './wizard/estimate-of-demand/estimate-of-demand.component';\nimport { ChangeOfConditionsComponent } from './wizard/change-of-conditions/change-of-conditions.component';\nimport { SimulationComponent } from './wizard/simulation/simulation.component';\nimport { StatisticsComponent } from './wizard/statistics/statistics.component';\nimport { MapComponent } from './map/map.component';\nimport { GoogleMapComponent } from './map/google-map.component';\nimport { WeatherComponent } from './weather/weather.component';\n\nimport { WizardService } from './wizard/wizard.service';\nimport { MapService } from './map/map.service';\nimport { reducers } from './models/reducers';\n\n@NgModule({\n    imports: [\n        UiRoutingModule,\n        SharedModule,\n        StoreModule.forFeature('ui', reducers),\n        EffectsModule.forFeature([]),\n        OwlDateTimeModule,\n        OwlNativeDateTimeModule\n    ],\n    declarations: [\n        UiComponent,\n        WizardComponent,\n        SearchForTheAreaComponent,\n        SelectionOfTheAreaComponent,\n        EstimateOfDemandComponent,\n        ChangeOfConditionsComponent,\n        SimulationComponent,\n        StatisticsComponent,\n        MapComponent,\n        GoogleMapComponent,\n        WeatherComponent\n    ],\n    providers: [\n        WizardService,\n        MapService\n    ]\n})\nexport class UiModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiRoutingModule.html":{"url":"modules/UiRoutingModule.html","title":"module - UiRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  UiRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/ui/ui-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CanDeactivateGuard } from '../shared/can-deactivate-guard.service';\n\nimport { UiComponent } from './ui.component';\n\nconst routes: Routes = [\n    { path: '', component: UiComponent, pathMatch: 'full', canDeactivate: [CanDeactivateGuard] },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class UiRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UiState.html":{"url":"interfaces/UiState.html","title":"interface - UiState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UiState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/reducers.ts\n        \n\n            \n                Description\n            \n            \n                User interface state management.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        wizard\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        wizard\n                                    \n                                \n                                \n                                    \n                                        wizard:     fromWizard.WizardState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromWizard.WizardState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, createFeatureSelector, createSelector, MemoizedSelector } from \"@ngrx/store\";\n\nimport * as fromWizard from './reducers/wizard.reducer';\nimport { Step } from \"./wizard\";\n\n/**\n * User interface state management.\n */\nexport interface UiState {\n\n    wizard: fromWizard.WizardState;\n\n}\n\nexport const reducers: ActionReducerMap = {\n    wizard: fromWizard.wizardReducer\n};\n\nexport const featureUiState: MemoizedSelector = createFeatureSelector('ui');\n\n/**\n * Exports the wizard state.\n */\nexport const wizardState: MemoizedSelector = createSelector(\n    featureUiState,\n    (state: UiState) => state.wizard\n);\n\n/**\n * Exports the steps state.\n */\nexport const steps: MemoizedSelector = createSelector(\n    wizardState,\n    fromWizard.getSteps\n);\n\n/**\n * Exports the current step state.\n */\nexport const currentStep: MemoizedSelector = createSelector(\n    wizardState,\n    fromWizard.getCurrentStep\n);\n\n/**\n * Exports the error state.\n */\nexport const error: MemoizedSelector = createSelector(\n    wizardState,\n    fromWizard.getError\n);\n\n/**\n * Exports the pending state.\n */\nexport const pending: MemoizedSelector = createSelector(\n    wizardState,\n    fromWizard.getPending\n);\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherComponent.html":{"url":"components/WeatherComponent.html","title":"component - WeatherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/weather/weather.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ui-weather\n            \n\n            \n                styleUrls\n                weather.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                icon\n                            \n                            \n                                iconContainer\n                            \n                            \n                                time\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, renderer: Renderer2, store: Store, wizard: WizardService, weather: WeatherService, network: NetworkService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/weather/weather.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        weather\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:74\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        description:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '-'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icon:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iconContainer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iconContainer:     HTMLElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            time\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        time:     any | string\n\n                    \n                \n                    \n                        \n                            Type :     any | string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, ElementRef, Renderer2 } from '@angular/core';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { WizardService } from '../wizard/wizard.service';\nimport { WeatherService } from '../../network/weather/weather.service';\nimport { NetworkService } from '../../network/network.service';\nimport * as fromUi from '../models/reducers';\nimport { Step } from '../models/wizard';\n\nimport { BaseComponent } from '../models/base.component';\n\n@Component({\n    selector: 'ui-weather',\n    templateUrl: './weather.component.html',\n    styleUrls: ['./weather.component.scss']\n})\nexport class WeatherComponent extends BaseComponent implements OnInit, AfterViewInit {\n\n    description = '-';\n\n    iconContainer: HTMLElement;\n\n    icon: any;\n\n    time: any | string = '';\n\n    constructor(\n        private elementRef: ElementRef,\n        private renderer: Renderer2,\n        private store: Store,\n        private wizard: WizardService,\n        private weather: WeatherService,\n        private network: NetworkService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    ngAfterViewInit(): void {\n        this.iconContainer = this.elementRef.nativeElement.querySelector('#iconContainer');\n    }\n\n    valueChanges(): void {\n        //\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.steps)).subscribe((steps: Step[]) => {\n            switch (this.wizard.state.currentStep) {\n                case 0:\n                    this.description = '-';\n                    if (this.icon) {\n                        this.renderer.removeChild(this.iconContainer, this.icon);\n                        this.icon = null;\n                        this.time = '';\n                    }\n                    break;\n                case 3:\n                    const weatherConditions = this.weather.getWeatherConditions();\n                    this.description = weatherConditions.description;\n                    this.icon = weatherConditions.icon;\n                    this.renderer.appendChild(this.iconContainer, this.icon);\n                    this.time = this.network.getTimeString();\n                    break;\n            }\n        }));\n    }\n\n    sendActions(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    \n        Weather: {{ description | uppercase }}\n        \n        {{ time }}\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Weather: {{ description | uppercase }}                {{ time }}    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WeatherConditions.html":{"url":"interfaces/WeatherConditions.html","title":"interface - WeatherConditions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WeatherConditions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/weather/weather.ts\n        \n\n            \n                Description\n            \n            \n                Weather conditions data.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                        icon\n                                \n                                \n                                            Optional\n                                        rainIntensity\n                                \n                                \n                                            Optional\n                                        snowIntensity\n                                \n                                \n                                            Optional\n                                        visibility\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     HTMLImageElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HTMLImageElement\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rainIntensity\n                                    \n                                \n                                \n                                    \n                                        rainIntensity:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        snowIntensity\n                                    \n                                \n                                \n                                    \n                                        snowIntensity:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visibility\n                                    \n                                \n                                \n                                    \n                                        visibility:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface WeatherConditions {\n\n    description: string;\n    icon: HTMLImageElement;\n    visibility?: number;\n    rainIntensity?: number;\n    snowIntensity?: number;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WeatherModule.html":{"url":"modules/WeatherModule.html","title":"module - WeatherModule","body":"\n                   \n\n\n\n\n  Modules\n  WeatherModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_providers\n\n\n\n\nWeatherService\n\nWeatherService\n\n\n\nWeatherModule\n\nWeatherModule\n\nWeatherModule -->\n\nWeatherService->WeatherModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/network/weather/weather.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     WeatherService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { WeatherService } from './weather.service';\n\n@NgModule({\n    imports: [],\n    declarations: [],\n    providers: [WeatherService]\n})\nexport class WeatherModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherService.html":{"url":"injectables/WeatherService.html","title":"injectable - WeatherService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  WeatherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/weather/weather.service.ts\n        \n\n            \n                Description\n            \n            \n                Gets the weather data from the Weather or Forecast resources\nand provides reduction factors for graph values based on weather conditions.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                weatherConditions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addWeatherConditions\n                            \n                            \n                                    Public\n                                getWeatherConditions\n                            \n                            \n                                    Public\n                                getWeatherData\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Public\n                                updateWeatherData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, location: LocationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/weather/weather.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    LocationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            addWeatherConditions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addWeatherConditions(data: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:75\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getWeatherConditions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getWeatherConditions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     WeatherConditions\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getWeatherData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getWeatherData(time?: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:32\n                            \n                        \n\n\n                \n                    \n                            Gets weather data from the Weather resource. The Forecast resource is called only if the optional parameter 'time' is evaluated.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        time\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                Optional parameter for forecasting data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updateWeatherData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateWeatherData(data: any, time?: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:52\n                            \n                        \n\n\n                \n                    \n                            Updates weather conditions with the data obtained from OpenWeatherMap.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Weather data\n\n                                                        \n                                                \n                                                \n                                                        time\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                Optional parameter for forecasting data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            weatherConditions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherConditions:     WeatherConditions\n\n                    \n                \n                    \n                        \n                            Type :     WeatherConditions\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable, throwError, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { LocationService } from '../../location/location.service';\nimport { appConfig } from '../../app-config';\nimport { WeatherConditions } from './weather';\n\n/**\n * Gets the weather data from the Weather or Forecast resources\n * and provides reduction factors for graph values based on weather conditions.\n */\n@Injectable() export class WeatherService {\n\n    private weatherConditions: WeatherConditions;\n\n    constructor(private http: HttpClient, private location: LocationService) { }\n\n    public reset(): void {\n        this.weatherConditions = null;\n    }\n\n    public getWeatherConditions(): WeatherConditions {\n        return this.weatherConditions;\n    }\n\n    /**\n     * Gets weather data from the Weather resource. The Forecast resource is called only if the optional parameter 'time' is evaluated.\n     * @param time Optional parameter for forecasting data\n     */\n    public getWeatherData(time?: Date): Observable {\n        const url: string = time ? appConfig.apis.openWeatherMap.forecastUrl : appConfig.apis.openWeatherMap.weatherUrl;\n        const options = {\n            params: new HttpParams()\n                .set('lat', this.location.getLatLng().lat.toString())\n                .set('lon', this.location.getLatLng().lng.toString())\n                .set('appid', appConfig.apis.openWeatherMap.apiKey)\n        };\n\n        return this.http.get(url, options).pipe(\n            map((response: any) => response),\n            catchError((error: any) => throwError('getWeatherData'))\n        );\n    }\n\n    /**\n     * Updates weather conditions with the data obtained from OpenWeatherMap.\n     * @param data Weather data\n     * @param time Optional parameter for forecasting data\n     */\n    public updateWeatherData(data: any, time?: Date): Observable {\n        if (time != null && data.list.length > 0) {\n            const timezoneOffset: number = time.getTimezoneOffset() * 60 * 1000; // Timezone offset in milliseconds\n            const utcTime: number = time.getTime() + timezoneOffset;\n\n            let preDt: number = data.list[0].dt * 1000; // Converts Unix UTC in millisencods\n            let forecast: any = data.list[0];\n            for (let i = 1; i = utcTime) {\n                    forecast = nextDt - utcTime \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WizardComponent.html":{"url":"components/WizardComponent.html","title":"component - WizardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WizardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/wizard.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                ui-wizard\n            \n\n            \n                styleUrls\n                wizard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./wizard.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                stepper\n                            \n                            \n                                wizardForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                exit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                stepClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, wizard: WizardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/wizard.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            exit\n                            \n                            \n                        \n                    \n                \n                \n                    \nexit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.component.ts:85\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stepClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nstepClick(event: StepperSelectionEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.component.ts:64\n                            \n                        \n\n\n                \n                    \n                            Updates current step and step data.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    StepperSelectionEvent\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                SelectionChange stepper event.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stepper\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stepper:     MatStepper\n\n                    \n                \n                    \n                        \n                            Type :     MatStepper\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wizardForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        wizardForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        formSteps\n                    \n                \n\n                \n                    \n                        getformSteps()\n                    \n                \n                            \n                                \n                                    Defined in src/app/ui/wizard/wizard.component.ts:21\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, FormArray, Validators } from '@angular/forms';\nimport { MatStepper } from '@angular/material';\nimport { StepperSelectionEvent } from '@angular/cdk/stepper';\n\nimport { WizardService } from './wizard.service';\nimport { pairsValidator } from '../directives/pairs.directive';\n\n@Component({\n    selector: 'ui-wizard',\n    templateUrl: './wizard.component.html',\n    styleUrls: ['./wizard.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class WizardComponent implements OnInit {\n\n    @ViewChild('stepper') stepper: MatStepper;\n\n    wizardForm: FormGroup;\n\n    get formSteps(): FormArray {\n        return this.wizardForm.get('formSteps') as FormArray;\n    }\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private wizard: WizardService\n    ) { }\n\n    ngOnInit(): void {\n        // Creates form model.\n        this.wizardForm = this.formBuilder.group({\n            formSteps: this.formBuilder.array([\n                this.formBuilder.group({\n                    address: [''],\n                    center: [null, [Validators.required]]\n                }),\n                this.formBuilder.group({\n                    bounds: [null, [Validators.required]],\n                    time: [null]\n                }),\n                this.formBuilder.group({\n                    odPairs: this.formBuilder.array([], pairsValidator())\n                }),\n                this.formBuilder.group({\n\n                }),\n                this.formBuilder.group({\n\n                }),\n                this.formBuilder.group({\n\n                })\n            ])\n        }, { updateOn: 'blur' });\n\n        this.wizard.stepper = this.stepper;\n    }\n\n    /**\n     * Updates current step and step data.\n     * @param event SelectionChange stepper event.\n     */\n    stepClick(event: StepperSelectionEvent): void {\n        const index: number = event.previouslySelectedIndex;\n        const nextIndex: number = event.selectedIndex;\n        if (nextIndex > index) {\n            switch (nextIndex) {\n                case 2:\n                    this.wizard.networkSchedule();\n                    break;\n                case 3:\n                    this.wizard.demandSchedule();\n                    break;\n\n            }\n            this.wizard.goOn(\n                this.wizardForm.get('formSteps').get([index]).value,\n                index,\n                nextIndex\n            );\n        }\n    }\n\n    exit(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    \n                        Search for the area\n                    \n                    \n                \n                \n                    \n                        Selection of the area\n                    \n                    \n                \n                \n                    \n                        Estimate of demand\n                    \n                    \n                \n                \n                    Change of conditions\n                    \n                \n                \n                    Simulation\n                    \n                \n                \n                    Statistics\n                    \n                \n            \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    Search for the area                                                                                                                    Selection of the area                                                                                                                    Estimate of demand                                                                                            Change of conditions                                                                        Simulation                                                                        Statistics                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WizardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WizardService.html":{"url":"injectables/WizardService.html","title":"injectable - WizardService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  WizardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/wizard/wizard.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                state\n                            \n                            \n                                    Public\n                                stepper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                demandSchedule\n                            \n                            \n                                    Public\n                                goOn\n                            \n                            \n                                networkSchedule\n                            \n                            \n                                    Public\n                                putInError\n                            \n                            \n                                    Public\n                                putOnHold\n                            \n                            \n                                    Public\n                                removeFromWaiting\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Public\n                                updateStep\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, map: MapService, location: LocationService, network: NetworkService, weather: WeatherService, demand: DemandService, simulation: SimulationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/wizard.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                    MapService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    LocationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        weather\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        demand\n                                                  \n                                                        \n                                                                    DemandService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        simulation\n                                                  \n                                                        \n                                                                    SimulationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            demandSchedule\n                            \n                            \n                        \n                    \n                \n                \n                    \ndemandSchedule()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:180\n                            \n                        \n\n\n                \n                    \n                            Performs in sequence the following operations:\n\nCalcs shortest paths\nCalcs incidence matrix\nCalcs assignment matrix\nGets and updates traffic data\nCalcs link flows\nCalcs O/D matrix\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            goOn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        goOn(data: any, index: number, nextIndex: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:83\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        nextIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            networkSchedule\n                            \n                            \n                        \n                    \n                \n                \n                    \nnetworkSchedule()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:98\n                            \n                        \n\n\n                \n                    \n                            Performs in sequence the following operations:\n\nGets network\nCreates the graph\nGets network data\nAssociates data to the graph\nGets and updates weather data\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            putInError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        putInError(error: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            putOnHold\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        putOnHold(message?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            removeFromWaiting\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeFromWaiting()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updateStep\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateStep(data: any, index: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            state\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        state:     WizardState\n\n                    \n                \n                    \n                        \n                            Type :     WizardState\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stepper\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stepper:     MatStepper\n\n                    \n                \n                    \n                        \n                            Type :     MatStepper\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { MatStepper } from \"@angular/material\";\nimport { switchMap } from \"rxjs/operators\";\n\nimport { Store, select } from '@ngrx/store';\n\nimport { MapService } from \"../map/map.service\";\nimport { LocationService } from \"../../location/location.service\";\nimport { NetworkService } from \"../../network/network.service\";\nimport { WeatherService } from \"../../network/weather/weather.service\";\nimport { DemandService } from \"../../demand/demand.service\";\nimport { SimulationService } from \"../../simulation/simulation.service\";\n\nimport * as fromUi from '../models/reducers';\nimport { WizardActionTypes } from '../models/actions/wizard.actions';\nimport { WizardState } from \"../models/reducers/wizard.reducer\";\n\n@Injectable() export class WizardService {\n\n    public state: WizardState;\n\n    public stepper: MatStepper;\n\n    constructor(\n        private store: Store,\n        private map: MapService,\n        private location: LocationService,\n        private network: NetworkService,\n        private weather: WeatherService,\n        private demand: DemandService,\n        private simulation: SimulationService\n    ) {\n        this.store.pipe(select(fromUi.wizardState)).subscribe((state: WizardState) => {\n            this.state = state;\n        });\n    }\n\n    public reset(): void {\n        // UI.\n        this.map.reset();\n        // UI state.\n        this.store.dispatch({\n            type: WizardActionTypes.Reset\n        });\n        // Stepper.\n        this.stepper.reset();\n        // App.\n        this.location.reset();\n        this.network.reset();\n        this.weather.reset();\n        this.demand.reset();\n        this.simulation.reset();\n    }\n\n    public updateStep(data: any, index: number): void {\n        this.store.dispatch({\n            type: WizardActionTypes.StepChanged,\n            payload: { step: { data: data }, index: index }\n        });\n    }\n\n    public putInError(error: string): void {\n        this.store.dispatch({\n            type: WizardActionTypes.StepError,\n            payload: error\n        });\n    }\n\n    public putOnHold(message?: string): void {\n        this.store.dispatch({\n            type: WizardActionTypes.StepPending,\n            payload: message || true\n        });\n    }\n\n    public removeFromWaiting(): void {\n        this.store.dispatch({\n            type: WizardActionTypes.StepPending,\n            payload: false\n        });\n    }\n\n    public goOn(data: any, index: number, nextIndex: number): void {\n        this.store.dispatch({\n            type: WizardActionTypes.GoOn,\n            payload: { step: { data: data }, index: index, nextIndex: nextIndex }\n        });\n    }\n\n    /**\n     * Performs in sequence the following operations:\n     * - Gets network\n     * - Creates the graph\n     * - Gets network data\n     * - Associates data to the graph\n     * - Gets and updates weather data\n     */\n    networkSchedule(): void {\n        this.putOnHold('Getting the network');\n\n        const stream = this.network.getNetwork().pipe(\n            switchMap((response: any) => {\n                this.putOnHold('Creating the graph');\n                return this.network.createGraph(response);\n            }),\n            switchMap(() => {\n                this.putOnHold('Getting network data');\n                return this.network.getNetworkData();\n            }),\n            switchMap((response: any) => {\n                this.putOnHold('Updating the graph');\n                return this.network.updateGraph(response);\n            }),\n            switchMap(() => {\n                this.putOnHold('Cleaning the graph');\n                return this.network.cleanGraph();\n            }),\n            switchMap(() => {\n                this.putOnHold('Getting weather data');\n                return this.weather.getWeatherData(this.network.getTime());\n            }),\n            switchMap((response: any) => {\n                return this.weather.updateWeatherData(response, this.network.getTime());\n            })\n        );\n\n        stream.subscribe(\n            () => { },\n            (error: any) => {\n                let message: string;\n                switch (error) {\n                    case 'getNetwork':\n                        message = 'The request could not be processed. Check your Internet connection and try again';\n                        break;\n                    case 'createGraph':\n                        message = 'Graph cannnot be created. Please, try with another area';\n                        break;\n                    case 'getNetworkData':\n                        message = 'Network data cannot be retrieved. Past the quota limits traffic data become paid.' +\n                            'This is an open source project: install your own version of it';\n                        break;\n                    case 'updateGraph':\n                        message = 'Graph cannot be updated. Please, try with another area';\n                        break;\n                    case 'cleanGraph':\n                        message = 'Graph data is not available. Please, try with another area';\n                        break;\n                    case 'getWeatherData':\n                        message = 'Weather data cannot be retrieved. Please, try at another time';\n                        break;\n                }\n                this.putInError(message);\n                this.reset();\n            },\n            () => {\n                // Removes from waiting.\n                this.removeFromWaiting();\n                // Draws graph.\n                this.map.drawGraph();\n                const graph = this.network.getGraph();\n                const odNodes = graph.getOdNodes();\n                this.map.setCentroid(odNodes);\n                this.map.setCenter(this.map.getCentroid());\n                this.map.setZoom(17);\n\n                console.log(graph);\n            }\n        );\n    }\n\n    /**\n     * Performs in sequence the following operations:\n     * - Calcs shortest paths\n     * - Calcs incidence matrix\n     * - Calcs assignment matrix\n     * - Gets and updates traffic data\n     * - Calcs link flows\n     * - Calcs O/D matrix\n     */\n    demandSchedule(): void {\n        this.putOnHold('Computing shortest paths');\n        const graph = this.network.getGraph();\n        const odPairs = this.network.getOdPairs();\n\n        const stream = graph.calcShortestPaths(odPairs).pipe(\n            switchMap(() => {\n                return graph.calcIncidenceMatrix();\n            }),\n            switchMap(() => {\n                return graph.calcAssignmentMatrix();\n            }),\n            switchMap(() => {\n                this.putOnHold('Getting traffic data');\n                return this.network.getTrafficData();\n            }),\n            switchMap((response: any) => {\n                return this.network.calcLinkFlows(response);\n            }),\n            switchMap(() => {\n                this.putOnHold('Computing demand');\n                return this.demand.calcOdMatrix();\n            })\n        );\n\n        stream.subscribe(\n            () => { },\n            (error: any) => {\n                let message: string;\n                switch (error) {\n                    case 'calcShortestPaths':\n                        message = 'There are no routes. Please, try with another area';\n                        break;\n                    case 'getTrafficData':\n                        message = 'Traffic data cannot be retrieved. Past the quota limits traffic data become paid.' +\n                            'This is an open source project: install your own version of it';\n                        break;\n                    case 'calcOdMatrix':\n                        message = 'The demand cannot be calculated. Please, try with another area';\n                        break;\n                }\n                this.putInError(message);\n                this.reset();\n            },\n            () => {\n                // Removes from waiting.\n                this.removeFromWaiting();\n            }\n        );\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WizardState.html":{"url":"interfaces/WizardState.html","title":"interface - WizardState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WizardState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/reducers/wizard.reducer.ts\n        \n\n            \n                Description\n            \n            \n                Wizard state management.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        currentStep\n                                \n                                \n                                        error\n                                \n                                \n                                        pending\n                                \n                                \n                                        steps\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentStep\n                                    \n                                \n                                \n                                    \n                                        currentStep:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pending\n                                    \n                                \n                                \n                                    \n                                        pending:     string | boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        steps\n                                    \n                                \n                                \n                                    \n                                        steps:     Step[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Step[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import deepClone from 'mout/lang/deepClone';\n\nimport { Step, STEPS } from \"../wizard\";\nimport { WizardActions, WizardActionTypes } from '../actions/wizard.actions';\n\n/**\n * Wizard state management.\n */\nexport interface WizardState {\n\n    steps: Step[];\n    currentStep: number;\n    error: string | null;\n    pending: string | boolean;\n\n}\n\nexport const initialWizardState: WizardState = {\n    steps: STEPS,\n    currentStep: 0,\n    error: null,\n    pending: false\n};\n\n/**\n * ngrx: wizard Reducer.\n */\nexport function wizardReducer(state: WizardState = deepClone(initialWizardState), action: WizardActions): WizardState {\n    switch (action.type) {\n        case WizardActionTypes.StepChanged: {\n            // Updates the step at the provided index.\n            state.steps[action.payload.index] = action.payload.step;\n            return {\n                ...state,\n                steps: deepClone(state.steps),\n                error: null,\n                pending: false\n            };\n        }\n        case WizardActionTypes.StepError: {\n            return {\n                ...state,\n                error: action.payload,\n                pending: false\n            };\n        }\n        case WizardActionTypes.StepPending: {\n            return {\n                ...state,\n                error: null,\n                pending: action.payload\n            };\n        }\n        case WizardActionTypes.GoOn: {\n            // Updates the step at the provided index.\n            state.steps[action.payload.index] = action.payload.step;\n            return {\n                ...state,\n                steps: deepClone(state.steps),\n                currentStep: action.payload.nextIndex\n            };\n        }\n        case WizardActionTypes.Reset: {\n            return deepClone(initialWizardState);\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\nexport const getSteps: (state: WizardState) => Step[] = (state: WizardState) => state.steps;\n\nexport const getCurrentStep: (state: WizardState) => number = (state: WizardState) => state.currentStep;\n\nexport const getError: (state: WizardState) => string = (state: WizardState) => state.error;\n\nexport const getPending: (state: WizardState) => string | boolean = (state: WizardState) => state.pending;\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/app/app-preloading-strategy.ts\n            \n            \n                class\n            \n            \n                AppPreloadingStrategy\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/demand/demand.service.ts\n            \n            \n                injectable\n            \n            \n                DemandService\n            \n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                    src/app/home/home.component.ts\n            \n            \n                component\n            \n            \n                HomeComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/home/home.transition.ts\n            \n            \n                variable\n            \n            \n                HOME_TRANSITION\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/location/location.service.ts\n            \n            \n                injectable\n            \n            \n                LocationService\n            \n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                    src/app/network/graph.ts\n            \n            \n                class\n            \n            \n                Edge\n            \n            \n                33 %\n                (5/15)\n            \n        \n        \n            \n                \n                    src/app/network/graph.ts\n            \n            \n                class\n            \n            \n                Graph\n            \n            \n                33 %\n                (9/27)\n            \n        \n        \n            \n                \n                    src/app/network/graph.ts\n            \n            \n                class\n            \n            \n                Node\n            \n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                    src/app/network/graph.ts\n            \n            \n                class\n            \n            \n                Relation\n            \n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                    src/app/network/graph.ts\n            \n            \n                interface\n            \n            \n                Member\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                    src/app/network/graph.ts\n            \n            \n                interface\n            \n            \n                OdPair\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                    src/app/network/graph.ts\n            \n            \n                interface\n            \n            \n                Tag\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    src/app/network/network.service.ts\n            \n            \n                injectable\n            \n            \n                NetworkService\n            \n            \n                50 %\n                (20/40)\n            \n        \n        \n            \n                \n                    src/app/network/weather/weather.service.ts\n            \n            \n                injectable\n            \n            \n                WeatherService\n            \n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                    src/app/network/weather/weather.ts\n            \n            \n                interface\n            \n            \n                WeatherConditions\n            \n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                    src/app/shared/can-deactivate-guard.service.ts\n            \n            \n                injectable\n            \n            \n                CanDeactivateGuard\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/shared/can-deactivate-guard.service.ts\n            \n            \n                interface\n            \n            \n                CanComponentDeactivate\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/shared/footer/footer.component.ts\n            \n            \n                component\n            \n            \n                FooterComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/shared/info-dialog.component.ts\n            \n            \n                component\n            \n            \n                InfoDialogComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/shared/material.module.ts\n            \n            \n                variable\n            \n            \n                materialModules\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/shared/message-archived.component.ts\n            \n            \n                component\n            \n            \n                MessageArchivedComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/shared/shared.module.ts\n            \n            \n                variable\n            \n            \n                sharedModules\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/simulation/clock.ts\n            \n            \n                class\n            \n            \n                Clock\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/simulation/simulation.service.ts\n            \n            \n                injectable\n            \n            \n                SimulationService\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    src/app/ui/directives/pairs.directive.ts\n            \n            \n                function\n            \n            \n                pairsValidator\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/ui/map/google-map.component.ts\n            \n            \n                component\n            \n            \n                GoogleMapComponent\n            \n            \n                73 %\n                (11/15)\n            \n        \n        \n            \n                \n                    src/app/ui/map/map.component.ts\n            \n            \n                component\n            \n            \n                MapComponent\n            \n            \n                13 %\n                (3/22)\n            \n        \n        \n            \n                \n                    src/app/ui/map/map.service.ts\n            \n            \n                injectable\n            \n            \n                MapService\n            \n            \n                24 %\n                (7/29)\n            \n        \n        \n            \n                \n                    src/app/ui/map/map.style.ts\n            \n            \n                variable\n            \n            \n                MapStyle\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/actions/wizard.actions.ts\n            \n            \n                class\n            \n            \n                GoOn\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/ui/models/actions/wizard.actions.ts\n            \n            \n                class\n            \n            \n                Reset\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/ui/models/actions/wizard.actions.ts\n            \n            \n                class\n            \n            \n                StepChanged\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/ui/models/actions/wizard.actions.ts\n            \n            \n                class\n            \n            \n                StepError\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/ui/models/actions/wizard.actions.ts\n            \n            \n                class\n            \n            \n                StepPending\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/ui/models/base.component.ts\n            \n            \n                class\n            \n            \n                BaseComponent\n            \n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers.ts\n            \n            \n                interface\n            \n            \n                UiState\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers.ts\n            \n            \n                variable\n            \n            \n                currentStep\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers.ts\n            \n            \n                variable\n            \n            \n                error\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers.ts\n            \n            \n                variable\n            \n            \n                featureUiState\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers.ts\n            \n            \n                variable\n            \n            \n                pending\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers.ts\n            \n            \n                variable\n            \n            \n                reducers\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers.ts\n            \n            \n                variable\n            \n            \n                steps\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers.ts\n            \n            \n                variable\n            \n            \n                wizardState\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers/wizard.reducer.ts\n            \n            \n                interface\n            \n            \n                WizardState\n            \n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers/wizard.reducer.ts\n            \n            \n                function\n            \n            \n                wizardReducer\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers/wizard.reducer.ts\n            \n            \n                variable\n            \n            \n                getCurrentStep\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers/wizard.reducer.ts\n            \n            \n                variable\n            \n            \n                getError\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers/wizard.reducer.ts\n            \n            \n                variable\n            \n            \n                getPending\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers/wizard.reducer.ts\n            \n            \n                variable\n            \n            \n                getSteps\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers/wizard.reducer.ts\n            \n            \n                variable\n            \n            \n                initialWizardState\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/wizard.ts\n            \n            \n                interface\n            \n            \n                Step\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    src/app/ui/models/wizard.ts\n            \n            \n                variable\n            \n            \n                STEPS\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/ui/ui-config.ts\n            \n            \n                variable\n            \n            \n                uiConfig\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/ui/ui.component.ts\n            \n            \n                component\n            \n            \n                UiComponent\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                    src/app/ui/utils.ts\n            \n            \n                class\n            \n            \n                EnumValues\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/ui/weather/weather.component.ts\n            \n            \n                component\n            \n            \n                WeatherComponent\n            \n            \n                17 %\n                (3/17)\n            \n        \n        \n            \n                \n                    src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts\n            \n            \n                component\n            \n            \n                ChangeOfConditionsComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts\n            \n            \n                component\n            \n            \n                EstimateOfDemandComponent\n            \n            \n                18 %\n                (3/16)\n            \n        \n        \n            \n                \n                    src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts\n            \n            \n                component\n            \n            \n                SearchForTheAreaComponent\n            \n            \n                18 %\n                (3/16)\n            \n        \n        \n            \n                \n                    src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts\n            \n            \n                component\n            \n            \n                SelectionOfTheAreaComponent\n            \n            \n                21 %\n                (3/14)\n            \n        \n        \n            \n                \n                    src/app/ui/wizard/simulation/simulation.component.ts\n            \n            \n                component\n            \n            \n                SimulationComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/ui/wizard/statistics/statistics.component.ts\n            \n            \n                component\n            \n            \n                StatisticsComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/ui/wizard/wizard.component.ts\n            \n            \n                component\n            \n            \n                WizardComponent\n            \n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                    src/app/ui/wizard/wizard.service.ts\n            \n            \n                injectable\n            \n            \n                WizardService\n            \n            \n                16 %\n                (2/12)\n            \n        \n        \n            \n                \n                    src/app/utils.ts\n            \n            \n                function\n            \n            \n                getRandomColor\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/utils.ts\n            \n            \n                function\n            \n            \n                getScript\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/utils.ts\n            \n            \n                function\n            \n            \n                loadScripts\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 6.0.3\n        \n            @angular/common : 6.0.3\n        \n            @angular/compiler : 6.0.3\n        \n            @angular/core : 6.0.3\n        \n            @angular/forms : 6.0.3\n        \n            @angular/http : 6.0.3\n        \n            @angular/platform-browser : 6.0.3\n        \n            @angular/platform-browser-dynamic : 6.0.3\n        \n            @angular/router : 6.0.3\n        \n            @angular/material : 6.2.1\n        \n            @angular/cdk : 6.2.1\n        \n            @angular/flex-layout : 6.0.0-beta.15\n        \n            @ngrx/store : 6.0.1\n        \n            @ngrx/effects : 6.0.1\n        \n            @turf/area : 6.0.1\n        \n            @turf/helpers : 6.1.4\n        \n            @turf/invariant : 6.1.2\n        \n            @turf/bearing : 6.0.1\n        \n            @turf/transform-translate : 5.1.5\n        \n            @turf/centroid : 6.0.2\n        \n            @turf/center : 6.0.1\n        \n            ng-pick-datetime : 6.0.5\n        \n            mout : 1.1.0\n        \n            web-animations-js : 2.3.1\n        \n            hammerjs : 2.0.8\n        \n            animejs : 2.2.0\n        \n            qs : 6.5.2\n        \n            core-js : 2.5.7\n        \n            rxjs : 6.2.0\n        \n            zone.js : 0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PathType   (src/.../graph.ts)\n                        \n                        \n                            WizardActionTypes   (src/.../wizard.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/network/graph.ts\n    \n        \n            \n                \n                    \n                        \n                        PathType\n                    \n                \n                        \n                            \n                                 distance\n                            \n                        \n                        \n                            \n                                Value: distance\n                            \n                        \n                        \n                            \n                                 duration\n                            \n                        \n                        \n                            \n                                Value: duration\n                            \n                        \n            \n        \n\n    src/app/ui/models/actions/wizard.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        WizardActionTypes\n                    \n                \n                    \n                        \n                            ngrx: wizard Actions.\n\n                        \n                    \n                        \n                            \n                                 StepChanged\n                            \n                        \n                        \n                            \n                                Value: [Wizard] Step Changed\n                            \n                        \n                        \n                            \n                                 StepError\n                            \n                        \n                        \n                            \n                                Value: [Wizard] Step Error\n                            \n                        \n                        \n                            \n                                 StepPending\n                            \n                        \n                        \n                            \n                                Value: [Wizard] Step Pending\n                            \n                        \n                        \n                            \n                                 GoOn\n                            \n                        \n                        \n                            \n                                Value: [Wizard] Go On\n                            \n                        \n                        \n                            \n                                 Reset\n                            \n                        \n                        \n                            \n                                Value: [Wizard] Reset\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getRandomColor   (src/.../utils.ts)\n                        \n                        \n                            getScript   (src/.../utils.ts)\n                        \n                        \n                            loadScripts   (src/.../utils.ts)\n                        \n                        \n                            pairsValidator   (src/.../pairs.directive.ts)\n                        \n                        \n                            wizardReducer   (src/.../wizard.reducer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/utils.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getRandomColor\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRandomColor()\n                    \n                \n\n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getScript\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetScript(src: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        src\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadScripts\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadScripts()\n                    \n                \n\n\n\n\n            \n        \n\n    src/app/ui/directives/pairs.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            pairsValidator\n                            \n                            \n                        \n                    \n                \n                \n                    \npairsValidator()\n                    \n                \n\n\n\n\n            \n        \n\n    src/app/ui/models/reducers/wizard.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            wizardReducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nwizardReducer(state: undefined, action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n                            ngrx: wizard Reducer.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSTRADA\n\n\nSTRADA (Simulation of TRAffic DAta) is an urban traffic web simulator that uses data in real time.\n\n\nThis project is under active development for the dissertation of my bachelor's degree in computer engineering.\n\nDocumentation\nOfficial docs: STRADA documentation\nDevelopment\nRequirements\n\nNode.js and npm\nUpdate npm: npm install npm@latest -g\nAngular CLI: npm install -g @angular/cli\nFirebase\nCreate a Firebase project in the Firebase console\nFirebase CLI: npm install -g firebase-tools\nLogin: firebase login\n\n\nGoogle Maps \nGet your API keys: https://cloud.google.com/maps-platform/\nEnable Maps JavaScript API, Geocoding API and Directions API\n\n\nOpenWeatherMap\nGet your API key: https://openweathermap.org/\n\n\n\nPrerequisites\n\nUpdate .firebaserc file\nUpdate src/app/app-config.json file\nUpdate functions/src/functions-config.json file\n\nFirebase Functions\ncd functions\nnpm install\nnpm run serve:devApp\nnpm install\nnpm startTest\nnpm testLicense\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Roberto Simonetti\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DemandModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LocationModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NetworkModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SimulationModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WeatherModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_DemandModule\n\n\n\ncluster_DemandModule_providers\n\n\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_providers\n\n\n\ncluster_NetworkModule\n\n\n\ncluster_NetworkModule_imports\n\n\n\ncluster_NetworkModule_providers\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SimulationModule\n\n\n\ncluster_SimulationModule_providers\n\n\n\ncluster_UiModule\n\n\n\ncluster_UiModule_declarations\n\n\n\ncluster_UiModule_imports\n\n\n\ncluster_UiModule_providers\n\n\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nDemandModule\n\nDemandModule\n\nAppModule -->\n\nDemandModule->AppModule\n\n\n\n\n\nLocationModule\n\nLocationModule\n\nAppModule -->\n\nLocationModule->AppModule\n\n\n\n\n\nNetworkModule\n\nNetworkModule\n\nAppModule -->\n\nNetworkModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nSharedModule->FooterComponent \n\n\n\n\n\nInfoDialogComponent \n\nInfoDialogComponent \n\nInfoDialogComponent  -->\n\nSharedModule->InfoDialogComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nMessageArchivedComponent \n\nMessageArchivedComponent \n\nMessageArchivedComponent  -->\n\nSharedModule->MessageArchivedComponent \n\n\n\n\n\nUiModule\n\nUiModule\n\nUiModule -->\n\nSharedModule->UiModule\n\n\n\n\n\nSimulationModule\n\nSimulationModule\n\nAppModule -->\n\nSimulationModule->AppModule\n\n\n\n\n\nDemandService\n\nDemandService\n\nDemandModule -->\n\nDemandService->DemandModule\n\n\n\n\n\nLocationService\n\nLocationService\n\nLocationModule -->\n\nLocationService->LocationModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nNetworkModule -->\n\nWeatherModule->NetworkModule\n\n\n\n\n\nNetworkService\n\nNetworkService\n\nNetworkModule -->\n\nNetworkService->NetworkModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nSharedModule -->\n\nFooterComponent->SharedModule\n\n\n\n\n\nInfoDialogComponent\n\nInfoDialogComponent\n\nSharedModule -->\n\nInfoDialogComponent->SharedModule\n\n\n\n\n\nMessageArchivedComponent\n\nMessageArchivedComponent\n\nSharedModule -->\n\nMessageArchivedComponent->SharedModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\nSimulationService\n\nSimulationService\n\nSimulationModule -->\n\nSimulationService->SimulationModule\n\n\n\n\n\nChangeOfConditionsComponent\n\nChangeOfConditionsComponent\n\nUiModule -->\n\nChangeOfConditionsComponent->UiModule\n\n\n\n\n\nEstimateOfDemandComponent\n\nEstimateOfDemandComponent\n\nUiModule -->\n\nEstimateOfDemandComponent->UiModule\n\n\n\n\n\nGoogleMapComponent\n\nGoogleMapComponent\n\nUiModule -->\n\nGoogleMapComponent->UiModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nUiModule -->\n\nMapComponent->UiModule\n\n\n\n\n\nSearchForTheAreaComponent\n\nSearchForTheAreaComponent\n\nUiModule -->\n\nSearchForTheAreaComponent->UiModule\n\n\n\n\n\nSelectionOfTheAreaComponent\n\nSelectionOfTheAreaComponent\n\nUiModule -->\n\nSelectionOfTheAreaComponent->UiModule\n\n\n\n\n\nSimulationComponent\n\nSimulationComponent\n\nUiModule -->\n\nSimulationComponent->UiModule\n\n\n\n\n\nStatisticsComponent\n\nStatisticsComponent\n\nUiModule -->\n\nStatisticsComponent->UiModule\n\n\n\n\n\nUiComponent\n\nUiComponent\n\nUiModule -->\n\nUiComponent->UiModule\n\n\n\n\n\nWeatherComponent\n\nWeatherComponent\n\nUiModule -->\n\nWeatherComponent->UiModule\n\n\n\n\n\nWizardComponent\n\nWizardComponent\n\nUiModule -->\n\nWizardComponent->UiModule\n\n\n\n\n\nUiRoutingModule\n\nUiRoutingModule\n\nUiModule -->\n\nUiRoutingModule->UiModule\n\n\n\n\n\nMapService\n\nMapService\n\nUiModule -->\n\nMapService->UiModule\n\n\n\n\n\nWizardService\n\nWizardService\n\nUiModule -->\n\nWizardService->UiModule\n\n\n\n\n\nWeatherService\n\nWeatherService\n\nWeatherModule -->\n\nWeatherService->WeatherModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            11 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        16 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        8 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        13 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        8 interfaces\n                    \n                \n            \n            \n                \n                    \n                        \n                        \n                            6 routes\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EnumValueType   (src/.../utils.ts)\n                        \n                        \n                            WizardActions   (src/.../wizard.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/ui/utils.ts\n    \n        \n            \n                \n                    \n                        \n                        EnumValueType\n                    \n                \n                \n                    \n                        EnumValueType:     string | number\n\n                    \n                \n            \n        \n\n    src/app/ui/models/actions/wizard.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        WizardActions\n                    \n                \n                \n                    \n                        WizardActions:     StepChanged | StepError | StepPending | GoOn | Reset\n\n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            currentStep   (src/.../reducers.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            error   (src/.../reducers.ts)\n                        \n                        \n                            featureUiState   (src/.../reducers.ts)\n                        \n                        \n                            getCurrentStep   (src/.../wizard.reducer.ts)\n                        \n                        \n                            getError   (src/.../wizard.reducer.ts)\n                        \n                        \n                            getPending   (src/.../wizard.reducer.ts)\n                        \n                        \n                            getSteps   (src/.../wizard.reducer.ts)\n                        \n                        \n                            HOME_TRANSITION   (src/.../home.transition.ts)\n                        \n                        \n                            initialWizardState   (src/.../wizard.reducer.ts)\n                        \n                        \n                            MapStyle   (src/.../map.style.ts)\n                        \n                        \n                            materialModules   (src/.../material.module.ts)\n                        \n                        \n                            pending   (src/.../reducers.ts)\n                        \n                        \n                            reducers   (src/.../reducers.ts)\n                        \n                        \n                            sharedModules   (src/.../shared.module.ts)\n                        \n                        \n                            steps   (src/.../reducers.ts)\n                        \n                        \n                            STEPS   (src/.../wizard.ts)\n                        \n                        \n                            uiConfig   (src/.../ui-config.ts)\n                        \n                        \n                            wizardState   (src/.../reducers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/ui/models/reducers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            currentStep\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentStep:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    wizardState,\n    fromWizard.getCurrentStep\n)\n                        \n                    \n\n                \n                    \n                        Exports the current step state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    wizardState,\n    fromWizard.getError\n)\n                        \n                    \n\n                \n                    \n                        Exports the error state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            featureUiState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        featureUiState:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createFeatureSelector('ui')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pending\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pending:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    wizardState,\n    fromWizard.getPending\n)\n                        \n                    \n\n                \n                    \n                        Exports the pending state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reducers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reducers:     ActionReducerMap\n\n                    \n                \n                    \n                        \n                            Type :     ActionReducerMap\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    wizard: fromWizard.wizardReducer\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            steps\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        steps:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    wizardState,\n    fromWizard.getSteps\n)\n                        \n                    \n\n                \n                    \n                        Exports the steps state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wizardState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        wizardState:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    featureUiState,\n    (state: UiState) => state.wizard\n)\n                        \n                    \n\n                \n                    \n                        Exports the wizard state.\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    production: true,\n    functions: {\n        networkData: {\n            url: 'https://us-central1-' + appConfig.firebase.projectId + '.cloudfunctions.net/networkData'\n        },\n        trafficData: {\n            url: 'https://us-central1-' + appConfig.firebase.projectId + '.cloudfunctions.net/trafficData'\n        }\n    }\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    production: false,\n    functions: {\n        networkData: {\n            url: 'http://localhost:4201/' + appConfig.firebase.projectId + '/us-central1/networkData'\n        },\n        trafficData: {\n            url: 'http://localhost:4201/' + appConfig.firebase.projectId + '/us-central1/trafficData'\n        }\n    }\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/ui/models/reducers/wizard.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getCurrentStep\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getCurrentStep:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : (state: WizardState) => state.currentStep\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getError:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : (state: WizardState) => state.error\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPending\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getPending:     string | boolean\n\n                    \n                \n                    \n                        \n                            Type :     string | boolean\n\n                        \n                    \n                    \n                        \n                            Default value : (state: WizardState) => state.pending\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSteps\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getSteps:     Step[]\n\n                    \n                \n                    \n                        \n                            Type :     Step[]\n\n                        \n                    \n                    \n                        \n                            Default value : (state: WizardState) => state.steps\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialWizardState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        initialWizardState:     WizardState\n\n                    \n                \n                    \n                        \n                            Type :     WizardState\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    steps: STEPS,\n    currentStep: 0,\n    error: null,\n    pending: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/home/home.transition.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            HOME_TRANSITION\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        HOME_TRANSITION:     AnimationTriggerMetadata\n\n                    \n                \n                    \n                        \n                            Type :     AnimationTriggerMetadata\n\n                        \n                    \n                    \n                        \n                            Default value : trigger('homeTransition', [\n    transition('void => *', [\n        style({\n            opacity: 0\n        }),\n        animate('500ms 0ms ease-in',\n            style({\n                opacity: 1\n            })\n        )\n    ])\n])\n                        \n                    \n\n\n            \n        \n\n    src/app/ui/map/map.style.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MapStyle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        MapStyle:     google.maps.MapTypeStyle[]\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.MapTypeStyle[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        \"featureType\": \"administrative\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road\",\n        \"elementType\": \"labels.icon\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"transit\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    }\n]\n                        \n                    \n\n                \n                    \n                        Styled Maps: https://developers.google.com/maps/documentation/javascript/styling\n\n                    \n                \n\n            \n        \n\n    src/app/shared/material.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            materialModules\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        materialModules:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    MatSidenavModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    MatMenuModule,\n    MatStepperModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule,\n    MatDialogModule,\n    MatGridListModule,\n    MatSelectModule\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/shared/shared.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            sharedModules\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sharedModules:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    CommonModule,\n    RouterModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    FlexLayoutModule\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/ui/models/wizard.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            STEPS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        STEPS:     Step[]\n\n                    \n                \n                    \n                        \n                            Type :     Step[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n                \n                    \n                        Initial steps.\n\n                    \n                \n\n            \n        \n\n    src/app/ui/ui-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            uiConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uiConfig:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    // Initial map.\n    map: {\n        center: { lat: 41.910943, lng: 12.476358 },\n        zoom: 4\n    },\n    /**\n     * Time of simulation limit in hours.\n     */\n    timeLimit: 24,\n    /**\n     * Area limit in hectares.\n     */\n    areaMaxLimit: 30,\n    areaMinLimit: 3,\n    edges: {\n        baseColor: '#babdbe',\n        noTrafficColor: '#76d219',\n        moderateTrafficColor: '#d27519',\n        heavyTrafficColor: '#d2191a'\n    },\n    // Maximum number of O/D pairs that the user can select.\n    maxOdPairs: 5\n}\n                        \n                    \n\n                \n                    \n                        User interface configuration.\n\n                    \n                \n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
