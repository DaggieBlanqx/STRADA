var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.535,1,1.179]],["body/components/AppComponent.html",[0,0.992,1,2.112,2,0.305,3,0.237,4,1.667,5,1.667,6,1.667,7,0.192,8,3.962,9,1.667,10,2.887,11,2.145,12,5.903,13,2.462,14,5.903,15,2.462,16,5.903,17,0.283,18,0.016,19,0.637,20,0.192,21,0.009,22,4.576,23,1.138,24,2.055,25,1.528,26,2.147,27,2.509,28,1.667,29,1.086,30,1.667,31,1.403,32,1.769,33,1.187,34,1.667,35,1.403,36,1.596,37,1.667,38,1.403,39,1.667,40,1.403,41,1.464,42,2.147,43,1.345,44,1.667,45,1.403,46,1.667,47,1.403,48,1.999,49,1.403,50,1.667,51,1.667,52,1.403,53,1.596,54,2.147,55,1.403,56,1.528,57,1.403,58,1.667,59,1.403,60,1.667,61,1.345,62,1.667,63,1.403,64,1.667,65,1.403,66,1.667,67,0.012,68,0.012]],["title/modules/AppModule.html",[69,0.956,70,2.728]],["body/modules/AppModule.html",[1,2.341,2,0.213,3,0.213,7,0.173,11,1.209,17,0.48,18,0.017,19,0.572,20,0.231,21,0.008,23,1.022,43,2.082,67,0.011,68,0.011,69,1.366,70,5.604,71,1.892,72,3.162,73,3.162,74,2.19,75,3.56,76,3.56,77,3.56,78,3.56,79,4.648,80,4.648,81,4.648,82,4.648,83,3.721,84,4.648,85,2.295,86,0.98,87,1.892,88,4.118,89,2.529,90,5.503,91,4.266,92,2.918,93,5.503,94,4.118,95,3.56,96,1.566,97,3.56,98,3.192,99,3.56,100,3.56,101,4.118,102,3.56,103,4.118,104,4.118,105,4.118,106,4.118,107,4.118,108,4.118,109,4.118]],["title/classes/AppPreloadingStrategy.html",[21,0.008,110,2.728]],["body/classes/AppPreloadingStrategy.html",[2,0.272,3,0.272,7,0.221,17,0.398,18,0.016,20,0.221,21,0.013,29,0.968,67,0.013,68,0.013,110,4.563,111,4.563,112,5.62,113,4.551,114,1.813,115,6.015,116,0.498,117,1.599,118,6.44,119,4.261,120,7.249,121,4.251,122,0.806,123,5.264,124,1.253,125,0.696,126,1.253,127,1.184,128,3.987,129,2.842,130,2.546,131,5.264,132,5.264,133,4.551]],["title/modules/AppRoutingModule.html",[69,0.956,79,2.523]],["body/modules/AppRoutingModule.html",[0,0.702,2,0.261,3,0.261,7,0.212,11,1.482,17,0.454,18,0.017,19,0.702,20,0.263,21,0.01,43,1.843,67,0.013,68,0.013,69,1.254,74,2.01,79,4.113,89,2.885,102,4.366,110,4.839,111,3.578,112,4.866,115,4.366,119,3.913,129,2.726,134,4.366,135,4.447,136,5.05,137,1.482,138,3.857,139,6.277,140,5.904,141,4.366,142,4.366,143,2.577,144,5.05,145,5.05,146,1.684,147,2.894,148,5.05]],["title/classes/BaseComponent.html",[21,0.008,149,2.206]],["body/classes/BaseComponent.html",[0,0.999,2,0.223,3,0.223,7,0.181,17,0.351,18,0.017,19,0.6,20,0.181,21,0.014,33,1.47,48,1.738,67,0.012,68,0.012,114,1.598,116,0.409,117,1.41,122,1.101,125,0.571,127,1.288,130,2.088,149,3.253,150,3.732,151,1.503,152,7.328,153,3.721,154,2.526,155,4.495,156,1.091,157,4.35,158,3.862,159,2.683,160,4.417,161,4.417,162,4.417,163,1.215,164,1.072,165,4.317,166,4.317,167,1.733,168,4.317,169,4.317,170,4.392,171,2.683,172,4.417,173,4.317,174,4.317,175,3.065,176,3.347,177,3.347]],["title/interfaces/CanComponentDeactivate.html",[178,1.13,179,2.523]],["body/interfaces/CanComponentDeactivate.html",[2,0.275,3,0.275,7,0.223,17,0.432,18,0.017,19,0.739,20,0.272,21,0.011,67,0.013,68,0.013,114,1.496,116,0.503,121,3.957,125,0.702,127,0.977,128,3.711,129,2.869,130,2.571,156,1.245,178,1.901,179,4.578,180,4.12,181,3.247,182,4.12,183,5.373,184,1.901,185,4.594,186,1.772,187,3.247,188,4.594,189,5.6,190,2.869]],["title/injectables/CanDeactivateGuard.html",[184,1.13,187,2.352]],["body/injectables/CanDeactivateGuard.html",[0,0.721,2,0.268,3,0.268,7,0.218,17,0.427,18,0.017,19,0.721,20,0.268,21,0.011,29,0.955,67,0.013,68,0.013,114,1.461,116,0.491,117,1.585,122,0.795,124,1.236,125,0.686,126,1.236,127,1.174,128,3.658,129,2.802,130,2.511,178,1.524,179,4.727,180,4.949,181,3.901,182,4.024,183,5.248,184,2.03,185,4.487,186,1.731,187,3.901,188,5.519,189,5.519,190,2.802,191,5.191]],["title/components/ChangeOfConditionsComponent.html",[0,0.535,31,1.179]],["body/components/ChangeOfConditionsComponent.html",[0,0.951,1,1.234,2,0.28,3,0.208,4,1.466,5,1.466,6,1.466,7,0.169,9,1.466,10,2.849,11,1.925,13,2.261,15,2.261,17,0.335,18,0.016,19,0.56,20,0.169,21,0.008,23,1,24,1.888,25,1.404,26,1.973,27,2.385,28,1.466,29,0.997,30,1.466,31,2.008,32,1.766,33,1.865,34,1.466,35,1.234,36,1.403,37,1.466,38,1.234,39,1.466,40,1.234,41,1.287,42,1.973,43,1.183,44,1.466,45,1.234,46,1.466,47,1.234,48,1.877,49,1.234,50,1.466,51,1.466,52,1.234,53,1.403,54,1.973,55,1.234,56,1.343,57,1.234,58,1.466,59,1.234,60,1.466,61,1.183,62,1.466,63,1.234,64,1.466,65,1.234,66,1.466,67,0.011,68,0.011,114,1.526,116,0.621,117,1.346,122,1.004,125,0.717,127,0.741,154,2.44,159,2.61,167,1.238,192,5.916,193,5.305,194,3.483,195,3.842,196,5.423,197,5.423,198,3.921,199,4.039,200,1.459,201,5.423,202,4.029,203,1.291,204,4.029,205,2.056]],["title/classes/Clock.html",[21,0.008,206,2.985]],["body/classes/Clock.html",[2,0.314,3,0.314,7,0.255,18,0.016,20,0.255,21,0.014,67,0.014,68,0.014,206,5.44,207,5.258]],["title/modules/DemandModule.html",[69,0.956,80,2.523]],["body/modules/DemandModule.html",[2,0.283,3,0.283,7,0.229,17,0.437,18,0.016,19,0.76,20,0.276,21,0.011,23,1.358,67,0.014,68,0.014,69,1.637,71,2.514,72,3.364,73,2.792,74,2.817,80,5.003,85,2.749,86,1.302,87,2.514,89,3.03,208,4.73,209,4.73,210,4.665,211,5.471,212,5.471]],["title/injectables/DemandService.html",[184,1.13,210,2.352]],["body/injectables/DemandService.html",[2,0.284,3,0.284,7,0.23,17,0.34,18,0.016,19,0.764,20,0.23,21,0.011,36,2.302,67,0.014,68,0.014,86,1.751,116,0.52,117,1.642,122,0.842,127,1.011,151,1.914,167,1.509,184,2.081,210,4.039,213,4.753,214,3.788,215,3.569,216,4.332,217,4.685,218,1.996,219,5.498]],["title/classes/Edge.html",[21,0.008,220,1.965]],["body/classes/Edge.html",[2,0.131,3,0.244,7,0.106,17,0.157,18,0.017,20,0.252,21,0.012,25,1.005,29,0.466,67,0.008,68,0.008,116,0.24,117,0.964,122,1.092,124,0.604,125,0.933,126,0.604,127,1.152,137,0.744,138,2.548,146,1.295,151,0.883,156,0.747,163,0.714,164,1.313,167,1.207,178,1.14,186,0.846,200,0.604,203,1.854,214,1.453,215,1.369,218,2.238,220,3.296,221,1.453,222,2.705,223,3.031,224,2.884,225,3.835,226,3.232,227,3.946,228,3.232,229,3.268,230,3.232,231,3.447,232,3.447,233,3.447,234,3.484,235,3.602,236,3.232,237,3.232,238,2.373,239,3.884,240,2.536,241,2.536,242,2.536,243,2.536,244,2.536,245,2.536,246,2.536,247,2.536,248,2.536,249,2.536,250,2.536,251,2.705,252,2.373,253,2.225,254,2.705,255,1.549,256,1.549,257,1.549,258,1.549,259,1.453,260,1.549,261,1.294,262,1.428,263,1.549,264,2.855,265,1.549,266,1.549,267,1.549,268,1.369,269,1.453,270,1.549,271,1.549,272,1.453,273,1.453,274,2.705,275,1.369,276,1.549,277,1.549,278,1.549,279,1.549,280,1.549,281,1.549,282,3.078,283,1.549,284,1.453,285,1.549,286,1.294,287,1.549,288,1.549,289,2.373,290,1.549,291,1.549,292,1.699,293,1.453,294,1.227,295,1.643,296,1.549,297,1.549,298,1.549,299,1.549,300,1.549,301,1.549,302,1.549,303,1.453,304,1.549,305,1.549,306,1.549,307,2.373,308,1.549,309,1.549,310,1.549,311,1.549,312,1.549,313,1.549,314,1.549,315,1.549,316,1.549,317,1.549,318,1.549,319,1.549,320,1.549,321,1.549,322,1.549,323,1.549,324,1.549,325,1.227,326,1.549,327,1.453,328,1.549,329,1.699,330,1.369,331,1.453,332,1.453,333,1.549,334,1.549,335,1.369,336,1.549,337,1.549,338,1.879,339,1.549]],["title/components/EstimateOfDemandComponent.html",[0,0.535,35,1.179]],["body/components/EstimateOfDemandComponent.html",[0,0.881,1,0.806,2,0.206,3,0.136,4,0.957,5,0.957,6,0.957,7,0.11,9,0.957,10,2.694,11,1.583,13,1.666,15,1.666,17,0.404,18,0.017,19,0.366,20,0.11,21,0.005,23,0.653,24,1.391,25,1.034,26,1.453,27,1.962,28,0.957,29,0.888,30,0.957,31,0.806,32,1.674,33,1.034,34,0.957,35,1.651,36,2.208,37,0.957,38,0.806,39,0.957,40,0.806,41,0.841,42,1.453,43,0.772,44,0.957,45,0.806,46,0.957,47,0.806,48,1.479,49,0.806,50,0.957,51,0.957,52,0.806,53,0.916,54,1.453,55,0.806,56,1.332,57,0.806,58,0.957,59,0.806,60,0.957,61,0.772,62,0.957,63,0.806,64,0.957,65,0.806,66,0.957,67,0.008,68,0.008,96,1.001,114,1.125,116,0.51,117,0.992,122,1.101,124,0.626,125,0.713,126,0.626,127,1.293,137,0.772,149,3.835,153,4,154,1.922,156,0.768,157,3.322,158,2.767,159,2.525,160,4.156,161,4.156,162,4.156,163,1.125,164,1.199,167,1.655,170,2.95,171,1.59,172,2.618,175,1.42,198,3.322,199,3.497,200,0.951,203,1.15,205,1.343,217,2.831,262,0.71,292,2.536,294,2.336,295,1.681,340,5.785,341,5.188,342,2.275,343,2.831,344,3.995,345,3.995,346,5.392,347,1.865,348,3.729,349,2.478,350,2.911,351,3.995,352,2.632,353,2.632,354,2.632,355,2.632,356,3.995,357,3.995,358,3.454,359,3.995,360,3.454,361,3.097,362,2.632,363,2.632,364,1.865,365,1.865,366,1.865,367,1.865,368,1.865,369,1.865,370,3.995,371,2.04,372,1.865,373,2.04,374,1.608,375,1.508,376,1.865,377,1.865,378,1.865,379,1.865,380,1.865,381,2.275,382,1.608,383,2.275,384,2.632,385,2.275,386,2.632,387,2.632,388,2.632,389,2.632,390,2.632,391,2.632,392,1.453,393,3.422,394,1.865,395,1.865,396,2.275,397,1.724,398,3.097,399,2.632,400,1.343,401,2.04,402,2.04,403,2.632,404,2.275,405,2.632,406,2.275,407,2.632,408,2.275,409,2.275,410,2.632]],["title/components/FooterComponent.html",[0,0.535,38,1.179]],["body/components/FooterComponent.html",[0,0.957,1,1.256,2,0.284,3,0.212,4,1.492,5,1.492,6,1.492,7,0.172,9,1.492,10,2.854,11,2.08,13,2.289,15,2.289,17,0.253,18,0.016,19,0.57,20,0.172,21,0.008,23,1.019,24,1.911,25,1.421,26,1.997,27,2.403,28,1.492,29,1.01,30,1.492,31,1.256,32,1.723,33,1.062,34,1.492,35,1.256,36,1.428,37,1.492,38,2.022,39,1.492,40,1.256,41,1.311,42,1.997,43,1.204,44,1.492,45,1.256,46,1.492,47,1.256,48,1.894,49,1.256,50,1.492,51,1.492,52,1.256,53,1.428,54,1.997,55,1.256,56,1.368,57,1.256,58,1.492,59,1.256,60,1.492,61,1.204,62,1.492,63,1.256,64,1.492,65,1.256,66,1.492,67,0.011,68,0.011,114,1.545,116,0.388,117,1.363,122,0.841,125,0.542,127,0.755,154,2.462,156,1.055,159,2.629,163,1.155,164,1.019,167,1.253,203,1.473,411,3.547,412,5.489,413,5.489,414,5.489,415,7.086,416,4.103,417,3.354,418,5.489,419,4.103,420,5.489,421,5.489,422,3.889,423,4.103,424,4.103,425,3.547,426,3.547,427,3.547]],["title/classes/GoOn.html",[21,0.008,428,1.863]],["body/classes/GoOn.html",[2,0.203,3,0.203,7,0.164,17,0.329,18,0.017,20,0.3,21,0.014,29,0.721,32,1.703,33,1.015,67,0.011,68,0.011,86,1.544,96,1.492,114,1.968,116,0.572,122,0.926,124,0.934,125,1.024,126,0.934,156,1.024,163,1.104,164,0.974,171,2.897,186,1.308,200,0.934,203,1.439,218,2.077,262,1.965,392,1.427,428,3.137,429,2.117,430,4.508,431,4.687,432,2.57,433,5.028,434,5.326,435,3.922,436,3.051,437,2.534,438,2.117,439,2.57,440,2.117,441,3.085,442,3.085,443,3.085,444,1.716,445,2.396,446,2.247,447,4.143,448,2.247,449,2.247,450,2.247,451,2.247,452,2.247]],["title/components/GoogleMapComponent.html",[0,0.535,40,1.179]],["body/components/GoogleMapComponent.html",[0,0.791,1,0.773,2,0.2,3,0.13,4,1.408,5,0.918,6,0.918,7,0.106,9,0.918,10,2.677,11,1.549,17,0.239,18,0.017,19,0.351,20,0.106,21,0.005,23,0.627,24,1.348,25,1.219,26,1.408,27,1.92,28,0.918,29,1.047,30,0.918,31,0.773,32,1.488,33,1.366,34,0.918,35,0.773,36,0.879,37,0.918,38,0.773,39,0.918,40,1.616,41,1.504,42,1.408,43,0.741,44,0.918,45,0.773,46,0.918,47,0.773,48,1.743,49,0.773,50,0.918,51,0.918,52,0.773,53,0.879,54,1.408,55,0.773,56,0.842,57,0.773,58,0.918,59,0.773,60,0.918,61,0.741,62,0.918,63,0.773,64,0.918,65,0.773,66,0.918,67,0.008,68,0.008,85,2.973,114,1.089,116,0.239,117,0.961,122,1.091,124,1.121,125,0.966,126,1.121,127,0.866,137,0.741,154,1.874,156,0.744,159,2.101,163,1.815,167,1.371,186,1.76,198,3.991,200,0.601,203,1.574,218,1.089,262,1.425,268,1.363,295,1.837,325,1.221,330,2.089,331,2.218,397,2.536,433,3,447,1.542,453,6.22,454,2.182,455,4.707,456,4.114,457,3.87,458,3.87,459,4.124,460,4.562,461,4.562,462,4.562,463,5.191,464,4.562,465,4.562,466,3.935,467,2.524,468,3.241,469,5.404,470,3.87,471,4.091,472,2.742,473,2.524,474,5.277,475,2.524,476,3.87,477,3.87,478,3.87,479,2.524,480,3.87,481,3.87,482,3.87,483,2.524,484,3.739,485,3.87,486,3.346,487,2.524,488,3.87,489,5.191,490,5.277,491,2.524,492,2.524,493,3.346,494,3.87,495,3,496,2.524,497,3.87,498,4.091,499,2.524,500,3,501,3.87,502,2.524,503,2.218,504,2.524,505,3.87,506,2.524,507,3.87,508,2.182,509,2.182,510,1.789,511,2.524,512,2.524,513,2.524,514,2.524,515,2.524,516,2.524,517,2.524,518,2.524,519,2.182,520,2.182,521,2.182,522,2.182,523,2.182,524,2.182,525,2.182,526,2.182,527,2.182]],["title/classes/Graph.html",[21,0.008,292,1.684]],["body/classes/Graph.html",[2,0.126,3,0.289,7,0.102,17,0.15,18,0.017,20,0.248,21,0.011,25,0.974,29,0.952,67,0.008,68,0.008,116,0.23,117,0.934,122,1.057,124,1.232,125,0.842,126,1.232,127,1.301,137,0.714,138,3.194,146,1.255,151,1.31,156,0.723,163,1.295,164,1.39,167,1.277,178,1.105,186,0.811,203,1.752,214,2.156,215,2.031,218,2.215,220,3.678,221,1.394,222,2.636,223,2.966,224,2.299,225,3.951,226,1.487,227,3.997,228,1.487,229,2.636,230,1.487,231,2.156,232,2.156,233,2.156,234,2.811,235,3.252,236,1.487,237,1.487,238,1.487,251,2.636,252,1.487,253,1.394,254,2.636,255,1.487,256,1.487,257,1.487,258,1.487,259,1.394,260,1.487,261,1.242,262,1.397,263,1.487,264,2.794,265,1.487,266,1.487,267,1.487,268,1.314,269,1.394,270,1.487,271,1.487,272,1.394,273,1.394,274,2.966,275,1.314,276,1.487,277,1.487,278,1.487,279,1.487,280,1.487,281,1.487,282,3.672,283,1.487,284,1.394,285,1.487,286,1.242,287,1.487,288,1.487,289,2.299,290,1.487,291,1.487,292,2.264,293,2.156,294,1.82,295,2.278,296,3.615,297,1.487,298,3.163,299,1.487,300,3.163,301,1.487,302,2.299,303,2.156,304,1.487,305,1.487,306,2.299,307,2.299,308,1.487,309,1.487,310,1.487,311,1.487,312,1.487,313,1.487,314,1.487,315,1.487,316,1.487,317,1.487,318,1.487,319,1.487,320,1.487,321,1.487,322,1.487,323,2.299,324,1.487,325,1.82,326,2.299,327,2.156,328,3.163,329,1.646,330,2.031,331,2.156,332,2.156,333,2.299,334,2.299,335,2.031,336,2.299,337,2.299,338,1.82,339,2.299,528,3.763,529,3.763,530,3.763,531,2.434,532,2.434,533,2.434,534,2.434,535,2.434,536,2.434,537,2.434,538,2.434,539,2.434,540,2.434,541,2.434]],["title/components/HomeComponent.html",[0,0.535,43,1.13]],["body/components/HomeComponent.html",[0,0.88,1,0.998,2,0.242,3,0.168,4,1.185,5,1.185,6,1.185,7,0.137,9,1.185,10,2.778,11,1.936,13,1.951,15,1.951,17,0.338,18,0.017,19,0.453,20,0.137,21,0.007,22,3.626,23,0.809,24,1.629,25,1.417,26,1.702,27,2.176,28,1.185,29,1.007,30,1.185,31,0.998,32,1.617,33,0.843,34,1.185,35,0.998,36,1.134,37,1.185,38,0.998,39,1.185,40,0.998,41,1.041,42,1.702,43,1.756,44,1.185,45,0.998,46,1.185,47,0.998,48,1.676,49,0.998,50,1.185,51,1.185,52,0.998,53,1.134,54,1.702,55,0.998,56,1.086,57,0.998,58,1.185,59,0.998,60,1.185,61,0.956,62,1.185,63,0.998,64,1.185,65,0.998,66,1.185,67,0.01,68,0.01,114,1.317,116,0.308,117,1.161,122,0.916,124,0.776,125,0.431,126,0.776,127,1.1,137,1.859,140,4.044,143,3.052,146,1.994,147,2.68,154,2.179,156,0.899,159,2.381,163,0.917,164,0.809,167,1.365,190,1.759,200,0.776,216,3.919,262,1.263,469,5.7,498,2.526,500,3.626,542,2.816,543,5.473,544,4.678,545,4.678,546,5.171,547,5.981,548,3.258,549,4.678,550,3.258,551,3.258,552,5.171,553,2.816,554,3.626,555,3.258,556,2.526,557,3.258,558,6.594,559,3.258,560,3.258,561,3.258,562,5.473,563,3.258,564,4.678,565,3.258,566,3.626,567,4.678,568,4.678,569,3.258,570,3.258,571,4.488,572,4.044,573,3.136,574,3.258,575,4.044,576,4.678,577,4.678,578,4.678,579,3.258,580,3.258,581,3.258,582,3.258,583,3.258,584,4.678,585,3.258,586,3.258,587,4.044,588,3.626,589,3.314,590,4.044,591,2.858,592,3.626]],["title/components/InfoDialogComponent.html",[0,0.535,45,1.179]],["body/components/InfoDialogComponent.html",[0,0.95,1,1.231,2,0.372,3,0.208,4,1.97,5,1.463,6,1.463,7,0.169,9,1.463,10,2.848,11,1.923,17,0.335,18,0.016,19,0.559,20,0.169,21,0.008,23,0.998,24,1.886,25,1.402,26,1.97,27,2.384,28,1.463,29,1.126,30,1.463,31,1.231,32,1.714,33,1.041,34,1.463,35,1.231,36,1.4,37,1.463,38,1.231,39,1.463,40,1.231,41,1.285,42,1.97,43,1.18,44,1.463,45,2.006,46,1.463,47,1.231,48,1.875,49,1.231,50,1.463,51,1.463,52,1.231,53,1.4,54,1.97,55,1.231,56,1.341,57,1.231,58,1.463,59,1.231,60,1.463,61,1.18,62,1.463,63,1.231,64,1.463,65,1.231,66,1.463,67,0.011,68,0.011,116,0.381,122,0.938,124,0.957,125,0.809,126,0.957,146,2.473,156,1.041,184,1.59,200,1.289,218,1.983,466,2.635,593,5.664,594,3.476,595,4.682,596,6.124,597,5.912,598,4.021,599,7.045,600,4.021,601,3.117,602,4.021,603,4.021,604,4.021,605,2.304,606,4.021]],["title/modules/LocationModule.html",[69,0.956,81,2.523]],["body/modules/LocationModule.html",[2,0.283,3,0.283,7,0.229,17,0.437,18,0.016,19,0.76,20,0.276,21,0.011,23,1.358,67,0.014,68,0.014,69,1.637,71,2.514,72,3.364,73,2.792,74,2.817,81,5.003,85,2.749,86,1.302,87,2.514,89,3.03,607,4.73,608,4.73,609,4.375,610,5.471,611,5.471]],["title/injectables/LocationService.html",[184,1.13,609,2.206]],["body/injectables/LocationService.html",[2,0.168,3,0.168,7,0.136,17,0.288,18,0.017,19,0.451,20,0.136,21,0.007,29,0.859,41,1.745,53,1.625,67,0.011,68,0.01,86,1.422,116,0.307,117,1.483,122,1.063,124,1.111,125,0.789,126,1.111,127,1.32,128,4.331,130,1.571,143,2.382,151,1.625,156,0.897,167,1.363,184,1.604,200,1.301,218,2.115,262,1.475,272,2.675,273,2.675,295,2.293,329,1.421,338,1.571,392,1.182,398,3.619,400,3.048,417,2.852,422,4.232,456,2.949,459,2.852,472,4.92,609,2.675,612,2.808,613,4.035,614,3.619,615,3.619,616,3.307,617,4.668,618,7.342,619,5.867,620,5.694,621,4.668,622,5.47,623,5.973,624,4.668,625,4.668,626,4.668,627,3.249,628,5.973,629,4.667,630,5.106,631,4.668,632,3.249,633,4.668,634,4.63,635,3.249,636,3.249,637,4.668,638,3.249,639,6.327,640,3.249,641,4.668,642,5.464,643,4.035,644,4.668,645,3.249,646,2.808,647,4.668,648,2.808,649,3.249,650,3.249,651,4.035,652,3.249,653,3.249,654,3.249,655,2.808,656,3.249]],["title/components/MapComponent.html",[0,0.535,47,1.179]],["body/components/MapComponent.html",[0,0.856,1,0.743,2,0.194,3,0.125,4,0.882,5,0.882,6,0.882,7,0.102,9,0.882,10,2.659,11,1.517,13,1.565,15,1.565,17,0.404,18,0.017,19,0.337,20,0.102,21,0.005,23,0.602,24,1.307,25,0.972,26,1.365,27,1.88,28,0.882,29,0.844,30,0.882,31,0.743,32,1.59,33,0.972,34,0.882,35,0.743,36,0.845,37,0.882,38,0.743,39,0.882,40,0.743,41,0.775,42,1.365,43,0.712,44,0.882,45,0.743,46,0.882,47,1.582,48,1.809,49,0.743,50,0.882,51,0.882,52,0.743,53,0.845,54,1.365,55,0.743,56,1.251,57,0.743,58,0.882,59,0.743,60,0.882,61,0.712,62,0.882,63,0.743,64,0.882,65,0.743,66,0.882,67,0.008,68,0.008,85,2.331,96,0.923,114,1.056,116,0.23,117,0.932,122,1.133,124,0.577,125,0.898,126,0.894,127,1.202,137,0.712,147,1.39,149,3.745,153,3.872,154,1.827,155,1.719,156,0.721,157,3.202,158,2.63,159,2.453,160,4.038,161,4.038,162,4.038,163,0.683,164,0.602,167,1.596,170,2.805,171,1.494,172,2.459,175,1.309,186,1.97,190,1.309,200,0.894,203,1.618,262,1.239,295,1.598,343,2.659,347,1.719,348,3.61,349,2.375,364,1.719,365,1.719,366,1.719,367,1.719,368,1.719,369,1.719,374,1.482,375,1.39,376,1.719,377,1.719,378,1.719,379,1.719,380,1.719,381,2.097,382,1.482,394,2.659,395,2.659,400,2.342,401,2.91,404,2.097,437,1.307,456,3.528,459,3.61,460,4.467,461,4.467,462,4.467,463,4.467,464,4.467,465,4.467,466,3.386,468,2.789,471,2.91,472,3.253,484,2.659,486,3.969,489,2.097,495,3.559,503,1.39,508,2.097,519,3.969,520,2.097,521,2.097,522,2.097,523,2.097,524,2.097,525,2.097,526,2.097,527,3.969,546,2.097,571,1.719,573,1.39,657,2.097,658,2.91,659,2.91,660,3.753,661,3.753,662,3.753,663,2.426,664,2.426,665,2.426,666,2.426,667,2.426,668,2.426,669,2.426,670,2.426,671,2.426,672,2.426,673,2.426,674,2.426,675,1.88,676,1.88,677,2.91,678,2.426,679,2.097,680,1.589,681,1.719,682,2.426,683,2.097,684,2.097,685,2.426,686,3.753,687,3.753,688,2.097,689,2.426,690,2.426,691,2.426,692,2.097,693,1.88,694,2.426,695,2.426,696,2.426,697,2.097,698,1.88,699,1.719,700,1.88,701,2.426,702,2.426]],["title/injectables/MapService.html",[184,1.13,468,2.078]],["body/injectables/MapService.html",[2,0.271,3,0.11,7,0.089,17,0.324,18,0.017,19,0.295,20,0.089,21,0.004,24,1.177,25,0.875,29,1.119,33,0.875,41,0.678,48,0.65,67,0.007,68,0.007,85,0.885,86,1.143,116,0.201,117,0.839,122,1.101,124,1.448,125,0.867,126,1.448,127,1.291,128,2.414,130,1.027,137,1.72,151,1.672,156,0.81,163,0.598,164,0.527,167,1.585,170,1.297,184,1.237,190,2.274,200,0.505,203,1.33,218,2.091,251,1.937,262,1.297,268,1.825,269,1.217,295,2.536,329,1.843,330,2.274,338,2.702,397,2.215,400,3.278,417,3.716,456,3.54,459,2.934,468,1.825,472,3.958,498,3.265,500,2.621,509,5.066,510,2.395,556,1.646,566,2.621,616,3.403,620,4.829,634,4.331,680,1.391,681,1.504,698,4.331,699,3.403,700,4.542,703,1.835,704,2.923,705,4.803,706,3.381,707,3.381,708,4.803,709,4.803,710,4.803,711,3.381,712,6.083,713,3.381,714,3.381,715,3.381,716,3.381,717,2.123,718,4.803,719,3.381,720,4.212,721,3.381,722,2.123,723,3.381,724,6.676,725,5.587,726,2.123,727,2.923,728,4.803,729,4.803,730,3.381,731,4.803,732,4.803,733,2.123,734,2.123,735,2.123,736,3.381,737,2.123,738,3.381,739,4.212,740,3.381,741,3.381,742,2.123,743,2.123,744,3.381,745,2.123,746,3.381,747,2.123,748,4.803,749,5.86,750,3.381,751,2.123,752,3.381,753,2.123,754,3.381,755,4.803,756,2.123,757,4.212,758,2.123,759,4.803,760,2.123,761,4.212,762,2.923,763,2.123,764,1.835,765,3.381,766,1.835,767,2.123,768,2.123,769,2.123,770,2.123,771,2.123,772,4.212,773,2.123,774,3.381,775,3.723,776,3.381,777,4.212,778,2.123,779,2.123,780,2.123,781,2.123,782,2.123,783,2.123,784,2.123,785,2.123,786,2.123,787,2.123,788,2.123,789,3.381,790,3.381,791,3.381,792,3.381,793,3.381,794,3.381,795,2.123,796,2.123,797,2.123,798,2.123,799,2.123,800,2.123,801,2.123,802,2.123,803,2.123,804,2.123,805,2.123,806,2.123,807,2.123,808,2.123,809,2.123,810,1.835,811,2.123,812,2.123,813,2.123,814,2.123,815,2.123,816,2.123,817,2.123,818,2.123,819,2.123,820,2.123,821,2.123,822,2.123,823,4.212,824,4.212,825,3.381,826,3.381,827,2.123,828,2.123,829,2.123,830,2.923]],["title/modules/MaterialModule.html",[69,0.956,831,2.206]],["body/modules/MaterialModule.html",[2,0.267,3,0.267,7,0.217,17,0.445,18,0.016,19,0.718,20,0.267,21,0.011,67,0.013,68,0.013,69,1.283,89,2.926,91,4.005,92,3.661,137,1.517,605,2.961,831,4.238,832,4.005,833,5.504,834,5.504,835,5.504,836,6.367,837,5.504,838,5.504,839,5.504,840,5.504,841,5.504,842,5.504,843,5.504,844,5.504,845,5.504,846,6.901,847,5.167,848,6.367,849,5.167,850,5.167,851,5.167,852,5.167]],["title/interfaces/Member.html",[178,1.13,264,2.078]],["body/interfaces/Member.html",[2,0.155,3,0.27,7,0.126,17,0.186,18,0.017,20,0.269,21,0.012,25,1.142,67,0.009,68,0.009,116,0.284,122,0.46,125,0.876,127,1.179,137,0.882,138,2.82,146,1.47,151,1.046,156,0.848,164,1.095,167,1.193,178,1.534,186,1.001,203,1.807,214,1.721,215,1.621,218,2.2,220,3.381,221,1.721,222,2.527,223,2.994,224,2.694,225,3.834,226,1.835,227,3.747,228,1.835,229,2.527,230,1.835,231,2.527,232,2.527,233,2.527,234,2.694,235,3.468,236,1.835,237,1.835,238,1.835,251,2.527,252,1.835,253,1.721,254,2.527,255,1.835,256,1.835,257,1.835,258,1.835,259,1.721,260,1.835,261,1.533,262,1.835,263,2.694,264,3.46,265,3.518,266,3.518,267,1.835,268,1.621,269,1.721,270,1.835,271,1.835,272,1.721,273,1.721,274,2.994,275,1.621,276,1.835,277,1.835,278,1.835,279,1.835,280,1.835,281,1.835,282,3.31,283,1.835,284,1.721,285,1.835,286,1.533,287,1.835,288,1.835,289,2.694,290,1.835,291,1.835,292,1.929,293,1.721,294,1.453,295,1.819,296,1.835,297,1.835,298,1.835,299,1.835,300,1.835,301,1.835,302,1.835,303,1.721,304,1.835,305,1.835,306,1.835,307,2.694,308,1.835,309,1.835,310,1.835,311,1.835,312,1.835,313,1.835,314,1.835,315,1.835,316,1.835,317,1.835,318,1.835,319,1.835,320,1.835,321,1.835,322,1.835,323,1.835,324,1.835,325,1.453,326,1.835,327,1.721,328,1.835,329,1.929,330,1.621,331,1.721,332,1.721,333,1.835,334,1.835,335,1.621,336,1.835,337,1.835,338,2.133,339,1.835]],["title/components/MessageArchivedComponent.html",[0,0.535,49,1.179]],["body/components/MessageArchivedComponent.html",[0,0.966,1,1.294,2,0.289,3,0.218,4,2.037,5,1.538,6,1.538,7,0.177,9,1.538,10,2.863,11,1.962,17,0.346,18,0.016,19,0.587,20,0.177,21,0.009,23,1.049,24,1.95,25,1.45,26,2.037,27,2.432,28,1.538,29,1.155,30,1.538,31,1.294,32,1.736,33,1.094,34,1.538,35,1.294,36,1.472,37,1.538,38,1.294,39,1.538,40,1.294,41,1.35,42,2.037,43,1.241,44,1.538,45,1.294,46,1.538,47,1.294,48,1.923,49,2.047,50,2.284,51,1.538,52,1.294,53,1.472,54,2.037,55,1.294,56,1.409,57,1.294,58,1.538,59,1.294,60,1.538,61,1.241,62,1.538,63,1.294,64,1.538,65,1.294,66,1.538,67,0.011,68,0.011,116,0.4,122,0.857,124,1.006,125,0.74,126,1.006,146,2.468,156,1.076,184,1.644,200,1.006,218,1.767,466,2.77,601,3.277,605,2.422,853,5.428,854,3.654,855,5.6,856,4.227,857,4.227,858,4.227,859,4.227,860,4.227]],["title/modules/NetworkModule.html",[69,0.956,82,2.523]],["body/modules/NetworkModule.html",[2,0.273,3,0.273,7,0.222,17,0.46,18,0.016,19,0.735,20,0.271,21,0.011,23,1.313,67,0.013,68,0.013,69,1.604,71,2.431,72,3.296,73,2.699,74,2.775,82,5.073,85,2.693,86,1.259,87,2.431,89,2.968,350,4.089,861,4.573,862,4.573,863,4.573,864,4.964,865,5.289,866,5.289,867,5.289]],["title/injectables/NetworkService.html",[184,1.13,350,2.078]],["body/injectables/NetworkService.html",[2,0.09,3,0.09,7,0.073,11,0.51,17,0.333,18,0.017,19,0.241,20,0.073,21,0.01,25,0.743,29,0.936,56,0.957,67,0.008,68,0.006,74,1.143,86,1.016,87,0.798,116,0.164,117,1.059,119,2.444,122,1.039,124,1.212,125,0.796,126,1.212,127,1.338,128,3.347,130,0.84,133,1.501,137,1.992,143,1.465,146,1.796,151,1.278,156,0.552,164,1.059,167,1.162,175,0.937,178,0.843,184,1.078,200,0.413,203,1.341,215,1.55,216,1.882,218,2.073,220,1.873,222,2.444,225,3.332,231,0.995,233,1.645,235,2.411,253,1.645,254,1.645,261,1.873,262,1.666,274,0.995,292,3.096,293,1.645,294,2.462,295,2.386,325,2.606,327,0.995,329,2.633,335,0.937,338,1.389,350,1.55,360,1.501,361,2.226,371,1.346,392,0.632,396,2.482,397,2.406,398,1.346,400,2.177,402,1.346,417,2.243,456,2.303,503,0.995,510,1.23,556,1.346,571,3.606,573,1.645,591,3.442,613,3.174,615,2.226,616,2.035,629,2.035,643,1.501,651,1.501,681,1.23,697,3.688,698,2.226,699,3.817,700,3.945,704,2.482,762,1.501,868,1.501,869,2.482,870,2.872,871,4.266,872,2.872,873,4.266,874,4.266,875,4.266,876,4.266,877,4.266,878,4.266,879,2.872,880,2.872,881,1.737,882,4.266,883,2.872,884,2.872,885,2.872,886,1.737,887,7.077,888,5.633,889,4.266,890,1.737,891,2.872,892,1.737,893,3.688,894,4.266,895,4.266,896,2.872,897,2.226,898,2.872,899,1.737,900,1.737,901,1.737,902,1.737,903,1.737,904,2.872,905,2.872,906,1.737,907,4.87,908,1.737,909,2.872,910,2.872,911,1.737,912,2.872,913,1.737,914,2.872,915,1.737,916,1.737,917,1.737,918,2.872,919,1.501,920,1.737,921,1.737,922,2.482,923,1.346,924,3.672,925,2.872,926,3.672,927,1.501,928,1.737,929,3.672,930,1.737,931,1.737,932,1.737,933,1.737,934,1.737,935,2.872,936,1.737,937,1.737,938,1.737,939,1.737,940,1.737,941,1.737,942,5.09,943,1.737,944,4.657,945,1.737,946,1.737,947,5.387,948,2.872,949,2.872,950,3.672,951,2.872,952,2.872,953,1.737,954,1.501,955,1.737,956,2.872,957,1.737,958,1.737,959,1.737,960,1.737,961,1.737,962,1.737,963,1.737,964,2.872,965,2.872,966,2.872,967,1.737,968,1.737,969,1.737,970,1.737,971,1.737,972,1.737,973,1.737,974,1.737,975,1.737,976,3.672,977,1.737,978,1.737,979,1.737,980,1.737,981,1.737,982,1.737,983,1.737,984,1.737,985,1.737,986,1.737,987,1.737,988,1.737,989,1.737,990,1.737,991,1.737,992,1.737,993,1.737,994,1.737,995,1.737,996,2.226,997,1.737,998,1.737,999,1.737,1000,1.737,1001,1.737,1002,1.737,1003,1.737,1004,1.737,1005,1.501,1006,1.737,1007,2.482,1008,1.737,1009,1.737,1010,1.737,1011,1.737,1012,1.737,1013,1.737]],["title/classes/Node.html",[21,0.008,225,1.965]],["body/classes/Node.html",[2,0.141,3,0.255,7,0.114,17,0.168,18,0.017,20,0.259,21,0.012,25,1.062,29,0.501,67,0.008,68,0.008,116,0.258,122,1.035,124,0.649,125,0.873,126,0.649,127,1.138,137,0.8,138,2.662,146,1.368,151,0.949,156,0.788,163,1.388,164,1.461,167,1.126,178,1.204,186,0.909,200,0.649,203,1.825,214,1.561,215,1.471,218,2.223,220,3.568,221,1.561,222,2.35,223,2.826,224,2.506,225,3.82,226,1.665,227,3.596,228,1.665,229,2.35,230,1.665,231,2.35,232,2.35,233,2.35,234,2.506,235,3.656,236,1.665,237,1.665,238,1.665,251,2.35,252,1.665,253,1.561,254,2.35,255,1.665,256,1.665,257,1.665,258,1.665,259,1.561,260,1.665,261,1.39,262,1.482,263,1.665,264,2.962,265,1.665,266,1.665,267,2.506,268,2.214,269,2.35,270,2.506,271,2.506,272,2.35,273,2.35,274,3.678,275,2.962,276,3.353,277,3.353,278,3.353,279,2.506,280,1.665,281,1.665,282,3.177,283,1.665,284,1.561,285,1.665,286,1.39,287,1.665,288,1.665,289,2.506,290,1.665,291,1.665,292,1.794,293,1.561,294,1.318,295,1.717,296,1.665,297,1.665,298,1.665,299,1.665,300,1.665,301,1.665,302,1.665,303,1.561,304,1.665,305,1.665,306,1.665,307,2.506,308,1.665,309,1.665,310,1.665,311,1.665,312,1.665,313,1.665,314,1.665,315,1.665,316,1.665,317,1.665,318,1.665,319,1.665,320,1.665,321,1.665,322,1.665,323,1.665,324,1.665,325,1.318,326,1.665,327,1.561,328,1.665,329,1.794,330,1.471,331,1.561,332,1.561,333,1.665,334,1.665,335,1.471,336,1.665,337,1.665,338,1.984,339,1.665,1014,4.102,1015,2.725,1016,2.725,1017,2.725,1018,2.725,1019,2.725]],["title/classes/Relation.html",[21,0.008,282,2.078]],["body/classes/Relation.html",[2,0.148,3,0.262,7,0.12,17,0.177,18,0.017,20,0.264,21,0.012,25,1.314,29,0.526,67,0.009,68,0.009,116,0.27,122,0.92,124,0.68,125,0.794,126,0.68,127,1.158,137,0.839,138,2.739,146,1.874,151,0.995,156,0.817,163,0.804,164,1.26,167,1.158,178,1.248,186,0.953,200,0.68,203,1.81,214,1.637,215,1.542,218,2.214,220,3.327,221,1.637,222,2.435,223,3.22,224,3.1,225,3.805,226,1.746,227,3.67,228,1.746,229,2.435,230,1.746,231,2.435,232,2.435,233,2.435,234,2.597,235,3.691,236,1.746,237,1.746,238,1.746,251,2.435,252,1.746,253,1.637,254,2.435,255,1.746,256,1.746,257,1.746,258,1.746,259,1.637,260,1.746,261,1.458,262,1.517,263,1.746,264,3.695,265,1.746,266,1.746,267,1.746,268,1.542,269,1.637,270,1.746,271,1.746,272,1.637,273,1.637,274,2.908,275,1.542,276,1.746,277,1.746,278,1.746,279,1.746,280,1.746,281,1.746,282,3.519,283,2.597,284,2.435,285,2.597,286,2.169,287,2.597,288,2.597,289,3.847,290,2.597,291,1.746,292,1.859,293,1.637,294,1.382,295,1.767,296,1.746,297,1.746,298,1.746,299,1.746,300,1.746,301,1.746,302,1.746,303,1.637,304,1.746,305,1.746,306,1.746,307,2.597,308,1.746,309,1.746,310,1.746,311,1.746,312,1.746,313,1.746,314,1.746,315,1.746,316,1.746,317,1.746,318,1.746,319,1.746,320,1.746,321,1.746,322,1.746,323,1.746,324,1.746,325,1.382,326,1.746,327,1.637,328,1.746,329,1.859,330,1.542,331,1.637,332,1.637,333,1.746,334,1.746,335,1.542,336,1.746,337,1.746,338,2.056,339,1.746,1020,4.25,1021,2.857,1022,2.857]],["title/classes/Reset.html",[21,0.008,86,0.917]],["body/classes/Reset.html",[2,0.206,3,0.206,7,0.167,17,0.332,18,0.017,20,0.301,21,0.014,29,0.732,32,1.709,33,1.03,67,0.011,68,0.011,86,1.622,96,1.513,114,1.977,116,0.576,122,0.933,124,0.947,125,1.005,126,0.947,156,1.033,163,1.12,164,0.988,171,2.907,186,1.326,200,0.947,203,1.45,218,2.083,262,1.971,392,1.447,428,2.946,429,2.147,430,4.521,431,4.705,432,2.607,436,2.28,437,2.542,438,2.147,439,2.607,440,2.147,441,3.108,442,3.108,443,3.108,444,1.74,445,2.431,446,2.28,447,4.163,448,2.28,449,2.28,450,2.28,451,3.081,452,2.28,1023,5.377,1024,3.978]],["title/components/SearchForTheAreaComponent.html",[0,0.535,52,1.179]],["body/components/SearchForTheAreaComponent.html",[0,0.857,1,0.745,2,0.194,3,0.126,4,0.885,5,0.885,6,0.885,7,0.102,9,0.885,10,2.66,11,1.52,13,1.569,15,1.569,17,0.346,18,0.017,19,0.338,20,0.102,21,0.005,23,0.604,24,1.31,25,0.974,26,1.369,27,1.883,28,0.885,29,0.952,30,0.885,31,0.745,32,1.62,33,1.191,34,0.885,35,0.745,36,0.847,37,0.885,38,0.745,39,0.885,40,0.745,41,0.777,42,1.369,43,0.714,44,0.885,45,0.745,46,0.885,47,0.745,48,1.409,49,0.745,50,0.885,51,0.885,52,1.585,53,2.369,54,1.369,55,0.745,56,0.811,57,0.745,58,0.885,59,0.745,60,0.885,61,0.714,62,0.885,63,0.745,64,0.885,65,0.745,66,0.885,67,0.011,68,0.008,114,1.059,116,0.49,117,0.934,122,1.094,124,0.896,125,0.74,126,0.896,127,1.251,146,0.811,149,3.748,153,3.878,154,1.831,156,0.723,157,3.207,158,2.636,159,2.456,160,4.043,161,4.043,162,4.043,163,0.685,164,0.934,167,1.658,170,2.811,171,1.498,172,2.466,175,1.314,198,3.207,199,3.391,200,0.896,203,0.896,205,1.242,262,1.397,275,2.031,295,1.31,343,2.666,349,2.379,364,1.724,365,1.724,366,1.724,367,1.724,368,1.724,369,1.724,372,1.724,376,1.724,377,1.724,378,1.724,379,1.724,380,1.724,383,3.253,385,3.253,392,2.153,393,3.668,394,1.724,395,3.259,400,1.92,401,3.566,402,1.886,408,2.104,422,1.724,437,1.31,444,1.646,503,3.748,573,1.394,609,2.966,615,1.886,616,1.724,619,2.104,622,4.475,630,3.566,634,4.587,646,2.104,648,2.104,655,2.104,996,1.886,1025,5.777,1026,5.181,1027,1.886,1028,3.253,1029,3.253,1030,2.434,1031,4.475,1032,3.763,1033,2.434,1034,2.434,1035,2.434,1036,2.434,1037,3.763,1038,2.434,1039,2.434,1040,2.434,1041,2.104,1042,2.104,1043,2.434,1044,3.652,1045,2.434,1046,2.434,1047,3.763,1048,2.434,1049,3.253,1050,2.434,1051,3.763,1052,2.434,1053,2.434,1054,2.434,1055,2.434,1056,2.434,1057,2.434,1058,2.434,1059,2.434,1060,2.434,1061,2.434,1062,2.434,1063,2.434,1064,3.763,1065,2.434,1066,2.104,1067,2.434,1068,2.434,1069,2.434,1070,2.434,1071,2.434,1072,2.434,1073,2.104,1074,2.466,1075,3.253,1076,3.253]],["title/components/SelectionOfTheAreaComponent.html",[0,0.535,55,1.179]],["body/components/SelectionOfTheAreaComponent.html",[0,0.875,1,0.789,2,0.203,3,0.133,4,0.937,5,0.937,6,0.937,7,0.108,9,0.937,10,2.685,11,1.566,13,1.64,15,1.64,17,0.411,18,0.017,19,0.358,20,0.108,21,0.005,23,0.64,24,1.369,25,1.018,26,1.43,27,1.94,28,0.937,29,0.877,30,0.937,31,0.789,32,1.666,33,1.234,34,0.937,35,0.789,36,0.897,37,0.937,38,0.789,39,0.937,40,0.789,41,0.823,42,1.43,43,0.756,44,0.937,45,0.789,46,0.937,47,0.789,48,1.633,49,0.789,50,0.937,51,0.937,52,0.789,53,0.897,54,1.43,55,1.633,56,2.263,57,0.789,58,0.937,59,0.789,60,0.937,61,0.756,62,0.937,63,0.789,64,0.937,65,0.789,66,0.937,67,0.008,68,0.008,96,0.98,114,1.107,116,0.505,117,0.976,122,1.106,124,0.613,125,0.705,126,0.613,127,1.303,146,0.859,149,3.812,153,3.967,154,1.898,156,0.756,157,3.291,158,2.732,159,2.506,160,4.126,161,4.126,162,4.126,163,0.725,164,0.976,167,1.617,170,2.913,171,1.565,172,2.576,175,1.391,198,3.291,199,3.469,200,0.936,203,0.936,205,1.315,223,2.253,294,2.58,295,1.66,343,2.786,347,1.826,348,3.699,349,2.451,350,2.879,364,1.826,365,1.826,366,1.826,367,1.826,368,1.826,369,1.826,372,1.826,373,1.998,374,1.574,375,1.477,376,1.826,377,1.826,378,1.826,379,1.826,380,1.826,400,2.006,417,2.402,422,1.826,437,1.369,503,1.477,591,3.966,679,2.228,680,1.689,681,1.826,688,2.228,907,5.233,1027,1.998,1028,3.399,1029,3.399,1042,2.228,1074,3.967,1075,3.399,1076,3.399,1077,5.867,1078,5.261,1079,2.577,1080,2.577,1081,2.577,1082,2.577,1083,2.577,1084,2.577,1085,2.577,1086,2.228,1087,5.334,1088,2.577,1089,2.577,1090,5.334,1091,5.334,1092,2.577,1093,2.577,1094,3.932,1095,2.577,1096,2.577,1097,2.577,1098,2.577,1099,2.577,1100,2.577,1101,2.577,1102,2.577,1103,2.577,1104,2.577,1105,3.932,1106,5.334,1107,3.932,1108,3.932,1109,3.399,1110,3.399,1111,3.932,1112,3.399]],["title/modules/SharedModule.html",[69,0.956,83,2.078]],["body/modules/SharedModule.html",[2,0.279,3,0.207,7,0.168,17,0.473,18,0.017,19,0.558,20,0.274,21,0.008,23,0.997,38,2.332,45,2.359,49,2.359,67,0.011,68,0.011,69,1.343,71,1.845,72,3.122,73,2.048,74,2.153,83,4.249,85,2.256,86,0.956,87,1.845,89,2.812,127,0.738,129,2.167,135,3.833,137,1.178,181,2.452,187,3.305,205,2.048,218,1.13,393,2.844,831,4.331,919,3.47,1113,3.47,1114,3.47,1115,3.47,1116,3.47,1117,3.112,1118,5.41,1119,5.41,1120,4.676,1121,3.47,1122,4.676,1123,4.676,1124,4.676,1125,4.676,1126,3.47,1127,3.47,1128,4.014,1129,4.014,1130,3.47,1131,3.47,1132,3.112,1133,4.014,1134,4.014]],["title/components/SimulationComponent.html",[0,0.535,57,1.179]],["body/components/SimulationComponent.html",[0,0.96,1,1.27,2,0.286,3,0.214,4,1.509,5,1.509,6,1.509,7,0.174,9,1.509,10,2.858,11,1.948,13,2.306,15,2.306,17,0.342,18,0.016,19,0.576,20,0.174,21,0.008,23,1.03,24,1.925,25,1.432,26,2.012,27,2.414,28,1.509,29,1.017,30,1.509,31,1.27,32,1.777,33,1.074,34,1.509,35,1.27,36,1.444,37,1.509,38,1.27,39,1.509,40,1.27,41,1.325,42,2.012,43,1.218,44,1.509,45,1.27,46,1.509,47,1.27,48,1.905,49,1.27,50,1.509,51,1.509,52,1.27,53,1.444,54,2.012,55,1.27,56,1.383,57,2.032,58,1.509,59,1.27,60,1.509,61,1.218,62,1.509,63,1.27,64,1.509,65,1.27,66,1.509,67,0.011,68,0.011,114,1.557,116,0.628,117,1.373,122,1.016,125,0.731,127,0.763,143,2.822,154,2.476,159,2.641,167,1.262,198,3.96,199,4.073,200,1.481,203,1.317,205,2.117,1135,3.586,1136,5.53,1137,5.53,1138,5.53,1139,4.149,1140,4.149]],["title/modules/SimulationModule.html",[69,0.956,84,2.523]],["body/modules/SimulationModule.html",[2,0.283,3,0.283,7,0.229,17,0.437,18,0.016,19,0.76,20,0.276,21,0.011,23,1.358,67,0.014,68,0.014,69,1.637,71,2.514,72,3.364,73,2.792,74,2.817,84,5.003,85,2.749,86,1.302,87,2.514,89,3.03,1141,4.73,1142,4.73,1143,4.665,1144,5.471,1145,5.471]],["title/injectables/SimulationService.html",[184,1.13,1143,2.352]],["body/injectables/SimulationService.html",[2,0.284,3,0.284,7,0.23,17,0.34,18,0.016,19,0.764,20,0.23,21,0.011,67,0.014,68,0.014,86,1.751,116,0.52,117,1.642,122,0.842,127,1.011,151,1.914,167,1.509,184,2.081,216,4.332,218,1.996,232,3.788,335,3.569,493,5.716,1143,4.039,1146,4.753,1147,6.612,1148,5.498]],["title/components/StatisticsComponent.html",[0,0.535,59,1.179]],["body/components/StatisticsComponent.html",[0,0.96,1,1.27,2,0.286,3,0.214,4,1.509,5,1.509,6,1.509,7,0.174,9,1.509,10,2.858,11,1.948,13,2.306,15,2.306,17,0.342,18,0.016,19,0.576,20,0.174,21,0.008,23,1.03,24,1.925,25,1.432,26,2.012,27,2.414,28,1.509,29,1.017,30,1.509,31,1.27,32,1.777,33,1.074,34,1.509,35,1.27,36,1.444,37,1.509,38,1.27,39,1.509,40,1.27,41,1.325,42,2.012,43,1.218,44,1.509,45,1.27,46,1.509,47,1.27,48,1.905,49,1.27,50,1.509,51,1.509,52,1.27,53,1.444,54,2.012,55,1.27,56,1.383,57,1.27,58,1.509,59,2.032,60,1.509,61,1.218,62,1.509,63,1.27,64,1.509,65,1.27,66,1.509,67,0.011,68,0.011,114,1.557,116,0.628,117,1.373,122,1.016,125,0.731,127,0.763,154,2.476,159,2.641,167,1.262,198,3.96,199,4.073,200,1.481,203,1.317,205,2.117,1149,3.586,1150,4.781,1151,5.53,1152,5.53,1153,5.53,1154,4.149,1155,4.149]],["title/interfaces/Step.html",[178,1.13,437,1.341]],["body/interfaces/Step.html",[2,0.289,3,0.289,7,0.235,18,0.016,20,0.28,67,0.014,68,0.014,116,0.529,125,0.739,137,1.642,146,2.559,151,1.948,156,1.284,175,3.606,178,1.961,437,2.672,484,3.964,897,5.538,1156,4.337]],["title/classes/StepChanged.html",[21,0.008,441,1.965]],["body/classes/StepChanged.html",[2,0.203,3,0.203,7,0.164,17,0.329,18,0.017,20,0.3,21,0.014,29,0.721,32,1.703,33,1.015,67,0.011,68,0.011,86,1.544,96,1.492,114,1.968,116,0.572,122,0.926,124,0.934,125,1.024,126,0.934,156,1.024,163,1.104,164,0.974,171,2.897,186,1.308,200,0.934,203,1.439,218,2.077,262,1.965,392,1.427,428,2.925,429,2.117,430,4.508,431,4.687,432,2.57,433,5.028,436,2.247,437,2.534,438,2.117,439,2.57,440,2.117,441,3.309,442,3.085,443,3.085,444,1.716,445,2.396,446,3.051,447,4.143,448,2.247,449,2.247,450,2.247,451,2.247,452,2.247,1157,5.326,1158,3.922]],["title/classes/StepError.html",[21,0.008,442,1.965]],["body/classes/StepError.html",[2,0.204,3,0.204,7,0.166,17,0.331,18,0.017,20,0.3,21,0.014,29,0.726,32,1.706,33,1.023,67,0.011,68,0.011,86,1.548,96,1.503,114,1.973,116,0.574,122,0.929,124,0.94,125,1.004,126,0.94,156,1.029,163,1.112,164,0.981,171,2.902,186,1.317,200,0.94,203,1.445,218,2.08,262,2.05,392,1.437,428,2.935,429,2.132,430,4.514,431,4.696,432,2.588,436,2.263,437,2.538,438,2.132,439,2.588,440,2.132,441,3.096,442,3.319,443,3.096,444,1.728,445,2.413,446,2.263,447,4.153,448,3.066,449,2.263,450,2.263,451,2.263,452,2.263,1159,5.351,1160,3.95]],["title/classes/StepPending.html",[21,0.008,443,1.965]],["body/classes/StepPending.html",[2,0.204,3,0.204,7,0.166,17,0.331,18,0.017,20,0.3,21,0.014,29,0.726,32,1.706,33,1.023,67,0.011,68,0.011,86,1.548,96,1.503,114,1.973,116,0.574,122,0.929,124,0.94,125,1.004,126,0.94,156,1.029,163,1.112,164,0.981,171,2.902,186,2.266,200,0.94,203,1.445,218,2.08,262,1.968,392,1.437,428,2.935,429,2.132,430,4.514,431,4.696,432,2.588,436,2.263,437,2.538,438,2.132,439,2.588,440,2.132,441,3.096,442,3.096,443,3.319,444,1.728,445,2.413,446,2.263,447,4.153,448,2.263,449,3.066,450,2.263,451,2.263,452,2.263,1161,5.351,1162,3.95]],["title/interfaces/Tag.html",[178,1.13,235,1.965]],["body/interfaces/Tag.html",[2,0.156,3,0.271,7,0.126,17,0.186,18,0.017,20,0.269,21,0.012,25,1.356,67,0.009,68,0.009,116,0.285,122,0.462,125,0.692,127,1.181,137,0.885,138,2.827,146,1.475,151,1.05,156,0.85,164,1.525,167,1.195,178,1.537,186,1.006,203,1.79,214,1.728,215,1.628,218,2.201,220,3.385,221,1.728,222,2.534,223,3.001,224,2.702,225,3.836,226,1.842,227,3.753,228,1.842,229,2.534,230,1.842,231,2.534,232,2.534,233,2.534,234,2.702,235,3.601,236,1.842,237,1.842,238,1.842,251,2.534,252,1.842,253,1.728,254,2.534,255,1.842,256,1.842,257,2.702,258,2.702,259,2.534,260,2.702,261,2.943,262,1.837,263,1.842,264,3.114,265,1.842,266,1.842,267,1.842,268,1.628,269,1.728,270,1.842,271,1.842,272,1.728,273,1.728,274,3.001,275,1.628,276,1.842,277,1.842,278,1.842,279,1.842,280,1.842,281,1.842,282,3.315,283,1.842,284,1.728,285,1.842,286,1.539,287,1.842,288,1.842,289,2.702,290,1.842,291,1.842,292,1.935,293,1.728,294,1.459,295,1.823,296,1.842,297,1.842,298,1.842,299,1.842,300,1.842,301,1.842,302,1.842,303,1.728,304,1.842,305,1.842,306,1.842,307,2.702,308,1.842,309,1.842,310,1.842,311,1.842,312,1.842,313,1.842,314,1.842,315,1.842,316,1.842,317,1.842,318,1.842,319,1.842,320,1.842,321,1.842,322,1.842,323,1.842,324,1.842,325,1.459,326,1.842,327,1.728,328,1.842,329,1.935,330,1.628,331,1.728,332,1.728,333,1.842,334,1.842,335,1.628,336,1.842,337,1.842,338,2.139,339,1.842]],["title/components/UiComponent.html",[0,0.535,61,1.13]],["body/components/UiComponent.html",[0,0.81,1,0.816,2,0.251,3,0.138,4,0.97,5,0.97,6,0.97,7,0.112,9,0.97,10,2.7,11,1.801,13,1.683,15,1.683,17,0.43,18,0.017,19,0.37,20,0.112,21,0.005,23,0.662,24,1.405,25,1.045,26,1.468,27,1.975,28,0.97,29,1.072,30,0.97,31,0.816,32,1.63,33,0.69,34,0.97,35,0.816,36,0.928,37,0.97,38,0.816,39,0.97,40,0.816,41,0.852,42,1.468,43,0.783,44,0.97,45,1.235,46,0.97,47,0.816,48,1.785,49,1.235,50,0.97,51,0.97,52,0.816,53,0.928,54,1.468,55,0.816,56,1.345,57,0.816,58,0.97,59,0.816,60,0.97,61,1.593,62,0.97,63,0.816,64,0.97,65,0.816,66,0.97,67,0.008,68,0.008,86,1.517,96,1.014,114,1.136,116,0.252,117,1.002,122,1.048,124,1.159,125,0.717,126,1.159,127,1.235,128,3.341,129,1.439,130,1.29,137,0.783,146,1.81,147,2.312,154,1.938,155,3.449,156,0.776,157,3.923,158,3.11,159,2.161,163,1.136,164,1.002,167,1.563,176,2.067,177,2.067,179,3.19,181,1.629,183,3.846,186,1.944,190,1.439,200,0.961,229,1.528,262,1.72,295,2.03,348,3.892,349,2.495,371,2.067,374,1.629,375,1.528,392,1.771,393,2.859,409,3.488,444,2.683,595,4.693,597,2.305,605,1.528,658,3.128,659,3.128,675,2.067,676,2.067,1044,2.312,1130,2.305,1131,2.305,1132,2.067,1163,2.305,1164,4.035,1165,4.035,1166,5.303,1167,4.035,1168,4.035,1169,2.666,1170,6.134,1171,5.428,1172,5.428,1173,5.428,1174,4.035,1175,2.666,1176,2.666,1177,2.666,1178,2.666,1179,4.035,1180,2.666,1181,4.035,1182,2.666,1183,2.666,1184,2.666,1185,2.666,1186,2.305,1187,2.666,1188,2.666,1189,2.666,1190,2.666,1191,2.666,1192,2.666,1193,4.035,1194,4.035,1195,4.035,1196,2.666,1197,2.666,1198,2.666,1199,4.868,1200,2.666,1201,2.666,1202,2.666,1203,2.666,1204,4.035,1205,2.666,1206,2.666,1207,2.666,1208,2.666,1209,2.666]],["title/modules/UiModule.html",[69,0.956,1210,2.728]],["body/modules/UiModule.html",[2,0.181,3,0.181,7,0.147,17,0.482,18,0.017,19,0.488,20,0.207,21,0.007,23,0.871,31,2.069,35,2.069,40,2.069,47,2.069,48,1.074,52,2.069,55,2.069,57,2.069,59,2.069,61,1.983,63,2.069,65,2.069,67,0.01,68,0.01,69,1.224,71,1.613,72,2.909,73,1.791,74,2.27,83,3.647,85,2.056,86,0.835,87,1.613,89,2.266,95,3.034,96,1.335,97,3.034,98,2.72,99,3.034,100,3.034,193,2.72,341,2.72,349,3.105,375,2.011,468,3.647,676,2.72,1026,2.72,1078,2.72,1210,5.648,1211,3.034,1212,3.034,1213,3.034,1214,3.034,1215,4.428,1216,3.509,1217,4.931,1218,4.931,1219,3.034,1220,3.034,1221,3.034,1222,3.034,1223,3.509,1224,3.509,1225,4.931,1226,3.509,1227,3.509,1228,3.509,1229,3.509,1230,3.509,1231,3.509,1232,3.509,1233,3.509,1234,3.509,1235,3.509,1236,3.509,1237,3.034,1238,3.013,1239,3.509,1240,3.509]],["title/modules/UiRoutingModule.html",[69,0.956,1215,2.523]],["body/modules/UiRoutingModule.html",[0,0.751,2,0.279,3,0.279,7,0.227,17,0.463,18,0.017,19,0.751,20,0.274,21,0.011,61,1.921,67,0.013,68,0.013,69,1.342,89,3.007,119,4.033,129,2.917,134,4.672,135,4.636,137,1.587,138,2.917,141,4.672,142,4.672,181,3.302,183,3.829,187,3.998,1132,4.19,1186,4.672,1215,4.288,1222,4.672,1241,4.19,1242,5.405]],["title/interfaces/UiState.html",[178,1.13,1243,2.728]],["body/interfaces/UiState.html",[2,0.23,3,0.23,7,0.186,17,0.398,18,0.017,20,0.326,32,1.757,67,0.012,68,0.012,96,1.691,116,0.421,125,0.588,137,2.166,151,1.548,156,1.113,178,2.001,382,2.716,392,2.106,437,2.374,444,2.532,1044,4.287,1074,2.913,1238,2.716,1243,4.56,1244,3.447,1245,5.004,1246,5.004,1247,6.436,1248,5.004,1249,4.446,1250,6.265,1251,6.38,1252,4.446,1253,4.446,1254,3.844,1255,4.487,1256,3.844,1257,4.319,1258,3.844,1259,3.844,1260,3.844,1261,3.844,1262,3.844]],["title/components/WeatherComponent.html",[0,0.535,63,1.179]],["body/components/WeatherComponent.html",[0,0.975,1,1.33,2,0.294,3,0.224,4,1.58,5,1.58,6,1.58,7,0.182,9,1.58,10,2.871,11,1.983,13,2.377,15,2.377,17,0.268,18,0.016,19,0.603,20,0.182,21,0.009,23,1.078,24,1.984,25,1.476,26,2.073,27,2.457,28,1.58,29,1.048,30,1.58,31,1.33,32,1.747,33,1.124,34,1.58,35,1.33,36,1.512,37,1.58,38,1.33,39,1.58,40,1.33,41,1.387,42,2.073,43,1.275,44,1.58,45,1.33,46,1.58,47,1.33,48,2.148,49,1.33,50,1.58,51,1.58,52,1.33,53,1.512,54,2.073,55,1.33,56,1.448,57,1.33,58,1.58,59,1.33,60,1.58,61,1.275,62,1.58,63,2.068,64,1.58,65,1.33,66,1.58,67,0.012,68,0.012,114,1.604,116,0.411,117,1.415,122,0.873,127,0.799,154,2.533,159,2.689,167,1.301,200,1.515,1263,3.754,1264,5.237,1265,5.7,1266,5.7,1267,4.342,1268,4.342]],["title/modules/WeatherModule.html",[69,0.956,864,2.523]],["body/modules/WeatherModule.html",[2,0.283,3,0.283,7,0.229,17,0.437,18,0.016,19,0.76,20,0.276,21,0.011,23,1.358,67,0.014,68,0.014,69,1.637,71,2.514,72,3.364,73,2.792,74,2.817,85,2.749,86,1.302,87,2.514,89,3.03,864,5.003,1269,4.73,1270,4.73,1271,4.665,1272,5.471,1273,5.471]],["title/injectables/WeatherService.html",[184,1.13,1271,2.352]],["body/injectables/WeatherService.html",[2,0.28,3,0.28,7,0.227,17,0.335,18,0.016,19,0.753,20,0.227,21,0.011,67,0.013,68,0.013,74,2.609,86,1.743,116,0.513,117,1.627,122,0.83,127,0.996,151,1.886,164,1.627,167,1.496,184,2.068,195,4.643,218,1.983,292,2.867,332,3.755,1264,5.08,1271,4.004,1274,4.684,1275,6.554,1276,6.554,1277,5.418]],["title/components/WizardComponent.html",[0,0.535,65,1.179]],["body/components/WizardComponent.html",[0,0.826,1,0.854,2,0.216,3,0.144,4,1.015,5,1.015,6,1.015,7,0.117,9,1.015,10,2.718,11,1.63,13,1.741,15,1.741,17,0.411,18,0.017,19,0.388,20,0.117,21,0.006,23,0.693,24,1.453,25,1.081,26,1.519,27,2.02,28,1.015,29,1.021,30,1.015,31,0.854,32,1.695,33,1.295,34,1.015,35,0.854,36,1.742,37,1.015,38,0.854,39,1.015,40,0.854,41,0.891,42,1.519,43,0.819,44,1.015,45,0.854,46,1.015,47,0.854,48,1.821,49,0.854,50,1.015,51,1.015,52,0.854,53,1.742,54,1.519,55,0.854,56,1.852,57,0.854,58,1.015,59,0.854,60,1.015,61,0.819,62,1.015,63,0.854,64,1.015,65,1.7,66,1.015,67,0.009,68,0.009,96,1.061,114,1.175,116,0.526,117,1.036,122,1.041,124,0.994,125,0.786,126,0.994,127,1.094,130,1.349,137,1.225,143,2.13,146,1.392,151,0.971,154,1.991,155,3.544,156,0.802,157,3.968,158,3.182,159,2.211,163,0.785,164,0.693,167,1.518,175,1.506,176,2.162,177,2.162,195,2.958,199,3.182,200,0.994,203,0.994,205,1.423,217,2.958,295,1.742,329,2.188,338,1.349,348,3.952,349,2.552,372,1.976,374,1.704,375,1.598,397,1.828,400,2.834,437,1.933,450,2.866,459,1.704,503,2.392,591,1.704,601,2.162,605,1.598,630,2.162,658,3.236,659,3.236,675,2.162,699,1.976,775,4.305,897,2.162,1074,2.736,1086,2.411,1112,2.411,1150,3.609,1166,4.801,1278,2.411,1279,4.175,1280,4.175,1281,5.394,1282,5.553,1283,4.175,1284,2.79,1285,6.24,1286,4.175,1287,2.79,1288,2.79,1289,2.79,1290,4.175,1291,5.553,1292,2.79,1293,4.175,1294,4.801,1295,4.175,1296,2.79,1297,2.79,1298,5.003,1299,2.79,1300,2.79,1301,5.003,1302,2.79,1303,2.79,1304,2.79,1305,2.79,1306,6.469,1307,2.79,1308,4.175,1309,2.79,1310,2.79,1311,2.79,1312,2.79,1313,2.79,1314,2.79,1315,2.79,1316,2.79]],["title/injectables/WizardService.html",[184,1.13,349,1.77]],["body/injectables/WizardService.html",[2,0.158,3,0.158,7,0.128,11,0.896,17,0.448,18,0.017,19,0.424,20,0.128,21,0.006,29,1.067,48,1.366,56,1.018,67,0.009,68,0.009,86,1.381,96,1.161,116,0.679,117,1.108,122,1.066,124,1.381,125,0.959,126,1.381,127,1.186,143,2.691,146,2.15,147,1.749,156,0.858,167,1.656,184,1.548,190,1.648,200,1.062,203,1.658,210,3.545,217,3.737,218,2.178,262,1.424,294,2.551,295,2.318,347,2.163,348,3.939,349,2.051,350,3.132,373,2.367,374,1.865,375,1.749,392,1.623,428,2.159,430,3.771,436,1.749,437,1.554,440,1.648,446,1.749,448,1.749,449,2.557,450,3.537,451,1.749,456,2.847,468,3.132,605,1.749,609,3.325,954,2.639,1031,4.56,1041,2.639,1044,3.694,1143,3.545,1237,2.639,1257,3.771,1264,4.089,1271,3.545,1281,5.336,1294,5.016,1317,2.639,1318,4.463,1319,5.802,1320,5.802,1321,4.463,1322,4.463,1323,4.463,1324,3.053,1325,4.463,1326,3.053,1327,3.053,1328,3.053,1329,3.053,1330,4.463,1331,3.053,1332,3.053,1333,3.053,1334,3.053,1335,3.053,1336,3.053,1337,3.053,1338,3.053,1339,3.053,1340,3.053,1341,3.053,1342,6.448,1343,3.053,1344,3.053,1345,3.053,1346,3.053,1347,3.053,1348,3.053,1349,3.053]],["title/interfaces/WizardState.html",[178,1.13,1257,2.352]],["body/interfaces/WizardState.html",[2,0.191,3,0.191,7,0.155,17,0.362,18,0.017,20,0.295,32,1.507,67,0.01,68,0.01,74,2.037,116,0.555,121,2.261,125,0.836,127,1.264,137,1.95,147,3.626,151,1.289,156,0.984,163,1.042,171,1.473,178,1.502,186,2.11,203,1.507,262,1.709,329,3.081,382,4.198,392,2.651,394,2.622,395,4.707,436,2.121,437,2.679,438,1.998,440,1.998,444,3.188,446,2.121,448,2.121,449,2.121,451,2.121,452,2.932,503,2.932,573,2.121,1044,4.388,1238,2.261,1246,4.424,1257,4.624,1350,2.622,1351,3.701,1352,3.2,1353,3.2,1354,3.701,1355,2.869,1356,3.2,1357,5.118,1358,3.701,1359,5.118,1360,5.118,1361,5.118,1362,5.118,1363,3.701,1364,2.869,1365,3.2,1366,2.869,1367,3.2,1368,2.869,1369,3.2,1370,2.869,1371,3.2]],["title/coverage.html",[1372,4.546]],["body/coverage.html",[0,1.033,1,0.89,7,0.122,8,2.512,18,0.017,21,0.015,31,0.89,35,0.89,38,0.89,40,0.89,43,0.853,45,0.89,47,0.89,49,0.89,52,0.89,55,0.89,57,0.89,59,0.89,61,0.853,63,0.89,65,0.89,67,0.009,68,0.009,83,1.568,86,0.692,110,2.059,111,3.049,112,2.253,113,2.512,121,1.775,125,0.384,149,1.665,150,2.512,178,1.86,179,1.904,180,3.336,181,2.629,182,3.336,184,1.976,187,1.775,192,2.512,193,2.253,194,2.512,206,2.253,207,2.512,210,1.775,213,2.512,220,1.483,221,3.63,225,1.483,235,1.483,264,1.568,282,1.568,286,1.483,292,1.271,340,2.512,341,2.253,342,2.512,349,1.335,350,1.568,382,1.775,392,1.057,411,2.512,417,1.775,428,1.406,429,3.265,437,1.784,441,1.483,442,1.483,443,1.483,444,1.271,453,2.512,454,2.512,468,1.568,542,2.512,554,2.253,573,4.491,593,2.512,594,2.512,609,1.665,612,2.512,614,2.253,657,2.512,677,2.253,680,1.904,683,2.512,703,2.512,831,1.665,832,2.253,853,2.512,854,2.512,868,2.512,923,2.253,1025,2.512,1026,2.253,1027,3.336,1077,2.512,1078,2.253,1117,2.253,1135,2.512,1143,1.775,1146,2.512,1149,2.512,1156,3.336,1163,2.512,1238,1.775,1241,2.253,1243,2.059,1244,5.219,1255,2.253,1257,2.629,1263,2.512,1271,1.775,1274,2.512,1278,2.512,1317,2.512,1350,4.645,1355,2.253,1364,2.253,1366,2.253,1368,2.253,1370,2.253,1372,2.512,1373,2.906,1374,3.72,1375,5.906,1376,7.096,1377,6.995,1378,5.125,1379,7.322,1380,4.898,1381,5.666,1382,5.666,1383,2.512,1384,2.906,1385,2.906,1386,4.303,1387,2.906,1388,4.303,1389,2.906,1390,2.512,1391,2.906,1392,4.303,1393,4.303,1394,2.906,1395,2.906,1396,2.906,1397,2.906,1398,2.906,1399,5.125,1400,6.335,1401,2.906,1402,2.906,1403,2.906,1404,2.906,1405,2.906,1406,2.512,1407,2.906,1408,2.906,1409,2.512,1410,2.906,1411,2.906,1412,2.906,1413,2.906,1414,2.906,1415,2.906,1416,2.906,1417,2.512,1418,2.906,1419,2.906,1420,2.512,1421,3.72,1422,2.512,1423,2.906,1424,2.906]],["title/dependencies.html",[71,2.129,1425,3.214]],["body/dependencies.html",[18,0.017,19,0.695,67,0.013,68,0.013,71,2.3,91,4.839,92,4.422,96,1.904,98,3.88,129,2.701,130,2.421,205,2.554,552,4.326,553,4.326,588,3.88,605,2.868,764,4.326,766,4.326,922,4.326,1121,4.326,1126,4.326,1127,4.326,1219,4.326,1220,4.326,1221,4.326,1352,4.326,1353,4.326,1426,5.005,1427,7.728,1428,5.005,1429,5.005,1430,5.005,1431,6.242,1432,5.005,1433,5.005,1434,5.005,1435,6.802,1436,5.005,1437,5.005,1438,5.005,1439,5.005,1440,5.005,1441,6.242,1442,5.005,1443,5.005,1444,5.005,1445,5.005,1446,5.005,1447,5.005,1448,5.005,1449,5.005,1450,5.005,1451,5.005]],["title/miscellaneous/enumerations.html",[1452,1.735,1453,4.004]],["body/miscellaneous/enumerations.html",[18,0.014,32,1.838,33,1.486,67,0.014,68,0.014,86,1.615,116,0.543,164,1.89,171,2.284,392,2.087,428,2.776,429,3.097,437,2.514,438,3.097,440,3.661,441,2.928,442,2.928,443,2.928,444,2.51,445,3.506,1452,3.097,1453,4.961,1454,4.961]],["title/miscellaneous/functions.html",[121,2.83,1452,1.735]],["body/miscellaneous/functions.html",[18,0.015,29,1.092,32,1.413,67,0.014,68,0.014,116,0.562,121,3.627,124,1.413,126,1.413,171,2.754,303,3.965,438,3.205,1044,3.402,1238,3.627,1350,4.206,1356,5.132,1409,5.982,1452,3.205,1455,5.132]],["title/index.html",[116,0.304,325,1.555,592,2.491]],["body/index.html",[18,0.014,22,5.502,41,1.761,67,0.014,68,0.014,143,3.379,146,2.208,216,4.339,261,2.812,286,3.379,456,2.975,471,4.273,566,4.273,587,4.765,588,4.273,589,3.905,590,4.765,591,3.367,629,3.905,810,4.765,869,4.765,944,4.765,1456,5.512,1457,5.512,1458,5.512,1459,5.512,1460,5.512,1461,5.512,1462,5.512,1463,5.512,1464,5.512,1465,5.512,1466,5.512,1467,7.363,1468,5.512,1469,5.512,1470,5.512,1471,5.512,1472,5.512,1473,5.512,1474,5.512,1475,5.512,1476,4.765]],["title/license.html",[325,1.555,592,2.491,1477,2.778]],["body/license.html",[7,0.208,18,0.013,67,0.013,68,0.013,74,1.979,87,2.285,171,1.979,195,3.522,259,2.848,284,2.848,286,2.537,358,4.297,361,3.854,406,4.297,425,5.863,426,4.297,427,4.297,589,4.404,693,4.818,775,3.854,893,4.297,1066,5.373,1476,4.297,1477,4.297,1478,4.971,1479,4.971,1480,4.971,1481,4.971,1482,4.971,1483,4.971,1484,6.216,1485,7.105,1486,7.719,1487,6.216,1488,6.782,1489,4.971,1490,6.782,1491,4.971,1492,4.971,1493,4.971,1494,4.971,1495,4.971,1496,4.971,1497,4.971,1498,4.971,1499,4.971,1500,4.971,1501,4.971,1502,4.971,1503,6.216,1504,6.216,1505,4.971,1506,4.971,1507,6.216,1508,4.297,1509,4.971,1510,4.971,1511,4.971,1512,4.971,1513,4.971,1514,4.971,1515,4.971,1516,4.971,1517,4.971,1518,4.971,1519,4.971,1520,4.971,1521,4.971,1522,4.971,1523,4.971,1524,4.971]],["title/modules.html",[69,1.306]],["body/modules.html",[18,0.013,67,0.013,68,0.013,69,1.355,70,3.867,79,3.576,80,3.576,81,3.576,82,3.576,83,2.946,84,3.576,92,5.517,292,3.092,831,3.127,864,3.576,1073,6.731,1210,3.867,1215,3.576,1525,7.786,1526,7.918,1527,7.068]],["title/overview.html",[1528,4.546]],["body/overview.html",[0,0.49,1,2.128,18,0.016,20,0.148,21,0.007,23,0.875,31,1.75,35,1.75,38,2.128,40,1.75,43,1.678,45,2.128,47,1.75,49,2.128,52,1.75,55,1.75,57,1.75,59,1.75,61,1.678,63,1.75,65,1.75,67,0.01,68,0.01,69,1.228,70,5.484,71,1.62,72,1.799,73,1.799,74,1.403,75,3.048,76,3.048,77,3.048,78,3.048,79,3.746,80,4.277,81,4.277,82,4.554,83,4.127,84,4.277,85,2.063,86,0.839,87,1.62,119,2.02,178,1.035,184,1.035,208,3.048,209,3.048,210,3.492,349,2.627,350,3.085,468,3.085,607,3.048,608,3.048,609,3.275,692,3.048,831,3.982,861,3.048,862,3.048,863,3.048,864,4.277,1113,3.048,1114,3.048,1115,3.048,1116,3.048,1141,3.048,1142,3.048,1143,3.492,1210,5.637,1211,3.048,1212,3.048,1213,3.048,1214,3.048,1215,3.746,1269,3.048,1270,3.048,1271,3.492,1390,3.048,1417,3.048,1528,3.048,1529,3.526,1530,4.948]],["title/routes.html",[119,3.013]],["body/routes.html",[18,0.015,67,0.015,68,0.015,119,3.583]],["title/miscellaneous/typealiases.html",[1452,1.735,1531,4.632]],["body/miscellaneous/typealiases.html",[18,0.016,67,0.014,68,0.014,86,1.421,116,0.565,125,0.789,428,2.887,429,3.222,441,3.046,442,3.046,443,3.046,452,4.205,1452,3.222,1454,5.16,1532,5.969]],["title/miscellaneous/variables.html",[1375,3.591,1452,1.735]],["body/miscellaneous/variables.html",[11,0.767,18,0.017,20,0.242,32,0.946,67,0.008,68,0.008,83,2.595,85,1.09,111,1.851,116,0.247,125,0.993,135,1.851,143,1.333,147,2.277,163,2.115,164,1.866,178,0.767,186,1.325,190,1.41,203,0.946,261,1.333,262,1.073,275,1.41,329,1.143,382,3.282,392,2.102,400,1.333,437,2.522,444,2.528,456,2.595,459,1.596,466,3.151,484,2.816,495,3.081,510,4.62,554,3.728,571,1.851,572,3.435,573,2.277,575,2.259,589,1.851,591,1.596,614,2.026,629,1.851,677,3.728,680,3.151,684,2.259,693,3.081,727,2.259,830,2.259,831,3.078,832,2.026,833,2.259,834,2.259,835,2.259,837,2.259,838,2.259,839,2.259,840,2.259,841,2.259,842,2.259,843,2.259,844,2.259,845,2.259,923,3.728,927,3.435,996,2.026,1005,3.435,1007,2.259,1044,3.903,1049,2.259,1074,1.712,1109,2.259,1110,2.259,1117,2.026,1120,2.259,1122,2.259,1123,2.259,1124,2.259,1125,2.259,1156,2.026,1238,2.938,1241,2.026,1243,1.851,1244,2.026,1245,2.259,1248,3.435,1250,4.996,1251,6.069,1254,2.259,1255,4.165,1256,2.259,1257,4.34,1258,2.259,1259,2.259,1260,2.259,1261,2.259,1262,2.259,1350,1.851,1355,3.728,1364,3.728,1365,2.259,1366,3.728,1367,2.259,1368,3.728,1369,2.259,1370,3.728,1371,2.259,1374,4.645,1375,2.026,1380,2.259,1383,2.259,1406,2.259,1420,2.259,1421,5.262,1422,2.259,1452,1.41,1455,4.996,1508,2.259,1533,2.613,1534,6.327,1535,2.613,1536,2.613,1537,2.613,1538,2.613,1539,2.613,1540,2.613,1541,2.613,1542,2.613,1543,2.613,1544,2.613,1545,2.613,1546,2.613,1547,2.613,1548,2.613,1549,2.613,1550,2.613,1551,2.613,1552,2.613,1553,2.613,1554,2.613,1555,2.613,1556,2.613,1557,2.613,1558,3.974,1559,3.974,1560,3.974,1561,2.613,1562,2.613,1563,2.613,1564,2.613,1565,5.373,1566,2.613,1567,3.974,1568,2.613,1569,5.373,1570,5.373,1571,2.613,1572,2.613,1573,2.613,1574,2.613,1575,2.613,1576,2.613,1577,2.613,1578,2.613,1579,2.613]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"classes/Clock.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":573,"title":{},"body":{"components/HomeComponent.html":{},"components/MapComponent.html":{},"injectables/NetworkService.html":{},"components/SearchForTheAreaComponent.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0012",{"_index":790,"title":{},"body":{"injectables/MapService.html":{}}}],["0.003",{"_index":793,"title":{},"body":{"injectables/MapService.html":{}}}],["0.3",{"_index":570,"title":{},"body":{"components/HomeComponent.html":{}}}],["0.5",{"_index":581,"title":{},"body":{"components/HomeComponent.html":{}}}],["0.8.26",{"_index":1451,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1379,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1419,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1411,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1378,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1399,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1400,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1382,"title":{},"body":{"coverage.html":{}}}],["0m",{"_index":1564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":571,"title":{},"body":{"components/HomeComponent.html":{},"components/MapComponent.html":{},"injectables/NetworkService.html":{},"miscellaneous/variables.html":{}}}],["1.1.0",{"_index":1440,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1377,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1381,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1396,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1394,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1393,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":1391,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":1418,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":830,"title":{},"body":{"injectables/MapService.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":1376,"title":{},"body":{"coverage.html":{}}}],["10000",{"_index":828,"title":{},"body":{"injectables/MapService.html":{}}}],["11",{"_index":1417,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["11/15",{"_index":1402,"title":{},"body":{"coverage.html":{}}}],["11/18",{"_index":1398,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":1390,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["12.476358",{"_index":1576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14",{"_index":1386,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":692,"title":{},"body":{"components/MapComponent.html":{},"overview.html":{}}}],["18",{"_index":683,"title":{},"body":{"components/MapComponent.html":{},"coverage.html":{}}}],["2.0.8",{"_index":1444,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":1445,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":1442,"title":{},"body":{"dependencies.html":{}}}],["2.5.7",{"_index":1448,"title":{},"body":{"dependencies.html":{}}}],["2/14",{"_index":1387,"title":{},"body":{"coverage.html":{}}}],["2/2",{"_index":1410,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1392,"title":{},"body":{"coverage.html":{}}}],["2018",{"_index":1479,"title":{},"body":{"license.html":{}}}],["21",{"_index":1415,"title":{},"body":{"coverage.html":{}}}],["22",{"_index":1404,"title":{},"body":{"coverage.html":{}}}],["24",{"_index":1109,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{},"miscellaneous/variables.html":{}}}],["25",{"_index":1388,"title":{},"body":{"coverage.html":{}}}],["250px",{"_index":1207,"title":{},"body":{"components/UiComponent.html":{}}}],["26",{"_index":1412,"title":{},"body":{"coverage.html":{}}}],["3/12",{"_index":1389,"title":{},"body":{"coverage.html":{}}}],["3/14",{"_index":1416,"title":{},"body":{"coverage.html":{}}}],["3/16",{"_index":1414,"title":{},"body":{"coverage.html":{}}}],["3/21",{"_index":1403,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":1395,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":684,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["4.0.0",{"_index":1438,"title":{},"body":{"dependencies.html":{}}}],["4/15",{"_index":1413,"title":{},"body":{"coverage.html":{}}}],["4/18",{"_index":1405,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":1408,"title":{},"body":{"coverage.html":{}}}],["4/9",{"_index":1385,"title":{},"body":{"coverage.html":{}}}],["4000",{"_index":1203,"title":{},"body":{"components/UiComponent.html":{}}}],["41.910943",{"_index":1575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["44",{"_index":1384,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1380,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["5000",{"_index":1546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["57",{"_index":1407,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1530,"title":{},"body":{"overview.html":{}}}],["6.0.0",{"_index":1433,"title":{},"body":{"dependencies.html":{}}}],["6.0.1",{"_index":1435,"title":{},"body":{"dependencies.html":{}}}],["6.0.3",{"_index":1427,"title":{},"body":{"dependencies.html":{}}}],["6.0.5",{"_index":1437,"title":{},"body":{"dependencies.html":{}}}],["6.1.4",{"_index":1436,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":1449,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":1431,"title":{},"body":{"dependencies.html":{}}}],["6.5.2",{"_index":1446,"title":{},"body":{"dependencies.html":{}}}],["61",{"_index":1397,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":578,"title":{},"body":{"components/HomeComponent.html":{}}}],["73",{"_index":1401,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1529,"title":{},"body":{"overview.html":{}}}],["840",{"_index":583,"title":{},"body":{"components/HomeComponent.html":{}}}],["abov",{"_index":1502,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":152,"title":{},"body":{"classes/BaseComponent.html":{}}}],["accessor",{"_index":1086,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{},"components/WizardComponent.html":{}}}],["action",{"_index":171,"title":{},"body":{"classes/BaseComponent.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"components/MapComponent.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["action.payload",{"_index":1362,"title":{},"body":{"interfaces/WizardState.html":{}}}],["action.payload.nextindex",{"_index":1363,"title":{},"body":{"interfaces/WizardState.html":{}}}],["action.payload.step",{"_index":1360,"title":{},"body":{"interfaces/WizardState.html":{}}}],["action.typ",{"_index":1358,"title":{},"body":{"interfaces/WizardState.html":{}}}],["actionreducermap",{"_index":1248,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["actions/wizard.act",{"_index":1354,"title":{},"body":{"interfaces/WizardState.html":{}}}],["activ",{"_index":1458,"title":{},"body":{"index.html":{}}}],["actual_compon",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["add",{"_index":566,"title":{},"body":{"components/HomeComponent.html":{},"injectables/MapService.html":{},"index.html":{}}}],["addedg",{"_index":528,"title":{},"body":{"classes/Graph.html":{}}}],["addedge(edg",{"_index":323,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["addorupdatenod",{"_index":529,"title":{},"body":{"classes/Graph.html":{}}}],["addorupdatenode(nod",{"_index":306,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["address",{"_index":630,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{},"components/WizardComponent.html":{}}}],["administr",{"_index":1566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["afterviewinit",{"_index":543,"title":{},"body":{"components/HomeComponent.html":{}}}],["again",{"_index":407,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["algorithm",{"_index":335,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"injectables/SimulationService.html":{},"interfaces/Tag.html":{}}}],["alias",{"_index":1532,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["and/or",{"_index":1497,"title":{},"body":{"license.html":{}}}],["angular",{"_index":810,"title":{},"body":{"injectables/MapService.html":{},"index.html":{}}}],["angular/anim",{"_index":1426,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1432,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/stepp",{"_index":1302,"title":{},"body":{"components/WizardComponent.html":{}}}],["angular/common",{"_index":1121,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":919,"title":{},"body":{"injectables/NetworkService.html":{},"modules/SharedModule.html":{}}}],["angular/compil",{"_index":1428,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"modules/MaterialModule.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"injectables/NetworkService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":1126,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/form",{"_index":205,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WizardComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1429,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":605,"title":{},"body":{"components/InfoDialogComponent.html":{},"modules/MaterialModule.html":{},"components/MessageArchivedComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":129,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"modules/SharedModule.html":{},"components/UiComponent.html":{},"modules/UiRoutingModule.html":{},"dependencies.html":{}}}],["anim",{"_index":552,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{}}}],["animate('500m",{"_index":1563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animationtriggermetadata",{"_index":1560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["anime.timelin",{"_index":565,"title":{},"body":{"components/HomeComponent.html":{}}}],["animej",{"_index":553,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{}}}],["anoth",{"_index":399,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["api",{"_index":629,"title":{},"body":{"injectables/LocationService.html":{},"injectables/NetworkService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["api.de/api/interpret",{"_index":1545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apikey",{"_index":1557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"injectables/NetworkService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"miscellaneous/variables.html":{}}}],["app.compon",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appconfig",{"_index":923,"title":{},"body":{"injectables/NetworkService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appconfig.api.overpassapi.highway",{"_index":1008,"title":{},"body":{"injectables/NetworkService.html":{}}}],["appconfig.api.overpassapi.timeout",{"_index":997,"title":{},"body":{"injectables/NetworkService.html":{}}}],["appconfig.api.overpassapi.url",{"_index":928,"title":{},"body":{"injectables/NetworkService.html":{}}}],["appli",{"_index":493,"title":{},"body":{"components/GoogleMapComponent.html":{},"injectables/SimulationService.html":{}}}],["application/x",{"_index":931,"title":{},"body":{"injectables/NetworkService.html":{}}}],["application?').pip",{"_index":1197,"title":{},"body":{"components/UiComponent.html":{}}}],["application?').subscrib",{"_index":1200,"title":{},"body":{"components/UiComponent.html":{}}}],["appmodul",{"_index":70,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppreloadingstrategi",{"_index":110,"title":{"classes/AppPreloadingStrategy.html":{}},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["approutingmodul",{"_index":79,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arc",{"_index":252,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["archived.compon",{"_index":1130,"title":{},"body":{"modules/SharedModule.html":{},"components/UiComponent.html":{}}}],["archived.component.t",{"_index":854,"title":{},"body":{"components/MessageArchivedComponent.html":{},"coverage.html":{}}}],["archived.component.ts:11",{"_index":857,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["archived.component.ts:13",{"_index":858,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["area",{"_index":400,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"injectables/NetworkService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["area'},{'nam",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["area(p",{"_index":827,"title":{},"body":{"injectables/MapService.html":{}}}],["area.compon",{"_index":1225,"title":{},"body":{"modules/UiModule.html":{}}}],["area.component.html",{"_index":1029,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.scss",{"_index":1028,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.t",{"_index":1027,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"coverage.html":{}}}],["area.component.ts:16",{"_index":1033,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:18",{"_index":1032,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:21",{"_index":1080,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:23",{"_index":1081,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:27",{"_index":1035,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:28",{"_index":1089,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:33",{"_index":1040,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:35",{"_index":1093,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:42",{"_index":1036,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:43",{"_index":1079,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:46",{"_index":1039,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:50",{"_index":1038,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:53",{"_index":1082,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:59",{"_index":1085,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:69",{"_index":1083,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:77",{"_index":1084,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:78",{"_index":1034,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area/search",{"_index":1026,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"modules/UiModule.html":{},"coverage.html":{}}}],["area/select",{"_index":1078,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{},"modules/UiModule.html":{},"coverage.html":{}}}],["areamaxlimit",{"_index":1578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["areaminlimit",{"_index":1579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aris",{"_index":1524,"title":{},"body":{"license.html":{}}}],["arr",{"_index":959,"title":{},"body":{"injectables/NetworkService.html":{}}}],["arr.length",{"_index":961,"title":{},"body":{"injectables/NetworkService.html":{}}}],["assign",{"_index":253,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["associ",{"_index":361,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"injectables/NetworkService.html":{},"license.html":{}}}],["attach",{"_index":260,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["attribut",{"_index":254,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["author",{"_index":1514,"title":{},"body":{"license.html":{}}}],["avail",{"_index":1527,"title":{},"body":{"modules.html":{}}}],["bachelor'",{"_index":1460,"title":{},"body":{"index.html":{}}}],["bar",{"_index":855,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["bar'},{'nam",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["base",{"_index":332,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{}}}],["basecompon",{"_index":149,"title":{"classes/BaseComponent.html":{}},"body":{"classes/BaseComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"coverage.html":{}}}],["basecomponent:11",{"_index":365,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["basecomponent:13",{"_index":364,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["basecomponent:22",{"_index":368,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["basecomponent:27",{"_index":366,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["basecomponent:32",{"_index":367,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["basecomponent:9",{"_index":369,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["basictimelin",{"_index":564,"title":{},"body":{"components/HomeComponent.html":{}}}],["bbox",{"_index":999,"title":{},"body":{"injectables/NetworkService.html":{}}}],["behaviorsubject",{"_index":763,"title":{},"body":{"injectables/MapService.html":{}}}],["behaviorsubject(nul",{"_index":754,"title":{},"body":{"injectables/MapService.html":{}}}],["beta.15",{"_index":1434,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":223,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{}}}],["blur",{"_index":1310,"title":{},"body":{"components/WizardComponent.html":{}}}],["bodi",{"_index":935,"title":{},"body":{"injectables/NetworkService.html":{}}}],["boolean",{"_index":186,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"classes/Edge.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["bound",{"_index":699,"title":{},"body":{"components/MapComponent.html":{},"injectables/MapService.html":{},"injectables/NetworkService.html":{},"components/WizardComponent.html":{}}}],["bounds.getnortheast().lat",{"_index":804,"title":{},"body":{"injectables/MapService.html":{}}}],["bounds.getnortheast().lng",{"_index":806,"title":{},"body":{"injectables/MapService.html":{}}}],["bounds.getsouthwest().lat",{"_index":805,"title":{},"body":{"injectables/MapService.html":{}}}],["bounds.getsouthwest().lng",{"_index":807,"title":{},"body":{"injectables/MapService.html":{}}}],["box",{"_index":998,"title":{},"body":{"injectables/NetworkService.html":{}}}],["break",{"_index":401,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{}}}],["brows",{"_index":1526,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":697,"title":{},"body":{"components/MapComponent.html":{},"injectables/NetworkService.html":{}}}],["buildbodi",{"_index":870,"title":{},"body":{"injectables/NetworkService.html":{}}}],["buildbody(queri",{"_index":885,"title":{},"body":{"injectables/NetworkService.html":{}}}],["buildbound",{"_index":706,"title":{},"body":{"injectables/MapService.html":{}}}],["buildbounds(cent",{"_index":721,"title":{},"body":{"injectables/MapService.html":{}}}],["buildqueri",{"_index":871,"title":{},"body":{"injectables/NetworkService.html":{}}}],["c",{"_index":1478,"title":{},"body":{"license.html":{}}}],["calcarea",{"_index":707,"title":{},"body":{"injectables/MapService.html":{}}}],["calcarea(n",{"_index":723,"title":{},"body":{"injectables/MapService.html":{}}}],["calclinkflow",{"_index":237,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["calcul",{"_index":251,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"injectables/MapService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["calendar_today",{"_index":1105,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["call",{"_index":904,"title":{},"body":{"injectables/NetworkService.html":{}}}],["cancomponentdeactiv",{"_index":179,"title":{"interfaces/CanComponentDeactivate.html":{}},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/UiComponent.html":{},"coverage.html":{}}}],["candeactiv",{"_index":183,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/UiComponent.html":{},"modules/UiRoutingModule.html":{}}}],["candeactivate(compon",{"_index":188,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{}}}],["candeactivateguard",{"_index":187,"title":{"injectables/CanDeactivateGuard.html":{}},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"modules/SharedModule.html":{},"modules/UiRoutingModule.html":{},"coverage.html":{}}}],["case",{"_index":395,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"interfaces/WizardState.html":{}}}],["catch",{"_index":990,"title":{},"body":{"injectables/NetworkService.html":{}}}],["catch((error",{"_index":1052,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["catcherror",{"_index":921,"title":{},"body":{"injectables/NetworkService.html":{}}}],["catcherror((error",{"_index":940,"title":{},"body":{"injectables/NetworkService.html":{}}}],["center",{"_index":459,"title":{},"body":{"components/GoogleMapComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["center.lat",{"_index":789,"title":{},"body":{"injectables/MapService.html":{}}}],["center.lng",{"_index":792,"title":{},"body":{"injectables/MapService.html":{}}}],["chang",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MessageArchivedComponent.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"miscellaneous/enumerations.html":{}}}],["changeofconditionscompon",{"_index":31,"title":{"components/ChangeOfConditionsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["changes['cent",{"_index":514,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["changes['zoom",{"_index":516,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["charg",{"_index":1483,"title":{},"body":{"license.html":{}}}],["check",{"_index":404,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{}}}],["checkrect",{"_index":708,"title":{},"body":{"injectables/MapService.html":{}}}],["claim",{"_index":1517,"title":{},"body":{"license.html":{}}}],["class",{"_index":21,"title":{"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"classes/Clock.html":{},"classes/Edge.html":{},"classes/GoOn.html":{},"classes/Graph.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"classes/Clock.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"coverage.html":{},"overview.html":{}}}],["cli",{"_index":1468,"title":{},"body":{"index.html":{}}}],["click",{"_index":477,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["clock",{"_index":206,"title":{"classes/Clock.html":{}},"body":{"classes/Clock.html":{},"coverage.html":{}}}],["clone",{"_index":1352,"title":{},"body":{"interfaces/WizardState.html":{},"dependencies.html":{}}}],["clonedeep",{"_index":1351,"title":{},"body":{"interfaces/WizardState.html":{}}}],["clonedeep(initialwizardst",{"_index":1357,"title":{},"body":{"interfaces/WizardState.html":{}}}],["clonedeep(state.step",{"_index":1361,"title":{},"body":{"interfaces/WizardState.html":{}}}],["cluster_appmodul",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_demandmodul",{"_index":208,"title":{},"body":{"modules/DemandModule.html":{},"overview.html":{}}}],["cluster_demandmodule_provid",{"_index":209,"title":{},"body":{"modules/DemandModule.html":{},"overview.html":{}}}],["cluster_locationmodul",{"_index":607,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_provid",{"_index":608,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_networkmodul",{"_index":861,"title":{},"body":{"modules/NetworkModule.html":{},"overview.html":{}}}],["cluster_networkmodule_import",{"_index":862,"title":{},"body":{"modules/NetworkModule.html":{},"overview.html":{}}}],["cluster_networkmodule_provid",{"_index":863,"title":{},"body":{"modules/NetworkModule.html":{},"overview.html":{}}}],["cluster_sharedmodul",{"_index":1113,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declar",{"_index":1114,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_export",{"_index":1116,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_import",{"_index":1115,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_simulationmodul",{"_index":1141,"title":{},"body":{"modules/SimulationModule.html":{},"overview.html":{}}}],["cluster_simulationmodule_provid",{"_index":1142,"title":{},"body":{"modules/SimulationModule.html":{},"overview.html":{}}}],["cluster_uimodul",{"_index":1211,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_uimodule_declar",{"_index":1212,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_uimodule_import",{"_index":1213,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_uimodule_provid",{"_index":1214,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_weathermodul",{"_index":1269,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["cluster_weathermodule_provid",{"_index":1270,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["code",{"_index":851,"title":{},"body":{"modules/MaterialModule.html":{}}}],["codeaddress",{"_index":621,"title":{},"body":{"injectables/LocationService.html":{}}}],["codeaddress(address",{"_index":626,"title":{},"body":{"injectables/LocationService.html":{}}}],["combin",{"_index":255,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["combine(existingnode.incomingedg",{"_index":317,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["combine(existingnode.outgoingedg",{"_index":320,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["combine(existingnode.tag",{"_index":314,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["commonmodul",{"_index":1120,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["complet",{"_index":585,"title":{},"body":{"components/HomeComponent.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiRoutingModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component.candeactiv",{"_index":189,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{}}}],["component_templ",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["comput",{"_index":1461,"title":{},"body":{"index.html":{}}}],["condit",{"_index":195,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"license.html":{}}}],["conditions'},{'nam",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["conditions.compon",{"_index":1230,"title":{},"body":{"modules/UiModule.html":{}}}],["conditions.component.html",{"_index":197,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.scss",{"_index":196,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.t",{"_index":194,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"coverage.html":{}}}],["conditions.component.ts:11",{"_index":202,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:13",{"_index":201,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:17",{"_index":204,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions/chang",{"_index":193,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"modules/UiModule.html":{},"coverage.html":{}}}],["config",{"_index":681,"title":{},"body":{"components/MapComponent.html":{},"injectables/MapService.html":{},"injectables/NetworkService.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["config.t",{"_index":1374,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configur",{"_index":1558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connect",{"_index":406,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"license.html":{}}}],["console.log(st",{"_index":1341,"title":{},"body":{"injectables/WizardService.html":{}}}],["const",{"_index":137,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"modules/SharedModule.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{}}}],["constructor",{"_index":200,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MessageArchivedComponent.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["constructor(@inject(mat_snack_bar_data",{"_index":860,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["constructor(data",{"_index":856,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["constructor(dialogref",{"_index":598,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["constructor(edgeid",{"_index":238,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["constructor(elementref",{"_index":548,"title":{},"body":{"components/HomeComponent.html":{}}}],["constructor(formbuild",{"_index":1284,"title":{},"body":{"components/WizardComponent.html":{}}}],["constructor(http",{"_index":881,"title":{},"body":{"injectables/NetworkService.html":{}}}],["constructor(map",{"_index":467,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["constructor(maticonregistri",{"_index":847,"title":{},"body":{"modules/MaterialModule.html":{}}}],["constructor(nodeid",{"_index":279,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["constructor(payload",{"_index":432,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{}}}],["constructor(priv",{"_index":556,"title":{},"body":{"components/HomeComponent.html":{},"injectables/MapService.html":{},"injectables/NetworkService.html":{}}}],["constructor(publ",{"_index":447,"title":{},"body":{"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{}}}],["constructor(relationid",{"_index":290,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["constructor(rout",{"_index":1169,"title":{},"body":{"components/UiComponent.html":{}}}],["constructor(stor",{"_index":347,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"injectables/WizardService.html":{}}}],["constructor(wizard",{"_index":1030,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["constructor(zon",{"_index":717,"title":{},"body":{"injectables/MapService.html":{}}}],["contain",{"_index":740,"title":{},"body":{"injectables/MapService.html":{}}}],["content",{"_index":749,"title":{},"body":{"injectables/MapService.html":{}}}],["continu",{"_index":1075,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["contract",{"_index":1521,"title":{},"body":{"license.html":{}}}],["control",{"_index":480,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["convert",{"_index":1045,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["cooper",{"_index":685,"title":{},"body":{"components/MapComponent.html":{}}}],["coordin",{"_index":616,"title":{},"body":{"injectables/LocationService.html":{},"injectables/MapService.html":{},"injectables/NetworkService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["copi",{"_index":1485,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":425,"title":{},"body":{"components/FooterComponent.html":{},"license.html":{}}}],["copyright&nbsp;©&nbsp",{"_index":423,"title":{},"body":{"components/FooterComponent.html":{}}}],["core",{"_index":1447,"title":{},"body":{"dependencies.html":{}}}],["coverag",{"_index":1372,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":397,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"injectables/MapService.html":{},"injectables/NetworkService.html":{},"components/WizardComponent.html":{}}}],["createfeatureselector",{"_index":1249,"title":{},"body":{"interfaces/UiState.html":{}}}],["createfeatureselector('ui",{"_index":1256,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["creategraph",{"_index":396,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"injectables/NetworkService.html":{}}}],["creategraph(data",{"_index":891,"title":{},"body":{"injectables/NetworkService.html":{}}}],["createmap",{"_index":457,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["createmap(el",{"_index":497,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["createselector",{"_index":1250,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["creation",{"_index":360,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"injectables/NetworkService.html":{}}}],["current",{"_index":1074,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/UiState.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["currentstep",{"_index":382,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"interfaces/UiState.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["currentyear",{"_index":415,"title":{},"body":{"components/FooterComponent.html":{}}}],["damag",{"_index":1518,"title":{},"body":{"license.html":{}}}],["data",{"_index":146,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/Edge.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"index.html":{}}}],["data.el",{"_index":943,"title":{},"body":{"injectables/NetworkService.html":{}}}],["date",{"_index":907,"title":{},"body":{"injectables/NetworkService.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["date().getfullyear",{"_index":418,"title":{},"body":{"components/FooterComponent.html":{}}}],["datetim",{"_index":1221,"title":{},"body":{"modules/UiModule.html":{},"dependencies.html":{}}}],["day",{"_index":1094,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["deactiv",{"_index":181,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"modules/SharedModule.html":{},"components/UiComponent.html":{},"modules/UiRoutingModule.html":{},"coverage.html":{}}}],["deal",{"_index":1487,"title":{},"body":{"license.html":{}}}],["declar",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["decor",{"_index":601,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/MessageArchivedComponent.html":{},"components/WizardComponent.html":{}}}],["deep",{"_index":1353,"title":{},"body":{"interfaces/WizardState.html":{},"dependencies.html":{}}}],["default",{"_index":163,"title":{},"body":{"classes/BaseComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":122,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["degre",{"_index":944,"title":{},"body":{"injectables/NetworkService.html":{},"index.html":{}}}],["delay",{"_index":577,"title":{},"body":{"components/HomeComponent.html":{}}}],["demand",{"_index":217,"title":{},"body":{"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["demand'},{'nam",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["demand.compon",{"_index":1228,"title":{},"body":{"modules/UiModule.html":{}}}],["demand.component.html",{"_index":345,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.scss",{"_index":344,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.t",{"_index":342,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"coverage.html":{}}}],["demand.component.ts:20",{"_index":352,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:22",{"_index":351,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:32",{"_index":353,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:38",{"_index":363,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:42",{"_index":354,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:46",{"_index":362,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:59",{"_index":355,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.servic",{"_index":212,"title":{},"body":{"modules/DemandModule.html":{}}}],["demand/demand.modul",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["demand/demand.servic",{"_index":1334,"title":{},"body":{"injectables/WizardService.html":{}}}],["demand/estim",{"_index":341,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"modules/UiModule.html":{},"coverage.html":{}}}],["demandmodul",{"_index":80,"title":{"modules/DemandModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"modules.html":{},"overview.html":{}}}],["demandservic",{"_index":210,"title":{"injectables/DemandService.html":{}},"body":{"modules/DemandModule.html":{},"injectables/DemandService.html":{},"injectables/WizardService.html":{},"coverage.html":{},"overview.html":{}}}],["deni",{"_index":1067,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["densiti",{"_index":226,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["depend",{"_index":71,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{},"overview.html":{}}}],["describ",{"_index":257,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["descript",{"_index":151,"title":{},"body":{"classes/BaseComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/Graph.html":{},"injectables/LocationService.html":{},"injectables/MapService.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"injectables/SimulationService.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"interfaces/UiState.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{}}}],["destin",{"_index":227,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["develop",{"_index":869,"title":{},"body":{"injectables/NetworkService.html":{},"index.html":{}}}],["dialog",{"_index":595,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/UiComponent.html":{}}}],["dialog'},{'nam",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["dialog.compon",{"_index":1131,"title":{},"body":{"modules/SharedModule.html":{},"components/UiComponent.html":{}}}],["dialog.component.t",{"_index":594,"title":{},"body":{"components/InfoDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:18",{"_index":600,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:21",{"_index":603,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:22",{"_index":602,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialogref",{"_index":597,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/UiComponent.html":{}}}],["dialogref.afterclos",{"_index":1209,"title":{},"body":{"components/UiComponent.html":{}}}],["dialogresult",{"_index":1199,"title":{},"body":{"components/UiComponent.html":{}}}],["direct",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["disabledefaultui",{"_index":460,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["disabledoubleclickzoom",{"_index":461,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["display",{"_index":490,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["dissert",{"_index":1459,"title":{},"body":{"index.html":{}}}],["distanc",{"_index":228,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["distribut",{"_index":1495,"title":{},"body":{"license.html":{}}}],["div",{"_index":741,"title":{},"body":{"injectables/MapService.html":{}}}],["doc",{"_index":1464,"title":{},"body":{"index.html":{}}}],["document",{"_index":286,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["doesn't",{"_index":1072,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["domsanit",{"_index":846,"title":{},"body":{"modules/MaterialModule.html":{}}}],["domsanitizer.bypasssecuritytrustresourceurl('./assets/images/ic_code_24px.svg",{"_index":852,"title":{},"body":{"modules/MaterialModule.html":{}}}],["domsanitizer.bypasssecuritytrustresourceurl('./assets/images/ic_more_vert_24px.svg",{"_index":850,"title":{},"body":{"modules/MaterialModule.html":{}}}],["doubl",{"_index":476,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["draggabl",{"_index":796,"title":{},"body":{"injectables/MapService.html":{}}}],["durat",{"_index":229,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{}}}],["durationintraff",{"_index":230,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["dynam",{"_index":1430,"title":{},"body":{"dependencies.html":{}}}],["each",{"_index":494,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["earth'",{"_index":270,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["eas",{"_index":575,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["east",{"_index":791,"title":{},"body":{"injectables/MapService.html":{}}}],["edg",{"_index":220,"title":{"classes/Edge.html":{}},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"coverage.html":{}}}],["edgeid",{"_index":231,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["edit",{"_index":794,"title":{},"body":{"injectables/MapService.html":{}}}],["effectsmodul",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"modules/UiModule.html":{}}}],["effectsmodule.forfeatur",{"_index":1240,"title":{},"body":{"modules/UiModule.html":{}}}],["effectsmodule.forroot",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["el",{"_index":500,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"injectables/MapService.html":{}}}],["element",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["element.innerhtml",{"_index":563,"title":{},"body":{"components/HomeComponent.html":{}}}],["element.innertext",{"_index":560,"title":{},"body":{"components/HomeComponent.html":{}}}],["element['typ",{"_index":949,"title":{},"body":{"injectables/NetworkService.html":{}}}],["elementref",{"_index":469,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{}}}],["elements.filter((el",{"_index":948,"title":{},"body":{"injectables/NetworkService.html":{}}}],["elementtyp",{"_index":1567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enabl",{"_index":478,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["enables/dis",{"_index":474,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["encapsul",{"_index":658,"title":{},"body":{"components/MapComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["engin",{"_index":1462,"title":{},"body":{"index.html":{}}}],["enter",{"_index":1107,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["entrycompon",{"_index":1118,"title":{},"body":{"modules/SharedModule.html":{}}}],["enum",{"_index":439,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{}}}],["enumer",{"_index":1453,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":1421,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["eppstein",{"_index":336,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["equal",{"_index":955,"title":{},"body":{"injectables/NetworkService.html":{}}}],["error",{"_index":392,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"injectables/LocationService.html":{},"injectables/NetworkService.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["error.cod",{"_index":1064,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["error.permission_deni",{"_index":1065,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["error.position_unavail",{"_index":1068,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["error.timeout",{"_index":1070,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["est",{"_index":730,"title":{},"body":{"injectables/MapService.html":{}}}],["estim",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["estimateofdemandcompon",{"_index":35,"title":{"components/EstimateOfDemandComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["event",{"_index":775,"title":{},"body":{"injectables/MapService.html":{},"components/WizardComponent.html":{},"license.html":{}}}],["event.previouslyselectedindex",{"_index":1313,"title":{},"body":{"components/WizardComponent.html":{}}}],["event.selectedindex",{"_index":1314,"title":{},"body":{"components/WizardComponent.html":{}}}],["eventemitt",{"_index":761,"title":{},"body":{"injectables/MapService.html":{}}}],["existingnod",{"_index":307,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["existingnode.incomingedg",{"_index":316,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["existingnode.lat",{"_index":309,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["existingnode.lon",{"_index":311,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["existingnode.outgoingedg",{"_index":319,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["existingnode.tag",{"_index":313,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["exit",{"_index":1166,"title":{},"body":{"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["export",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"classes/Clock.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["express",{"_index":1509,"title":{},"body":{"license.html":{}}}],["extend",{"_index":343,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["extracttag",{"_index":872,"title":{},"body":{"injectables/NetworkService.html":{}}}],["extracttags(tag",{"_index":898,"title":{},"body":{"injectables/NetworkService.html":{}}}],["factor",{"_index":1276,"title":{},"body":{"injectables/WeatherService.html":{}}}],["fals",{"_index":147,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/UiComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["featuretyp",{"_index":1565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["featureuist",{"_index":1255,"title":{},"body":{"interfaces/UiState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"classes/Clock.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"license.html":{}}}],["filteredwaynod",{"_index":957,"title":{},"body":{"injectables/NetworkService.html":{}}}],["filteredwaynodes[i",{"_index":965,"title":{},"body":{"injectables/NetworkService.html":{}}}],["final",{"_index":992,"title":{},"body":{"injectables/NetworkService.html":{}}}],["first",{"_index":960,"title":{},"body":{"injectables/NetworkService.html":{}}}],["firstnode.incomingedges.push(secondedg",{"_index":977,"title":{},"body":{"injectables/NetworkService.html":{}}}],["firstnode.lat",{"_index":969,"title":{},"body":{"injectables/NetworkService.html":{}}}],["firstnode.lon",{"_index":971,"title":{},"body":{"injectables/NetworkService.html":{}}}],["firstnode.outgoingedges.push(firstedg",{"_index":975,"title":{},"body":{"injectables/NetworkService.html":{}}}],["firstnode.tag",{"_index":973,"title":{},"body":{"injectables/NetworkService.html":{}}}],["fit",{"_index":1512,"title":{},"body":{"license.html":{}}}],["flexlayoutmodul",{"_index":1125,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["flow",{"_index":232,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"injectables/SimulationService.html":{},"interfaces/Tag.html":{}}}],["follow",{"_index":358,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"license.html":{}}}],["footer",{"_index":412,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'nam",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["footer.component.html",{"_index":414,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":413,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.compon",{"_index":1129,"title":{},"body":{"modules/SharedModule.html":{}}}],["footercompon",{"_index":38,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["form",{"_index":175,"title":{},"body":{"classes/BaseComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"injectables/NetworkService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Step.html":{},"components/WizardComponent.html":{}}}],["formarray",{"_index":1301,"title":{},"body":{"components/WizardComponent.html":{}}}],["formbuild",{"_index":1285,"title":{},"body":{"components/WizardComponent.html":{}}}],["formgroup",{"_index":199,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WizardComponent.html":{}}}],["formsmodul",{"_index":1123,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["formstep",{"_index":1298,"title":{},"body":{"components/WizardComponent.html":{}}}],["forroot",{"_index":1134,"title":{},"body":{"modules/SharedModule.html":{}}}],["free",{"_index":1482,"title":{},"body":{"license.html":{}}}],["fromui",{"_index":374,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["fromwizard",{"_index":1252,"title":{},"body":{"interfaces/UiState.html":{}}}],["fromwizard.getcurrentstep",{"_index":1260,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["fromwizard.geterror",{"_index":1261,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["fromwizard.getpend",{"_index":1262,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["fromwizard.getstep",{"_index":1259,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["fromwizard.wizardreduc",{"_index":1254,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["fromwizard.wizardst",{"_index":1247,"title":{},"body":{"interfaces/UiState.html":{}}}],["full",{"_index":142,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/UiRoutingModule.html":{}}}],["function",{"_index":121,"title":{"miscellaneous/functions.html":{}},"body":{"classes/AppPreloadingStrategy.html":{},"interfaces/CanComponentDeactivate.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["furnish",{"_index":1500,"title":{},"body":{"license.html":{}}}],["geocod",{"_index":618,"title":{},"body":{"injectables/LocationService.html":{}}}],["geocoderresult",{"_index":631,"title":{},"body":{"injectables/LocationService.html":{}}}],["geograph",{"_index":615,"title":{},"body":{"injectables/LocationService.html":{},"injectables/NetworkService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["geoloc",{"_index":619,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["geometri",{"_index":1568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gestur",{"_index":481,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["gesturehandl",{"_index":462,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["get",{"_index":325,"title":{"index.html":{},"license.html":{}},"body":{"classes/Edge.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getarea",{"_index":709,"title":{},"body":{"injectables/MapService.html":{}}}],["getassignmentmatrix",{"_index":873,"title":{},"body":{"injectables/NetworkService.html":{}}}],["getbound",{"_index":710,"title":{},"body":{"injectables/MapService.html":{}}}],["getcurrentposit",{"_index":622,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["getcurrentstep",{"_index":1366,"title":{},"body":{"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getedg",{"_index":298,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["geterror",{"_index":1368,"title":{},"body":{"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getformstep",{"_index":1299,"title":{},"body":{"components/WizardComponent.html":{}}}],["getgraph",{"_index":874,"title":{},"body":{"injectables/NetworkService.html":{}}}],["getincidencematrix",{"_index":328,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getlatlng",{"_index":623,"title":{},"body":{"injectables/LocationService.html":{}}}],["getlinkflow",{"_index":875,"title":{},"body":{"injectables/NetworkService.html":{}}}],["getmax",{"_index":1092,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["getmin",{"_index":1088,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["getnetwork",{"_index":876,"title":{},"body":{"injectables/NetworkService.html":{}}}],["getnod",{"_index":296,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getnode(nodeid",{"_index":302,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getpend",{"_index":1370,"title":{},"body":{"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getrel",{"_index":300,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getshortestpath",{"_index":530,"title":{},"body":{"classes/Graph.html":{}}}],["getshortestpaths(origin",{"_index":339,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getstep",{"_index":1364,"title":{},"body":{"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gettim",{"_index":877,"title":{},"body":{"injectables/NetworkService.html":{}}}],["gettrafficdata",{"_index":878,"title":{},"body":{"injectables/NetworkService.html":{}}}],["given",{"_index":739,"title":{},"body":{"injectables/MapService.html":{}}}],["go",{"_index":445,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"miscellaneous/enumerations.html":{}}}],["googl",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"index.html":{}}}],["google.maps.event.adddomlistener(window",{"_index":779,"title":{},"body":{"injectables/MapService.html":{}}}],["google.maps.event.trigger(this.map",{"_index":786,"title":{},"body":{"injectables/MapService.html":{}}}],["google.maps.geocod",{"_index":639,"title":{},"body":{"injectables/LocationService.html":{}}}],["google.maps.geocoderresult",{"_index":646,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["google.maps.geocoderstatu",{"_index":648,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["google.maps.geocoderstatus.ok",{"_index":649,"title":{},"body":{"injectables/LocationService.html":{}}}],["google.maps.geocoderstatus.zero_result",{"_index":1053,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["google.maps.infowindow",{"_index":755,"title":{},"body":{"injectables/MapService.html":{}}}],["google.maps.latlng",{"_index":724,"title":{},"body":{"injectables/MapService.html":{}}}],["google.maps.latlngbound",{"_index":802,"title":{},"body":{"injectables/MapService.html":{}}}],["google.maps.latlngboundsliter",{"_index":700,"title":{},"body":{"components/MapComponent.html":{},"injectables/MapService.html":{},"injectables/NetworkService.html":{}}}],["google.maps.latlngliter",{"_index":472,"title":{},"body":{"components/GoogleMapComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{}}}],["google.maps.map",{"_index":757,"title":{},"body":{"injectables/MapService.html":{}}}],["google.maps.map(el",{"_index":773,"title":{},"body":{"injectables/MapService.html":{}}}],["google.maps.maptypeid",{"_index":486,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["google.maps.maptypeid.roadmap",{"_index":682,"title":{},"body":{"components/MapComponent.html":{}}}],["google.maps.maptypestyl",{"_index":495,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["google.maps.rectangl",{"_index":759,"title":{},"body":{"injectables/MapService.html":{}}}],["googlemapcompon",{"_index":40,"title":{"components/GoogleMapComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["goon",{"_index":428,"title":{"classes/GoOn.html":{}},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["goon(data",{"_index":1323,"title":{},"body":{"injectables/WizardService.html":{}}}],["grant",{"_index":1481,"title":{},"body":{"license.html":{}}}],["graph",{"_index":292,"title":{"classes/Graph.html":{}},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"modules.html":{}}}],["greater",{"_index":963,"title":{},"body":{"injectables/NetworkService.html":{}}}],["guard.servic",{"_index":1132,"title":{},"body":{"modules/SharedModule.html":{},"components/UiComponent.html":{},"modules/UiRoutingModule.html":{}}}],["guard.service.t",{"_index":182,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"coverage.html":{}}}],["guard.service.ts:11",{"_index":191,"title":{},"body":{"injectables/CanDeactivateGuard.html":{}}}],["ha",{"_index":815,"title":{},"body":{"injectables/MapService.html":{}}}],["hammerj",{"_index":1443,"title":{},"body":{"dependencies.html":{}}}],["handl",{"_index":482,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["hasbackdrop",{"_index":1208,"title":{},"body":{"components/UiComponent.html":{}}}],["header",{"_index":929,"title":{},"body":{"injectables/NetworkService.html":{}}}],["headlin",{"_index":568,"title":{},"body":{"components/HomeComponent.html":{}}}],["hectar",{"_index":727,"title":{},"body":{"injectables/MapService.html":{},"miscellaneous/variables.html":{}}}],["herebi",{"_index":1480,"title":{},"body":{"license.html":{}}}],["highway",{"_index":1007,"title":{},"body":{"injectables/NetworkService.html":{},"miscellaneous/variables.html":{}}}],["hold",{"_index":945,"title":{},"body":{"injectables/NetworkService.html":{}}}],["holder",{"_index":1515,"title":{},"body":{"license.html":{}}}],["home",{"_index":140,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{}}}],["home'},{'nam",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["home.component.html",{"_index":545,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":544,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.transit",{"_index":555,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.compon",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["home_transit",{"_index":554,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["homecompon",{"_index":43,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hour",{"_index":1110,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{},"miscellaneous/variables.html":{}}}],["html",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["html5",{"_index":633,"title":{},"body":{"injectables/LocationService.html":{}}}],["htmlelement",{"_index":498,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"injectables/MapService.html":{}}}],["http",{"_index":884,"title":{},"body":{"injectables/NetworkService.html":{}}}],["httpclient",{"_index":882,"title":{},"body":{"injectables/NetworkService.html":{}}}],["httpclientmodul",{"_index":1122,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["httpheader",{"_index":918,"title":{},"body":{"injectables/NetworkService.html":{}}}],["httpheaders().set('cont",{"_index":930,"title":{},"body":{"injectables/NetworkService.html":{}}}],["https://developers.google.com/maps/documentation/javascript/styl",{"_index":1574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://lz4.overpass",{"_index":1544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://wiki.openstreetmap.org/wiki/key:highway",{"_index":1548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["identifi",{"_index":614,"title":{},"body":{"injectables/LocationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["implement",{"_index":114,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["impli",{"_index":1510,"title":{},"body":{"license.html":{}}}],["import",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["incid",{"_index":326,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["includ",{"_index":1490,"title":{},"body":{"license.html":{}}}],["incomingedg",{"_index":277,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["index",{"_index":116,"title":{"index.html":{}},"body":{"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"classes/Clock.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["infodialogcompon",{"_index":45,"title":{"components/InfoDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["infowindow",{"_index":705,"title":{},"body":{"injectables/MapService.html":{}}}],["inherit",{"_index":153,"title":{},"body":{"classes/BaseComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["init",{"_index":505,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["initi",{"_index":484,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{},"interfaces/Step.html":{},"miscellaneous/variables.html":{}}}],["initialwizardst",{"_index":1355,"title":{},"body":{"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initmap",{"_index":711,"title":{},"body":{"injectables/MapService.html":{}}}],["initmap(el",{"_index":736,"title":{},"body":{"injectables/MapService.html":{}}}],["inject",{"_index":184,"title":{"injectables/CanDeactivateGuard.html":{},"injectables/DemandService.html":{},"injectables/LocationService.html":{},"injectables/MapService.html":{},"injectables/NetworkService.html":{},"injectables/SimulationService.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{}},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"injectables/DemandService.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"injectables/MapService.html":{},"components/MessageArchivedComponent.html":{},"injectables/NetworkService.html":{},"injectables/SimulationService.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{},"coverage.html":{},"overview.html":{}}}],["inject(mat_dialog_data",{"_index":606,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["input",{"_index":198,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{}}}],["insert",{"_index":1111,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["insid",{"_index":738,"title":{},"body":{"injectables/MapService.html":{}}}],["instal",{"_index":1465,"title":{},"body":{"index.html":{}}}],["installrun",{"_index":1472,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":704,"title":{},"body":{"injectables/MapService.html":{},"injectables/NetworkService.html":{}}}],["instanti",{"_index":896,"title":{},"body":{"injectables/NetworkService.html":{}}}],["interfac",{"_index":178,"title":{"interfaces/CanComponentDeactivate.html":{},"interfaces/Member.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"interfaces/UiState.html":{},"interfaces/WizardState.html":{}},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"interfaces/UiState.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["internet",{"_index":405,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["interpret",{"_index":894,"title":{},"body":{"injectables/NetworkService.html":{}}}],["invalid_request",{"_index":1055,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["invoc",{"_index":910,"title":{},"body":{"injectables/NetworkService.html":{}}}],["invok",{"_index":644,"title":{},"body":{"injectables/LocationService.html":{}}}],["js",{"_index":1441,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":994,"title":{},"body":{"injectables/NetworkService.html":{}}}],["k",{"_index":333,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["key",{"_index":261,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":1508,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["l",{"_index":584,"title":{},"body":{"components/HomeComponent.html":{}}}],["labels.icon",{"_index":1572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["languag",{"_index":905,"title":{},"body":{"injectables/NetworkService.html":{}}}],["last",{"_index":962,"title":{},"body":{"injectables/NetworkService.html":{}}}],["lat",{"_index":275,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["latitud",{"_index":272,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["latlng",{"_index":620,"title":{},"body":{"injectables/LocationService.html":{},"injectables/MapService.html":{}}}],["layout",{"_index":1127,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["legend",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangeOfConditionsComponent.html":{},"modules/DemandModule.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"modules/LocationModule.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["letter",{"_index":558,"title":{},"body":{"components/HomeComponent.html":{}}}],["level",{"_index":489,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["liabil",{"_index":1519,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":1516,"title":{},"body":{"license.html":{}}}],["licens",{"_index":1477,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":693,"title":{},"body":{"components/MapComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["line",{"_index":579,"title":{},"body":{"components/HomeComponent.html":{}}}],["linear",{"_index":576,"title":{},"body":{"components/HomeComponent.html":{}}}],["link",{"_index":222,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["linkflow",{"_index":233,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["list",{"_index":942,"title":{},"body":{"injectables/NetworkService.html":{}}}],["listen",{"_index":776,"title":{},"body":{"injectables/MapService.html":{}}}],["liter",{"_index":433,"title":{},"body":{"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/StepChanged.html":{}}}],["lng",{"_index":1049,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":120,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["loadchildren",{"_index":144,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["locat",{"_index":1031,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"injectables/WizardService.html":{}}}],["location.servic",{"_index":611,"title":{},"body":{"modules/LocationModule.html":{}}}],["location/location.modul",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["location/location.servic",{"_index":1041,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"injectables/WizardService.html":{}}}],["locationmodul",{"_index":81,"title":{"modules/LocationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LocationModule.html":{},"modules.html":{},"overview.html":{}}}],["locationservic",{"_index":609,"title":{"injectables/LocationService.html":{}},"body":{"modules/LocationModule.html":{},"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{},"injectables/WizardService.html":{},"coverage.html":{},"overview.html":{}}}],["lon",{"_index":276,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["longitud",{"_index":273,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["main",{"_index":1547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["manag",{"_index":1246,"title":{},"body":{"interfaces/UiState.html":{},"interfaces/WizardState.html":{}}}],["map",{"_index":456,"title":{},"body":{"components/GoogleMapComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"injectables/NetworkService.html":{},"injectables/WizardService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["map'},{'nam",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["map((respons",{"_index":939,"title":{},"body":{"injectables/NetworkService.html":{}}}],["map.compon",{"_index":1235,"title":{},"body":{"modules/UiModule.html":{}}}],["map.component.html",{"_index":661,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.scss",{"_index":660,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.t",{"_index":454,"title":{},"body":{"components/GoogleMapComponent.html":{},"coverage.html":{}}}],["map.component.ts:17",{"_index":473,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:26",{"_index":496,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:30",{"_index":475,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:34",{"_index":479,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:38",{"_index":487,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:42",{"_index":491,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:46",{"_index":492,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:50",{"_index":483,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:54",{"_index":470,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:56",{"_index":506,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:61",{"_index":504,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:71",{"_index":502,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:76",{"_index":499,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.servic",{"_index":508,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["map.styl",{"_index":678,"title":{},"body":{"components/MapComponent.html":{}}}],["map/googl",{"_index":1234,"title":{},"body":{"modules/UiModule.html":{}}}],["map/map.compon",{"_index":1233,"title":{},"body":{"modules/UiModule.html":{}}}],["map/map.servic",{"_index":1237,"title":{},"body":{"modules/UiModule.html":{},"injectables/WizardService.html":{}}}],["mapcompon",{"_index":47,"title":{"components/MapComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mapopt",{"_index":509,"title":{},"body":{"components/GoogleMapComponent.html":{},"injectables/MapService.html":{}}}],["mapservic",{"_index":468,"title":{"injectables/MapService.html":{}},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"modules/UiModule.html":{},"injectables/WizardService.html":{},"coverage.html":{},"overview.html":{}}}],["mapstyl",{"_index":677,"title":{},"body":{"components/MapComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["maptypeid",{"_index":463,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["mat_dialog_data",{"_index":604,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["mat_snack_bar_data",{"_index":859,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["matbuttonmodul",{"_index":837,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matcardmodul",{"_index":835,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["match",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"classes/Clock.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":1173,"title":{},"body":{"components/UiComponent.html":{}}}],["matdialogmodul",{"_index":845,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matdialogref",{"_index":599,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["material.modul",{"_index":1128,"title":{},"body":{"modules/SharedModule.html":{}}}],["materialmodul",{"_index":831,"title":{"modules/MaterialModule.html":{}},"body":{"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["math.round(a",{"_index":829,"title":{},"body":{"injectables/MapService.html":{}}}],["maticonmodul",{"_index":838,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["maticonregistri",{"_index":836,"title":{},"body":{"modules/MaterialModule.html":{}}}],["maticonregistry.addsvgicon",{"_index":848,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodul",{"_index":841,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matmenumodul",{"_index":839,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matprogressspinnermodul",{"_index":843,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matrix",{"_index":215,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["matsidenavmodul",{"_index":833,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matsnackbar",{"_index":1172,"title":{},"body":{"components/UiComponent.html":{}}}],["matsnackbarmodul",{"_index":842,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matstepp",{"_index":1294,"title":{},"body":{"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["matsteppermodul",{"_index":840,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattoolbarmodul",{"_index":834,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattooltipmodul",{"_index":844,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":1091,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["maximum",{"_index":488,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["maxzoom",{"_index":464,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["mean",{"_index":258,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["member",{"_index":264,"title":{"interfaces/Member.html":{}},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"coverage.html":{}}}],["memoizedselector",{"_index":1251,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["merchant",{"_index":1511,"title":{},"body":{"license.html":{}}}],["merg",{"_index":1493,"title":{},"body":{"license.html":{}}}],["messag",{"_index":393,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/UiComponent.html":{}}}],["messagearchivedcompon",{"_index":49,"title":{"components/MessageArchivedComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["metadata",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["method",{"_index":117,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"injectables/NetworkService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["min",{"_index":1087,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["minimum",{"_index":331,"title":{},"body":{"classes/Edge.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["minzoom",{"_index":465,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["miscellan",{"_index":1452,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1476,"title":{},"body":{"index.html":{},"license.html":{}}}],["model",{"_index":897,"title":{},"body":{"injectables/NetworkService.html":{},"interfaces/Step.html":{},"components/WizardComponent.html":{}}}],["models/actions/wizard.act",{"_index":1336,"title":{},"body":{"injectables/WizardService.html":{}}}],["models/base.compon",{"_index":376,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["models/reduc",{"_index":375,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["models/reducers/wizard.reduc",{"_index":1337,"title":{},"body":{"injectables/WizardService.html":{}}}],["models/wizard",{"_index":679,"title":{},"body":{"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["modifi",{"_index":1492,"title":{},"body":{"license.html":{}}}],["modul",{"_index":69,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/MaterialModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"modules/WeatherModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/MaterialModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithprovid",{"_index":1119,"title":{},"body":{"modules/SharedModule.html":{}}}],["moment",{"_index":1090,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["more",{"_index":288,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["more_vert",{"_index":849,"title":{},"body":{"modules/MaterialModule.html":{}}}],["motorway",{"_index":1549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mout",{"_index":1439,"title":{},"body":{"dependencies.html":{}}}],["mout/array/combin",{"_index":256,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["multi",{"_index":283,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["name",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPreloadingStrategy.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MessageArchivedComponent.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"miscellaneous/functions.html":{}}}],["navigate_next",{"_index":1076,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["navigator.geoloc",{"_index":1060,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["navigator.geolocation.getcurrentposit",{"_index":653,"title":{},"body":{"injectables/LocationService.html":{}}}],["ne",{"_index":728,"title":{},"body":{"injectables/MapService.html":{}}}],["ne.lat",{"_index":823,"title":{},"body":{"injectables/MapService.html":{}}}],["ne.lng",{"_index":824,"title":{},"body":{"injectables/MapService.html":{}}}],["network",{"_index":294,"title":{},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{},"injectables/WizardService.html":{}}}],["network.servic",{"_index":867,"title":{},"body":{"modules/NetworkModule.html":{}}}],["network/network.modul",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["network/network.servic",{"_index":373,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"injectables/WizardService.html":{}}}],["network/weather/weather.servic",{"_index":1333,"title":{},"body":{"injectables/WizardService.html":{}}}],["networkmodul",{"_index":82,"title":{"modules/NetworkModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NetworkModule.html":{},"modules.html":{},"overview.html":{}}}],["networkservic",{"_index":350,"title":{"injectables/NetworkService.html":{}},"body":{"components/EstimateOfDemandComponent.html":{},"modules/NetworkModule.html":{},"injectables/NetworkService.html":{},"components/SelectionOfTheAreaComponent.html":{},"injectables/WizardService.html":{},"coverage.html":{},"overview.html":{}}}],["new",{"_index":417,"title":{},"body":{"components/FooterComponent.html":{},"injectables/LocationService.html":{},"injectables/MapService.html":{},"injectables/NetworkService.html":{},"components/SelectionOfTheAreaComponent.html":{},"coverage.html":{}}}],["next",{"_index":1108,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["nextindex",{"_index":450,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["ng",{"_index":1219,"title":{},"body":{"modules/UiModule.html":{},"dependencies.html":{}}}],["ngafterviewinit",{"_index":547,"title":{},"body":{"components/HomeComponent.html":{}}}],["ngmodul",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/MaterialModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"modules/WeatherModule.html":{}}}],["ngonchang",{"_index":458,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["ngonchanges(chang",{"_index":501,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["ngondestroy",{"_index":158,"title":{},"body":{"classes/BaseComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["ngoninit",{"_index":159,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["ngrx",{"_index":438,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["ngrx/effect",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"modules/UiModule.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"components/MapComponent.html":{},"classes/Reset.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"interfaces/UiState.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"dependencies.html":{}}}],["ngzone",{"_index":718,"title":{},"body":{"injectables/MapService.html":{}}}],["node",{"_index":225,"title":{"classes/Node.html":{}},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"coverage.html":{}}}],["node(w",{"_index":1010,"title":{},"body":{"injectables/NetworkService.html":{}}}],["node.incomingedg",{"_index":318,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.j",{"_index":1466,"title":{},"body":{"index.html":{}}}],["node.lat",{"_index":310,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.lon",{"_index":312,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.nodeid",{"_index":305,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.outgoingedg",{"_index":321,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.tag",{"_index":315,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["nodeid",{"_index":274,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["nodes.find((valu",{"_index":967,"title":{},"body":{"injectables/NetworkService.html":{}}}],["nodesdegre",{"_index":946,"title":{},"body":{"injectables/NetworkService.html":{}}}],["nodesdegrees.get(nod",{"_index":952,"title":{},"body":{"injectables/NetworkService.html":{}}}],["nodesdegrees.set(nod",{"_index":953,"title":{},"body":{"injectables/NetworkService.html":{}}}],["noninfring",{"_index":1513,"title":{},"body":{"license.html":{}}}],["north",{"_index":729,"title":{},"body":{"injectables/MapService.html":{}}}],["notic",{"_index":1503,"title":{},"body":{"license.html":{}}}],["npm",{"_index":1467,"title":{},"body":{"index.html":{}}}],["null",{"_index":329,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"injectables/LocationService.html":{},"injectables/MapService.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":203,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["o/d",{"_index":214,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["object",{"_index":510,"title":{},"body":{"components/GoogleMapComponent.html":{},"injectables/MapService.html":{},"injectables/NetworkService.html":{},"miscellaneous/variables.html":{}}}],["object.keys(tags).map((key",{"_index":1012,"title":{},"body":{"injectables/NetworkService.html":{}}}],["observ",{"_index":128,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"injectables/LocationService.html":{},"injectables/MapService.html":{},"injectables/NetworkService.html":{},"components/UiComponent.html":{}}}],["observable.create((observ",{"_index":643,"title":{},"body":{"injectables/LocationService.html":{},"injectables/NetworkService.html":{}}}],["observer.complet",{"_index":651,"title":{},"body":{"injectables/LocationService.html":{},"injectables/NetworkService.html":{}}}],["observer.error('creategraph",{"_index":991,"title":{},"body":{"injectables/NetworkService.html":{}}}],["observer.error(error",{"_index":656,"title":{},"body":{"injectables/LocationService.html":{}}}],["observer.error(statu",{"_index":652,"title":{},"body":{"injectables/LocationService.html":{}}}],["observer.next(nul",{"_index":993,"title":{},"body":{"injectables/NetworkService.html":{}}}],["observer.next(posit",{"_index":654,"title":{},"body":{"injectables/LocationService.html":{}}}],["observer.next(result",{"_index":650,"title":{},"body":{"injectables/LocationService.html":{}}}],["obtain",{"_index":893,"title":{},"body":{"injectables/NetworkService.html":{},"license.html":{}}}],["of(nul",{"_index":133,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"injectables/NetworkService.html":{}}}],["offici",{"_index":1463,"title":{},"body":{"index.html":{}}}],["offset",{"_index":582,"title":{},"body":{"components/HomeComponent.html":{}}}],["on",{"_index":956,"title":{},"body":{"injectables/NetworkService.html":{}}}],["onchang",{"_index":455,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["ondestroy",{"_index":155,"title":{},"body":{"classes/BaseComponent.html":{},"components/MapComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["oninit",{"_index":154,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["opac",{"_index":572,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["opendialog",{"_index":1167,"title":{},"body":{"components/UiComponent.html":{}}}],["opendialog(data",{"_index":1179,"title":{},"body":{"components/UiComponent.html":{}}}],["opensnackbar",{"_index":1168,"title":{},"body":{"components/UiComponent.html":{}}}],["opensnackbar(messag",{"_index":1181,"title":{},"body":{"components/UiComponent.html":{}}}],["openweathermap",{"_index":1556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["oper",{"_index":359,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["option",{"_index":126,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"injectables/CanDeactivateGuard.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MessageArchivedComponent.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"miscellaneous/functions.html":{}}}],["origin",{"_index":234,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["otherwis",{"_index":1523,"title":{},"body":{"license.html":{}}}],["out",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/NetworkModule.html":{},"injectables/NetworkService.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"license.html":{},"overview.html":{}}}],["out:json",{"_index":995,"title":{},"body":{"injectables/NetworkService.html":{}}}],["outgoingedg",{"_index":278,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["output",{"_index":762,"title":{},"body":{"injectables/MapService.html":{},"injectables/NetworkService.html":{}}}],["outsid",{"_index":809,"title":{},"body":{"injectables/MapService.html":{}}}],["over_query_limit",{"_index":1056,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["overpass",{"_index":888,"title":{},"body":{"injectables/NetworkService.html":{}}}],["overpassapi",{"_index":1543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["overview",{"_index":1528,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owldatetimemodul",{"_index":1217,"title":{},"body":{"modules/UiModule.html":{}}}],["owlnativedatetimemodul",{"_index":1218,"title":{},"body":{"modules/UiModule.html":{}}}],["p",{"_index":822,"title":{},"body":{"injectables/MapService.html":{}}}],["packag",{"_index":1425,"title":{"dependencies.html":{}},"body":{}}],["pair",{"_index":327,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["panelclass",{"_index":1204,"title":{},"body":{"components/UiComponent.html":{}}}],["param",{"_index":338,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"injectables/LocationService.html":{},"injectables/MapService.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/WizardComponent.html":{}}}],["paramet",{"_index":124,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"injectables/CanDeactivateGuard.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MessageArchivedComponent.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":259,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"license.html":{}}}],["path",{"_index":138,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"modules/UiRoutingModule.html":{}}}],["pathmatch",{"_index":141,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/UiRoutingModule.html":{}}}],["payload",{"_index":430,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{}}}],["pend",{"_index":444,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["perform",{"_index":356,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["permiss",{"_index":1066,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"license.html":{}}}],["permit",{"_index":1499,"title":{},"body":{"license.html":{}}}],["person",{"_index":1484,"title":{},"body":{"license.html":{}}}],["pick",{"_index":1220,"title":{},"body":{"modules/UiModule.html":{},"dependencies.html":{}}}],["pipe",{"_index":938,"title":{},"body":{"injectables/NetworkService.html":{}}}],["platform",{"_index":1470,"title":{},"body":{"index.html":{}}}],["pleas",{"_index":1106,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["poi",{"_index":1571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["point",{"_index":269,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"injectables/MapService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["polygon",{"_index":765,"title":{},"body":{"injectables/MapService.html":{}}}],["portion",{"_index":1506,"title":{},"body":{"license.html":{}}}],["posit",{"_index":634,"title":{},"body":{"injectables/LocationService.html":{},"injectables/MapService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["position.coords.latitud",{"_index":1062,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["position.coords.longitud",{"_index":1063,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["positionerror",{"_index":655,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["preload",{"_index":112,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["preload(rout",{"_index":118,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["preloadingstrategi",{"_index":115,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{}}}],["prerequisit",{"_index":1469,"title":{},"body":{"index.html":{}}}],["primari",{"_index":1551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["privaci",{"_index":420,"title":{},"body":{"components/FooterComponent.html":{}}}],["privat",{"_index":295,"title":{},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["process",{"_index":403,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["product",{"_index":1559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":1456,"title":{},"body":{"index.html":{}}}],["promis",{"_index":185,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{}}}],["propag",{"_index":1147,"title":{},"body":{"injectables/SimulationService.html":{}}}],["properti",{"_index":156,"title":{},"body":{"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["propertynam",{"_index":513,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["provid",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/NetworkModule.html":{},"injectables/NetworkService.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"interfaces/WizardState.html":{},"license.html":{},"overview.html":{}}}],["public",{"_index":218,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"injectables/MapService.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"modules/SharedModule.html":{},"injectables/SimulationService.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{}}}],["publish",{"_index":1494,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":284,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"license.html":{}}}],["putinerror",{"_index":1318,"title":{},"body":{"injectables/WizardService.html":{}}}],["putinerror(error",{"_index":1325,"title":{},"body":{"injectables/WizardService.html":{}}}],["putonhold",{"_index":1319,"title":{},"body":{"injectables/WizardService.html":{}}}],["ql",{"_index":889,"title":{},"body":{"injectables/NetworkService.html":{}}}],["qs",{"_index":922,"title":{},"body":{"injectables/NetworkService.html":{},"dependencies.html":{}}}],["qs.stringifi",{"_index":1011,"title":{},"body":{"injectables/NetworkService.html":{}}}],["queri",{"_index":887,"title":{},"body":{"injectables/NetworkService.html":{}}}],["quit",{"_index":1196,"title":{},"body":{"components/UiComponent.html":{}}}],["reactiveformsmodul",{"_index":1124,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["readonli",{"_index":431,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{}}}],["real",{"_index":590,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["receiveact",{"_index":160,"title":{},"body":{"classes/BaseComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["rectangl",{"_index":698,"title":{},"body":{"components/MapComponent.html":{},"injectables/MapService.html":{},"injectables/NetworkService.html":{}}}],["redirectto",{"_index":139,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reduc",{"_index":1238,"title":{},"body":{"modules/UiModule.html":{},"interfaces/UiState.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["reducers/wizard.reduc",{"_index":1253,"title":{},"body":{"interfaces/UiState.html":{}}}],["reduct",{"_index":1275,"title":{},"body":{"injectables/WeatherService.html":{}}}],["ref",{"_index":265,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["reffirstnod",{"_index":968,"title":{},"body":{"injectables/NetworkService.html":{}}}],["reffirstnode['lat",{"_index":970,"title":{},"body":{"injectables/NetworkService.html":{}}}],["reffirstnode['lon",{"_index":972,"title":{},"body":{"injectables/NetworkService.html":{}}}],["refsecondnod",{"_index":966,"title":{},"body":{"injectables/NetworkService.html":{}}}],["refsecondnode['lat",{"_index":979,"title":{},"body":{"injectables/NetworkService.html":{}}}],["refsecondnode['lon",{"_index":981,"title":{},"body":{"injectables/NetworkService.html":{}}}],["reiter",{"_index":909,"title":{},"body":{"injectables/NetworkService.html":{}}}],["relat",{"_index":282,"title":{"classes/Relation.html":{}},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"coverage.html":{}}}],["relation'",{"_index":263,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["relationid",{"_index":289,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["relationship",{"_index":287,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["remov",{"_index":954,"title":{},"body":{"injectables/NetworkService.html":{},"injectables/WizardService.html":{}}}],["removefromwait",{"_index":1320,"title":{},"body":{"injectables/WizardService.html":{}}}],["repres",{"_index":267,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["request",{"_index":402,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"injectables/NetworkService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["request_deni",{"_index":1057,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["requir",{"_index":471,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{},"index.html":{}}}],["reset",{"_index":86,"title":{"classes/Reset.html":{}},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/GoOn.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"injectables/MapService.html":{},"modules/NetworkModule.html":{},"injectables/NetworkService.html":{},"classes/Reset.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["resetmap",{"_index":767,"title":{},"body":{"injectables/MapService.html":{}}}],["residenti",{"_index":1555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resiz",{"_index":712,"title":{},"body":{"injectables/MapService.html":{}}}],["resourc",{"_index":895,"title":{},"body":{"injectables/NetworkService.html":{}}}],["respect",{"_index":1009,"title":{},"body":{"injectables/NetworkService.html":{}}}],["respons",{"_index":613,"title":{},"body":{"injectables/LocationService.html":{},"injectables/NetworkService.html":{}}}],["restor",{"_index":787,"title":{},"body":{"injectables/MapService.html":{}}}],["restrict",{"_index":1489,"title":{},"body":{"license.html":{}}}],["result",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"classes/Clock.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results[0].geometry.location.lat",{"_index":1048,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["results[0].geometry.location.lng",{"_index":1050,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["return",{"_index":127,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["right",{"_index":1491,"title":{},"body":{"license.html":{}}}],["road",{"_index":1005,"title":{},"body":{"injectables/NetworkService.html":{},"miscellaneous/variables.html":{}}}],["roadmap",{"_index":485,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["roberto",{"_index":426,"title":{},"body":{"components/FooterComponent.html":{},"license.html":{}}}],["roberto&nbsp;simonetti",{"_index":424,"title":{},"body":{"components/FooterComponent.html":{}}}],["role",{"_index":266,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["root",{"_index":12,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'nam",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["rout",{"_index":119,"title":{"routes.html":{}},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"injectables/NetworkService.html":{},"modules/UiRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["route.data",{"_index":131,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["route.data.preload",{"_index":132,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["router",{"_index":1170,"title":{},"body":{"components/UiComponent.html":{}}}],["routermodul",{"_index":135,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UiRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["routermodule.forchild(rout",{"_index":1242,"title":{},"body":{"modules/UiRoutingModule.html":{}}}],["routermodule.forroot(rout",{"_index":148,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.modul",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"modules/UiModule.html":{}}}],["routing.module.t",{"_index":134,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/UiRoutingModule.html":{}}}],["run",{"_index":808,"title":{},"body":{"injectables/MapService.html":{}}}],["rxj",{"_index":130,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"injectables/LocationService.html":{},"injectables/MapService.html":{},"injectables/NetworkService.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":371,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"injectables/NetworkService.html":{},"components/UiComponent.html":{}}}],["save",{"_index":782,"title":{},"body":{"injectables/MapService.html":{}}}],["scale",{"_index":569,"title":{},"body":{"components/HomeComponent.html":{}}}],["scalex",{"_index":580,"title":{},"body":{"components/HomeComponent.html":{}}}],["schedul",{"_index":346,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["search",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["search(address",{"_index":1037,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["searchfortheareacompon",{"_index":52,"title":{"components/SearchForTheAreaComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["secondari",{"_index":1552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secondedg",{"_index":976,"title":{},"body":{"injectables/NetworkService.html":{}}}],["secondnode.incomingedges.push(firstedg",{"_index":984,"title":{},"body":{"injectables/NetworkService.html":{}}}],["secondnode.lat",{"_index":978,"title":{},"body":{"injectables/NetworkService.html":{}}}],["secondnode.lon",{"_index":980,"title":{},"body":{"injectables/NetworkService.html":{}}}],["secondnode.outgoingedges.push(secondedg",{"_index":985,"title":{},"body":{"injectables/NetworkService.html":{}}}],["secondnode.tag",{"_index":982,"title":{},"body":{"injectables/NetworkService.html":{}}}],["select",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"injectables/NetworkService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["selectionchang",{"_index":1293,"title":{},"body":{"components/WizardComponent.html":{}}}],["selectionoftheareacompon",{"_index":55,"title":{"components/SelectionOfTheAreaComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["selector",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["sell",{"_index":1498,"title":{},"body":{"license.html":{}}}],["send",{"_index":817,"title":{},"body":{"injectables/MapService.html":{}}}],["sendact",{"_index":161,"title":{},"body":{"classes/BaseComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["sent",{"_index":172,"title":{},"body":{"classes/BaseComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["sequenc",{"_index":357,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["servic",{"_index":422,"title":{},"body":{"components/FooterComponent.html":{},"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["set",{"_index":330,"title":{},"body":{"classes/Edge.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"injectables/MapService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["setbound",{"_index":879,"title":{},"body":{"injectables/NetworkService.html":{}}}],["setbounds(bound",{"_index":912,"title":{},"body":{"injectables/NetworkService.html":{}}}],["setcent",{"_index":713,"title":{},"body":{"injectables/MapService.html":{}}}],["setcenter(latlng",{"_index":744,"title":{},"body":{"injectables/MapService.html":{}}}],["setinfowindow",{"_index":714,"title":{},"body":{"injectables/MapService.html":{}}}],["setinfowindow(cont",{"_index":746,"title":{},"body":{"injectables/MapService.html":{}}}],["setlatlng",{"_index":624,"title":{},"body":{"injectables/LocationService.html":{}}}],["setlatlng(latlng",{"_index":637,"title":{},"body":{"injectables/LocationService.html":{}}}],["settim",{"_index":880,"title":{},"body":{"injectables/NetworkService.html":{}}}],["settime(tim",{"_index":914,"title":{},"body":{"injectables/NetworkService.html":{}}}],["settimeout",{"_index":785,"title":{},"body":{"injectables/MapService.html":{}}}],["setzoom",{"_index":715,"title":{},"body":{"injectables/MapService.html":{}}}],["setzoom(zoom",{"_index":750,"title":{},"body":{"injectables/MapService.html":{}}}],["shall",{"_index":1504,"title":{},"body":{"license.html":{}}}],["shared/can",{"_index":1186,"title":{},"body":{"components/UiComponent.html":{},"modules/UiRoutingModule.html":{}}}],["shared/info",{"_index":1188,"title":{},"body":{"components/UiComponent.html":{}}}],["shared/messag",{"_index":1187,"title":{},"body":{"components/UiComponent.html":{}}}],["shared/shared.modul",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"modules/UiModule.html":{}}}],["sharedmodul",{"_index":83,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/UiModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["sharedmodule.forroot",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["shortest",{"_index":334,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["show",{"_index":546,"title":{},"body":{"components/HomeComponent.html":{},"components/MapComponent.html":{}}}],["showrect",{"_index":716,"title":{},"body":{"injectables/MapService.html":{}}}],["showrect(bound",{"_index":752,"title":{},"body":{"injectables/MapService.html":{}}}],["simonetti",{"_index":427,"title":{},"body":{"components/FooterComponent.html":{},"license.html":{}}}],["simplechang",{"_index":507,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["simul",{"_index":143,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"injectables/LocationService.html":{},"injectables/NetworkService.html":{},"components/SimulationComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["simulation'},{'nam",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["simulation.component.html",{"_index":1137,"title":{},"body":{"components/SimulationComponent.html":{}}}],["simulation.component.scss",{"_index":1136,"title":{},"body":{"components/SimulationComponent.html":{}}}],["simulation.servic",{"_index":1145,"title":{},"body":{"modules/SimulationModule.html":{}}}],["simulation/simulation.modul",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["simulation/simulation.servic",{"_index":1335,"title":{},"body":{"injectables/WizardService.html":{}}}],["simulationcompon",{"_index":57,"title":{"components/SimulationComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["simulationmodul",{"_index":84,"title":{"modules/SimulationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SimulationModule.html":{},"modules.html":{},"overview.html":{}}}],["simulationservic",{"_index":1143,"title":{"injectables/SimulationService.html":{}},"body":{"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"injectables/WizardService.html":{},"coverage.html":{},"overview.html":{}}}],["size",{"_index":778,"title":{},"body":{"injectables/MapService.html":{}}}],["snack",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["snackbar",{"_index":1171,"title":{},"body":{"components/UiComponent.html":{}}}],["softwar",{"_index":1486,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"classes/Clock.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["south",{"_index":731,"title":{},"body":{"injectables/MapService.html":{}}}],["specif",{"_index":268,"title":{},"body":{"classes/Edge.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"injectables/MapService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["src/.../app",{"_index":1533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":1536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":1535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../home.transition.t",{"_index":1537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../map.style.t",{"_index":1538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../material.module.t",{"_index":1539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../reducers.t",{"_index":1534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../shared.module.t",{"_index":1540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ui",{"_index":1542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../wizard.actions.t",{"_index":1454,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../wizard.reducer.t",{"_index":1455,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../wizard.t",{"_index":1541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":111,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.t",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/demand/demand.module.t",{"_index":211,"title":{},"body":{"modules/DemandModule.html":{}}}],["src/app/demand/demand.service.t",{"_index":213,"title":{},"body":{"injectables/DemandService.html":{},"coverage.html":{}}}],["src/app/demand/demand.service.ts:8",{"_index":219,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/home/home.component.t",{"_index":542,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:15",{"_index":549,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:19",{"_index":551,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:23",{"_index":550,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.transition.t",{"_index":1383,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/location/location.module.t",{"_index":610,"title":{},"body":{"modules/LocationModule.html":{}}}],["src/app/location/location.service.t",{"_index":612,"title":{},"body":{"injectables/LocationService.html":{},"coverage.html":{}}}],["src/app/location/location.service.ts:13",{"_index":640,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:15",{"_index":625,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:21",{"_index":636,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:32",{"_index":627,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:54",{"_index":632,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:69",{"_index":635,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:73",{"_index":638,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/network/graph.t",{"_index":221,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"coverage.html":{}}}],["src/app/network/graph.ts:109",{"_index":532,"title":{},"body":{"classes/Graph.html":{}}}],["src/app/network/graph.ts:111",{"_index":531,"title":{},"body":{"classes/Graph.html":{}}}],["src/app/network/graph.ts:113",{"_index":533,"title":{},"body":{"classes/Graph.html":{}}}],["src/app/network/graph.ts:115",{"_index":539,"title":{},"body":{"classes/Graph.html":{}}}],["src/app/network/graph.ts:119",{"_index":536,"title":{},"body":{"classes/Graph.html":{}}}],["src/app/network/graph.ts:123",{"_index":540,"title":{},"body":{"classes/Graph.html":{}}}],["src/app/network/graph.ts:127",{"_index":538,"title":{},"body":{"classes/Graph.html":{}}}],["src/app/network/graph.ts:131",{"_index":535,"title":{},"body":{"classes/Graph.html":{}}}],["src/app/network/graph.ts:144",{"_index":534,"title":{},"body":{"classes/Graph.html":{}}}],["src/app/network/graph.ts:151",{"_index":537,"title":{},"body":{"classes/Graph.html":{}}}],["src/app/network/graph.ts:161",{"_index":541,"title":{},"body":{"classes/Graph.html":{}}}],["src/app/network/graph.ts:29",{"_index":1018,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:31",{"_index":1016,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:33",{"_index":1017,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:35",{"_index":1019,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:37",{"_index":1015,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:39",{"_index":1014,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:52",{"_index":245,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:54",{"_index":247,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:56",{"_index":241,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:58",{"_index":248,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:60",{"_index":242,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:62",{"_index":243,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:64",{"_index":244,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:66",{"_index":249,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:68",{"_index":240,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:70",{"_index":246,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:72",{"_index":239,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:81",{"_index":250,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:92",{"_index":1022,"title":{},"body":{"classes/Relation.html":{}}}],["src/app/network/graph.ts:94",{"_index":1021,"title":{},"body":{"classes/Relation.html":{}}}],["src/app/network/graph.ts:96",{"_index":1020,"title":{},"body":{"classes/Relation.html":{}}}],["src/app/network/network.module.t",{"_index":865,"title":{},"body":{"modules/NetworkModule.html":{}}}],["src/app/network/network.service.t",{"_index":868,"title":{},"body":{"injectables/NetworkService.html":{},"coverage.html":{}}}],["src/app/network/network.service.ts:162",{"_index":908,"title":{},"body":{"injectables/NetworkService.html":{}}}],["src/app/network/network.service.ts:170",{"_index":902,"title":{},"body":{"injectables/NetworkService.html":{}}}],["src/app/network/network.service.ts:177",{"_index":900,"title":{},"body":{"injectables/NetworkService.html":{}}}],["src/app/network/network.service.ts:184",{"_index":890,"title":{},"body":{"injectables/NetworkService.html":{}}}],["src/app/network/network.service.ts:19",{"_index":917,"title":{},"body":{"injectables/NetworkService.html":{}}}],["src/app/network/network.service.ts:216",{"_index":886,"title":{},"body":{"injectables/NetworkService.html":{}}}],["src/app/network/network.service.ts:220",{"_index":899,"title":{},"body":{"injectables/NetworkService.html":{}}}],["src/app/network/network.service.ts:24",{"_index":916,"title":{},"body":{"injectables/NetworkService.html":{}}}],["src/app/network/network.service.ts:29",{"_index":883,"title":{},"body":{"injectables/NetworkService.html":{}}}],["src/app/network/network.service.ts:33",{"_index":911,"title":{},"body":{"injectables/NetworkService.html":{}}}],["src/app/network/network.service.ts:39",{"_index":901,"title":{},"body":{"injectables/NetworkService.html":{}}}],["src/app/network/network.service.ts:43",{"_index":913,"title":{},"body":{"injectables/NetworkService.html":{}}}],["src/app/network/network.service.ts:47",{"_index":906,"title":{},"body":{"injectables/NetworkService.html":{}}}],["src/app/network/network.service.ts:51",{"_index":915,"title":{},"body":{"injectables/NetworkService.html":{}}}],["src/app/network/network.service.ts:58",{"_index":903,"title":{},"body":{"injectables/NetworkService.html":{}}}],["src/app/network/network.service.ts:75",{"_index":892,"title":{},"body":{"injectables/NetworkService.html":{}}}],["src/app/network/weather/weather.module.t",{"_index":1272,"title":{},"body":{"modules/WeatherModule.html":{}}}],["src/app/network/weather/weather.service.t",{"_index":1274,"title":{},"body":{"injectables/WeatherService.html":{},"coverage.html":{}}}],["src/app/network/weather/weather.service.ts:8",{"_index":1277,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/shared/can",{"_index":180,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"coverage.html":{}}}],["src/app/shared/footer/footer.component.t",{"_index":411,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/shared/footer/footer.component.ts:10",{"_index":419,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/footer/footer.component.ts:12",{"_index":416,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/info",{"_index":593,"title":{},"body":{"components/InfoDialogComponent.html":{},"coverage.html":{}}}],["src/app/shared/material.module.t",{"_index":832,"title":{},"body":{"modules/MaterialModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/messag",{"_index":853,"title":{},"body":{"components/MessageArchivedComponent.html":{},"coverage.html":{}}}],["src/app/shared/shared.module.t",{"_index":1117,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/simulation/clock.t",{"_index":207,"title":{},"body":{"classes/Clock.html":{},"coverage.html":{}}}],["src/app/simulation/simulation.module.t",{"_index":1144,"title":{},"body":{"modules/SimulationModule.html":{}}}],["src/app/simulation/simulation.service.t",{"_index":1146,"title":{},"body":{"injectables/SimulationService.html":{},"coverage.html":{}}}],["src/app/simulation/simulation.service.ts:8",{"_index":1148,"title":{},"body":{"injectables/SimulationService.html":{}}}],["src/app/ui/map/googl",{"_index":453,"title":{},"body":{"components/GoogleMapComponent.html":{},"coverage.html":{}}}],["src/app/ui/map/map.component.t",{"_index":657,"title":{},"body":{"components/MapComponent.html":{},"coverage.html":{}}}],["src/app/ui/map/map.component.ts:23",{"_index":667,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:26",{"_index":674,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:28",{"_index":668,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:29",{"_index":669,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:30",{"_index":671,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:31",{"_index":672,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:32",{"_index":673,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:33",{"_index":670,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:34",{"_index":662,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:52",{"_index":663,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:61",{"_index":666,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:65",{"_index":664,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:95",{"_index":665,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.service.t",{"_index":703,"title":{},"body":{"injectables/MapService.html":{},"coverage.html":{}}}],["src/app/ui/map/map.service.ts:100",{"_index":735,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/ui/map/map.service.ts:110",{"_index":733,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/ui/map/map.service.ts:134",{"_index":747,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/ui/map/map.service.ts:146",{"_index":726,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/ui/map/map.service.ts:16",{"_index":758,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/ui/map/map.service.ts:18",{"_index":760,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/ui/map/map.service.ts:20",{"_index":756,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/ui/map/map.service.ts:22",{"_index":719,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/ui/map/map.service.ts:26",{"_index":742,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/ui/map/map.service.ts:38",{"_index":737,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/ui/map/map.service.ts:46",{"_index":745,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/ui/map/map.service.ts:53",{"_index":751,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/ui/map/map.service.ts:59",{"_index":743,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/ui/map/map.service.ts:70",{"_index":722,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/ui/map/map.service.ts:79",{"_index":753,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/ui/map/map.service.ts:96",{"_index":734,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/ui/map/map.style.t",{"_index":1406,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/ui/models/actions/wizard.actions.t",{"_index":429,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:20",{"_index":1157,"title":{},"body":{"classes/StepChanged.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:22",{"_index":1158,"title":{},"body":{"classes/StepChanged.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:28",{"_index":1159,"title":{},"body":{"classes/StepError.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:30",{"_index":1160,"title":{},"body":{"classes/StepError.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:36",{"_index":1161,"title":{},"body":{"classes/StepPending.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:38",{"_index":1162,"title":{},"body":{"classes/StepPending.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:44",{"_index":434,"title":{},"body":{"classes/GoOn.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:46",{"_index":435,"title":{},"body":{"classes/GoOn.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:52",{"_index":1023,"title":{},"body":{"classes/Reset.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:54",{"_index":1024,"title":{},"body":{"classes/Reset.html":{}}}],["src/app/ui/models/base.component.t",{"_index":150,"title":{},"body":{"classes/BaseComponent.html":{},"coverage.html":{}}}],["src/app/ui/models/base.component.ts:11",{"_index":168,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/base.component.ts:13",{"_index":166,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/base.component.ts:22",{"_index":174,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/base.component.ts:27",{"_index":169,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/base.component.ts:32",{"_index":173,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/base.component.ts:9",{"_index":165,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/reducers.t",{"_index":1244,"title":{},"body":{"interfaces/UiState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/ui/models/reducers/wizard.reducer.t",{"_index":1350,"title":{},"body":{"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/ui/models/wizard.t",{"_index":1156,"title":{},"body":{"interfaces/Step.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/ui/ui",{"_index":1241,"title":{},"body":{"modules/UiRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/ui/ui.component.t",{"_index":1163,"title":{},"body":{"components/UiComponent.html":{},"coverage.html":{}}}],["src/app/ui/ui.component.ts:24",{"_index":1184,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:26",{"_index":1174,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:36",{"_index":1178,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:49",{"_index":1177,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:55",{"_index":1175,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:65",{"_index":1183,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:74",{"_index":1176,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:78",{"_index":1182,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:86",{"_index":1180,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.module.t",{"_index":1216,"title":{},"body":{"modules/UiModule.html":{}}}],["src/app/ui/weather/weather.component.t",{"_index":1263,"title":{},"body":{"components/WeatherComponent.html":{},"coverage.html":{}}}],["src/app/ui/weather/weather.component.ts:12",{"_index":1268,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:8",{"_index":1267,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/wizard/chang",{"_index":192,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"coverage.html":{}}}],["src/app/ui/wizard/estim",{"_index":340,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"coverage.html":{}}}],["src/app/ui/wizard/search",{"_index":1025,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"coverage.html":{}}}],["src/app/ui/wizard/select",{"_index":1077,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{},"coverage.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.t",{"_index":1135,"title":{},"body":{"components/SimulationComponent.html":{},"coverage.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:11",{"_index":1139,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:13",{"_index":1138,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:17",{"_index":1140,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.t",{"_index":1149,"title":{},"body":{"components/StatisticsComponent.html":{},"coverage.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:11",{"_index":1154,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:13",{"_index":1153,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:17",{"_index":1155,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/wizard.component.t",{"_index":1278,"title":{},"body":{"components/WizardComponent.html":{},"coverage.html":{}}}],["src/app/ui/wizard/wizard.component.ts:20",{"_index":1296,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:22",{"_index":1297,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:24",{"_index":1300,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:28",{"_index":1286,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:36",{"_index":1289,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:66",{"_index":1288,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:76",{"_index":1292,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:88",{"_index":1287,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.service.t",{"_index":1317,"title":{},"body":{"injectables/WizardService.html":{},"coverage.html":{}}}],["src/app/ui/wizard/wizard.service.ts:19",{"_index":1332,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:21",{"_index":1322,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:39",{"_index":1331,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:46",{"_index":1326,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:53",{"_index":1327,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:60",{"_index":1328,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:67",{"_index":1324,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:74",{"_index":1329,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/environments/environment.prod.t",{"_index":1420,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":1422,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/index.html",{"_index":1471,"title":{},"body":{"index.html":{}}}],["start",{"_index":592,"title":{"index.html":{},"license.html":{}},"body":{"components/HomeComponent.html":{}}}],["startrun",{"_index":1473,"title":{},"body":{"index.html":{}}}],["state",{"_index":1044,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["state.currentstep",{"_index":1367,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["state.error",{"_index":1369,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["state.pend",{"_index":1371,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["state.step",{"_index":1365,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["state.steps[action.payload.index",{"_index":1359,"title":{},"body":{"interfaces/WizardState.html":{}}}],["state.wizard",{"_index":1258,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["statement",{"_index":1373,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1133,"title":{},"body":{"modules/SharedModule.html":{}}}],["statist",{"_index":1150,"title":{},"body":{"components/StatisticsComponent.html":{},"components/WizardComponent.html":{}}}],["statistics'},{'nam",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["statistics.component.html",{"_index":1152,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["statistics.component.scss",{"_index":1151,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["statisticscompon",{"_index":59,"title":{"components/StatisticsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["statu",{"_index":647,"title":{},"body":{"injectables/LocationService.html":{}}}],["step",{"_index":437,"title":{"interfaces/Step.html":{}},"body":{"classes/GoOn.html":{},"components/MapComponent.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/UiState.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["stepchang",{"_index":441,"title":{"classes/StepChanged.html":{}},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["stepclick",{"_index":1283,"title":{},"body":{"components/WizardComponent.html":{}}}],["stepclick(ev",{"_index":1290,"title":{},"body":{"components/WizardComponent.html":{}}}],["steperror",{"_index":442,"title":{"classes/StepError.html":{}},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["steppend",{"_index":443,"title":{"classes/StepPending.html":{}},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["stepper",{"_index":1281,"title":{},"body":{"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["stepperselectionev",{"_index":1291,"title":{},"body":{"components/WizardComponent.html":{}}}],["steps[0",{"_index":690,"title":{},"body":{"components/MapComponent.html":{}}}],["steps[this.index",{"_index":1103,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["store",{"_index":348,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["storemodul",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"modules/UiModule.html":{}}}],["storemodule.forfeature('ui",{"_index":1239,"title":{},"body":{"modules/UiModule.html":{}}}],["storemodule.forroot",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["strada",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["strategi",{"_index":136,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["strategy.t",{"_index":113,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"coverage.html":{}}}],["strategy.ts:6",{"_index":123,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["stream",{"_index":386,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["string",{"_index":262,"title":{},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["structur",{"_index":285,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["style",{"_index":466,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"miscellaneous/variables.html":{}}}],["styler",{"_index":1569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["styleurl",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["subject",{"_index":1501,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":1496,"title":{},"body":{"license.html":{}}}],["subscrib",{"_index":170,"title":{},"body":{"classes/BaseComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["subscript",{"_index":157,"title":{},"body":{"classes/BaseComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["subscription.unsubscrib",{"_index":177,"title":{},"body":{"classes/BaseComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["substanti",{"_index":1505,"title":{},"body":{"license.html":{}}}],["super",{"_index":377,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["support",{"_index":1073,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"modules.html":{}}}],["sure",{"_index":1194,"title":{},"body":{"components/UiComponent.html":{}}}],["surfac",{"_index":271,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["svg",{"_index":1525,"title":{},"body":{"modules.html":{}}}],["sw",{"_index":725,"title":{},"body":{"injectables/MapService.html":{}}}],["sw.lat",{"_index":825,"title":{},"body":{"injectables/MapService.html":{}}}],["sw.lng",{"_index":826,"title":{},"body":{"injectables/MapService.html":{}}}],["switch",{"_index":394,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"interfaces/WizardState.html":{}}}],["switchmap",{"_index":370,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["switchmap((respons",{"_index":388,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["tabl",{"_index":1424,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1423,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":235,"title":{"interfaces/Tag.html":{}},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"coverage.html":{}}}],["tags[key",{"_index":1013,"title":{},"body":{"injectables/NetworkService.html":{}}}],["tap",{"_index":1185,"title":{},"body":{"components/UiComponent.html":{}}}],["tap((dialogresult",{"_index":1198,"title":{},"body":{"components/UiComponent.html":{}}}],["target",{"_index":567,"title":{},"body":{"components/HomeComponent.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["templateurl",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["term",{"_index":421,"title":{},"body":{"components/FooterComponent.html":{}}}],["tertiari",{"_index":1553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test",{"_index":1474,"title":{},"body":{"index.html":{}}}],["testlicens",{"_index":1475,"title":{},"body":{"index.html":{}}}],["text",{"_index":559,"title":{},"body":{"components/HomeComponent.html":{}}}],["text.split",{"_index":561,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.area.asobserv",{"_index":801,"title":{},"body":{"injectables/MapService.html":{}}}],["this.area.next(a",{"_index":818,"title":{},"body":{"injectables/MapService.html":{}}}],["this.area.next(nul",{"_index":771,"title":{},"body":{"injectables/MapService.html":{}}}],["this.bound",{"_index":925,"title":{},"body":{"injectables/NetworkService.html":{}}}],["this.bounds.east",{"_index":1003,"title":{},"body":{"injectables/NetworkService.html":{}}}],["this.bounds.north",{"_index":1002,"title":{},"body":{"injectables/NetworkService.html":{}}}],["this.bounds.south",{"_index":1000,"title":{},"body":{"injectables/NetworkService.html":{}}}],["this.bounds.west",{"_index":1001,"title":{},"body":{"injectables/NetworkService.html":{}}}],["this.buildbody(queri",{"_index":936,"title":{},"body":{"injectables/NetworkService.html":{}}}],["this.buildqueri",{"_index":934,"title":{},"body":{"injectables/NetworkService.html":{}}}],["this.calcarea(n",{"_index":814,"title":{},"body":{"injectables/MapService.html":{}}}],["this.cent",{"_index":519,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.checkrect",{"_index":799,"title":{},"body":{"injectables/MapService.html":{}}}],["this.createmap(el",{"_index":512,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["this.demand.reset",{"_index":1346,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.dialog.open(infodialogcompon",{"_index":1205,"title":{},"body":{"components/UiComponent.html":{}}}],["this.disabledefaultui",{"_index":520,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.disabledoubleclickzoom",{"_index":521,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.edg",{"_index":299,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.edgeid",{"_index":281,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.edges.push(edg",{"_index":324,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.elementref.nativeelement.queryselector('#map",{"_index":511,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["this.elementref.nativeelement.queryselector('.headlin",{"_index":557,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.extracttags(reffirstnode['tag",{"_index":974,"title":{},"body":{"injectables/NetworkService.html":{}}}],["this.extracttags(refsecondnode['tag",{"_index":983,"title":{},"body":{"injectables/NetworkService.html":{}}}],["this.formbuilder.array",{"_index":1307,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.formbuilder.group",{"_index":1306,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.formgroup.get('bounds').setvalue(steps[this.index]['data']['bound",{"_index":1104,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.formgroup.get('center').setvalu",{"_index":1047,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.geocod",{"_index":641,"title":{},"body":{"injectables/LocationService.html":{}}}],["this.geocoder.geocod",{"_index":645,"title":{},"body":{"injectables/LocationService.html":{}}}],["this.gesturehandl",{"_index":525,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.getnode(node.nodeid",{"_index":308,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.graph",{"_index":924,"title":{},"body":{"injectables/NetworkService.html":{}}}],["this.graph.addedge(firstedg",{"_index":988,"title":{},"body":{"injectables/NetworkService.html":{}}}],["this.graph.addedge(secondedg",{"_index":989,"title":{},"body":{"injectables/NetworkService.html":{}}}],["this.graph.addorupdatenode(firstnod",{"_index":986,"title":{},"body":{"injectables/NetworkService.html":{}}}],["this.graph.addorupdatenode(secondnod",{"_index":987,"title":{},"body":{"injectables/NetworkService.html":{}}}],["this.http.post(url",{"_index":937,"title":{},"body":{"injectables/NetworkService.html":{}}}],["this.index",{"_index":383,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{}}}],["this.infowindow",{"_index":800,"title":{},"body":{"injectables/MapService.html":{}}}],["this.infowindow.clos",{"_index":770,"title":{},"body":{"injectables/MapService.html":{}}}],["this.infowindow.open(this.map",{"_index":821,"title":{},"body":{"injectables/MapService.html":{}}}],["this.infowindow.setcontent(cont",{"_index":819,"title":{},"body":{"injectables/MapService.html":{}}}],["this.infowindow.setposition(posit",{"_index":820,"title":{},"body":{"injectables/MapService.html":{}}}],["this.latlng",{"_index":642,"title":{},"body":{"injectables/LocationService.html":{}}}],["this.location.codeaddress(address).foreach",{"_index":1046,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.location.getcurrentposition().subscrib",{"_index":1061,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.location.reset",{"_index":1343,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.location.setlatlng(this.formgroup.get('center').valu",{"_index":1043,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.map",{"_index":772,"title":{},"body":{"injectables/MapService.html":{}}}],["this.map.buildbounds(this.cent",{"_index":701,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.getcent",{"_index":783,"title":{},"body":{"injectables/MapService.html":{}}}],["this.map.initmap(el",{"_index":518,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["this.map.panto(latlng",{"_index":780,"title":{},"body":{"injectables/MapService.html":{}}}],["this.map.reset",{"_index":1348,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.map.setcenter(latlng",{"_index":788,"title":{},"body":{"injectables/MapService.html":{}}}],["this.map.setcenter(this.cent",{"_index":515,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["this.map.setzoom(this.zoom",{"_index":517,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["this.map.setzoom(zoom",{"_index":781,"title":{},"body":{"injectables/MapService.html":{}}}],["this.map.showrect(bound",{"_index":702,"title":{},"body":{"components/MapComponent.html":{}}}],["this.maptypeid",{"_index":522,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.maxzoom",{"_index":523,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.min.getd",{"_index":1097,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.min.getfullyear",{"_index":1095,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.min.gethour",{"_index":1098,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.min.getminut",{"_index":1100,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.min.getmonth",{"_index":1096,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.minzoom",{"_index":524,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.network.creategraph(respons",{"_index":389,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.network.getnetwork().pip",{"_index":387,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.network.gettrafficdata",{"_index":390,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.network.reset",{"_index":1344,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.network.setbounds(this.formgroup.get('bounds').valu",{"_index":1101,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.network.settime(this.formgroup.get('time').valu",{"_index":1102,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.nod",{"_index":297,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.nodeid",{"_index":280,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.nodes.find((nod",{"_index":304,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.nodes.push(nod",{"_index":322,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.opendialog('ar",{"_index":1193,"title":{},"body":{"components/UiComponent.html":{}}}],["this.opensnackbar(error",{"_index":1192,"title":{},"body":{"components/UiComponent.html":{}}}],["this.pend",{"_index":1190,"title":{},"body":{"components/UiComponent.html":{}}}],["this.receiveact",{"_index":379,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["this.rectangl",{"_index":795,"title":{},"body":{"injectables/MapService.html":{}}}],["this.rectangle.addlistener('bounds_chang",{"_index":798,"title":{},"body":{"injectables/MapService.html":{}}}],["this.rectangle.getbound",{"_index":803,"title":{},"body":{"injectables/MapService.html":{}}}],["this.rectangle.getbounds().getnortheast",{"_index":812,"title":{},"body":{"injectables/MapService.html":{}}}],["this.rectangle.getbounds().getsouthwest",{"_index":813,"title":{},"body":{"injectables/MapService.html":{}}}],["this.rectangle.setmap(nul",{"_index":769,"title":{},"body":{"injectables/MapService.html":{}}}],["this.rectangle.setmap(this.map",{"_index":797,"title":{},"body":{"injectables/MapService.html":{}}}],["this.rel",{"_index":301,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.relationid",{"_index":291,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.res",{"_index":774,"title":{},"body":{"injectables/MapService.html":{}}}],["this.resetmap.emit(nul",{"_index":768,"title":{},"body":{"injectables/MapService.html":{}}}],["this.router.navigate(['/hom",{"_index":1201,"title":{},"body":{"components/UiComponent.html":{}}}],["this.schedul",{"_index":384,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.sendact",{"_index":380,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["this.setinfowindow(cont",{"_index":816,"title":{},"body":{"injectables/MapService.html":{}}}],["this.show",{"_index":586,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.simulation.reset",{"_index":1347,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.snackbar.openfromcomponent(messagearchivedcompon",{"_index":1202,"title":{},"body":{"components/UiComponent.html":{}}}],["this.stat",{"_index":1339,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.stepp",{"_index":1312,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.stepper.reset",{"_index":1349,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.store.dispatch",{"_index":1342,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.store.pipe(select(fromui.wizardstate)).subscribe((st",{"_index":1338,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.styl",{"_index":526,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.subscriptions.foreach((subscript",{"_index":176,"title":{},"body":{"classes/BaseComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["this.subscriptions.push(stream.subscrib",{"_index":391,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.subscriptions.push(this.formgroup.valuechanges.subscrib",{"_index":1042,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["this.subscriptions.push(this.map.getarea().subscribe((area",{"_index":694,"title":{},"body":{"components/MapComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromui.currentstep)).subscribe((currentstep",{"_index":381,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromui.error)).subscribe((error",{"_index":1191,"title":{},"body":{"components/UiComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromui.pending)).subscribe((pend",{"_index":1189,"title":{},"body":{"components/UiComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromui.steps)).subscribe((step",{"_index":688,"title":{},"body":{"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["this.tim",{"_index":926,"title":{},"body":{"injectables/NetworkService.html":{}}}],["this.valuechang",{"_index":378,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["this.weather.reset",{"_index":1345,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.wizard.goon",{"_index":1315,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.wizard.putinerror(\"brows",{"_index":1071,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.putinerror('invalid",{"_index":1059,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.putinerror('zero",{"_index":1054,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.putinerror(messag",{"_index":408,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.putonhold",{"_index":385,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.removefromwait",{"_index":410,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.wizard.reset",{"_index":409,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/UiComponent.html":{}}}],["this.wizard.state.currentstep",{"_index":689,"title":{},"body":{"components/MapComponent.html":{}}}],["this.wizard.state.steps[0].data.cent",{"_index":691,"title":{},"body":{"components/MapComponent.html":{}}}],["this.wizard.state.steps[1",{"_index":696,"title":{},"body":{"components/MapComponent.html":{}}}],["this.wizard.stepp",{"_index":1311,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.wizard.updatestep(this.formgroup.valu",{"_index":1051,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.wizardform",{"_index":1305,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.wizardform.get('formstep",{"_index":1304,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.wizardform.get('formsteps').get([index]).valu",{"_index":1316,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.zone.run",{"_index":811,"title":{},"body":{"injectables/MapService.html":{}}}],["this.zoom",{"_index":527,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["through",{"_index":617,"title":{},"body":{"injectables/LocationService.html":{}}}],["throwerror",{"_index":920,"title":{},"body":{"injectables/NetworkService.html":{}}}],["throwerror(error",{"_index":941,"title":{},"body":{"injectables/NetworkService.html":{}}}],["time",{"_index":591,"title":{},"body":{"components/HomeComponent.html":{},"injectables/NetworkService.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WizardComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["timelimit",{"_index":1577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["timeout",{"_index":996,"title":{},"body":{"injectables/NetworkService.html":{},"components/SearchForTheAreaComponent.html":{},"miscellaneous/variables.html":{}}}],["todo",{"_index":1340,"title":{},"body":{"injectables/WizardService.html":{}}}],["tort",{"_index":1522,"title":{},"body":{"license.html":{}}}],["traffic",{"_index":216,"title":{},"body":{"injectables/DemandService.html":{},"components/HomeComponent.html":{},"injectables/NetworkService.html":{},"injectables/SimulationService.html":{},"index.html":{}}}],["transit",{"_index":1573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('void",{"_index":1562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatez",{"_index":574,"title":{},"body":{"components/HomeComponent.html":{}}}],["transport",{"_index":293,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["tri",{"_index":398,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"injectables/LocationService.html":{},"injectables/NetworkService.html":{}}}],["trigger",{"_index":784,"title":{},"body":{"injectables/MapService.html":{}}}],["trigger('hometransit",{"_index":1561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":190,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/UiComponent.html":{},"injectables/WizardService.html":{},"miscellaneous/variables.html":{}}}],["trunk",{"_index":1550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["turf/area",{"_index":764,"title":{},"body":{"injectables/MapService.html":{},"dependencies.html":{}}}],["turf/help",{"_index":766,"title":{},"body":{"injectables/MapService.html":{},"dependencies.html":{}}}],["two",{"_index":224,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["type",{"_index":125,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealias",{"_index":1531,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["ui",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["ui'},{'nam",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["ui.compon",{"_index":1222,"title":{},"body":{"modules/UiModule.html":{},"modules/UiRoutingModule.html":{}}}],["ui.component.html",{"_index":1165,"title":{},"body":{"components/UiComponent.html":{}}}],["ui.component.scss",{"_index":1164,"title":{},"body":{"components/UiComponent.html":{}}}],["ui/ui.module#uimodul",{"_index":145,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["uicompon",{"_index":61,"title":{"components/UiComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uiconfig",{"_index":680,"title":{},"body":{"components/MapComponent.html":{},"injectables/MapService.html":{},"components/SelectionOfTheAreaComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uiconfig.areaminlimit",{"_index":695,"title":{},"body":{"components/MapComponent.html":{}}}],["uiconfig.map.cent",{"_index":686,"title":{},"body":{"components/MapComponent.html":{}}}],["uiconfig.map.zoom",{"_index":687,"title":{},"body":{"components/MapComponent.html":{}}}],["uiconfig.timelimit",{"_index":1099,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["uimodul",{"_index":1210,"title":{"modules/UiModule.html":{}},"body":{"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["uiroutingmodul",{"_index":1215,"title":{"modules/UiRoutingModule.html":{}},"body":{"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["uistat",{"_index":1243,"title":{"interfaces/UiState.html":{}},"body":{"interfaces/UiState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unavail",{"_index":1069,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["unclassifi",{"_index":1554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["undefin",{"_index":303,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/functions.html":{}}}],["under",{"_index":1457,"title":{},"body":{"index.html":{}}}],["union",{"_index":1004,"title":{},"body":{"injectables/NetworkService.html":{}}}],["unknown_error",{"_index":1058,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["updat",{"_index":503,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{},"injectables/NetworkService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{}}}],["updateon",{"_index":1309,"title":{},"body":{"components/WizardComponent.html":{}}}],["updatestep",{"_index":1321,"title":{},"body":{"injectables/WizardService.html":{}}}],["updatestep(data",{"_index":1330,"title":{},"body":{"injectables/WizardService.html":{}}}],["urban",{"_index":587,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["url",{"_index":927,"title":{},"body":{"injectables/NetworkService.html":{},"miscellaneous/variables.html":{}}}],["urlencod",{"_index":933,"title":{},"body":{"injectables/NetworkService.html":{}}}],["us",{"_index":589,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":1245,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["valid",{"_index":1112,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{},"components/WizardComponent.html":{}}}],["validators.requir",{"_index":1308,"title":{},"body":{"components/WizardComponent.html":{}}}],["valu",{"_index":164,"title":{},"body":{"classes/BaseComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value['id",{"_index":964,"title":{},"body":{"injectables/NetworkService.html":{}}}],["valuechang",{"_index":162,"title":{},"body":{"classes/BaseComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["var",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["variabl",{"_index":1375,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["veloc",{"_index":236,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["version",{"_index":337,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["viewchild",{"_index":1295,"title":{},"body":{"components/WizardComponent.html":{}}}],["viewchild('stepp",{"_index":1303,"title":{},"body":{"components/WizardComponent.html":{}}}],["viewencapsul",{"_index":675,"title":{},"body":{"components/MapComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["viewencapsulation.non",{"_index":659,"title":{},"body":{"components/MapComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["visibl",{"_index":1570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":167,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["want",{"_index":1195,"title":{},"body":{"components/UiComponent.html":{}}}],["warranti",{"_index":1507,"title":{},"body":{"license.html":{}}}],["way",{"_index":947,"title":{},"body":{"injectables/NetworkService.html":{}}}],["way['nod",{"_index":951,"title":{},"body":{"injectables/NetworkService.html":{}}}],["way[highway",{"_index":1006,"title":{},"body":{"injectables/NetworkService.html":{}}}],["waynod",{"_index":950,"title":{},"body":{"injectables/NetworkService.html":{}}}],["waynodes.filter((nod",{"_index":958,"title":{},"body":{"injectables/NetworkService.html":{}}}],["weather",{"_index":1264,"title":{},"body":{"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{}}}],["weather'},{'nam",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["weather.component.html",{"_index":1266,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.component.scss",{"_index":1265,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.servic",{"_index":1273,"title":{},"body":{"modules/WeatherModule.html":{}}}],["weather/weather.compon",{"_index":1236,"title":{},"body":{"modules/UiModule.html":{}}}],["weather/weather.modul",{"_index":866,"title":{},"body":{"modules/NetworkModule.html":{}}}],["weathercompon",{"_index":63,"title":{"components/WeatherComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weathermodul",{"_index":864,"title":{"modules/WeatherModule.html":{}},"body":{"modules/NetworkModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["weatherservic",{"_index":1271,"title":{"injectables/WeatherService.html":{}},"body":{"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{},"coverage.html":{},"overview.html":{}}}],["web",{"_index":588,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{},"index.html":{}}}],["west",{"_index":732,"title":{},"body":{"injectables/MapService.html":{}}}],["whether",{"_index":1520,"title":{},"body":{"license.html":{}}}],["width",{"_index":1206,"title":{},"body":{"components/UiComponent.html":{}}}],["window",{"_index":777,"title":{},"body":{"injectables/MapService.html":{}}}],["window'",{"_index":748,"title":{},"body":{"injectables/MapService.html":{}}}],["without",{"_index":1488,"title":{},"body":{"license.html":{}}}],["wizard",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["wizard.component.html",{"_index":1280,"title":{},"body":{"components/WizardComponent.html":{}}}],["wizard.component.scss",{"_index":1279,"title":{},"body":{"components/WizardComponent.html":{}}}],["wizard.servic",{"_index":372,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WizardComponent.html":{}}}],["wizard/chang",{"_index":1229,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/estim",{"_index":1227,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/search",{"_index":1224,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/select",{"_index":1226,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/simulation/simulation.compon",{"_index":1231,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/statistics/statistics.compon",{"_index":1232,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/wizard.compon",{"_index":1223,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/wizard.servic",{"_index":676,"title":{},"body":{"components/MapComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{}}}],["wizardact",{"_index":452,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/WizardState.html":{},"miscellaneous/typealiases.html":{}}}],["wizardactiontyp",{"_index":440,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{}}}],["wizardactiontypes.goon",{"_index":436,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["wizardactiontypes.reset",{"_index":451,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["wizardactiontypes.stepchang",{"_index":446,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["wizardactiontypes.steperror",{"_index":448,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["wizardactiontypes.steppend",{"_index":449,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["wizardcompon",{"_index":65,"title":{"components/WizardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["wizardform",{"_index":1282,"title":{},"body":{"components/WizardComponent.html":{}}}],["wizardreduc",{"_index":1409,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["wizardreducer(st",{"_index":1356,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/functions.html":{}}}],["wizardservic",{"_index":349,"title":{"injectables/WizardService.html":{}},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"coverage.html":{},"overview.html":{}}}],["wizardst",{"_index":1257,"title":{"interfaces/WizardState.html":{}},"body":{"interfaces/UiState.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wrap",{"_index":628,"title":{},"body":{"injectables/LocationService.html":{}}}],["wrappedtext",{"_index":562,"title":{},"body":{"components/HomeComponent.html":{}}}],["www",{"_index":932,"title":{},"body":{"injectables/NetworkService.html":{}}}],["ye",{"_index":596,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["zone",{"_index":720,"title":{},"body":{"injectables/MapService.html":{}}}],["zone.j",{"_index":1450,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"components/GoogleMapComponent.html":{},"modules/LocationModule.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent { }\n\n    \n\n    \n        \n\n    \n        \n            \n            \n                STRADA\n            \n\n            \n\n            \n                \n            \n            \n                \n                    About\n                \n            \n        \n    \n\n    \n\n        \n            \n        \n\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    STRADA                                                                                                                About                                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nDemandModule\n\nDemandModule\n\nAppModule -->\n\nDemandModule->AppModule\n\n\n\n\n\nLocationModule\n\nLocationModule\n\nAppModule -->\n\nLocationModule->AppModule\n\n\n\n\n\nNetworkModule\n\nNetworkModule\n\nAppModule -->\n\nNetworkModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nSimulationModule\n\nSimulationModule\n\nAppModule -->\n\nSimulationModule->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                HomeComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                            \n                                    DemandModule\n                            \n                            \n                                    LocationModule\n                            \n                            \n                                    NetworkModule\n                            \n                            \n                                    SharedModule\n                            \n                            \n                                    SimulationModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { SharedModule } from './shared/shared.module';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { LocationModule } from './location/location.module';\nimport { NetworkModule } from './network/network.module';\nimport { DemandModule } from './demand/demand.module';\nimport { SimulationModule } from './simulation/simulation.module';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        HomeComponent\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        SharedModule.forRoot(),\n        StoreModule.forRoot({}),\n        EffectsModule.forRoot([]),\n        LocationModule,\n        NetworkModule,\n        DemandModule,\n        SimulationModule\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPreloadingStrategy.html":{"url":"classes/AppPreloadingStrategy.html","title":"class - AppPreloadingStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPreloadingStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app-preloading-strategy.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        PreloadingStrategy\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                preload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            preload\n                            \n                            \n                        \n                    \n                \n                \n                    \npreload(route: Route, load: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app-preloading-strategy.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    Route\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        load\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { PreloadingStrategy, Route } from \"@angular/router\";\nimport { Observable, of } from \"rxjs\";\n\nexport class AppPreloadingStrategy implements PreloadingStrategy {\n\n    preload(route: Route, load: Function): Observable {\n        return route.data && route.data.preload ? load() : of(null);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppPreloadingStrategy } from './app-preloading-strategy';\n\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [\n    { path: '', redirectTo: 'home', pathMatch: 'full' },\n    { path: 'home', component: HomeComponent },\n    {\n        path: 'simulation',\n        loadChildren: './ui/ui.module#UiModule',\n        data: { preload: false }\n    },\n    { path: '**', redirectTo: 'home' }\n];\n\n@NgModule({\n    providers: [AppPreloadingStrategy],\n    imports: [\n        RouterModule.forRoot(routes, {\n            preloadingStrategy: AppPreloadingStrategy\n        })\n    ],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseComponent.html":{"url":"classes/BaseComponent.html","title":"class - BaseComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/base.component.ts\n        \n\n            \n                Description\n            \n            \n                Abstract class inherited from UI components.\n\n            \n\n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:32\n                            \n                        \n\n\n                \n                    \n                            Subscribe to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { OnInit, OnDestroy } from \"@angular/core\";\nimport { Subscription } from \"rxjs\";\n\n/**\n * Abstract class inherited from UI components.\n */\nexport abstract class BaseComponent implements OnInit, OnDestroy {\n\n    subscriptions: Subscription[] = [];\n\n    abstract ngOnInit(): void;\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach((subscription: Subscription) => {\n            if (subscription) { subscription.unsubscribe(); }\n        });\n    }\n\n    /**\n     * Subscribes to the form changes.\n     */\n    abstract valueChanges(): void;\n\n    /**\n     * Subscribes to the actions sent by other components.\n     */\n    abstract receiveActions(): void;\n\n    /**\n     * Subscribe to the actions sent to other components.\n     */\n    abstract sendActions(): void;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CanComponentDeactivate.html":{"url":"interfaces/CanComponentDeactivate.html","title":"interface - CanComponentDeactivate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CanComponentDeactivate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/can-deactivate-guard.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        canDeactivate\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canDeactivate\n                                    \n                                \n                                \n                                    \n                                        canDeactivate:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nexport interface CanComponentDeactivate {\n    canDeactivate: () => Observable | Promise | boolean;\n}\n\n@Injectable()\nexport class CanDeactivateGuard implements CanDeactivate {\n    canDeactivate(component: CanComponentDeactivate) {\n        return component.canDeactivate ? component.canDeactivate() : true;\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CanDeactivateGuard.html":{"url":"injectables/CanDeactivateGuard.html","title":"injectable - CanDeactivateGuard","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  CanDeactivateGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/can-deactivate-guard.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canDeactivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canDeactivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanDeactivate(component: CanComponentDeactivate)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/can-deactivate-guard.service.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        component\n                                                        \n                                                                    CanComponentDeactivate\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nexport interface CanComponentDeactivate {\n    canDeactivate: () => Observable | Promise | boolean;\n}\n\n@Injectable()\nexport class CanDeactivateGuard implements CanDeactivate {\n    canDeactivate(component: CanComponentDeactivate) {\n        return component.canDeactivate ? component.canDeactivate() : true;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangeOfConditionsComponent.html":{"url":"components/ChangeOfConditionsComponent.html","title":"component - ChangeOfConditionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChangeOfConditionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-change-of-conditions\n            \n\n            \n                styleUrls\n                change-of-conditions.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./change-of-conditions.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:13\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'wizard-change-of-conditions',\n    templateUrl: './change-of-conditions.component.html',\n    styleUrls: ['./change-of-conditions.component.scss']\n})\nexport class ChangeOfConditionsComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    constructor() { }\n\n    ngOnInit(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChangeOfConditionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Clock.html":{"url":"classes/Clock.html","title":"class - Clock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Clock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/clock.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Clock {\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DemandModule.html":{"url":"modules/DemandModule.html","title":"module - DemandModule","body":"\n                   \n\n\n\n\n  Modules\n  DemandModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DemandModule\n\n\n\ncluster_DemandModule_providers\n\n\n\n\nDemandService\n\nDemandService\n\n\n\nDemandModule\n\nDemandModule\n\nDemandModule -->\n\nDemandService->DemandModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/demand/demand.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     DemandService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { DemandService } from './demand.service';\n\n@NgModule({\n    imports: [],\n    declarations: [],\n    providers: [DemandService]\n})\nexport class DemandModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DemandService.html":{"url":"injectables/DemandService.html","title":"injectable - DemandService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  DemandService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/demand/demand.service.ts\n        \n\n            \n                Description\n            \n            \n                Estimates the O/D matrix of the traffic demand.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Estimates the O/D matrix of the traffic demand.\n */\n@Injectable() export class DemandService {\n\n    public reset(): void {\n        //\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Edge.html":{"url":"classes/Edge.html","title":"class - Edge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Edge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                Link between two nodes.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                density\n                            \n                            \n                                    Public\n                                destination\n                            \n                            \n                                    Public\n                                distance\n                            \n                            \n                                    Public\n                                duration\n                            \n                            \n                                    Public\n                                durationInTraffic\n                            \n                            \n                                    Public\n                                edgeId\n                            \n                            \n                                    Public\n                                flow\n                            \n                            \n                                    Public\n                                linkFlow\n                            \n                            \n                                    Public\n                                origin\n                            \n                            \n                                    Public\n                                tags\n                            \n                            \n                                    Public\n                                velocity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                calcLinkFlow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(edgeId: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/graph.ts:72\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edgeId\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            density\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        density:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            destination\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        destination:     Node\n\n                    \n                \n                    \n                        \n                            Type :     Node\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            distance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        distance:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            duration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        duration:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            durationInTraffic\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        durationInTraffic:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            edgeId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        edgeId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            flow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        flow:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            linkFlow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        linkFlow:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            origin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        origin:     Node\n\n                    \n                \n                    \n                        \n                            Type :     Node\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tags:     Tag[]\n\n                    \n                \n                    \n                        \n                            Type :     Tag[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            velocity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        velocity:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:66\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            calcLinkFlow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        calcLinkFlow()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:81\n                            \n                        \n\n\n                \n                    \n                            Calculates the value of the arc flow and assigns it to the linkFlow attribute.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import * as combine from 'mout/array/combine';\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    public distance: number;\n\n    public duration: number;\n\n    public durationInTraffic: number;\n\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    public linkFlow: number;\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the arc flow and assigns it to the linkFlow attribute.\n     */\n    public calcLinkFlow(): void {\n\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    private nodes: Node[] = [];\n\n    private edges: Edge[] = [];\n\n    private relations: Relation[] = [];\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.lat = node.lat;\n            existingNode.lon = node.lon;\n            existingNode.tags = combine(existingNode.tags, node.tags);\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * Gets the incidence matrix of paths for O/D pairs.\n     */\n    public getIncidenceMatrix(): boolean[][] {\n        return null;\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param origin Source node\n     * @param destination Destination node\n     */\n    public getShortestPaths(origin: Node, destination: Node): Node[][] {\n        return null;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EstimateOfDemandComponent.html":{"url":"components/EstimateOfDemandComponent.html","title":"component - EstimateOfDemandComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EstimateOfDemandComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-estimate-of-demand\n            \n\n            \n                styleUrls\n                estimate-of-demand.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./estimate-of-demand.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                schedule\n                            \n                            \n                                sendActions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, wizard: WizardService, network: NetworkService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schedule\n                            \n                            \n                        \n                    \n                \n                \n                    \nschedule()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:59\n                            \n                        \n\n\n                \n                    \n                            Performs in sequence the following operations:\n\nCreation of the graph\nAssociation of values to the graph\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribe to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { switchMap } from 'rxjs/operators';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { WizardService } from '../wizard.service';\nimport { NetworkService } from '../../../network/network.service';\nimport * as fromUi from '../../models/reducers';\n\nimport { BaseComponent } from '../../models/base.component';\n\n@Component({\n    selector: 'wizard-estimate-of-demand',\n    templateUrl: './estimate-of-demand.component.html',\n    styleUrls: ['./estimate-of-demand.component.scss']\n})\nexport class EstimateOfDemandComponent extends BaseComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    constructor(\n        private store: Store,\n        private wizard: WizardService,\n        private network: NetworkService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.valueChanges();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        //\n    }\n\n    receiveActions(): void {\n        //\n    }\n\n    sendActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.currentStep)).subscribe((currentStep: number) => {\n            if (currentStep == this.index) {\n                this.schedule();\n            }\n        }));\n    }\n\n    /**\n     * Performs in sequence the following operations:\n     * - Creation of the graph\n     * - Association of values to the graph\n     */\n    schedule(): void {\n        this.wizard.putOnHold();\n\n        const stream = this.network.getNetwork().pipe(\n            switchMap((response: any) => {\n                return this.network.createGraph(response);\n            }),\n            switchMap(() => {\n                return this.network.getTrafficData();\n            })\n        );\n\n        this.subscriptions.push(stream.subscribe(\n            () => { },\n            (error: any) => {\n                let message: string;\n                switch (error) {\n                    case 'createGraph':\n                        message = 'The graph can not be created. Try with another area';\n                        break;\n                    default:\n                        message = 'The request could not be processed. Check your Internet connection and try again';\n                }\n                this.wizard.putInError(message);\n                this.wizard.reset();\n            },\n            () => {\n                this.wizard.removeFromWaiting();\n            }\n        ));\n    }\n\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EstimateOfDemandComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/footer/footer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentYear\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/footer/footer.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentYear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentYear:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : new Date().getFullYear()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/footer/footer.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-footer',\n    templateUrl: './footer.component.html',\n    styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n    currentYear: number = new Date().getFullYear();\n\n    ngOnInit(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n        \n            \n                \n                    \n                        Privacy\n                    \n                \n                \n                    \n                        Terms of service\n                    \n                \n            \n        \n    \n\n    \n\n    \n        \n            Copyright&nbsp;©&nbsp;{{ currentYear }} Roberto&nbsp;Simonetti\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                Privacy                                                                                                Terms of service                                                                                        Copyright © {{ currentYear }} Roberto Simonetti            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GoOn.html":{"url":"classes/GoOn.html","title":"class - GoOn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  GoOn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/actions/wizard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/models/actions/wizard.actions.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : WizardActionTypes.GoOn\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Step } from '../wizard';\n\n/**\n * ngrx: wizard Actions.\n */\nexport enum WizardActionTypes {\n\n    StepChanged = '[Wizard] Step Changed',\n    StepError = '[Wizard] Step Error',\n    StepPending = '[Wizard] Step Pending',\n    GoOn = '[Wizard] Go On',\n    Reset = '[Wizard] Reset'\n\n}\n\nexport class StepChanged implements Action {\n\n    public readonly type: string = WizardActionTypes.StepChanged;\n\n    constructor(public payload: { step: Step, index: number }) { }\n\n}\n\nexport class StepError implements Action {\n\n    public readonly type: string = WizardActionTypes.StepError;\n\n    constructor(public payload: string) { }\n\n}\n\nexport class StepPending implements Action {\n\n    public readonly type: string = WizardActionTypes.StepPending;\n\n    constructor(public payload: boolean) { }\n\n}\n\nexport class GoOn implements Action {\n\n    public readonly type: string = WizardActionTypes.GoOn;\n\n    constructor(public payload: { step: Step, index: number, nextIndex: number }) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = WizardActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type WizardActions = StepChanged | StepError | StepPending | GoOn | Reset;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GoogleMapComponent.html":{"url":"components/GoogleMapComponent.html","title":"component - GoogleMapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GoogleMapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/map/google-map.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                google-map\n            \n\n\n\n            \n                template\n                \n\n\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                map\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createMap\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                center\n                            \n                            \n                                disableDefaultUI\n                            \n                            \n                                disableDoubleClickZoom\n                            \n                            \n                                gestureHandling\n                            \n                            \n                                mapTypeId\n                            \n                            \n                                maxZoom\n                            \n                            \n                                minZoom\n                            \n                            \n                                styles\n                            \n                            \n                                zoom\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(map: MapService, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/map/google-map.component.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                    MapService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        center\n                    \n                    \n                        Center map. Required.\n\n                            \n                            Type:    google.maps.LatLngLiteral\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableDefaultUI\n                    \n                    \n                        Enables/disables all default UI.\n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableDoubleClickZoom\n                    \n                    \n                        Enables/disables zoom and center on double click. Enabled by default.\n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        gestureHandling\n                    \n                    \n                        This setting controls how gestures on the map are handled.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapTypeId\n                    \n                    \n                        The initial map mapTypeId. Defaults to ROADMAP.\n\n                            \n                            Type:    google.maps.MapTypeId\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxZoom\n                    \n                    \n                        The maximum zoom level which will be displayed on the map.\n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minZoom\n                    \n                    \n                        The minimum zoom level which will be displayed on the map.\n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        styles\n                    \n                    \n                        Styles to apply to each of the default map types.\n\n                            \n                            Type:    google.maps.MapTypeStyle[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:54\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zoom\n                    \n                    \n                        The initial map zoom level. Required.\n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:26\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createMap(el: HTMLElement)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                        \n                                                                    HTMLElement\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:71\n                            \n                        \n\n\n                \n                    \n                            On changes, updates center map & zoom.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:61\n                            \n                        \n\n\n                \n                    \n                            On init, creates map.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            map\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        map:     MapService\n\n                    \n                \n                    \n                        \n                            Type :     MapService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:56\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit, OnChanges, SimpleChange, ElementRef } from '@angular/core';\n\nimport { MapService } from './/map.service';\n\n@Component({\n    selector: 'google-map',\n    template: `\n        \n        \n        `\n})\nexport class GoogleMapComponent implements OnInit, OnChanges {\n\n    /**\n     * Center map. Required.\n     */\n    @Input() center: google.maps.LatLngLiteral;\n\n    /*\n     * MapOptions object specification.\n     */\n\n    /**\n     * The initial map zoom level. Required.\n     */\n    @Input() zoom: number;\n    /**\n     * Enables/disables all default UI.\n     */\n    @Input() disableDefaultUI: boolean;\n    /**\n     * Enables/disables zoom and center on double click. Enabled by default.\n     */\n    @Input() disableDoubleClickZoom: boolean;\n    /**\n     * The initial map mapTypeId. Defaults to ROADMAP.\n     */\n    @Input() mapTypeId: google.maps.MapTypeId;\n    /**\n     * The maximum zoom level which will be displayed on the map.\n     */\n    @Input() maxZoom: number;\n    /**\n     * The minimum zoom level which will be displayed on the map.\n     */\n    @Input() minZoom: number;\n    /**\n     * This setting controls how gestures on the map are handled.\n     */\n    @Input() gestureHandling: string;\n    /**\n     * Styles to apply to each of the default map types.\n     */\n    @Input() styles: google.maps.MapTypeStyle[];\n\n    constructor(public map: MapService, private elementRef: ElementRef) { }\n\n    /**\n     * On init, creates map.\n     */\n    ngOnInit(): void {\n        // Gets the map element.\n        const el: HTMLElement = this.elementRef.nativeElement.querySelector('#map');\n\n        this.createMap(el);\n    }\n\n    /**\n     * On changes, updates center map & zoom.\n     */\n    ngOnChanges(changes: { [propertyName: string]: SimpleChange }): void {\n        if (changes['center']) { this.map.setCenter(this.center); }\n        if (changes['zoom']) { this.map.setZoom(this.zoom); }\n    }\n\n    private createMap(el: HTMLElement): void {\n        this.map.initMap(el, {\n            center: this.center,\n            disableDefaultUI: this.disableDefaultUI,\n            disableDoubleClickZoom: this.disableDoubleClickZoom,\n            mapTypeId: this.mapTypeId,\n            maxZoom: this.maxZoom as number,\n            minZoom: this.minZoom as number,\n            gestureHandling: this.gestureHandling as string,\n            styles: this.styles,\n            zoom: this.zoom as number\n        });\n    }\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GoogleMapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Graph.html":{"url":"classes/Graph.html","title":"class - Graph","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Graph\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                Graph of the transport network.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                edges\n                            \n                            \n                                    Private\n                                nodes\n                            \n                            \n                                    Private\n                                relations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addEdge\n                            \n                            \n                                    Public\n                                addOrUpdateNode\n                            \n                            \n                                    Public\n                                getEdges\n                            \n                            \n                                    Public\n                                getIncidenceMatrix\n                            \n                            \n                                    Public\n                                getNode\n                            \n                            \n                                    Public\n                                getNodes\n                            \n                            \n                                    Public\n                                getRelations\n                            \n                            \n                                    Public\n                                getShortestPaths\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            edges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        edges:     Edge[]\n\n                    \n                \n                    \n                        \n                            Type :     Edge[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:111\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            nodes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nodes:     Node[]\n\n                    \n                \n                    \n                        \n                            Type :     Node[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:109\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            relations\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        relations:     Relation[]\n\n                    \n                \n                    \n                        \n                            Type :     Relation[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:113\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addEdge\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addEdge(edge: Edge)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:144\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edge\n                                                        \n                                                                    Edge\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addOrUpdateNode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addOrUpdateNode(node: Node)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:131\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                                    Node\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getEdges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getEdges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:119\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Edge[]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getIncidenceMatrix\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getIncidenceMatrix()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:151\n                            \n                        \n\n\n                \n                    \n                            Gets the incidence matrix of paths for O/D pairs.\n\n\n                            \n                                Returns :     [][]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getNode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getNode(nodeId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:127\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        nodeId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Node | undefined\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getNodes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getNodes()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:115\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Node[]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getRelations\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getRelations()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:123\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Relation[]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getShortestPaths\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getShortestPaths(origin: Node, destination: Node)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:161\n                            \n                        \n\n\n                \n                    \n                            Calculates the set of minimum paths between a source and destination node based on the link duration attribute.\nk Shortest Paths algorithm in the Eppstein version.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        origin\n                                                        \n                                                                    Node\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Source node\n\n                                                        \n                                                \n                                                \n                                                        destination\n                                                        \n                                                                    Node\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Destination node\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     [][]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import * as combine from 'mout/array/combine';\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    public distance: number;\n\n    public duration: number;\n\n    public durationInTraffic: number;\n\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    public linkFlow: number;\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the arc flow and assigns it to the linkFlow attribute.\n     */\n    public calcLinkFlow(): void {\n\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    private nodes: Node[] = [];\n\n    private edges: Edge[] = [];\n\n    private relations: Relation[] = [];\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.lat = node.lat;\n            existingNode.lon = node.lon;\n            existingNode.tags = combine(existingNode.tags, node.tags);\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * Gets the incidence matrix of paths for O/D pairs.\n     */\n    public getIncidenceMatrix(): boolean[][] {\n        return null;\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param origin Source node\n     * @param destination Destination node\n     */\n    public getShortestPaths(origin: Node, destination: Node): Node[][] {\n        return null;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home/home.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home/home.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        show:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, ElementRef } from '@angular/core';\n\nimport * as anime from 'animejs';\n\nimport { HOME_TRANSITION } from './home.transition';\n\n@Component({\n    selector: 'app-home',\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.scss'],\n    animations: [HOME_TRANSITION]\n})\nexport class HomeComponent implements OnInit, AfterViewInit {\n\n    show = false;\n\n    constructor(private elementRef: ElementRef) { }\n\n    ngOnInit(): void {\n        //\n    }\n\n    ngAfterViewInit(): void {\n        const element: HTMLElement = this.elementRef.nativeElement.querySelector('.headline .letters');\n        const text: string = element.innerText;\n        const letters: string[] = text.split('');\n\n        let wrappedText = '';\n        for (const letter of letters) {\n            wrappedText += `${letter}`;\n        }\n\n        element.innerHTML = wrappedText;\n\n        // Anime.\n        const basicTimeline = anime.timeline();\n        basicTimeline\n            .add({\n                targets: '.headline .letter',\n                scale: [0.3, 1],\n                opacity: [0, 1],\n                translateZ: 0,\n                easing: 'linear',\n                delay: (el, i) => {\n                    return 70 * (i + 1);\n                }\n            }).add({\n                targets: '.headline .line',\n                scaleX: [0, 1],\n                opacity: [0.5, 1],\n                easing: 'linear',\n                offset: '-=840',\n                delay: (el, i, l) => {\n                    return 70 * (l - i);\n                },\n                complete: (anim) => {\n                    this.show = true;\n                }\n            });\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                STRADA\n                \n            \n        \n        \n            \n                Simulation of TRAffic DAta\n                An urban traffic web simulator that uses data in real time\n                GET STARTED\n            \n        \n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        STRADA                                                                        Simulation of TRAffic DAta                An urban traffic web simulator that uses data in real time                GET STARTED                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoDialogComponent.html":{"url":"components/InfoDialogComponent.html","title":"component - InfoDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InfoDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/info-dialog.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                info-dialog\n            \n\n\n\n            \n                template\n                Info\n\n    {{ data }}\n\n\n    No\n    Yes\n\n\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/info-dialog.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/info-dialog.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/info-dialog.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n    selector: 'info-dialog',\n    template: `\n        Info\n        \n            {{ data }}\n        \n        \n            No\n            Yes\n        \n    `,\n    styles: []\n})\nexport class InfoDialogComponent {\n\n    constructor(\n        public dialogRef: MatDialogRef,\n        @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Info    {{ data }}    No    Yes'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InfoDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LocationModule.html":{"url":"modules/LocationModule.html","title":"module - LocationModule","body":"\n                   \n\n\n\n\n  Modules\n  LocationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_providers\n\n\n\n\nLocationService\n\nLocationService\n\n\n\nLocationModule\n\nLocationModule\n\nLocationModule -->\n\nLocationService->LocationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/location/location.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     LocationService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { LocationService } from './location.service';\n\n@NgModule({\n    imports: [],\n    declarations: [],\n    providers: [LocationService]\n})\nexport class LocationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocationService.html":{"url":"injectables/LocationService.html","title":"injectable - LocationService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  LocationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/location/location.service.ts\n        \n\n            \n                Description\n            \n            \n                Responsible for identifying the geographic coordinates of the simulation area,\nthrough geocoding or geolocation.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                geocoder\n                            \n                            \n                                    Private\n                                latLng\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                codeAddress\n                            \n                            \n                                    Public\n                                getCurrentPosition\n                            \n                            \n                                    Public\n                                getLatLng\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Public\n                                setLatLng\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/location/location.service.ts:15\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            codeAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        codeAddress(address: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/location/location.service.ts:32\n                            \n                        \n\n\n                \n                    \n                            Geocoding service.\nWraps the Google Maps API geocoding service into an observable.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        address\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The address to be searched\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    An observable of GeocoderResult\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getCurrentPosition\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getCurrentPosition()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/location/location.service.ts:54\n                            \n                        \n\n\n                \n                    \n                            Tries HTML5 geolocation.\nWraps the Geolocation API into an observable.\n\n\n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    An observable of Position\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getLatLng\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getLatLng()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/location/location.service.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     google.maps.LatLngLiteral\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/location/location.service.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setLatLng\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setLatLng(latLng: google.maps.LatLngLiteral)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/location/location.service.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        latLng\n                                                        \n                                                                    google.maps.LatLngLiteral\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            geocoder\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        geocoder:     google.maps.Geocoder\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.Geocoder\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/location/location.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            latLng\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        latLng:     google.maps.LatLngLiteral\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.LatLngLiteral\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/location/location.service.ts:13\n                            \n                        \n\n                \n                    \n                        Center of the area (latitude, longitude).\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\n/**\n * Responsible for identifying the geographic coordinates of the simulation area,\n * through geocoding or geolocation.\n */\n@Injectable() export class LocationService {\n\n    /**\n     * Center of the area (latitude, longitude).\n     */\n    private latLng: google.maps.LatLngLiteral;\n\n    private geocoder: google.maps.Geocoder;\n\n    constructor() {\n        this.geocoder = new google.maps.Geocoder();\n    }\n\n    public reset(): void {\n        this.latLng = null;\n        this.geocoder = new google.maps.Geocoder();\n    }\n\n    /**\n     * Geocoding service.\n     * Wraps the Google Maps API geocoding service into an observable.\n     * @param address The address to be searched\n     * @return An observable of GeocoderResult\n     */\n    public codeAddress(address: string): Observable {\n        return Observable.create((observer: Observer) => {\n            // Invokes geocode method of Google Maps API geocoding.\n            this.geocoder.geocode({ address: address }, (\n                (results: google.maps.GeocoderResult[], status: google.maps.GeocoderStatus) => {\n                    if (status === google.maps.GeocoderStatus.OK) {\n                        observer.next(results);\n                        observer.complete();\n                    } else {\n                        observer.error(status);\n                    }\n                })\n            );\n        });\n    }\n\n    /**\n     * Tries HTML5 geolocation.\n     * Wraps the Geolocation API into an observable.\n     *\n     * @return An observable of Position\n     */\n    public getCurrentPosition(): Observable {\n        return Observable.create((observer: Observer) => {\n            // Invokes getCurrentPosition method of Geolocation API.\n            navigator.geolocation.getCurrentPosition(\n                (position: Position) => {\n                    observer.next(position);\n                    observer.complete();\n                },\n                (error: PositionError) => {\n                    observer.error(error);\n                }\n            );\n        });\n    }\n\n    public getLatLng(): google.maps.LatLngLiteral {\n        return this.latLng;\n    }\n\n    public setLatLng(latLng: google.maps.LatLngLiteral): void {\n        this.latLng = latLng;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapComponent.html":{"url":"components/MapComponent.html","title":"component - MapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/map/map.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                ui-map\n            \n\n            \n                styleUrls\n                map.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./map.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                center\n                            \n                            \n                                disableDefaultUI\n                            \n                            \n                                disableDoubleClickZoom\n                            \n                            \n                                gestureHandling\n                            \n                            \n                                mapTypeId\n                            \n                            \n                                maxZoom\n                            \n                            \n                                minZoom\n                            \n                            \n                                styles\n                            \n                            \n                                zoom\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, wizard: WizardService, map: MapService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/map/map.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                    MapService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:95\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribe to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            center\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        center:     google.maps.LatLngLiteral\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.LatLngLiteral\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableDefaultUI\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        disableDefaultUI:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableDoubleClickZoom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        disableDoubleClickZoom:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gestureHandling\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gestureHandling:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapTypeId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mapTypeId:     google.maps.MapTypeId\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.MapTypeId\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxZoom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maxZoom:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minZoom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        minZoom:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            styles\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        styles:     google.maps.MapTypeStyle[]\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.MapTypeStyle[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            zoom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zoom:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy, ViewEncapsulation } from '@angular/core';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { WizardService } from '../wizard/wizard.service';\nimport { MapService } from './map.service';\nimport { MapStyle } from './map.style';\nimport * as fromUi from '../models/reducers';\nimport { Step } from '../models/wizard';\nimport { uiConfig } from '../ui-config';\n\nimport { BaseComponent } from '../models/base.component';\n\n@Component({\n    selector: 'ui-map',\n    templateUrl: './map.component.html',\n    styleUrls: ['./map.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class MapComponent extends BaseComponent implements OnInit {\n\n    // Center map. Required.\n    center: google.maps.LatLngLiteral;\n\n    // The initial map zoom level. Required.\n    zoom: number;\n\n    disableDefaultUI: boolean;\n    disableDoubleClickZoom: boolean;\n    mapTypeId: google.maps.MapTypeId;\n    maxZoom: number;\n    minZoom: number;\n    gestureHandling: string;\n    styles: google.maps.MapTypeStyle[];\n\n    constructor(\n        private store: Store,\n        private wizard: WizardService,\n        private map: MapService\n    ) {\n        super();\n        // Map options.\n        this.disableDefaultUI = true;\n        this.disableDoubleClickZoom = false;\n        this.mapTypeId = google.maps.MapTypeId.ROADMAP;\n        this.maxZoom = 18;\n        this.minZoom = 4;\n        this.gestureHandling = 'cooperative';\n        this.styles = MapStyle;\n    }\n\n    ngOnInit(): void {\n        this.center = uiConfig.map.center;\n        this.zoom = uiConfig.map.zoom;\n\n        this.valueChanges();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        //\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.steps)).subscribe((steps: Step[]) => {\n            switch (this.wizard.state.currentStep) {\n                case 0:\n                    if (steps[0]) {\n                        // Updates center map.\n                        this.center = this.wizard.state.steps[0].data.center;\n                        this.zoom = 16;\n                    }\n                    break;\n            }\n        }));\n\n        // Checks area limit.\n        this.subscriptions.push(this.map.getArea().subscribe((area: number) => {\n            if (area >= uiConfig.areaMinLimit && area  {\n            this.center = uiConfig.map.center;\n            this.zoom = uiConfig.map.zoom;\n        }));\n    }\n\n    sendActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.currentStep)).subscribe((currentStep: number) => {\n            switch (currentStep) {\n                case 1:\n                    if (!this.wizard.state.steps[1]) {\n                        // Builds & shows initial rectangle.\n                        const bounds: google.maps.LatLngBoundsLiteral = this.map.buildBounds(this.center);\n                        this.map.showRect(bounds);\n                    }\n                    break;\n            }\n        }));\n    }\n\n}\n\n    \n\n    \n        \n    \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapService.html":{"url":"injectables/MapService.html","title":"injectable - MapService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  MapService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/map/map.service.ts\n        \n\n            \n                Description\n            \n            \n                Instances the map.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                area\n                            \n                            \n                                    Private\n                                infoWindow\n                            \n                            \n                                    Private\n                                map\n                            \n                            \n                                    Private\n                                rectangle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                buildBounds\n                            \n                            \n                                    Private\n                                calcArea\n                            \n                            \n                                    Private\n                                checkRect\n                            \n                            \n                                    Public\n                                getArea\n                            \n                            \n                                    Public\n                                getBounds\n                            \n                            \n                                    Public\n                                initMap\n                            \n                            \n                                reset\n                            \n                            \n                                    Public\n                                resize\n                            \n                            \n                                    Public\n                                setCenter\n                            \n                            \n                                    Private\n                                setInfoWindow\n                            \n                            \n                                    Public\n                                setZoom\n                            \n                            \n                                    Public\n                                showRect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/map/map.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            buildBounds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        buildBounds(center: google.maps.LatLngLiteral)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.service.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        center\n                                                        \n                                                                    google.maps.LatLngLiteral\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     google.maps.LatLngBoundsLiteral\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            calcArea\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        calcArea(ne: google.maps.LatLng, sw: google.maps.LatLng)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.service.ts:146\n                            \n                        \n\n\n                \n                    \n                            Calculates the area in hectares.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ne\n                                                        \n                                                                    google.maps.LatLng\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                north-est coordinates\n\n                                                        \n                                                \n                                                \n                                                        sw\n                                                        \n                                                                    google.maps.LatLng\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                south-west coordinates\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            checkRect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        checkRect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.service.ts:110\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getArea\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getArea()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.service.ts:96\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getBounds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBounds()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.service.ts:100\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     google.maps.LatLngBoundsLiteral\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            initMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initMap(el: HTMLElement, mapOptions: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.service.ts:38\n                            \n                        \n\n\n                \n                    \n                            Creates a new map inside of the given HTML container.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                        \n                                                                    HTMLElement\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                DIV element\n\n                                                        \n                                                \n                                                \n                                                        mapOptions\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                MapOptions object specification\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.service.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        resize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.service.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setCenter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setCenter(latLng: google.maps.LatLngLiteral)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.service.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        latLng\n                                                        \n                                                                    google.maps.LatLngLiteral\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            setInfoWindow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setInfoWindow(content: string, position: google.maps.LatLng)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.service.ts:134\n                            \n                        \n\n\n                \n                    \n                            Sets the info window's content and position.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        content\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Window's content\n\n                                                        \n                                                \n                                                \n                                                        position\n                                                        \n                                                                    google.maps.LatLng\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                LatLng\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setZoom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setZoom(zoom: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.service.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        zoom\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            showRect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        showRect(bounds: google.maps.LatLngBoundsLiteral)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.service.ts:79\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bounds\n                                                        \n                                                                    google.maps.LatLngBoundsLiteral\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            area\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        area:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            infoWindow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        infoWindow:     google.maps.InfoWindow\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.InfoWindow\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            map\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        map:     google.maps.Map\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.Map\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            rectangle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rectangle:     google.maps.Rectangle\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.Rectangle\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NgZone, EventEmitter, Output } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nimport area from '@turf/area';\nimport { point, polygon } from '@turf/helpers';\n\nimport { uiConfig } from '../ui-config';\n\n/**\n * Instances the map.\n */\n@Injectable() export class MapService {\n\n    @Output() public resetMap: EventEmitter = new EventEmitter();\n\n    private map: google.maps.Map;\n\n    private rectangle: google.maps.Rectangle;\n\n    private infoWindow: google.maps.InfoWindow;\n\n    private area = new BehaviorSubject(null);\n\n    constructor(private zone: NgZone) { }\n\n    reset(): void {\n        this.resetMap.emit(null);\n        this.rectangle.setMap(null);\n        this.infoWindow.close();\n        this.area.next(null);\n    }\n\n    /**\n     * Creates a new map inside of the given HTML container.\n     * @param el DIV element\n     * @param mapOptions MapOptions object specification\n     */\n    public initMap(el: HTMLElement, mapOptions: any): void {\n        this.map = new google.maps.Map(el, mapOptions);\n\n        this.resize();\n        // Adds event listener resize when the window changes size.\n        google.maps.event.addDomListener(window, 'resize', () => this.resize());\n    }\n\n    public setCenter(latLng: google.maps.LatLngLiteral): void {\n        if (this.map != null && latLng != null) {\n            // Changes the center of the map to the given LatLng.\n            this.map.panTo(latLng);\n        }\n    }\n\n    public setZoom(zoom: number): void {\n        if (this.map != null) {\n            this.map.setZoom(zoom);\n        }\n    }\n\n    public resize(): void {\n        // Saves the center.\n        const latLng: google.maps.LatLng = this.map.getCenter();\n        // Triggers resize event.\n        setTimeout(() => {\n            google.maps.event.trigger(this.map, 'resize');\n            // Restores the center.\n            this.map.setCenter(latLng);\n        });\n    }\n\n    public buildBounds(center: google.maps.LatLngLiteral): google.maps.LatLngBoundsLiteral {\n        return {\n            north: center.lat + 0.0012,\n            south: center.lat - 0.0012,\n            east: center.lng + 0.003,\n            west: center.lng - 0.003\n        };\n    }\n\n    public showRect(bounds: google.maps.LatLngBoundsLiteral) {\n        // Defines the rectangle and set its editable property to true.\n        this.rectangle = new google.maps.Rectangle({\n            bounds: bounds,\n            editable: true,\n            draggable: true\n        });\n\n        this.rectangle.setMap(this.map);\n\n        // Adds an event listener on the rectangle.\n        this.rectangle.addListener('bounds_changed', () => this.checkRect());\n\n        // Defines an info window on the map.\n        this.infoWindow = new google.maps.InfoWindow();\n    }\n\n    public getArea(): Observable {\n        return this.area.asObservable();\n    }\n\n    public getBounds(): google.maps.LatLngBoundsLiteral {\n        const bounds: google.maps.LatLngBounds = this.rectangle.getBounds();\n        return {\n            north: bounds.getNorthEast().lat(),\n            south: bounds.getSouthWest().lat(),\n            east: bounds.getNorthEast().lng(),\n            west: bounds.getSouthWest().lng()\n        };\n    }\n\n    private checkRect(): void {\n        // The event of Google maps runs outside Angular zone.\n        this.zone.run(() => {\n            const ne: google.maps.LatLng = this.rectangle.getBounds().getNorthEast();\n            const sw: google.maps.LatLng = this.rectangle.getBounds().getSouthWest();\n\n            // Area.\n            const a: number = this.calcArea(ne, sw);\n\n            // Info window.\n            const content: string = 'Area' +\n                a + ' ha';\n            this.setInfoWindow(content, ne);\n\n            // Sends the area to subscribers.\n            this.area.next(a);\n        });\n    }\n\n    /**\n     * Sets the info window's content and position.\n     * @param content Window's content\n     * @param position LatLng\n     */\n    private setInfoWindow(content: string, position: google.maps.LatLng): void {\n        this.infoWindow.setContent(content);\n        this.infoWindow.setPosition(position);\n\n        this.infoWindow.open(this.map);\n    }\n\n    /**\n     * Calculates the area in hectares.\n     * @param ne north-est coordinates\n     * @param sw south-west coordinates\n     */\n    private calcArea(ne: google.maps.LatLng, sw: google.maps.LatLng): number {\n        const p = polygon([[\n            [ne.lat(), ne.lng()], [sw.lat(), ne.lng()], [sw.lat(), sw.lng()], [ne.lat(), sw.lng()], [ne.lat(), ne.lng()]\n        ]]);\n        let a = area(p) / 10000;\n        a = Math.round(a * 10) / 10;\n        return a;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n  Modules\n  MaterialModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/material.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport {\n    MatSidenavModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatIconRegistry,\n    MatButtonModule,\n    MatIconModule,\n    MatMenuModule,\n    MatStepperModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule,\n    MatDialogModule\n} from '@angular/material';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nconst materialModules: any[] = [\n    MatSidenavModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    MatMenuModule,\n    MatStepperModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule,\n    MatDialogModule\n];\n\n@NgModule({\n    imports: materialModules,\n    exports: materialModules\n})\nexport class MaterialModule {\n\n    constructor(matIconRegistry: MatIconRegistry, domSanitizer: DomSanitizer) {\n        matIconRegistry.addSvgIcon(\n            'more_vert', domSanitizer.bypassSecurityTrustResourceUrl('./assets/images/ic_more_vert_24px.svg')\n        );\n        matIconRegistry.addSvgIcon(\n            'code', domSanitizer.bypassSecurityTrustResourceUrl('./assets/images/ic_code_24px.svg')\n        );\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Member.html":{"url":"interfaces/Member.html","title":"interface - Member","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Member\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                Relation's member.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ref\n                                \n                                \n                                        role\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ref\n                                    \n                                \n                                \n                                    \n                                        ref:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as combine from 'mout/array/combine';\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    public distance: number;\n\n    public duration: number;\n\n    public durationInTraffic: number;\n\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    public linkFlow: number;\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the arc flow and assigns it to the linkFlow attribute.\n     */\n    public calcLinkFlow(): void {\n\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    private nodes: Node[] = [];\n\n    private edges: Edge[] = [];\n\n    private relations: Relation[] = [];\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.lat = node.lat;\n            existingNode.lon = node.lon;\n            existingNode.tags = combine(existingNode.tags, node.tags);\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * Gets the incidence matrix of paths for O/D pairs.\n     */\n    public getIncidenceMatrix(): boolean[][] {\n        return null;\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param origin Source node\n     * @param destination Destination node\n     */\n    public getShortestPaths(origin: Node, destination: Node): Node[][] {\n        return null;\n    }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MessageArchivedComponent.html":{"url":"components/MessageArchivedComponent.html","title":"component - MessageArchivedComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MessageArchivedComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/message-archived.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snack-bar\n            \n\n\n\n            \n                template\n                {{ data }}\n\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/message-archived.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/message-archived.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material';\n\n@Component({\n    selector: 'snack-bar',\n    template: `\n        {{ data }}\n    `,\n    styles: []\n})\nexport class MessageArchivedComponent {\n\n    constructor(@Inject(MAT_SNACK_BAR_DATA) public data: any) { }\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ data }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MessageArchivedComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NetworkModule.html":{"url":"modules/NetworkModule.html","title":"module - NetworkModule","body":"\n                   \n\n\n\n\n  Modules\n  NetworkModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NetworkModule\n\n\n\ncluster_NetworkModule_imports\n\n\n\ncluster_NetworkModule_providers\n\n\n\n\nWeatherModule\n\nWeatherModule\n\n\n\nNetworkModule\n\nNetworkModule\n\nNetworkModule -->\n\nWeatherModule->NetworkModule\n\n\n\n\n\nNetworkService\n\nNetworkService\n\nNetworkModule -->\n\nNetworkService->NetworkModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/network/network.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     NetworkService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    WeatherModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { WeatherModule } from './weather/weather.module';\n\nimport { NetworkService } from './network.service';\n\n@NgModule({\n    imports: [WeatherModule],\n    declarations: [],\n    providers: [NetworkService]\n})\nexport class NetworkModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NetworkService.html":{"url":"injectables/NetworkService.html","title":"injectable - NetworkService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  NetworkService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/network.service.ts\n        \n\n            \n                Description\n            \n            \n                Creates and develops the graph of the transport network in the selected area.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                bounds\n                            \n                            \n                                    Private\n                                graph\n                            \n                            \n                                    Private\n                                time\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildBody\n                            \n                            \n                                    Private\n                                buildQuery\n                            \n                            \n                                    Public\n                                createGraph\n                            \n                            \n                                    Private\n                                extractTags\n                            \n                            \n                                    Public\n                                getAssignmentMatrix\n                            \n                            \n                                    Public\n                                getGraph\n                            \n                            \n                                    Public\n                                getLinkFlows\n                            \n                            \n                                    Public\n                                getNetwork\n                            \n                            \n                                    Public\n                                getTime\n                            \n                            \n                                    Public\n                                getTrafficData\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Public\n                                setBounds\n                            \n                            \n                                    Public\n                                setTime\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/network.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            buildBody\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        buildBody(query: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/network.service.ts:216\n                            \n                        \n\n\n                \n                    \n                            Builds the query string.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                In Overpass QL\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            buildQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        buildQuery()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/network.service.ts:184\n                            \n                        \n\n\n                \n                    \n                            Builds the query in Overpass QL.\n\n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            createGraph\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createGraph(data: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/network.service.ts:75\n                            \n                        \n\n\n                \n                    \n                            With the data obtained from the Interpreter resource instantiate the Graph class\nand the associated classes Node and Edge that model the network graph.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Overpass API response\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            extractTags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        extractTags(tags: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/network.service.ts:220\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tags\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Tag[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getAssignmentMatrix\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAssignmentMatrix()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/network.service.ts:177\n                            \n                        \n\n\n                \n                    \n                            Gets the routes assignment matrix.\n\n\n                            \n                                Returns :     [][]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getGraph\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getGraph()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/network.service.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Graph\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getLinkFlows\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getLinkFlows()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/network.service.ts:170\n                            \n                        \n\n\n                \n                    \n                            Returns the values of the linkFlow attribute of the links.\n\n\n                            \n                                Returns :     number[]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getNetwork\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getNetwork()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/network.service.ts:58\n                            \n                        \n\n\n                \n                    \n                            Calls the Interpreter resource by providing the query in the Overpass language.\n\n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getTime()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/network.service.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Date | null\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getTrafficData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getTrafficData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/network.service.ts:162\n                            \n                        \n\n\n                \n                    \n                            Reiterates the invocation of the Route interface method to obtain all link traffic data.\n\n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/network.service.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setBounds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setBounds(bounds: google.maps.LatLngBoundsLiteral)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/network.service.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bounds\n                                                        \n                                                                    google.maps.LatLngBoundsLiteral\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setTime(time: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/network.service.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        time\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            bounds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bounds:     google.maps.LatLngBoundsLiteral\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.LatLngBoundsLiteral\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/network.service.ts:24\n                            \n                        \n\n                \n                    \n                        Rectangle in geographical coordinates of the area.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            graph\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        graph:     Graph\n\n                    \n                \n                    \n                        \n                            Type :     Graph\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/network.service.ts:19\n                            \n                        \n\n                \n                    \n                        The instance of the network graph.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            time\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        time:     Date | null\n\n                    \n                \n                    \n                        \n                            Type :     Date | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/network.service.ts:29\n                            \n                        \n\n                \n                    \n                        Time of the simulation.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, throwError, Observer } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport * as qs from 'qs';\n\nimport { Graph, Node, Edge, Tag } from './graph';\nimport { appConfig } from '../app-config';\n\n/**\n * Creates and develops the graph of the transport network in the selected area.\n */\n@Injectable() export class NetworkService {\n\n    /**\n     * The instance of the network graph.\n     */\n    private graph: Graph;\n\n    /**\n     * Rectangle in geographical coordinates of the area.\n     */\n    private bounds: google.maps.LatLngBoundsLiteral;\n\n    /**\n     * Time of the simulation.\n     */\n    private time: Date | null;\n\n    constructor(private http: HttpClient) { }\n\n    public reset(): void {\n        this.graph = null;\n        this.bounds = null;\n        this.time = null;\n    }\n\n    public getGraph(): Graph {\n        return this.graph;\n    }\n\n    public setBounds(bounds: google.maps.LatLngBoundsLiteral): void {\n        this.bounds = bounds;\n    }\n\n    public getTime(): Date | null {\n        return this.time;\n    }\n\n    public setTime(time: Date): void {\n        this.time = time;\n    }\n\n    /**\n     * Calls the Interpreter resource by providing the query in the Overpass language.\n     */\n    public getNetwork(): Observable {\n        const url: string = appConfig.api.overpassApi.url;\n        const headers: HttpHeaders = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded');\n        const query: string = this.buildQuery();\n        const body: string = this.buildBody(query);\n\n        return this.http.post(url, body, { headers: headers }).pipe(\n            map((response: any) => response),\n            catchError((error: any) => throwError(error))\n        );\n    }\n\n    /**\n     * With the data obtained from the Interpreter resource instantiate the Graph class\n     * and the associated classes Node and Edge that model the network graph.\n     * @param data Overpass API response\n     */\n    public createGraph(data: any): Observable {\n        this.graph = new Graph();\n\n        // Gets the list of elements.\n        const elements: any[] = data.elements;\n        // Create a degree list of nodes:\n        // a Map object that holds nodeId-degree as key-value pairs.\n        const nodesDegrees: Map = new Map();\n        // Gets the list of ways.\n        const ways: any[] = elements.filter((element: any) => element['type'] == 'way');\n        // Gets the list of nodes.\n        const nodes: any[] = elements.filter((element: any) => element['type'] == 'node');\n\n        // Creation of the graph algorithm.\n        return Observable.create((observer: Observer) => {\n            try {\n                for (const way of ways) {\n                    // Gets the list of nodes.\n                    const wayNodes: number[] = way['nodes'];\n                    for (const node of wayNodes) {\n                        const degree = nodesDegrees.get(node);\n                        nodesDegrees.set(node, degree ? degree + 1 : 1);\n                    }\n                }\n                let edgeId = 1;\n                for (const way of ways) {\n                    // Gets the list of nodes.\n                    const wayNodes: number[] = way['nodes'];\n                    // Removes the nodes that have degree equal to one.\n                    const filteredWayNodes = wayNodes.filter((node: number, i: number, arr: number[]) => {\n                        return i == 0 || // first node\n                            i == arr.length - 1 || // last node\n                            nodesDegrees.get(node) > 1; // degree greater than one\n                    });\n                    for (let i = 0; i  value['id'] == filteredWayNodes[i]);\n                        const refSecondNode: any = nodes.find((value: any) => value['id'] == filteredWayNodes[i + 1]);\n                        if (refFirstNode) {\n                            firstNode.lat = refFirstNode['lat'];\n                            firstNode.lon = refFirstNode['lon'];\n                            firstNode.tags = this.extractTags(refFirstNode['tags']);\n                            firstNode.outgoingEdges.push(firstEdge);\n                            if (secondEdge) { firstNode.incomingEdges.push(secondEdge); }\n                        }\n                        if (refSecondNode) {\n                            secondNode.lat = refSecondNode['lat'];\n                            secondNode.lon = refSecondNode['lon'];\n                            secondNode.tags = this.extractTags(refSecondNode['tags']);\n                            secondNode.incomingEdges.push(firstEdge);\n                            if (secondEdge) { secondNode.outgoingEdges.push(secondEdge); }\n                        }\n                        // Updates graph.\n                        this.graph.addOrUpdateNode(firstNode);\n                        this.graph.addOrUpdateNode(secondNode);\n                        this.graph.addEdge(firstEdge);\n                        if (secondEdge) { this.graph.addEdge(secondEdge); }\n                    }\n                }\n            } catch (error) {\n                observer.error('createGraph');\n            } finally {\n                observer.next(null);\n                observer.complete();\n            }\n        });\n    }\n\n    /**\n     * Reiterates the invocation of the Route interface method to obtain all link traffic data.\n     */\n    public getTrafficData(): Observable {\n\n        return of(null);\n    }\n\n    /**\n     * Returns the values of the linkFlow attribute of the links.\n     */\n    public getLinkFlows(): number[] {\n        return null;\n    }\n\n    /**\n     * Gets the routes assignment matrix.\n     */\n    public getAssignmentMatrix(): number[][] {\n        return null;\n    }\n\n    /**\n     * Builds the query in Overpass QL.\n     */\n    private buildQuery(): string {\n        // Result in JSON.\n        let query = '[out:json]';\n        // Request timeout.\n        query += '[timeout:' + appConfig.api.overpassApi.timeout + ']';\n        // Bounding box.\n        query += '[bbox:' +\n            this.bounds.south + ',' +\n            this.bounds.west + ',' +\n            this.bounds.north + ',' +\n            this.bounds.east + ']';\n        query += ';';\n        // Union.\n        query += '(';\n        // Roads.\n        query += 'way[highway~\"^(';\n        for (const highway of appConfig.api.overpassApi.highways) {\n            query += highway + '|';\n        }\n        query += ')$\"];';\n        // Respective nodes.\n        query += 'node(w);';\n        query += ');';\n        // Output.\n        query += 'out;';\n        return query;\n    }\n\n    /**\n     * Builds the query string.\n     * @param query In Overpass QL\n     */\n    private buildBody(query: any): string {\n        return qs.stringify({ data: query });\n    }\n\n    private extractTags(tags: any): Tag[] {\n        return tags ? Object.keys(tags).map((key: string) => {\n            return { key: key, value: tags[key] as string };\n        }) : [];\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Node.html":{"url":"classes/Node.html","title":"class - Node","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Node\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                Node represents a specific point on the earth's surface defined by its latitude and longitude.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                incomingEdges\n                            \n                            \n                                    Public\n                                lat\n                            \n                            \n                                    Public\n                                lon\n                            \n                            \n                                    Public\n                                nodeId\n                            \n                            \n                                    Public\n                                outgoingEdges\n                            \n                            \n                                    Public\n                                tags\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(nodeId: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/graph.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        nodeId\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            incomingEdges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        incomingEdges:     Edge[]\n\n                    \n                \n                    \n                        \n                            Type :     Edge[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lat\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lat:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lon:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nodeId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nodeId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            outgoingEdges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        outgoingEdges:     Edge[]\n\n                    \n                \n                    \n                        \n                            Type :     Edge[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tags:     Tag[]\n\n                    \n                \n                    \n                        \n                            Type :     Tag[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import * as combine from 'mout/array/combine';\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    public distance: number;\n\n    public duration: number;\n\n    public durationInTraffic: number;\n\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    public linkFlow: number;\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the arc flow and assigns it to the linkFlow attribute.\n     */\n    public calcLinkFlow(): void {\n\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    private nodes: Node[] = [];\n\n    private edges: Edge[] = [];\n\n    private relations: Relation[] = [];\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.lat = node.lat;\n            existingNode.lon = node.lon;\n            existingNode.tags = combine(existingNode.tags, node.tags);\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * Gets the incidence matrix of paths for O/D pairs.\n     */\n    public getIncidenceMatrix(): boolean[][] {\n        return null;\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param origin Source node\n     * @param destination Destination node\n     */\n    public getShortestPaths(origin: Node, destination: Node): Node[][] {\n        return null;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Relation.html":{"url":"classes/Relation.html","title":"class - Relation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Relation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                members\n                            \n                            \n                                    Public\n                                relationId\n                            \n                            \n                                    Public\n                                tags\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(relationId: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/graph.ts:96\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        relationId\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            members\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        members:     Member[]\n\n                    \n                \n                    \n                        \n                            Type :     Member[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:94\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            relationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        relationId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:92\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tags:     Tag[]\n\n                    \n                \n                    \n                        \n                            Type :     Tag[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:96\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import * as combine from 'mout/array/combine';\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    public distance: number;\n\n    public duration: number;\n\n    public durationInTraffic: number;\n\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    public linkFlow: number;\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the arc flow and assigns it to the linkFlow attribute.\n     */\n    public calcLinkFlow(): void {\n\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    private nodes: Node[] = [];\n\n    private edges: Edge[] = [];\n\n    private relations: Relation[] = [];\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.lat = node.lat;\n            existingNode.lon = node.lon;\n            existingNode.tags = combine(existingNode.tags, node.tags);\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * Gets the incidence matrix of paths for O/D pairs.\n     */\n    public getIncidenceMatrix(): boolean[][] {\n        return null;\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param origin Source node\n     * @param destination Destination node\n     */\n    public getShortestPaths(origin: Node, destination: Node): Node[][] {\n        return null;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reset.html":{"url":"classes/Reset.html","title":"class - Reset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/actions/wizard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/models/actions/wizard.actions.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : WizardActionTypes.Reset\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:52\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Step } from '../wizard';\n\n/**\n * ngrx: wizard Actions.\n */\nexport enum WizardActionTypes {\n\n    StepChanged = '[Wizard] Step Changed',\n    StepError = '[Wizard] Step Error',\n    StepPending = '[Wizard] Step Pending',\n    GoOn = '[Wizard] Go On',\n    Reset = '[Wizard] Reset'\n\n}\n\nexport class StepChanged implements Action {\n\n    public readonly type: string = WizardActionTypes.StepChanged;\n\n    constructor(public payload: { step: Step, index: number }) { }\n\n}\n\nexport class StepError implements Action {\n\n    public readonly type: string = WizardActionTypes.StepError;\n\n    constructor(public payload: string) { }\n\n}\n\nexport class StepPending implements Action {\n\n    public readonly type: string = WizardActionTypes.StepPending;\n\n    constructor(public payload: boolean) { }\n\n}\n\nexport class GoOn implements Action {\n\n    public readonly type: string = WizardActionTypes.GoOn;\n\n    constructor(public payload: { step: Step, index: number, nextIndex: number }) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = WizardActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type WizardActions = StepChanged | StepError | StepPending | GoOn | Reset;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchForTheAreaComponent.html":{"url":"components/SearchForTheAreaComponent.html","title":"component - SearchForTheAreaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SearchForTheAreaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-search-for-the-area\n            \n\n            \n                styleUrls\n                search-for-the-area.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./search-for-the-area.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentPosition\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                search\n                            \n                            \n                                sendActions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(wizard: WizardService, location: LocationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    LocationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCurrentPosition\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCurrentPosition()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            search\n                            \n                            \n                        \n                    \n                \n                \n                    \nsearch(address: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        address\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribe to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { WizardService } from '../wizard.service';\nimport { LocationService } from '../../../location/location.service';\n\nimport { BaseComponent } from '../../models/base.component';\n\n@Component({\n    selector: 'wizard-search-for-the-area',\n    templateUrl: './search-for-the-area.component.html',\n    styleUrls: ['./search-for-the-area.component.scss']\n})\nexport class SearchForTheAreaComponent extends BaseComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    constructor(\n        private wizard: WizardService,\n        private location: LocationService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.valueChanges();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        // Updates location service data on value changes.\n        this.subscriptions.push(this.formGroup.valueChanges.subscribe(\n            () => {\n                this.location.setLatLng(this.formGroup.get('center').value);\n            }\n        ));\n    }\n\n    receiveActions(): void {\n        //\n    }\n\n    sendActions(): void {\n        //\n    }\n\n    search(address: string): void {\n        if (!!address) {\n            // Updates pending state.\n            this.wizard.putOnHold();\n            // Converts the address into geographic coordinates.\n            this.location.codeAddress(address).forEach(\n                (results: google.maps.GeocoderResult[]) => {\n                    this.formGroup.get('center').setValue({\n                        lat: results[0].geometry.location.lat(),\n                        lng: results[0].geometry.location.lng()\n                    });\n                    // Updates step state.\n                    this.wizard.updateStep(this.formGroup.value, this.index);\n                })\n                .then()\n                .catch((error: google.maps.GeocoderStatus) => {\n                    if (error === google.maps.GeocoderStatus.ZERO_RESULTS) {\n                        // Updates error state.\n                        this.wizard.putInError('Zero results');\n                    } else {\n                        // INVALID_REQUEST, OVER_QUERY_LIMIT, REQUEST_DENIED, UNKNOWN_ERROR\n                        // Updates error state.\n                        this.wizard.putInError('Invalid request');\n                    }\n                });\n        }\n    }\n\n    getCurrentPosition(): void {\n        if (navigator.geolocation) {\n            // Updates pending state.\n            this.wizard.putOnHold();\n            this.location.getCurrentPosition().subscribe(\n                (position: Position) => {\n                    this.formGroup.get('center').setValue({ lat: position.coords.latitude, lng: position.coords.longitude });\n                    // Updates step state.\n                    this.wizard.updateStep(this.formGroup.value, this.index);\n                },\n                (error: PositionError) => {\n                    if (error.code > 0) {\n                        let message: string;\n                        switch (error.code) {\n                            case error.PERMISSION_DENIED:\n                                message = 'Permission denied';\n                                break;\n                            case error.POSITION_UNAVAILABLE:\n                                message = 'Position unavailable';\n                                break;\n                            case error.TIMEOUT:\n                                message = 'Position timeout';\n                                break;\n                        }\n                        // Updates error state.\n                        this.wizard.putInError(message);\n                    }\n                });\n\n        } else {\n            // Updates error state.\n            this.wizard.putInError(\"Browser doesn't support geolocation\");\n        }\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n            \n                search\n            \n        \n        Get current position\n    \n\n    \n        Continue\n            navigate_next\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    search                            Get current position                Continue            navigate_next            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchForTheAreaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectionOfTheAreaComponent.html":{"url":"components/SelectionOfTheAreaComponent.html","title":"component - SelectionOfTheAreaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SelectionOfTheAreaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-selection-of-the-area\n            \n\n            \n                styleUrls\n                selection-of-the-area.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./selection-of-the-area.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, wizard: WizardService, network: NetworkService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribe to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n\n                \n                    \n                        getmin()\n                    \n                \n                            \n                                \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:28\n                                \n                            \n                    \n                        \n                                Min moment: current time.\n\n\n                                \n                                    Returns :     Date\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n\n                \n                    \n                        getmax()\n                    \n                \n                            \n                                \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:35\n                                \n                            \n                    \n                        \n                                Max moment: current day.\n\n\n                                \n                                    Returns :     Date\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { WizardService } from '../wizard.service';\nimport { NetworkService } from '../../../network/network.service';\nimport { uiConfig } from '../../ui-config';\nimport * as fromUi from '../../models/reducers';\nimport { Step } from '../../models/wizard';\n\nimport { BaseComponent } from '../../models/base.component';\n\n@Component({\n    selector: 'wizard-selection-of-the-area',\n    templateUrl: './selection-of-the-area.component.html',\n    styleUrls: ['./selection-of-the-area.component.scss']\n})\nexport class SelectionOfTheAreaComponent extends BaseComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    /**\n     * Min moment: current time.\n     */\n    get min(): Date {\n        return new Date();\n    }\n\n    /**\n     * Max moment: current day.\n     */\n    get max(): Date {\n        return new Date(\n            this.min.getFullYear(),\n            this.min.getMonth(),\n            this.min.getDate(),\n            this.min.getHours() + uiConfig.timeLimit,\n            this.min.getMinutes()\n        );\n    }\n\n    constructor(\n        private store: Store,\n        private wizard: WizardService,\n        private network: NetworkService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.valueChanges();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        // Updates network service data on value changes.\n        this.subscriptions.push(this.formGroup.valueChanges.subscribe(\n            () => {\n                this.network.setBounds(this.formGroup.get('bounds').value);\n                this.network.setTime(this.formGroup.get('time').value);\n            }\n        ));\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.steps)).subscribe((steps: Step[]) => {\n            if (steps[this.index]) {\n                this.formGroup.get('bounds').setValue(steps[this.index]['data']['bounds']);\n            }\n        }));\n    }\n\n    sendActions(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n            \n                calendar_today\n            \n            \n                \n                \n                    Please, enter a time between the current time and the next 24 hours\n                \n                \n                    Please, insert a valid time or select it\n                \n            \n        \n        \n    \n\n    \n        Continue\n            navigate_next\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    calendar_today                                                                            Please, enter a time between the current time and the next 24 hours                                                    Please, insert a valid time or select it                                                            Continue            navigate_next            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SelectionOfTheAreaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n  Modules\n  SharedModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nFooterComponent\n\nFooterComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nFooterComponent->SharedModule\n\n\n\n\n\nInfoDialogComponent\n\nInfoDialogComponent\n\nSharedModule -->\n\nInfoDialogComponent->SharedModule\n\n\n\n\n\nMessageArchivedComponent\n\nMessageArchivedComponent\n\nSharedModule -->\n\nMessageArchivedComponent->SharedModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nSharedModule->FooterComponent \n\n\n\n\n\nInfoDialogComponent \n\nInfoDialogComponent \n\nInfoDialogComponent  -->\n\nSharedModule->InfoDialogComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nMessageArchivedComponent \n\nMessageArchivedComponent \n\nMessageArchivedComponent  -->\n\nSharedModule->MessageArchivedComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                FooterComponent\n                            \n                            \n                                InfoDialogComponent\n                            \n                            \n                                MessageArchivedComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                InfoDialogComponent\n                            \n                            \n                                MessageArchivedComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    MaterialModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    FooterComponent\n                            \n                            \n                                    InfoDialogComponent\n                            \n                            \n                                    MaterialModule\n                            \n                            \n                                    MessageArchivedComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { MaterialModule } from './material.module';\n\nimport { FooterComponent } from './footer/footer.component';\nimport { MessageArchivedComponent } from './message-archived.component';\nimport { InfoDialogComponent } from './info-dialog.component';\n\nimport { CanDeactivateGuard } from './can-deactivate-guard.service';\n\nconst sharedModules: any[] = [\n    CommonModule,\n    RouterModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    FlexLayoutModule\n];\n\n@NgModule({\n    entryComponents: [\n        MessageArchivedComponent,\n        InfoDialogComponent\n    ],\n    declarations: [\n        FooterComponent,\n        MessageArchivedComponent,\n        InfoDialogComponent\n    ],\n    imports: sharedModules,\n    exports: [\n        sharedModules,\n        FooterComponent,\n        MessageArchivedComponent,\n        InfoDialogComponent\n    ]\n})\nexport class SharedModule {\n    public static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: SharedModule,\n            providers: [\n                CanDeactivateGuard\n            ]\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SimulationComponent.html":{"url":"components/SimulationComponent.html","title":"component - SimulationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SimulationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/simulation/simulation.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-simulation\n            \n\n            \n                styleUrls\n                simulation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./simulation.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/simulation/simulation.component.ts:13\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'wizard-simulation',\n    templateUrl: './simulation.component.html',\n    styleUrls: ['./simulation.component.scss']\n})\nexport class SimulationComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    constructor() { }\n\n    ngOnInit(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SimulationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SimulationModule.html":{"url":"modules/SimulationModule.html","title":"module - SimulationModule","body":"\n                   \n\n\n\n\n  Modules\n  SimulationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SimulationModule\n\n\n\ncluster_SimulationModule_providers\n\n\n\n\nSimulationService\n\nSimulationService\n\n\n\nSimulationModule\n\nSimulationModule\n\nSimulationModule -->\n\nSimulationService->SimulationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/simulation/simulation.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     SimulationService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { SimulationService } from './simulation.service';\n\n@NgModule({\n    imports: [],\n    declarations: [],\n    providers: [SimulationService]\n})\nexport class SimulationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SimulationService.html":{"url":"injectables/SimulationService.html","title":"injectable - SimulationService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SimulationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/simulation.service.ts\n        \n\n            \n                Description\n            \n            \n                Applies the traffic flow propagation algorithm.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/simulation.service.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Applies the traffic flow propagation algorithm.\n */\n@Injectable() export class SimulationService {\n\n    public reset(): void {\n        //\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatisticsComponent.html":{"url":"components/StatisticsComponent.html","title":"component - StatisticsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StatisticsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/statistics/statistics.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-statistics\n            \n\n            \n                styleUrls\n                statistics.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./statistics.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/statistics/statistics.component.ts:13\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'wizard-statistics',\n    templateUrl: './statistics.component.html',\n    styleUrls: ['./statistics.component.scss']\n})\nexport class StatisticsComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    constructor() { }\n\n    ngOnInit(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatisticsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Step.html":{"url":"interfaces/Step.html","title":"interface - Step","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Step\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/wizard.ts\n        \n\n            \n                Description\n            \n            \n                Step model.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Form model data.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Step {\n\n    /**\n     * Form model data.\n     */\n    data: any;\n\n}\n\n/**\n * Initial steps.\n */\nexport const STEPS: Step[] = [];\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StepChanged.html":{"url":"classes/StepChanged.html","title":"class - StepChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  StepChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/actions/wizard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/models/actions/wizard.actions.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : WizardActionTypes.StepChanged\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Step } from '../wizard';\n\n/**\n * ngrx: wizard Actions.\n */\nexport enum WizardActionTypes {\n\n    StepChanged = '[Wizard] Step Changed',\n    StepError = '[Wizard] Step Error',\n    StepPending = '[Wizard] Step Pending',\n    GoOn = '[Wizard] Go On',\n    Reset = '[Wizard] Reset'\n\n}\n\nexport class StepChanged implements Action {\n\n    public readonly type: string = WizardActionTypes.StepChanged;\n\n    constructor(public payload: { step: Step, index: number }) { }\n\n}\n\nexport class StepError implements Action {\n\n    public readonly type: string = WizardActionTypes.StepError;\n\n    constructor(public payload: string) { }\n\n}\n\nexport class StepPending implements Action {\n\n    public readonly type: string = WizardActionTypes.StepPending;\n\n    constructor(public payload: boolean) { }\n\n}\n\nexport class GoOn implements Action {\n\n    public readonly type: string = WizardActionTypes.GoOn;\n\n    constructor(public payload: { step: Step, index: number, nextIndex: number }) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = WizardActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type WizardActions = StepChanged | StepError | StepPending | GoOn | Reset;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StepError.html":{"url":"classes/StepError.html","title":"class - StepError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  StepError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/actions/wizard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/models/actions/wizard.actions.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : WizardActionTypes.StepError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Step } from '../wizard';\n\n/**\n * ngrx: wizard Actions.\n */\nexport enum WizardActionTypes {\n\n    StepChanged = '[Wizard] Step Changed',\n    StepError = '[Wizard] Step Error',\n    StepPending = '[Wizard] Step Pending',\n    GoOn = '[Wizard] Go On',\n    Reset = '[Wizard] Reset'\n\n}\n\nexport class StepChanged implements Action {\n\n    public readonly type: string = WizardActionTypes.StepChanged;\n\n    constructor(public payload: { step: Step, index: number }) { }\n\n}\n\nexport class StepError implements Action {\n\n    public readonly type: string = WizardActionTypes.StepError;\n\n    constructor(public payload: string) { }\n\n}\n\nexport class StepPending implements Action {\n\n    public readonly type: string = WizardActionTypes.StepPending;\n\n    constructor(public payload: boolean) { }\n\n}\n\nexport class GoOn implements Action {\n\n    public readonly type: string = WizardActionTypes.GoOn;\n\n    constructor(public payload: { step: Step, index: number, nextIndex: number }) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = WizardActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type WizardActions = StepChanged | StepError | StepPending | GoOn | Reset;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StepPending.html":{"url":"classes/StepPending.html","title":"class - StepPending","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  StepPending\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/actions/wizard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/models/actions/wizard.actions.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : WizardActionTypes.StepPending\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Step } from '../wizard';\n\n/**\n * ngrx: wizard Actions.\n */\nexport enum WizardActionTypes {\n\n    StepChanged = '[Wizard] Step Changed',\n    StepError = '[Wizard] Step Error',\n    StepPending = '[Wizard] Step Pending',\n    GoOn = '[Wizard] Go On',\n    Reset = '[Wizard] Reset'\n\n}\n\nexport class StepChanged implements Action {\n\n    public readonly type: string = WizardActionTypes.StepChanged;\n\n    constructor(public payload: { step: Step, index: number }) { }\n\n}\n\nexport class StepError implements Action {\n\n    public readonly type: string = WizardActionTypes.StepError;\n\n    constructor(public payload: string) { }\n\n}\n\nexport class StepPending implements Action {\n\n    public readonly type: string = WizardActionTypes.StepPending;\n\n    constructor(public payload: boolean) { }\n\n}\n\nexport class GoOn implements Action {\n\n    public readonly type: string = WizardActionTypes.GoOn;\n\n    constructor(public payload: { step: Step, index: number, nextIndex: number }) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = WizardActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type WizardActions = StepChanged | StepError | StepPending | GoOn | Reset;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tag.html":{"url":"interfaces/Tag.html","title":"interface - Tag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Tag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                Tag describes the meaning of the particular element to which it is attached.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        key\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as combine from 'mout/array/combine';\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    public distance: number;\n\n    public duration: number;\n\n    public durationInTraffic: number;\n\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    public linkFlow: number;\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the arc flow and assigns it to the linkFlow attribute.\n     */\n    public calcLinkFlow(): void {\n\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    private nodes: Node[] = [];\n\n    private edges: Edge[] = [];\n\n    private relations: Relation[] = [];\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.lat = node.lat;\n            existingNode.lon = node.lon;\n            existingNode.tags = combine(existingNode.tags, node.tags);\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * Gets the incidence matrix of paths for O/D pairs.\n     */\n    public getIncidenceMatrix(): boolean[][] {\n        return null;\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param origin Source node\n     * @param destination Destination node\n     */\n    public getShortestPaths(origin: Node, destination: Node): Node[][] {\n        return null;\n    }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UiComponent.html":{"url":"components/UiComponent.html","title":"component - UiComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UiComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/ui.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                CanComponentDeactivate\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ui\n            \n\n            \n                styleUrls\n                ui.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ui.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pending\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canDeactivate\n                            \n                            \n                                exit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDialog\n                            \n                            \n                                openSnackBar\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, snackBar: MatSnackBar, dialog: MatDialog, store: Store, wizard: WizardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/ui.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canDeactivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanDeactivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable | boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            exit\n                            \n                            \n                        \n                    \n                \n                \n                    \nexit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:74\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenDialog(data: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:86\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openSnackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenSnackBar(message: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pending\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pending:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy, ViewEncapsulation } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatSnackBar, MatDialog } from '@angular/material';\nimport { Subscription, Observable, of } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { CanComponentDeactivate } from '../shared/can-deactivate-guard.service';\nimport { WizardService } from './wizard/wizard.service';\nimport * as fromUi from './models/reducers';\n\nimport { MessageArchivedComponent } from '../shared/message-archived.component';\nimport { InfoDialogComponent } from '../shared/info-dialog.component';\n\n@Component({\n    selector: 'app-ui',\n    templateUrl: './ui.component.html',\n    styleUrls: ['./ui.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class UiComponent implements OnInit, OnDestroy, CanComponentDeactivate {\n\n    pending = false;\n\n    subscriptions: Subscription[] = [];\n\n    constructor(\n        private router: Router,\n        private snackBar: MatSnackBar,\n        private dialog: MatDialog,\n        private store: Store,\n        private wizard: WizardService\n    ) { }\n\n    ngOnInit(): void {\n        // Pending state.\n        this.subscriptions.push(this.store.pipe(select(fromUi.pending)).subscribe((pending: boolean) => {\n            this.pending = pending;\n        }));\n        // Error state.\n        this.subscriptions.push(this.store.pipe(select(fromUi.error)).subscribe((error: string) => {\n            if (error) {\n                this.openSnackBar(error);\n            }\n        }));\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach((subscription: Subscription) => {\n            if (subscription) { subscription.unsubscribe(); }\n        });\n    }\n\n    canDeactivate(): Observable | boolean {\n        return this.openDialog('Are you sure you want to quit the application?').pipe(\n            tap((dialogResult: boolean) => {\n                if (dialogResult) {\n                    this.wizard.reset();\n                }\n            })\n        );\n    }\n\n    reset(): void {\n        this.openDialog('Are you sure you want to reset the application?').subscribe(\n            (dialogResult: boolean) => {\n                if (dialogResult) {\n                    this.wizard.reset();\n                }\n            });\n    }\n\n    exit(): void {\n        this.router.navigate(['/home']);\n    }\n\n    openSnackBar(message: string): void {\n        this.snackBar.openFromComponent(MessageArchivedComponent, {\n            data: message,\n            duration: 4000,\n            panelClass: ['error-snackbar']\n        });\n    }\n\n    openDialog(data: string): Observable {\n        const dialogRef = this.dialog.open(InfoDialogComponent, {\n            width: '250px',\n            data: data,\n            hasBackdrop: true,\n            panelClass: 'info-dialog'\n        });\n\n        return dialogRef.afterClosed();\n    }\n\n}\n\n    \n\n    \n        \n    \n    \n\n\n\n    \n        \n            \n        \n        \n            \n        \n    \n    \n        \n        \n            Reset\n            Exit\n        \n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                        Reset            Exit            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UiComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiModule.html":{"url":"modules/UiModule.html","title":"module - UiModule","body":"\n                   \n\n\n\n\n  Modules\n  UiModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UiModule\n\n\n\ncluster_UiModule_declarations\n\n\n\ncluster_UiModule_imports\n\n\n\ncluster_UiModule_providers\n\n\n\n\nChangeOfConditionsComponent\n\nChangeOfConditionsComponent\n\n\n\nUiModule\n\nUiModule\n\nUiModule -->\n\nChangeOfConditionsComponent->UiModule\n\n\n\n\n\nEstimateOfDemandComponent\n\nEstimateOfDemandComponent\n\nUiModule -->\n\nEstimateOfDemandComponent->UiModule\n\n\n\n\n\nGoogleMapComponent\n\nGoogleMapComponent\n\nUiModule -->\n\nGoogleMapComponent->UiModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nUiModule -->\n\nMapComponent->UiModule\n\n\n\n\n\nSearchForTheAreaComponent\n\nSearchForTheAreaComponent\n\nUiModule -->\n\nSearchForTheAreaComponent->UiModule\n\n\n\n\n\nSelectionOfTheAreaComponent\n\nSelectionOfTheAreaComponent\n\nUiModule -->\n\nSelectionOfTheAreaComponent->UiModule\n\n\n\n\n\nSimulationComponent\n\nSimulationComponent\n\nUiModule -->\n\nSimulationComponent->UiModule\n\n\n\n\n\nStatisticsComponent\n\nStatisticsComponent\n\nUiModule -->\n\nStatisticsComponent->UiModule\n\n\n\n\n\nUiComponent\n\nUiComponent\n\nUiModule -->\n\nUiComponent->UiModule\n\n\n\n\n\nWeatherComponent\n\nWeatherComponent\n\nUiModule -->\n\nWeatherComponent->UiModule\n\n\n\n\n\nWizardComponent\n\nWizardComponent\n\nUiModule -->\n\nWizardComponent->UiModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nUiModule -->\n\nSharedModule->UiModule\n\n\n\n\n\nUiRoutingModule\n\nUiRoutingModule\n\nUiModule -->\n\nUiRoutingModule->UiModule\n\n\n\n\n\nMapService\n\nMapService\n\nUiModule -->\n\nMapService->UiModule\n\n\n\n\n\nWizardService\n\nWizardService\n\nUiModule -->\n\nWizardService->UiModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/ui/ui.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ChangeOfConditionsComponent\n                            \n                            \n                                EstimateOfDemandComponent\n                            \n                            \n                                GoogleMapComponent\n                            \n                            \n                                MapComponent\n                            \n                            \n                                SearchForTheAreaComponent\n                            \n                            \n                                SelectionOfTheAreaComponent\n                            \n                            \n                                SimulationComponent\n                            \n                            \n                                StatisticsComponent\n                            \n                            \n                                UiComponent\n                            \n                            \n                                WeatherComponent\n                            \n                            \n                                WizardComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     MapService\n                            \n                            \n                                     WizardService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                            \n                                    UiRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { UiRoutingModule } from './ui-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { StoreModule } from \"@ngrx/store\";\nimport { EffectsModule } from \"@ngrx/effects\";\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\n\nimport { UiComponent } from './ui.component';\nimport { WizardComponent } from './wizard/wizard.component';\nimport { SearchForTheAreaComponent } from './wizard/search-for-the-area/search-for-the-area.component';\nimport { SelectionOfTheAreaComponent } from './wizard/selection-of-the-area/selection-of-the-area.component';\nimport { EstimateOfDemandComponent } from './wizard/estimate-of-demand/estimate-of-demand.component';\nimport { ChangeOfConditionsComponent } from './wizard/change-of-conditions/change-of-conditions.component';\nimport { SimulationComponent } from './wizard/simulation/simulation.component';\nimport { StatisticsComponent } from './wizard/statistics/statistics.component';\nimport { MapComponent } from './map/map.component';\nimport { GoogleMapComponent } from './map/google-map.component';\nimport { WeatherComponent } from './weather/weather.component';\n\nimport { WizardService } from './wizard/wizard.service';\nimport { MapService } from './map/map.service';\nimport { reducers } from './models/reducers';\n\n@NgModule({\n    imports: [\n        UiRoutingModule,\n        SharedModule,\n        StoreModule.forFeature('ui', reducers),\n        EffectsModule.forFeature([]),\n        OwlDateTimeModule,\n        OwlNativeDateTimeModule\n    ],\n    declarations: [\n        UiComponent,\n        WizardComponent,\n        SearchForTheAreaComponent,\n        SelectionOfTheAreaComponent,\n        EstimateOfDemandComponent,\n        ChangeOfConditionsComponent,\n        SimulationComponent,\n        StatisticsComponent,\n        MapComponent,\n        GoogleMapComponent,\n        WeatherComponent\n    ],\n    providers: [\n        WizardService,\n        MapService\n    ]\n})\nexport class UiModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiRoutingModule.html":{"url":"modules/UiRoutingModule.html","title":"module - UiRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  UiRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/ui/ui-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CanDeactivateGuard } from '../shared/can-deactivate-guard.service';\n\nimport { UiComponent } from './ui.component';\n\nconst routes: Routes = [\n    { path: '', component: UiComponent, pathMatch: 'full', canDeactivate: [CanDeactivateGuard] },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class UiRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UiState.html":{"url":"interfaces/UiState.html","title":"interface - UiState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UiState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/reducers.ts\n        \n\n            \n                Description\n            \n            \n                User interface state management.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        wizard\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        wizard\n                                    \n                                \n                                \n                                    \n                                        wizard:     fromWizard.WizardState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromWizard.WizardState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, createFeatureSelector, createSelector, MemoizedSelector } from \"@ngrx/store\";\n\nimport * as fromWizard from './reducers/wizard.reducer';\nimport { Step } from \"./wizard\";\n\n/**\n * User interface state management.\n */\nexport interface UiState {\n\n    wizard: fromWizard.WizardState;\n\n}\n\nexport const reducers: ActionReducerMap = {\n    wizard: fromWizard.wizardReducer\n};\n\nexport const featureUiState: MemoizedSelector = createFeatureSelector('ui');\n\n/**\n * Exports the wizard state.\n */\nexport const wizardState: MemoizedSelector = createSelector(\n    featureUiState,\n    (state: UiState) => state.wizard\n);\n\n/**\n * Exports the steps state.\n */\nexport const steps: MemoizedSelector = createSelector(\n    wizardState,\n    fromWizard.getSteps\n);\n\n/**\n * Exports the current step state.\n */\nexport const currentStep: MemoizedSelector = createSelector(\n    wizardState,\n    fromWizard.getCurrentStep\n);\n\n/**\n * Exports the error state.\n */\nexport const error: MemoizedSelector = createSelector(\n    wizardState,\n    fromWizard.getError\n);\n\n/**\n * Exports the pending state.\n */\nexport const pending: MemoizedSelector = createSelector(\n    wizardState,\n    fromWizard.getPending\n);\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherComponent.html":{"url":"components/WeatherComponent.html","title":"component - WeatherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/weather/weather.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ui-weather\n            \n\n            \n                styleUrls\n                weather.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/weather/weather.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'ui-weather',\n    templateUrl: './weather.component.html',\n    styleUrls: ['./weather.component.scss']\n})\nexport class WeatherComponent implements OnInit {\n\n    constructor() { }\n\n    ngOnInit(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    weather\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    weather'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WeatherModule.html":{"url":"modules/WeatherModule.html","title":"module - WeatherModule","body":"\n                   \n\n\n\n\n  Modules\n  WeatherModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_providers\n\n\n\n\nWeatherService\n\nWeatherService\n\n\n\nWeatherModule\n\nWeatherModule\n\nWeatherModule -->\n\nWeatherService->WeatherModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/network/weather/weather.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     WeatherService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { WeatherService } from './weather.service';\n\n@NgModule({\n    imports: [],\n    declarations: [],\n    providers: [WeatherService]\n})\nexport class WeatherModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherService.html":{"url":"injectables/WeatherService.html","title":"injectable - WeatherService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  WeatherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/weather/weather.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides reduction factors for graph values based on weather conditions.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Provides reduction factors for graph values based on weather conditions.\n */\n@Injectable() export class WeatherService {\n\n    public reset(): void {\n        //\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WizardComponent.html":{"url":"components/WizardComponent.html","title":"component - WizardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WizardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/wizard.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                ui-wizard\n            \n\n            \n                styleUrls\n                wizard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./wizard.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                stepper\n                            \n                            \n                                subscriptions\n                            \n                            \n                                wizardForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                exit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                stepClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, wizard: WizardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/wizard.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            exit\n                            \n                            \n                        \n                    \n                \n                \n                    \nexit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.component.ts:88\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.component.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stepClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nstepClick(event: StepperSelectionEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.component.ts:76\n                            \n                        \n\n\n                \n                    \n                            Updates current step and step data.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    StepperSelectionEvent\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                SelectionChange stepper event.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stepper\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stepper:     MatStepper\n\n                    \n                \n                    \n                        \n                            Type :     MatStepper\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wizardForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        wizardForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        formSteps\n                    \n                \n\n                \n                    \n                        getformSteps()\n                    \n                \n                            \n                                \n                                    Defined in src/app/ui/wizard/wizard.component.ts:24\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, OnDestroy, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, FormArray, Validators } from '@angular/forms';\nimport { MatStepper } from '@angular/material';\nimport { StepperSelectionEvent } from '@angular/cdk/stepper';\nimport { Subscription } from 'rxjs';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { WizardService } from './wizard.service';\nimport * as fromUi from '../models/reducers';\n\n@Component({\n    selector: 'ui-wizard',\n    templateUrl: './wizard.component.html',\n    styleUrls: ['./wizard.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class WizardComponent implements OnInit, OnDestroy {\n\n    @ViewChild('stepper') stepper: MatStepper;\n\n    wizardForm: FormGroup;\n\n    get formSteps(): FormArray {\n        return this.wizardForm.get('formSteps') as FormArray;\n    }\n\n    subscriptions: Subscription[] = [];\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private store: Store,\n        private wizard: WizardService\n    ) { }\n\n    ngOnInit(): void {\n        // Creates form model.\n        this.wizardForm = this.formBuilder.group({\n            formSteps: this.formBuilder.array([\n                this.formBuilder.group({\n                    address: [''],\n                    center: [null, [Validators.required]]\n                }),\n                this.formBuilder.group({\n                    bounds: [null, [Validators.required]],\n                    time: [null]\n                }),\n                this.formBuilder.group({\n\n                }),\n                this.formBuilder.group({\n\n                }),\n                this.formBuilder.group({\n\n                }),\n                this.formBuilder.group({\n\n                })\n            ])\n        }, { updateOn: 'blur' });\n\n        this.wizard.stepper = this.stepper;\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach((subscription: Subscription) => {\n            if (subscription) { subscription.unsubscribe(); }\n        });\n    }\n\n    /**\n     * Updates current step and step data.\n     * @param event SelectionChange stepper event.\n     */\n    stepClick(event: StepperSelectionEvent): void {\n        const index: number = event.previouslySelectedIndex;\n        const nextIndex: number = event.selectedIndex;\n        if (nextIndex > index) {\n            this.wizard.goOn(\n                this.wizardForm.get('formSteps').get([index]).value,\n                index,\n                nextIndex\n            );\n        }\n    }\n\n    exit(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    \n                        Search for the area\n                    \n                    \n                \n                \n                    \n                        Selection of the area\n                    \n                    \n                \n                \n                    Estimate of demand\n                    \n                \n                \n                    Change of conditions\n                    \n                \n                \n                    Simulation\n                    \n                \n                \n                    Statistics\n                    \n                \n            \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    Search for the area                                                                                                                    Selection of the area                                                                                            Estimate of demand                                                                        Change of conditions                                                                        Simulation                                                                        Statistics                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WizardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WizardService.html":{"url":"injectables/WizardService.html","title":"injectable - WizardService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  WizardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/wizard/wizard.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                state\n                            \n                            \n                                    Public\n                                stepper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                goOn\n                            \n                            \n                                    Public\n                                putInError\n                            \n                            \n                                    Public\n                                putOnHold\n                            \n                            \n                                    Public\n                                removeFromWaiting\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Public\n                                updateStep\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, map: MapService, location: LocationService, network: NetworkService, weather: WeatherService, demand: DemandService, simulation: SimulationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/wizard.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                    MapService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    LocationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        weather\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        demand\n                                                  \n                                                        \n                                                                    DemandService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        simulation\n                                                  \n                                                        \n                                                                    SimulationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            goOn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        goOn(data: any, index: number, nextIndex: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        nextIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            putInError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        putInError(error: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            putOnHold\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        putOnHold()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            removeFromWaiting\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeFromWaiting()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:74\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updateStep\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateStep(data: any, index: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            state\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        state:     WizardState\n\n                    \n                \n                    \n                        \n                            Type :     WizardState\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stepper\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stepper:     MatStepper\n\n                    \n                \n                    \n                        \n                            Type :     MatStepper\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { MatStepper } from \"@angular/material\";\n\nimport { Store, select } from '@ngrx/store';\n\nimport { MapService } from \"../map/map.service\";\nimport { LocationService } from \"../../location/location.service\";\nimport { NetworkService } from \"../../network/network.service\";\nimport { WeatherService } from \"../../network/weather/weather.service\";\nimport { DemandService } from \"../../demand/demand.service\";\nimport { SimulationService } from \"../../simulation/simulation.service\";\n\nimport * as fromUi from '../models/reducers';\nimport { WizardActionTypes } from '../models/actions/wizard.actions';\nimport { WizardState } from \"../models/reducers/wizard.reducer\";\n\n@Injectable() export class WizardService {\n\n    public state: WizardState;\n\n    public stepper: MatStepper;\n\n    constructor(\n        private store: Store,\n        private map: MapService,\n        private location: LocationService,\n        private network: NetworkService,\n        private weather: WeatherService,\n        private demand: DemandService,\n        private simulation: SimulationService\n    ) {\n        this.store.pipe(select(fromUi.wizardState)).subscribe((state: WizardState) => {\n            this.state = state;\n            // TODO Remove\n            console.log(state);\n        });\n    }\n\n    public updateStep(data: any, index: number): void {\n        this.store.dispatch({\n            type: WizardActionTypes.StepChanged,\n            payload: { step: { data: data }, index: index }\n        });\n    }\n\n    public putInError(error: string): void {\n        this.store.dispatch({\n            type: WizardActionTypes.StepError,\n            payload: error\n        });\n    }\n\n    public putOnHold(): void {\n        this.store.dispatch({\n            type: WizardActionTypes.StepPending,\n            payload: true\n        });\n    }\n\n    public removeFromWaiting(): void {\n        this.store.dispatch({\n            type: WizardActionTypes.StepPending,\n            payload: false\n        });\n    }\n\n    public goOn(data: any, index: number, nextIndex: number): void {\n        this.store.dispatch({\n            type: WizardActionTypes.GoOn,\n            payload: { step: { data: data }, index: index, nextIndex: nextIndex }\n        });\n    }\n\n    public reset(): void {\n        // App.\n        this.location.reset();\n        this.network.reset();\n        this.weather.reset();\n        this.demand.reset();\n        this.simulation.reset();\n        // UI.\n        this.map.reset();\n        // UI state.\n        this.store.dispatch({\n            type: WizardActionTypes.Reset\n        });\n        // Stepper.\n        this.stepper.reset();\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WizardState.html":{"url":"interfaces/WizardState.html","title":"interface - WizardState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WizardState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/reducers/wizard.reducer.ts\n        \n\n            \n                Description\n            \n            \n                Wizard state management.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        currentStep\n                                \n                                \n                                        error\n                                \n                                \n                                        pending\n                                \n                                \n                                        steps\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentStep\n                                    \n                                \n                                \n                                    \n                                        currentStep:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pending\n                                    \n                                \n                                \n                                    \n                                        pending:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        steps\n                                    \n                                \n                                \n                                    \n                                        steps:     Step[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Step[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import cloneDeep from 'clone-deep';\n\nimport { Step, STEPS } from \"../wizard\";\nimport { WizardActions, WizardActionTypes } from '../actions/wizard.actions';\n\n/**\n * Wizard state management.\n */\nexport interface WizardState {\n\n    steps: Step[];\n    currentStep: number;\n    error: string | null;\n    pending: boolean;\n\n}\n\nexport const initialWizardState: WizardState = {\n    steps: STEPS,\n    currentStep: 0,\n    error: null,\n    pending: false\n};\n\n/**\n * ngrx: wizard Reducer.\n */\nexport function wizardReducer(state: WizardState = cloneDeep(initialWizardState), action: WizardActions): WizardState {\n    switch (action.type) {\n        case WizardActionTypes.StepChanged: {\n            // Updates the step at the provided index.\n            state.steps[action.payload.index] = action.payload.step;\n            return {\n                ...state,\n                steps: cloneDeep(state.steps),\n                error: null,\n                pending: false\n            };\n        }\n        case WizardActionTypes.StepError: {\n            return {\n                ...state,\n                error: action.payload,\n                pending: false\n            };\n        }\n        case WizardActionTypes.StepPending: {\n            return {\n                ...state,\n                error: null,\n                pending: action.payload\n            };\n        }\n        case WizardActionTypes.GoOn: {\n            // Updates the step at the provided index.\n            state.steps[action.payload.index] = action.payload.step;\n            return {\n                ...state,\n                steps: cloneDeep(state.steps),\n                currentStep: action.payload.nextIndex,\n                error: null,\n                pending: false\n            };\n        }\n        case WizardActionTypes.Reset: {\n            return cloneDeep(initialWizardState);\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\nexport const getSteps: (state: WizardState) => Step[] = (state: WizardState) => state.steps;\n\nexport const getCurrentStep: (state: WizardState) => number = (state: WizardState) => state.currentStep;\n\nexport const getError: (state: WizardState) => string = (state: WizardState) => state.error;\n\nexport const getPending: (state: WizardState) => boolean = (state: WizardState) => state.pending;\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/app/app-config.ts\n            \n            \n                variable\n            \n            \n                appConfig\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/app-preloading-strategy.ts\n            \n            \n                class\n            \n            \n                AppPreloadingStrategy\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/demand/demand.service.ts\n            \n            \n                injectable\n            \n            \n                DemandService\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    src/app/home/home.component.ts\n            \n            \n                component\n            \n            \n                HomeComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/home/home.transition.ts\n            \n            \n                variable\n            \n            \n                HOME_TRANSITION\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/location/location.service.ts\n            \n            \n                injectable\n            \n            \n                LocationService\n            \n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                    src/app/network/graph.ts\n            \n            \n                class\n            \n            \n                Edge\n            \n            \n                14 %\n                (2/14)\n            \n        \n        \n            \n                \n                    src/app/network/graph.ts\n            \n            \n                class\n            \n            \n                Graph\n            \n            \n                25 %\n                (3/12)\n            \n        \n        \n            \n                \n                    src/app/network/graph.ts\n            \n            \n                class\n            \n            \n                Node\n            \n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                    src/app/network/graph.ts\n            \n            \n                class\n            \n            \n                Relation\n            \n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                    src/app/network/graph.ts\n            \n            \n                interface\n            \n            \n                Member\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                    src/app/network/graph.ts\n            \n            \n                interface\n            \n            \n                Tag\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    src/app/network/network.service.ts\n            \n            \n                injectable\n            \n            \n                NetworkService\n            \n            \n                61 %\n                (11/18)\n            \n        \n        \n            \n                \n                    src/app/network/weather/weather.service.ts\n            \n            \n                injectable\n            \n            \n                WeatherService\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    src/app/shared/can-deactivate-guard.service.ts\n            \n            \n                injectable\n            \n            \n                CanDeactivateGuard\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/shared/can-deactivate-guard.service.ts\n            \n            \n                interface\n            \n            \n                CanComponentDeactivate\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/shared/footer/footer.component.ts\n            \n            \n                component\n            \n            \n                FooterComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/shared/info-dialog.component.ts\n            \n            \n                component\n            \n            \n                InfoDialogComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/shared/material.module.ts\n            \n            \n                variable\n            \n            \n                materialModules\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/shared/message-archived.component.ts\n            \n            \n                component\n            \n            \n                MessageArchivedComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/shared/shared.module.ts\n            \n            \n                variable\n            \n            \n                sharedModules\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/simulation/clock.ts\n            \n            \n                class\n            \n            \n                Clock\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/simulation/simulation.service.ts\n            \n            \n                injectable\n            \n            \n                SimulationService\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    src/app/ui/map/google-map.component.ts\n            \n            \n                component\n            \n            \n                GoogleMapComponent\n            \n            \n                73 %\n                (11/15)\n            \n        \n        \n            \n                \n                    src/app/ui/map/map.component.ts\n            \n            \n                component\n            \n            \n                MapComponent\n            \n            \n                14 %\n                (3/21)\n            \n        \n        \n            \n                \n                    src/app/ui/map/map.service.ts\n            \n            \n                injectable\n            \n            \n                MapService\n            \n            \n                22 %\n                (4/18)\n            \n        \n        \n            \n                \n                    src/app/ui/map/map.style.ts\n            \n            \n                variable\n            \n            \n                MapStyle\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/actions/wizard.actions.ts\n            \n            \n                class\n            \n            \n                GoOn\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/ui/models/actions/wizard.actions.ts\n            \n            \n                class\n            \n            \n                Reset\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/ui/models/actions/wizard.actions.ts\n            \n            \n                class\n            \n            \n                StepChanged\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/ui/models/actions/wizard.actions.ts\n            \n            \n                class\n            \n            \n                StepError\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/ui/models/actions/wizard.actions.ts\n            \n            \n                class\n            \n            \n                StepPending\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/ui/models/base.component.ts\n            \n            \n                class\n            \n            \n                BaseComponent\n            \n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers.ts\n            \n            \n                interface\n            \n            \n                UiState\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers.ts\n            \n            \n                variable\n            \n            \n                currentStep\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers.ts\n            \n            \n                variable\n            \n            \n                error\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers.ts\n            \n            \n                variable\n            \n            \n                featureUiState\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers.ts\n            \n            \n                variable\n            \n            \n                pending\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers.ts\n            \n            \n                variable\n            \n            \n                reducers\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers.ts\n            \n            \n                variable\n            \n            \n                steps\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers.ts\n            \n            \n                variable\n            \n            \n                wizardState\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers/wizard.reducer.ts\n            \n            \n                interface\n            \n            \n                WizardState\n            \n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers/wizard.reducer.ts\n            \n            \n                function\n            \n            \n                wizardReducer\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers/wizard.reducer.ts\n            \n            \n                variable\n            \n            \n                getCurrentStep\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers/wizard.reducer.ts\n            \n            \n                variable\n            \n            \n                getError\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers/wizard.reducer.ts\n            \n            \n                variable\n            \n            \n                getPending\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers/wizard.reducer.ts\n            \n            \n                variable\n            \n            \n                getSteps\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers/wizard.reducer.ts\n            \n            \n                variable\n            \n            \n                initialWizardState\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/wizard.ts\n            \n            \n                interface\n            \n            \n                Step\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    src/app/ui/models/wizard.ts\n            \n            \n                variable\n            \n            \n                STEPS\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/ui/ui-config.ts\n            \n            \n                variable\n            \n            \n                uiConfig\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/ui/ui.component.ts\n            \n            \n                component\n            \n            \n                UiComponent\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                    src/app/ui/weather/weather.component.ts\n            \n            \n                component\n            \n            \n                WeatherComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts\n            \n            \n                component\n            \n            \n                ChangeOfConditionsComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts\n            \n            \n                component\n            \n            \n                EstimateOfDemandComponent\n            \n            \n                26 %\n                (4/15)\n            \n        \n        \n            \n                \n                    src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts\n            \n            \n                component\n            \n            \n                SearchForTheAreaComponent\n            \n            \n                18 %\n                (3/16)\n            \n        \n        \n            \n                \n                    src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts\n            \n            \n                component\n            \n            \n                SelectionOfTheAreaComponent\n            \n            \n                21 %\n                (3/14)\n            \n        \n        \n            \n                \n                    src/app/ui/wizard/simulation/simulation.component.ts\n            \n            \n                component\n            \n            \n                SimulationComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/ui/wizard/statistics/statistics.component.ts\n            \n            \n                component\n            \n            \n                StatisticsComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/ui/wizard/wizard.component.ts\n            \n            \n                component\n            \n            \n                WizardComponent\n            \n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                    src/app/ui/wizard/wizard.service.ts\n            \n            \n                injectable\n            \n            \n                WizardService\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 6.0.3\n        \n            @angular/common : 6.0.3\n        \n            @angular/compiler : 6.0.3\n        \n            @angular/core : 6.0.3\n        \n            @angular/forms : 6.0.3\n        \n            @angular/http : 6.0.3\n        \n            @angular/platform-browser : 6.0.3\n        \n            @angular/platform-browser-dynamic : 6.0.3\n        \n            @angular/router : 6.0.3\n        \n            @angular/material : 6.2.1\n        \n            @angular/cdk : 6.2.1\n        \n            @angular/flex-layout : 6.0.0-beta.15\n        \n            @ngrx/store : 6.0.1\n        \n            @ngrx/effects : 6.0.1\n        \n            @turf/area : 6.0.1\n        \n            @turf/helpers : 6.1.4\n        \n            ng-pick-datetime : 6.0.5\n        \n            clone-deep : 4.0.0\n        \n            mout : 1.1.0\n        \n            web-animations-js : 2.3.1\n        \n            hammerjs : 2.0.8\n        \n            animejs : 2.2.0\n        \n            qs : 6.5.2\n        \n            core-js : 2.5.7\n        \n            rxjs : 6.2.0\n        \n            zone.js : 0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            WizardActionTypes   (src/.../wizard.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/ui/models/actions/wizard.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        WizardActionTypes\n                    \n                \n                    \n                        \n                            ngrx: wizard Actions.\n\n                        \n                    \n                        \n                            \n                                 StepChanged\n                            \n                        \n                        \n                            \n                                Value: [Wizard] Step Changed\n                            \n                        \n                        \n                            \n                                 StepError\n                            \n                        \n                        \n                            \n                                Value: [Wizard] Step Error\n                            \n                        \n                        \n                            \n                                 StepPending\n                            \n                        \n                        \n                            \n                                Value: [Wizard] Step Pending\n                            \n                        \n                        \n                            \n                                 GoOn\n                            \n                        \n                        \n                            \n                                Value: [Wizard] Go On\n                            \n                        \n                        \n                            \n                                 Reset\n                            \n                        \n                        \n                            \n                                Value: [Wizard] Reset\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            wizardReducer   (src/.../wizard.reducer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/ui/models/reducers/wizard.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            wizardReducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nwizardReducer(state: undefined, action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n                            ngrx: wizard Reducer.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSTRADA\n\n\nSTRADA (Simulation of TRAffic DAta) is an urban traffic web simulator that uses data in real time.\n\n\nThis project is under active development for the dissertation of my bachelor's degree in computer engineering.\n\nDocumentation\nOfficial docs: STRADA documentation\nInstallation\nRequirements\n\nNode.js and npm\nAngular CLI\n\nPrerequisites\n\nAdd a Google Maps Platform API key in src/index.html\n\nnpm installRunning\nnpm startRunning the tests\nnpm testLicense\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Roberto Simonetti\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DemandModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LocationModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NetworkModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SimulationModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WeatherModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_DemandModule\n\n\n\ncluster_DemandModule_providers\n\n\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_providers\n\n\n\ncluster_NetworkModule\n\n\n\ncluster_NetworkModule_imports\n\n\n\ncluster_NetworkModule_providers\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SimulationModule\n\n\n\ncluster_SimulationModule_providers\n\n\n\ncluster_UiModule\n\n\n\ncluster_UiModule_declarations\n\n\n\ncluster_UiModule_imports\n\n\n\ncluster_UiModule_providers\n\n\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nDemandModule\n\nDemandModule\n\nAppModule -->\n\nDemandModule->AppModule\n\n\n\n\n\nLocationModule\n\nLocationModule\n\nAppModule -->\n\nLocationModule->AppModule\n\n\n\n\n\nNetworkModule\n\nNetworkModule\n\nAppModule -->\n\nNetworkModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nSharedModule->FooterComponent \n\n\n\n\n\nInfoDialogComponent \n\nInfoDialogComponent \n\nInfoDialogComponent  -->\n\nSharedModule->InfoDialogComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nMessageArchivedComponent \n\nMessageArchivedComponent \n\nMessageArchivedComponent  -->\n\nSharedModule->MessageArchivedComponent \n\n\n\n\n\nUiModule\n\nUiModule\n\nUiModule -->\n\nSharedModule->UiModule\n\n\n\n\n\nSimulationModule\n\nSimulationModule\n\nAppModule -->\n\nSimulationModule->AppModule\n\n\n\n\n\nDemandService\n\nDemandService\n\nDemandModule -->\n\nDemandService->DemandModule\n\n\n\n\n\nLocationService\n\nLocationService\n\nLocationModule -->\n\nLocationService->LocationModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nNetworkModule -->\n\nWeatherModule->NetworkModule\n\n\n\n\n\nNetworkService\n\nNetworkService\n\nNetworkModule -->\n\nNetworkService->NetworkModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nSharedModule -->\n\nFooterComponent->SharedModule\n\n\n\n\n\nInfoDialogComponent\n\nInfoDialogComponent\n\nSharedModule -->\n\nInfoDialogComponent->SharedModule\n\n\n\n\n\nMessageArchivedComponent\n\nMessageArchivedComponent\n\nSharedModule -->\n\nMessageArchivedComponent->SharedModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\nSimulationService\n\nSimulationService\n\nSimulationModule -->\n\nSimulationService->SimulationModule\n\n\n\n\n\nChangeOfConditionsComponent\n\nChangeOfConditionsComponent\n\nUiModule -->\n\nChangeOfConditionsComponent->UiModule\n\n\n\n\n\nEstimateOfDemandComponent\n\nEstimateOfDemandComponent\n\nUiModule -->\n\nEstimateOfDemandComponent->UiModule\n\n\n\n\n\nGoogleMapComponent\n\nGoogleMapComponent\n\nUiModule -->\n\nGoogleMapComponent->UiModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nUiModule -->\n\nMapComponent->UiModule\n\n\n\n\n\nSearchForTheAreaComponent\n\nSearchForTheAreaComponent\n\nUiModule -->\n\nSearchForTheAreaComponent->UiModule\n\n\n\n\n\nSelectionOfTheAreaComponent\n\nSelectionOfTheAreaComponent\n\nUiModule -->\n\nSelectionOfTheAreaComponent->UiModule\n\n\n\n\n\nSimulationComponent\n\nSimulationComponent\n\nUiModule -->\n\nSimulationComponent->UiModule\n\n\n\n\n\nStatisticsComponent\n\nStatisticsComponent\n\nUiModule -->\n\nStatisticsComponent->UiModule\n\n\n\n\n\nUiComponent\n\nUiComponent\n\nUiModule -->\n\nUiComponent->UiModule\n\n\n\n\n\nWeatherComponent\n\nWeatherComponent\n\nUiModule -->\n\nWeatherComponent->UiModule\n\n\n\n\n\nWizardComponent\n\nWizardComponent\n\nUiModule -->\n\nWizardComponent->UiModule\n\n\n\n\n\nUiRoutingModule\n\nUiRoutingModule\n\nUiModule -->\n\nUiRoutingModule->UiModule\n\n\n\n\n\nMapService\n\nMapService\n\nUiModule -->\n\nMapService->UiModule\n\n\n\n\n\nWizardService\n\nWizardService\n\nUiModule -->\n\nWizardService->UiModule\n\n\n\n\n\nWeatherService\n\nWeatherService\n\nWeatherModule -->\n\nWeatherService->WeatherModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            11 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        16 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        8 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        12 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        6 interfaces\n                    \n                \n            \n            \n                \n                    \n                        \n                        \n                            6 routes\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            WizardActions   (src/.../wizard.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/ui/models/actions/wizard.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        WizardActions\n                    \n                \n                \n                    \n                        WizardActions:     StepChanged | StepError | StepPending | GoOn | Reset\n\n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app-config.ts)\n                        \n                        \n                            currentStep   (src/.../reducers.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            error   (src/.../reducers.ts)\n                        \n                        \n                            featureUiState   (src/.../reducers.ts)\n                        \n                        \n                            getCurrentStep   (src/.../wizard.reducer.ts)\n                        \n                        \n                            getError   (src/.../wizard.reducer.ts)\n                        \n                        \n                            getPending   (src/.../wizard.reducer.ts)\n                        \n                        \n                            getSteps   (src/.../wizard.reducer.ts)\n                        \n                        \n                            HOME_TRANSITION   (src/.../home.transition.ts)\n                        \n                        \n                            initialWizardState   (src/.../wizard.reducer.ts)\n                        \n                        \n                            MapStyle   (src/.../map.style.ts)\n                        \n                        \n                            materialModules   (src/.../material.module.ts)\n                        \n                        \n                            pending   (src/.../reducers.ts)\n                        \n                        \n                            reducers   (src/.../reducers.ts)\n                        \n                        \n                            sharedModules   (src/.../shared.module.ts)\n                        \n                        \n                            steps   (src/.../reducers.ts)\n                        \n                        \n                            STEPS   (src/.../wizard.ts)\n                        \n                        \n                            uiConfig   (src/.../ui-config.ts)\n                        \n                        \n                            wizardState   (src/.../reducers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            appConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        appConfig:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    api: {\n        overpassApi: {\n            url: 'https://lz4.overpass-api.de/api/interpreter',\n            timeout: 5000,\n            /**\n             * The main key used for identifying any kind of road.\n             * https://wiki.openstreetmap.org/wiki/Key:highway\n             */\n            highways: ['motorway', 'trunk', 'primary', 'secondary', 'tertiary', 'unclassified', 'residential']\n        },\n        openWeatherMap: {\n            url: '',\n            apiKey: ''\n        }\n    }\n}\n                        \n                    \n\n                \n                    \n                        App configuration.\n\n                    \n                \n\n            \n        \n\n    src/app/ui/models/reducers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            currentStep\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentStep:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    wizardState,\n    fromWizard.getCurrentStep\n)\n                        \n                    \n\n                \n                    \n                        Exports the current step state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    wizardState,\n    fromWizard.getError\n)\n                        \n                    \n\n                \n                    \n                        Exports the error state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            featureUiState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        featureUiState:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createFeatureSelector('ui')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pending\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pending:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    wizardState,\n    fromWizard.getPending\n)\n                        \n                    \n\n                \n                    \n                        Exports the pending state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reducers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reducers:     ActionReducerMap\n\n                    \n                \n                    \n                        \n                            Type :     ActionReducerMap\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    wizard: fromWizard.wizardReducer\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            steps\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        steps:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    wizardState,\n    fromWizard.getSteps\n)\n                        \n                    \n\n                \n                    \n                        Exports the steps state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wizardState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        wizardState:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    featureUiState,\n    (state: UiState) => state.wizard\n)\n                        \n                    \n\n                \n                    \n                        Exports the wizard state.\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/ui/models/reducers/wizard.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getCurrentStep\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getCurrentStep:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : (state: WizardState) => state.currentStep\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getError:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : (state: WizardState) => state.error\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPending\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getPending:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : (state: WizardState) => state.pending\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSteps\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getSteps:     Step[]\n\n                    \n                \n                    \n                        \n                            Type :     Step[]\n\n                        \n                    \n                    \n                        \n                            Default value : (state: WizardState) => state.steps\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialWizardState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        initialWizardState:     WizardState\n\n                    \n                \n                    \n                        \n                            Type :     WizardState\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    steps: STEPS,\n    currentStep: 0,\n    error: null,\n    pending: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/home/home.transition.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            HOME_TRANSITION\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        HOME_TRANSITION:     AnimationTriggerMetadata\n\n                    \n                \n                    \n                        \n                            Type :     AnimationTriggerMetadata\n\n                        \n                    \n                    \n                        \n                            Default value : trigger('homeTransition', [\n    transition('void => *', [\n        style({\n            opacity: 0\n        }),\n        animate('500ms 0ms ease-in',\n            style({\n                opacity: 1\n            })\n        )\n    ])\n])\n                        \n                    \n\n\n            \n        \n\n    src/app/ui/map/map.style.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MapStyle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        MapStyle:     google.maps.MapTypeStyle[]\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.MapTypeStyle[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        \"featureType\": \"administrative\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road\",\n        \"elementType\": \"labels.icon\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"transit\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    }\n]\n                        \n                    \n\n                \n                    \n                        Styled Maps: https://developers.google.com/maps/documentation/javascript/styling\n\n                    \n                \n\n            \n        \n\n    src/app/shared/material.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            materialModules\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        materialModules:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    MatSidenavModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    MatMenuModule,\n    MatStepperModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule,\n    MatDialogModule\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/shared/shared.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            sharedModules\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sharedModules:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    CommonModule,\n    RouterModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    FlexLayoutModule\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/ui/models/wizard.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            STEPS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        STEPS:     Step[]\n\n                    \n                \n                    \n                        \n                            Type :     Step[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n                \n                    \n                        Initial steps.\n\n                    \n                \n\n            \n        \n\n    src/app/ui/ui-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            uiConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uiConfig:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    // Initial map.\n    map: {\n        center: { lat: 41.910943, lng: 12.476358 },\n        zoom: 4\n    },\n    /**\n     * Time of simulation limit in hours.\n     */\n    timeLimit: 24,\n    /**\n     * Area limit in hectares.\n     */\n    areaMaxLimit: 50,\n    areaMinLimit: 10,\n}\n                        \n                    \n\n                \n                    \n                        User interface configuration.\n\n                    \n                \n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
